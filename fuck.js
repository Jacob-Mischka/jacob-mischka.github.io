// ==UserScript==
// @name          Hitbox.tv Name Color
// @include       http://hitbox.tv/*
// @include       https://hitbox.tv/*
// @include       http://*.hitbox.tv/*
// @include       https://*.hitbox.tv/*
// @run-at        document-start
// ==/UserScript==

/*! hitbox-ui 17-02-2015 */
function ngGridLayoutPlugin() {
    var self = this;
    this.grid = null, this.scope = null, this.init = function(scope, grid, services) {
        self.domUtilityService = services.DomUtilityService, self.grid = grid, self.scope = scope
    }, this.updateGridLayout = function() {
        self && self.scope && (self.scope.$$phase ? self.domUtilityService.RebuildGrid(self.scope, self.grid) : self.scope.$apply(function() {
            self.domUtilityService.RebuildGrid(self.scope, self.grid)
        }))
    }
}

function updateViewers(viewers) {
    viewers > 0 && (angular.element($("mediaplayer")).isolateScope().updateViewers(viewers), angular.element($("#infobox-wrapper")).scope().updateViewers(viewers).$apply())
}

function popoutPlayer(channel) {
    var popout = window.open("/embed/" + channel + "?popout=true&autoplay=true", "", "toolbar=no,location=no,status=no,menubar=no,scrollbars=no,width=768,height=432,top=100,left=100");
    popout.onbeforeunload = function() {
        $f("player").play()
    }
}

function disableControls() {
    console.log("disableControls"), angular.element($("mediaplayer")).isolateScope().disableControls(), angular.element($("mediaplayer")).isolateScope().disableLoading().$apply()
}

function enableControls() {
    console.log("enableControls"), angular.element($("mediaplayer")).isolateScope().enableControls(), angular.element($("mediaplayer")).isolateScope().forcePlayForced().$apply()
}

function ads404() {
    console.log("adblock-detected"), angular.element($("#mediaplayer")).scope().adsOverlay().$apply()
}

function updateLiveStatus(isLive) {
        wasLive = isLive && !wasLive ? !0 : wasLive, angular.element($("#detailpage")).scope().media.media_is_live = isLive, wasLive && !isLive && (wasLive = !1, angular.element($("#detailpage")).scope().onMediaPoller(!0))
    }! function(global, factory) {
        "object" == typeof module && "object" == typeof module.exports ? module.exports = global.document ? factory(global, !0) : function(w) {
            if (!w.document) throw new Error("jQuery requires a window with a document");
            return factory(w)
        } : factory(global)
    }("undefined" != typeof window ? window : this, function(window, noGlobal) {
        function isArraylike(obj) {
            var length = obj.length,
                type = jQuery.type(obj);
            return "function" === type || jQuery.isWindow(obj) ? !1 : 1 === obj.nodeType && length ? !0 : "array" === type || 0 === length || "number" == typeof length && length > 0 && length - 1 in obj
        }

        function winnow(elements, qualifier, not) {
            if (jQuery.isFunction(qualifier)) return jQuery.grep(elements, function(elem, i) {
                return !!qualifier.call(elem, i, elem) !== not
            });
            if (qualifier.nodeType) return jQuery.grep(elements, function(elem) {
                return elem === qualifier !== not
            });
            if ("string" == typeof qualifier) {
                if (risSimple.test(qualifier)) return jQuery.filter(qualifier, elements, not);
                qualifier = jQuery.filter(qualifier, elements)
            }
            return jQuery.grep(elements, function(elem) {
                return jQuery.inArray(elem, qualifier) >= 0 !== not
            })
        }

        function sibling(cur, dir) {
            do cur = cur[dir]; while (cur && 1 !== cur.nodeType);
            return cur
        }

        function createOptions(options) {
            var object = optionsCache[options] = {};
            return jQuery.each(options.match(rnotwhite) || [], function(_, flag) {
                object[flag] = !0
            }), object
        }

        function detach() {
            document.addEventListener ? (document.removeEventListener("DOMContentLoaded", completed, !1), window.removeEventListener("load", completed, !1)) : (document.detachEvent("onreadystatechange", completed), window.detachEvent("onload", completed))
        }

        function completed() {
            (document.addEventListener || "load" === event.type || "complete" === document.readyState) && (detach(), jQuery.ready())
        }

        function dataAttr(elem, key, data) {
            if (void 0 === data && 1 === elem.nodeType) {
                var name = "data-" + key.replace(rmultiDash, "-$1").toLowerCase();
                if (data = elem.getAttribute(name), "string" == typeof data) {
                    try {
                        data = "true" === data ? !0 : "false" === data ? !1 : "null" === data ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data
                    } catch (e) {}
                    jQuery.data(elem, key, data)
                } else data = void 0
            }
            return data
        }

        function isEmptyDataObject(obj) {
            var name;
            for (name in obj)
                if (("data" !== name || !jQuery.isEmptyObject(obj[name])) && "toJSON" !== name) return !1;
            return !0
        }

        function internalData(elem, name, data, pvt) {
            if (jQuery.acceptData(elem)) {
                var ret, thisCache, internalKey = jQuery.expando,
                    isNode = elem.nodeType,
                    cache = isNode ? jQuery.cache : elem,
                    id = isNode ? elem[internalKey] : elem[internalKey] && internalKey;
                if (id && cache[id] && (pvt || cache[id].data) || void 0 !== data || "string" != typeof name) return id || (id = isNode ? elem[internalKey] = deletedIds.pop() || jQuery.guid++ : internalKey), cache[id] || (cache[id] = isNode ? {} : {
                    toJSON: jQuery.noop
                }), ("object" == typeof name || "function" == typeof name) && (pvt ? cache[id] = jQuery.extend(cache[id], name) : cache[id].data = jQuery.extend(cache[id].data, name)), thisCache = cache[id], pvt || (thisCache.data || (thisCache.data = {}), thisCache = thisCache.data), void 0 !== data && (thisCache[jQuery.camelCase(name)] = data), "string" == typeof name ? (ret = thisCache[name], null == ret && (ret = thisCache[jQuery.camelCase(name)])) : ret = thisCache, ret
            }
        }

        function internalRemoveData(elem, name, pvt) {
            if (jQuery.acceptData(elem)) {
                var thisCache, i, isNode = elem.nodeType,
                    cache = isNode ? jQuery.cache : elem,
                    id = isNode ? elem[jQuery.expando] : jQuery.expando;
                if (cache[id]) {
                    if (name && (thisCache = pvt ? cache[id] : cache[id].data)) {
                        jQuery.isArray(name) ? name = name.concat(jQuery.map(name, jQuery.camelCase)) : name in thisCache ? name = [name] : (name = jQuery.camelCase(name), name = name in thisCache ? [name] : name.split(" ")), i = name.length;
                        for (; i--;) delete thisCache[name[i]];
                        if (pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache)) return
                    }(pvt || (delete cache[id].data, isEmptyDataObject(cache[id]))) && (isNode ? jQuery.cleanData([elem], !0) : support.deleteExpando || cache != cache.window ? delete cache[id] : cache[id] = null)
                }
            }
        }

        function returnTrue() {
            return !0
        }

        function returnFalse() {
            return !1
        }

        function safeActiveElement() {
            try {
                return document.activeElement
            } catch (err) {}
        }

        function createSafeFragment(document) {
            var list = nodeNames.split("|"),
                safeFrag = document.createDocumentFragment();
            if (safeFrag.createElement)
                for (; list.length;) safeFrag.createElement(list.pop());
            return safeFrag
        }

        function getAll(context, tag) {
            var elems, elem, i = 0,
                found = typeof context.getElementsByTagName !== strundefined ? context.getElementsByTagName(tag || "*") : typeof context.querySelectorAll !== strundefined ? context.querySelectorAll(tag || "*") : void 0;
            if (!found)
                for (found = [], elems = context.childNodes || context; null != (elem = elems[i]); i++) !tag || jQuery.nodeName(elem, tag) ? found.push(elem) : jQuery.merge(found, getAll(elem, tag));
            return void 0 === tag || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], found) : found
        }

        function fixDefaultChecked(elem) {
            rcheckableType.test(elem.type) && (elem.defaultChecked = elem.checked)
        }

        function manipulationTarget(elem, content) {
            return jQuery.nodeName(elem, "table") && jQuery.nodeName(11 !== content.nodeType ? content : content.firstChild, "tr") ? elem.getElementsByTagName("tbody")[0] || elem.appendChild(elem.ownerDocument.createElement("tbody")) : elem
        }

        function disableScript(elem) {
            return elem.type = (null !== jQuery.find.attr(elem, "type")) + "/" + elem.type, elem
        }

        function restoreScript(elem) {
            var match = rscriptTypeMasked.exec(elem.type);
            return match ? elem.type = match[1] : elem.removeAttribute("type"), elem
        }

        function setGlobalEval(elems, refElements) {
            for (var elem, i = 0; null != (elem = elems[i]); i++) jQuery._data(elem, "globalEval", !refElements || jQuery._data(refElements[i], "globalEval"))
        }

        function cloneCopyEvent(src, dest) {
            if (1 === dest.nodeType && jQuery.hasData(src)) {
                var type, i, l, oldData = jQuery._data(src),
                    curData = jQuery._data(dest, oldData),
                    events = oldData.events;
                if (events) {
                    delete curData.handle, curData.events = {};
                    for (type in events)
                        for (i = 0, l = events[type].length; l > i; i++) jQuery.event.add(dest, type, events[type][i])
                }
                curData.data && (curData.data = jQuery.extend({}, curData.data))
            }
        }

        function fixCloneNodeIssues(src, dest) {
            var nodeName, e, data;
            if (1 === dest.nodeType) {
                if (nodeName = dest.nodeName.toLowerCase(), !support.noCloneEvent && dest[jQuery.expando]) {
                    data = jQuery._data(dest);
                    for (e in data.events) jQuery.removeEvent(dest, e, data.handle);
                    dest.removeAttribute(jQuery.expando)
                }
                "script" === nodeName && dest.text !== src.text ? (disableScript(dest).text = src.text, restoreScript(dest)) : "object" === nodeName ? (dest.parentNode && (dest.outerHTML = src.outerHTML), support.html5Clone && src.innerHTML && !jQuery.trim(dest.innerHTML) && (dest.innerHTML = src.innerHTML)) : "input" === nodeName && rcheckableType.test(src.type) ? (dest.defaultChecked = dest.checked = src.checked, dest.value !== src.value && (dest.value = src.value)) : "option" === nodeName ? dest.defaultSelected = dest.selected = src.defaultSelected : ("input" === nodeName || "textarea" === nodeName) && (dest.defaultValue = src.defaultValue)
            }
        }

        function actualDisplay(name, doc) {
            var style, elem = jQuery(doc.createElement(name)).appendTo(doc.body),
                display = window.getDefaultComputedStyle && (style = window.getDefaultComputedStyle(elem[0])) ? style.display : jQuery.css(elem[0], "display");
            return elem.detach(), display
        }

        function defaultDisplay(nodeName) {
            var doc = document,
                display = elemdisplay[nodeName];
            return display || (display = actualDisplay(nodeName, doc), "none" !== display && display || (iframe = (iframe || jQuery("<iframe frameborder='0' width='0' height='0'/>")).appendTo(doc.documentElement), doc = (iframe[0].contentWindow || iframe[0].contentDocument).document, doc.write(), doc.close(), display = actualDisplay(nodeName, doc), iframe.detach()), elemdisplay[nodeName] = display), display
        }

        function addGetHookIf(conditionFn, hookFn) {
            return {
                get: function() {
                    var condition = conditionFn();
                    if (null != condition) return condition ? void delete this.get : (this.get = hookFn).apply(this, arguments)
                }
            }
        }

        function vendorPropName(style, name) {
            if (name in style) return name;
            for (var capName = name.charAt(0).toUpperCase() + name.slice(1), origName = name, i = cssPrefixes.length; i--;)
                if (name = cssPrefixes[i] + capName, name in style) return name;
            return origName
        }

        function showHide(elements, show) {
            for (var display, elem, hidden, values = [], index = 0, length = elements.length; length > index; index++) elem = elements[index], elem.style && (values[index] = jQuery._data(elem, "olddisplay"), display = elem.style.display, show ? (values[index] || "none" !== display || (elem.style.display = ""), "" === elem.style.display && isHidden(elem) && (values[index] = jQuery._data(elem, "olddisplay", defaultDisplay(elem.nodeName)))) : (hidden = isHidden(elem), (display && "none" !== display || !hidden) && jQuery._data(elem, "olddisplay", hidden ? display : jQuery.css(elem, "display"))));
            for (index = 0; length > index; index++) elem = elements[index], elem.style && (show && "none" !== elem.style.display && "" !== elem.style.display || (elem.style.display = show ? values[index] || "" : "none"));
            return elements
        }

        function setPositiveNumber(elem, value, subtract) {
            var matches = rnumsplit.exec(value);
            return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || "px") : value
        }

        function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
            for (var i = extra === (isBorderBox ? "border" : "content") ? 4 : "width" === name ? 1 : 0, val = 0; 4 > i; i += 2) "margin" === extra && (val += jQuery.css(elem, extra + cssExpand[i], !0, styles)), isBorderBox ? ("content" === extra && (val -= jQuery.css(elem, "padding" + cssExpand[i], !0, styles)), "margin" !== extra && (val -= jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles))) : (val += jQuery.css(elem, "padding" + cssExpand[i], !0, styles), "padding" !== extra && (val += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)));
            return val
        }

        function getWidthOrHeight(elem, name, extra) {
            var valueIsBorderBox = !0,
                val = "width" === name ? elem.offsetWidth : elem.offsetHeight,
                styles = getStyles(elem),
                isBorderBox = support.boxSizing && "border-box" === jQuery.css(elem, "boxSizing", !1, styles);
            if (0 >= val || null == val) {
                if (val = curCSS(elem, name, styles), (0 > val || null == val) && (val = elem.style[name]), rnumnonpx.test(val)) return val;
                valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]), val = parseFloat(val) || 0
            }
            return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles) + "px"
        }

        function Tween(elem, options, prop, end, easing) {
            return new Tween.prototype.init(elem, options, prop, end, easing)
        }

        function createFxNow() {
            return setTimeout(function() {
                fxNow = void 0
            }), fxNow = jQuery.now()
        }

        function genFx(type, includeWidth) {
            var which, attrs = {
                    height: type
                },
                i = 0;
            for (includeWidth = includeWidth ? 1 : 0; 4 > i; i += 2 - includeWidth) which = cssExpand[i], attrs["margin" + which] = attrs["padding" + which] = type;
            return includeWidth && (attrs.opacity = attrs.width = type), attrs
        }

        function createTween(value, prop, animation) {
            for (var tween, collection = (tweeners[prop] || []).concat(tweeners["*"]), index = 0, length = collection.length; length > index; index++)
                if (tween = collection[index].call(animation, prop, value)) return tween
        }

        function defaultPrefilter(elem, props, opts) {
            var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay, anim = this,
                orig = {},
                style = elem.style,
                hidden = elem.nodeType && isHidden(elem),
                dataShow = jQuery._data(elem, "fxshow");
            opts.queue || (hooks = jQuery._queueHooks(elem, "fx"), null == hooks.unqueued && (hooks.unqueued = 0, oldfire = hooks.empty.fire, hooks.empty.fire = function() {
                hooks.unqueued || oldfire()
            }), hooks.unqueued++, anim.always(function() {
                anim.always(function() {
                    hooks.unqueued--, jQuery.queue(elem, "fx").length || hooks.empty.fire()
                })
            })), 1 === elem.nodeType && ("height" in props || "width" in props) && (opts.overflow = [style.overflow, style.overflowX, style.overflowY], display = jQuery.css(elem, "display"), checkDisplay = "none" === display ? jQuery._data(elem, "olddisplay") || defaultDisplay(elem.nodeName) : display, "inline" === checkDisplay && "none" === jQuery.css(elem, "float") && (support.inlineBlockNeedsLayout && "inline" !== defaultDisplay(elem.nodeName) ? style.zoom = 1 : style.display = "inline-block")), opts.overflow && (style.overflow = "hidden", support.shrinkWrapBlocks() || anim.always(function() {
                style.overflow = opts.overflow[0], style.overflowX = opts.overflow[1], style.overflowY = opts.overflow[2]
            }));
            for (prop in props)
                if (value = props[prop], rfxtypes.exec(value)) {
                    if (delete props[prop], toggle = toggle || "toggle" === value, value === (hidden ? "hide" : "show")) {
                        if ("show" !== value || !dataShow || void 0 === dataShow[prop]) continue;
                        hidden = !0
                    }
                    orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop)
                } else display = void 0;
            if (jQuery.isEmptyObject(orig)) "inline" === ("none" === display ? defaultDisplay(elem.nodeName) : display) && (style.display = display);
            else {
                dataShow ? "hidden" in dataShow && (hidden = dataShow.hidden) : dataShow = jQuery._data(elem, "fxshow", {}), toggle && (dataShow.hidden = !hidden), hidden ? jQuery(elem).show() : anim.done(function() {
                    jQuery(elem).hide()
                }), anim.done(function() {
                    var prop;
                    jQuery._removeData(elem, "fxshow");
                    for (prop in orig) jQuery.style(elem, prop, orig[prop])
                });
                for (prop in orig) tween = createTween(hidden ? dataShow[prop] : 0, prop, anim), prop in dataShow || (dataShow[prop] = tween.start, hidden && (tween.end = tween.start, tween.start = "width" === prop || "height" === prop ? 1 : 0))
            }
        }

        function propFilter(props, specialEasing) {
            var index, name, easing, value, hooks;
            for (index in props)
                if (name = jQuery.camelCase(index), easing = specialEasing[name], value = props[index], jQuery.isArray(value) && (easing = value[1], value = props[index] = value[0]), index !== name && (props[name] = value, delete props[index]), hooks = jQuery.cssHooks[name], hooks && "expand" in hooks) {
                    value = hooks.expand(value), delete props[name];
                    for (index in value) index in props || (props[index] = value[index], specialEasing[index] = easing)
                } else specialEasing[name] = easing
        }

        function Animation(elem, properties, options) {
            var result, stopped, index = 0,
                length = animationPrefilters.length,
                deferred = jQuery.Deferred().always(function() {
                    delete tick.elem
                }),
                tick = function() {
                    if (stopped) return !1;
                    for (var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length; length > index; index++) animation.tweens[index].run(percent);
                    return deferred.notifyWith(elem, [animation, percent, remaining]), 1 > percent && length ? remaining : (deferred.resolveWith(elem, [animation]), !1)
                },
                animation = deferred.promise({
                    elem: elem,
                    props: jQuery.extend({}, properties),
                    opts: jQuery.extend(!0, {
                        specialEasing: {}
                    }, options),
                    originalProperties: properties,
                    originalOptions: options,
                    startTime: fxNow || createFxNow(),
                    duration: options.duration,
                    tweens: [],
                    createTween: function(prop, end) {
                        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                        return animation.tweens.push(tween), tween
                    },
                    stop: function(gotoEnd) {
                        var index = 0,
                            length = gotoEnd ? animation.tweens.length : 0;
                        if (stopped) return this;
                        for (stopped = !0; length > index; index++) animation.tweens[index].run(1);
                        return gotoEnd ? deferred.resolveWith(elem, [animation, gotoEnd]) : deferred.rejectWith(elem, [animation, gotoEnd]), this
                    }
                }),
                props = animation.props;
            for (propFilter(props, animation.opts.specialEasing); length > index; index++)
                if (result = animationPrefilters[index].call(animation, elem, props, animation.opts)) return result;
            return jQuery.map(props, createTween, animation), jQuery.isFunction(animation.opts.start) && animation.opts.start.call(elem, animation), jQuery.fx.timer(jQuery.extend(tick, {
                elem: elem,
                anim: animation,
                queue: animation.opts.queue
            })), animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always)
        }

        function addToPrefiltersOrTransports(structure) {
            return function(dataTypeExpression, func) {
                "string" != typeof dataTypeExpression && (func = dataTypeExpression, dataTypeExpression = "*");
                var dataType, i = 0,
                    dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];
                if (jQuery.isFunction(func))
                    for (; dataType = dataTypes[i++];) "+" === dataType.charAt(0) ? (dataType = dataType.slice(1) || "*", (structure[dataType] = structure[dataType] || []).unshift(func)) : (structure[dataType] = structure[dataType] || []).push(func)
            }
        }

        function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
            function inspect(dataType) {
                var selected;
                return inspected[dataType] = !0, jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
                    var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
                    return "string" != typeof dataTypeOrTransport || seekingTransport || inspected[dataTypeOrTransport] ? seekingTransport ? !(selected = dataTypeOrTransport) : void 0 : (options.dataTypes.unshift(dataTypeOrTransport), inspect(dataTypeOrTransport), !1)
                }), selected
            }
            var inspected = {},
                seekingTransport = structure === transports;
            return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*")
        }

        function ajaxExtend(target, src) {
            var deep, key, flatOptions = jQuery.ajaxSettings.flatOptions || {};
            for (key in src) void 0 !== src[key] && ((flatOptions[key] ? target : deep || (deep = {}))[key] = src[key]);
            return deep && jQuery.extend(!0, target, deep), target
        }

        function ajaxHandleResponses(s, jqXHR, responses) {
            for (var firstDataType, ct, finalDataType, type, contents = s.contents, dataTypes = s.dataTypes;
                "*" === dataTypes[0];) dataTypes.shift(), void 0 === ct && (ct = s.mimeType || jqXHR.getResponseHeader("Content-Type"));
            if (ct)
                for (type in contents)
                    if (contents[type] && contents[type].test(ct)) {
                        dataTypes.unshift(type);
                        break
                    }
            if (dataTypes[0] in responses) finalDataType = dataTypes[0];
            else {
                for (type in responses) {
                    if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                        finalDataType = type;
                        break
                    }
                    firstDataType || (firstDataType = type)
                }
                finalDataType = finalDataType || firstDataType
            }
            return finalDataType ? (finalDataType !== dataTypes[0] && dataTypes.unshift(finalDataType), responses[finalDataType]) : void 0
        }

        function ajaxConvert(s, response, jqXHR, isSuccess) {
            var conv2, current, conv, tmp, prev, converters = {},
                dataTypes = s.dataTypes.slice();
            if (dataTypes[1])
                for (conv in s.converters) converters[conv.toLowerCase()] = s.converters[conv];
            for (current = dataTypes.shift(); current;)
                if (s.responseFields[current] && (jqXHR[s.responseFields[current]] = response), !prev && isSuccess && s.dataFilter && (response = s.dataFilter(response, s.dataType)), prev = current, current = dataTypes.shift())
                    if ("*" === current) current = prev;
                    else if ("*" !== prev && prev !== current) {
                if (conv = converters[prev + " " + current] || converters["* " + current], !conv)
                    for (conv2 in converters)
                        if (tmp = conv2.split(" "), tmp[1] === current && (conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]])) {
                            conv === !0 ? conv = converters[conv2] : converters[conv2] !== !0 && (current = tmp[0], dataTypes.unshift(tmp[1]));
                            break
                        }
                if (conv !== !0)
                    if (conv && s["throws"]) response = conv(response);
                    else try {
                        response = conv(response)
                    } catch (e) {
                        return {
                            state: "parsererror",
                            error: conv ? e : "No conversion from " + prev + " to " + current
                        }
                    }
            }
            return {
                state: "success",
                data: response
            }
        }

        function buildParams(prefix, obj, traditional, add) {
            var name;
            if (jQuery.isArray(obj)) jQuery.each(obj, function(i, v) {
                traditional || rbracket.test(prefix) ? add(prefix, v) : buildParams(prefix + "[" + ("object" == typeof v ? i : "") + "]", v, traditional, add)
            });
            else if (traditional || "object" !== jQuery.type(obj)) add(prefix, obj);
            else
                for (name in obj) buildParams(prefix + "[" + name + "]", obj[name], traditional, add)
        }

        function createStandardXHR() {
            try {
                return new window.XMLHttpRequest
            } catch (e) {}
        }

        function createActiveXHR() {
            try {
                return new window.ActiveXObject("Microsoft.XMLHTTP")
            } catch (e) {}
        }

        function getWindow(elem) {
            return jQuery.isWindow(elem) ? elem : 9 === elem.nodeType ? elem.defaultView || elem.parentWindow : !1
        }
        var deletedIds = [],
            slice = deletedIds.slice,
            concat = deletedIds.concat,
            push = deletedIds.push,
            indexOf = deletedIds.indexOf,
            class2type = {},
            toString = class2type.toString,
            hasOwn = class2type.hasOwnProperty,
            support = {},
            version = "1.11.1",
            jQuery = function(selector, context) {
                return new jQuery.fn.init(selector, context)
            },
            rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
            rmsPrefix = /^-ms-/,
            rdashAlpha = /-([\da-z])/gi,
            fcamelCase = function(all, letter) {
                return letter.toUpperCase()
            };
        jQuery.fn = jQuery.prototype = {
            jquery: version,
            constructor: jQuery,
            selector: "",
            length: 0,
            toArray: function() {
                return slice.call(this)
            },
            get: function(num) {
                return null != num ? 0 > num ? this[num + this.length] : this[num] : slice.call(this)
            },
            pushStack: function(elems) {
                var ret = jQuery.merge(this.constructor(), elems);
                return ret.prevObject = this, ret.context = this.context, ret
            },
            each: function(callback, args) {
                return jQuery.each(this, callback, args)
            },
            map: function(callback) {
                return this.pushStack(jQuery.map(this, function(elem, i) {
                    return callback.call(elem, i, elem)
                }))
            },
            slice: function() {
                return this.pushStack(slice.apply(this, arguments))
            },
            first: function() {
                return this.eq(0)
            },
            last: function() {
                return this.eq(-1)
            },
            eq: function(i) {
                var len = this.length,
                    j = +i + (0 > i ? len : 0);
                return this.pushStack(j >= 0 && len > j ? [this[j]] : [])
            },
            end: function() {
                return this.prevObject || this.constructor(null)
            },
            push: push,
            sort: deletedIds.sort,
            splice: deletedIds.splice
        }, jQuery.extend = jQuery.fn.extend = function() {
            var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},
                i = 1,
                length = arguments.length,
                deep = !1;
            for ("boolean" == typeof target && (deep = target, target = arguments[i] || {}, i++), "object" == typeof target || jQuery.isFunction(target) || (target = {}), i === length && (target = this, i--); length > i; i++)
                if (null != (options = arguments[i]))
                    for (name in options) src = target[name], copy = options[name], target !== copy && (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy))) ? (copyIsArray ? (copyIsArray = !1, clone = src && jQuery.isArray(src) ? src : []) : clone = src && jQuery.isPlainObject(src) ? src : {}, target[name] = jQuery.extend(deep, clone, copy)) : void 0 !== copy && (target[name] = copy));
            return target
        }, jQuery.extend({
            expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
            isReady: !0,
            error: function(msg) {
                throw new Error(msg)
            },
            noop: function() {},
            isFunction: function(obj) {
                return "function" === jQuery.type(obj)
            },
            isArray: Array.isArray || function(obj) {
                return "array" === jQuery.type(obj)
            },
            isWindow: function(obj) {
                return null != obj && obj == obj.window
            },
            isNumeric: function(obj) {
                return !jQuery.isArray(obj) && obj - parseFloat(obj) >= 0
            },
            isEmptyObject: function(obj) {
                var name;
                for (name in obj) return !1;
                return !0
            },
            isPlainObject: function(obj) {
                var key;
                if (!obj || "object" !== jQuery.type(obj) || obj.nodeType || jQuery.isWindow(obj)) return !1;
                try {
                    if (obj.constructor && !hasOwn.call(obj, "constructor") && !hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) return !1
                } catch (e) {
                    return !1
                }
                if (support.ownLast)
                    for (key in obj) return hasOwn.call(obj, key);
                for (key in obj);
                return void 0 === key || hasOwn.call(obj, key)
            },
            type: function(obj) {
                return null == obj ? obj + "" : "object" == typeof obj || "function" == typeof obj ? class2type[toString.call(obj)] || "object" : typeof obj
            },
            globalEval: function(data) {
                data && jQuery.trim(data) && (window.execScript || function(data) {
                    window.eval.call(window, data)
                })(data)
            },
            camelCase: function(string) {
                return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase)
            },
            nodeName: function(elem, name) {
                return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase()
            },
            each: function(obj, callback, args) {
                var value, i = 0,
                    length = obj.length,
                    isArray = isArraylike(obj);
                if (args) {
                    if (isArray)
                        for (; length > i && (value = callback.apply(obj[i], args), value !== !1); i++);
                    else
                        for (i in obj)
                            if (value = callback.apply(obj[i], args), value === !1) break
                } else if (isArray)
                    for (; length > i && (value = callback.call(obj[i], i, obj[i]), value !== !1); i++);
                else
                    for (i in obj)
                        if (value = callback.call(obj[i], i, obj[i]), value === !1) break; return obj
            },
            trim: function(text) {
                return null == text ? "" : (text + "").replace(rtrim, "")
            },
            makeArray: function(arr, results) {
                var ret = results || [];
                return null != arr && (isArraylike(Object(arr)) ? jQuery.merge(ret, "string" == typeof arr ? [arr] : arr) : push.call(ret, arr)), ret
            },
            inArray: function(elem, arr, i) {
                var len;
                if (arr) {
                    if (indexOf) return indexOf.call(arr, elem, i);
                    for (len = arr.length, i = i ? 0 > i ? Math.max(0, len + i) : i : 0; len > i; i++)
                        if (i in arr && arr[i] === elem) return i
                }
                return -1
            },
            merge: function(first, second) {
                for (var len = +second.length, j = 0, i = first.length; len > j;) first[i++] = second[j++];
                if (len !== len)
                    for (; void 0 !== second[j];) first[i++] = second[j++];
                return first.length = i, first
            },
            grep: function(elems, callback, invert) {
                for (var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert; length > i; i++) callbackInverse = !callback(elems[i], i), callbackInverse !== callbackExpect && matches.push(elems[i]);
                return matches
            },
            map: function(elems, callback, arg) {
                var value, i = 0,
                    length = elems.length,
                    isArray = isArraylike(elems),
                    ret = [];
                if (isArray)
                    for (; length > i; i++) value = callback(elems[i], i, arg), null != value && ret.push(value);
                else
                    for (i in elems) value = callback(elems[i], i, arg), null != value && ret.push(value);
                return concat.apply([], ret)
            },
            guid: 1,
            proxy: function(fn, context) {
                var args, proxy, tmp;
                return "string" == typeof context && (tmp = fn[context], context = fn, fn = tmp), jQuery.isFunction(fn) ? (args = slice.call(arguments, 2), proxy = function() {
                    return fn.apply(context || this, args.concat(slice.call(arguments)))
                }, proxy.guid = fn.guid = fn.guid || jQuery.guid++, proxy) : void 0
            },
            now: function() {
                return +new Date
            },
            support: support
        }), jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
            class2type["[object " + name + "]"] = name.toLowerCase()
        });
        var Sizzle = function(window) {
            function Sizzle(selector, context, results, seed) {
                var match, elem, m, nodeType, i, groups, old, nid, newContext, newSelector;
                if ((context ? context.ownerDocument || context : preferredDoc) !== document && setDocument(context), context = context || document, results = results || [], !selector || "string" != typeof selector) return results;
                if (1 !== (nodeType = context.nodeType) && 9 !== nodeType) return [];
                if (documentIsHTML && !seed) {
                    if (match = rquickExpr.exec(selector))
                        if (m = match[1]) {
                            if (9 === nodeType) {
                                if (elem = context.getElementById(m), !elem || !elem.parentNode) return results;
                                if (elem.id === m) return results.push(elem), results
                            } else if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) return results.push(elem), results
                        } else {
                            if (match[2]) return push.apply(results, context.getElementsByTagName(selector)), results;
                            if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) return push.apply(results, context.getElementsByClassName(m)), results
                        }
                    if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
                        if (nid = old = expando, newContext = context, newSelector = 9 === nodeType && selector, 1 === nodeType && "object" !== context.nodeName.toLowerCase()) {
                            for (groups = tokenize(selector), (old = context.getAttribute("id")) ? nid = old.replace(rescape, "\\$&") : context.setAttribute("id", nid), nid = "[id='" + nid + "'] ", i = groups.length; i--;) groups[i] = nid + toSelector(groups[i]);
                            newContext = rsibling.test(selector) && testContext(context.parentNode) || context, newSelector = groups.join(",")
                        }
                        if (newSelector) try {
                            return push.apply(results, newContext.querySelectorAll(newSelector)), results
                        } catch (qsaError) {} finally {
                            old || context.removeAttribute("id")
                        }
                    }
                }
                return select(selector.replace(rtrim, "$1"), context, results, seed)
            }

            function createCache() {
                function cache(key, value) {
                    return keys.push(key + " ") > Expr.cacheLength && delete cache[keys.shift()], cache[key + " "] = value
                }
                var keys = [];
                return cache
            }

            function markFunction(fn) {
                return fn[expando] = !0, fn
            }

            function assert(fn) {
                var div = document.createElement("div");
                try {
                    return !!fn(div)
                } catch (e) {
                    return !1
                } finally {
                    div.parentNode && div.parentNode.removeChild(div), div = null
                }
            }

            function addHandle(attrs, handler) {
                for (var arr = attrs.split("|"), i = attrs.length; i--;) Expr.attrHandle[arr[i]] = handler
            }

            function siblingCheck(a, b) {
                var cur = b && a,
                    diff = cur && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
                if (diff) return diff;
                if (cur)
                    for (; cur = cur.nextSibling;)
                        if (cur === b) return -1;
                return a ? 1 : -1
            }

            function createInputPseudo(type) {
                return function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return "input" === name && elem.type === type
                }
            }

            function createButtonPseudo(type) {
                return function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return ("input" === name || "button" === name) && elem.type === type
                }
            }

            function createPositionalPseudo(fn) {
                return markFunction(function(argument) {
                    return argument = +argument, markFunction(function(seed, matches) {
                        for (var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length; i--;) seed[j = matchIndexes[i]] && (seed[j] = !(matches[j] = seed[j]))
                    })
                })
            }

            function testContext(context) {
                return context && typeof context.getElementsByTagName !== strundefined && context
            }

            function setFilters() {}

            function toSelector(tokens) {
                for (var i = 0, len = tokens.length, selector = ""; len > i; i++) selector += tokens[i].value;
                return selector
            }

            function addCombinator(matcher, combinator, base) {
                var dir = combinator.dir,
                    checkNonElements = base && "parentNode" === dir,
                    doneName = done++;
                return combinator.first ? function(elem, context, xml) {
                    for (; elem = elem[dir];)
                        if (1 === elem.nodeType || checkNonElements) return matcher(elem, context, xml)
                } : function(elem, context, xml) {
                    var oldCache, outerCache, newCache = [dirruns, doneName];
                    if (xml) {
                        for (; elem = elem[dir];)
                            if ((1 === elem.nodeType || checkNonElements) && matcher(elem, context, xml)) return !0
                    } else
                        for (; elem = elem[dir];)
                            if (1 === elem.nodeType || checkNonElements) {
                                if (outerCache = elem[expando] || (elem[expando] = {}), (oldCache = outerCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) return newCache[2] = oldCache[2];
                                if (outerCache[dir] = newCache, newCache[2] = matcher(elem, context, xml)) return !0
                            }
                }
            }

            function elementMatcher(matchers) {
                return matchers.length > 1 ? function(elem, context, xml) {
                    for (var i = matchers.length; i--;)
                        if (!matchers[i](elem, context, xml)) return !1;
                    return !0
                } : matchers[0]
            }

            function multipleContexts(selector, contexts, results) {
                for (var i = 0, len = contexts.length; len > i; i++) Sizzle(selector, contexts[i], results);
                return results
            }

            function condense(unmatched, map, filter, context, xml) {
                for (var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = null != map; len > i; i++)(elem = unmatched[i]) && (!filter || filter(elem, context, xml)) && (newUnmatched.push(elem), mapped && map.push(i));
                return newUnmatched
            }

            function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
                return postFilter && !postFilter[expando] && (postFilter = setMatcher(postFilter)), postFinder && !postFinder[expando] && (postFinder = setMatcher(postFinder, postSelector)), markFunction(function(seed, results, context, xml) {
                    var temp, i, elem, preMap = [],
                        postMap = [],
                        preexisting = results.length,
                        elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
                        matcherIn = !preFilter || !seed && selector ? elems : condense(elems, preMap, preFilter, context, xml),
                        matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
                    if (matcher && matcher(matcherIn, matcherOut, context, xml), postFilter)
                        for (temp = condense(matcherOut, postMap), postFilter(temp, [], context, xml), i = temp.length; i--;)(elem = temp[i]) && (matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem));
                    if (seed) {
                        if (postFinder || preFilter) {
                            if (postFinder) {
                                for (temp = [], i = matcherOut.length; i--;)(elem = matcherOut[i]) && temp.push(matcherIn[i] = elem);
                                postFinder(null, matcherOut = [], temp, xml)
                            }
                            for (i = matcherOut.length; i--;)(elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1 && (seed[temp] = !(results[temp] = elem))
                        }
                    } else matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut), postFinder ? postFinder(null, results, matcherOut, xml) : push.apply(results, matcherOut)
                })
            }

            function matcherFromTokens(tokens) {
                for (var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {
                        return elem === checkContext
                    }, implicitRelative, !0), matchAnyContext = addCombinator(function(elem) {
                        return indexOf.call(checkContext, elem) > -1
                    }, implicitRelative, !0), matchers = [function(elem, context, xml) {
                        return !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml))
                    }]; len > i; i++)
                    if (matcher = Expr.relative[tokens[i].type]) matchers = [addCombinator(elementMatcher(matchers), matcher)];
                    else {
                        if (matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches), matcher[expando]) {
                            for (j = ++i; len > j && !Expr.relative[tokens[j].type]; j++);
                            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({
                                value: " " === tokens[i - 2].type ? "*" : ""
                            })).replace(rtrim, "$1"), matcher, j > i && matcherFromTokens(tokens.slice(i, j)), len > j && matcherFromTokens(tokens = tokens.slice(j)), len > j && toSelector(tokens))
                        }
                        matchers.push(matcher)
                    }
                return elementMatcher(matchers)
            }

            function matcherFromGroupMatchers(elementMatchers, setMatchers) {
                var bySet = setMatchers.length > 0,
                    byElement = elementMatchers.length > 0,
                    superMatcher = function(seed, context, xml, results, outermost) {
                        var elem, j, matcher, matchedCount = 0,
                            i = "0",
                            unmatched = seed && [],
                            setMatched = [],
                            contextBackup = outermostContext,
                            elems = seed || byElement && Expr.find.TAG("*", outermost),
                            dirrunsUnique = dirruns += null == contextBackup ? 1 : Math.random() || .1,
                            len = elems.length;
                        for (outermost && (outermostContext = context !== document && context); i !== len && null != (elem = elems[i]); i++) {
                            if (byElement && elem) {
                                for (j = 0; matcher = elementMatchers[j++];)
                                    if (matcher(elem, context, xml)) {
                                        results.push(elem);
                                        break
                                    }
                                outermost && (dirruns = dirrunsUnique)
                            }
                            bySet && ((elem = !matcher && elem) && matchedCount--, seed && unmatched.push(elem))
                        }
                        if (matchedCount += i, bySet && i !== matchedCount) {
                            for (j = 0; matcher = setMatchers[j++];) matcher(unmatched, setMatched, context, xml);
                            if (seed) {
                                if (matchedCount > 0)
                                    for (; i--;) unmatched[i] || setMatched[i] || (setMatched[i] = pop.call(results));
                                setMatched = condense(setMatched)
                            }
                            push.apply(results, setMatched), outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1 && Sizzle.uniqueSort(results)
                        }
                        return outermost && (dirruns = dirrunsUnique, outermostContext = contextBackup), unmatched
                    };
                return bySet ? markFunction(superMatcher) : superMatcher
            }
            var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = "sizzle" + -new Date,
                preferredDoc = window.document,
                dirruns = 0,
                done = 0,
                classCache = createCache(),
                tokenCache = createCache(),
                compilerCache = createCache(),
                sortOrder = function(a, b) {
                    return a === b && (hasDuplicate = !0), 0
                },
                strundefined = "undefined",
                MAX_NEGATIVE = 1 << 31,
                hasOwn = {}.hasOwnProperty,
                arr = [],
                pop = arr.pop,
                push_native = arr.push,
                push = arr.push,
                slice = arr.slice,
                indexOf = arr.indexOf || function(elem) {
                    for (var i = 0, len = this.length; len > i; i++)
                        if (this[i] === elem) return i;
                    return -1
                },
                booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                whitespace = "[\\x20\\t\\r\\n\\f]",
                characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
                identifier = characterEncoding.replace("w", "w#"),
                attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
                pseudos = ":(" + characterEncoding + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|.*)\\)|)",
                rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
                rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
                rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
                rattributeQuotes = new RegExp("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g"),
                rpseudo = new RegExp(pseudos),
                ridentifier = new RegExp("^" + identifier + "$"),
                matchExpr = {
                    ID: new RegExp("^#(" + characterEncoding + ")"),
                    CLASS: new RegExp("^\\.(" + characterEncoding + ")"),
                    TAG: new RegExp("^(" + characterEncoding.replace("w", "w*") + ")"),
                    ATTR: new RegExp("^" + attributes),
                    PSEUDO: new RegExp("^" + pseudos),
                    CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
                    bool: new RegExp("^(?:" + booleans + ")$", "i"),
                    needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
                },
                rinputs = /^(?:input|select|textarea|button)$/i,
                rheader = /^h\d$/i,
                rnative = /^[^{]+\{\s*\[native \w/,
                rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                rsibling = /[+~]/,
                rescape = /'|\\/g,
                runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
                funescape = function(_, escaped, escapedWhitespace) {
                    var high = "0x" + escaped - 65536;
                    return high !== high || escapedWhitespace ? escaped : 0 > high ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, 1023 & high | 56320)
                };
            try {
                push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes), arr[preferredDoc.childNodes.length].nodeType
            } catch (e) {
                push = {
                    apply: arr.length ? function(target, els) {
                        push_native.apply(target, slice.call(els))
                    } : function(target, els) {
                        for (var j = target.length, i = 0; target[j++] = els[i++];);
                        target.length = j - 1
                    }
                }
            }
            support = Sizzle.support = {}, isXML = Sizzle.isXML = function(elem) {
                var documentElement = elem && (elem.ownerDocument || elem).documentElement;
                return documentElement ? "HTML" !== documentElement.nodeName : !1
            }, setDocument = Sizzle.setDocument = function(node) {
                var hasCompare, doc = node ? node.ownerDocument || node : preferredDoc,
                    parent = doc.defaultView;
                return doc !== document && 9 === doc.nodeType && doc.documentElement ? (document = doc, docElem = doc.documentElement, documentIsHTML = !isXML(doc), parent && parent !== parent.top && (parent.addEventListener ? parent.addEventListener("unload", function() {
                    setDocument()
                }, !1) : parent.attachEvent && parent.attachEvent("onunload", function() {
                    setDocument()
                })), support.attributes = assert(function(div) {
                    return div.className = "i", !div.getAttribute("className")
                }), support.getElementsByTagName = assert(function(div) {
                    return div.appendChild(doc.createComment("")), !div.getElementsByTagName("*").length
                }), support.getElementsByClassName = rnative.test(doc.getElementsByClassName) && assert(function(div) {
                    return div.innerHTML = "<div class='a'></div><div class='a i'></div>", div.firstChild.className = "i", 2 === div.getElementsByClassName("i").length
                }), support.getById = assert(function(div) {
                    return docElem.appendChild(div).id = expando, !doc.getElementsByName || !doc.getElementsByName(expando).length
                }), support.getById ? (Expr.find.ID = function(id, context) {
                    if (typeof context.getElementById !== strundefined && documentIsHTML) {
                        var m = context.getElementById(id);
                        return m && m.parentNode ? [m] : []
                    }
                }, Expr.filter.ID = function(id) {
                    var attrId = id.replace(runescape, funescape);
                    return function(elem) {
                        return elem.getAttribute("id") === attrId
                    }
                }) : (delete Expr.find.ID, Expr.filter.ID = function(id) {
                    var attrId = id.replace(runescape, funescape);
                    return function(elem) {
                        var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
                        return node && node.value === attrId
                    }
                }), Expr.find.TAG = support.getElementsByTagName ? function(tag, context) {
                    return typeof context.getElementsByTagName !== strundefined ? context.getElementsByTagName(tag) : void 0
                } : function(tag, context) {
                    var elem, tmp = [],
                        i = 0,
                        results = context.getElementsByTagName(tag);
                    if ("*" === tag) {
                        for (; elem = results[i++];) 1 === elem.nodeType && tmp.push(elem);
                        return tmp
                    }
                    return results
                }, Expr.find.CLASS = support.getElementsByClassName && function(className, context) {
                    return typeof context.getElementsByClassName !== strundefined && documentIsHTML ? context.getElementsByClassName(className) : void 0
                }, rbuggyMatches = [], rbuggyQSA = [], (support.qsa = rnative.test(doc.querySelectorAll)) && (assert(function(div) {
                    div.innerHTML = "<select msallowclip=''><option selected=''></option></select>", div.querySelectorAll("[msallowclip^='']").length && rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")"), div.querySelectorAll("[selected]").length || rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")"), div.querySelectorAll(":checked").length || rbuggyQSA.push(":checked")
                }), assert(function(div) {
                    var input = doc.createElement("input");
                    input.setAttribute("type", "hidden"), div.appendChild(input).setAttribute("name", "D"), div.querySelectorAll("[name=d]").length && rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?="), div.querySelectorAll(":enabled").length || rbuggyQSA.push(":enabled", ":disabled"), div.querySelectorAll("*,:x"), rbuggyQSA.push(",.*:")
                })), (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) && assert(function(div) {
                    support.disconnectedMatch = matches.call(div, "div"), matches.call(div, "[s!='']:x"), rbuggyMatches.push("!=", pseudos)
                }), rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|")), rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|")), hasCompare = rnative.test(docElem.compareDocumentPosition), contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {
                    var adown = 9 === a.nodeType ? a.documentElement : a,
                        bup = b && b.parentNode;
                    return a === bup || !(!bup || 1 !== bup.nodeType || !(adown.contains ? adown.contains(bup) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(bup)))
                } : function(a, b) {
                    if (b)
                        for (; b = b.parentNode;)
                            if (b === a) return !0;
                    return !1
                }, sortOrder = hasCompare ? function(a, b) {
                    if (a === b) return hasDuplicate = !0, 0;
                    var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                    return compare ? compare : (compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & compare || !support.sortDetached && b.compareDocumentPosition(a) === compare ? a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ? -1 : b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ? 1 : sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0 : 4 & compare ? -1 : 1)
                } : function(a, b) {
                    if (a === b) return hasDuplicate = !0, 0;
                    var cur, i = 0,
                        aup = a.parentNode,
                        bup = b.parentNode,
                        ap = [a],
                        bp = [b];
                    if (!aup || !bup) return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;
                    if (aup === bup) return siblingCheck(a, b);
                    for (cur = a; cur = cur.parentNode;) ap.unshift(cur);
                    for (cur = b; cur = cur.parentNode;) bp.unshift(cur);
                    for (; ap[i] === bp[i];) i++;
                    return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0
                }, doc) : document
            }, Sizzle.matches = function(expr, elements) {
                return Sizzle(expr, null, null, elements)
            }, Sizzle.matchesSelector = function(elem, expr) {
                if ((elem.ownerDocument || elem) !== document && setDocument(elem), expr = expr.replace(rattributeQuotes, "='$1']"), !(!support.matchesSelector || !documentIsHTML || rbuggyMatches && rbuggyMatches.test(expr) || rbuggyQSA && rbuggyQSA.test(expr))) try {
                    var ret = matches.call(elem, expr);
                    if (ret || support.disconnectedMatch || elem.document && 11 !== elem.document.nodeType) return ret
                } catch (e) {}
                return Sizzle(expr, document, null, [elem]).length > 0
            }, Sizzle.contains = function(context, elem) {
                return (context.ownerDocument || context) !== document && setDocument(context), contains(context, elem)
            }, Sizzle.attr = function(elem, name) {
                (elem.ownerDocument || elem) !== document && setDocument(elem);
                var fn = Expr.attrHandle[name.toLowerCase()],
                    val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;
                return void 0 !== val ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null
            }, Sizzle.error = function(msg) {
                throw new Error("Syntax error, unrecognized expression: " + msg)
            }, Sizzle.uniqueSort = function(results) {
                var elem, duplicates = [],
                    j = 0,
                    i = 0;
                if (hasDuplicate = !support.detectDuplicates, sortInput = !support.sortStable && results.slice(0), results.sort(sortOrder), hasDuplicate) {
                    for (; elem = results[i++];) elem === results[i] && (j = duplicates.push(i));
                    for (; j--;) results.splice(duplicates[j], 1)
                }
                return sortInput = null, results
            }, getText = Sizzle.getText = function(elem) {
                var node, ret = "",
                    i = 0,
                    nodeType = elem.nodeType;
                if (nodeType) {
                    if (1 === nodeType || 9 === nodeType || 11 === nodeType) {
                        if ("string" == typeof elem.textContent) return elem.textContent;
                        for (elem = elem.firstChild; elem; elem = elem.nextSibling) ret += getText(elem)
                    } else if (3 === nodeType || 4 === nodeType) return elem.nodeValue
                } else
                    for (; node = elem[i++];) ret += getText(node);
                return ret
            }, Expr = Sizzle.selectors = {
                cacheLength: 50,
                createPseudo: markFunction,
                match: matchExpr,
                attrHandle: {},
                find: {},
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: !0
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: !0
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(match) {
                        return match[1] = match[1].replace(runescape, funescape), match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape), "~=" === match[2] && (match[3] = " " + match[3] + " "), match.slice(0, 4)
                    },
                    CHILD: function(match) {
                        return match[1] = match[1].toLowerCase(), "nth" === match[1].slice(0, 3) ? (match[3] || Sizzle.error(match[0]), match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * ("even" === match[3] || "odd" === match[3])), match[5] = +(match[7] + match[8] || "odd" === match[3])) : match[3] && Sizzle.error(match[0]), match
                    },
                    PSEUDO: function(match) {
                        var excess, unquoted = !match[6] && match[2];
                        return matchExpr.CHILD.test(match[0]) ? null : (match[3] ? match[2] = match[4] || match[5] || "" : unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, !0)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length) && (match[0] = match[0].slice(0, excess), match[2] = unquoted.slice(0, excess)), match.slice(0, 3))
                    }
                },
                filter: {
                    TAG: function(nodeNameSelector) {
                        var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                        return "*" === nodeNameSelector ? function() {
                            return !0
                        } : function(elem) {
                            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName
                        }
                    },
                    CLASS: function(className) {
                        var pattern = classCache[className + " "];
                        return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
                            return pattern.test("string" == typeof elem.className && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "")
                        })
                    },
                    ATTR: function(name, operator, check) {
                        return function(elem) {
                            var result = Sizzle.attr(elem, name);
                            return null == result ? "!=" === operator : operator ? (result += "", "=" === operator ? result === check : "!=" === operator ? result !== check : "^=" === operator ? check && 0 === result.indexOf(check) : "*=" === operator ? check && result.indexOf(check) > -1 : "$=" === operator ? check && result.slice(-check.length) === check : "~=" === operator ? (" " + result + " ").indexOf(check) > -1 : "|=" === operator ? result === check || result.slice(0, check.length + 1) === check + "-" : !1) : !0
                        }
                    },
                    CHILD: function(type, what, argument, first, last) {
                        var simple = "nth" !== type.slice(0, 3),
                            forward = "last" !== type.slice(-4),
                            ofType = "of-type" === what;
                        return 1 === first && 0 === last ? function(elem) {
                            return !!elem.parentNode
                        } : function(elem, context, xml) {
                            var cache, outerCache, node, diff, nodeIndex, start, dir = simple !== forward ? "nextSibling" : "previousSibling",
                                parent = elem.parentNode,
                                name = ofType && elem.nodeName.toLowerCase(),
                                useCache = !xml && !ofType;
                            if (parent) {
                                if (simple) {
                                    for (; dir;) {
                                        for (node = elem; node = node[dir];)
                                            if (ofType ? node.nodeName.toLowerCase() === name : 1 === node.nodeType) return !1;
                                        start = dir = "only" === type && !start && "nextSibling"
                                    }
                                    return !0
                                }
                                if (start = [forward ? parent.firstChild : parent.lastChild], forward && useCache) {
                                    for (outerCache = parent[expando] || (parent[expando] = {}), cache = outerCache[type] || [], nodeIndex = cache[0] === dirruns && cache[1], diff = cache[0] === dirruns && cache[2], node = nodeIndex && parent.childNodes[nodeIndex]; node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop();)
                                        if (1 === node.nodeType && ++diff && node === elem) {
                                            outerCache[type] = [dirruns, nodeIndex, diff];
                                            break
                                        }
                                } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) diff = cache[1];
                                else
                                    for (;
                                        (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) && ((ofType ? node.nodeName.toLowerCase() !== name : 1 !== node.nodeType) || !++diff || (useCache && ((node[expando] || (node[expando] = {}))[type] = [dirruns, diff]), node !== elem)););
                                return diff -= last, diff === first || diff % first === 0 && diff / first >= 0
                            }
                        }
                    },
                    PSEUDO: function(pseudo, argument) {
                        var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
                        return fn[expando] ? fn(argument) : fn.length > 1 ? (args = [pseudo, pseudo, "", argument], Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
                            for (var idx, matched = fn(seed, argument), i = matched.length; i--;) idx = indexOf.call(seed, matched[i]), seed[idx] = !(matches[idx] = matched[i])
                        }) : function(elem) {
                            return fn(elem, 0, args)
                        }) : fn
                    }
                },
                pseudos: {
                    not: markFunction(function(selector) {
                        var input = [],
                            results = [],
                            matcher = compile(selector.replace(rtrim, "$1"));
                        return matcher[expando] ? markFunction(function(seed, matches, context, xml) {
                            for (var elem, unmatched = matcher(seed, null, xml, []), i = seed.length; i--;)(elem = unmatched[i]) && (seed[i] = !(matches[i] = elem))
                        }) : function(elem, context, xml) {
                            return input[0] = elem, matcher(input, null, xml, results), !results.pop()
                        }
                    }),
                    has: markFunction(function(selector) {
                        return function(elem) {
                            return Sizzle(selector, elem).length > 0
                        }
                    }),
                    contains: markFunction(function(text) {
                        return function(elem) {
                            return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1
                        }
                    }),
                    lang: markFunction(function(lang) {
                        return ridentifier.test(lang || "") || Sizzle.error("unsupported lang: " + lang), lang = lang.replace(runescape, funescape).toLowerCase(),
                            function(elem) {
                                var elemLang;
                                do
                                    if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) return elemLang = elemLang.toLowerCase(), elemLang === lang || 0 === elemLang.indexOf(lang + "-");
                                while ((elem = elem.parentNode) && 1 === elem.nodeType);
                                return !1
                            }
                    }),
                    target: function(elem) {
                        var hash = window.location && window.location.hash;
                        return hash && hash.slice(1) === elem.id
                    },
                    root: function(elem) {
                        return elem === docElem
                    },
                    focus: function(elem) {
                        return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex)
                    },
                    enabled: function(elem) {
                        return elem.disabled === !1
                    },
                    disabled: function(elem) {
                        return elem.disabled === !0
                    },
                    checked: function(elem) {
                        var nodeName = elem.nodeName.toLowerCase();
                        return "input" === nodeName && !!elem.checked || "option" === nodeName && !!elem.selected
                    },
                    selected: function(elem) {
                        return elem.parentNode && elem.parentNode.selectedIndex, elem.selected === !0
                    },
                    empty: function(elem) {
                        for (elem = elem.firstChild; elem; elem = elem.nextSibling)
                            if (elem.nodeType < 6) return !1;
                        return !0
                    },
                    parent: function(elem) {
                        return !Expr.pseudos.empty(elem)
                    },
                    header: function(elem) {
                        return rheader.test(elem.nodeName)
                    },
                    input: function(elem) {
                        return rinputs.test(elem.nodeName)
                    },
                    button: function(elem) {
                        var name = elem.nodeName.toLowerCase();
                        return "input" === name && "button" === elem.type || "button" === name
                    },
                    text: function(elem) {
                        var attr;
                        return "input" === elem.nodeName.toLowerCase() && "text" === elem.type && (null == (attr = elem.getAttribute("type")) || "text" === attr.toLowerCase())
                    },
                    first: createPositionalPseudo(function() {
                        return [0]
                    }),
                    last: createPositionalPseudo(function(matchIndexes, length) {
                        return [length - 1]
                    }),
                    eq: createPositionalPseudo(function(matchIndexes, length, argument) {
                        return [0 > argument ? argument + length : argument]
                    }),
                    even: createPositionalPseudo(function(matchIndexes, length) {
                        for (var i = 0; length > i; i += 2) matchIndexes.push(i);
                        return matchIndexes
                    }),
                    odd: createPositionalPseudo(function(matchIndexes, length) {
                        for (var i = 1; length > i; i += 2) matchIndexes.push(i);
                        return matchIndexes
                    }),
                    lt: createPositionalPseudo(function(matchIndexes, length, argument) {
                        for (var i = 0 > argument ? argument + length : argument; --i >= 0;) matchIndexes.push(i);
                        return matchIndexes
                    }),
                    gt: createPositionalPseudo(function(matchIndexes, length, argument) {
                        for (var i = 0 > argument ? argument + length : argument; ++i < length;) matchIndexes.push(i);
                        return matchIndexes
                    })
                }
            }, Expr.pseudos.nth = Expr.pseudos.eq;
            for (i in {
                    radio: !0,
                    checkbox: !0,
                    file: !0,
                    password: !0,
                    image: !0
                }) Expr.pseudos[i] = createInputPseudo(i);
            for (i in {
                    submit: !0,
                    reset: !0
                }) Expr.pseudos[i] = createButtonPseudo(i);
            return setFilters.prototype = Expr.filters = Expr.pseudos, Expr.setFilters = new setFilters, tokenize = Sizzle.tokenize = function(selector, parseOnly) {
                var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
                if (cached) return parseOnly ? 0 : cached.slice(0);
                for (soFar = selector, groups = [], preFilters = Expr.preFilter; soFar;) {
                    (!matched || (match = rcomma.exec(soFar))) && (match && (soFar = soFar.slice(match[0].length) || soFar), groups.push(tokens = [])), matched = !1, (match = rcombinators.exec(soFar)) && (matched = match.shift(), tokens.push({
                        value: matched,
                        type: match[0].replace(rtrim, " ")
                    }), soFar = soFar.slice(matched.length));
                    for (type in Expr.filter) !(match = matchExpr[type].exec(soFar)) || preFilters[type] && !(match = preFilters[type](match)) || (matched = match.shift(), tokens.push({
                        value: matched,
                        type: type,
                        matches: match
                    }), soFar = soFar.slice(matched.length));
                    if (!matched) break
                }
                return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0)
            }, compile = Sizzle.compile = function(selector, match) {
                var i, setMatchers = [],
                    elementMatchers = [],
                    cached = compilerCache[selector + " "];
                if (!cached) {
                    for (match || (match = tokenize(selector)), i = match.length; i--;) cached = matcherFromTokens(match[i]), cached[expando] ? setMatchers.push(cached) : elementMatchers.push(cached);
                    cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)), cached.selector = selector
                }
                return cached
            }, select = Sizzle.select = function(selector, context, results, seed) {
                var i, tokens, token, type, find, compiled = "function" == typeof selector && selector,
                    match = !seed && tokenize(selector = compiled.selector || selector);
                if (results = results || [], 1 === match.length) {
                    if (tokens = match[0] = match[0].slice(0), tokens.length > 2 && "ID" === (token = tokens[0]).type && support.getById && 9 === context.nodeType && documentIsHTML && Expr.relative[tokens[1].type]) {
                        if (context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0], !context) return results;
                        compiled && (context = context.parentNode), selector = selector.slice(tokens.shift().value.length)
                    }
                    for (i = matchExpr.needsContext.test(selector) ? 0 : tokens.length; i-- && (token = tokens[i], !Expr.relative[type = token.type]);)
                        if ((find = Expr.find[type]) && (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {
                            if (tokens.splice(i, 1), selector = seed.length && toSelector(tokens), !selector) return push.apply(results, seed), results;
                            break
                        }
                }
                return (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, rsibling.test(selector) && testContext(context.parentNode) || context), results
            }, support.sortStable = expando.split("").sort(sortOrder).join("") === expando, support.detectDuplicates = !!hasDuplicate, setDocument(), support.sortDetached = assert(function(div1) {
                return 1 & div1.compareDocumentPosition(document.createElement("div"))
            }), assert(function(div) {
                return div.innerHTML = "<a href='#'></a>", "#" === div.firstChild.getAttribute("href")
            }) || addHandle("type|href|height|width", function(elem, name, isXML) {
                return isXML ? void 0 : elem.getAttribute(name, "type" === name.toLowerCase() ? 1 : 2)
            }), support.attributes && assert(function(div) {
                return div.innerHTML = "<input/>", div.firstChild.setAttribute("value", ""), "" === div.firstChild.getAttribute("value")
            }) || addHandle("value", function(elem, name, isXML) {
                return isXML || "input" !== elem.nodeName.toLowerCase() ? void 0 : elem.defaultValue
            }), assert(function(div) {
                return null == div.getAttribute("disabled")
            }) || addHandle(booleans, function(elem, name, isXML) {
                var val;
                return isXML ? void 0 : elem[name] === !0 ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null
            }), Sizzle
        }(window);
        jQuery.find = Sizzle, jQuery.expr = Sizzle.selectors, jQuery.expr[":"] = jQuery.expr.pseudos, jQuery.unique = Sizzle.uniqueSort, jQuery.text = Sizzle.getText, jQuery.isXMLDoc = Sizzle.isXML, jQuery.contains = Sizzle.contains;
        var rneedsContext = jQuery.expr.match.needsContext,
            rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
            risSimple = /^.[^:#\[\.,]*$/;
        jQuery.filter = function(expr, elems, not) {
            var elem = elems[0];
            return not && (expr = ":not(" + expr + ")"), 1 === elems.length && 1 === elem.nodeType ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {
                return 1 === elem.nodeType
            }))
        }, jQuery.fn.extend({
            find: function(selector) {
                var i, ret = [],
                    self = this,
                    len = self.length;
                if ("string" != typeof selector) return this.pushStack(jQuery(selector).filter(function() {
                    for (i = 0; len > i; i++)
                        if (jQuery.contains(self[i], this)) return !0
                }));
                for (i = 0; len > i; i++) jQuery.find(selector, self[i], ret);
                return ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret), ret.selector = this.selector ? this.selector + " " + selector : selector, ret
            },
            filter: function(selector) {
                return this.pushStack(winnow(this, selector || [], !1))
            },
            not: function(selector) {
                return this.pushStack(winnow(this, selector || [], !0))
            },
            is: function(selector) {
                return !!winnow(this, "string" == typeof selector && rneedsContext.test(selector) ? jQuery(selector) : selector || [], !1).length
            }
        });
        var rootjQuery, document = window.document,
            rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
            init = jQuery.fn.init = function(selector, context) {
                var match, elem;
                if (!selector) return this;
                if ("string" == typeof selector) {
                    if (match = "<" === selector.charAt(0) && ">" === selector.charAt(selector.length - 1) && selector.length >= 3 ? [null, selector, null] : rquickExpr.exec(selector), !match || !match[1] && context) return !context || context.jquery ? (context || rootjQuery).find(selector) : this.constructor(context).find(selector);
                    if (match[1]) {
                        if (context = context instanceof jQuery ? context[0] : context, jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, !0)), rsingleTag.test(match[1]) && jQuery.isPlainObject(context))
                            for (match in context) jQuery.isFunction(this[match]) ? this[match](context[match]) : this.attr(match, context[match]);
                        return this
                    }
                    if (elem = document.getElementById(match[2]), elem && elem.parentNode) {
                        if (elem.id !== match[2]) return rootjQuery.find(selector);
                        this.length = 1, this[0] = elem
                    }
                    return this.context = document, this.selector = selector, this
                }
                return selector.nodeType ? (this.context = this[0] = selector, this.length = 1, this) : jQuery.isFunction(selector) ? "undefined" != typeof rootjQuery.ready ? rootjQuery.ready(selector) : selector(jQuery) : (void 0 !== selector.selector && (this.selector = selector.selector, this.context = selector.context), jQuery.makeArray(selector, this))
            };
        init.prototype = jQuery.fn, rootjQuery = jQuery(document);
        var rparentsprev = /^(?:parents|prev(?:Until|All))/,
            guaranteedUnique = {
                children: !0,
                contents: !0,
                next: !0,
                prev: !0
            };
        jQuery.extend({
            dir: function(elem, dir, until) {
                for (var matched = [], cur = elem[dir]; cur && 9 !== cur.nodeType && (void 0 === until || 1 !== cur.nodeType || !jQuery(cur).is(until));) 1 === cur.nodeType && matched.push(cur), cur = cur[dir];
                return matched
            },
            sibling: function(n, elem) {
                for (var r = []; n; n = n.nextSibling) 1 === n.nodeType && n !== elem && r.push(n);
                return r
            }
        }), jQuery.fn.extend({
            has: function(target) {
                var i, targets = jQuery(target, this),
                    len = targets.length;
                return this.filter(function() {
                    for (i = 0; len > i; i++)
                        if (jQuery.contains(this, targets[i])) return !0
                })
            },
            closest: function(selectors, context) {
                for (var cur, i = 0, l = this.length, matched = [], pos = rneedsContext.test(selectors) || "string" != typeof selectors ? jQuery(selectors, context || this.context) : 0; l > i; i++)
                    for (cur = this[i]; cur && cur !== context; cur = cur.parentNode)
                        if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : 1 === cur.nodeType && jQuery.find.matchesSelector(cur, selectors))) {
                            matched.push(cur);
                            break
                        }
                return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched)
            },
            index: function(elem) {
                return elem ? "string" == typeof elem ? jQuery.inArray(this[0], jQuery(elem)) : jQuery.inArray(elem.jquery ? elem[0] : elem, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
            },
            add: function(selector, context) {
                return this.pushStack(jQuery.unique(jQuery.merge(this.get(), jQuery(selector, context))))
            },
            addBack: function(selector) {
                return this.add(null == selector ? this.prevObject : this.prevObject.filter(selector))
            }
        }), jQuery.each({
            parent: function(elem) {
                var parent = elem.parentNode;
                return parent && 11 !== parent.nodeType ? parent : null
            },
            parents: function(elem) {
                return jQuery.dir(elem, "parentNode")
            },
            parentsUntil: function(elem, i, until) {
                return jQuery.dir(elem, "parentNode", until)
            },
            next: function(elem) {
                return sibling(elem, "nextSibling")
            },
            prev: function(elem) {
                return sibling(elem, "previousSibling")
            },
            nextAll: function(elem) {
                return jQuery.dir(elem, "nextSibling")
            },
            prevAll: function(elem) {
                return jQuery.dir(elem, "previousSibling")
            },
            nextUntil: function(elem, i, until) {
                return jQuery.dir(elem, "nextSibling", until)
            },
            prevUntil: function(elem, i, until) {
                return jQuery.dir(elem, "previousSibling", until)
            },
            siblings: function(elem) {
                return jQuery.sibling((elem.parentNode || {}).firstChild, elem)
            },
            children: function(elem) {
                return jQuery.sibling(elem.firstChild)
            },
            contents: function(elem) {
                return jQuery.nodeName(elem, "iframe") ? elem.contentDocument || elem.contentWindow.document : jQuery.merge([], elem.childNodes)
            }
        }, function(name, fn) {
            jQuery.fn[name] = function(until, selector) {
                var ret = jQuery.map(this, fn, until);
                return "Until" !== name.slice(-5) && (selector = until), selector && "string" == typeof selector && (ret = jQuery.filter(selector, ret)), this.length > 1 && (guaranteedUnique[name] || (ret = jQuery.unique(ret)), rparentsprev.test(name) && (ret = ret.reverse())), this.pushStack(ret)
            }
        });
        var rnotwhite = /\S+/g,
            optionsCache = {};
        jQuery.Callbacks = function(options) {
            options = "string" == typeof options ? optionsCache[options] || createOptions(options) : jQuery.extend({}, options);
            var firing, memory, fired, firingLength, firingIndex, firingStart, list = [],
                stack = !options.once && [],
                fire = function(data) {
                    for (memory = options.memory && data, fired = !0, firingIndex = firingStart || 0, firingStart = 0, firingLength = list.length, firing = !0; list && firingLength > firingIndex; firingIndex++)
                        if (list[firingIndex].apply(data[0], data[1]) === !1 && options.stopOnFalse) {
                            memory = !1;
                            break
                        }
                    firing = !1, list && (stack ? stack.length && fire(stack.shift()) : memory ? list = [] : self.disable())
                },
                self = {
                    add: function() {
                        if (list) {
                            var start = list.length;
                            ! function add(args) {
                                jQuery.each(args, function(_, arg) {
                                    var type = jQuery.type(arg);
                                    "function" === type ? options.unique && self.has(arg) || list.push(arg) : arg && arg.length && "string" !== type && add(arg)
                                })
                            }(arguments), firing ? firingLength = list.length : memory && (firingStart = start, fire(memory))
                        }
                        return this
                    },
                    remove: function() {
                        return list && jQuery.each(arguments, function(_, arg) {
                            for (var index;
                                (index = jQuery.inArray(arg, list, index)) > -1;) list.splice(index, 1), firing && (firingLength >= index && firingLength--, firingIndex >= index && firingIndex--)
                        }), this
                    },
                    has: function(fn) {
                        return fn ? jQuery.inArray(fn, list) > -1 : !(!list || !list.length)
                    },
                    empty: function() {
                        return list = [], firingLength = 0, this
                    },
                    disable: function() {
                        return list = stack = memory = void 0, this
                    },
                    disabled: function() {
                        return !list
                    },
                    lock: function() {
                        return stack = void 0, memory || self.disable(), this
                    },
                    locked: function() {
                        return !stack
                    },
                    fireWith: function(context, args) {
                        return !list || fired && !stack || (args = args || [], args = [context, args.slice ? args.slice() : args], firing ? stack.push(args) : fire(args)), this
                    },
                    fire: function() {
                        return self.fireWith(this, arguments), this
                    },
                    fired: function() {
                        return !!fired
                    }
                };
            return self
        }, jQuery.extend({
            Deferred: function(func) {
                var tuples = [
                        ["resolve", "done", jQuery.Callbacks("once memory"), "resolved"],
                        ["reject", "fail", jQuery.Callbacks("once memory"), "rejected"],
                        ["notify", "progress", jQuery.Callbacks("memory")]
                    ],
                    state = "pending",
                    promise = {
                        state: function() {
                            return state
                        },
                        always: function() {
                            return deferred.done(arguments).fail(arguments), this
                        },
                        then: function() {
                            var fns = arguments;
                            return jQuery.Deferred(function(newDefer) {
                                jQuery.each(tuples, function(i, tuple) {
                                    var fn = jQuery.isFunction(fns[i]) && fns[i];
                                    deferred[tuple[1]](function() {
                                        var returned = fn && fn.apply(this, arguments);
                                        returned && jQuery.isFunction(returned.promise) ? returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify) : newDefer[tuple[0] + "With"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments)
                                    })
                                }), fns = null
                            }).promise()
                        },
                        promise: function(obj) {
                            return null != obj ? jQuery.extend(obj, promise) : promise
                        }
                    },
                    deferred = {};
                return promise.pipe = promise.then, jQuery.each(tuples, function(i, tuple) {
                    var list = tuple[2],
                        stateString = tuple[3];
                    promise[tuple[1]] = list.add, stateString && list.add(function() {
                        state = stateString
                    }, tuples[1 ^ i][2].disable, tuples[2][2].lock), deferred[tuple[0]] = function() {
                        return deferred[tuple[0] + "With"](this === deferred ? promise : this, arguments), this
                    }, deferred[tuple[0] + "With"] = list.fireWith
                }), promise.promise(deferred), func && func.call(deferred, deferred), deferred
            },
            when: function(subordinate) {
                var progressValues, progressContexts, resolveContexts, i = 0,
                    resolveValues = slice.call(arguments),
                    length = resolveValues.length,
                    remaining = 1 !== length || subordinate && jQuery.isFunction(subordinate.promise) ? length : 0,
                    deferred = 1 === remaining ? subordinate : jQuery.Deferred(),
                    updateFunc = function(i, contexts, values) {
                        return function(value) {
                            contexts[i] = this, values[i] = arguments.length > 1 ? slice.call(arguments) : value, values === progressValues ? deferred.notifyWith(contexts, values) : --remaining || deferred.resolveWith(contexts, values)
                        }
                    };
                if (length > 1)
                    for (progressValues = new Array(length), progressContexts = new Array(length), resolveContexts = new Array(length); length > i; i++) resolveValues[i] && jQuery.isFunction(resolveValues[i].promise) ? resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues)) : --remaining;
                return remaining || deferred.resolveWith(resolveContexts, resolveValues), deferred.promise()
            }
        });
        var readyList;
        jQuery.fn.ready = function(fn) {
            return jQuery.ready.promise().done(fn), this
        }, jQuery.extend({
            isReady: !1,
            readyWait: 1,
            holdReady: function(hold) {
                hold ? jQuery.readyWait++ : jQuery.ready(!0)
            },
            ready: function(wait) {
                if (wait === !0 ? !--jQuery.readyWait : !jQuery.isReady) {
                    if (!document.body) return setTimeout(jQuery.ready);
                    jQuery.isReady = !0, wait !== !0 && --jQuery.readyWait > 0 || (readyList.resolveWith(document, [jQuery]), jQuery.fn.triggerHandler && (jQuery(document).triggerHandler("ready"), jQuery(document).off("ready")))
                }
            }
        }), jQuery.ready.promise = function(obj) {
            if (!readyList)
                if (readyList = jQuery.Deferred(), "complete" === document.readyState) setTimeout(jQuery.ready);
                else if (document.addEventListener) document.addEventListener("DOMContentLoaded", completed, !1), window.addEventListener("load", completed, !1);
            else {
                document.attachEvent("onreadystatechange", completed), window.attachEvent("onload", completed);
                var top = !1;
                try {
                    top = null == window.frameElement && document.documentElement
                } catch (e) {}
                top && top.doScroll && ! function doScrollCheck() {
                    if (!jQuery.isReady) {
                        try {
                            top.doScroll("left")
                        } catch (e) {
                            return setTimeout(doScrollCheck, 50)
                        }
                        detach(), jQuery.ready()
                    }
                }()
            }
            return readyList.promise(obj)
        };
        var i, strundefined = "undefined";
        for (i in jQuery(support)) break;
        support.ownLast = "0" !== i, support.inlineBlockNeedsLayout = !1, jQuery(function() {
                var val, div, body, container;
                body = document.getElementsByTagName("body")[0], body && body.style && (div = document.createElement("div"), container = document.createElement("div"), container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", body.appendChild(container).appendChild(div), typeof div.style.zoom !== strundefined && (div.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1", support.inlineBlockNeedsLayout = val = 3 === div.offsetWidth, val && (body.style.zoom = 1)), body.removeChild(container))
            }),
            function() {
                var div = document.createElement("div");
                if (null == support.deleteExpando) {
                    support.deleteExpando = !0;
                    try {
                        delete div.test
                    } catch (e) {
                        support.deleteExpando = !1
                    }
                }
                div = null
            }(), jQuery.acceptData = function(elem) {
                var noData = jQuery.noData[(elem.nodeName + " ").toLowerCase()],
                    nodeType = +elem.nodeType || 1;
                return 1 !== nodeType && 9 !== nodeType ? !1 : !noData || noData !== !0 && elem.getAttribute("classid") === noData
            };
        var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
            rmultiDash = /([A-Z])/g;
        jQuery.extend({
            cache: {},
            noData: {
                "applet ": !0,
                "embed ": !0,
                "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
            },
            hasData: function(elem) {
                return elem = elem.nodeType ? jQuery.cache[elem[jQuery.expando]] : elem[jQuery.expando], !!elem && !isEmptyDataObject(elem)
            },
            data: function(elem, name, data) {
                return internalData(elem, name, data)
            },
            removeData: function(elem, name) {
                return internalRemoveData(elem, name)
            },
            _data: function(elem, name, data) {
                return internalData(elem, name, data, !0)
            },
            _removeData: function(elem, name) {
                return internalRemoveData(elem, name, !0)
            }
        }), jQuery.fn.extend({
            data: function(key, value) {
                var i, name, data, elem = this[0],
                    attrs = elem && elem.attributes;
                if (void 0 === key) {
                    if (this.length && (data = jQuery.data(elem), 1 === elem.nodeType && !jQuery._data(elem, "parsedAttrs"))) {
                        for (i = attrs.length; i--;) attrs[i] && (name = attrs[i].name, 0 === name.indexOf("data-") && (name = jQuery.camelCase(name.slice(5)), dataAttr(elem, name, data[name])));
                        jQuery._data(elem, "parsedAttrs", !0)
                    }
                    return data
                }
                return "object" == typeof key ? this.each(function() {
                    jQuery.data(this, key)
                }) : arguments.length > 1 ? this.each(function() {
                    jQuery.data(this, key, value)
                }) : elem ? dataAttr(elem, key, jQuery.data(elem, key)) : void 0
            },
            removeData: function(key) {
                return this.each(function() {
                    jQuery.removeData(this, key)
                })
            }
        }), jQuery.extend({
            queue: function(elem, type, data) {
                var queue;
                return elem ? (type = (type || "fx") + "queue", queue = jQuery._data(elem, type), data && (!queue || jQuery.isArray(data) ? queue = jQuery._data(elem, type, jQuery.makeArray(data)) : queue.push(data)), queue || []) : void 0
            },
            dequeue: function(elem, type) {
                type = type || "fx";
                var queue = jQuery.queue(elem, type),
                    startLength = queue.length,
                    fn = queue.shift(),
                    hooks = jQuery._queueHooks(elem, type),
                    next = function() {
                        jQuery.dequeue(elem, type)
                    };
                "inprogress" === fn && (fn = queue.shift(), startLength--), fn && ("fx" === type && queue.unshift("inprogress"), delete hooks.stop, fn.call(elem, next, hooks)), !startLength && hooks && hooks.empty.fire()
            },
            _queueHooks: function(elem, type) {
                var key = type + "queueHooks";
                return jQuery._data(elem, key) || jQuery._data(elem, key, {
                    empty: jQuery.Callbacks("once memory").add(function() {
                        jQuery._removeData(elem, type + "queue"), jQuery._removeData(elem, key)
                    })
                })
            }
        }), jQuery.fn.extend({
            queue: function(type, data) {
                var setter = 2;
                return "string" != typeof type && (data = type, type = "fx", setter--), arguments.length < setter ? jQuery.queue(this[0], type) : void 0 === data ? this : this.each(function() {
                    var queue = jQuery.queue(this, type, data);
                    jQuery._queueHooks(this, type), "fx" === type && "inprogress" !== queue[0] && jQuery.dequeue(this, type)
                })
            },
            dequeue: function(type) {
                return this.each(function() {
                    jQuery.dequeue(this, type)
                })
            },
            clearQueue: function(type) {
                return this.queue(type || "fx", [])
            },
            promise: function(type, obj) {
                var tmp, count = 1,
                    defer = jQuery.Deferred(),
                    elements = this,
                    i = this.length,
                    resolve = function() {
                        --count || defer.resolveWith(elements, [elements])
                    };
                for ("string" != typeof type && (obj = type, type = void 0), type = type || "fx"; i--;) tmp = jQuery._data(elements[i], type + "queueHooks"), tmp && tmp.empty && (count++, tmp.empty.add(resolve));
                return resolve(), defer.promise(obj)
            }
        });
        var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
            cssExpand = ["Top", "Right", "Bottom", "Left"],
            isHidden = function(elem, el) {
                return elem = el || elem, "none" === jQuery.css(elem, "display") || !jQuery.contains(elem.ownerDocument, elem)
            },
            access = jQuery.access = function(elems, fn, key, value, chainable, emptyGet, raw) {
                var i = 0,
                    length = elems.length,
                    bulk = null == key;
                if ("object" === jQuery.type(key)) {
                    chainable = !0;
                    for (i in key) jQuery.access(elems, fn, i, key[i], !0, emptyGet, raw)
                } else if (void 0 !== value && (chainable = !0, jQuery.isFunction(value) || (raw = !0), bulk && (raw ? (fn.call(elems, value), fn = null) : (bulk = fn, fn = function(elem, key, value) {
                        return bulk.call(jQuery(elem), value)
                    })), fn))
                    for (; length > i; i++) fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
                return chainable ? elems : bulk ? fn.call(elems) : length ? fn(elems[0], key) : emptyGet
            },
            rcheckableType = /^(?:checkbox|radio)$/i;
        ! function() {
            var input = document.createElement("input"),
                div = document.createElement("div"),
                fragment = document.createDocumentFragment();
            if (div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", support.leadingWhitespace = 3 === div.firstChild.nodeType, support.tbody = !div.getElementsByTagName("tbody").length, support.htmlSerialize = !!div.getElementsByTagName("link").length, support.html5Clone = "<:nav></:nav>" !== document.createElement("nav").cloneNode(!0).outerHTML, input.type = "checkbox", input.checked = !0, fragment.appendChild(input), support.appendChecked = input.checked, div.innerHTML = "<textarea>x</textarea>", support.noCloneChecked = !!div.cloneNode(!0).lastChild.defaultValue, fragment.appendChild(div), div.innerHTML = "<input type='radio' checked='checked' name='t'/>", support.checkClone = div.cloneNode(!0).cloneNode(!0).lastChild.checked, support.noCloneEvent = !0, div.attachEvent && (div.attachEvent("onclick", function() {
                    support.noCloneEvent = !1
                }), div.cloneNode(!0).click()), null == support.deleteExpando) {
                support.deleteExpando = !0;
                try {
                    delete div.test
                } catch (e) {
                    support.deleteExpando = !1
                }
            }
        }(),
        function() {
            var i, eventName, div = document.createElement("div");
            for (i in {
                    submit: !0,
                    change: !0,
                    focusin: !0
                }) eventName = "on" + i, (support[i + "Bubbles"] = eventName in window) || (div.setAttribute(eventName, "t"), support[i + "Bubbles"] = div.attributes[eventName].expando === !1);
            div = null
        }();
        var rformElems = /^(?:input|select|textarea)$/i,
            rkeyEvent = /^key/,
            rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
            rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
            rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;
        jQuery.event = {
            global: {},
            add: function(elem, types, handler, data, selector) {
                var tmp, events, t, handleObjIn, special, eventHandle, handleObj, handlers, type, namespaces, origType, elemData = jQuery._data(elem);
                if (elemData) {
                    for (handler.handler && (handleObjIn = handler, handler = handleObjIn.handler, selector = handleObjIn.selector), handler.guid || (handler.guid = jQuery.guid++), (events = elemData.events) || (events = elemData.events = {}), (eventHandle = elemData.handle) || (eventHandle = elemData.handle = function(e) {
                            return typeof jQuery === strundefined || e && jQuery.event.triggered === e.type ? void 0 : jQuery.event.dispatch.apply(eventHandle.elem, arguments)
                        }, eventHandle.elem = elem), types = (types || "").match(rnotwhite) || [""], t = types.length; t--;) tmp = rtypenamespace.exec(types[t]) || [], type = origType = tmp[1], namespaces = (tmp[2] || "").split(".").sort(), type && (special = jQuery.event.special[type] || {}, type = (selector ? special.delegateType : special.bindType) || type, special = jQuery.event.special[type] || {}, handleObj = jQuery.extend({
                        type: type,
                        origType: origType,
                        data: data,
                        handler: handler,
                        guid: handler.guid,
                        selector: selector,
                        needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                        namespace: namespaces.join(".")
                    }, handleObjIn), (handlers = events[type]) || (handlers = events[type] = [], handlers.delegateCount = 0, special.setup && special.setup.call(elem, data, namespaces, eventHandle) !== !1 || (elem.addEventListener ? elem.addEventListener(type, eventHandle, !1) : elem.attachEvent && elem.attachEvent("on" + type, eventHandle))), special.add && (special.add.call(elem, handleObj), handleObj.handler.guid || (handleObj.handler.guid = handler.guid)), selector ? handlers.splice(handlers.delegateCount++, 0, handleObj) : handlers.push(handleObj), jQuery.event.global[type] = !0);
                    elem = null
                }
            },
            remove: function(elem, types, handler, selector, mappedTypes) {
                var j, handleObj, tmp, origCount, t, events, special, handlers, type, namespaces, origType, elemData = jQuery.hasData(elem) && jQuery._data(elem);
                if (elemData && (events = elemData.events)) {
                    for (types = (types || "").match(rnotwhite) || [""], t = types.length; t--;)
                        if (tmp = rtypenamespace.exec(types[t]) || [], type = origType = tmp[1], namespaces = (tmp[2] || "").split(".").sort(), type) {
                            for (special = jQuery.event.special[type] || {}, type = (selector ? special.delegateType : special.bindType) || type, handlers = events[type] || [], tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"), origCount = j = handlers.length; j--;) handleObj = handlers[j], !mappedTypes && origType !== handleObj.origType || handler && handler.guid !== handleObj.guid || tmp && !tmp.test(handleObj.namespace) || selector && selector !== handleObj.selector && ("**" !== selector || !handleObj.selector) || (handlers.splice(j, 1), handleObj.selector && handlers.delegateCount--, special.remove && special.remove.call(elem, handleObj));
                            origCount && !handlers.length && (special.teardown && special.teardown.call(elem, namespaces, elemData.handle) !== !1 || jQuery.removeEvent(elem, type, elemData.handle), delete events[type])
                        } else
                            for (type in events) jQuery.event.remove(elem, type + types[t], handler, selector, !0);
                    jQuery.isEmptyObject(events) && (delete elemData.handle, jQuery._removeData(elem, "events"))
                }
            },
            trigger: function(event, data, elem, onlyHandlers) {
                var handle, ontype, cur, bubbleType, special, tmp, i, eventPath = [elem || document],
                    type = hasOwn.call(event, "type") ? event.type : event,
                    namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
                if (cur = tmp = elem = elem || document, 3 !== elem.nodeType && 8 !== elem.nodeType && !rfocusMorph.test(type + jQuery.event.triggered) && (type.indexOf(".") >= 0 && (namespaces = type.split("."), type = namespaces.shift(), namespaces.sort()), ontype = type.indexOf(":") < 0 && "on" + type, event = event[jQuery.expando] ? event : new jQuery.Event(type, "object" == typeof event && event), event.isTrigger = onlyHandlers ? 2 : 3, event.namespace = namespaces.join("."), event.namespace_re = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, event.result = void 0, event.target || (event.target = elem), data = null == data ? [event] : jQuery.makeArray(data, [event]), special = jQuery.event.special[type] || {}, onlyHandlers || !special.trigger || special.trigger.apply(elem, data) !== !1)) {
                    if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
                        for (bubbleType = special.delegateType || type, rfocusMorph.test(bubbleType + type) || (cur = cur.parentNode); cur; cur = cur.parentNode) eventPath.push(cur), tmp = cur;
                        tmp === (elem.ownerDocument || document) && eventPath.push(tmp.defaultView || tmp.parentWindow || window)
                    }
                    for (i = 0;
                        (cur = eventPath[i++]) && !event.isPropagationStopped();) event.type = i > 1 ? bubbleType : special.bindType || type, handle = (jQuery._data(cur, "events") || {})[event.type] && jQuery._data(cur, "handle"), handle && handle.apply(cur, data), handle = ontype && cur[ontype], handle && handle.apply && jQuery.acceptData(cur) && (event.result = handle.apply(cur, data), event.result === !1 && event.preventDefault());
                    if (event.type = type, !onlyHandlers && !event.isDefaultPrevented() && (!special._default || special._default.apply(eventPath.pop(), data) === !1) && jQuery.acceptData(elem) && ontype && elem[type] && !jQuery.isWindow(elem)) {
                        tmp = elem[ontype], tmp && (elem[ontype] = null), jQuery.event.triggered = type;
                        try {
                            elem[type]()
                        } catch (e) {}
                        jQuery.event.triggered = void 0, tmp && (elem[ontype] = tmp)
                    }
                    return event.result
                }
            },
            dispatch: function(event) {
                event = jQuery.event.fix(event);
                var i, ret, handleObj, matched, j, handlerQueue = [],
                    args = slice.call(arguments),
                    handlers = (jQuery._data(this, "events") || {})[event.type] || [],
                    special = jQuery.event.special[event.type] || {};
                if (args[0] = event, event.delegateTarget = this, !special.preDispatch || special.preDispatch.call(this, event) !== !1) {
                    for (handlerQueue = jQuery.event.handlers.call(this, event, handlers), i = 0;
                        (matched = handlerQueue[i++]) && !event.isPropagationStopped();)
                        for (event.currentTarget = matched.elem, j = 0;
                            (handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped();)(!event.namespace_re || event.namespace_re.test(handleObj.namespace)) && (event.handleObj = handleObj, event.data = handleObj.data, ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args), void 0 !== ret && (event.result = ret) === !1 && (event.preventDefault(), event.stopPropagation()));
                    return special.postDispatch && special.postDispatch.call(this, event), event.result
                }
            },
            handlers: function(event, handlers) {
                var sel, handleObj, matches, i, handlerQueue = [],
                    delegateCount = handlers.delegateCount,
                    cur = event.target;
                if (delegateCount && cur.nodeType && (!event.button || "click" !== event.type))
                    for (; cur != this; cur = cur.parentNode || this)
                        if (1 === cur.nodeType && (cur.disabled !== !0 || "click" !== event.type)) {
                            for (matches = [], i = 0; delegateCount > i; i++) handleObj = handlers[i], sel = handleObj.selector + " ", void 0 === matches[sel] && (matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [cur]).length), matches[sel] && matches.push(handleObj);
                            matches.length && handlerQueue.push({
                                elem: cur,
                                handlers: matches
                            })
                        }
                return delegateCount < handlers.length && handlerQueue.push({
                    elem: this,
                    handlers: handlers.slice(delegateCount)
                }), handlerQueue
            },
            fix: function(event) {
                if (event[jQuery.expando]) return event;
                var i, prop, copy, type = event.type,
                    originalEvent = event,
                    fixHook = this.fixHooks[type];
                for (fixHook || (this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {}), copy = fixHook.props ? this.props.concat(fixHook.props) : this.props, event = new jQuery.Event(originalEvent), i = copy.length; i--;) prop = copy[i], event[prop] = originalEvent[prop];
                return event.target || (event.target = originalEvent.srcElement || document), 3 === event.target.nodeType && (event.target = event.target.parentNode), event.metaKey = !!event.metaKey, fixHook.filter ? fixHook.filter(event, originalEvent) : event
            },
            props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
            fixHooks: {},
            keyHooks: {
                props: "char charCode key keyCode".split(" "),
                filter: function(event, original) {
                    return null == event.which && (event.which = null != original.charCode ? original.charCode : original.keyCode), event
                }
            },
            mouseHooks: {
                props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
                filter: function(event, original) {
                    var body, eventDoc, doc, button = original.button,
                        fromElement = original.fromElement;
                    return null == event.pageX && null != original.clientX && (eventDoc = event.target.ownerDocument || document, doc = eventDoc.documentElement, body = eventDoc.body, event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0), event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)), !event.relatedTarget && fromElement && (event.relatedTarget = fromElement === event.target ? original.toElement : fromElement), event.which || void 0 === button || (event.which = 1 & button ? 1 : 2 & button ? 3 : 4 & button ? 2 : 0), event
                }
            },
            special: {
                load: {
                    noBubble: !0
                },
                focus: {
                    trigger: function() {
                        if (this !== safeActiveElement() && this.focus) try {
                            return this.focus(), !1
                        } catch (e) {}
                    },
                    delegateType: "focusin"
                },
                blur: {
                    trigger: function() {
                        return this === safeActiveElement() && this.blur ? (this.blur(), !1) : void 0
                    },
                    delegateType: "focusout"
                },
                click: {
                    trigger: function() {
                        return jQuery.nodeName(this, "input") && "checkbox" === this.type && this.click ? (this.click(), !1) : void 0
                    },
                    _default: function(event) {
                        return jQuery.nodeName(event.target, "a")
                    }
                },
                beforeunload: {
                    postDispatch: function(event) {
                        void 0 !== event.result && event.originalEvent && (event.originalEvent.returnValue = event.result)
                    }
                }
            },
            simulate: function(type, elem, event, bubble) {
                var e = jQuery.extend(new jQuery.Event, event, {
                    type: type,
                    isSimulated: !0,
                    originalEvent: {}
                });
                bubble ? jQuery.event.trigger(e, null, elem) : jQuery.event.dispatch.call(elem, e), e.isDefaultPrevented() && event.preventDefault()
            }
        }, jQuery.removeEvent = document.removeEventListener ? function(elem, type, handle) {
            elem.removeEventListener && elem.removeEventListener(type, handle, !1)
        } : function(elem, type, handle) {
            var name = "on" + type;
            elem.detachEvent && (typeof elem[name] === strundefined && (elem[name] = null), elem.detachEvent(name, handle))
        }, jQuery.Event = function(src, props) {
            return this instanceof jQuery.Event ? (src && src.type ? (this.originalEvent = src, this.type = src.type, this.isDefaultPrevented = src.defaultPrevented || void 0 === src.defaultPrevented && src.returnValue === !1 ? returnTrue : returnFalse) : this.type = src, props && jQuery.extend(this, props), this.timeStamp = src && src.timeStamp || jQuery.now(), void(this[jQuery.expando] = !0)) : new jQuery.Event(src, props)
        }, jQuery.Event.prototype = {
            isDefaultPrevented: returnFalse,
            isPropagationStopped: returnFalse,
            isImmediatePropagationStopped: returnFalse,
            preventDefault: function() {
                var e = this.originalEvent;
                this.isDefaultPrevented = returnTrue, e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1)
            },
            stopPropagation: function() {
                var e = this.originalEvent;
                this.isPropagationStopped = returnTrue, e && (e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0)
            },
            stopImmediatePropagation: function() {
                var e = this.originalEvent;
                this.isImmediatePropagationStopped = returnTrue, e && e.stopImmediatePropagation && e.stopImmediatePropagation(), this.stopPropagation()
            }
        }, jQuery.each({
            mouseenter: "mouseover",
            mouseleave: "mouseout",
            pointerenter: "pointerover",
            pointerleave: "pointerout"
        }, function(orig, fix) {
            jQuery.event.special[orig] = {
                delegateType: fix,
                bindType: fix,
                handle: function(event) {
                    var ret, target = this,
                        related = event.relatedTarget,
                        handleObj = event.handleObj;
                    return (!related || related !== target && !jQuery.contains(target, related)) && (event.type = handleObj.origType, ret = handleObj.handler.apply(this, arguments), event.type = fix), ret
                }
            }
        }), support.submitBubbles || (jQuery.event.special.submit = {
            setup: function() {
                return jQuery.nodeName(this, "form") ? !1 : void jQuery.event.add(this, "click._submit keypress._submit", function(e) {
                    var elem = e.target,
                        form = jQuery.nodeName(elem, "input") || jQuery.nodeName(elem, "button") ? elem.form : void 0;
                    form && !jQuery._data(form, "submitBubbles") && (jQuery.event.add(form, "submit._submit", function(event) {
                        event._submit_bubble = !0
                    }), jQuery._data(form, "submitBubbles", !0))
                })
            },
            postDispatch: function(event) {
                event._submit_bubble && (delete event._submit_bubble, this.parentNode && !event.isTrigger && jQuery.event.simulate("submit", this.parentNode, event, !0))
            },
            teardown: function() {
                return jQuery.nodeName(this, "form") ? !1 : void jQuery.event.remove(this, "._submit")
            }
        }), support.changeBubbles || (jQuery.event.special.change = {
            setup: function() {
                return rformElems.test(this.nodeName) ? (("checkbox" === this.type || "radio" === this.type) && (jQuery.event.add(this, "propertychange._change", function(event) {
                    "checked" === event.originalEvent.propertyName && (this._just_changed = !0)
                }), jQuery.event.add(this, "click._change", function(event) {
                    this._just_changed && !event.isTrigger && (this._just_changed = !1), jQuery.event.simulate("change", this, event, !0)
                })), !1) : void jQuery.event.add(this, "beforeactivate._change", function(e) {
                    var elem = e.target;
                    rformElems.test(elem.nodeName) && !jQuery._data(elem, "changeBubbles") && (jQuery.event.add(elem, "change._change", function(event) {
                        !this.parentNode || event.isSimulated || event.isTrigger || jQuery.event.simulate("change", this.parentNode, event, !0)
                    }), jQuery._data(elem, "changeBubbles", !0))
                })
            },
            handle: function(event) {
                var elem = event.target;
                return this !== elem || event.isSimulated || event.isTrigger || "radio" !== elem.type && "checkbox" !== elem.type ? event.handleObj.handler.apply(this, arguments) : void 0
            },
            teardown: function() {
                return jQuery.event.remove(this, "._change"), !rformElems.test(this.nodeName)
            }
        }), support.focusinBubbles || jQuery.each({
            focus: "focusin",
            blur: "focusout"
        }, function(orig, fix) {
            var handler = function(event) {
                jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), !0)
            };
            jQuery.event.special[fix] = {
                setup: function() {
                    var doc = this.ownerDocument || this,
                        attaches = jQuery._data(doc, fix);
                    attaches || doc.addEventListener(orig, handler, !0), jQuery._data(doc, fix, (attaches || 0) + 1)
                },
                teardown: function() {
                    var doc = this.ownerDocument || this,
                        attaches = jQuery._data(doc, fix) - 1;
                    attaches ? jQuery._data(doc, fix, attaches) : (doc.removeEventListener(orig, handler, !0), jQuery._removeData(doc, fix))
                }
            }
        }), jQuery.fn.extend({
            on: function(types, selector, data, fn, one) {
                var type, origFn;
                if ("object" == typeof types) {
                    "string" != typeof selector && (data = data || selector, selector = void 0);
                    for (type in types) this.on(type, selector, data, types[type], one);
                    return this
                }
                if (null == data && null == fn ? (fn = selector, data = selector = void 0) : null == fn && ("string" == typeof selector ? (fn = data, data = void 0) : (fn = data, data = selector, selector = void 0)), fn === !1) fn = returnFalse;
                else if (!fn) return this;
                return 1 === one && (origFn = fn, fn = function(event) {
                    return jQuery().off(event), origFn.apply(this, arguments)
                }, fn.guid = origFn.guid || (origFn.guid = jQuery.guid++)), this.each(function() {
                    jQuery.event.add(this, types, fn, data, selector)
                })
            },
            one: function(types, selector, data, fn) {
                return this.on(types, selector, data, fn, 1)
            },
            off: function(types, selector, fn) {
                var handleObj, type;
                if (types && types.preventDefault && types.handleObj) return handleObj = types.handleObj, jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler), this;
                if ("object" == typeof types) {
                    for (type in types) this.off(type, selector, types[type]);
                    return this
                }
                return (selector === !1 || "function" == typeof selector) && (fn = selector, selector = void 0), fn === !1 && (fn = returnFalse), this.each(function() {
                    jQuery.event.remove(this, types, fn, selector)
                })
            },
            trigger: function(type, data) {
                return this.each(function() {
                    jQuery.event.trigger(type, data, this)
                })
            },
            triggerHandler: function(type, data) {
                var elem = this[0];
                return elem ? jQuery.event.trigger(type, data, elem, !0) : void 0
            }
        });
        var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
            rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
            rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
            rleadingWhitespace = /^\s+/,
            rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
            rtagName = /<([\w:]+)/,
            rtbody = /<tbody/i,
            rhtml = /<|&#?\w+;/,
            rnoInnerhtml = /<(?:script|style|link)/i,
            rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
            rscriptType = /^$|\/(?:java|ecma)script/i,
            rscriptTypeMasked = /^true\/(.*)/,
            rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
            wrapMap = {
                option: [1, "<select multiple='multiple'>", "</select>"],
                legend: [1, "<fieldset>", "</fieldset>"],
                area: [1, "<map>", "</map>"],
                param: [1, "<object>", "</object>"],
                thead: [1, "<table>", "</table>"],
                tr: [2, "<table><tbody>", "</tbody></table>"],
                col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
                td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                _default: support.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"]
            },
            safeFragment = createSafeFragment(document),
            fragmentDiv = safeFragment.appendChild(document.createElement("div"));
        wrapMap.optgroup = wrapMap.option, wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead, wrapMap.th = wrapMap.td, jQuery.extend({
            clone: function(elem, dataAndEvents, deepDataAndEvents) {
                var destElements, node, clone, i, srcElements, inPage = jQuery.contains(elem.ownerDocument, elem);
                if (support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test("<" + elem.nodeName + ">") ? clone = elem.cloneNode(!0) : (fragmentDiv.innerHTML = elem.outerHTML, fragmentDiv.removeChild(clone = fragmentDiv.firstChild)), !(support.noCloneEvent && support.noCloneChecked || 1 !== elem.nodeType && 11 !== elem.nodeType || jQuery.isXMLDoc(elem)))
                    for (destElements = getAll(clone), srcElements = getAll(elem), i = 0; null != (node = srcElements[i]); ++i) destElements[i] && fixCloneNodeIssues(node, destElements[i]);
                if (dataAndEvents)
                    if (deepDataAndEvents)
                        for (srcElements = srcElements || getAll(elem), destElements = destElements || getAll(clone), i = 0; null != (node = srcElements[i]); i++) cloneCopyEvent(node, destElements[i]);
                    else cloneCopyEvent(elem, clone);
                return destElements = getAll(clone, "script"), destElements.length > 0 && setGlobalEval(destElements, !inPage && getAll(elem, "script")), destElements = srcElements = node = null, clone
            },
            buildFragment: function(elems, context, scripts, selection) {
                for (var j, elem, contains, tmp, tag, tbody, wrap, l = elems.length, safe = createSafeFragment(context), nodes = [], i = 0; l > i; i++)
                    if (elem = elems[i], elem || 0 === elem)
                        if ("object" === jQuery.type(elem)) jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
                        else if (rhtml.test(elem)) {
                    for (tmp = tmp || safe.appendChild(context.createElement("div")), tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase(), wrap = wrapMap[tag] || wrapMap._default, tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, "<$1></$2>") + wrap[2], j = wrap[0]; j--;) tmp = tmp.lastChild;
                    if (!support.leadingWhitespace && rleadingWhitespace.test(elem) && nodes.push(context.createTextNode(rleadingWhitespace.exec(elem)[0])), !support.tbody)
                        for (elem = "table" !== tag || rtbody.test(elem) ? "<table>" !== wrap[1] || rtbody.test(elem) ? 0 : tmp : tmp.firstChild, j = elem && elem.childNodes.length; j--;) jQuery.nodeName(tbody = elem.childNodes[j], "tbody") && !tbody.childNodes.length && elem.removeChild(tbody);
                    for (jQuery.merge(nodes, tmp.childNodes), tmp.textContent = ""; tmp.firstChild;) tmp.removeChild(tmp.firstChild);
                    tmp = safe.lastChild
                } else nodes.push(context.createTextNode(elem));
                for (tmp && safe.removeChild(tmp), support.appendChecked || jQuery.grep(getAll(nodes, "input"), fixDefaultChecked), i = 0; elem = nodes[i++];)
                    if ((!selection || -1 === jQuery.inArray(elem, selection)) && (contains = jQuery.contains(elem.ownerDocument, elem), tmp = getAll(safe.appendChild(elem), "script"), contains && setGlobalEval(tmp), scripts))
                        for (j = 0; elem = tmp[j++];) rscriptType.test(elem.type || "") && scripts.push(elem);
                return tmp = null, safe
            },
            cleanData: function(elems, acceptData) {
                for (var elem, type, id, data, i = 0, internalKey = jQuery.expando, cache = jQuery.cache, deleteExpando = support.deleteExpando, special = jQuery.event.special; null != (elem = elems[i]); i++)
                    if ((acceptData || jQuery.acceptData(elem)) && (id = elem[internalKey], data = id && cache[id])) {
                        if (data.events)
                            for (type in data.events) special[type] ? jQuery.event.remove(elem, type) : jQuery.removeEvent(elem, type, data.handle);
                        cache[id] && (delete cache[id], deleteExpando ? delete elem[internalKey] : typeof elem.removeAttribute !== strundefined ? elem.removeAttribute(internalKey) : elem[internalKey] = null, deletedIds.push(id))
                    }
            }
        }), jQuery.fn.extend({
            text: function(value) {
                return access(this, function(value) {
                    return void 0 === value ? jQuery.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value))
                }, null, value, arguments.length)
            },
            append: function() {
                return this.domManip(arguments, function(elem) {
                    if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                        var target = manipulationTarget(this, elem);
                        target.appendChild(elem)
                    }
                })
            },
            prepend: function() {
                return this.domManip(arguments, function(elem) {
                    if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                        var target = manipulationTarget(this, elem);
                        target.insertBefore(elem, target.firstChild)
                    }
                })
            },
            before: function() {
                return this.domManip(arguments, function(elem) {
                    this.parentNode && this.parentNode.insertBefore(elem, this)
                })
            },
            after: function() {
                return this.domManip(arguments, function(elem) {
                    this.parentNode && this.parentNode.insertBefore(elem, this.nextSibling)
                })
            },
            remove: function(selector, keepData) {
                for (var elem, elems = selector ? jQuery.filter(selector, this) : this, i = 0; null != (elem = elems[i]); i++) keepData || 1 !== elem.nodeType || jQuery.cleanData(getAll(elem)), elem.parentNode && (keepData && jQuery.contains(elem.ownerDocument, elem) && setGlobalEval(getAll(elem, "script")), elem.parentNode.removeChild(elem));
                return this
            },
            empty: function() {
                for (var elem, i = 0; null != (elem = this[i]); i++) {
                    for (1 === elem.nodeType && jQuery.cleanData(getAll(elem, !1)); elem.firstChild;) elem.removeChild(elem.firstChild);
                    elem.options && jQuery.nodeName(elem, "select") && (elem.options.length = 0)
                }
                return this
            },
            clone: function(dataAndEvents, deepDataAndEvents) {
                return dataAndEvents = null == dataAndEvents ? !1 : dataAndEvents, deepDataAndEvents = null == deepDataAndEvents ? dataAndEvents : deepDataAndEvents, this.map(function() {
                    return jQuery.clone(this, dataAndEvents, deepDataAndEvents)
                })
            },
            html: function(value) {
                return access(this, function(value) {
                    var elem = this[0] || {},
                        i = 0,
                        l = this.length;
                    if (void 0 === value) return 1 === elem.nodeType ? elem.innerHTML.replace(rinlinejQuery, "") : void 0;
                    if (!("string" != typeof value || rnoInnerhtml.test(value) || !support.htmlSerialize && rnoshimcache.test(value) || !support.leadingWhitespace && rleadingWhitespace.test(value) || wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()])) {
                        value = value.replace(rxhtmlTag, "<$1></$2>");
                        try {
                            for (; l > i; i++) elem = this[i] || {}, 1 === elem.nodeType && (jQuery.cleanData(getAll(elem, !1)), elem.innerHTML = value);
                            elem = 0
                        } catch (e) {}
                    }
                    elem && this.empty().append(value)
                }, null, value, arguments.length)
            },
            replaceWith: function() {
                var arg = arguments[0];
                return this.domManip(arguments, function(elem) {
                    arg = this.parentNode, jQuery.cleanData(getAll(this)), arg && arg.replaceChild(elem, this)
                }), arg && (arg.length || arg.nodeType) ? this : this.remove()
            },
            detach: function(selector) {
                return this.remove(selector, !0)
            },
            domManip: function(args, callback) {
                args = concat.apply([], args);
                var first, node, hasScripts, scripts, doc, fragment, i = 0,
                    l = this.length,
                    set = this,
                    iNoClone = l - 1,
                    value = args[0],
                    isFunction = jQuery.isFunction(value);
                if (isFunction || l > 1 && "string" == typeof value && !support.checkClone && rchecked.test(value)) return this.each(function(index) {
                    var self = set.eq(index);
                    isFunction && (args[0] = value.call(this, index, self.html())), self.domManip(args, callback)
                });
                if (l && (fragment = jQuery.buildFragment(args, this[0].ownerDocument, !1, this), first = fragment.firstChild, 1 === fragment.childNodes.length && (fragment = first), first)) {
                    for (scripts = jQuery.map(getAll(fragment, "script"), disableScript), hasScripts = scripts.length; l > i; i++) node = fragment, i !== iNoClone && (node = jQuery.clone(node, !0, !0), hasScripts && jQuery.merge(scripts, getAll(node, "script"))), callback.call(this[i], node, i);
                    if (hasScripts)
                        for (doc = scripts[scripts.length - 1].ownerDocument, jQuery.map(scripts, restoreScript), i = 0; hasScripts > i; i++) node = scripts[i], rscriptType.test(node.type || "") && !jQuery._data(node, "globalEval") && jQuery.contains(doc, node) && (node.src ? jQuery._evalUrl && jQuery._evalUrl(node.src) : jQuery.globalEval((node.text || node.textContent || node.innerHTML || "").replace(rcleanScript, "")));
                    fragment = first = null
                }
                return this
            }
        }), jQuery.each({
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith"
        }, function(name, original) {
            jQuery.fn[name] = function(selector) {
                for (var elems, i = 0, ret = [], insert = jQuery(selector), last = insert.length - 1; last >= i; i++) elems = i === last ? this : this.clone(!0), jQuery(insert[i])[original](elems), push.apply(ret, elems.get());
                return this.pushStack(ret)
            }
        });
        var iframe, elemdisplay = {};
        ! function() {
            var shrinkWrapBlocksVal;
            support.shrinkWrapBlocks = function() {
                if (null != shrinkWrapBlocksVal) return shrinkWrapBlocksVal;
                shrinkWrapBlocksVal = !1;
                var div, body, container;
                return body = document.getElementsByTagName("body")[0], body && body.style ? (div = document.createElement("div"), container = document.createElement("div"), container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", body.appendChild(container).appendChild(div), typeof div.style.zoom !== strundefined && (div.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1", div.appendChild(document.createElement("div")).style.width = "5px", shrinkWrapBlocksVal = 3 !== div.offsetWidth), body.removeChild(container), shrinkWrapBlocksVal) : void 0
            }
        }();
        var getStyles, curCSS, rmargin = /^margin/,
            rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i"),
            rposition = /^(top|right|bottom|left)$/;
        window.getComputedStyle ? (getStyles = function(elem) {
                return elem.ownerDocument.defaultView.getComputedStyle(elem, null)
            }, curCSS = function(elem, name, computed) {
                var width, minWidth, maxWidth, ret, style = elem.style;
                return computed = computed || getStyles(elem), ret = computed ? computed.getPropertyValue(name) || computed[name] : void 0, computed && ("" !== ret || jQuery.contains(elem.ownerDocument, elem) || (ret = jQuery.style(elem, name)), rnumnonpx.test(ret) && rmargin.test(name) && (width = style.width, minWidth = style.minWidth, maxWidth = style.maxWidth, style.minWidth = style.maxWidth = style.width = ret, ret = computed.width, style.width = width, style.minWidth = minWidth, style.maxWidth = maxWidth)), void 0 === ret ? ret : ret + ""
            }) : document.documentElement.currentStyle && (getStyles = function(elem) {
                return elem.currentStyle
            }, curCSS = function(elem, name, computed) {
                var left, rs, rsLeft, ret, style = elem.style;
                return computed = computed || getStyles(elem), ret = computed ? computed[name] : void 0, null == ret && style && style[name] && (ret = style[name]), rnumnonpx.test(ret) && !rposition.test(name) && (left = style.left, rs = elem.runtimeStyle, rsLeft = rs && rs.left, rsLeft && (rs.left = elem.currentStyle.left), style.left = "fontSize" === name ? "1em" : ret, ret = style.pixelLeft + "px", style.left = left, rsLeft && (rs.left = rsLeft)), void 0 === ret ? ret : ret + "" || "auto"
            }),
            function() {
                function computeStyleTests() {
                    var div, body, container, contents;
                    body = document.getElementsByTagName("body")[0], body && body.style && (div = document.createElement("div"), container = document.createElement("div"), container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", body.appendChild(container).appendChild(div), div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", pixelPositionVal = boxSizingReliableVal = !1, reliableMarginRightVal = !0, window.getComputedStyle && (pixelPositionVal = "1%" !== (window.getComputedStyle(div, null) || {}).top, boxSizingReliableVal = "4px" === (window.getComputedStyle(div, null) || {
                        width: "4px"
                    }).width, contents = div.appendChild(document.createElement("div")), contents.style.cssText = div.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", contents.style.marginRight = contents.style.width = "0", div.style.width = "1px", reliableMarginRightVal = !parseFloat((window.getComputedStyle(contents, null) || {}).marginRight)), div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", contents = div.getElementsByTagName("td"), contents[0].style.cssText = "margin:0;border:0;padding:0;display:none", reliableHiddenOffsetsVal = 0 === contents[0].offsetHeight, reliableHiddenOffsetsVal && (contents[0].style.display = "", contents[1].style.display = "none", reliableHiddenOffsetsVal = 0 === contents[0].offsetHeight), body.removeChild(container))
                }
                var div, style, a, pixelPositionVal, boxSizingReliableVal, reliableHiddenOffsetsVal, reliableMarginRightVal;
                div = document.createElement("div"), div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", a = div.getElementsByTagName("a")[0], style = a && a.style, style && (style.cssText = "float:left;opacity:.5", support.opacity = "0.5" === style.opacity, support.cssFloat = !!style.cssFloat, div.style.backgroundClip = "content-box", div.cloneNode(!0).style.backgroundClip = "", support.clearCloneStyle = "content-box" === div.style.backgroundClip, support.boxSizing = "" === style.boxSizing || "" === style.MozBoxSizing || "" === style.WebkitBoxSizing, jQuery.extend(support, {
                    reliableHiddenOffsets: function() {
                        return null == reliableHiddenOffsetsVal && computeStyleTests(), reliableHiddenOffsetsVal
                    },
                    boxSizingReliable: function() {
                        return null == boxSizingReliableVal && computeStyleTests(), boxSizingReliableVal
                    },
                    pixelPosition: function() {
                        return null == pixelPositionVal && computeStyleTests(), pixelPositionVal
                    },
                    reliableMarginRight: function() {
                        return null == reliableMarginRightVal && computeStyleTests(), reliableMarginRightVal
                    }
                }))
            }(), jQuery.swap = function(elem, options, callback, args) {
                var ret, name, old = {};
                for (name in options) old[name] = elem.style[name], elem.style[name] = options[name];
                ret = callback.apply(elem, args || []);
                for (name in options) elem.style[name] = old[name];
                return ret
            };
        var ralpha = /alpha\([^)]*\)/i,
            ropacity = /opacity\s*=\s*([^)]*)/,
            rdisplayswap = /^(none|table(?!-c[ea]).+)/,
            rnumsplit = new RegExp("^(" + pnum + ")(.*)$", "i"),
            rrelNum = new RegExp("^([+-])=(" + pnum + ")", "i"),
            cssShow = {
                position: "absolute",
                visibility: "hidden",
                display: "block"
            },
            cssNormalTransform = {
                letterSpacing: "0",
                fontWeight: "400"
            },
            cssPrefixes = ["Webkit", "O", "Moz", "ms"];
        jQuery.extend({
            cssHooks: {
                opacity: {
                    get: function(elem, computed) {
                        if (computed) {
                            var ret = curCSS(elem, "opacity");
                            return "" === ret ? "1" : ret
                        }
                    }
                }
            },
            cssNumber: {
                columnCount: !0,
                fillOpacity: !0,
                flexGrow: !0,
                flexShrink: !0,
                fontWeight: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0
            },
            cssProps: {
                "float": support.cssFloat ? "cssFloat" : "styleFloat"
            },
            style: function(elem, name, value, extra) {
                if (elem && 3 !== elem.nodeType && 8 !== elem.nodeType && elem.style) {
                    var ret, type, hooks, origName = jQuery.camelCase(name),
                        style = elem.style;
                    if (name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName)), hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName], void 0 === value) return hooks && "get" in hooks && void 0 !== (ret = hooks.get(elem, !1, extra)) ? ret : style[name];
                    if (type = typeof value, "string" === type && (ret = rrelNum.exec(value)) && (value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name)), type = "number"), null != value && value === value && ("number" !== type || jQuery.cssNumber[origName] || (value += "px"), support.clearCloneStyle || "" !== value || 0 !== name.indexOf("background") || (style[name] = "inherit"), !(hooks && "set" in hooks && void 0 === (value = hooks.set(elem, value, extra))))) try {
                        style[name] = value
                    } catch (e) {}
                }
            },
            css: function(elem, name, extra, styles) {
                var num, val, hooks, origName = jQuery.camelCase(name);
                return name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName)), hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName], hooks && "get" in hooks && (val = hooks.get(elem, !0, extra)), void 0 === val && (val = curCSS(elem, name, styles)), "normal" === val && name in cssNormalTransform && (val = cssNormalTransform[name]), "" === extra || extra ? (num = parseFloat(val), extra === !0 || jQuery.isNumeric(num) ? num || 0 : val) : val
            }
        }), jQuery.each(["height", "width"], function(i, name) {
            jQuery.cssHooks[name] = {
                get: function(elem, computed, extra) {
                    return computed ? rdisplayswap.test(jQuery.css(elem, "display")) && 0 === elem.offsetWidth ? jQuery.swap(elem, cssShow, function() {
                        return getWidthOrHeight(elem, name, extra)
                    }) : getWidthOrHeight(elem, name, extra) : void 0
                },
                set: function(elem, value, extra) {
                    var styles = extra && getStyles(elem);
                    return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, support.boxSizing && "border-box" === jQuery.css(elem, "boxSizing", !1, styles), styles) : 0)
                }
            }
        }), support.opacity || (jQuery.cssHooks.opacity = {
            get: function(elem, computed) {
                return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : computed ? "1" : ""
            },
            set: function(elem, value) {
                var style = elem.style,
                    currentStyle = elem.currentStyle,
                    opacity = jQuery.isNumeric(value) ? "alpha(opacity=" + 100 * value + ")" : "",
                    filter = currentStyle && currentStyle.filter || style.filter || "";
                style.zoom = 1, (value >= 1 || "" === value) && "" === jQuery.trim(filter.replace(ralpha, "")) && style.removeAttribute && (style.removeAttribute("filter"), "" === value || currentStyle && !currentStyle.filter) || (style.filter = ralpha.test(filter) ? filter.replace(ralpha, opacity) : filter + " " + opacity)
            }
        }), jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function(elem, computed) {
            return computed ? jQuery.swap(elem, {
                display: "inline-block"
            }, curCSS, [elem, "marginRight"]) : void 0
        }), jQuery.each({
            margin: "",
            padding: "",
            border: "Width"
        }, function(prefix, suffix) {
            jQuery.cssHooks[prefix + suffix] = {
                expand: function(value) {
                    for (var i = 0, expanded = {}, parts = "string" == typeof value ? value.split(" ") : [value]; 4 > i; i++) expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
                    return expanded
                }
            }, rmargin.test(prefix) || (jQuery.cssHooks[prefix + suffix].set = setPositiveNumber)
        }), jQuery.fn.extend({
            css: function(name, value) {
                return access(this, function(elem, name, value) {
                    var styles, len, map = {},
                        i = 0;
                    if (jQuery.isArray(name)) {
                        for (styles = getStyles(elem), len = name.length; len > i; i++) map[name[i]] = jQuery.css(elem, name[i], !1, styles);
                        return map
                    }
                    return void 0 !== value ? jQuery.style(elem, name, value) : jQuery.css(elem, name)
                }, name, value, arguments.length > 1)
            },
            show: function() {
                return showHide(this, !0)
            },
            hide: function() {
                return showHide(this)
            },
            toggle: function(state) {
                return "boolean" == typeof state ? state ? this.show() : this.hide() : this.each(function() {
                    isHidden(this) ? jQuery(this).show() : jQuery(this).hide()
                })
            }
        }), jQuery.Tween = Tween, Tween.prototype = {
            constructor: Tween,
            init: function(elem, options, prop, end, easing, unit) {
                this.elem = elem, this.prop = prop, this.easing = easing || "swing", this.options = options, this.start = this.now = this.cur(), this.end = end, this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px")
            },
            cur: function() {
                var hooks = Tween.propHooks[this.prop];
                return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this)
            },
            run: function(percent) {
                var eased, hooks = Tween.propHooks[this.prop];
                return this.pos = eased = this.options.duration ? jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration) : percent, this.now = (this.end - this.start) * eased + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), hooks && hooks.set ? hooks.set(this) : Tween.propHooks._default.set(this), this
            }
        }, Tween.prototype.init.prototype = Tween.prototype, Tween.propHooks = {
            _default: {
                get: function(tween) {
                    var result;
                    return null == tween.elem[tween.prop] || tween.elem.style && null != tween.elem.style[tween.prop] ? (result = jQuery.css(tween.elem, tween.prop, ""), result && "auto" !== result ? result : 0) : tween.elem[tween.prop]
                },
                set: function(tween) {
                    jQuery.fx.step[tween.prop] ? jQuery.fx.step[tween.prop](tween) : tween.elem.style && (null != tween.elem.style[jQuery.cssProps[tween.prop]] || jQuery.cssHooks[tween.prop]) ? jQuery.style(tween.elem, tween.prop, tween.now + tween.unit) : tween.elem[tween.prop] = tween.now
                }
            }
        }, Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
            set: function(tween) {
                tween.elem.nodeType && tween.elem.parentNode && (tween.elem[tween.prop] = tween.now)
            }
        }, jQuery.easing = {
            linear: function(p) {
                return p
            },
            swing: function(p) {
                return .5 - Math.cos(p * Math.PI) / 2
            }
        }, jQuery.fx = Tween.prototype.init, jQuery.fx.step = {};
        var fxNow, timerId, rfxtypes = /^(?:toggle|show|hide)$/,
            rfxnum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i"),
            rrun = /queueHooks$/,
            animationPrefilters = [defaultPrefilter],
            tweeners = {
                "*": [function(prop, value) {
                    var tween = this.createTween(prop, value),
                        target = tween.cur(),
                        parts = rfxnum.exec(value),
                        unit = parts && parts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
                        start = (jQuery.cssNumber[prop] || "px" !== unit && +target) && rfxnum.exec(jQuery.css(tween.elem, prop)),
                        scale = 1,
                        maxIterations = 20;
                    if (start && start[3] !== unit) {
                        unit = unit || start[3], parts = parts || [], start = +target || 1;
                        do scale = scale || ".5", start /= scale, jQuery.style(tween.elem, prop, start + unit); while (scale !== (scale = tween.cur() / target) && 1 !== scale && --maxIterations)
                    }
                    return parts && (start = tween.start = +start || +target || 0, tween.unit = unit, tween.end = parts[1] ? start + (parts[1] + 1) * parts[2] : +parts[2]), tween
                }]
            };
        jQuery.Animation = jQuery.extend(Animation, {
                tweener: function(props, callback) {
                    jQuery.isFunction(props) ? (callback = props, props = ["*"]) : props = props.split(" ");
                    for (var prop, index = 0, length = props.length; length > index; index++) prop = props[index], tweeners[prop] = tweeners[prop] || [], tweeners[prop].unshift(callback)
                },
                prefilter: function(callback, prepend) {
                    prepend ? animationPrefilters.unshift(callback) : animationPrefilters.push(callback)
                }
            }), jQuery.speed = function(speed, easing, fn) {
                var opt = speed && "object" == typeof speed ? jQuery.extend({}, speed) : {
                    complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
                    duration: speed,
                    easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
                };
                return opt.duration = jQuery.fx.off ? 0 : "number" == typeof opt.duration ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default, (null == opt.queue || opt.queue === !0) && (opt.queue = "fx"), opt.old = opt.complete, opt.complete = function() {
                    jQuery.isFunction(opt.old) && opt.old.call(this), opt.queue && jQuery.dequeue(this, opt.queue)
                }, opt
            }, jQuery.fn.extend({
                fadeTo: function(speed, to, easing, callback) {
                    return this.filter(isHidden).css("opacity", 0).show().end().animate({
                        opacity: to
                    }, speed, easing, callback)
                },
                animate: function(prop, speed, easing, callback) {
                    var empty = jQuery.isEmptyObject(prop),
                        optall = jQuery.speed(speed, easing, callback),
                        doAnimation = function() {
                            var anim = Animation(this, jQuery.extend({}, prop), optall);
                            (empty || jQuery._data(this, "finish")) && anim.stop(!0)
                        };
                    return doAnimation.finish = doAnimation, empty || optall.queue === !1 ? this.each(doAnimation) : this.queue(optall.queue, doAnimation)
                },
                stop: function(type, clearQueue, gotoEnd) {
                    var stopQueue = function(hooks) {
                        var stop = hooks.stop;
                        delete hooks.stop, stop(gotoEnd)
                    };
                    return "string" != typeof type && (gotoEnd = clearQueue, clearQueue = type, type = void 0), clearQueue && type !== !1 && this.queue(type || "fx", []), this.each(function() {
                        var dequeue = !0,
                            index = null != type && type + "queueHooks",
                            timers = jQuery.timers,
                            data = jQuery._data(this);
                        if (index) data[index] && data[index].stop && stopQueue(data[index]);
                        else
                            for (index in data) data[index] && data[index].stop && rrun.test(index) && stopQueue(data[index]);
                        for (index = timers.length; index--;) timers[index].elem !== this || null != type && timers[index].queue !== type || (timers[index].anim.stop(gotoEnd), dequeue = !1, timers.splice(index, 1));
                        (dequeue || !gotoEnd) && jQuery.dequeue(this, type)
                    })
                },
                finish: function(type) {
                    return type !== !1 && (type = type || "fx"), this.each(function() {
                        var index, data = jQuery._data(this),
                            queue = data[type + "queue"],
                            hooks = data[type + "queueHooks"],
                            timers = jQuery.timers,
                            length = queue ? queue.length : 0;
                        for (data.finish = !0, jQuery.queue(this, type, []), hooks && hooks.stop && hooks.stop.call(this, !0), index = timers.length; index--;) timers[index].elem === this && timers[index].queue === type && (timers[index].anim.stop(!0), timers.splice(index, 1));
                        for (index = 0; length > index; index++) queue[index] && queue[index].finish && queue[index].finish.call(this);
                        delete data.finish
                    })
                }
            }), jQuery.each(["toggle", "show", "hide"], function(i, name) {
                var cssFn = jQuery.fn[name];
                jQuery.fn[name] = function(speed, easing, callback) {
                    return null == speed || "boolean" == typeof speed ? cssFn.apply(this, arguments) : this.animate(genFx(name, !0), speed, easing, callback)
                }
            }), jQuery.each({
                slideDown: genFx("show"),
                slideUp: genFx("hide"),
                slideToggle: genFx("toggle"),
                fadeIn: {
                    opacity: "show"
                },
                fadeOut: {
                    opacity: "hide"
                },
                fadeToggle: {
                    opacity: "toggle"
                }
            }, function(name, props) {
                jQuery.fn[name] = function(speed, easing, callback) {
                    return this.animate(props, speed, easing, callback)
                }
            }), jQuery.timers = [], jQuery.fx.tick = function() {
                var timer, timers = jQuery.timers,
                    i = 0;
                for (fxNow = jQuery.now(); i < timers.length; i++) timer = timers[i], timer() || timers[i] !== timer || timers.splice(i--, 1);
                timers.length || jQuery.fx.stop(), fxNow = void 0
            }, jQuery.fx.timer = function(timer) {
                jQuery.timers.push(timer), timer() ? jQuery.fx.start() : jQuery.timers.pop()
            }, jQuery.fx.interval = 13, jQuery.fx.start = function() {
                timerId || (timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval))
            }, jQuery.fx.stop = function() {
                clearInterval(timerId), timerId = null
            }, jQuery.fx.speeds = {
                slow: 600,
                fast: 200,
                _default: 400
            }, jQuery.fn.delay = function(time, type) {
                return time = jQuery.fx ? jQuery.fx.speeds[time] || time : time, type = type || "fx", this.queue(type, function(next, hooks) {
                    var timeout = setTimeout(next, time);
                    hooks.stop = function() {
                        clearTimeout(timeout)
                    }
                })
            },
            function() {
                var input, div, select, a, opt;
                div = document.createElement("div"), div.setAttribute("className", "t"), div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", a = div.getElementsByTagName("a")[0], select = document.createElement("select"), opt = select.appendChild(document.createElement("option")), input = div.getElementsByTagName("input")[0], a.style.cssText = "top:1px", support.getSetAttribute = "t" !== div.className, support.style = /top/.test(a.getAttribute("style")), support.hrefNormalized = "/a" === a.getAttribute("href"), support.checkOn = !!input.value, support.optSelected = opt.selected, support.enctype = !!document.createElement("form").enctype, select.disabled = !0, support.optDisabled = !opt.disabled, input = document.createElement("input"), input.setAttribute("value", ""), support.input = "" === input.getAttribute("value"), input.value = "t", input.setAttribute("type", "radio"), support.radioValue = "t" === input.value
            }();
        var rreturn = /\r/g;
        jQuery.fn.extend({
            val: function(value) {
                var hooks, ret, isFunction, elem = this[0]; {
                    if (arguments.length) return isFunction = jQuery.isFunction(value), this.each(function(i) {
                        var val;
                        1 === this.nodeType && (val = isFunction ? value.call(this, i, jQuery(this).val()) : value, null == val ? val = "" : "number" == typeof val ? val += "" : jQuery.isArray(val) && (val = jQuery.map(val, function(value) {
                            return null == value ? "" : value + ""
                        })), hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()], hooks && "set" in hooks && void 0 !== hooks.set(this, val, "value") || (this.value = val))
                    });
                    if (elem) return hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()], hooks && "get" in hooks && void 0 !== (ret = hooks.get(elem, "value")) ? ret : (ret = elem.value, "string" == typeof ret ? ret.replace(rreturn, "") : null == ret ? "" : ret)
                }
            }
        }), jQuery.extend({
            valHooks: {
                option: {
                    get: function(elem) {
                        var val = jQuery.find.attr(elem, "value");
                        return null != val ? val : jQuery.trim(jQuery.text(elem))
                    }
                },
                select: {
                    get: function(elem) {
                        for (var value, option, options = elem.options, index = elem.selectedIndex, one = "select-one" === elem.type || 0 > index, values = one ? null : [], max = one ? index + 1 : options.length, i = 0 > index ? max : one ? index : 0; max > i; i++)
                            if (option = options[i], !(!option.selected && i !== index || (support.optDisabled ? option.disabled : null !== option.getAttribute("disabled")) || option.parentNode.disabled && jQuery.nodeName(option.parentNode, "optgroup"))) {
                                if (value = jQuery(option).val(), one) return value;
                                values.push(value)
                            }
                        return values
                    },
                    set: function(elem, value) {
                        for (var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length; i--;)
                            if (option = options[i], jQuery.inArray(jQuery.valHooks.option.get(option), values) >= 0) try {
                                option.selected = optionSet = !0
                            } catch (_) {
                                option.scrollHeight
                            } else option.selected = !1;
                        return optionSet || (elem.selectedIndex = -1), options
                    }
                }
            }
        }), jQuery.each(["radio", "checkbox"], function() {
            jQuery.valHooks[this] = {
                set: function(elem, value) {
                    return jQuery.isArray(value) ? elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0 : void 0
                }
            }, support.checkOn || (jQuery.valHooks[this].get = function(elem) {
                return null === elem.getAttribute("value") ? "on" : elem.value
            })
        });
        var nodeHook, boolHook, attrHandle = jQuery.expr.attrHandle,
            ruseDefault = /^(?:checked|selected)$/i,
            getSetAttribute = support.getSetAttribute,
            getSetInput = support.input;
        jQuery.fn.extend({
            attr: function(name, value) {
                return access(this, jQuery.attr, name, value, arguments.length > 1)
            },
            removeAttr: function(name) {
                return this.each(function() {
                    jQuery.removeAttr(this, name)
                })
            }
        }), jQuery.extend({
            attr: function(elem, name, value) {
                var hooks, ret, nType = elem.nodeType;
                if (elem && 3 !== nType && 8 !== nType && 2 !== nType) return typeof elem.getAttribute === strundefined ? jQuery.prop(elem, name, value) : (1 === nType && jQuery.isXMLDoc(elem) || (name = name.toLowerCase(), hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : nodeHook)), void 0 === value ? hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : (ret = jQuery.find.attr(elem, name), null == ret ? void 0 : ret) : null !== value ? hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : (elem.setAttribute(name, value + ""), value) : void jQuery.removeAttr(elem, name))
            },
            removeAttr: function(elem, value) {
                var name, propName, i = 0,
                    attrNames = value && value.match(rnotwhite);
                if (attrNames && 1 === elem.nodeType)
                    for (; name = attrNames[i++];) propName = jQuery.propFix[name] || name, jQuery.expr.match.bool.test(name) ? getSetInput && getSetAttribute || !ruseDefault.test(name) ? elem[propName] = !1 : elem[jQuery.camelCase("default-" + name)] = elem[propName] = !1 : jQuery.attr(elem, name, ""), elem.removeAttribute(getSetAttribute ? name : propName)
            },
            attrHooks: {
                type: {
                    set: function(elem, value) {
                        if (!support.radioValue && "radio" === value && jQuery.nodeName(elem, "input")) {
                            var val = elem.value;
                            return elem.setAttribute("type", value), val && (elem.value = val), value
                        }
                    }
                }
            }
        }), boolHook = {
            set: function(elem, value, name) {
                return value === !1 ? jQuery.removeAttr(elem, name) : getSetInput && getSetAttribute || !ruseDefault.test(name) ? elem.setAttribute(!getSetAttribute && jQuery.propFix[name] || name, name) : elem[jQuery.camelCase("default-" + name)] = elem[name] = !0, name
            }
        }, jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(i, name) {
            var getter = attrHandle[name] || jQuery.find.attr;
            attrHandle[name] = getSetInput && getSetAttribute || !ruseDefault.test(name) ? function(elem, name, isXML) {
                var ret, handle;
                return isXML || (handle = attrHandle[name], attrHandle[name] = ret, ret = null != getter(elem, name, isXML) ? name.toLowerCase() : null, attrHandle[name] = handle), ret
            } : function(elem, name, isXML) {
                return isXML ? void 0 : elem[jQuery.camelCase("default-" + name)] ? name.toLowerCase() : null
            }
        }), getSetInput && getSetAttribute || (jQuery.attrHooks.value = {
            set: function(elem, value, name) {
                return jQuery.nodeName(elem, "input") ? void(elem.defaultValue = value) : nodeHook && nodeHook.set(elem, value, name)
            }
        }), getSetAttribute || (nodeHook = {
            set: function(elem, value, name) {
                var ret = elem.getAttributeNode(name);
                return ret || elem.setAttributeNode(ret = elem.ownerDocument.createAttribute(name)), ret.value = value += "", "value" === name || value === elem.getAttribute(name) ? value : void 0
            }
        }, attrHandle.id = attrHandle.name = attrHandle.coords = function(elem, name, isXML) {
            var ret;
            return isXML ? void 0 : (ret = elem.getAttributeNode(name)) && "" !== ret.value ? ret.value : null
        }, jQuery.valHooks.button = {
            get: function(elem, name) {
                var ret = elem.getAttributeNode(name);
                return ret && ret.specified ? ret.value : void 0
            },
            set: nodeHook.set
        }, jQuery.attrHooks.contenteditable = {
            set: function(elem, value, name) {
                nodeHook.set(elem, "" === value ? !1 : value, name)
            }
        }, jQuery.each(["width", "height"], function(i, name) {
            jQuery.attrHooks[name] = {
                set: function(elem, value) {
                    return "" === value ? (elem.setAttribute(name, "auto"), value) : void 0
                }
            }
        })), support.style || (jQuery.attrHooks.style = {
            get: function(elem) {
                return elem.style.cssText || void 0
            },
            set: function(elem, value) {
                return elem.style.cssText = value + ""
            }
        });
        var rfocusable = /^(?:input|select|textarea|button|object)$/i,
            rclickable = /^(?:a|area)$/i;
        jQuery.fn.extend({
            prop: function(name, value) {
                return access(this, jQuery.prop, name, value, arguments.length > 1)
            },
            removeProp: function(name) {
                return name = jQuery.propFix[name] || name, this.each(function() {
                    try {
                        this[name] = void 0, delete this[name]
                    } catch (e) {}
                })
            }
        }), jQuery.extend({
            propFix: {
                "for": "htmlFor",
                "class": "className"
            },
            prop: function(elem, name, value) {
                var ret, hooks, notxml, nType = elem.nodeType;
                if (elem && 3 !== nType && 8 !== nType && 2 !== nType) return notxml = 1 !== nType || !jQuery.isXMLDoc(elem), notxml && (name = jQuery.propFix[name] || name, hooks = jQuery.propHooks[name]), void 0 !== value ? hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : elem[name] = value : hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : elem[name]
            },
            propHooks: {
                tabIndex: {
                    get: function(elem) {
                        var tabindex = jQuery.find.attr(elem, "tabindex");
                        return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : -1
                    }
                }
            }
        }), support.hrefNormalized || jQuery.each(["href", "src"], function(i, name) {
            jQuery.propHooks[name] = {
                get: function(elem) {
                    return elem.getAttribute(name, 4)
                }
            }
        }), support.optSelected || (jQuery.propHooks.selected = {
            get: function(elem) {
                var parent = elem.parentNode;
                return parent && (parent.selectedIndex, parent.parentNode && parent.parentNode.selectedIndex), null
            }
        }), jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
            jQuery.propFix[this.toLowerCase()] = this
        }), support.enctype || (jQuery.propFix.enctype = "encoding");
        var rclass = /[\t\r\n\f]/g;
        jQuery.fn.extend({
            addClass: function(value) {
                var classes, elem, cur, clazz, j, finalValue, i = 0,
                    len = this.length,
                    proceed = "string" == typeof value && value;
                if (jQuery.isFunction(value)) return this.each(function(j) {
                    jQuery(this).addClass(value.call(this, j, this.className))
                });
                if (proceed)
                    for (classes = (value || "").match(rnotwhite) || []; len > i; i++)
                        if (elem = this[i], cur = 1 === elem.nodeType && (elem.className ? (" " + elem.className + " ").replace(rclass, " ") : " ")) {
                            for (j = 0; clazz = classes[j++];) cur.indexOf(" " + clazz + " ") < 0 && (cur += clazz + " ");
                            finalValue = jQuery.trim(cur), elem.className !== finalValue && (elem.className = finalValue)
                        }
                return this
            },
            removeClass: function(value) {
                var classes, elem, cur, clazz, j, finalValue, i = 0,
                    len = this.length,
                    proceed = 0 === arguments.length || "string" == typeof value && value;
                if (jQuery.isFunction(value)) return this.each(function(j) {
                    jQuery(this).removeClass(value.call(this, j, this.className))
                });
                if (proceed)
                    for (classes = (value || "").match(rnotwhite) || []; len > i; i++)
                        if (elem = this[i], cur = 1 === elem.nodeType && (elem.className ? (" " + elem.className + " ").replace(rclass, " ") : "")) {
                            for (j = 0; clazz = classes[j++];)
                                for (; cur.indexOf(" " + clazz + " ") >= 0;) cur = cur.replace(" " + clazz + " ", " ");
                            finalValue = value ? jQuery.trim(cur) : "", elem.className !== finalValue && (elem.className = finalValue)
                        }
                return this
            },
            toggleClass: function(value, stateVal) {
                var type = typeof value;
                return "boolean" == typeof stateVal && "string" === type ? stateVal ? this.addClass(value) : this.removeClass(value) : this.each(jQuery.isFunction(value) ? function(i) {
                    jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal)
                } : function() {
                    if ("string" === type)
                        for (var className, i = 0, self = jQuery(this), classNames = value.match(rnotwhite) || []; className = classNames[i++];) self.hasClass(className) ? self.removeClass(className) : self.addClass(className);
                    else(type === strundefined || "boolean" === type) && (this.className && jQuery._data(this, "__className__", this.className), this.className = this.className || value === !1 ? "" : jQuery._data(this, "__className__") || "")
                })
            },
            hasClass: function(selector) {
                for (var className = " " + selector + " ", i = 0, l = this.length; l > i; i++)
                    if (1 === this[i].nodeType && (" " + this[i].className + " ").replace(rclass, " ").indexOf(className) >= 0) return !0;
                return !1
            }
        }), jQuery.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(i, name) {
            jQuery.fn[name] = function(data, fn) {
                return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name)
            }
        }), jQuery.fn.extend({
            hover: function(fnOver, fnOut) {
                return this.mouseenter(fnOver).mouseleave(fnOut || fnOver)
            },
            bind: function(types, data, fn) {
                return this.on(types, null, data, fn)
            },
            unbind: function(types, fn) {
                return this.off(types, null, fn)
            },
            delegate: function(selector, types, data, fn) {
                return this.on(types, selector, data, fn)
            },
            undelegate: function(selector, types, fn) {
                return 1 === arguments.length ? this.off(selector, "**") : this.off(types, selector || "**", fn)
            }
        });
        var nonce = jQuery.now(),
            rquery = /\?/,
            rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
        jQuery.parseJSON = function(data) {
            if (window.JSON && window.JSON.parse) return window.JSON.parse(data + "");
            var requireNonComma, depth = null,
                str = jQuery.trim(data + "");
            return str && !jQuery.trim(str.replace(rvalidtokens, function(token, comma, open, close) {
                return requireNonComma && comma && (depth = 0), 0 === depth ? token : (requireNonComma = open || comma, depth += !close - !open, "")
            })) ? Function("return " + str)() : jQuery.error("Invalid JSON: " + data)
        }, jQuery.parseXML = function(data) {
            var xml, tmp;
            if (!data || "string" != typeof data) return null;
            try {
                window.DOMParser ? (tmp = new DOMParser, xml = tmp.parseFromString(data, "text/xml")) : (xml = new ActiveXObject("Microsoft.XMLDOM"), xml.async = "false", xml.loadXML(data))
            } catch (e) {
                xml = void 0
            }
            return xml && xml.documentElement && !xml.getElementsByTagName("parsererror").length || jQuery.error("Invalid XML: " + data), xml
        };
        var ajaxLocParts, ajaxLocation, rhash = /#.*$/,
            rts = /([?&])_=[^&]*/,
            rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
            rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
            rnoContent = /^(?:GET|HEAD)$/,
            rprotocol = /^\/\//,
            rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
            prefilters = {},
            transports = {},
            allTypes = "*/".concat("*");
        try {
            ajaxLocation = location.href
        } catch (e) {
            ajaxLocation = document.createElement("a"), ajaxLocation.href = "", ajaxLocation = ajaxLocation.href
        }
        ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [], jQuery.extend({
            active: 0,
            lastModified: {},
            etag: {},
            ajaxSettings: {
                url: ajaxLocation,
                type: "GET",
                isLocal: rlocalProtocol.test(ajaxLocParts[1]),
                global: !0,
                processData: !0,
                async: !0,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                accepts: {
                    "*": allTypes,
                    text: "text/plain",
                    html: "text/html",
                    xml: "application/xml, text/xml",
                    json: "application/json, text/javascript"
                },
                contents: {
                    xml: /xml/,
                    html: /html/,
                    json: /json/
                },
                responseFields: {
                    xml: "responseXML",
                    text: "responseText",
                    json: "responseJSON"
                },
                converters: {
                    "* text": String,
                    "text html": !0,
                    "text json": jQuery.parseJSON,
                    "text xml": jQuery.parseXML
                },
                flatOptions: {
                    url: !0,
                    context: !0
                }
            },
            ajaxSetup: function(target, settings) {
                return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target)
            },
            ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
            ajaxTransport: addToPrefiltersOrTransports(transports),
            ajax: function(url, options) {
                function done(status, nativeStatusText, responses, headers) {
                    var isSuccess, success, error, response, modified, statusText = nativeStatusText;
                    2 !== state && (state = 2, timeoutTimer && clearTimeout(timeoutTimer), transport = void 0, responseHeadersString = headers || "", jqXHR.readyState = status > 0 ? 4 : 0, isSuccess = status >= 200 && 300 > status || 304 === status, responses && (response = ajaxHandleResponses(s, jqXHR, responses)), response = ajaxConvert(s, response, jqXHR, isSuccess), isSuccess ? (s.ifModified && (modified = jqXHR.getResponseHeader("Last-Modified"), modified && (jQuery.lastModified[cacheURL] = modified), modified = jqXHR.getResponseHeader("etag"), modified && (jQuery.etag[cacheURL] = modified)), 204 === status || "HEAD" === s.type ? statusText = "nocontent" : 304 === status ? statusText = "notmodified" : (statusText = response.state, success = response.data, error = response.error, isSuccess = !error)) : (error = statusText, (status || !statusText) && (statusText = "error", 0 > status && (status = 0))), jqXHR.status = status, jqXHR.statusText = (nativeStatusText || statusText) + "", isSuccess ? deferred.resolveWith(callbackContext, [success, statusText, jqXHR]) : deferred.rejectWith(callbackContext, [jqXHR, statusText, error]), jqXHR.statusCode(statusCode), statusCode = void 0, fireGlobals && globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]), completeDeferred.fireWith(callbackContext, [jqXHR, statusText]), fireGlobals && (globalEventContext.trigger("ajaxComplete", [jqXHR, s]), --jQuery.active || jQuery.event.trigger("ajaxStop")))
                }
                "object" == typeof url && (options = url, url = void 0), options = options || {};
                var parts, i, cacheURL, responseHeadersString, timeoutTimer, fireGlobals, transport, responseHeaders, s = jQuery.ajaxSetup({}, options),
                    callbackContext = s.context || s,
                    globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
                    deferred = jQuery.Deferred(),
                    completeDeferred = jQuery.Callbacks("once memory"),
                    statusCode = s.statusCode || {},
                    requestHeaders = {},
                    requestHeadersNames = {},
                    state = 0,
                    strAbort = "canceled",
                    jqXHR = {
                        readyState: 0,
                        getResponseHeader: function(key) {
                            var match;
                            if (2 === state) {
                                if (!responseHeaders)
                                    for (responseHeaders = {}; match = rheaders.exec(responseHeadersString);) responseHeaders[match[1].toLowerCase()] = match[2];
                                match = responseHeaders[key.toLowerCase()]
                            }
                            return null == match ? null : match
                        },
                        getAllResponseHeaders: function() {
                            return 2 === state ? responseHeadersString : null
                        },
                        setRequestHeader: function(name, value) {
                            var lname = name.toLowerCase();
                            return state || (name = requestHeadersNames[lname] = requestHeadersNames[lname] || name, requestHeaders[name] = value), this
                        },
                        overrideMimeType: function(type) {
                            return state || (s.mimeType = type), this
                        },
                        statusCode: function(map) {
                            var code;
                            if (map)
                                if (2 > state)
                                    for (code in map) statusCode[code] = [statusCode[code], map[code]];
                                else jqXHR.always(map[jqXHR.status]);
                            return this
                        },
                        abort: function(statusText) {
                            var finalText = statusText || strAbort;
                            return transport && transport.abort(finalText), done(0, finalText), this
                        }
                    };
                if (deferred.promise(jqXHR).complete = completeDeferred.add, jqXHR.success = jqXHR.done, jqXHR.error = jqXHR.fail, s.url = ((url || s.url || ajaxLocation) + "").replace(rhash, "").replace(rprotocol, ajaxLocParts[1] + "//"), s.type = options.method || options.type || s.method || s.type, s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().match(rnotwhite) || [""], null == s.crossDomain && (parts = rurl.exec(s.url.toLowerCase()), s.crossDomain = !(!parts || parts[1] === ajaxLocParts[1] && parts[2] === ajaxLocParts[2] && (parts[3] || ("http:" === parts[1] ? "80" : "443")) === (ajaxLocParts[3] || ("http:" === ajaxLocParts[1] ? "80" : "443")))), s.data && s.processData && "string" != typeof s.data && (s.data = jQuery.param(s.data, s.traditional)), inspectPrefiltersOrTransports(prefilters, s, options, jqXHR), 2 === state) return jqXHR;
                fireGlobals = s.global, fireGlobals && 0 === jQuery.active++ && jQuery.event.trigger("ajaxStart"), s.type = s.type.toUpperCase(), s.hasContent = !rnoContent.test(s.type), cacheURL = s.url, s.hasContent || (s.data && (cacheURL = s.url += (rquery.test(cacheURL) ? "&" : "?") + s.data, delete s.data), s.cache === !1 && (s.url = rts.test(cacheURL) ? cacheURL.replace(rts, "$1_=" + nonce++) : cacheURL + (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++)), s.ifModified && (jQuery.lastModified[cacheURL] && jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]), jQuery.etag[cacheURL] && jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL])), (s.data && s.hasContent && s.contentType !== !1 || options.contentType) && jqXHR.setRequestHeader("Content-Type", s.contentType), jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + ("*" !== s.dataTypes[0] ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
                for (i in s.headers) jqXHR.setRequestHeader(i, s.headers[i]);
                if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === !1 || 2 === state)) return jqXHR.abort();
                strAbort = "abort";
                for (i in {
                        success: 1,
                        error: 1,
                        complete: 1
                    }) jqXHR[i](s[i]);
                if (transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR)) {
                    jqXHR.readyState = 1, fireGlobals && globalEventContext.trigger("ajaxSend", [jqXHR, s]), s.async && s.timeout > 0 && (timeoutTimer = setTimeout(function() {
                        jqXHR.abort("timeout")
                    }, s.timeout));
                    try {
                        state = 1, transport.send(requestHeaders, done)
                    } catch (e) {
                        if (!(2 > state)) throw e;
                        done(-1, e)
                    }
                } else done(-1, "No Transport");
                return jqXHR
            },
            getJSON: function(url, data, callback) {
                return jQuery.get(url, data, callback, "json")
            },
            getScript: function(url, callback) {
                return jQuery.get(url, void 0, callback, "script")
            }
        }), jQuery.each(["get", "post"], function(i, method) {
            jQuery[method] = function(url, data, callback, type) {
                return jQuery.isFunction(data) && (type = type || callback, callback = data, data = void 0), jQuery.ajax({
                    url: url,
                    type: method,
                    dataType: type,
                    data: data,
                    success: callback
                })
            }
        }), jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(i, type) {
            jQuery.fn[type] = function(fn) {
                return this.on(type, fn)
            }
        }), jQuery._evalUrl = function(url) {
            return jQuery.ajax({
                url: url,
                type: "GET",
                dataType: "script",
                async: !1,
                global: !1,
                "throws": !0
            })
        }, jQuery.fn.extend({
            wrapAll: function(html) {
                if (jQuery.isFunction(html)) return this.each(function(i) {
                    jQuery(this).wrapAll(html.call(this, i))
                });
                if (this[0]) {
                    var wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(!0);
                    this[0].parentNode && wrap.insertBefore(this[0]), wrap.map(function() {
                        for (var elem = this; elem.firstChild && 1 === elem.firstChild.nodeType;) elem = elem.firstChild;
                        return elem
                    }).append(this)
                }
                return this
            },
            wrapInner: function(html) {
                return this.each(jQuery.isFunction(html) ? function(i) {
                    jQuery(this).wrapInner(html.call(this, i))
                } : function() {
                    var self = jQuery(this),
                        contents = self.contents();
                    contents.length ? contents.wrapAll(html) : self.append(html)
                })
            },
            wrap: function(html) {
                var isFunction = jQuery.isFunction(html);
                return this.each(function(i) {
                    jQuery(this).wrapAll(isFunction ? html.call(this, i) : html)
                })
            },
            unwrap: function() {
                return this.parent().each(function() {
                    jQuery.nodeName(this, "body") || jQuery(this).replaceWith(this.childNodes)
                }).end()
            }
        }), jQuery.expr.filters.hidden = function(elem) {
            return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 || !support.reliableHiddenOffsets() && "none" === (elem.style && elem.style.display || jQuery.css(elem, "display"))
        }, jQuery.expr.filters.visible = function(elem) {
            return !jQuery.expr.filters.hidden(elem)
        };
        var r20 = /%20/g,
            rbracket = /\[\]$/,
            rCRLF = /\r?\n/g,
            rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
            rsubmittable = /^(?:input|select|textarea|keygen)/i;
        jQuery.param = function(a, traditional) {
            var prefix, s = [],
                add = function(key, value) {
                    value = jQuery.isFunction(value) ? value() : null == value ? "" : value, s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value)
                };
            if (void 0 === traditional && (traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional), jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) jQuery.each(a, function() {
                add(this.name, this.value)
            });
            else
                for (prefix in a) buildParams(prefix, a[prefix], traditional, add);
            return s.join("&").replace(r20, "+")
        }, jQuery.fn.extend({
            serialize: function() {
                return jQuery.param(this.serializeArray())
            },
            serializeArray: function() {
                return this.map(function() {
                    var elements = jQuery.prop(this, "elements");
                    return elements ? jQuery.makeArray(elements) : this
                }).filter(function() {
                    var type = this.type;
                    return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type))
                }).map(function(i, elem) {
                    var val = jQuery(this).val();
                    return null == val ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {
                        return {
                            name: elem.name,
                            value: val.replace(rCRLF, "\r\n")
                        }
                    }) : {
                        name: elem.name,
                        value: val.replace(rCRLF, "\r\n")
                    }
                }).get()
            }
        }), jQuery.ajaxSettings.xhr = void 0 !== window.ActiveXObject ? function() {
            return !this.isLocal && /^(get|post|head|put|delete|options)$/i.test(this.type) && createStandardXHR() || createActiveXHR()
        } : createStandardXHR;
        var xhrId = 0,
            xhrCallbacks = {},
            xhrSupported = jQuery.ajaxSettings.xhr();
        window.ActiveXObject && jQuery(window).on("unload", function() {
            for (var key in xhrCallbacks) xhrCallbacks[key](void 0, !0)
        }), support.cors = !!xhrSupported && "withCredentials" in xhrSupported, xhrSupported = support.ajax = !!xhrSupported, xhrSupported && jQuery.ajaxTransport(function(options) {
            if (!options.crossDomain || support.cors) {
                var callback;
                return {
                    send: function(headers, complete) {
                        var i, xhr = options.xhr(),
                            id = ++xhrId;
                        if (xhr.open(options.type, options.url, options.async, options.username, options.password), options.xhrFields)
                            for (i in options.xhrFields) xhr[i] = options.xhrFields[i];
                        options.mimeType && xhr.overrideMimeType && xhr.overrideMimeType(options.mimeType), options.crossDomain || headers["X-Requested-With"] || (headers["X-Requested-With"] = "XMLHttpRequest");
                        for (i in headers) void 0 !== headers[i] && xhr.setRequestHeader(i, headers[i] + "");
                        xhr.send(options.hasContent && options.data || null), callback = function(_, isAbort) {
                            var status, statusText, responses;
                            if (callback && (isAbort || 4 === xhr.readyState))
                                if (delete xhrCallbacks[id], callback = void 0, xhr.onreadystatechange = jQuery.noop, isAbort) 4 !== xhr.readyState && xhr.abort();
                                else {
                                    responses = {}, status = xhr.status, "string" == typeof xhr.responseText && (responses.text = xhr.responseText);
                                    try {
                                        statusText = xhr.statusText
                                    } catch (e) {
                                        statusText = ""
                                    }
                                    status || !options.isLocal || options.crossDomain ? 1223 === status && (status = 204) : status = responses.text ? 200 : 404
                                }
                            responses && complete(status, statusText, responses, xhr.getAllResponseHeaders())
                        }, options.async ? 4 === xhr.readyState ? setTimeout(callback) : xhr.onreadystatechange = xhrCallbacks[id] = callback : callback()
                    },
                    abort: function() {
                        callback && callback(void 0, !0)
                    }
                }
            }
        }), jQuery.ajaxSetup({
            accepts: {
                script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
            },
            contents: {
                script: /(?:java|ecma)script/
            },
            converters: {
                "text script": function(text) {
                    return jQuery.globalEval(text), text
                }
            }
        }), jQuery.ajaxPrefilter("script", function(s) {
            void 0 === s.cache && (s.cache = !1), s.crossDomain && (s.type = "GET", s.global = !1)
        }), jQuery.ajaxTransport("script", function(s) {
            if (s.crossDomain) {
                var script, head = document.head || jQuery("head")[0] || document.documentElement;
                return {
                    send: function(_, callback) {
                        script = document.createElement("script"), script.async = !0, s.scriptCharset && (script.charset = s.scriptCharset), script.src = s.url, script.onload = script.onreadystatechange = function(_, isAbort) {
                            (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) && (script.onload = script.onreadystatechange = null, script.parentNode && script.parentNode.removeChild(script), script = null, isAbort || callback(200, "success"))
                        }, head.insertBefore(script, head.firstChild)
                    },
                    abort: function() {
                        script && script.onload(void 0, !0)
                    }
                }
            }
        });
        var oldCallbacks = [],
            rjsonp = /(=)\?(?=&|$)|\?\?/;
        jQuery.ajaxSetup({
            jsonp: "callback",
            jsonpCallback: function() {
                var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce++;
                return this[callback] = !0, callback
            }
        }), jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
            var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== !1 && (rjsonp.test(s.url) ? "url" : "string" == typeof s.data && !(s.contentType || "").indexOf("application/x-www-form-urlencoded") && rjsonp.test(s.data) && "data");
            return jsonProp || "jsonp" === s.dataTypes[0] ? (callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback, jsonProp ? s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName) : s.jsonp !== !1 && (s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName), s.converters["script json"] = function() {
                return responseContainer || jQuery.error(callbackName + " was not called"), responseContainer[0]
            }, s.dataTypes[0] = "json", overwritten = window[callbackName], window[callbackName] = function() {
                responseContainer = arguments
            }, jqXHR.always(function() {
                window[callbackName] = overwritten, s[callbackName] && (s.jsonpCallback = originalSettings.jsonpCallback, oldCallbacks.push(callbackName)), responseContainer && jQuery.isFunction(overwritten) && overwritten(responseContainer[0]), responseContainer = overwritten = void 0
            }), "script") : void 0
        }), jQuery.parseHTML = function(data, context, keepScripts) {
            if (!data || "string" != typeof data) return null;
            "boolean" == typeof context && (keepScripts = context, context = !1), context = context || document;
            var parsed = rsingleTag.exec(data),
                scripts = !keepScripts && [];
            return parsed ? [context.createElement(parsed[1])] : (parsed = jQuery.buildFragment([data], context, scripts), scripts && scripts.length && jQuery(scripts).remove(), jQuery.merge([], parsed.childNodes))
        };
        var _load = jQuery.fn.load;
        jQuery.fn.load = function(url, params, callback) {
            if ("string" != typeof url && _load) return _load.apply(this, arguments);
            var selector, response, type, self = this,
                off = url.indexOf(" ");
            return off >= 0 && (selector = jQuery.trim(url.slice(off, url.length)), url = url.slice(0, off)), jQuery.isFunction(params) ? (callback = params, params = void 0) : params && "object" == typeof params && (type = "POST"), self.length > 0 && jQuery.ajax({
                url: url,
                type: type,
                dataType: "html",
                data: params
            }).done(function(responseText) {
                response = arguments, self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText)
            }).complete(callback && function(jqXHR, status) {
                self.each(callback, response || [jqXHR.responseText, status, jqXHR])
            }), this
        }, jQuery.expr.filters.animated = function(elem) {
            return jQuery.grep(jQuery.timers, function(fn) {
                return elem === fn.elem
            }).length
        };
        var docElem = window.document.documentElement;
        jQuery.offset = {
            setOffset: function(elem, options, i) {
                var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, "position"),
                    curElem = jQuery(elem),
                    props = {};
                "static" === position && (elem.style.position = "relative"), curOffset = curElem.offset(), curCSSTop = jQuery.css(elem, "top"), curCSSLeft = jQuery.css(elem, "left"), calculatePosition = ("absolute" === position || "fixed" === position) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1, calculatePosition ? (curPosition = curElem.position(), curTop = curPosition.top, curLeft = curPosition.left) : (curTop = parseFloat(curCSSTop) || 0, curLeft = parseFloat(curCSSLeft) || 0), jQuery.isFunction(options) && (options = options.call(elem, i, curOffset)), null != options.top && (props.top = options.top - curOffset.top + curTop), null != options.left && (props.left = options.left - curOffset.left + curLeft), "using" in options ? options.using.call(elem, props) : curElem.css(props)
            }
        }, jQuery.fn.extend({
            offset: function(options) {
                if (arguments.length) return void 0 === options ? this : this.each(function(i) {
                    jQuery.offset.setOffset(this, options, i)
                });
                var docElem, win, box = {
                        top: 0,
                        left: 0
                    },
                    elem = this[0],
                    doc = elem && elem.ownerDocument;
                if (doc) return docElem = doc.documentElement, jQuery.contains(docElem, elem) ? (typeof elem.getBoundingClientRect !== strundefined && (box = elem.getBoundingClientRect()), win = getWindow(doc), {
                    top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
                    left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)
                }) : box
            },
            position: function() {
                if (this[0]) {
                    var offsetParent, offset, parentOffset = {
                            top: 0,
                            left: 0
                        },
                        elem = this[0];
                    return "fixed" === jQuery.css(elem, "position") ? offset = elem.getBoundingClientRect() : (offsetParent = this.offsetParent(), offset = this.offset(), jQuery.nodeName(offsetParent[0], "html") || (parentOffset = offsetParent.offset()), parentOffset.top += jQuery.css(offsetParent[0], "borderTopWidth", !0), parentOffset.left += jQuery.css(offsetParent[0], "borderLeftWidth", !0)), {
                        top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", !0),
                        left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", !0)
                    }
                }
            },
            offsetParent: function() {
                return this.map(function() {
                    for (var offsetParent = this.offsetParent || docElem; offsetParent && !jQuery.nodeName(offsetParent, "html") && "static" === jQuery.css(offsetParent, "position");) offsetParent = offsetParent.offsetParent;
                    return offsetParent || docElem
                })
            }
        }), jQuery.each({
            scrollLeft: "pageXOffset",
            scrollTop: "pageYOffset"
        }, function(method, prop) {
            var top = /Y/.test(prop);
            jQuery.fn[method] = function(val) {
                return access(this, function(elem, method, val) {
                    var win = getWindow(elem);
                    return void 0 === val ? win ? prop in win ? win[prop] : win.document.documentElement[method] : elem[method] : void(win ? win.scrollTo(top ? jQuery(win).scrollLeft() : val, top ? val : jQuery(win).scrollTop()) : elem[method] = val)
                }, method, val, arguments.length, null)
            }
        }), jQuery.each(["top", "left"], function(i, prop) {
            jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
                return computed ? (computed = curCSS(elem, prop), rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed) : void 0
            })
        }), jQuery.each({
            Height: "height",
            Width: "width"
        }, function(name, type) {
            jQuery.each({
                padding: "inner" + name,
                content: type,
                "": "outer" + name
            }, function(defaultExtra, funcName) {
                jQuery.fn[funcName] = function(margin, value) {
                    var chainable = arguments.length && (defaultExtra || "boolean" != typeof margin),
                        extra = defaultExtra || (margin === !0 || value === !0 ? "margin" : "border");
                    return access(this, function(elem, type, value) {
                        var doc;
                        return jQuery.isWindow(elem) ? elem.document.documentElement["client" + name] : 9 === elem.nodeType ? (doc = elem.documentElement, Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name])) : void 0 === value ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra)
                    }, type, chainable ? margin : void 0, chainable, null)
                }
            })
        }), jQuery.fn.size = function() {
            return this.length
        }, jQuery.fn.andSelf = jQuery.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function() {
            return jQuery
        });
        var _jQuery = window.jQuery,
            _$ = window.$;
        return jQuery.noConflict = function(deep) {
            return window.$ === jQuery && (window.$ = _$), deep && window.jQuery === jQuery && (window.jQuery = _jQuery), jQuery
        }, typeof noGlobal === strundefined && (window.jQuery = window.$ = jQuery), jQuery
    }),
    function($) {
        "use strict";

        function createObject(o) {
            function F() {}
            return F.prototype = o || this, new F
        }

        function pluralize(count, term) {
            return 1 == count ? term.substr(0, term.length - 1) : "" + count + " " + term
        }

        function C(key, def) {
            var c = R.locale.currencies[key] = createObject(R.locale.currency);
            for (var p in def) c[p] = def[p]
        }

        function jsonToSelect(obj) {
            var $select = $("<select>");
            for (var k in obj)
                if (obj.hasOwnProperty(k)) {
                    var v = obj[k];
                    $select.append("<option value=" + k + ">" + v + "</option>")
                }
            return $select
        }

        function cc2lcu(obj) {
            if (obj = obj || this, "string" == typeof obj) return obj.replace(/([a-z])([A-Z])/g, function(a, l, u) {
                return l + "_" + u
            }).toLowerCase();
            for (var k in obj) obj.hasOwnProperty(k)
        }

        function removeUndefined(obj) {
            var ret = {};
            for (var k in obj) {
                var v = obj[k];
                $.isPlainObject(v) ? ret[k] = removeUndefined(v) : "undefined" != typeof v && (ret[k] = v)
            }
            return ret
        }

        function wholeNumber(val) {
            return /^[0-9]+$/.test(val)
        }

        function invalidMode(e) {
            var $input = e.element,
                message = R.locale.errors[e.validation.errorKey],
                validator = e.validation.validator,
                $e = $('<div class="error">');
            $e.text(message), $e.appendTo($input.parent()), $input.parent().addClass("invalid"), $input.addClass("invalid"), $input.bind("change keyup", function(e) {
                validator($input) && ($input.parent().removeClass("invalid"), $input.removeClass("invalid"), $e.remove(), $input.unbind(e))
            })
        }

        function validationGroup(pull, success) {
            var anyErrors = !1,
                puller = {
                    field: function($form, fieldSel, validations) {
                        return validations = Array.prototype.slice.call(arguments, 2), pullField($form, fieldSel, validations, function(error) {
                            if (anyErrors || error.element.focus(), invalidMode(error), anyErrors = !0, R.settings.oneErrorPerForm) throw {
                                stopPulling: !0
                            }
                        })
                    }
                };
            try {
                pull(puller)
            } catch (e) {
                if (!e.stopPulling) throw e
            }
            anyErrors || success()
        }

        function pullField($form, fieldSel, validations, onError) {
            var $input = $form.find(fieldSel + " input");
            if (0 == $input.length && ($input = $form.find(fieldSel + " select")), 0 == $input.length) return void 0;
            for (var val = $input.val(), i = 0, l = validations.length; l > i; ++i) {
                var v = validations[i];
                if (!v.validator($input) && (onError({
                        element: $input,
                        validation: v
                    }), R.settings.oneErrorPerField)) break
            }
            return val
        }

        function V(v, k) {
            return {
                validator: v,
                errorKey: k || v.defaultErrorKey
            }
        }

        function clearServerErrors($form) {
            var $serverErrors = $form.find(".server_errors");
            $serverErrors.removeClass("any").addClass("none"), $serverErrors.empty()
        }

        function displayServerErrors($form, errors) {
            var $serverErrors = $form.find(".server_errors");
            clearServerErrors($form);
            var l = errors.length;
            if (l) {
                $serverErrors.removeClass("none").addClass("any");
                for (var i = 0; l > i; ++i) {
                    var $e = $('<div class="error">');
                    $e.text(errors[i]), $serverErrors.append($e)
                }
            }
        }

        function preFillValues($form, options, mapObject) {
            ! function recurse(preFill, mapObject, keypath) {
                if (preFill)
                    for (var k in preFill)
                        if (preFill.hasOwnProperty(k) && mapObject.hasOwnProperty(k)) {
                            var v = preFill[k],
                                selectorOrNested = mapObject[k],
                                lcuk = cc2lcu(k),
                                keypath2 = keypath ? keypath + "." + lcuk : lcuk;
                            if ("string" == typeof selectorOrNested) {
                                var $input = $form.find(selectorOrNested);
                                $input.val(v).change()
                            } else "object" == typeof selectorOrNested && recurse(v, selectorOrNested, keypath2)
                        }
            }(options, mapObject)
        }

        function initCommonForm($form, options) {
            options.collectPhone || $form.find(".phone").remove(), options.collectCompany || $form.find(".company_name").remove(), $form.delegate(".placeholder", "click", function() {
                var $li = ($(this), $(this).parent());
                $li.find("input").focus()
            }), $form.delegate("input", "change keyup init", function() {
                var $input = $(this),
                    $li = $(this).parent();
                $li.find(".placeholder").css($input.val().length > 0 ? {
                    display: "none"
                } : {
                    display: "block"
                })
            }), $form.delegate("input", "focus", function() {
                $(this).parent().addClass("focus")
            }), $form.delegate("input", "blur", function() {
                $(this).parent().removeClass("focus")
            }), $form.delegate("input", "keydown", function(e) {
                e.keyCode >= 48 && e.keyCode <= 90 && $(this).parent().find(".placeholder").hide()
            }), preFillValues($form, options, preFillMap)
        }

        function initContactInfoForm($form, options) {
            if (options.distinguishContactFromBillingInfo) {
                var $contactFirstName = $form.find(".contact_info .first_name input"),
                    $contactLastName = $form.find(".contact_info .last_name input"),
                    prevFirstName = $contactFirstName.val(),
                    prevLastName = $contactLastName.val();
                $form.find(".contact_info .first_name input").change(function() {
                    var $billingFirstName = $form.find(".billing_info .first_name input");
                    $billingFirstName.val() == prevFirstName && $billingFirstName.val($(this).val()).change(), prevFirstName = $contactFirstName.val()
                }), $form.find(".contact_info .last_name input").change(function() {
                    var $billingLastName = $form.find(".billing_info .last_name input");
                    $billingLastName.val() == prevLastName && $billingLastName.val($(this).val()).change(), prevLastName = $contactLastName.val()
                })
            } else $form.find(".billing_info .first_name, .billing_info .last_name").remove()
        }

        function initBillingInfoForm($form, options) {
            function matchKnownStateWithInput(country, stateStr) {
                var ref = knownStates[country];
                if (stateStr = $.trim(stateStr.toUpperCase()), ref.hasOwnProperty(stateStr)) return stateStr;
                for (var k in ref)
                    if (ref.hasOwnProperty(k)) {
                        var v = ref[k];
                        if (stateStr == v.toUpperCase()) return k
                    }
                return !1
            }

            function swapStateSelectOrInput(country, state) {
                var inSelectMode = $state.hasClass("select_mode");
                if ("US" == country || "CA" == country) {
                    if (!inSelectMode || prevCountry != country) {
                        var manualVal = $state.find("input").val();
                        if (void 0 != manualVal && "" != manualVal && (state = matchKnownStateWithInput(country, manualVal), !state)) return !1;
                        $state.addClass("select_mode"), $state.children().detach(), $savedStateSelect[country] = $savedStateSelect[country] || jsonToSelect(knownStates[country]), $state.append($savedStateSelect[country]), state && $state.find("select").val(state)
                    }
                } else inSelectMode && $state.empty().append($manualStateInput).removeClass("select_mode")
            }

            function niceSet($jq, v) {
                var cur = $jq.val();
                return v && "" != v ? cur && "" != cur && "-" != cur ? !1 : $jq.val(v).change() : !1
            }

            function updateMonths() {
                if ($yearSelect.val() == year) {
                    var foundSelected = !1;
                    $monthSelect.val() > month && (foundSelected = !0), $monthSelect.find("option").each(function() {
                        $(this).val() <= month ? $(this).attr("disabled", !0) : ($(this).removeAttr("disabled"), foundSelected || ($(this).attr("selected", !0), foundSelected = !0))
                    })
                } else $monthSelect.find("option").removeAttr("disabled")
            }
            var $countrySelect = $form.find(".country select"),
                $state = $form.find(".state"),
                $stateInput = $state.find("input"),
                $manualStateInput = $state.children(),
                $savedStateSelect = {},
                knownStates = R.states,
                prevCountry = $countrySelect.val();
            if (options.acceptedCards && options.acceptPaypal) {
                var $method = $form.find(".payment_method"),
                    $input = $method.find("input"),
                    $btn = $form.find("button.submit"),
                    btnText = $btn.text();
                $method.on("click", ".payment_option", function() {
                    var $opt = $(this);
                    $method.find(".selected").removeClass("selected"), $opt.addClass("selected"), $method.find("input[type=radio]:checked").prop("checked", !1), $opt.find("input[type=radio]").prop("checked", !0), $opt.is(".card_option") ? ($form.find(".credit_card").css({
                        display: "block"
                    }), $form.find(".paypal").css({
                        display: "none"
                    }), $input.val(""), $btn.text(btnText)) : $opt.is(".paypal_option") && ($form.find(".credit_card").css({
                        display: "none"
                    }), $form.find(".paypal").css({
                        display: "block"
                    }), $input.val("paypal"), $btn.text(btnText + " with PayPal"))
                }), $form.find(".payment_option").first().click()
            } else $form.find(".payment_method").removeClass("multiple"), options.acceptedCards ? ($form.find(".paypal_option").remove(), $form.find(".paypal").remove()) : options.acceptPaypal && ($form.find(".payment_method input").val("paypal"), $form.find(".card_option").remove(), $form.find(".credit_card").remove());
            if ($stateInput.bind("change keyup", function() {
                    swapStateSelectOrInput(prevCountry)
                }), $countrySelect.change(function() {
                    var country = $(this).val();
                    swapStateSelectOrInput(country), prevCountry = country
                }), options.enableGeoIP) $.ajax({
                url: R.settings.baseURL + "location",
                dataType: "jsonp",
                jsonp: "callback",
                success: function(data) {
                    data.country && (niceSet($countrySelect, data.country), swapStateSelectOrInput(data.country, data.state))
                }
            });
            else if (R.settings.country) {
                var $countryOpt = $form.find(".country option[value=" + R.settings.country + "]");
                $countryOpt.length && $countryOpt.attr("selected", !0).change()
            }
            for (var now = new Date, year = now.getFullYear(), month = now.getMonth(), $yearSelect = $form.find(".year select"), $monthSelect = $form.find(".month select"), i = year; year + 10 >= i; ++i) {
                var $yearOpt = $('<option name="' + i + '">' + i + "</option>");
                $yearOpt.appendTo($yearSelect)
            }
            $yearSelect.val(year + 1), updateMonths(), $yearSelect.change(updateMonths), "none" == options.addressRequirement ? $form.find(".address").remove() : "zip" == options.addressRequirement ? ($form.find(".address").addClass("only_zip"), $form.find(".address1, .address2, .city, .state").remove(), R.settings.VATPercent || $form.find(".country").remove()) : "zipstreet" == options.addressRequirement ? ($form.find(".address").addClass("only_zipstreet"), $form.find(".city, .state").remove(), R.settings.VATPercent || $form.find(".country").remove()) : "full" == options.addressRequirement ? $form.find(".address").addClass("full") : "only_country" == options.addressRequirement && $form.find(".address").addClass("only_country");
            var $acceptedCards = $form.find(".accepted_cards");
            if (options.acceptedCards)
                for (var a = options.acceptedCards, l = a.length, i = 0; l > i; ++i) {
                    var cardId = a[i],
                        $card = $('<div class="card ' + cardId + '">'),
                        card = R.knownCards[cardId];
                    card && card.name && $card.text(card.name), $acceptedCards.append($card)
                }
            $form.find(".card_number input").bind("change keyup", function() {
                var type = R.detectCardType($(this).val());
                type ? $acceptedCards.find(".card").each(function() {
                    $(this).toggleClass("match", $(this).hasClass(type)), $(this).toggleClass("no_match", !$(this).hasClass(type))
                }) : $acceptedCards.find(".card").removeClass("match no_match")
            })
        }

        function pullAccountFields($form, account, options, pull) {
            account.firstName = pull.field($form, ".contact_info .first_name", V(R.isNotEmpty)), account.lastName = pull.field($form, ".contact_info .last_name", V(R.isNotEmpty)), account.companyName = pull.field($form, ".contact_info .company_name"), account.email = pull.field($form, ".email", V(R.isNotEmpty), V(R.isValidEmail)), account.code = options.accountCode || options.account && (options.account.code || options.account.accountCode)
        }

        function pullBillingInfoFields($form, billingInfo, options, pull) {
            billingInfo.paymentMethod = pull.field($form, ".payment_method"), "paypal" !== billingInfo.paymentMethod && (billingInfo.firstName = pull.field($form, ".billing_info .first_name", V(R.isNotEmpty)), billingInfo.lastName = pull.field($form, ".billing_info .last_name", V(R.isNotEmpty)), billingInfo.number = pull.field($form, ".card_number", V(R.isNotEmpty), V(R.isValidCC)), billingInfo.cvv = pull.field($form, ".cvv", V(R.isNotEmpty), V(R.isValidCVV)), billingInfo.month = pull.field($form, ".month"), billingInfo.year = pull.field($form, ".year")), billingInfo.phone = pull.field($form, ".phone"), billingInfo.address1 = pull.field($form, ".address1", V(R.isNotEmpty)), billingInfo.address2 = pull.field($form, ".address2"), billingInfo.city = pull.field($form, ".city", V(R.isNotEmpty)), billingInfo.state = pull.field($form, ".state", V(R.isNotEmptyState)), billingInfo.zip = pull.field($form, ".zip", V(R.isNotEmpty)), billingInfo.country = pull.field($form, ".country", V(R.isNotEmpty))
        }

        function pullPlanQuantity($form, plan, options, pull) {
            var qty = pull.field($form, ".plan .quantity", V(R.isValidQuantity));
            plan.quantity = qty || 1
        }

        function verifyTOSChecked($form, pull) {
            pull.field($form, ".accept_tos", V(R.isChecked))
        }

        function initTOSCheck($form, options) {
            if (options.termsOfServiceURL || options.privacyPolicyURL) {
                var $tos = $form.find(".accept_tos").html(R.dom.terms_of_service);
                options.termsOfServiceURL && options.privacyPolicyURL || $tos.find("span.and").remove(), options.termsOfServiceURL ? $tos.find("a.tos_link").attr("href", options.termsOfServiceURL) : $tos.find("a.tos_link").remove(), options.privacyPolicyURL ? $tos.find("a.pp_link").attr("href", options.privacyPolicyURL) : $tos.find("a.pp_link").remove()
            } else $form.find(".accept_tos").remove()
        }
        var R = {};
        R.settings = {
            enableGeoIP: !0,
            acceptedCards: ["visa", "mastercard", "discover", "american_express"],
            oneErrorPerField: !0
        }, R.version = "2.2.9", R.dom = {}, R.Error = {
            toString: function() {
                return "RecurlyJS Error: " + this.message
            }
        }, R.raiseError = function(message) {
            var e = createObject(R.Error);
            throw e.message = message, e
        }, R.config = function(settings) {
            if ($.extend(!0, R.settings, settings), !settings.baseURL) {
                var subdomain = R.settings.subdomain || R.raiseError("company subdomain not configured");
                R.settings.baseURL = "https://" + subdomain + ".recurly.com/jsonp/" + subdomain + "/"
            }
        }, (R.Cost = function(cents) {
            this._cents = cents || 0
        }).prototype = {
            toString: function() {
                return R.formatCurrency(this.dollars())
            },
            cents: function(val) {
                return void 0 === val ? this._cents : new R.Cost(val)
            },
            dollars: function(val) {
                return void 0 === val ? this._cents / 100 : new R.Cost(100 * val)
            },
            mult: function(n) {
                return new R.Cost(this._cents * n)
            },
            add: function(n) {
                return n.cents && (n = n.cents()), new R.Cost(this._cents + n)
            },
            sub: function(n) {
                return n.cents && (n = n.cents()), new R.Cost(this._cents - n)
            }
        }, R.Cost.FREE = new R.Cost(0), (R.TimePeriod = function(length, unit) {
            this.length = length, this.unit = unit
        }).prototype = {
            toString: function() {
                return "" + pluralize(this.length, this.unit)
            },
            toDate: function() {
                var d = new Date;
                switch (this.unit) {
                    case "month":
                        d.setMonth(d.getMonth() + this.length);
                        break;
                    case "day":
                        d.setDay(d.getDay() + this.length)
                }
                return d
            },
            clone: function() {
                return new R.TimePeriod(this.length, this.unit)
            }
        }, (R.RecurringCost = function(cost, interval) {
            this.cost = cost, this.interval = interval
        }).prototype = {
            toString: function() {
                return "" + this.cost + " every " + this.interval
            },
            clone: function() {
                return new R.TimePeriod(this.length, this.unit)
            }
        }, R.RecurringCost.FREE = new R.RecurringCost(0, null), (R.RecurringCostStage = function(recurringCost, duration) {
            this.recurringCost = recurringCost, this.duration = duration
        }).prototype = {
            toString: function() {
                this.recurringCost.toString() + " for " + this.duration.toString()
            }
        }, R.locale = {}, R.locale.errors = {
            emptyField: "Required field",
            missingFullAddress: "Please enter your full address.",
            invalidEmail: "Invalid",
            invalidCC: "Invalid",
            invalidCVV: "Invalid",
            invalidCoupon: "Invalid",
            cardDeclined: "Transaction declined",
            acceptTOS: "Please accept the Terms of Service.",
            invalidQuantity: "Invalid quantity"
        }, R.locale.currencies = {}, R.locale.currency = {
            format: "%u%n",
            separator: ".",
            delimiter: ",",
            precision: 2
        }, C("USD", {
            symbol: "$"
        }), C("AUD", {
            symbol: "$"
        }), C("CAD", {
            symbol: "$"
        }), C("EUR", {
            symbol: "â‚¬"
        }), C("GBP", {
            symbol: "Â£"
        }), C("CZK", {
            symbol: "K"
        }), C("DKK", {
            symbol: "kr"
        }), C("HUF", {
            symbol: "Ft"
        }), C("JPY", {
            symbol: "Â¥"
        }), C("NOK", {
            symbol: "kr"
        }), C("NZD", {
            symbol: "$"
        }), C("PLN", {
            symbol: "z"
        }), C("SGD", {
            symbol: "$"
        }), C("SEK", {
            symbol: "kr"
        }), C("CHF", {
            symbol: "Fr"
        }), C("ZAR", {
            symbol: "R"
        }), R.settings.locale = R.locale, R.knownCards = {
            visa: {
                prefixes: [4],
                name: "Visa"
            },
            mastercard: {
                prefixes: [51, 52, 53, 54, 55],
                name: "MasterCard"
            },
            american_express: {
                prefixes: [34, 37],
                name: "American Express"
            },
            discover: {
                prefixes: [6011, 62, 64, 65],
                name: "Discover"
            },
            diners_club: {
                prefixes: [305, 36, 38],
                name: "Diners Club"
            },
            carte_blanche: {
                prefixes: [300, 301, 302, 303, 304, 305]
            },
            jcb: {
                prefixes: [35],
                name: "JCB"
            },
            enroute: {
                prefixes: [2014, 2149],
                name: "EnRoute"
            },
            maestro: {
                prefixes: [5018, 5020, 5038, 6304, 6759, 6761],
                name: "Maestro"
            },
            laser: {
                prefixes: [6304, 6706, 6771, 6709],
                name: "Laser"
            }
        }, R.detectCardType = function(cardNumber) {
            cardNumber = cardNumber.replace(/\D/g, "");
            var cards = R.knownCards;
            for (var ci in cards)
                if (cards.hasOwnProperty(ci))
                    for (var c = cards[ci], pi = 0, pl = c.prefixes.length; pl > pi; ++pi)
                        if (c.prefixes.hasOwnProperty(pi)) {
                            var p = c.prefixes[pi];
                            if (new RegExp("^" + p.toString()).test(cardNumber)) return ci
                        }
            return !1
        }, R.formatCurrency = function(num, denomination) {
            function insertDelimiters(str) {
                for (var sRegExp = new RegExp("(-?[0-9]+)([0-9]{3})"); sRegExp.test(str);) str = str.replace(sRegExp, "$1" + langspec.delimiter + "$2");
                return str
            }
            if (0 > num) {
                num = -num;
                var negative = !0
            } else var negative = !1;
            denomination = denomination || R.settings.currency || R.raiseError("currency not configured");
            var langspec = R.locale.currency,
                currencyspec = R.locale.currencies[denomination],
                str = num.toFixed(currencyspec.precision);
            "." != langspec.separator && (str = str.replace(/\./g, langspec.separator)), str = insertDelimiters(str);
            var format = langspec.format;
            return format = format.replace(/%u/g, currencyspec.symbol), format = format.replace(/%n/g, str), str = format, negative && (str = "-" + str), str
        };
        var euCountries = ["AT", "BE", "BG", "CY", "CZ", "DK", "EE", "FI", "FR", "DE", "GR", "HU", "IE", "IT", "LV", "LT", "LU", "MT", "NL", "PL", "PT", "RO", "SK", "SI", "ES", "SE", "GB"];
        R.isCountryInEU = function(country) {
            return -1 !== $.inArray(country, euCountries)
        }, R.isVATNumberApplicable = function(buyerCountry) {
            return R.settings.VATPercent ? (R.settings.country || R.raiseError("you must configure a country for VAT to work"), R.isCountryInEU(R.settings.country) || R.raiseError("you cannot charge VAT outside of the EU"), R.isCountryInEU(buyerCountry) ? !0 : !1) : !1
        }, R.isVATChargeApplicable = function(buyerCountry, vatNumber) {
            if (!R.isVATNumberApplicable(buyerCountry)) return !1;
            var sellerCountry = R.settings.country;
            return sellerCountry == buyerCountry || !vatNumber
        }, R.flattenErrors = function(obj, attr) {
            var arr = [],
                attr = attr || "";
            if ("string" == typeof obj || "number" == typeof obj || "boolean" == typeof obj) return "base" == attr ? [obj] : ["" + attr + " " + obj];
            for (var k in obj)
                if (obj.hasOwnProperty(k)) {
                    attr = parseInt(k).toString() == k ? attr : k;
                    for (var children = R.flattenErrors(obj[k], attr), i = 0, l = children.length; l > i; ++i) arr.push(children[i])
                }
            return arr
        }, R.getToken = function(response) {
            var token = response.token || "INVALIDTOKEN";
            return token
        }, R.postResult = function(url, originalResponse) {
            var token = R.getToken(originalResponse),
                form = $("<form />").hide();
            form.attr("action", url).attr("method", "POST").attr("enctype", "application/x-www-form-urlencoded"), $('<input type="hidden" />').attr({
                name: "recurly_token",
                value: token
            }).appendTo(form), $("body").append(form), form.submit()
        }, R.enforce = function(obj) {
            return {
                enforced: obj,
                hidden: !1,
                hide: function() {
                    return this.hidden = !0, this
                }
            }
        }, R.ajax = function(options) {
            return options.data = $.extend({
                js_version: R.version
            }, options.data), options.data = removeUndefined(options.data), options.data.billing_info && "paypal" == options.data.billing_info.payment_method ? R.paypal.start(options) : $.ajax(options)
        }, (R.isValidCC = function($input) {
            var v = $input.val();
            if (v = v.replace(/\D/g, ""), "" == v) return !1;
            for (var nCheck = 0, nDigit = 0, bEven = !1, n = v.length - 1; n >= 0; n--) {
                var cDigit = v.charAt(n),
                    nDigit = parseInt(cDigit, 10);
                bEven && (nDigit *= 2) > 9 && (nDigit -= 9), nCheck += nDigit, bEven = !bEven
            }
            return nCheck % 10 == 0
        }).defaultErrorKey = "invalidCC", (R.isValidEmail = function($input) {
            var v = $input.val();
            return /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(v)
        }).defaultErrorKey = "invalidEmail", (R.isValidCVV = function($input) {
            var v = $input.val();
            return (3 == v.length || 4 == v.length) && wholeNumber(v)
        }).defaultErrorKey = "invalidCVV", (R.isNotEmpty = function($input) {
            var v = $input.val();
            return !$input.is("select") || "-" != v && "--" != v ? !!v : !1
        }).defaultErrorKey = "emptyField", (R.isNotEmptyState = function($input) {
            var v = $input.val();
            return !$input.is("select") || "-" != v && "--" != v ? !0 : !1
        }).defaultErrorKey = "emptyField", (R.isChecked = function($input) {
            return $input.is(":checked")
        }).defaultErrorKey = "acceptTOS", (R.isValidQuantity = function($input) {
            return /^[0-9]*$/.test($input.val())
        }).defaultErrorKey = "invalidQuantity", R.Plan = {
            create: createObject,
            fromJSON: function(json) {
                var p = this.create();
                if (p.name = json.name, p.code = json.plan_code, p.currency = json.currency, p.cost = new R.Cost(json.unit_amount_in_cents), p.displayQuantity = json.display_quantity, p.interval = new R.TimePeriod(json.plan_interval_length, json.plan_interval_unit), json.trial_interval_length && (p.trial = new R.TimePeriod(json.trial_interval_length, json.trial_interval_unit)), json.setup_fee_in_cents && (p.setupFee = new R.Cost(json.setup_fee_in_cents)), json.vat_percentage && (R.settings.VATPercent = parseFloat(json.vat_percentage)), json.merchant_country && (R.settings.country = json.merchant_country), p.addOns = [], json.add_ons)
                    for (var l = json.add_ons.length, i = 0; l > i; ++i) {
                        var a = json.add_ons[i];
                        p.addOns.push(R.AddOn.fromJSON(a))
                    }
                return p
            },
            get: function(plan_code, currency, callback) {
                $.ajax({
                    url: R.settings.baseURL + "plans/" + plan_code + "?currency=" + currency,
                    dataType: "jsonp",
                    jsonp: "callback",
                    timeout: 1e4,
                    success: function(data) {
                        var plan = R.Plan.fromJSON(data);
                        callback(plan)
                    }
                })
            },
            createSubscription: function() {
                var s = createObject(R.Subscription);
                return s.plan = createObject(this), s.plan.quantity = 1, s.addOns = [], s
            }
        }, R.AddOn = {
            fromJSON: function(json) {
                var a = createObject(R.AddOn);
                return a.name = json.name, a.code = json.add_on_code, a.cost = new R.Cost(json.default_unit_amount_in_cents), a.displayQuantity = json.display_quantity, a
            },
            toJSON: function() {
                return {
                    name: this.name,
                    add_on_code: this.code,
                    default_unit_amount_in_cents: this.default_unit_amount_in_cents
                }
            }
        }, R.Account = {
            create: createObject,
            toJSON: function() {
                return {
                    first_name: this.firstName,
                    last_name: this.lastName,
                    company_name: this.companyName,
                    account_code: this.code,
                    email: this.email
                }
            }
        }, R.BillingInfo = {
            create: createObject,
            toJSON: function() {
                var result = {
                    first_name: this.firstName || this.account.firstName,
                    last_name: this.lastName || this.account.lastName,
                    address1: this.address1,
                    address2: this.address2,
                    city: this.city,
                    state: this.state,
                    zip: this.zip,
                    country: this.country,
                    phone: this.phone,
                    vat_number: this.vatNumber
                };
                return "paypal" == this.paymentMethod ? result.payment_method = "paypal" : $.extend(result, {
                    number: this.number,
                    verification_value: this.cvv,
                    month: this.month,
                    year: this.year
                }), result
            },
            save: function(options) {
                var json = {
                    account: this.account ? this.account.toJSON() : void 0,
                    billing_info: this.toJSON(),
                    signature: options.signature
                };
                R.ajax({
                    url: R.settings.baseURL + "accounts/" + options.accountCode + "/billing_info/update",
                    data: json,
                    dataType: "jsonp",
                    jsonp: "callback",
                    timeout: 6e4,
                    success: function(data) {
                        data.success && options.success ? options.success(data.success) : data.errors && options.error && options.error(R.flattenErrors(data.errors))
                    },
                    error: function() {
                        options.error && options.error(["Unknown error processing transaction. Please try again later."])
                    },
                    complete: options.complete || $.noop
                })
            }
        }, R.Subscription = {
            create: createObject,
            plan: R.Plan,
            addOns: [],
            calculateTotals: function() {
                var totals = {
                    stages: {}
                };
                totals.plan = this.plan.cost.mult(this.plan.quantity), totals.allAddOns = new R.Cost(0), totals.addOns = {};
                for (var l = this.addOns.length, i = 0; l > i; ++i) {
                    var a = this.addOns[i],
                        c = a.cost.mult(a.quantity);
                    totals.addOns[a.code] = c, totals.allAddOns = totals.allAddOns.add(c)
                }
                if (totals.stages.recurring = totals.plan.add(totals.allAddOns), totals.stages.now = totals.plan.add(totals.allAddOns), this.plan.trial && (totals.stages.now = R.Cost.FREE), this.plan.setupFee && (totals.stages.now = totals.stages.now.add(this.plan.setupFee)), this.coupon) {
                    var discount, beforeDiscount = totals.stages.now;
                    discount = this.coupon.discountFixed ? this.coupon.discountFixed : beforeDiscount.sub(this.plan.setupFee || 0).mult(this.coupon.discountRatio);
                    var afterDiscount = beforeDiscount.sub(discount);
                    afterDiscount.cents() < 0 && (afterDiscount = R.Cost.FREE), totals.coupon = afterDiscount.sub(beforeDiscount), totals.stages.now = afterDiscount
                }
                return this.billingInfo && R.isVATChargeApplicable(this.billingInfo.country, this.billingInfo.vatNumber) && (totals.vat = totals.stages.now.mult(R.settings.VATPercent / 100), totals.stages.now = totals.stages.now.add(totals.vat)), totals
            },
            redeemAddOn: function(addOn) {
                var redemption = addOn.createRedemption();
                return this.addOns.push(redemption), redemption
            },
            removeAddOn: function(code) {
                for (var a = this.addOns, l = a.length, i = 0; l > i; ++i)
                    if (a[i].code == code) return a.splice(i, 1)
            },
            findAddOnByCode: function(code) {
                for (var l = this.addOns.length, i = 0; l > i; ++i)
                    if (this.addOns[i].code == code) return this.addOns[i];
                return !1
            },
            toJSON: function() {
                for (var json = {
                        plan_code: this.plan.code,
                        quantity: this.plan.quantity,
                        currency: this.plan.currency,
                        coupon_code: this.coupon ? this.coupon.code : void 0,
                        add_ons: []
                    }, i = 0, l = this.addOns.length, a = json.add_ons, b = this.addOns; l > i; ++i) a.push({
                    add_on_code: b[i].code,
                    quantity: b[i].quantity
                });
                return json
            },
            save: function(options) {
                var json = {
                    subscription: this.toJSON(),
                    account: this.account.toJSON(),
                    billing_info: this.billingInfo.toJSON(),
                    signature: options.signature
                };
                R.ajax({
                    url: R.settings.baseURL + "subscribe",
                    data: json,
                    dataType: "jsonp",
                    jsonp: "callback",
                    timeout: 6e4,
                    success: function(data) {
                        if (data.success && options.success) options.success(data.success);
                        else if (data.errors && options.error) {
                            var errorCode = data.errors.error_code;
                            delete data.errors.error_code, options.error(R.flattenErrors(data.errors), errorCode)
                        }
                    },
                    error: function() {
                        options.error && options.error(["Unknown error processing transaction. Please try again later."])
                    },
                    complete: options.complete
                })
            }
        }, R.AddOn.createRedemption = function(qty) {
            var r = createObject(this);
            return r.quantity = qty || 1, r
        }, R.Coupon = {
            fromJSON: function(json) {
                var c = createObject(R.Coupon);
                return json.discount_in_cents ? c.discountFixed = new R.Cost(json.discount_in_cents) : json.discount_percent && (c.discountRatio = json.discount_percent / 100), c.description = json.description || "", c
            },
            toJSON: function() {}
        }, R.Subscription.getCoupon = function(couponCode, successCallback, errorCallback) {
            R.settings.baseURL || R.raiseError("Company subdomain not configured");
            var couponCurrencyQuery = void 0 !== R.settings.currency ? "?currency=" + R.settings.currency : "";
            return R.ajax({
                url: R.settings.baseURL + "plans/" + this.plan.code + "/coupons/" + couponCode + couponCurrencyQuery,
                dataType: "jsonp",
                jsonp: "callback",
                timeout: 1e4,
                success: function(data) {
                    if (data.valid) {
                        var coupon = R.Coupon.fromJSON(data);
                        coupon.code = couponCode, successCallback(coupon)
                    } else errorCallback()
                },
                error: function() {
                    errorCallback()
                }
            })
        }, R.Transaction = {
            create: createObject,
            save: function(options) {
                var json = {
                    account: this.account ? this.account.toJSON() : void 0,
                    billing_info: this.billingInfo.toJSON(),
                    signature: options.signature
                };
                R.ajax({
                    url: R.settings.baseURL + "transactions/create",
                    data: json,
                    dataType: "jsonp",
                    jsonp: "callback",
                    timeout: 6e4,
                    success: function(data) {
                        data.success && options.success ? options.success(data.success) : data.errors && options.error && options.error(R.flattenErrors(data.errors))
                    },
                    error: function() {
                        options.error && options.error(["Unknown error processing transaction. Please try again later."])
                    },
                    complete: options.complete || $.noop
                })
            }
        }, R.UserError = {};
        var preFillMap = {
            account: {
                firstName: ".contact_info > .full_name > .first_name > input",
                lastName: ".contact_info > .full_name > .last_name > input",
                email: ".contact_info > .email > input",
                phone: ".contact_info > .phone > input",
                companyName: ".contact_info > .company_name > input"
            },
            billingInfo: {
                firstName: ".billing_info > .credit_card > .first_name > input",
                lastName: ".billing_info > .credit_card > .last_name > input",
                address1: ".billing_info > .address > .address1 > input",
                address2: ".billing_info > .address > .address2 > input",
                country: ".billing_info > .address > .country > select",
                city: ".billing_info > .address > .city > input",
                state: ".billing_info > .address > .state_zip > .state > input",
                zip: ".billing_info > .address > .zip > input",
                vatNumber: ".billing_info > .vat_number > input",
                cardNumber: ".billing_info > .credit_card > .card_cvv > .card_number > input",
                CVV: ".billing_info > .credit_card > .card_cvv > .cvv  > input"
            },
            subscription: {
                couponCode: ".subscription > .coupon > .coupon_code > input",
                quantity: ".subscription > .plan > .quantity > input"
            }
        };
        R.buildBillingInfoForm = R.buildBillingInfoUpdateForm = function(options) {
            var defaults = {
                addressRequirement: "full",
                collectContactInfo: !1,
                distinguishContactFromBillingInfo: !0
            };
            options.successHandler = options.successHandler || options.afterUpdate, options = $.extend(createObject(R.settings), defaults, options), options.accountCode || R.raiseError("accountCode missing"), options.signature || R.raiseError("signature missing");
            var billingInfo = R.BillingInfo.create(),
                account = R.Account.create();
            billingInfo.account = account;
            var $form = $(R.dom.update_billing_info_form);
            options.collectContactInfo ? $form.find(".contact_info").html(R.dom.contact_info_fields) : $form.find(".contact_info").remove(), $form.find(".billing_info").html(R.dom.billing_info_fields), initCommonForm($form, options), initContactInfoForm($form, options), initBillingInfoForm($form, options), $form.submit(function(e) {
                e.preventDefault(), clearServerErrors($form), $form.find(".error").remove(), $form.find(".invalid").removeClass("invalid"), validationGroup(function(puller) {
                    pullBillingInfoFields($form, billingInfo, options, puller), pullAccountFields($form, account, options, puller)
                }, function() {
                    $form.addClass("submitting");
                    var prevText = $form.find("button.submit").text();
                    $form.find("button.submit").attr("disabled", !0).text(""), billingInfo.save({
                        signature: options.signature,
                        distinguishContactFromBillingInfo: options.distinguishContactFromBillingInfo,
                        accountCode: options.accountCode,
                        success: function(response) {
                            if (options.successHandler && options.successHandler(R.getToken(response)), options.successURL) {
                                var url = options.successURL;
                                R.postResult(url, response, options)
                            }
                        },
                        error: function(errors) {
                            options.onError && options.onError(errors) || displayServerErrors($form, errors)
                        },
                        complete: function() {
                            $form.removeClass("submitting"), $form.find("button.submit").removeAttr("disabled").text(prevText)
                        }
                    })
                })
            }), options.beforeInject && options.beforeInject($form.get(0)), $(function() {
                var $container = $(options.target);
                $container.html($form), options.afterInject && options.afterInject($form.get(0))
            })
        }, R.buildTransactionForm = function(options) {
            var defaults = {
                addressRequirement: "full",
                distinguishContactFromBillingInfo: !0,
                collectContactInfo: !0
            };
            options.successHandler = options.successHandler || options.afterPay, options = $.extend(createObject(R.settings), defaults, options), options.collectContactInfo || options.accountCode || R.raiseError("collectContactInfo is false, but no accountCode provided"), options.signature || R.raiseError("signature missing");
            var billingInfo = R.BillingInfo.create(),
                account = R.Account.create(),
                transaction = R.Transaction.create();
            billingInfo.account = account, transaction.account = account, transaction.billingInfo = billingInfo, transaction.currency = options.currency, transaction.cost = new R.Cost(options.amountInCents);
            var $form = $(R.dom.one_time_transaction_form);
            options.collectContactInfo ? $form.find(".contact_info").html(R.dom.contact_info_fields) : $form.find(".contact_info").remove(), $form.find(".billing_info").html(R.dom.billing_info_fields), initCommonForm($form, options), initBillingInfoForm($form, options), initContactInfoForm($form, options), initTOSCheck($form, options), $form.submit(function(e) {
                e.preventDefault(), clearServerErrors($form), $form.find(".error").remove(), $form.find(".invalid").removeClass("invalid"), validationGroup(function(puller) {
                    pullAccountFields($form, account, options, puller), pullBillingInfoFields($form, billingInfo, options, puller), verifyTOSChecked($form, puller)
                }, function() {
                    $form.addClass("submitting");
                    var prevText = $form.find("button.submit").text();
                    $form.find("button.submit").attr("disabled", !0).text(""), transaction.save({
                        signature: options.signature,
                        accountCode: options.accountCode,
                        success: function(response) {
                            if (options.successHandler && options.successHandler(R.getToken(response)), options.successURL) {
                                var url = options.successURL;
                                R.postResult(url, response, options)
                            }
                        },
                        error: function(errors) {
                            options.onError && options.onError(errors) || displayServerErrors($form, errors)
                        },
                        complete: function() {
                            $form.removeClass("submitting"), $form.find("button.submit").removeAttr("disabled").text(prevText)
                        }
                    })
                })
            }), options.beforeInject && options.beforeInject($form.get(0)), $(function() {
                var $container = $(options.target);
                $container.html($form), options.afterInject && options.afterInject($form.get(0))
            })
        }, R.buildSubscriptionForm = function(options) {
            function gotPlan(plan) {
                function updateTotals() {
                    var totals = subscription.calculateTotals();
                    $form.find(".plan .recurring_cost .cost").text("" + totals.plan), $form.find(".due_now .cost").text("" + totals.stages.now), $form.find(".coupon .discount").text("" + (totals.coupon || "")), $form.find(".vat .cost").text("" + (totals.vat || "")), $form.find(".add_ons .add_on").each(function() {
                        var addOn = $(this).data("add_on");
                        if ($(this).hasClass("selected")) {
                            var cost = totals.addOns[addOn.code];
                            $(this).find(".cost").text("+ " + cost)
                        } else $(this).find(".cost").text("+ " + addOn.cost)
                    })
                }

                function updateCoupon() {
                    var code = $coupon.find("input").val();
                    if (code != lastCode) {
                        if (lastCode = code, !code) return $coupon.removeClass("invalid").removeClass("valid"), $coupon.find(".description").text(""), subscription.coupon = void 0, void updateTotals();
                        $coupon.addClass("checking"), subscription.getCoupon(code, function(coupon) {
                            $coupon.removeClass("checking"), subscription.coupon = coupon, $coupon.removeClass("invalid").addClass("valid"), $coupon.find(".description").text(coupon.description), updateTotals()
                        }, function() {
                            subscription.coupon = void 0, $coupon.removeClass("checking"), $coupon.removeClass("valid").addClass("invalid"), $coupon.find(".description").text(R.locale.errors.invalidCoupon), updateTotals()
                        })
                    }
                }

                function showHideVAT() {
                    var buyerCountry = $form.find(".country select").val(),
                        vatNumberApplicable = R.isVATNumberApplicable(buyerCountry);
                    $vatNumber.toggleClass("applicable", vatNumberApplicable), $vatNumber.toggleClass("inapplicable", !vatNumberApplicable);
                    var vatNumber = $vatNumberInput.val(),
                        chargeApplicable = R.isVATChargeApplicable(buyerCountry, vatNumber);
                    $vat.toggleClass("applicable", chargeApplicable), $vat.toggleClass("inapplicable", !chargeApplicable)
                }
                options.filterPlan && (plan = options.filterPlan(plan) || plan);
                var subscription = plan.createSubscription(),
                    account = R.Account.create(),
                    billingInfo = R.BillingInfo.create();
                subscription.account = account, subscription.billingInfo = billingInfo, billingInfo.account = account, billingInfo.subscription = subscription, options.filterSubscription && (subscription = options.filterSubscription(subscription) || subscription), plan.displayQuantity || $form.find(".plan .quantity").remove(), plan.setupFee ? ($form.find(".subscription").addClass("with_setup_fee"), $form.find(".plan .setup_fee .cost").text("" + plan.setupFee)) : $form.find(".plan .setup_fee").remove(), plan.trial ? ($form.find(".subscription").addClass("with_trial"), $form.find(".plan .free_trial").text("First " + plan.trial + " free")) : $form.find(".plan .free_trial").remove(), $form.find(".plan .quantity input").bind("change keyup", function() {
                    subscription.plan.quantity = parseInt($(this).val(), 10) || 1, updateTotals()
                }), $form.find(".plan .name").text(plan.name), $form.find(".plan .recurring_cost .cost").text("" + plan.cost), $form.find(".plan .recurring_cost .interval").text("every " + plan.interval);
                var $addOnsList = $form.find(".add_ons");
                if (options.enableAddOns) {
                    var l = plan.addOns.length;
                    if (l) {
                        $addOnsList.removeClass("none").addClass("any");
                        for (var i = 0; l > i; ++i) {
                            var addOn = plan.addOns[i],
                                classAttr = "add_on add_on_" + addOn.code + (i % 2 ? " even" : " odd");
                            0 == i && (classAttr += " first"), i == l - 1 && (classAttr += " last");
                            var $addOn = $('<div class="' + classAttr + '"><div class="name">' + addOn.name + '</div><div class="field quantity"><div class="placeholder">Qty</div><input type="text" value="1"></div><div class="cost"/></div>');
                            addOn.displayQuantity || $addOn.find(".quantity").remove(), $addOn.data("add_on", addOn), $addOn.appendTo($addOnsList)
                        }
                        $addOnsList.delegate(".quantity input", "change keyup recalculate", function() {
                            var $qty = $(this),
                                $addOn = $qty.closest(".add_on"),
                                addOn = $addOn.data("add_on"),
                                newQty = "" === $qty.val() ? 1 : parseInt($qty.val(), 10);
                            subscription.findAddOnByCode(addOn.code).quantity = newQty > 0 ? newQty : 0, updateTotals()
                        }), $addOnsList.delegate(".quantity input", "blur", function() {
                            var $qty = $(this),
                                $addOn = $qty.closest(".add_on"),
                                newQty = parseInt($qty.val(), 10);
                            1 > newQty && $qty.trigger("recalculate"), 0 === newQty && $addOn.trigger("actuate")
                        }), $addOnsList.bind("selectstart", function(e) {
                            $(e.target).is(".add_on") && e.preventDefault()
                        }), $addOnsList.delegate(".add_on", "click actuate", function(e) {
                            if (!$(e.target).closest(".quantity").length) {
                                var selected = !$(this).hasClass("selected");
                                $(this).toggleClass("selected", selected);
                                var addOn = $(this).data("add_on");
                                if (selected) {
                                    var sa = subscription.redeemAddOn(addOn),
                                        $qty = $(this).find(".quantity input"),
                                        qty = parseInt($qty.val(), 10);
                                    (1 > qty || isNaN(qty)) && (qty = 1, $qty.val(qty)), sa.quantity = qty, $qty.focus()
                                } else subscription.removeAddOn(addOn.code);
                                updateTotals()
                            }
                        }), $addOnsList.find("input").trigger("init")
                    }
                } else $addOnsList.remove();
                var $coupon = $form.find(".coupon"),
                    lastCode = null;
                options.enableCoupons ? ($coupon.find("input").bind("keyup change", function() {}), $coupon.find("input").keypress(function(e) {
                    13 == e.charCode && (e.preventDefault(), updateCoupon())
                }), $coupon.find(".check").click(function() {
                    updateCoupon()
                }), $coupon.find("input").blur(function() {
                    $coupon.find(".check").click()
                })) : $coupon.remove();
                var $vat = $form.find(".vat"),
                    $vatNumber = $form.find(".vat_number"),
                    $vatNumberInput = $vatNumber.find("input");
                $vat.find(".title").text("VAT at " + R.settings.VATPercent + "%"), $form.find(".country select").change(function() {
                    billingInfo.country = $(this).val(), updateTotals(), showHideVAT()
                }).change(), $vatNumberInput.bind("keyup change", function() {
                    billingInfo.vatNumber = $(this).val(), updateTotals(), showHideVAT()
                }), $form.submit(function(e) {
                    e.preventDefault(), clearServerErrors($form), $form.find(".error").remove(), $form.find(".invalid").removeClass("invalid"), validationGroup(function(puller) {
                        pullPlanQuantity($form, subscription.plan, options, puller), pullAccountFields($form, account, options, puller), pullBillingInfoFields($form, billingInfo, options, puller), verifyTOSChecked($form, puller)
                    }, function() {
                        $form.addClass("submitting");
                        var prevText = $form.find("button.submit").text();
                        $form.find("button.submit").attr("disabled", !0).text(""), subscription.save({
                            signature: options.signature,
                            success: function(response) {
                                if (options.successHandler && options.successHandler(R.getToken(response)), options.successURL) {
                                    var url = options.successURL;
                                    R.postResult(url, response, options)
                                }
                            },
                            error: function(errors) {
                                options.onError && options.onError(errors) || displayServerErrors($form, errors)
                            },
                            complete: function() {
                                $form.removeClass("submitting"), $form.find("button.submit").removeAttr("disabled").text(prevText)
                            }
                        })
                    })
                }), updateCoupon(), updateTotals(), options.beforeInject && options.beforeInject($form.get(0)), $(function() {
                    var $container = $(options.target);
                    $container.html($form), options.afterInject && options.afterInject($form.get(0))
                })
            }
            var defaults = {
                enableAddOns: !0,
                enableCoupons: !0,
                addressRequirement: "full",
                collectContactInfo: !0,
                distinguishContactFromBillingInfo: !1
            };
            options.successHandler = options.successHandler || options.afterSubscribe, options = $.extend(createObject(R.settings), defaults, options), options.signature || R.raiseError("signature missing");
            var $form = $(R.dom.subscribe_form);
            options.collectContactInfo ? $form.find(".contact_info").html(R.dom.contact_info_fields) : $form.find(".contact_info").remove(), $form.find(".billing_info").html(R.dom.billing_info_fields), options.planCode ? R.Plan.get(options.planCode, options.currency, gotPlan) : options.plan && gotPlan(options.plan), initCommonForm($form, options), initContactInfoForm($form, options), initBillingInfoForm($form, options), initTOSCheck($form, options)
        }, R.paypal = {
            start: function(opts) {
                function finish(result) {
                    try {
                        popup.close()
                    } finally {
                        opts.success(result), opts.complete(), $(window).unbind("message", handleMessage), clearInterval(interval)
                    }
                }

                function handleMessage(e) {
                    var api = document.createElement("a");
                    api.href = R.settings.baseURL;
                    var origin = api.protocol + "//" + api.host.replace(/:\d+$/, "");
                    e.originalEvent.origin == origin && finish(e.originalEvent.data)
                }
                var originalWindowName = window.name;
                originalWindowName.indexOf("recurly_result") > -1 && (window.name = "", originalWindowName = "");
                var data = $.extend(opts.data, {
                        post_message: !0,
                        referer: window.location.href
                    }),
                    url = opts.url + "?" + $.param(data),
                    popup = window.open(url, "recurly_paypal", "menubar=1,resizable=1");
                window.popup = popup, $(window).on("message", handleMessage);
                var interval = setInterval(function() {
                    var decoded = decodeURIComponent(window.name),
                        match = decoded.match(/recurly_result=(.*)[&$]?/),
                        result = match && $.parseJSON(match[1]);
                    result && (finish(result), window.name = originalWindowName)
                }, 1e3)
            }
        }, R.states = {}, R.states.US = {
            "-": "Select State",
            "--": "------------",
            AL: "Alabama",
            AK: "Alaska",
            AS: "American Samoa",
            AZ: "Arizona",
            AR: "Arkansas",
            AA: "Armed Forces Americas",
            AE: "Armed Forces Europe, Middle East, &amp; Canada",
            AP: "Armed Forces Pacific",
            CA: "California",
            CO: "Colorado",
            CT: "Connecticut",
            DE: "Delaware",
            DC: "District of Columbia",
            FM: "Federated States of Micronesia",
            FL: "Florida",
            GA: "Georgia",
            GU: "Guam",
            HI: "Hawaii",
            ID: "Idaho",
            IL: "Illinois",
            IN: "Indiana",
            IA: "Iowa",
            KS: "Kansas",
            KY: "Kentucky",
            LA: "Louisiana",
            ME: "Maine",
            MH: "Marshall Islands",
            MD: "Maryland",
            MA: "Massachusetts",
            MI: "Michigan",
            MN: "Minnesota",
            MS: "Mississippi",
            MO: "Missouri",
            MT: "Montana",
            NE: "Nebraska",
            NV: "Nevada",
            NH: "New Hampshire",
            NJ: "New Jersey",
            NM: "New Mexico",
            NY: "New York",
            NC: "North Carolina",
            ND: "North Dakota",
            MP: "Northern Mariana Islands",
            OH: "Ohio",
            OK: "Oklahoma",
            OR: "Oregon",
            PW: "Palau",
            PA: "Pennsylvania",
            PR: "Puerto Rico",
            RI: "Rhode Island",
            SC: "South Carolina",
            SD: "South Dakota",
            TN: "Tennessee",
            TX: "Texas",
            UT: "Utah",
            VT: "Vermont",
            VI: "Virgin Islands",
            VA: "Virginia",
            WA: "Washington",
            WV: "West Virginia",
            WI: "Wisconsin",
            WY: "Wyoming"
        }, R.states.CA = {
            "-": "Select State",
            "--": "------------",
            AB: "Alberta",
            BC: "British Columbia",
            MB: "Manitoba",
            NB: "New Brunswick",
            NL: "Newfoundland",
            NT: "Northwest Territories",
            NS: "Nova Scotia",
            NU: "Nunavut",
            ON: "Ontario",
            PE: "Prince Edward Island",
            QC: "Quebec",
            SK: "Saskatchewan",
            YT: "Yukon Territory"
        }, R.dom.contact_info_fields = '<div class="title">Contact Info</div><div class="full_name"><div class="field first_name"><div class="placeholder">First Name </div><input ngFocus autofocus="autofocus" type="text"/></div><div class="field last_name"><div class="placeholder">Last Name </div><input type="text"/></div></div><div class="field email"><div class="placeholder">Email </div><input type="text"/></div><div class="field phone"><div class="placeholder">Phone Number</div><input type="text"/></div><div class="field company_name"><div class="placeholder">Company/Organization Name</div><input type="text"/></div>', R.dom.billing_info_fields = '<div class="title">Billing Info</div><div class="payment_method multiple"><input type="hidden"/><div class="payment_option card_option selected"><input type="radio" name="payment_method" value=""/><div class="accepted_cards"></div></div><div class="payment_option paypal_option"><input type="radio" name="payment_method" value="paypal"/><div class="logo"></div></div></div><div class="credit_card"><div class="field first_name"><div class="placeholder">First Name</div><input type="text"/></div><div class="field last_name"><div class="placeholder">Last Name</div><input type="text"/></div><div class="card_cvv"><div class="field card_number"><div class="placeholder">Credit Card Number</div><input type="text"/></div><div class="field cvv"><div class="placeholder">CVV </div><input type="text"/></div></div><div class="field expires"><div class="title">Expires:</div><div class="month"><div class="icon-down"></div><select><option value="1">01 - January</option><option value="2">02 - February</option><option value="3">03 - March</option><option value="4">04 - April</option><option value="5">05 - May</option><option value="6">06 - June</option><option value="7">07 - July</option><option value="8">08 - August</option><option value="9">09 - September</option><option value="10">10 - October</option><option value="11">11 - November</option><option value="12">12 - December</option></select></div><div class="year"><div class="icon-down"></div><select></select></div></div></div><div class="address"><div class="field address1"><div class="placeholder">Address</div><input type="text"/></div><div class="field address2"><div class="placeholder">Apt/Suite</div><input type="text"/></div><div class="field city"><div class="placeholder">City</div><input type="text"/></div><div class="field zip"><div class="placeholder">Zip/Postal</div><input type="text"/></div><div class="field country"><div class="icon-down"></div><select><option value="-">Select Country</option><option value="-">--------------</option><option value="AF">Afghanistan</option><option value="AL">Albania</option><option value="DZ">Algeria</option><option value="AS">American Samoa</option><option value="AD">Andorra</option><option value="AO">Angola</option><option value="AI">Anguilla</option><option value="AQ">Antarctica</option><option value="AG">Antigua and Barbuda</option><option value="AR">Argentina</option><option value="AM">Armenia</option><option value="AW">Aruba</option><option value="AC">Ascension Island</option><option value="AU">Australia</option><option value="AT">Austria</option><option value="AZ">Azerbaijan</option><option value="BS">Bahamas</option><option value="BH">Bahrain</option><option value="BD">Bangladesh</option><option value="BB">Barbados</option><option value="BE">Belgium</option><option value="BZ">Belize</option><option value="BJ">Benin</option><option value="BM">Bermuda</option><option value="BT">Bhutan</option><option value="BO">Bolivia</option><option value="BA">Bosnia and Herzegovina</option><option value="BW">Botswana</option><option value="BV">Bouvet Island</option><option value="BR">Brazil</option><option value="BQ">British Antarctic Territory</option><option value="IO">British Indian Ocean Territory</option><option value="VG">British Virgin Islands</option><option value="BN">Brunei</option><option value="BG">Bulgaria</option><option value="BF">Burkina Faso</option><option value="BI">Burundi</option><option value="KH">Cambodia</option><option value="CM">Cameroon</option><option value="CA">Canada</option><option value="IC">Canary Islands</option><option value="CT">Canton and Enderbury Islands</option><option value="CV">Cape Verde</option><option value="KY">Cayman Islands</option><option value="CF">Central African Republic</option><option value="EA">Ceuta and Melilla</option><option value="TD">Chad</option><option value="CL">Chile</option><option value="CN">China</option><option value="CX">Christmas Island</option><option value="CP">Clipperton Island</option><option value="CC">Cocos [Keeling] Islands</option><option value="CO">Colombia</option><option value="KM">Comoros</option><option value="CD">Congo [DRC]</option><option value="CK">Cook Islands</option><option value="CR">Costa Rica</option><option value="HR">Croatia</option><option value="CU">Cuba</option><option value="CY">Cyprus</option><option value="CZ">Czech Republic</option><option value="DK">Denmark</option><option value="DG">Diego Garcia</option><option value="DJ">Djibouti</option><option value="DM">Dominica</option><option value="DO">Dominican Republic</option><option value="NQ">Dronning Maud Land</option><option value="TL">East Timor</option><option value="EC">Ecuador</option><option value="EG">Egypt</option><option value="SV">El Salvador</option><option value="EE">Estonia</option><option value="ET">Ethiopia</option><option value="FK">Falkland Islands [Islas Malvinas]</option><option value="FO">Faroe Islands</option><option value="FJ">Fiji</option><option value="FI">Finland</option><option value="FR">France</option><option value="GF">French Guiana</option><option value="PF">French Polynesia</option><option value="TF">French Southern Territories</option><option value="FQ">French Southern and Antarctic Territories</option><option value="GA">Gabon</option><option value="GM">Gambia</option><option value="GE">Georgia</option><option value="DE">Germany</option><option value="GH">Ghana</option><option value="GI">Gibraltar</option><option value="GR">Greece</option><option value="GL">Greenland</option><option value="GD">Grenada</option><option value="GP">Guadeloupe</option><option value="GU">Guam</option><option value="GT">Guatemala</option><option value="GG">Guernsey</option><option value="GW">Guinea-Bissau</option><option value="GY">Guyana</option><option value="HT">Haiti</option><option value="HM">Heard Island and McDonald Islands</option><option value="HN">Honduras</option><option value="HK">Hong Kong</option><option value="HU">Hungary</option><option value="IS">Iceland</option><option value="IN">India</option><option value="ID">Indonesia</option><option value="IE">Ireland</option><option value="IM">Isle of Man</option><option value="IL">Israel</option><option value="IT">Italy</option><option value="JM">Jamaica</option><option value="JP">Japan</option><option value="JE">Jersey</option><option value="JT">Johnston Island</option><option value="JO">Jordan</option><option value="KZ">Kazakhstan</option><option value="KE">Kenya</option><option value="KI">Kiribati</option><option value="KW">Kuwait</option><option value="KG">Kyrgyzstan</option><option value="LA">Laos</option><option value="LV">Latvia</option><option value="LS">Lesotho</option><option value="LY">Libya</option><option value="LI">Liechtenstein</option><option value="LT">Lithuania</option><option value="LU">Luxembourg</option><option value="MO">Macau</option><option value="MK">Macedonia [FYROM]</option><option value="MG">Madagascar</option><option value="MW">Malawi</option><option value="MY">Malaysia</option><option value="MV">Maldives</option><option value="ML">Mali</option><option value="MT">Malta</option><option value="MH">Marshall Islands</option><option value="MQ">Martinique</option><option value="MR">Mauritania</option><option value="MU">Mauritius</option><option value="YT">Mayotte</option><option value="FX">Metropolitan France</option><option value="MX">Mexico</option><option value="FM">Micronesia</option><option value="MI">Midway Islands</option><option value="MD">Moldova</option><option value="MC">Monaco</option><option value="MN">Mongolia</option><option value="ME">Montenegro</option><option value="MS">Montserrat</option><option value="MA">Morocco</option><option value="MZ">Mozambique</option><option value="NA">Namibia</option><option value="NR">Nauru</option><option value="NP">Nepal</option><option value="NL">Netherlands</option><option value="AN">Netherlands Antilles</option><option value="NT">Neutral Zone</option><option value="NC">New Caledonia</option><option value="NZ">New Zealand</option><option value="NI">Nicaragua</option><option value="NE">Niger</option><option value="NG">Nigeria</option><option value="NU">Niue</option><option value="NF">Norfolk Island</option><option value="VD">North Vietnam</option><option value="MP">Northern Mariana Islands</option><option value="NO">Norway</option><option value="OM">Oman</option><option value="QO">Outlying Oceania</option><option value="PC">Pacific Islands Trust Territory</option><option value="PK">Pakistan</option><option value="PW">Palau</option><option value="PS">Palestinian Territories</option><option value="PA">Panama</option><option value="PZ">Panama Canal Zone</option><option value="PY">Paraguay</option><option value="YD">People\'s Democratic Republic of Yemen</option><option value="PE">Peru</option><option value="PH">Philippines</option><option value="PN">Pitcairn Islands</option><option value="PL">Poland</option><option value="PT">Portugal</option><option value="PR">Puerto Rico</option><option value="QA">Qatar</option><option value="RO">Romania</option><option value="RU">Russia</option><option value="RW">Rwanda</option><option value="RE">RÃ©union</option><option value="BL">Saint BarthÃ©lemy</option><option value="SH">Saint Helena</option><option value="KN">Saint Kitts and Nevis</option><option value="LC">Saint Lucia</option><option value="MF">Saint Martin</option><option value="PM">Saint Pierre and Miquelon</option><option value="VC">Saint Vincent and the Grenadines</option><option value="WS">Samoa</option><option value="SM">San Marino</option><option value="SA">Saudi Arabia</option><option value="SN">Senegal</option><option value="RS">Serbia</option><option value="CS">Serbia and Montenegro</option><option value="SC">Seychelles</option><option value="SL">Sierra Leone</option><option value="SG">Singapore</option><option value="SK">Slovakia</option><option value="SI">Slovenia</option><option value="SB">Solomon Islands</option><option value="ZA">South Africa</option><option value="GS">South Georgia and the South Sandwich Islands</option><option value="KR">South Korea</option><option value="ES">Spain</option><option value="LK">Sri Lanka</option><option value="SR">Suriname</option><option value="SJ">Svalbard and Jan Mayen</option><option value="SZ">Swaziland</option><option value="SE">Sweden</option><option value="CH">Switzerland</option><option value="ST">SÃ£o TomÃ© and PrÃ­ncipe</option><option value="TW">Taiwan</option><option value="TJ">Tajikistan</option><option value="TZ">Tanzania</option><option value="TH">Thailand</option><option value="TG">Togo</option><option value="TK">Tokelau</option><option value="TO">Tonga</option><option value="TT">Trinidad and Tobago</option><option value="TA">Tristan da Cunha</option><option value="TN">Tunisia</option><option value="TR">Turkey</option><option value="TM">Turkmenistan</option><option value="TC">Turks and Caicos Islands</option><option value="TV">Tuvalu</option><option value="UM">U.S. Minor Outlying Islands</option><option value="PU">U.S. Miscellaneous Pacific Islands</option><option value="VI">U.S. Virgin Islands</option><option value="UG">Uganda</option><option value="UA">Ukraine</option><option value="AE">United Arab Emirates</option><option value="GB">United Kingdom</option><option value="US">United States</option><option value="UY">Uruguay</option><option value="UZ">Uzbekistan</option><option value="VU">Vanuatu</option><option value="VA">Vatican City</option><option value="VE">Venezuela</option><option value="VN">Vietnam</option><option value="WK">Wake Island</option><option value="WF">Wallis and Futuna</option><option value="EH">Western Sahara</option><option value="YE">Yemen</option><option value="ZM">Zambia</option><option value="AX">Ã…land Islands</option></select></div></div><div class="field vat_number"><div class="placeholder">VAT Number</div><input type="text"/></div><div class="paypal"><div class="paypal_message">You will be taken to PayPal to authorize a billing agreement.<br><br>Please make sure pop-ups aren\'t blocked.</div></div>', R.dom.subscribe_form = '<form class="recurly subscribe"><!--[if lt IE 7]><div class="iefail"><div class="chromeframe"><p class="blast">Your browser is not supported by Recurly.js.</p><p><a href="http://browsehappy.com/">Upgrade to a different browser</a></p><p>or</p><p><a href="http://www.google.com/chromeframe/?redirect=true">install Google Chrome Frame</a></p><p>to use this site.</p></div></div><![endif]--><div class="subscription"><div class="plan"><div class="name"></div><div class="field quantity"><div class="placeholder">Qty</div><input type="text"/></div><div class="recurring_cost"><div class="cost"></div><div class="interval"></div></div><div class="free_trial"></div><div class="setup_fee"><div class="title">Setup Fee</div><div class="cost"></div></div></div><div class="add_ons none"></div><div class="coupon"><div class="coupon_code field"><div class="placeholder">Coupon Code</div><input type="text" class="coupon_code"/></div><div class="check"></div><div class="description"></div><div class="discount"></div></div><div class="vat"><div class="title">VAT</div><div class="cost"></div></div></div><div class="due_now"><div class="title">Order Total</div><div class="cost"></div></div><div class="server_errors none"></div><div class="contact_info"></div><div class="billing_info"></div><div class="accept_tos"></div><div class="footer"><button type="submit" class="submit btn-green">Subscribe</button></div></form>', R.dom.update_billing_info_form = '<form class="recurly update_billing_info"><div class="server_errors none"></div><div class="contact_info"></div><div class="billing_info"></div><div class="footer"><button type="submit" class="submit btn-green">Update</button></div></form>', R.dom.one_time_transaction_form = '<form class="recurly update_billing_info"><div class="server_errors none"></div><div class="contact_info"></div><div class="billing_info"></div><div class="accept_tos"></div><div class="footer"><button type="submit" class="submit btn-green">Pay</button></div></form>', R.dom.terms_of_service = '<input id="tos_check" type="checkbox"/><label id="accept_tos" for="tos_check">I accept the <a target="_blank" class="tos_link">Terms of Service</a><span class="and"> and </span><a target="_blank" class="pp_link">Privacy Policy</a></label>', window.Recurly = R
    }(jQuery),
    function(factory) {
        "function" == typeof define && define.amd ? define(["jquery"], factory) : factory(jQuery)
    }(function($) {
        function focusable(element, isTabIndexNotNaN) {
            var map, mapName, img, nodeName = element.nodeName.toLowerCase();
            return "area" === nodeName ? (map = element.parentNode, mapName = map.name, element.href && mapName && "map" === map.nodeName.toLowerCase() ? (img = $("img[usemap=#" + mapName + "]")[0], !!img && visible(img)) : !1) : (/input|select|textarea|button|object/.test(nodeName) ? !element.disabled : "a" === nodeName ? element.href || isTabIndexNotNaN : isTabIndexNotNaN) && visible(element)
        }

        function visible(element) {
            return $.expr.filters.visible(element) && !$(element).parents().addBack().filter(function() {
                return "hidden" === $.css(this, "visibility")
            }).length
        }
        $.ui = $.ui || {}, $.extend($.ui, {
            version: "1.11.0",
            keyCode: {
                BACKSPACE: 8,
                COMMA: 188,
                DELETE: 46,
                DOWN: 40,
                END: 35,
                ENTER: 13,
                ESCAPE: 27,
                HOME: 36,
                LEFT: 37,
                PAGE_DOWN: 34,
                PAGE_UP: 33,
                PERIOD: 190,
                RIGHT: 39,
                SPACE: 32,
                TAB: 9,
                UP: 38
            }
        }), $.fn.extend({
            scrollParent: function() {
                var position = this.css("position"),
                    excludeStaticParent = "absolute" === position,
                    scrollParent = this.parents().filter(function() {
                        var parent = $(this);
                        return excludeStaticParent && "static" === parent.css("position") ? !1 : /(auto|scroll)/.test(parent.css("overflow") + parent.css("overflow-y") + parent.css("overflow-x"))
                    }).eq(0);
                return "fixed" !== position && scrollParent.length ? scrollParent : $(this[0].ownerDocument || document)
            },
            uniqueId: function() {
                var uuid = 0;
                return function() {
                    return this.each(function() {
                        this.id || (this.id = "ui-id-" + ++uuid)
                    })
                }
            }(),
            removeUniqueId: function() {
                return this.each(function() {
                    /^ui-id-\d+$/.test(this.id) && $(this).removeAttr("id")
                })
            }
        }), $.extend($.expr[":"], {
            data: $.expr.createPseudo ? $.expr.createPseudo(function(dataName) {
                return function(elem) {
                    return !!$.data(elem, dataName)
                }
            }) : function(elem, i, match) {
                return !!$.data(elem, match[3])
            },
            focusable: function(element) {
                return focusable(element, !isNaN($.attr(element, "tabindex")))
            },
            tabbable: function(element) {
                var tabIndex = $.attr(element, "tabindex"),
                    isTabIndexNaN = isNaN(tabIndex);
                return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN)
            }
        }), $("<a>").outerWidth(1).jquery || $.each(["Width", "Height"], function(i, name) {
            function reduce(elem, size, border, margin) {
                return $.each(side, function() {
                    size -= parseFloat($.css(elem, "padding" + this)) || 0, border && (size -= parseFloat($.css(elem, "border" + this + "Width")) || 0), margin && (size -= parseFloat($.css(elem, "margin" + this)) || 0)
                }), size
            }
            var side = "Width" === name ? ["Left", "Right"] : ["Top", "Bottom"],
                type = name.toLowerCase(),
                orig = {
                    innerWidth: $.fn.innerWidth,
                    innerHeight: $.fn.innerHeight,
                    outerWidth: $.fn.outerWidth,
                    outerHeight: $.fn.outerHeight
                };
            $.fn["inner" + name] = function(size) {
                return void 0 === size ? orig["inner" + name].call(this) : this.each(function() {
                    $(this).css(type, reduce(this, size) + "px")
                })
            }, $.fn["outer" + name] = function(size, margin) {
                return "number" != typeof size ? orig["outer" + name].call(this, size) : this.each(function() {
                    $(this).css(type, reduce(this, size, !0, margin) + "px")
                })
            }
        }), $.fn.addBack || ($.fn.addBack = function(selector) {
            return this.add(null == selector ? this.prevObject : this.prevObject.filter(selector))
        }), $("<a>").data("a-b", "a").removeData("a-b").data("a-b") && ($.fn.removeData = function(removeData) {
            return function(key) {
                return arguments.length ? removeData.call(this, $.camelCase(key)) : removeData.call(this)
            }
        }($.fn.removeData)), $.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()), $.fn.extend({
            focus: function(orig) {
                return function(delay, fn) {
                    return "number" == typeof delay ? this.each(function() {
                        var elem = this;
                        setTimeout(function() {
                            $(elem).focus(), fn && fn.call(elem)
                        }, delay)
                    }) : orig.apply(this, arguments)
                }
            }($.fn.focus),
            disableSelection: function() {
                var eventType = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";
                return function() {
                    return this.bind(eventType + ".ui-disableSelection", function(event) {
                        event.preventDefault()
                    })
                }
            }(),
            enableSelection: function() {
                return this.unbind(".ui-disableSelection")
            },
            zIndex: function(zIndex) {
                if (void 0 !== zIndex) return this.css("zIndex", zIndex);
                if (this.length)
                    for (var position, value, elem = $(this[0]); elem.length && elem[0] !== document;) {
                        if (position = elem.css("position"), ("absolute" === position || "relative" === position || "fixed" === position) && (value = parseInt(elem.css("zIndex"), 10), !isNaN(value) && 0 !== value)) return value;
                        elem = elem.parent()
                    }
                return 0
            }
        }), $.ui.plugin = {
            add: function(module, option, set) {
                var i, proto = $.ui[module].prototype;
                for (i in set) proto.plugins[i] = proto.plugins[i] || [], proto.plugins[i].push([option, set[i]])
            },
            call: function(instance, name, args, allowDisconnected) {
                var i, set = instance.plugins[name];
                if (set && (allowDisconnected || instance.element[0].parentNode && 11 !== instance.element[0].parentNode.nodeType))
                    for (i = 0; i < set.length; i++) instance.options[set[i][0]] && set[i][1].apply(instance.element, args)
            }
        }
    }),
    function(factory) {
        "function" == typeof define && define.amd ? define(["jquery"], factory) : factory(jQuery)
    }(function($) {
        var widget_uuid = 0,
            widget_slice = Array.prototype.slice;
        return $.cleanData = function(orig) {
            return function(elems) {
                for (var elem, i = 0; null != (elem = elems[i]); i++) try {
                    $(elem).triggerHandler("remove")
                } catch (e) {}
                orig(elems)
            }
        }($.cleanData), $.widget = function(name, base, prototype) {
            var fullName, existingConstructor, constructor, basePrototype, proxiedPrototype = {},
                namespace = name.split(".")[0];
            return name = name.split(".")[1], fullName = namespace + "-" + name, prototype || (prototype = base, base = $.Widget), $.expr[":"][fullName.toLowerCase()] = function(elem) {
                return !!$.data(elem, fullName)
            }, $[namespace] = $[namespace] || {}, existingConstructor = $[namespace][name], constructor = $[namespace][name] = function(options, element) {
                return this._createWidget ? void(arguments.length && this._createWidget(options, element)) : new constructor(options, element)
            }, $.extend(constructor, existingConstructor, {
                version: prototype.version,
                _proto: $.extend({}, prototype),
                _childConstructors: []
            }), basePrototype = new base, basePrototype.options = $.widget.extend({}, basePrototype.options), $.each(prototype, function(prop, value) {
                return $.isFunction(value) ? void(proxiedPrototype[prop] = function() {
                    var _super = function() {
                            return base.prototype[prop].apply(this, arguments)
                        },
                        _superApply = function(args) {
                            return base.prototype[prop].apply(this, args)
                        };
                    return function() {
                        var returnValue, __super = this._super,
                            __superApply = this._superApply;
                        return this._super = _super, this._superApply = _superApply, returnValue = value.apply(this, arguments), this._super = __super, this._superApply = __superApply, returnValue
                    }
                }()) : void(proxiedPrototype[prop] = value)
            }), constructor.prototype = $.widget.extend(basePrototype, {
                widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix || name : name
            }, proxiedPrototype, {
                constructor: constructor,
                namespace: namespace,
                widgetName: name,
                widgetFullName: fullName
            }), existingConstructor ? ($.each(existingConstructor._childConstructors, function(i, child) {
                var childPrototype = child.prototype;
                $.widget(childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto)
            }), delete existingConstructor._childConstructors) : base._childConstructors.push(constructor), $.widget.bridge(name, constructor), constructor
        }, $.widget.extend = function(target) {
            for (var key, value, input = widget_slice.call(arguments, 1), inputIndex = 0, inputLength = input.length; inputLength > inputIndex; inputIndex++)
                for (key in input[inputIndex]) value = input[inputIndex][key], input[inputIndex].hasOwnProperty(key) && void 0 !== value && (target[key] = $.isPlainObject(value) ? $.isPlainObject(target[key]) ? $.widget.extend({}, target[key], value) : $.widget.extend({}, value) : value);
            return target
        }, $.widget.bridge = function(name, object) {
            var fullName = object.prototype.widgetFullName || name;
            $.fn[name] = function(options) {
                var isMethodCall = "string" == typeof options,
                    args = widget_slice.call(arguments, 1),
                    returnValue = this;
                return options = !isMethodCall && args.length ? $.widget.extend.apply(null, [options].concat(args)) : options, this.each(isMethodCall ? function() {
                    var methodValue, instance = $.data(this, fullName);
                    return "instance" === options ? (returnValue = instance, !1) : instance ? $.isFunction(instance[options]) && "_" !== options.charAt(0) ? (methodValue = instance[options].apply(instance, args), methodValue !== instance && void 0 !== methodValue ? (returnValue = methodValue && methodValue.jquery ? returnValue.pushStack(methodValue.get()) : methodValue, !1) : void 0) : $.error("no such method '" + options + "' for " + name + " widget instance") : $.error("cannot call methods on " + name + " prior to initialization; attempted to call method '" + options + "'")
                } : function() {
                    var instance = $.data(this, fullName);
                    instance ? (instance.option(options || {}), instance._init && instance._init()) : $.data(this, fullName, new object(options, this))
                }), returnValue
            }
        }, $.Widget = function() {}, $.Widget._childConstructors = [], $.Widget.prototype = {
            widgetName: "widget",
            widgetEventPrefix: "",
            defaultElement: "<div>",
            options: {
                disabled: !1,
                create: null
            },
            _createWidget: function(options, element) {
                element = $(element || this.defaultElement || this)[0], this.element = $(element), this.uuid = widget_uuid++, this.eventNamespace = "." + this.widgetName + this.uuid, this.options = $.widget.extend({}, this.options, this._getCreateOptions(), options), this.bindings = $(), this.hoverable = $(), this.focusable = $(), element !== this && ($.data(element, this.widgetFullName, this), this._on(!0, this.element, {
                    remove: function(event) {
                        event.target === element && this.destroy()
                    }
                }), this.document = $(element.style ? element.ownerDocument : element.document || element), this.window = $(this.document[0].defaultView || this.document[0].parentWindow)), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init()
            },
            _getCreateOptions: $.noop,
            _getCreateEventData: $.noop,
            _create: $.noop,
            _init: $.noop,
            destroy: function() {
                this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData($.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")
            },
            _destroy: $.noop,
            widget: function() {
                return this.element
            },
            option: function(key, value) {
                var parts, curOption, i, options = key;
                if (0 === arguments.length) return $.widget.extend({}, this.options);
                if ("string" == typeof key)
                    if (options = {}, parts = key.split("."), key = parts.shift(), parts.length) {
                        for (curOption = options[key] = $.widget.extend({}, this.options[key]), i = 0; i < parts.length - 1; i++) curOption[parts[i]] = curOption[parts[i]] || {}, curOption = curOption[parts[i]];
                        if (key = parts.pop(), 1 === arguments.length) return void 0 === curOption[key] ? null : curOption[key];
                        curOption[key] = value
                    } else {
                        if (1 === arguments.length) return void 0 === this.options[key] ? null : this.options[key];
                        options[key] = value
                    }
                return this._setOptions(options), this
            },
            _setOptions: function(options) {
                var key;
                for (key in options) this._setOption(key, options[key]);
                return this
            },
            _setOption: function(key, value) {
                return this.options[key] = value, "disabled" === key && (this.widget().toggleClass(this.widgetFullName + "-disabled", !!value), value && (this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus"))), this
            },
            enable: function() {
                return this._setOptions({
                    disabled: !1
                })
            },
            disable: function() {
                return this._setOptions({
                    disabled: !0
                })
            },
            _on: function(suppressDisabledCheck, element, handlers) {
                var delegateElement, instance = this;
                "boolean" != typeof suppressDisabledCheck && (handlers = element, element = suppressDisabledCheck, suppressDisabledCheck = !1), handlers ? (element = delegateElement = $(element), this.bindings = this.bindings.add(element)) : (handlers = element, element = this.element, delegateElement = this.widget()), $.each(handlers, function(event, handler) {
                    function handlerProxy() {
                        return suppressDisabledCheck || instance.options.disabled !== !0 && !$(this).hasClass("ui-state-disabled") ? ("string" == typeof handler ? instance[handler] : handler).apply(instance, arguments) : void 0
                    }
                    "string" != typeof handler && (handlerProxy.guid = handler.guid = handler.guid || handlerProxy.guid || $.guid++);
                    var match = event.match(/^([\w:-]*)\s*(.*)$/),
                        eventName = match[1] + instance.eventNamespace,
                        selector = match[2];
                    selector ? delegateElement.delegate(selector, eventName, handlerProxy) : element.bind(eventName, handlerProxy)
                })
            },
            _off: function(element, eventName) {
                eventName = (eventName || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, element.unbind(eventName).undelegate(eventName)
            },
            _delay: function(handler, delay) {
                function handlerProxy() {
                    return ("string" == typeof handler ? instance[handler] : handler).apply(instance, arguments)
                }
                var instance = this;
                return setTimeout(handlerProxy, delay || 0)
            },
            _hoverable: function(element) {
                this.hoverable = this.hoverable.add(element), this._on(element, {
                    mouseenter: function(event) {
                        $(event.currentTarget).addClass("ui-state-hover")
                    },
                    mouseleave: function(event) {
                        $(event.currentTarget).removeClass("ui-state-hover")
                    }
                })
            },
            _focusable: function(element) {
                this.focusable = this.focusable.add(element), this._on(element, {
                    focusin: function(event) {
                        $(event.currentTarget).addClass("ui-state-focus")
                    },
                    focusout: function(event) {
                        $(event.currentTarget).removeClass("ui-state-focus")
                    }
                })
            },
            _trigger: function(type, event, data) {
                var prop, orig, callback = this.options[type];
                if (data = data || {}, event = $.Event(event), event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase(), event.target = this.element[0], orig = event.originalEvent)
                    for (prop in orig) prop in event || (event[prop] = orig[prop]);
                return this.element.trigger(event, data), !($.isFunction(callback) && callback.apply(this.element[0], [event].concat(data)) === !1 || event.isDefaultPrevented())
            }
        }, $.each({
            show: "fadeIn",
            hide: "fadeOut"
        }, function(method, defaultEffect) {
            $.Widget.prototype["_" + method] = function(element, options, callback) {
                "string" == typeof options && (options = {
                    effect: options
                });
                var hasOptions, effectName = options ? options === !0 || "number" == typeof options ? defaultEffect : options.effect || defaultEffect : method;
                options = options || {}, "number" == typeof options && (options = {
                    duration: options
                }), hasOptions = !$.isEmptyObject(options), options.complete = callback, options.delay && element.delay(options.delay), hasOptions && $.effects && $.effects.effect[effectName] ? element[method](options) : effectName !== method && element[effectName] ? element[effectName](options.duration, options.easing, callback) : element.queue(function(next) {
                    $(this)[method](), callback && callback.call(element[0]), next()
                })
            }
        }), $.widget
    }),
    function(factory) {
        "function" == typeof define && define.amd ? define(["jquery", "./widget"], factory) : factory(jQuery)
    }(function($) {
        var mouseHandled = !1;
        return $(document).mouseup(function() {
            mouseHandled = !1
        }), $.widget("ui.mouse", {
            version: "1.11.0",
            options: {
                cancel: "input,textarea,button,select,option",
                distance: 1,
                delay: 0
            },
            _mouseInit: function() {
                var that = this;
                this.element.bind("mousedown." + this.widgetName, function(event) {
                    return that._mouseDown(event)
                }).bind("click." + this.widgetName, function(event) {
                    return !0 === $.data(event.target, that.widgetName + ".preventClickEvent") ? ($.removeData(event.target, that.widgetName + ".preventClickEvent"), event.stopImmediatePropagation(), !1) : void 0
                }), this.started = !1
            },
            _mouseDestroy: function() {
                this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
            },
            _mouseDown: function(event) {
                if (!mouseHandled) {
                    this._mouseStarted && this._mouseUp(event), this._mouseDownEvent = event;
                    var that = this,
                        btnIsLeft = 1 === event.which,
                        elIsCancel = "string" == typeof this.options.cancel && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : !1;
                    return btnIsLeft && !elIsCancel && this._mouseCapture(event) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                        that.mouseDelayMet = !0
                    }, this.options.delay)), this._mouseDistanceMet(event) && this._mouseDelayMet(event) && (this._mouseStarted = this._mouseStart(event) !== !1, !this._mouseStarted) ? (event.preventDefault(), !0) : (!0 === $.data(event.target, this.widgetName + ".preventClickEvent") && $.removeData(event.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function(event) {
                        return that._mouseMove(event)
                    }, this._mouseUpDelegate = function(event) {
                        return that._mouseUp(event)
                    }, this.document.bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), event.preventDefault(), mouseHandled = !0, !0)) : !0
                }
            },
            _mouseMove: function(event) {
                return $.ui.ie && (!document.documentMode || document.documentMode < 9) && !event.button ? this._mouseUp(event) : event.which ? this._mouseStarted ? (this._mouseDrag(event), event.preventDefault()) : (this._mouseDistanceMet(event) && this._mouseDelayMet(event) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, event) !== !1, this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event)), !this._mouseStarted) : this._mouseUp(event)
            },
            _mouseUp: function(event) {
                return this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, event.target === this._mouseDownEvent.target && $.data(event.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(event)), mouseHandled = !1, !1
            },
            _mouseDistanceMet: function(event) {
                return Math.max(Math.abs(this._mouseDownEvent.pageX - event.pageX), Math.abs(this._mouseDownEvent.pageY - event.pageY)) >= this.options.distance
            },
            _mouseDelayMet: function() {
                return this.mouseDelayMet
            },
            _mouseStart: function() {},
            _mouseDrag: function() {},
            _mouseStop: function() {},
            _mouseCapture: function() {
                return !0
            }
        })
    }),
    function(factory) {
        "function" == typeof define && define.amd ? define(["jquery", "./core", "./mouse", "./widget"], factory) : factory(jQuery)
    }(function($) {
        return $.widget("ui.draggable", $.ui.mouse, {
            version: "1.11.0",
            widgetEventPrefix: "drag",
            options: {
                addClasses: !0,
                appendTo: "parent",
                axis: !1,
                connectToSortable: !1,
                containment: !1,
                cursor: "auto",
                cursorAt: !1,
                grid: !1,
                handle: !1,
                helper: "original",
                iframeFix: !1,
                opacity: !1,
                refreshPositions: !1,
                revert: !1,
                revertDuration: 500,
                scope: "default",
                scroll: !0,
                scrollSensitivity: 20,
                scrollSpeed: 20,
                snap: !1,
                snapMode: "both",
                snapTolerance: 20,
                stack: !1,
                zIndex: !1,
                drag: null,
                start: null,
                stop: null
            },
            _create: function() {
                "original" !== this.options.helper || /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative"), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._setHandleClassName(), this._mouseInit()
            },
            _setOption: function(key, value) {
                this._super(key, value), "handle" === key && this._setHandleClassName()
            },
            _destroy: function() {
                return (this.helper || this.element).is(".ui-draggable-dragging") ? void(this.destroyOnClear = !0) : (this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._removeHandleClassName(), void this._mouseDestroy())
            },
            _mouseCapture: function(event) {
                var document = this.document[0],
                    o = this.options;
                try {
                    document.activeElement && "body" !== document.activeElement.nodeName.toLowerCase() && $(document.activeElement).blur()
                } catch (error) {}
                return this.helper || o.disabled || $(event.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(event), this.handle ? ($(o.iframeFix === !0 ? "iframe" : o.iframeFix).each(function() {
                    $("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({
                        width: this.offsetWidth + "px",
                        height: this.offsetHeight + "px",
                        position: "absolute",
                        opacity: "0.001",
                        zIndex: 1e3
                    }).css($(this).offset()).appendTo("body")
                }), !0) : !1)
            },
            _mouseStart: function(event) {
                var o = this.options;
                return this.helper = this._createHelper(event), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), $.ui.ddmanager && ($.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(), this.offsetParent = this.helper.offsetParent(), this.offsetParentCssPosition = this.offsetParent.css("position"), this.offset = this.positionAbs = this.element.offset(), this.offset = {
                    top: this.offset.top - this.margins.top,
                    left: this.offset.left - this.margins.left
                }, this.offset.scroll = !1, $.extend(this.offset, {
                    click: {
                        left: event.pageX - this.offset.left,
                        top: event.pageY - this.offset.top
                    },
                    parent: this._getParentOffset(),
                    relative: this._getRelativeOffset()
                }), this.originalPosition = this.position = this._generatePosition(event, !1), this.originalPageX = event.pageX, this.originalPageY = event.pageY, o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt), this._setContainment(), this._trigger("start", event) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), $.ui.ddmanager && !o.dropBehaviour && $.ui.ddmanager.prepareOffsets(this, event), this._mouseDrag(event, !0), $.ui.ddmanager && $.ui.ddmanager.dragStart(this, event), !0)
            },
            _mouseDrag: function(event, noPropagation) {
                if ("fixed" === this.offsetParentCssPosition && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(event, !0), this.positionAbs = this._convertPositionTo("absolute"), !noPropagation) {
                    var ui = this._uiHash();
                    if (this._trigger("drag", event, ui) === !1) return this._mouseUp({}), !1;
                    this.position = ui.position
                }
                return this.helper[0].style.left = this.position.left + "px", this.helper[0].style.top = this.position.top + "px", $.ui.ddmanager && $.ui.ddmanager.drag(this, event), !1
            },
            _mouseStop: function(event) {
                var that = this,
                    dropped = !1;
                return $.ui.ddmanager && !this.options.dropBehaviour && (dropped = $.ui.ddmanager.drop(this, event)), this.dropped && (dropped = this.dropped, this.dropped = !1), "invalid" === this.options.revert && !dropped || "valid" === this.options.revert && dropped || this.options.revert === !0 || $.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped) ? $(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                    that._trigger("stop", event) !== !1 && that._clear()
                }) : this._trigger("stop", event) !== !1 && this._clear(), !1
            },
            _mouseUp: function(event) {
                return $("div.ui-draggable-iframeFix").each(function() {
                    this.parentNode.removeChild(this)
                }), $.ui.ddmanager && $.ui.ddmanager.dragStop(this, event), this.element.focus(), $.ui.mouse.prototype._mouseUp.call(this, event)
            },
            cancel: function() {
                return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this
            },
            _getHandle: function(event) {
                return this.options.handle ? !!$(event.target).closest(this.element.find(this.options.handle)).length : !0
            },
            _setHandleClassName: function() {
                this._removeHandleClassName(), $(this.options.handle || this.element).addClass("ui-draggable-handle")
            },
            _removeHandleClassName: function() {
                this.element.find(".ui-draggable-handle").addBack().removeClass("ui-draggable-handle")
            },
            _createHelper: function(event) {
                var o = this.options,
                    helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : "clone" === o.helper ? this.element.clone().removeAttr("id") : this.element;
                return helper.parents("body").length || helper.appendTo("parent" === o.appendTo ? this.element[0].parentNode : o.appendTo), helper[0] === this.element[0] || /(fixed|absolute)/.test(helper.css("position")) || helper.css("position", "absolute"), helper
            },
            _adjustOffsetFromHelper: function(obj) {
                "string" == typeof obj && (obj = obj.split(" ")), $.isArray(obj) && (obj = {
                    left: +obj[0],
                    top: +obj[1] || 0
                }), "left" in obj && (this.offset.click.left = obj.left + this.margins.left), "right" in obj && (this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left), "top" in obj && (this.offset.click.top = obj.top + this.margins.top), "bottom" in obj && (this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top)
            },
            _isRootNode: function(element) {
                return /(html|body)/i.test(element.tagName) || element === this.document[0]
            },
            _getParentOffset: function() {
                var po = this.offsetParent.offset(),
                    document = this.document[0];
                return "absolute" === this.cssPosition && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0]) && (po.left += this.scrollParent.scrollLeft(), po.top += this.scrollParent.scrollTop()), this._isRootNode(this.offsetParent[0]) && (po = {
                    top: 0,
                    left: 0
                }), {
                    top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                    left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
                }
            },
            _getRelativeOffset: function() {
                if ("relative" !== this.cssPosition) return {
                    top: 0,
                    left: 0
                };
                var p = this.element.position(),
                    scrollIsRootNode = this._isRootNode(this.scrollParent[0]);
                return {
                    top: p.top - (parseInt(this.helper.css("top"), 10) || 0) + (scrollIsRootNode ? 0 : this.scrollParent.scrollTop()),
                    left: p.left - (parseInt(this.helper.css("left"), 10) || 0) + (scrollIsRootNode ? 0 : this.scrollParent.scrollLeft())
                }
            },
            _cacheMargins: function() {
                this.margins = {
                    left: parseInt(this.element.css("marginLeft"), 10) || 0,
                    top: parseInt(this.element.css("marginTop"), 10) || 0,
                    right: parseInt(this.element.css("marginRight"), 10) || 0,
                    bottom: parseInt(this.element.css("marginBottom"), 10) || 0
                }
            },
            _cacheHelperProportions: function() {
                this.helperProportions = {
                    width: this.helper.outerWidth(),
                    height: this.helper.outerHeight()
                }
            },
            _setContainment: function() {
                var over, c, ce, o = this.options,
                    document = this.document[0];
                return this.relative_container = null, o.containment ? "window" === o.containment ? void(this.containment = [$(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, $(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, $(window).scrollLeft() + $(window).width() - this.helperProportions.width - this.margins.left, $(window).scrollTop() + ($(window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]) : "document" === o.containment ? void(this.containment = [0, 0, $(document).width() - this.helperProportions.width - this.margins.left, ($(document).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]) : o.containment.constructor === Array ? void(this.containment = o.containment) : ("parent" === o.containment && (o.containment = this.helper[0].parentNode), c = $(o.containment), ce = c[0], void(ce && (over = "hidden" !== c.css("overflow"), this.containment = [(parseInt(c.css("borderLeftWidth"), 10) || 0) + (parseInt(c.css("paddingLeft"), 10) || 0), (parseInt(c.css("borderTopWidth"), 10) || 0) + (parseInt(c.css("paddingTop"), 10) || 0), (over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) - (parseInt(c.css("borderRightWidth"), 10) || 0) - (parseInt(c.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (over ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) - (parseInt(c.css("borderBottomWidth"), 10) || 0) - (parseInt(c.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relative_container = c))) : void(this.containment = null)
            },
            _convertPositionTo: function(d, pos) {
                pos || (pos = this.position);
                var mod = "absolute" === d ? 1 : -1,
                    scrollIsRootNode = this._isRootNode(this.scrollParent[0]);
                return {
                    top: pos.top + this.offset.relative.top * mod + this.offset.parent.top * mod - ("fixed" === this.cssPosition ? -this.offset.scroll.top : scrollIsRootNode ? 0 : this.offset.scroll.top) * mod,
                    left: pos.left + this.offset.relative.left * mod + this.offset.parent.left * mod - ("fixed" === this.cssPosition ? -this.offset.scroll.left : scrollIsRootNode ? 0 : this.offset.scroll.left) * mod
                }
            },
            _generatePosition: function(event, constrainPosition) {
                var containment, co, top, left, o = this.options,
                    scrollIsRootNode = this._isRootNode(this.scrollParent[0]),
                    pageX = event.pageX,
                    pageY = event.pageY;
                return scrollIsRootNode && this.offset.scroll || (this.offset.scroll = {
                    top: this.scrollParent.scrollTop(),
                    left: this.scrollParent.scrollLeft()
                }), constrainPosition && (this.containment && (this.relative_container ? (co = this.relative_container.offset(), containment = [this.containment[0] + co.left, this.containment[1] + co.top, this.containment[2] + co.left, this.containment[3] + co.top]) : containment = this.containment, event.pageX - this.offset.click.left < containment[0] && (pageX = containment[0] + this.offset.click.left), event.pageY - this.offset.click.top < containment[1] && (pageY = containment[1] + this.offset.click.top), event.pageX - this.offset.click.left > containment[2] && (pageX = containment[2] + this.offset.click.left), event.pageY - this.offset.click.top > containment[3] && (pageY = containment[3] + this.offset.click.top)), o.grid && (top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY, pageY = containment ? top - this.offset.click.top >= containment[1] || top - this.offset.click.top > containment[3] ? top : top - this.offset.click.top >= containment[1] ? top - o.grid[1] : top + o.grid[1] : top, left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX, pageX = containment ? left - this.offset.click.left >= containment[0] || left - this.offset.click.left > containment[2] ? left : left - this.offset.click.left >= containment[0] ? left - o.grid[0] : left + o.grid[0] : left), "y" === o.axis && (pageX = this.originalPageX), "x" === o.axis && (pageY = this.originalPageY)), {
                    top: pageY - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : scrollIsRootNode ? 0 : this.offset.scroll.top),
                    left: pageX - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : scrollIsRootNode ? 0 : this.offset.scroll.left)
                }
            },
            _clear: function() {
                this.helper.removeClass("ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1, this.destroyOnClear && this.destroy()
            },
            _trigger: function(type, event, ui) {
                return ui = ui || this._uiHash(), $.ui.plugin.call(this, type, [event, ui, this], !0), "drag" === type && (this.positionAbs = this._convertPositionTo("absolute")), $.Widget.prototype._trigger.call(this, type, event, ui)
            },
            plugins: {},
            _uiHash: function() {
                return {
                    helper: this.helper,
                    position: this.position,
                    originalPosition: this.originalPosition,
                    offset: this.positionAbs
                }
            }
        }), $.ui.plugin.add("draggable", "connectToSortable", {
            start: function(event, ui, inst) {
                var o = inst.options,
                    uiSortable = $.extend({}, ui, {
                        item: inst.element
                    });
                inst.sortables = [], $(o.connectToSortable).each(function() {
                    var sortable = $(this).sortable("instance");
                    sortable && !sortable.options.disabled && (inst.sortables.push({
                        instance: sortable,
                        shouldRevert: sortable.options.revert
                    }), sortable.refreshPositions(), sortable._trigger("activate", event, uiSortable))
                })
            },
            stop: function(event, ui, inst) {
                var uiSortable = $.extend({}, ui, {
                    item: inst.element
                });
                $.each(inst.sortables, function() {
                    this.instance.isOver ? (this.instance.isOver = 0, inst.cancelHelperRemoval = !0, this.instance.cancelHelperRemoval = !1, this.shouldRevert && (this.instance.options.revert = this.shouldRevert), this.instance._mouseStop(event), this.instance.options.helper = this.instance.options._helper, "original" === inst.options.helper && this.instance.currentItem.css({
                        top: "auto",
                        left: "auto"
                    })) : (this.instance.cancelHelperRemoval = !1, this.instance._trigger("deactivate", event, uiSortable))
                })
            },
            drag: function(event, ui, inst) {
                var that = this;
                $.each(inst.sortables, function() {
                    var innermostIntersecting = !1,
                        thisSortable = this;
                    this.instance.positionAbs = inst.positionAbs, this.instance.helperProportions = inst.helperProportions, this.instance.offset.click = inst.offset.click, this.instance._intersectsWith(this.instance.containerCache) && (innermostIntersecting = !0, $.each(inst.sortables, function() {
                        return this.instance.positionAbs = inst.positionAbs, this.instance.helperProportions = inst.helperProportions, this.instance.offset.click = inst.offset.click, this !== thisSortable && this.instance._intersectsWith(this.instance.containerCache) && $.contains(thisSortable.instance.element[0], this.instance.element[0]) && (innermostIntersecting = !1), innermostIntersecting
                    })), innermostIntersecting ? (this.instance.isOver || (this.instance.isOver = 1, this.instance.currentItem = $(that).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", !0), this.instance.options._helper = this.instance.options.helper, this.instance.options.helper = function() {
                        return ui.helper[0]
                    }, event.target = this.instance.currentItem[0], this.instance._mouseCapture(event, !0), this.instance._mouseStart(event, !0, !0), this.instance.offset.click.top = inst.offset.click.top, this.instance.offset.click.left = inst.offset.click.left, this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left, this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top, inst._trigger("toSortable", event), inst.dropped = this.instance.element, inst.currentItem = inst.element, this.instance.fromOutside = inst), this.instance.currentItem && this.instance._mouseDrag(event)) : this.instance.isOver && (this.instance.isOver = 0, this.instance.cancelHelperRemoval = !0, this.instance.options.revert = !1, this.instance._trigger("out", event, this.instance._uiHash(this.instance)), this.instance._mouseStop(event, !0), this.instance.options.helper = this.instance.options._helper, this.instance.currentItem.remove(), this.instance.placeholder && this.instance.placeholder.remove(), inst._trigger("fromSortable", event), inst.dropped = !1)
                })
            }
        }), $.ui.plugin.add("draggable", "cursor", {
            start: function(event, ui, instance) {
                var t = $("body"),
                    o = instance.options;
                t.css("cursor") && (o._cursor = t.css("cursor")), t.css("cursor", o.cursor)
            },
            stop: function(event, ui, instance) {
                var o = instance.options;
                o._cursor && $("body").css("cursor", o._cursor)
            }
        }), $.ui.plugin.add("draggable", "opacity", {
            start: function(event, ui, instance) {
                var t = $(ui.helper),
                    o = instance.options;
                t.css("opacity") && (o._opacity = t.css("opacity")), t.css("opacity", o.opacity)
            },
            stop: function(event, ui, instance) {
                var o = instance.options;
                o._opacity && $(ui.helper).css("opacity", o._opacity)
            }
        }), $.ui.plugin.add("draggable", "scroll", {
            start: function(event, ui, i) {
                i.scrollParent[0] !== i.document[0] && "HTML" !== i.scrollParent[0].tagName && (i.overflowOffset = i.scrollParent.offset())
            },
            drag: function(event, ui, i) {
                var o = i.options,
                    scrolled = !1,
                    document = i.document[0];
                i.scrollParent[0] !== document && "HTML" !== i.scrollParent[0].tagName ? (o.axis && "x" === o.axis || (i.overflowOffset.top + i.scrollParent[0].offsetHeight - event.pageY < o.scrollSensitivity ? i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed : event.pageY - i.overflowOffset.top < o.scrollSensitivity && (i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed)), o.axis && "y" === o.axis || (i.overflowOffset.left + i.scrollParent[0].offsetWidth - event.pageX < o.scrollSensitivity ? i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed : event.pageX - i.overflowOffset.left < o.scrollSensitivity && (i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed))) : (o.axis && "x" === o.axis || (event.pageY - $(document).scrollTop() < o.scrollSensitivity ? scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed) : $(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity && (scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed))), o.axis && "y" === o.axis || (event.pageX - $(document).scrollLeft() < o.scrollSensitivity ? scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed) : $(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity && (scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed)))), scrolled !== !1 && $.ui.ddmanager && !o.dropBehaviour && $.ui.ddmanager.prepareOffsets(i, event)
            }
        }), $.ui.plugin.add("draggable", "snap", {
            start: function(event, ui, i) {
                var o = i.options;
                i.snapElements = [], $(o.snap.constructor !== String ? o.snap.items || ":data(ui-draggable)" : o.snap).each(function() {
                    var $t = $(this),
                        $o = $t.offset();
                    this !== i.element[0] && i.snapElements.push({
                        item: this,
                        width: $t.outerWidth(),
                        height: $t.outerHeight(),
                        top: $o.top,
                        left: $o.left
                    })
                })
            },
            drag: function(event, ui, inst) {
                var ts, bs, ls, rs, l, r, t, b, i, first, o = inst.options,
                    d = o.snapTolerance,
                    x1 = ui.offset.left,
                    x2 = x1 + inst.helperProportions.width,
                    y1 = ui.offset.top,
                    y2 = y1 + inst.helperProportions.height;
                for (i = inst.snapElements.length - 1; i >= 0; i--) l = inst.snapElements[i].left, r = l + inst.snapElements[i].width, t = inst.snapElements[i].top, b = t + inst.snapElements[i].height, l - d > x2 || x1 > r + d || t - d > y2 || y1 > b + d || !$.contains(inst.snapElements[i].item.ownerDocument, inst.snapElements[i].item) ? (inst.snapElements[i].snapping && inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), {
                    snapItem: inst.snapElements[i].item
                })), inst.snapElements[i].snapping = !1) : ("inner" !== o.snapMode && (ts = Math.abs(t - y2) <= d, bs = Math.abs(b - y1) <= d, ls = Math.abs(l - x2) <= d, rs = Math.abs(r - x1) <= d, ts && (ui.position.top = inst._convertPositionTo("relative", {
                    top: t - inst.helperProportions.height,
                    left: 0
                }).top - inst.margins.top), bs && (ui.position.top = inst._convertPositionTo("relative", {
                    top: b,
                    left: 0
                }).top - inst.margins.top), ls && (ui.position.left = inst._convertPositionTo("relative", {
                    top: 0,
                    left: l - inst.helperProportions.width
                }).left - inst.margins.left), rs && (ui.position.left = inst._convertPositionTo("relative", {
                    top: 0,
                    left: r
                }).left - inst.margins.left)), first = ts || bs || ls || rs, "outer" !== o.snapMode && (ts = Math.abs(t - y1) <= d, bs = Math.abs(b - y2) <= d, ls = Math.abs(l - x1) <= d, rs = Math.abs(r - x2) <= d, ts && (ui.position.top = inst._convertPositionTo("relative", {
                    top: t,
                    left: 0
                }).top - inst.margins.top), bs && (ui.position.top = inst._convertPositionTo("relative", {
                    top: b - inst.helperProportions.height,
                    left: 0
                }).top - inst.margins.top), ls && (ui.position.left = inst._convertPositionTo("relative", {
                    top: 0,
                    left: l
                }).left - inst.margins.left), rs && (ui.position.left = inst._convertPositionTo("relative", {
                    top: 0,
                    left: r - inst.helperProportions.width
                }).left - inst.margins.left)), !inst.snapElements[i].snapping && (ts || bs || ls || rs || first) && inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), {
                    snapItem: inst.snapElements[i].item
                })), inst.snapElements[i].snapping = ts || bs || ls || rs || first)
            }
        }), $.ui.plugin.add("draggable", "stack", {
            start: function(event, ui, instance) {
                var min, o = instance.options,
                    group = $.makeArray($(o.stack)).sort(function(a, b) {
                        return (parseInt($(a).css("zIndex"), 10) || 0) - (parseInt($(b).css("zIndex"), 10) || 0)
                    });
                group.length && (min = parseInt($(group[0]).css("zIndex"), 10) || 0, $(group).each(function(i) {
                    $(this).css("zIndex", min + i)
                }), this.css("zIndex", min + group.length))
            }
        }), $.ui.plugin.add("draggable", "zIndex", {
            start: function(event, ui, instance) {
                var t = $(ui.helper),
                    o = instance.options;
                t.css("zIndex") && (o._zIndex = t.css("zIndex")), t.css("zIndex", o.zIndex)
            },
            stop: function(event, ui, instance) {
                var o = instance.options;
                o._zIndex && $(ui.helper).css("zIndex", o._zIndex)
            }
        }), $.ui.draggable
    }),
    function(factory) {
        "function" == typeof define && define.amd ? define(["jquery", "./core", "./widget", "./mouse", "./draggable"], factory) : factory(jQuery)
    }(function($) {
        return $.widget("ui.droppable", {
            version: "1.11.0",
            widgetEventPrefix: "drop",
            options: {
                accept: "*",
                activeClass: !1,
                addClasses: !0,
                greedy: !1,
                hoverClass: !1,
                scope: "default",
                tolerance: "intersect",
                activate: null,
                deactivate: null,
                drop: null,
                out: null,
                over: null
            },
            _create: function() {
                var proportions, o = this.options,
                    accept = o.accept;
                this.isover = !1, this.isout = !0, this.accept = $.isFunction(accept) ? accept : function(d) {
                    return d.is(accept)
                }, this.proportions = function() {
                    return arguments.length ? void(proportions = arguments[0]) : proportions ? proportions : proportions = {
                        width: this.element[0].offsetWidth,
                        height: this.element[0].offsetHeight
                    }
                }, this._addToManager(o.scope), o.addClasses && this.element.addClass("ui-droppable")
            },
            _addToManager: function(scope) {
                $.ui.ddmanager.droppables[scope] = $.ui.ddmanager.droppables[scope] || [], $.ui.ddmanager.droppables[scope].push(this)
            },
            _splice: function(drop) {
                for (var i = 0; i < drop.length; i++) drop[i] === this && drop.splice(i, 1)
            },
            _destroy: function() {
                var drop = $.ui.ddmanager.droppables[this.options.scope];
                this._splice(drop), this.element.removeClass("ui-droppable ui-droppable-disabled")
            },
            _setOption: function(key, value) {
                if ("accept" === key) this.accept = $.isFunction(value) ? value : function(d) {
                    return d.is(value)
                };
                else if ("scope" === key) {
                    var drop = $.ui.ddmanager.droppables[this.options.scope];
                    this._splice(drop), this._addToManager(value)
                }
                this._super(key, value)
            },
            _activate: function(event) {
                var draggable = $.ui.ddmanager.current;
                this.options.activeClass && this.element.addClass(this.options.activeClass), draggable && this._trigger("activate", event, this.ui(draggable))
            },
            _deactivate: function(event) {
                var draggable = $.ui.ddmanager.current;
                this.options.activeClass && this.element.removeClass(this.options.activeClass), draggable && this._trigger("deactivate", event, this.ui(draggable))
            },
            _over: function(event) {
                var draggable = $.ui.ddmanager.current;
                draggable && (draggable.currentItem || draggable.element)[0] !== this.element[0] && this.accept.call(this.element[0], draggable.currentItem || draggable.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass), this._trigger("over", event, this.ui(draggable)))
            },
            _out: function(event) {
                var draggable = $.ui.ddmanager.current;
                draggable && (draggable.currentItem || draggable.element)[0] !== this.element[0] && this.accept.call(this.element[0], draggable.currentItem || draggable.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("out", event, this.ui(draggable)))
            },
            _drop: function(event, custom) {
                var draggable = custom || $.ui.ddmanager.current,
                    childrenIntersection = !1;
                return draggable && (draggable.currentItem || draggable.element)[0] !== this.element[0] ? (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
                    var inst = $(this).droppable("instance");
                    return inst.options.greedy && !inst.options.disabled && inst.options.scope === draggable.options.scope && inst.accept.call(inst.element[0], draggable.currentItem || draggable.element) && $.ui.intersect(draggable, $.extend(inst, {
                        offset: inst.element.offset()
                    }), inst.options.tolerance) ? (childrenIntersection = !0, !1) : void 0
                }), childrenIntersection ? !1 : this.accept.call(this.element[0], draggable.currentItem || draggable.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", event, this.ui(draggable)), this.element) : !1) : !1
            },
            ui: function(c) {
                return {
                    draggable: c.currentItem || c.element,
                    helper: c.helper,
                    position: c.position,
                    offset: c.positionAbs
                }
            }
        }), $.ui.intersect = function() {
            function isOverAxis(x, reference, size) {
                return x >= reference && reference + size > x
            }
            return function(draggable, droppable, toleranceMode) {
                if (!droppable.offset) return !1;
                var draggableLeft, draggableTop, x1 = (draggable.positionAbs || draggable.position.absolute).left,
                    y1 = (draggable.positionAbs || draggable.position.absolute).top,
                    x2 = x1 + draggable.helperProportions.width,
                    y2 = y1 + draggable.helperProportions.height,
                    l = droppable.offset.left,
                    t = droppable.offset.top,
                    r = l + droppable.proportions().width,
                    b = t + droppable.proportions().height;
                switch (toleranceMode) {
                    case "fit":
                        return x1 >= l && r >= x2 && y1 >= t && b >= y2;
                    case "intersect":
                        return l < x1 + draggable.helperProportions.width / 2 && x2 - draggable.helperProportions.width / 2 < r && t < y1 + draggable.helperProportions.height / 2 && y2 - draggable.helperProportions.height / 2 < b;
                    case "pointer":
                        return draggableLeft = (draggable.positionAbs || draggable.position.absolute).left + (draggable.clickOffset || draggable.offset.click).left, draggableTop = (draggable.positionAbs || draggable.position.absolute).top + (draggable.clickOffset || draggable.offset.click).top, isOverAxis(draggableTop, t, droppable.proportions().height) && isOverAxis(draggableLeft, l, droppable.proportions().width);
                    case "touch":
                        return (y1 >= t && b >= y1 || y2 >= t && b >= y2 || t > y1 && y2 > b) && (x1 >= l && r >= x1 || x2 >= l && r >= x2 || l > x1 && x2 > r);
                    default:
                        return !1
                }
            }
        }(), $.ui.ddmanager = {
            current: null,
            droppables: {
                "default": []
            },
            prepareOffsets: function(t, event) {
                var i, j, m = $.ui.ddmanager.droppables[t.options.scope] || [],
                    type = event ? event.type : null,
                    list = (t.currentItem || t.element).find(":data(ui-droppable)").addBack();
                droppablesLoop: for (i = 0; i < m.length; i++)
                    if (!(m[i].options.disabled || t && !m[i].accept.call(m[i].element[0], t.currentItem || t.element))) {
                        for (j = 0; j < list.length; j++)
                            if (list[j] === m[i].element[0]) {
                                m[i].proportions().height = 0;
                                continue droppablesLoop
                            }
                        m[i].visible = "none" !== m[i].element.css("display"), m[i].visible && ("mousedown" === type && m[i]._activate.call(m[i], event), m[i].offset = m[i].element.offset(), m[i].proportions({
                            width: m[i].element[0].offsetWidth,
                            height: m[i].element[0].offsetHeight
                        }))
                    }
            },
            drop: function(draggable, event) {
                var dropped = !1;
                return $.each(($.ui.ddmanager.droppables[draggable.options.scope] || []).slice(), function() {
                    this.options && (!this.options.disabled && this.visible && $.ui.intersect(draggable, this, this.options.tolerance) && (dropped = this._drop.call(this, event) || dropped), !this.options.disabled && this.visible && this.accept.call(this.element[0], draggable.currentItem || draggable.element) && (this.isout = !0, this.isover = !1, this._deactivate.call(this, event)))
                }), dropped
            },
            dragStart: function(draggable, event) {
                draggable.element.parentsUntil("body").bind("scroll.droppable", function() {
                    draggable.options.refreshPositions || $.ui.ddmanager.prepareOffsets(draggable, event)
                })
            },
            drag: function(draggable, event) {
                draggable.options.refreshPositions && $.ui.ddmanager.prepareOffsets(draggable, event), $.each($.ui.ddmanager.droppables[draggable.options.scope] || [], function() {
                    if (!this.options.disabled && !this.greedyChild && this.visible) {
                        var parentInstance, scope, parent, intersects = $.ui.intersect(draggable, this, this.options.tolerance),
                            c = !intersects && this.isover ? "isout" : intersects && !this.isover ? "isover" : null;
                        c && (this.options.greedy && (scope = this.options.scope, parent = this.element.parents(":data(ui-droppable)").filter(function() {
                            return $(this).droppable("instance").options.scope === scope
                        }), parent.length && (parentInstance = $(parent[0]).droppable("instance"), parentInstance.greedyChild = "isover" === c)), parentInstance && "isover" === c && (parentInstance.isover = !1, parentInstance.isout = !0, parentInstance._out.call(parentInstance, event)), this[c] = !0, this["isout" === c ? "isover" : "isout"] = !1, this["isover" === c ? "_over" : "_out"].call(this, event), parentInstance && "isout" === c && (parentInstance.isout = !1, parentInstance.isover = !0, parentInstance._over.call(parentInstance, event)))
                    }
                })
            },
            dragStop: function(draggable, event) {
                draggable.element.parentsUntil("body").unbind("scroll.droppable"), draggable.options.refreshPositions || $.ui.ddmanager.prepareOffsets(draggable, event)
            }
        }, $.ui.droppable
    }),
    function(factory) {
        "function" == typeof define && define.amd ? define(["jquery", "./core", "./mouse", "./widget"], factory) : factory(jQuery)
    }(function($) {
        return $.widget("ui.selectable", $.ui.mouse, {
            version: "1.11.0",
            options: {
                appendTo: "body",
                autoRefresh: !0,
                distance: 0,
                filter: "*",
                tolerance: "touch",
                selected: null,
                selecting: null,
                start: null,
                stop: null,
                unselected: null,
                unselecting: null
            },
            _create: function() {
                var selectees, that = this;
                this.element.addClass("ui-selectable"), this.dragged = !1, this.refresh = function() {
                    selectees = $(that.options.filter, that.element[0]), selectees.addClass("ui-selectee"), selectees.each(function() {
                        var $this = $(this),
                            pos = $this.offset();
                        $.data(this, "selectable-item", {
                            element: this,
                            $element: $this,
                            left: pos.left,
                            top: pos.top,
                            right: pos.left + $this.outerWidth(),
                            bottom: pos.top + $this.outerHeight(),
                            startselected: !1,
                            selected: $this.hasClass("ui-selected"),
                            selecting: $this.hasClass("ui-selecting"),
                            unselecting: $this.hasClass("ui-unselecting")
                        })
                    })
                }, this.refresh(), this.selectees = selectees.addClass("ui-selectee"), this._mouseInit(), this.helper = $("<div class='ui-selectable-helper'></div>")
            },
            _destroy: function() {
                this.selectees.removeClass("ui-selectee").removeData("selectable-item"), this.element.removeClass("ui-selectable ui-selectable-disabled"), this._mouseDestroy()
            },
            _mouseStart: function(event) {
                var that = this,
                    options = this.options;
                this.opos = [event.pageX, event.pageY], this.options.disabled || (this.selectees = $(options.filter, this.element[0]), this._trigger("start", event), $(options.appendTo).append(this.helper), this.helper.css({
                    left: event.pageX,
                    top: event.pageY,
                    width: 0,
                    height: 0
                }), options.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function() {
                    var selectee = $.data(this, "selectable-item");
                    selectee.startselected = !0, event.metaKey || event.ctrlKey || (selectee.$element.removeClass("ui-selected"), selectee.selected = !1, selectee.$element.addClass("ui-unselecting"), selectee.unselecting = !0, that._trigger("unselecting", event, {
                        unselecting: selectee.element
                    }))
                }), $(event.target).parents().addBack().each(function() {
                    var doSelect, selectee = $.data(this, "selectable-item");
                    return selectee ? (doSelect = !event.metaKey && !event.ctrlKey || !selectee.$element.hasClass("ui-selected"), selectee.$element.removeClass(doSelect ? "ui-unselecting" : "ui-selected").addClass(doSelect ? "ui-selecting" : "ui-unselecting"), selectee.unselecting = !doSelect, selectee.selecting = doSelect, selectee.selected = doSelect, doSelect ? that._trigger("selecting", event, {
                        selecting: selectee.element
                    }) : that._trigger("unselecting", event, {
                        unselecting: selectee.element
                    }), !1) : void 0
                }))
            },
            _mouseDrag: function(event) {
                if (this.dragged = !0, !this.options.disabled) {
                    var tmp, that = this,
                        options = this.options,
                        x1 = this.opos[0],
                        y1 = this.opos[1],
                        x2 = event.pageX,
                        y2 = event.pageY;
                    return x1 > x2 && (tmp = x2, x2 = x1, x1 = tmp), y1 > y2 && (tmp = y2, y2 = y1, y1 = tmp), this.helper.css({
                        left: x1,
                        top: y1,
                        width: x2 - x1,
                        height: y2 - y1
                    }), this.selectees.each(function() {
                        var selectee = $.data(this, "selectable-item"),
                            hit = !1;
                        selectee && selectee.element !== that.element[0] && ("touch" === options.tolerance ? hit = !(selectee.left > x2 || selectee.right < x1 || selectee.top > y2 || selectee.bottom < y1) : "fit" === options.tolerance && (hit = selectee.left > x1 && selectee.right < x2 && selectee.top > y1 && selectee.bottom < y2), hit ? (selectee.selected && (selectee.$element.removeClass("ui-selected"), selectee.selected = !1), selectee.unselecting && (selectee.$element.removeClass("ui-unselecting"), selectee.unselecting = !1), selectee.selecting || (selectee.$element.addClass("ui-selecting"), selectee.selecting = !0, that._trigger("selecting", event, {
                            selecting: selectee.element
                        }))) : (selectee.selecting && ((event.metaKey || event.ctrlKey) && selectee.startselected ? (selectee.$element.removeClass("ui-selecting"), selectee.selecting = !1, selectee.$element.addClass("ui-selected"), selectee.selected = !0) : (selectee.$element.removeClass("ui-selecting"), selectee.selecting = !1, selectee.startselected && (selectee.$element.addClass("ui-unselecting"), selectee.unselecting = !0), that._trigger("unselecting", event, {
                            unselecting: selectee.element
                        }))), selectee.selected && (event.metaKey || event.ctrlKey || selectee.startselected || (selectee.$element.removeClass("ui-selected"), selectee.selected = !1, selectee.$element.addClass("ui-unselecting"), selectee.unselecting = !0, that._trigger("unselecting", event, {
                            unselecting: selectee.element
                        })))))
                    }), !1
                }
            },
            _mouseStop: function(event) {
                var that = this;
                return this.dragged = !1, $(".ui-unselecting", this.element[0]).each(function() {
                    var selectee = $.data(this, "selectable-item");
                    selectee.$element.removeClass("ui-unselecting"), selectee.unselecting = !1, selectee.startselected = !1, that._trigger("unselected", event, {
                        unselected: selectee.element
                    })
                }), $(".ui-selecting", this.element[0]).each(function() {
                    var selectee = $.data(this, "selectable-item");
                    selectee.$element.removeClass("ui-selecting").addClass("ui-selected"), selectee.selecting = !1, selectee.selected = !0, selectee.startselected = !0, that._trigger("selected", event, {
                        selected: selectee.element
                    })
                }), this._trigger("stop", event), this.helper.remove(), !1
            }
        })
    }),
    function(factory) {
        "function" == typeof define && define.amd ? define(["jquery", "./core", "./mouse", "./widget"], factory) : factory(jQuery)
    }(function($) {
        return $.widget("ui.sortable", $.ui.mouse, {
            version: "1.11.0",
            widgetEventPrefix: "sort",
            ready: !1,
            options: {
                appendTo: "parent",
                axis: !1,
                connectWith: !1,
                containment: !1,
                cursor: "auto",
                cursorAt: !1,
                dropOnEmpty: !0,
                forcePlaceholderSize: !1,
                forceHelperSize: !1,
                grid: !1,
                handle: !1,
                helper: "original",
                items: "> *",
                opacity: !1,
                placeholder: !1,
                revert: !1,
                scroll: !0,
                scrollSensitivity: 20,
                scrollSpeed: 20,
                scope: "default",
                tolerance: "intersect",
                zIndex: 1e3,
                activate: null,
                beforeStop: null,
                change: null,
                deactivate: null,
                out: null,
                over: null,
                receive: null,
                remove: null,
                sort: null,
                start: null,
                stop: null,
                update: null
            },
            _isOverAxis: function(x, reference, size) {
                return x >= reference && reference + size > x
            },
            _isFloating: function(item) {
                return /left|right/.test(item.css("float")) || /inline|table-cell/.test(item.css("display"))
            },
            _create: function() {
                var o = this.options;
                this.containerCache = {}, this.element.addClass("ui-sortable"), this.refresh(), this.floating = this.items.length ? "x" === o.axis || this._isFloating(this.items[0].item) : !1, this.offset = this.element.offset(), this._mouseInit(), this._setHandleClassName(), this.ready = !0
            },
            _setOption: function(key, value) {
                this._super(key, value), "handle" === key && this._setHandleClassName()
            },
            _setHandleClassName: function() {
                this.element.find(".ui-sortable-handle").removeClass("ui-sortable-handle"), $.each(this.items, function() {
                    (this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item).addClass("ui-sortable-handle")
                })
            },
            _destroy: function() {
                this.element.removeClass("ui-sortable ui-sortable-disabled").find(".ui-sortable-handle").removeClass("ui-sortable-handle"), this._mouseDestroy();
                for (var i = this.items.length - 1; i >= 0; i--) this.items[i].item.removeData(this.widgetName + "-item");
                return this
            },
            _mouseCapture: function(event, overrideHandle) {
                var currentItem = null,
                    validHandle = !1,
                    that = this;
                return this.reverting ? !1 : this.options.disabled || "static" === this.options.type ? !1 : (this._refreshItems(event), $(event.target).parents().each(function() {
                    return $.data(this, that.widgetName + "-item") === that ? (currentItem = $(this), !1) : void 0
                }), $.data(event.target, that.widgetName + "-item") === that && (currentItem = $(event.target)), currentItem && (!this.options.handle || overrideHandle || ($(this.options.handle, currentItem).find("*").addBack().each(function() {
                    this === event.target && (validHandle = !0)
                }), validHandle)) ? (this.currentItem = currentItem, this._removeCurrentsFromItems(), !0) : !1)
            },
            _mouseStart: function(event, overrideHandle, noActivation) {
                var i, body, o = this.options;
                if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(event), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = {
                        top: this.offset.top - this.margins.top,
                        left: this.offset.left - this.margins.left
                    }, $.extend(this.offset, {
                        click: {
                            left: event.pageX - this.offset.left,
                            top: event.pageY - this.offset.top
                        },
                        parent: this._getParentOffset(),
                        relative: this._getRelativeOffset()
                    }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(event), this.originalPageX = event.pageX, this.originalPageY = event.pageY, o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt), this.domPosition = {
                        prev: this.currentItem.prev()[0],
                        parent: this.currentItem.parent()[0]
                    }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), o.containment && this._setContainment(), o.cursor && "auto" !== o.cursor && (body = this.document.find("body"), this.storedCursor = body.css("cursor"), body.css("cursor", o.cursor), this.storedStylesheet = $("<style>*{ cursor: " + o.cursor + " !important; }</style>").appendTo(body)), o.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", o.opacity)), o.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", o.zIndex)), this.scrollParent[0] !== document && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", event, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !noActivation)
                    for (i = this.containers.length - 1; i >= 0; i--) this.containers[i]._trigger("activate", event, this._uiHash(this));
                return $.ui.ddmanager && ($.ui.ddmanager.current = this), $.ui.ddmanager && !o.dropBehaviour && $.ui.ddmanager.prepareOffsets(this, event), this.dragging = !0, this.helper.addClass("ui-sortable-helper"), this._mouseDrag(event), !0
            },
            _mouseDrag: function(event) {
                var i, item, itemElement, intersection, o = this.options,
                    scrolled = !1;
                for (this.position = this._generatePosition(event), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== document && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - event.pageY < o.scrollSensitivity ? this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed : event.pageY - this.overflowOffset.top < o.scrollSensitivity && (this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - event.pageX < o.scrollSensitivity ? this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed : event.pageX - this.overflowOffset.left < o.scrollSensitivity && (this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed)) : (event.pageY - $(document).scrollTop() < o.scrollSensitivity ? scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed) : $(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity && (scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed)), event.pageX - $(document).scrollLeft() < o.scrollSensitivity ? scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed) : $(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity && (scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed))), scrolled !== !1 && $.ui.ddmanager && !o.dropBehaviour && $.ui.ddmanager.prepareOffsets(this, event)), this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), i = this.items.length - 1; i >= 0; i--)
                    if (item = this.items[i], itemElement = item.item[0], intersection = this._intersectsWithPointer(item), intersection && item.instance === this.currentContainer && itemElement !== this.currentItem[0] && this.placeholder[1 === intersection ? "next" : "prev"]()[0] !== itemElement && !$.contains(this.placeholder[0], itemElement) && ("semi-dynamic" === this.options.type ? !$.contains(this.element[0], itemElement) : !0)) {
                        if (this.direction = 1 === intersection ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(item)) break;
                        this._rearrange(event, item), this._trigger("change", event, this._uiHash());
                        break
                    }
                return this._contactContainers(event), $.ui.ddmanager && $.ui.ddmanager.drag(this, event), this._trigger("sort", event, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1
            },
            _mouseStop: function(event, noPropagation) {
                if (event) {
                    if ($.ui.ddmanager && !this.options.dropBehaviour && $.ui.ddmanager.drop(this, event), this.options.revert) {
                        var that = this,
                            cur = this.placeholder.offset(),
                            axis = this.options.axis,
                            animation = {};
                        axis && "x" !== axis || (animation.left = cur.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollLeft)), axis && "y" !== axis || (animation.top = cur.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, $(this.helper).animate(animation, parseInt(this.options.revert, 10) || 500, function() {
                            that._clear(event)
                        })
                    } else this._clear(event, noPropagation);
                    return !1
                }
            },
            cancel: function() {
                if (this.dragging) {
                    this._mouseUp({
                        target: null
                    }), "original" === this.options.helper ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
                    for (var i = this.containers.length - 1; i >= 0; i--) this.containers[i]._trigger("deactivate", null, this._uiHash(this)), this.containers[i].containerCache.over && (this.containers[i]._trigger("out", null, this._uiHash(this)), this.containers[i].containerCache.over = 0)
                }
                return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), $.extend(this, {
                    helper: null,
                    dragging: !1,
                    reverting: !1,
                    _noFinalSort: null
                }), this.domPosition.prev ? $(this.domPosition.prev).after(this.currentItem) : $(this.domPosition.parent).prepend(this.currentItem)), this
            },
            serialize: function(o) {
                var items = this._getItemsAsjQuery(o && o.connected),
                    str = [];
                return o = o || {}, $(items).each(function() {
                    var res = ($(o.item || this).attr(o.attribute || "id") || "").match(o.expression || /(.+)[\-=_](.+)/);
                    res && str.push((o.key || res[1] + "[]") + "=" + (o.key && o.expression ? res[1] : res[2]))
                }), !str.length && o.key && str.push(o.key + "="), str.join("&")
            },
            toArray: function(o) {
                var items = this._getItemsAsjQuery(o && o.connected),
                    ret = [];
                return o = o || {}, items.each(function() {
                    ret.push($(o.item || this).attr(o.attribute || "id") || "")
                }), ret
            },
            _intersectsWith: function(item) {
                var x1 = this.positionAbs.left,
                    x2 = x1 + this.helperProportions.width,
                    y1 = this.positionAbs.top,
                    y2 = y1 + this.helperProportions.height,
                    l = item.left,
                    r = l + item.width,
                    t = item.top,
                    b = t + item.height,
                    dyClick = this.offset.click.top,
                    dxClick = this.offset.click.left,
                    isOverElementHeight = "x" === this.options.axis || y1 + dyClick > t && b > y1 + dyClick,
                    isOverElementWidth = "y" === this.options.axis || x1 + dxClick > l && r > x1 + dxClick,
                    isOverElement = isOverElementHeight && isOverElementWidth;
                return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > item[this.floating ? "width" : "height"] ? isOverElement : l < x1 + this.helperProportions.width / 2 && x2 - this.helperProportions.width / 2 < r && t < y1 + this.helperProportions.height / 2 && y2 - this.helperProportions.height / 2 < b
            },
            _intersectsWithPointer: function(item) {
                var isOverElementHeight = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, item.top, item.height),
                    isOverElementWidth = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, item.left, item.width),
                    isOverElement = isOverElementHeight && isOverElementWidth,
                    verticalDirection = this._getDragVerticalDirection(),
                    horizontalDirection = this._getDragHorizontalDirection();
                return isOverElement ? this.floating ? horizontalDirection && "right" === horizontalDirection || "down" === verticalDirection ? 2 : 1 : verticalDirection && ("down" === verticalDirection ? 2 : 1) : !1
            },
            _intersectsWithSides: function(item) {
                var isOverBottomHalf = this._isOverAxis(this.positionAbs.top + this.offset.click.top, item.top + item.height / 2, item.height),
                    isOverRightHalf = this._isOverAxis(this.positionAbs.left + this.offset.click.left, item.left + item.width / 2, item.width),
                    verticalDirection = this._getDragVerticalDirection(),
                    horizontalDirection = this._getDragHorizontalDirection();
                return this.floating && horizontalDirection ? "right" === horizontalDirection && isOverRightHalf || "left" === horizontalDirection && !isOverRightHalf : verticalDirection && ("down" === verticalDirection && isOverBottomHalf || "up" === verticalDirection && !isOverBottomHalf)
            },
            _getDragVerticalDirection: function() {
                var delta = this.positionAbs.top - this.lastPositionAbs.top;
                return 0 !== delta && (delta > 0 ? "down" : "up")
            },
            _getDragHorizontalDirection: function() {
                var delta = this.positionAbs.left - this.lastPositionAbs.left;
                return 0 !== delta && (delta > 0 ? "right" : "left")
            },
            refresh: function(event) {
                return this._refreshItems(event), this._setHandleClassName(), this.refreshPositions(), this
            },
            _connectWith: function() {
                var options = this.options;
                return options.connectWith.constructor === String ? [options.connectWith] : options.connectWith
            },
            _getItemsAsjQuery: function(connected) {
                function addItems() {
                    items.push(this)
                }
                var i, j, cur, inst, items = [],
                    queries = [],
                    connectWith = this._connectWith();
                if (connectWith && connected)
                    for (i = connectWith.length - 1; i >= 0; i--)
                        for (cur = $(connectWith[i]), j = cur.length - 1; j >= 0; j--) inst = $.data(cur[j], this.widgetFullName), inst && inst !== this && !inst.options.disabled && queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element) : $(inst.options.items, inst.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), inst]);
                for (queries.push([$.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                        options: this.options,
                        item: this.currentItem
                    }) : $(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]), i = queries.length - 1; i >= 0; i--) queries[i][0].each(addItems);
                return $(items)
            },
            _removeCurrentsFromItems: function() {
                var list = this.currentItem.find(":data(" + this.widgetName + "-item)");
                this.items = $.grep(this.items, function(item) {
                    for (var j = 0; j < list.length; j++)
                        if (list[j] === item.item[0]) return !1;
                    return !0
                })
            },
            _refreshItems: function(event) {
                this.items = [], this.containers = [this];
                var i, j, cur, inst, targetData, _queries, item, queriesLength, items = this.items,
                    queries = [
                        [$.isFunction(this.options.items) ? this.options.items.call(this.element[0], event, {
                            item: this.currentItem
                        }) : $(this.options.items, this.element), this]
                    ],
                    connectWith = this._connectWith();
                if (connectWith && this.ready)
                    for (i = connectWith.length - 1; i >= 0; i--)
                        for (cur = $(connectWith[i]), j = cur.length - 1; j >= 0; j--) inst = $.data(cur[j], this.widgetFullName), inst && inst !== this && !inst.options.disabled && (queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element[0], event, {
                            item: this.currentItem
                        }) : $(inst.options.items, inst.element), inst]), this.containers.push(inst));
                for (i = queries.length - 1; i >= 0; i--)
                    for (targetData = queries[i][1], _queries = queries[i][0], j = 0, queriesLength = _queries.length; queriesLength > j; j++) item = $(_queries[j]), item.data(this.widgetName + "-item", targetData), items.push({
                        item: item,
                        instance: targetData,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
            },
            refreshPositions: function(fast) {
                this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
                var i, item, t, p;
                for (i = this.items.length - 1; i >= 0; i--) item = this.items[i], item.instance !== this.currentContainer && this.currentContainer && item.item[0] !== this.currentItem[0] || (t = this.options.toleranceElement ? $(this.options.toleranceElement, item.item) : item.item, fast || (item.width = t.outerWidth(), item.height = t.outerHeight()), p = t.offset(), item.left = p.left, item.top = p.top);
                if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);
                else
                    for (i = this.containers.length - 1; i >= 0; i--) p = this.containers[i].element.offset(), this.containers[i].containerCache.left = p.left, this.containers[i].containerCache.top = p.top, this.containers[i].containerCache.width = this.containers[i].element.outerWidth(), this.containers[i].containerCache.height = this.containers[i].element.outerHeight();
                return this
            },
            _createPlaceholder: function(that) {
                that = that || this;
                var className, o = that.options;
                o.placeholder && o.placeholder.constructor !== String || (className = o.placeholder, o.placeholder = {
                    element: function() {
                        var nodeName = that.currentItem[0].nodeName.toLowerCase(),
                            element = $("<" + nodeName + ">", that.document[0]).addClass(className || that.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper");
                        return "tr" === nodeName ? that.currentItem.children().each(function() {
                            $("<td>&#160;</td>", that.document[0]).attr("colspan", $(this).attr("colspan") || 1).appendTo(element)
                        }) : "img" === nodeName && element.attr("src", that.currentItem.attr("src")), className || element.css("visibility", "hidden"), element
                    },
                    update: function(container, p) {
                        (!className || o.forcePlaceholderSize) && (p.height() || p.height(that.currentItem.innerHeight() - parseInt(that.currentItem.css("paddingTop") || 0, 10) - parseInt(that.currentItem.css("paddingBottom") || 0, 10)), p.width() || p.width(that.currentItem.innerWidth() - parseInt(that.currentItem.css("paddingLeft") || 0, 10) - parseInt(that.currentItem.css("paddingRight") || 0, 10)))
                    }
                }), that.placeholder = $(o.placeholder.element.call(that.element, that.currentItem)), that.currentItem.after(that.placeholder), o.placeholder.update(that, that.placeholder)
            },
            _contactContainers: function(event) {
                var i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, cur, nearBottom, floating, axis, innermostContainer = null,
                    innermostIndex = null;
                for (i = this.containers.length - 1; i >= 0; i--)
                    if (!$.contains(this.currentItem[0], this.containers[i].element[0]))
                        if (this._intersectsWith(this.containers[i].containerCache)) {
                            if (innermostContainer && $.contains(this.containers[i].element[0], innermostContainer.element[0])) continue;
                            innermostContainer = this.containers[i], innermostIndex = i
                        } else this.containers[i].containerCache.over && (this.containers[i]._trigger("out", event, this._uiHash(this)), this.containers[i].containerCache.over = 0);
                if (innermostContainer)
                    if (1 === this.containers.length) this.containers[innermostIndex].containerCache.over || (this.containers[innermostIndex]._trigger("over", event, this._uiHash(this)), this.containers[innermostIndex].containerCache.over = 1);
                    else {
                        for (dist = 1e4, itemWithLeastDistance = null, floating = innermostContainer.floating || this._isFloating(this.currentItem), posProperty = floating ? "left" : "top", sizeProperty = floating ? "width" : "height", axis = floating ? "clientX" : "clientY", j = this.items.length - 1; j >= 0; j--) $.contains(this.containers[innermostIndex].element[0], this.items[j].item[0]) && this.items[j].item[0] !== this.currentItem[0] && (cur = this.items[j].item.offset()[posProperty], nearBottom = !1, event[axis] - cur > this.items[j][sizeProperty] / 2 && (nearBottom = !0), Math.abs(event[axis] - cur) < dist && (dist = Math.abs(event[axis] - cur), itemWithLeastDistance = this.items[j], this.direction = nearBottom ? "up" : "down"));
                        if (!itemWithLeastDistance && !this.options.dropOnEmpty) return;
                        if (this.currentContainer === this.containers[innermostIndex]) return;
                        itemWithLeastDistance ? this._rearrange(event, itemWithLeastDistance, null, !0) : this._rearrange(event, null, this.containers[innermostIndex].element, !0), this._trigger("change", event, this._uiHash()), this.containers[innermostIndex]._trigger("change", event, this._uiHash(this)), this.currentContainer = this.containers[innermostIndex], this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[innermostIndex]._trigger("over", event, this._uiHash(this)), this.containers[innermostIndex].containerCache.over = 1
                    }
            },
            _createHelper: function(event) {
                var o = this.options,
                    helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event, this.currentItem])) : "clone" === o.helper ? this.currentItem.clone() : this.currentItem;
                return helper.parents("body").length || $("parent" !== o.appendTo ? o.appendTo : this.currentItem[0].parentNode)[0].appendChild(helper[0]), helper[0] === this.currentItem[0] && (this._storedCSS = {
                    width: this.currentItem[0].style.width,
                    height: this.currentItem[0].style.height,
                    position: this.currentItem.css("position"),
                    top: this.currentItem.css("top"),
                    left: this.currentItem.css("left")
                }), (!helper[0].style.width || o.forceHelperSize) && helper.width(this.currentItem.width()), (!helper[0].style.height || o.forceHelperSize) && helper.height(this.currentItem.height()), helper
            },
            _adjustOffsetFromHelper: function(obj) {
                "string" == typeof obj && (obj = obj.split(" ")), $.isArray(obj) && (obj = {
                    left: +obj[0],
                    top: +obj[1] || 0
                }), "left" in obj && (this.offset.click.left = obj.left + this.margins.left), "right" in obj && (this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left), "top" in obj && (this.offset.click.top = obj.top + this.margins.top), "bottom" in obj && (this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top)
            },
            _getParentOffset: function() {
                this.offsetParent = this.helper.offsetParent();
                var po = this.offsetParent.offset();
                return "absolute" === this.cssPosition && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0]) && (po.left += this.scrollParent.scrollLeft(), po.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === document.body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && $.ui.ie) && (po = {
                    top: 0,
                    left: 0
                }), {
                    top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                    left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
                }
            },
            _getRelativeOffset: function() {
                if ("relative" === this.cssPosition) {
                    var p = this.currentItem.position();
                    return {
                        top: p.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                        left: p.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                    }
                }
                return {
                    top: 0,
                    left: 0
                }
            },
            _cacheMargins: function() {
                this.margins = {
                    left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                    top: parseInt(this.currentItem.css("marginTop"), 10) || 0
                }
            },
            _cacheHelperProportions: function() {
                this.helperProportions = {
                    width: this.helper.outerWidth(),
                    height: this.helper.outerHeight()
                }
            },
            _setContainment: function() {
                var ce, co, over, o = this.options;
                "parent" === o.containment && (o.containment = this.helper[0].parentNode), ("document" === o.containment || "window" === o.containment) && (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, $("document" === o.containment ? document : window).width() - this.helperProportions.width - this.margins.left, ($("document" === o.containment ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(o.containment) || (ce = $(o.containment)[0], co = $(o.containment).offset(), over = "hidden" !== $(ce).css("overflow"), this.containment = [co.left + (parseInt($(ce).css("borderLeftWidth"), 10) || 0) + (parseInt($(ce).css("paddingLeft"), 10) || 0) - this.margins.left, co.top + (parseInt($(ce).css("borderTopWidth"), 10) || 0) + (parseInt($(ce).css("paddingTop"), 10) || 0) - this.margins.top, co.left + (over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css("borderLeftWidth"), 10) || 0) - (parseInt($(ce).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, co.top + (over ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css("borderTopWidth"), 10) || 0) - (parseInt($(ce).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top])
            },
            _convertPositionTo: function(d, pos) {
                pos || (pos = this.position);
                var mod = "absolute" === d ? 1 : -1,
                    scroll = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
                    scrollIsRootNode = /(html|body)/i.test(scroll[0].tagName);
                return {
                    top: pos.top + this.offset.relative.top * mod + this.offset.parent.top * mod - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : scrollIsRootNode ? 0 : scroll.scrollTop()) * mod,
                    left: pos.left + this.offset.relative.left * mod + this.offset.parent.left * mod - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft()) * mod
                }
            },
            _generatePosition: function(event) {
                var top, left, o = this.options,
                    pageX = event.pageX,
                    pageY = event.pageY,
                    scroll = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
                    scrollIsRootNode = /(html|body)/i.test(scroll[0].tagName);
                return "relative" !== this.cssPosition || this.scrollParent[0] !== document && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (event.pageX - this.offset.click.left < this.containment[0] && (pageX = this.containment[0] + this.offset.click.left), event.pageY - this.offset.click.top < this.containment[1] && (pageY = this.containment[1] + this.offset.click.top), event.pageX - this.offset.click.left > this.containment[2] && (pageX = this.containment[2] + this.offset.click.left), event.pageY - this.offset.click.top > this.containment[3] && (pageY = this.containment[3] + this.offset.click.top)), o.grid && (top = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1], pageY = this.containment ? top - this.offset.click.top >= this.containment[1] && top - this.offset.click.top <= this.containment[3] ? top : top - this.offset.click.top >= this.containment[1] ? top - o.grid[1] : top + o.grid[1] : top, left = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0], pageX = this.containment ? left - this.offset.click.left >= this.containment[0] && left - this.offset.click.left <= this.containment[2] ? left : left - this.offset.click.left >= this.containment[0] ? left - o.grid[0] : left + o.grid[0] : left)), {
                    top: pageY - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : scrollIsRootNode ? 0 : scroll.scrollTop()),
                    left: pageX - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft())
                }
            },
            _rearrange: function(event, i, a, hardRefresh) {
                a ? a[0].appendChild(this.placeholder[0]) : i.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? i.item[0] : i.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;
                var counter = this.counter;
                this._delay(function() {
                    counter === this.counter && this.refreshPositions(!hardRefresh)
                })
            },
            _clear: function(event, noPropagation) {
                function delayEvent(type, instance, container) {
                    return function(event) {
                        container._trigger(type, event, instance._uiHash(instance))
                    }
                }
                this.reverting = !1;
                var i, delayedTriggers = [];
                if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
                    for (i in this._storedCSS)("auto" === this._storedCSS[i] || "static" === this._storedCSS[i]) && (this._storedCSS[i] = "");
                    this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
                } else this.currentItem.show();
                for (this.fromOutside && !noPropagation && delayedTriggers.push(function(event) {
                        this._trigger("receive", event, this._uiHash(this.fromOutside))
                    }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || noPropagation || delayedTriggers.push(function(event) {
                        this._trigger("update", event, this._uiHash())
                    }), this !== this.currentContainer && (noPropagation || (delayedTriggers.push(function(event) {
                        this._trigger("remove", event, this._uiHash())
                    }), delayedTriggers.push(function(c) {
                        return function(event) {
                            c._trigger("receive", event, this._uiHash(this))
                        }
                    }.call(this, this.currentContainer)), delayedTriggers.push(function(c) {
                        return function(event) {
                            c._trigger("update", event, this._uiHash(this))
                        }
                    }.call(this, this.currentContainer)))), i = this.containers.length - 1; i >= 0; i--) noPropagation || delayedTriggers.push(delayEvent("deactivate", this, this.containers[i])), this.containers[i].containerCache.over && (delayedTriggers.push(delayEvent("out", this, this.containers[i])), this.containers[i].containerCache.over = 0);
                if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = !1, this.cancelHelperRemoval) {
                    if (!noPropagation) {
                        for (this._trigger("beforeStop", event, this._uiHash()), i = 0; i < delayedTriggers.length; i++) delayedTriggers[i].call(this, event);
                        this._trigger("stop", event, this._uiHash())
                    }
                    return this.fromOutside = !1, !1
                }
                if (noPropagation || this._trigger("beforeStop", event, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null, !noPropagation) {
                    for (i = 0; i < delayedTriggers.length; i++) delayedTriggers[i].call(this, event);
                    this._trigger("stop", event, this._uiHash())
                }
                return this.fromOutside = !1, !0
            },
            _trigger: function() {
                $.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel()
            },
            _uiHash: function(_inst) {
                var inst = _inst || this;
                return {
                    helper: inst.helper,
                    placeholder: inst.placeholder || $([]),
                    position: inst.position,
                    originalPosition: inst.originalPosition,
                    offset: inst.positionAbs,
                    item: inst.currentItem,
                    sender: _inst ? _inst.element : null
                }
            }
        })
    }),
    function(factory) {
        "function" == typeof define && define.amd ? define(["jquery", "./core", "./mouse", "./widget"], factory) : factory(jQuery)
    }(function($) {
        return $.widget("ui.slider", $.ui.mouse, {
            version: "1.11.0",
            widgetEventPrefix: "slide",
            options: {
                animate: !1,
                distance: 0,
                max: 100,
                min: 0,
                orientation: "horizontal",
                range: !1,
                step: 1,
                value: 0,
                values: null,
                change: null,
                slide: null,
                start: null,
                stop: null
            },
            numPages: 5,
            _create: function() {
                this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all"), this._refresh(), this._setOption("disabled", this.options.disabled), this._animateOff = !1
            },
            _refresh: function() {
                this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue()
            },
            _createHandles: function() {
                var i, handleCount, options = this.options,
                    existingHandles = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),
                    handle = "<span class='ui-slider-handle ui-state-default ui-corner-all' tabindex='0'></span>",
                    handles = [];
                for (handleCount = options.values && options.values.length || 1, existingHandles.length > handleCount && (existingHandles.slice(handleCount).remove(), existingHandles = existingHandles.slice(0, handleCount)), i = existingHandles.length; handleCount > i; i++) handles.push(handle);
                this.handles = existingHandles.add($(handles.join("")).appendTo(this.element)), this.handle = this.handles.eq(0), this.handles.each(function(i) {
                    $(this).data("ui-slider-handle-index", i)
                })
            },
            _createRange: function() {
                var options = this.options,
                    classes = "";
                options.range ? (options.range === !0 && (options.values ? options.values.length && 2 !== options.values.length ? options.values = [options.values[0], options.values[0]] : $.isArray(options.values) && (options.values = options.values.slice(0)) : options.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({
                    left: "",
                    bottom: ""
                }) : (this.range = $("<div></div>").appendTo(this.element), classes = "ui-slider-range ui-widget-header ui-corner-all"), this.range.addClass(classes + ("min" === options.range || "max" === options.range ? " ui-slider-range-" + options.range : ""))) : (this.range && this.range.remove(), this.range = null)
            },
            _setupEvents: function() {
                this._off(this.handles), this._on(this.handles, this._handleEvents), this._hoverable(this.handles), this._focusable(this.handles)
            },
            _destroy: function() {
                this.handles.remove(), this.range && this.range.remove(), this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"), this._mouseDestroy()
            },
            _mouseCapture: function(event) {
                var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle, that = this,
                    o = this.options;
                return o.disabled ? !1 : (this.elementSize = {
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight()
                }, this.elementOffset = this.element.offset(), position = {
                    x: event.pageX,
                    y: event.pageY
                }, normValue = this._normValueFromMouse(position), distance = this._valueMax() - this._valueMin() + 1, this.handles.each(function(i) {
                    var thisDistance = Math.abs(normValue - that.values(i));
                    (distance > thisDistance || distance === thisDistance && (i === that._lastChangedValue || that.values(i) === o.min)) && (distance = thisDistance, closestHandle = $(this), index = i)
                }), allowed = this._start(event, index), allowed === !1 ? !1 : (this._mouseSliding = !0, this._handleIndex = index, closestHandle.addClass("ui-state-active").focus(), offset = closestHandle.offset(), mouseOverHandle = !$(event.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = mouseOverHandle ? {
                    left: 0,
                    top: 0
                } : {
                    left: event.pageX - offset.left - closestHandle.width() / 2,
                    top: event.pageY - offset.top - closestHandle.height() / 2 - (parseInt(closestHandle.css("borderTopWidth"), 10) || 0) - (parseInt(closestHandle.css("borderBottomWidth"), 10) || 0) + (parseInt(closestHandle.css("marginTop"), 10) || 0)
                }, this.handles.hasClass("ui-state-hover") || this._slide(event, index, normValue), this._animateOff = !0, !0))
            },
            _mouseStart: function() {
                return !0
            },
            _mouseDrag: function(event) {
                var position = {
                        x: event.pageX,
                        y: event.pageY
                    },
                    normValue = this._normValueFromMouse(position);
                return this._slide(event, this._handleIndex, normValue), !1
            },
            _mouseStop: function(event) {
                return this.handles.removeClass("ui-state-active"), this._mouseSliding = !1, this._stop(event, this._handleIndex), this._change(event, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1
            },
            _detectOrientation: function() {
                this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal"
            },
            _normValueFromMouse: function(position) {
                var pixelTotal, pixelMouse, percentMouse, valueTotal, valueMouse;
                return "horizontal" === this.orientation ? (pixelTotal = this.elementSize.width, pixelMouse = position.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (pixelTotal = this.elementSize.height, pixelMouse = position.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), percentMouse = pixelMouse / pixelTotal, percentMouse > 1 && (percentMouse = 1), 0 > percentMouse && (percentMouse = 0), "vertical" === this.orientation && (percentMouse = 1 - percentMouse), valueTotal = this._valueMax() - this._valueMin(), valueMouse = this._valueMin() + percentMouse * valueTotal, this._trimAlignValue(valueMouse)
            },
            _start: function(event, index) {
                var uiHash = {
                    handle: this.handles[index],
                    value: this.value()
                };
                return this.options.values && this.options.values.length && (uiHash.value = this.values(index), uiHash.values = this.values()), this._trigger("start", event, uiHash)
            },
            _slide: function(event, index, newVal) {
                var otherVal, newValues, allowed;
                this.options.values && this.options.values.length ? (otherVal = this.values(index ? 0 : 1), 2 === this.options.values.length && this.options.range === !0 && (0 === index && newVal > otherVal || 1 === index && otherVal > newVal) && (newVal = otherVal), newVal !== this.values(index) && (newValues = this.values(), newValues[index] = newVal, allowed = this._trigger("slide", event, {
                    handle: this.handles[index],
                    value: newVal,
                    values: newValues
                }), otherVal = this.values(index ? 0 : 1), allowed !== !1 && this.values(index, newVal))) : newVal !== this.value() && (allowed = this._trigger("slide", event, {
                    handle: this.handles[index],
                    value: newVal
                }), allowed !== !1 && this.value(newVal))
            },
            _stop: function(event, index) {
                var uiHash = {
                    handle: this.handles[index],
                    value: this.value()
                };
                this.options.values && this.options.values.length && (uiHash.value = this.values(index), uiHash.values = this.values()), this._trigger("stop", event, uiHash)
            },
            _change: function(event, index) {
                if (!this._keySliding && !this._mouseSliding) {
                    var uiHash = {
                        handle: this.handles[index],
                        value: this.value()
                    };
                    this.options.values && this.options.values.length && (uiHash.value = this.values(index), uiHash.values = this.values()), this._lastChangedValue = index, this._trigger("change", event, uiHash)
                }
            },
            value: function(newValue) {
                return arguments.length ? (this.options.value = this._trimAlignValue(newValue), this._refreshValue(), void this._change(null, 0)) : this._value()
            },
            values: function(index, newValue) {
                var vals, newValues, i;
                if (arguments.length > 1) return this.options.values[index] = this._trimAlignValue(newValue), this._refreshValue(), void this._change(null, index);
                if (!arguments.length) return this._values();
                if (!$.isArray(arguments[0])) return this.options.values && this.options.values.length ? this._values(index) : this.value();
                for (vals = this.options.values, newValues = arguments[0], i = 0; i < vals.length; i += 1) vals[i] = this._trimAlignValue(newValues[i]), this._change(null, i);
                this._refreshValue()
            },
            _setOption: function(key, value) {
                var i, valsLength = 0;
                switch ("range" === key && this.options.range === !0 && ("min" === value ? (this.options.value = this._values(0), this.options.values = null) : "max" === value && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), $.isArray(this.options.values) && (valsLength = this.options.values.length), "disabled" === key && this.element.toggleClass("ui-state-disabled", !!value), this._super(key, value), key) {
                    case "orientation":
                        this._detectOrientation(), this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation), this._refreshValue();
                        break;
                    case "value":
                        this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1;
                        break;
                    case "values":
                        for (this._animateOff = !0, this._refreshValue(), i = 0; valsLength > i; i += 1) this._change(null, i);
                        this._animateOff = !1;
                        break;
                    case "min":
                    case "max":
                        this._animateOff = !0, this._refreshValue(), this._animateOff = !1;
                        break;
                    case "range":
                        this._animateOff = !0, this._refresh(), this._animateOff = !1
                }
            },
            _value: function() {
                var val = this.options.value;
                return val = this._trimAlignValue(val)
            },
            _values: function(index) {
                var val, vals, i;
                if (arguments.length) return val = this.options.values[index], val = this._trimAlignValue(val);
                if (this.options.values && this.options.values.length) {
                    for (vals = this.options.values.slice(), i = 0; i < vals.length; i += 1) vals[i] = this._trimAlignValue(vals[i]);
                    return vals
                }
                return []
            },
            _trimAlignValue: function(val) {
                if (val <= this._valueMin()) return this._valueMin();
                if (val >= this._valueMax()) return this._valueMax();
                var step = this.options.step > 0 ? this.options.step : 1,
                    valModStep = (val - this._valueMin()) % step,
                    alignValue = val - valModStep;
                return 2 * Math.abs(valModStep) >= step && (alignValue += valModStep > 0 ? step : -step), parseFloat(alignValue.toFixed(5))
            },
            _valueMin: function() {
                return this.options.min
            },
            _valueMax: function() {
                return this.options.max
            },
            _refreshValue: function() {
                var lastValPercent, valPercent, value, valueMin, valueMax, oRange = this.options.range,
                    o = this.options,
                    that = this,
                    animate = this._animateOff ? !1 : o.animate,
                    _set = {};
                this.options.values && this.options.values.length ? this.handles.each(function(i) {
                    valPercent = (that.values(i) - that._valueMin()) / (that._valueMax() - that._valueMin()) * 100, _set["horizontal" === that.orientation ? "left" : "bottom"] = valPercent + "%", $(this).stop(1, 1)[animate ? "animate" : "css"](_set, o.animate), that.options.range === !0 && ("horizontal" === that.orientation ? (0 === i && that.range.stop(1, 1)[animate ? "animate" : "css"]({
                        left: valPercent + "%"
                    }, o.animate), 1 === i && that.range[animate ? "animate" : "css"]({
                        width: valPercent - lastValPercent + "%"
                    }, {
                        queue: !1,
                        duration: o.animate
                    })) : (0 === i && that.range.stop(1, 1)[animate ? "animate" : "css"]({
                        bottom: valPercent + "%"
                    }, o.animate), 1 === i && that.range[animate ? "animate" : "css"]({
                        height: valPercent - lastValPercent + "%"
                    }, {
                        queue: !1,
                        duration: o.animate
                    }))), lastValPercent = valPercent
                }) : (value = this.value(), valueMin = this._valueMin(), valueMax = this._valueMax(), valPercent = valueMax !== valueMin ? (value - valueMin) / (valueMax - valueMin) * 100 : 0, _set["horizontal" === this.orientation ? "left" : "bottom"] = valPercent + "%", this.handle.stop(1, 1)[animate ? "animate" : "css"](_set, o.animate), "min" === oRange && "horizontal" === this.orientation && this.range.stop(1, 1)[animate ? "animate" : "css"]({
                    width: valPercent + "%"
                }, o.animate), "max" === oRange && "horizontal" === this.orientation && this.range[animate ? "animate" : "css"]({
                    width: 100 - valPercent + "%"
                }, {
                    queue: !1,
                    duration: o.animate
                }), "min" === oRange && "vertical" === this.orientation && this.range.stop(1, 1)[animate ? "animate" : "css"]({
                    height: valPercent + "%"
                }, o.animate), "max" === oRange && "vertical" === this.orientation && this.range[animate ? "animate" : "css"]({
                    height: 100 - valPercent + "%"
                }, {
                    queue: !1,
                    duration: o.animate
                }))
            },
            _handleEvents: {
                keydown: function(event) {
                    var allowed, curVal, newVal, step, index = $(event.target).data("ui-slider-handle-index");
                    switch (event.keyCode) {
                        case $.ui.keyCode.HOME:
                        case $.ui.keyCode.END:
                        case $.ui.keyCode.PAGE_UP:
                        case $.ui.keyCode.PAGE_DOWN:
                        case $.ui.keyCode.UP:
                        case $.ui.keyCode.RIGHT:
                        case $.ui.keyCode.DOWN:
                        case $.ui.keyCode.LEFT:
                            if (event.preventDefault(), !this._keySliding && (this._keySliding = !0, $(event.target).addClass("ui-state-active"), allowed = this._start(event, index), allowed === !1)) return
                    }
                    switch (step = this.options.step, curVal = newVal = this.options.values && this.options.values.length ? this.values(index) : this.value(), event.keyCode) {
                        case $.ui.keyCode.HOME:
                            newVal = this._valueMin();
                            break;
                        case $.ui.keyCode.END:
                            newVal = this._valueMax();
                            break;
                        case $.ui.keyCode.PAGE_UP:
                            newVal = this._trimAlignValue(curVal + (this._valueMax() - this._valueMin()) / this.numPages);
                            break;
                        case $.ui.keyCode.PAGE_DOWN:
                            newVal = this._trimAlignValue(curVal - (this._valueMax() - this._valueMin()) / this.numPages);
                            break;
                        case $.ui.keyCode.UP:
                        case $.ui.keyCode.RIGHT:
                            if (curVal === this._valueMax()) return;
                            newVal = this._trimAlignValue(curVal + step);
                            break;
                        case $.ui.keyCode.DOWN:
                        case $.ui.keyCode.LEFT:
                            if (curVal === this._valueMin()) return;
                            newVal = this._trimAlignValue(curVal - step)
                    }
                    this._slide(event, index, newVal)
                },
                keyup: function(event) {
                    var index = $(event.target).data("ui-slider-handle-index");
                    this._keySliding && (this._keySliding = !1, this._stop(event, index), this._change(event, index), $(event.target).removeClass("ui-state-active"))
                }
            }
        })
    }),
    function(factory) {
        "function" == typeof define && define.amd ? define(["jquery", "./core", "./widget"], factory) : factory(jQuery)
    }(function($) {
        var lastActive, baseClasses = "ui-button ui-widget ui-state-default ui-corner-all",
            typeClasses = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
            formResetHandler = function() {
                var form = $(this);
                setTimeout(function() {
                    form.find(":ui-button").button("refresh")
                }, 1)
            },
            radioGroup = function(radio) {
                var name = radio.name,
                    form = radio.form,
                    radios = $([]);
                return name && (name = name.replace(/'/g, "\\'"), radios = form ? $(form).find("[name='" + name + "'][type=radio]") : $("[name='" + name + "'][type=radio]", radio.ownerDocument).filter(function() {
                    return !this.form
                })), radios
            };
        return $.widget("ui.button", {
            version: "1.11.0",
            defaultElement: "<button>",
            options: {
                disabled: null,
                text: !0,
                label: null,
                icons: {
                    primary: null,
                    secondary: null
                }
            },
            _create: function() {
                this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, formResetHandler), "boolean" != typeof this.options.disabled ? this.options.disabled = !!this.element.prop("disabled") : this.element.prop("disabled", this.options.disabled), this._determineButtonType(), this.hasTitle = !!this.buttonElement.attr("title");
                var that = this,
                    options = this.options,
                    toggleButton = "checkbox" === this.type || "radio" === this.type,
                    activeClass = toggleButton ? "" : "ui-state-active";
                null === options.label && (options.label = "input" === this.type ? this.buttonElement.val() : this.buttonElement.html()), this._hoverable(this.buttonElement), this.buttonElement.addClass(baseClasses).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
                    options.disabled || this === lastActive && $(this).addClass("ui-state-active")
                }).bind("mouseleave" + this.eventNamespace, function() {
                    options.disabled || $(this).removeClass(activeClass)
                }).bind("click" + this.eventNamespace, function(event) {
                    options.disabled && (event.preventDefault(), event.stopImmediatePropagation())
                }), this._on({
                    focus: function() {
                        this.buttonElement.addClass("ui-state-focus")
                    },
                    blur: function() {
                        this.buttonElement.removeClass("ui-state-focus")
                    }
                }), toggleButton && this.element.bind("change" + this.eventNamespace, function() {
                    that.refresh()
                }), "checkbox" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
                    return options.disabled ? !1 : void 0
                }) : "radio" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
                    if (options.disabled) return !1;
                    $(this).addClass("ui-state-active"), that.buttonElement.attr("aria-pressed", "true");
                    var radio = that.element[0];
                    radioGroup(radio).not(radio).map(function() {
                        return $(this).button("widget")[0]
                    }).removeClass("ui-state-active").attr("aria-pressed", "false")
                }) : (this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
                    return options.disabled ? !1 : ($(this).addClass("ui-state-active"), lastActive = this, void that.document.one("mouseup", function() {
                        lastActive = null
                    }))
                }).bind("mouseup" + this.eventNamespace, function() {
                    return options.disabled ? !1 : void $(this).removeClass("ui-state-active")
                }).bind("keydown" + this.eventNamespace, function(event) {
                    return options.disabled ? !1 : void((event.keyCode === $.ui.keyCode.SPACE || event.keyCode === $.ui.keyCode.ENTER) && $(this).addClass("ui-state-active"))
                }).bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {
                    $(this).removeClass("ui-state-active")
                }), this.buttonElement.is("a") && this.buttonElement.keyup(function(event) {
                    event.keyCode === $.ui.keyCode.SPACE && $(this).click()
                })), this._setOption("disabled", options.disabled), this._resetButton()
            },
            _determineButtonType: function() {
                var ancestor, labelSelector, checked;
                this.type = this.element.is("[type=checkbox]") ? "checkbox" : this.element.is("[type=radio]") ? "radio" : this.element.is("input") ? "input" : "button", "checkbox" === this.type || "radio" === this.type ? (ancestor = this.element.parents().last(), labelSelector = "label[for='" + this.element.attr("id") + "']", this.buttonElement = ancestor.find(labelSelector), this.buttonElement.length || (ancestor = ancestor.length ? ancestor.siblings() : this.element.siblings(), this.buttonElement = ancestor.filter(labelSelector), this.buttonElement.length || (this.buttonElement = ancestor.find(labelSelector))), this.element.addClass("ui-helper-hidden-accessible"), checked = this.element.is(":checked"), checked && this.buttonElement.addClass("ui-state-active"), this.buttonElement.prop("aria-pressed", checked)) : this.buttonElement = this.element
            },
            widget: function() {
                return this.buttonElement
            },
            _destroy: function() {
                this.element.removeClass("ui-helper-hidden-accessible"), this.buttonElement.removeClass(baseClasses + " ui-state-active " + typeClasses).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()), this.hasTitle || this.buttonElement.removeAttr("title")
            },
            _setOption: function(key, value) {
                return this._super(key, value), "disabled" === key ? (this.widget().toggleClass("ui-state-disabled", !!value), this.element.prop("disabled", !!value), void(value && this.buttonElement.removeClass("checkbox" === this.type || "radio" === this.type ? "ui-state-focus" : "ui-state-focus ui-state-active"))) : void this._resetButton()
            },
            refresh: function() {
                var isDisabled = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
                isDisabled !== this.options.disabled && this._setOption("disabled", isDisabled), "radio" === this.type ? radioGroup(this.element[0]).each(function() {
                    $(this).is(":checked") ? $(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : $(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
                }) : "checkbox" === this.type && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false"))
            },
            _resetButton: function() {
                if ("input" === this.type) return void(this.options.label && this.element.val(this.options.label));
                var buttonElement = this.buttonElement.removeClass(typeClasses),
                    buttonText = $("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(buttonElement.empty()).text(),
                    icons = this.options.icons,
                    multipleIcons = icons.primary && icons.secondary,
                    buttonClasses = [];
                icons.primary || icons.secondary ? (this.options.text && buttonClasses.push("ui-button-text-icon" + (multipleIcons ? "s" : icons.primary ? "-primary" : "-secondary")), icons.primary && buttonElement.prepend("<span class='ui-button-icon-primary ui-icon " + icons.primary + "'></span>"), icons.secondary && buttonElement.append("<span class='ui-button-icon-secondary ui-icon " + icons.secondary + "'></span>"), this.options.text || (buttonClasses.push(multipleIcons ? "ui-button-icons-only" : "ui-button-icon-only"), this.hasTitle || buttonElement.attr("title", $.trim(buttonText)))) : buttonClasses.push("ui-button-text-only"), buttonElement.addClass(buttonClasses.join(" "))
            }
        }), $.widget("ui.buttonset", {
            version: "1.11.0",
            options: {
                items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"
            },
            _create: function() {
                this.element.addClass("ui-buttonset")
            },
            _init: function() {
                this.refresh()
            },
            _setOption: function(key, value) {
                "disabled" === key && this.buttons.button("option", key, value), this._super(key, value)
            },
            refresh: function() {
                var rtl = "rtl" === this.element.css("direction"),
                    allButtons = this.element.find(this.options.items),
                    existingButtons = allButtons.filter(":ui-button");
                allButtons.not(":ui-button").button(), existingButtons.button("refresh"), this.buttons = allButtons.map(function() {
                    return $(this).button("widget")[0]
                }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(rtl ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(rtl ? "ui-corner-left" : "ui-corner-right").end().end()
            },
            _destroy: function() {
                this.element.removeClass("ui-buttonset"), this.buttons.map(function() {
                    return $(this).button("widget")[0]
                }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
            }
        }), $.ui.button
    }),
    function(window, document, undefined) {
        "use strict";

        function minErr(module) {
            return function() {
                var message, i, code = arguments[0],
                    prefix = "[" + (module ? module + ":" : "") + code + "] ",
                    template = arguments[1],
                    templateArgs = arguments,
                    stringify = function(obj) {
                        return "function" == typeof obj ? obj.toString().replace(/ \{[\s\S]*$/, "") : "undefined" == typeof obj ? "undefined" : "string" != typeof obj ? JSON.stringify(obj) : obj
                    };
                for (message = prefix + template.replace(/\{\d+\}/g, function(match) {
                        var arg, index = +match.slice(1, -1);
                        return index + 2 < templateArgs.length ? (arg = templateArgs[index + 2], "function" == typeof arg ? arg.toString().replace(/ ?\{[\s\S]*$/, "") : "undefined" == typeof arg ? "undefined" : "string" != typeof arg ? toJson(arg) : arg) : match
                    }), message = message + "\nhttp://errors.angularjs.org/1.2.28/" + (module ? module + "/" : "") + code, i = 2; i < arguments.length; i++) message = message + (2 == i ? "?" : "&") + "p" + (i - 2) + "=" + encodeURIComponent(stringify(arguments[i]));
                return new Error(message)
            }
        }

        function isArrayLike(obj) {
            if (null == obj || isWindow(obj)) return !1;
            var length = obj.length;
            return 1 === obj.nodeType && length ? !0 : isString(obj) || isArray(obj) || 0 === length || "number" == typeof length && length > 0 && length - 1 in obj
        }

        function forEach(obj, iterator, context) {
            var key;
            if (obj)
                if (isFunction(obj))
                    for (key in obj) "prototype" == key || "length" == key || "name" == key || obj.hasOwnProperty && !obj.hasOwnProperty(key) || iterator.call(context, obj[key], key);
                else if (isArray(obj) || isArrayLike(obj))
                for (key = 0; key < obj.length; key++) iterator.call(context, obj[key], key);
            else if (obj.forEach && obj.forEach !== forEach) obj.forEach(iterator, context);
            else
                for (key in obj) obj.hasOwnProperty(key) && iterator.call(context, obj[key], key);
            return obj
        }

        function sortedKeys(obj) {
            var keys = [];
            for (var key in obj) obj.hasOwnProperty(key) && keys.push(key);
            return keys.sort()
        }

        function forEachSorted(obj, iterator, context) {
            for (var keys = sortedKeys(obj), i = 0; i < keys.length; i++) iterator.call(context, obj[keys[i]], keys[i]);
            return keys
        }

        function reverseParams(iteratorFn) {
            return function(value, key) {
                iteratorFn(key, value)
            }
        }

        function nextUid() {
            for (var digit, index = uid.length; index;) {
                if (index--, digit = uid[index].charCodeAt(0), 57 == digit) return uid[index] = "A", uid.join("");
                if (90 != digit) return uid[index] = String.fromCharCode(digit + 1), uid.join("");
                uid[index] = "0"
            }
            return uid.unshift("0"), uid.join("")
        }

        function setHashKey(obj, h) {
            h ? obj.$$hashKey = h : delete obj.$$hashKey
        }

        function extend(dst) {
            var h = dst.$$hashKey;
            return forEach(arguments, function(obj) {
                obj !== dst && forEach(obj, function(value, key) {
                    dst[key] = value
                })
            }), setHashKey(dst, h), dst
        }

        function int(str) {
            return parseInt(str, 10)
        }

        function inherit(parent, extra) {
            return extend(new(extend(function() {}, {
                prototype: parent
            })), extra)
        }

        function noop() {}

        function identity($) {
            return $
        }

        function valueFn(value) {
            return function() {
                return value
            }
        }

        function isUndefined(value) {
            return "undefined" == typeof value
        }

        function isDefined(value) {
            return "undefined" != typeof value
        }

        function isObject(value) {
            return null != value && "object" == typeof value
        }

        function isString(value) {
            return "string" == typeof value
        }

        function isNumber(value) {
            return "number" == typeof value
        }

        function isDate(value) {
            return "[object Date]" === toString.call(value)
        }

        function isFunction(value) {
            return "function" == typeof value
        }

        function isRegExp(value) {
            return "[object RegExp]" === toString.call(value)
        }

        function isWindow(obj) {
            return obj && obj.document && obj.location && obj.alert && obj.setInterval
        }

        function isScope(obj) {
            return obj && obj.$evalAsync && obj.$watch
        }

        function isFile(obj) {
            return "[object File]" === toString.call(obj)
        }

        function isBlob(obj) {
            return "[object Blob]" === toString.call(obj)
        }

        function isPromiseLike(obj) {
            return obj && isFunction(obj.then)
        }

        function isElement(node) {
            return !(!node || !(node.nodeName || node.prop && node.attr && node.find))
        }

        function map(obj, iterator, context) {
            var results = [];
            return forEach(obj, function(value, index, list) {
                results.push(iterator.call(context, value, index, list))
            }), results
        }

        function includes(array, obj) {
            return -1 != indexOf(array, obj)
        }

        function indexOf(array, obj) {
            if (array.indexOf) return array.indexOf(obj);
            for (var i = 0; i < array.length; i++)
                if (obj === array[i]) return i;
            return -1
        }

        function arrayRemove(array, value) {
            var index = indexOf(array, value);
            return index >= 0 && array.splice(index, 1), value
        }

        function copy(source, destination, stackSource, stackDest) {
            if (isWindow(source) || isScope(source)) throw ngMinErr("cpws", "Can't copy! Making copies of Window or Scope instances is not supported.");
            if (destination) {
                if (source === destination) throw ngMinErr("cpi", "Can't copy! Source and destination are identical.");
                if (stackSource = stackSource || [], stackDest = stackDest || [], isObject(source)) {
                    var index = indexOf(stackSource, source);
                    if (-1 !== index) return stackDest[index];
                    stackSource.push(source), stackDest.push(destination)
                }
                var result;
                if (isArray(source)) {
                    destination.length = 0;
                    for (var i = 0; i < source.length; i++) result = copy(source[i], null, stackSource, stackDest), isObject(source[i]) && (stackSource.push(source[i]), stackDest.push(result)), destination.push(result)
                } else {
                    var h = destination.$$hashKey;
                    isArray(destination) ? destination.length = 0 : forEach(destination, function(value, key) {
                        delete destination[key]
                    });
                    for (var key in source) result = copy(source[key], null, stackSource, stackDest), isObject(source[key]) && (stackSource.push(source[key]), stackDest.push(result)), destination[key] = result;
                    setHashKey(destination, h)
                }
            } else destination = source, source && (isArray(source) ? destination = copy(source, [], stackSource, stackDest) : isDate(source) ? destination = new Date(source.getTime()) : isRegExp(source) ? (destination = new RegExp(source.source, source.toString().match(/[^\/]*$/)[0]), destination.lastIndex = source.lastIndex) : isObject(source) && (destination = copy(source, {}, stackSource, stackDest)));
            return destination
        }

        function shallowCopy(src, dst) {
            if (isArray(src)) {
                dst = dst || [];
                for (var i = 0; i < src.length; i++) dst[i] = src[i]
            } else if (isObject(src)) {
                dst = dst || {};
                for (var key in src) !hasOwnProperty.call(src, key) || "$" === key.charAt(0) && "$" === key.charAt(1) || (dst[key] = src[key])
            }
            return dst || src
        }

        function equals(o1, o2) {
            if (o1 === o2) return !0;
            if (null === o1 || null === o2) return !1;
            if (o1 !== o1 && o2 !== o2) return !0;
            var length, key, keySet, t1 = typeof o1,
                t2 = typeof o2;
            if (t1 == t2 && "object" == t1) {
                if (!isArray(o1)) {
                    if (isDate(o1)) return isDate(o2) ? isNaN(o1.getTime()) && isNaN(o2.getTime()) || o1.getTime() === o2.getTime() : !1;
                    if (isRegExp(o1) && isRegExp(o2)) return o1.toString() == o2.toString();
                    if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) || isArray(o2)) return !1;
                    keySet = {};
                    for (key in o1)
                        if ("$" !== key.charAt(0) && !isFunction(o1[key])) {
                            if (!equals(o1[key], o2[key])) return !1;
                            keySet[key] = !0
                        }
                    for (key in o2)
                        if (!keySet.hasOwnProperty(key) && "$" !== key.charAt(0) && o2[key] !== undefined && !isFunction(o2[key])) return !1;
                    return !0
                }
                if (!isArray(o2)) return !1;
                if ((length = o1.length) == o2.length) {
                    for (key = 0; length > key; key++)
                        if (!equals(o1[key], o2[key])) return !1;
                    return !0
                }
            }
            return !1
        }

        function concat(array1, array2, index) {
            return array1.concat(slice.call(array2, index))
        }

        function sliceArgs(args, startIndex) {
            return slice.call(args, startIndex || 0)
        }

        function bind(self, fn) {
            var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];
            return !isFunction(fn) || fn instanceof RegExp ? fn : curryArgs.length ? function() {
                return arguments.length ? fn.apply(self, curryArgs.concat(slice.call(arguments, 0))) : fn.apply(self, curryArgs)
            } : function() {
                return arguments.length ? fn.apply(self, arguments) : fn.call(self)
            }
        }

        function toJsonReplacer(key, value) {
            var val = value;
            return "string" == typeof key && "$" === key.charAt(0) ? val = undefined : isWindow(value) ? val = "$WINDOW" : value && document === value ? val = "$DOCUMENT" : isScope(value) && (val = "$SCOPE"), val
        }

        function toJson(obj, pretty) {
            return "undefined" == typeof obj ? undefined : JSON.stringify(obj, toJsonReplacer, pretty ? "  " : null)
        }

        function fromJson(json) {
            return isString(json) ? JSON.parse(json) : json
        }

        function toBoolean(value) {
            if ("function" == typeof value) value = !0;
            else if (value && 0 !== value.length) {
                var v = lowercase("" + value);
                value = !("f" == v || "0" == v || "false" == v || "no" == v || "n" == v || "[]" == v)
            } else value = !1;
            return value
        }

        function startingTag(element) {
            element = jqLite(element).clone();
            try {
                element.empty()
            } catch (e) {}
            var TEXT_NODE = 3,
                elemHtml = jqLite("<div>").append(element).html();
            try {
                return element[0].nodeType === TEXT_NODE ? lowercase(elemHtml) : elemHtml.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/, function(match, nodeName) {
                    return "<" + lowercase(nodeName)
                })
            } catch (e) {
                return lowercase(elemHtml)
            }
        }

        function tryDecodeURIComponent(value) {
            try {
                return decodeURIComponent(value)
            } catch (e) {}
        }

        function parseKeyValue(keyValue) {
            var key_value, key, obj = {};
            return forEach((keyValue || "").split("&"), function(keyValue) {
                if (keyValue && (key_value = keyValue.replace(/\+/g, "%20").split("="), key = tryDecodeURIComponent(key_value[0]), isDefined(key))) {
                    var val = isDefined(key_value[1]) ? tryDecodeURIComponent(key_value[1]) : !0;
                    hasOwnProperty.call(obj, key) ? isArray(obj[key]) ? obj[key].push(val) : obj[key] = [obj[key], val] : obj[key] = val
                }
            }), obj
        }

        function toKeyValue(obj) {
            var parts = [];
            return forEach(obj, function(value, key) {
                isArray(value) ? forEach(value, function(arrayValue) {
                    parts.push(encodeUriQuery(key, !0) + (arrayValue === !0 ? "" : "=" + encodeUriQuery(arrayValue, !0)))
                }) : parts.push(encodeUriQuery(key, !0) + (value === !0 ? "" : "=" + encodeUriQuery(value, !0)))
            }), parts.length ? parts.join("&") : ""
        }

        function encodeUriSegment(val) {
            return encodeUriQuery(val, !0).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+")
        }

        function encodeUriQuery(val, pctEncodeSpaces) {
            return encodeURIComponent(val).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, pctEncodeSpaces ? "%20" : "+")
        }

        function angularInit(element, bootstrap) {
            function append(element) {
                element && elements.push(element)
            }
            var appElement, module, elements = [element],
                names = ["ng:app", "ng-app", "x-ng-app", "data-ng-app"],
                NG_APP_CLASS_REGEXP = /\sng[:\-]app(:\s*([\w\d_]+);?)?\s/;
            forEach(names, function(name) {
                names[name] = !0, append(document.getElementById(name)), name = name.replace(":", "\\:"), element.querySelectorAll && (forEach(element.querySelectorAll("." + name), append), forEach(element.querySelectorAll("." + name + "\\:"), append), forEach(element.querySelectorAll("[" + name + "]"), append))
            }), forEach(elements, function(element) {
                if (!appElement) {
                    var className = " " + element.className + " ",
                        match = NG_APP_CLASS_REGEXP.exec(className);
                    match ? (appElement = element, module = (match[2] || "").replace(/\s+/g, ",")) : forEach(element.attributes, function(attr) {
                        !appElement && names[attr.name] && (appElement = element, module = attr.value)
                    })
                }
            }), appElement && bootstrap(appElement, module ? [module] : [])
        }

        function bootstrap(element, modules) {
            var doBootstrap = function() {
                    if (element = jqLite(element), element.injector()) {
                        var tag = element[0] === document ? "document" : startingTag(element);
                        throw ngMinErr("btstrpd", "App Already Bootstrapped with this Element '{0}'", tag.replace(/</, "&lt;").replace(/>/, "&gt;"))
                    }
                    modules = modules || [], modules.unshift(["$provide", function($provide) {
                        $provide.value("$rootElement", element)
                    }]), modules.unshift("ng");
                    var injector = createInjector(modules);
                    return injector.invoke(["$rootScope", "$rootElement", "$compile", "$injector", "$animate", function(scope, element, compile, injector) {
                        scope.$apply(function() {
                            element.data("$injector", injector), compile(element)(scope)
                        })
                    }]), injector
                },
                NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;
            return window && !NG_DEFER_BOOTSTRAP.test(window.name) ? doBootstrap() : (window.name = window.name.replace(NG_DEFER_BOOTSTRAP, ""), void(angular.resumeBootstrap = function(extraModules) {
                forEach(extraModules, function(module) {
                    modules.push(module)
                }), doBootstrap()
            }))
        }

        function snake_case(name, separator) {
            return separator = separator || "_", name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {
                return (pos ? separator : "") + letter.toLowerCase()
            })
        }

        function bindJQuery() {
            jQuery = window.jQuery, jQuery && jQuery.fn.on ? (jqLite = jQuery, extend(jQuery.fn, {
                scope: JQLitePrototype.scope,
                isolateScope: JQLitePrototype.isolateScope,
                controller: JQLitePrototype.controller,
                injector: JQLitePrototype.injector,
                inheritedData: JQLitePrototype.inheritedData
            }), jqLitePatchJQueryRemove("remove", !0, !0, !1), jqLitePatchJQueryRemove("empty", !1, !1, !1), jqLitePatchJQueryRemove("html", !1, !1, !0)) : jqLite = JQLite, angular.element = jqLite
        }

        function assertArg(arg, name, reason) {
            if (!arg) throw ngMinErr("areq", "Argument '{0}' is {1}", name || "?", reason || "required");
            return arg
        }

        function assertArgFn(arg, name, acceptArrayAnnotation) {
            return acceptArrayAnnotation && isArray(arg) && (arg = arg[arg.length - 1]), assertArg(isFunction(arg), name, "not a function, got " + (arg && "object" == typeof arg ? arg.constructor.name || "Object" : typeof arg)), arg
        }

        function assertNotHasOwnProperty(name, context) {
            if ("hasOwnProperty" === name) throw ngMinErr("badname", "hasOwnProperty is not a valid {0} name", context)
        }

        function getter(obj, path, bindFnToScope) {
            if (!path) return obj;
            for (var key, keys = path.split("."), lastInstance = obj, len = keys.length, i = 0; len > i; i++) key = keys[i], obj && (obj = (lastInstance = obj)[key]);
            return !bindFnToScope && isFunction(obj) ? bind(lastInstance, obj) : obj
        }

        function getBlockElements(nodes) {
            var startNode = nodes[0],
                endNode = nodes[nodes.length - 1];
            if (startNode === endNode) return jqLite(startNode);
            var element = startNode,
                elements = [element];
            do {
                if (element = element.nextSibling, !element) break;
                elements.push(element)
            } while (element !== endNode);
            return jqLite(elements)
        }

        function setupModuleLoader(window) {
            function ensure(obj, name, factory) {
                return obj[name] || (obj[name] = factory())
            }
            var $injectorMinErr = minErr("$injector"),
                ngMinErr = minErr("ng"),
                angular = ensure(window, "angular", Object);
            return angular.$$minErr = angular.$$minErr || minErr, ensure(angular, "module", function() {
                var modules = {};
                return function(name, requires, configFn) {
                    var assertNotHasOwnProperty = function(name, context) {
                        if ("hasOwnProperty" === name) throw ngMinErr("badname", "hasOwnProperty is not a valid {0} name", context)
                    };
                    return assertNotHasOwnProperty(name, "module"), requires && modules.hasOwnProperty(name) && (modules[name] = null), ensure(modules, name, function() {
                        function invokeLater(provider, method, insertMethod) {
                            return function() {
                                return invokeQueue[insertMethod || "push"]([provider, method, arguments]), moduleInstance
                            }
                        }
                        if (!requires) throw $injectorMinErr("nomod", "Module '{0}' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.", name);
                        var invokeQueue = [],
                            runBlocks = [],
                            config = invokeLater("$injector", "invoke"),
                            moduleInstance = {
                                _invokeQueue: invokeQueue,
                                _runBlocks: runBlocks,
                                requires: requires,
                                name: name,
                                provider: invokeLater("$provide", "provider"),
                                factory: invokeLater("$provide", "factory"),
                                service: invokeLater("$provide", "service"),
                                value: invokeLater("$provide", "value"),
                                constant: invokeLater("$provide", "constant", "unshift"),
                                animation: invokeLater("$animateProvider", "register"),
                                filter: invokeLater("$filterProvider", "register"),
                                controller: invokeLater("$controllerProvider", "register"),
                                directive: invokeLater("$compileProvider", "directive"),
                                config: config,
                                run: function(block) {
                                    return runBlocks.push(block), this
                                }
                            };
                        return configFn && config(configFn), moduleInstance
                    })
                }
            })
        }

        function publishExternalAPI(angular) {
            extend(angular, {
                bootstrap: bootstrap,
                copy: copy,
                extend: extend,
                equals: equals,
                element: jqLite,
                forEach: forEach,
                injector: createInjector,
                noop: noop,
                bind: bind,
                toJson: toJson,
                fromJson: fromJson,
                identity: identity,
                isUndefined: isUndefined,
                isDefined: isDefined,
                isString: isString,
                isFunction: isFunction,
                isObject: isObject,
                isNumber: isNumber,
                isElement: isElement,
                isArray: isArray,
                version: version,
                isDate: isDate,
                lowercase: lowercase,
                uppercase: uppercase,
                callbacks: {
                    counter: 0
                },
                $$minErr: minErr,
                $$csp: csp
            }), angularModule = setupModuleLoader(window);
            try {
                angularModule("ngLocale")
            } catch (e) {
                angularModule("ngLocale", []).provider("$locale", $LocaleProvider)
            }
            angularModule("ng", ["ngLocale"], ["$provide", function($provide) {
                $provide.provider({
                    $$sanitizeUri: $$SanitizeUriProvider
                }), $provide.provider("$compile", $CompileProvider).directive({
                    a: htmlAnchorDirective,
                    input: inputDirective,
                    textarea: inputDirective,
                    form: formDirective,
                    script: scriptDirective,
                    select: selectDirective,
                    style: styleDirective,
                    option: optionDirective,
                    ngBind: ngBindDirective,
                    ngBindHtml: ngBindHtmlDirective,
                    ngBindTemplate: ngBindTemplateDirective,
                    ngClass: ngClassDirective,
                    ngClassEven: ngClassEvenDirective,
                    ngClassOdd: ngClassOddDirective,
                    ngCloak: ngCloakDirective,
                    ngController: ngControllerDirective,
                    ngForm: ngFormDirective,
                    ngHide: ngHideDirective,
                    ngIf: ngIfDirective,
                    ngInclude: ngIncludeDirective,
                    ngInit: ngInitDirective,
                    ngNonBindable: ngNonBindableDirective,
                    ngPluralize: ngPluralizeDirective,
                    ngRepeat: ngRepeatDirective,
                    ngShow: ngShowDirective,
                    ngStyle: ngStyleDirective,
                    ngSwitch: ngSwitchDirective,
                    ngSwitchWhen: ngSwitchWhenDirective,
                    ngSwitchDefault: ngSwitchDefaultDirective,
                    ngOptions: ngOptionsDirective,
                    ngTransclude: ngTranscludeDirective,
                    ngModel: ngModelDirective,
                    ngList: ngListDirective,
                    ngChange: ngChangeDirective,
                    required: requiredDirective,
                    ngRequired: requiredDirective,
                    ngValue: ngValueDirective
                }).directive({
                    ngInclude: ngIncludeFillContentDirective
                }).directive(ngAttributeAliasDirectives).directive(ngEventDirectives), $provide.provider({
                    $anchorScroll: $AnchorScrollProvider,
                    $animate: $AnimateProvider,
                    $browser: $BrowserProvider,
                    $cacheFactory: $CacheFactoryProvider,
                    $controller: $ControllerProvider,
                    $document: $DocumentProvider,
                    $exceptionHandler: $ExceptionHandlerProvider,
                    $filter: $FilterProvider,
                    $interpolate: $InterpolateProvider,
                    $interval: $IntervalProvider,
                    $http: $HttpProvider,
                    $httpBackend: $HttpBackendProvider,
                    $location: $LocationProvider,
                    $log: $LogProvider,
                    $parse: $ParseProvider,
                    $rootScope: $RootScopeProvider,
                    $q: $QProvider,
                    $sce: $SceProvider,
                    $sceDelegate: $SceDelegateProvider,
                    $sniffer: $SnifferProvider,
                    $templateCache: $TemplateCacheProvider,
                    $timeout: $TimeoutProvider,
                    $window: $WindowProvider,
                    $$rAF: $$RAFProvider,
                    $$asyncCallback: $$AsyncCallbackProvider
                })
            }])
        }

        function jqNextId() {
            return ++jqId
        }

        function camelCase(name) {
            return name.replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {
                return offset ? letter.toUpperCase() : letter
            }).replace(MOZ_HACK_REGEXP, "Moz$1")
        }

        function jqLitePatchJQueryRemove(name, dispatchThis, filterElems, getterIfNoArguments) {
            function removePatch(param) {
                var set, setIndex, setLength, element, childIndex, childLength, children, list = filterElems && param ? [this.filter(param)] : [this],
                    fireEvent = dispatchThis;
                if (!getterIfNoArguments || null != param)
                    for (; list.length;)
                        for (set = list.shift(), setIndex = 0, setLength = set.length; setLength > setIndex; setIndex++)
                            for (element = jqLite(set[setIndex]), fireEvent ? element.triggerHandler("$destroy") : fireEvent = !fireEvent, childIndex = 0, childLength = (children = element.children()).length; childLength > childIndex; childIndex++) list.push(jQuery(children[childIndex]));
                return originalJqFn.apply(this, arguments)
            }
            var originalJqFn = jQuery.fn[name];
            originalJqFn = originalJqFn.$original || originalJqFn, removePatch.$original = originalJqFn, jQuery.fn[name] = removePatch
        }

        function jqLiteIsTextNode(html) {
            return !HTML_REGEXP.test(html)
        }

        function jqLiteBuildFragment(html, context) {
            var tmp, tag, wrap, i, j, jj, fragment = context.createDocumentFragment(),
                nodes = [];
            if (jqLiteIsTextNode(html)) nodes.push(context.createTextNode(html));
            else {
                for (tmp = fragment.appendChild(context.createElement("div")), tag = (TAG_NAME_REGEXP.exec(html) || ["", ""])[1].toLowerCase(), wrap = wrapMap[tag] || wrapMap._default, tmp.innerHTML = "<div>&#160;</div>" + wrap[1] + html.replace(XHTML_TAG_REGEXP, "<$1></$2>") + wrap[2], tmp.removeChild(tmp.firstChild), i = wrap[0]; i--;) tmp = tmp.lastChild;
                for (j = 0, jj = tmp.childNodes.length; jj > j; ++j) nodes.push(tmp.childNodes[j]);
                tmp = fragment.firstChild, tmp.textContent = ""
            }
            return fragment.textContent = "", fragment.innerHTML = "", nodes
        }

        function jqLiteParseHTML(html, context) {
            context = context || document;
            var parsed;
            return (parsed = SINGLE_TAG_REGEXP.exec(html)) ? [context.createElement(parsed[1])] : jqLiteBuildFragment(html, context)
        }

        function JQLite(element) {
            if (element instanceof JQLite) return element;
            if (isString(element) && (element = trim(element)), !(this instanceof JQLite)) {
                if (isString(element) && "<" != element.charAt(0)) throw jqLiteMinErr("nosel", "Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element");
                return new JQLite(element)
            }
            if (isString(element)) {
                jqLiteAddNodes(this, jqLiteParseHTML(element));
                var fragment = jqLite(document.createDocumentFragment());
                fragment.append(this)
            } else jqLiteAddNodes(this, element)
        }

        function jqLiteClone(element) {
            return element.cloneNode(!0)
        }

        function jqLiteDealoc(element) {
            jqLiteRemoveData(element);
            for (var i = 0, children = element.childNodes || []; i < children.length; i++) jqLiteDealoc(children[i])
        }

        function jqLiteOff(element, type, fn, unsupported) {
            if (isDefined(unsupported)) throw jqLiteMinErr("offargs", "jqLite#off() does not support the `selector` argument");
            var events = jqLiteExpandoStore(element, "events"),
                handle = jqLiteExpandoStore(element, "handle");
            handle && (isUndefined(type) ? forEach(events, function(eventHandler, type) {
                removeEventListenerFn(element, type, eventHandler), delete events[type]
            }) : forEach(type.split(" "), function(type) {
                isUndefined(fn) ? (removeEventListenerFn(element, type, events[type]), delete events[type]) : arrayRemove(events[type] || [], fn)
            }))
        }

        function jqLiteRemoveData(element, name) {
            var expandoId = element.ng339,
                expandoStore = jqCache[expandoId];
            if (expandoStore) {
                if (name) return void delete jqCache[expandoId].data[name];
                expandoStore.handle && (expandoStore.events.$destroy && expandoStore.handle({}, "$destroy"), jqLiteOff(element)), delete jqCache[expandoId], element.ng339 = undefined
            }
        }

        function jqLiteExpandoStore(element, key, value) {
            var expandoId = element.ng339,
                expandoStore = jqCache[expandoId || -1];
            return isDefined(value) ? (expandoStore || (element.ng339 = expandoId = jqNextId(), expandoStore = jqCache[expandoId] = {}), void(expandoStore[key] = value)) : expandoStore && expandoStore[key]
        }

        function jqLiteData(element, key, value) {
            var data = jqLiteExpandoStore(element, "data"),
                isSetter = isDefined(value),
                keyDefined = !isSetter && isDefined(key),
                isSimpleGetter = keyDefined && !isObject(key);
            if (data || isSimpleGetter || jqLiteExpandoStore(element, "data", data = {}), isSetter) data[key] = value;
            else {
                if (!keyDefined) return data;
                if (isSimpleGetter) return data && data[key];
                extend(data, key)
            }
        }

        function jqLiteHasClass(element, selector) {
            return element.getAttribute ? (" " + (element.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").indexOf(" " + selector + " ") > -1 : !1
        }

        function jqLiteRemoveClass(element, cssClasses) {
            cssClasses && element.setAttribute && forEach(cssClasses.split(" "), function(cssClass) {
                element.setAttribute("class", trim((" " + (element.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").replace(" " + trim(cssClass) + " ", " ")))
            })
        }

        function jqLiteAddClass(element, cssClasses) {
            if (cssClasses && element.setAttribute) {
                var existingClasses = (" " + (element.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ");
                forEach(cssClasses.split(" "), function(cssClass) {
                    cssClass = trim(cssClass), -1 === existingClasses.indexOf(" " + cssClass + " ") && (existingClasses += cssClass + " ")
                }), element.setAttribute("class", trim(existingClasses))
            }
        }

        function jqLiteAddNodes(root, elements) {
            if (elements) {
                elements = elements.nodeName || !isDefined(elements.length) || isWindow(elements) ? [elements] : elements;
                for (var i = 0; i < elements.length; i++) root.push(elements[i])
            }
        }

        function jqLiteController(element, name) {
            return jqLiteInheritedData(element, "$" + (name || "ngController") + "Controller")
        }

        function jqLiteInheritedData(element, name, value) {
            9 == element.nodeType && (element = element.documentElement);
            for (var names = isArray(name) ? name : [name]; element;) {
                for (var i = 0, ii = names.length; ii > i; i++)
                    if ((value = jqLite.data(element, names[i])) !== undefined) return value;
                element = element.parentNode || 11 === element.nodeType && element.host
            }
        }

        function jqLiteEmpty(element) {
            for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) jqLiteDealoc(childNodes[i]);
            for (; element.firstChild;) element.removeChild(element.firstChild)
        }

        function getBooleanAttrName(element, name) {
            var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];
            return booleanAttr && BOOLEAN_ELEMENTS[element.nodeName] && booleanAttr
        }

        function createEventHandler(element, events) {
            var eventHandler = function(event, type) {
                if (event.preventDefault || (event.preventDefault = function() {
                        event.returnValue = !1
                    }), event.stopPropagation || (event.stopPropagation = function() {
                        event.cancelBubble = !0
                    }), event.target || (event.target = event.srcElement || document), isUndefined(event.defaultPrevented)) {
                    var prevent = event.preventDefault;
                    event.preventDefault = function() {
                        event.defaultPrevented = !0, prevent.call(event)
                    }, event.defaultPrevented = !1
                }
                event.isDefaultPrevented = function() {
                    return event.defaultPrevented || event.returnValue === !1
                };
                var eventHandlersCopy = shallowCopy(events[type || event.type] || []);
                forEach(eventHandlersCopy, function(fn) {
                    fn.call(element, event)
                }), 8 >= msie ? (event.preventDefault = null, event.stopPropagation = null, event.isDefaultPrevented = null) : (delete event.preventDefault, delete event.stopPropagation, delete event.isDefaultPrevented)
            };
            return eventHandler.elem = element, eventHandler
        }

        function hashKey(obj, nextUidFn) {
            var key, objType = typeof obj;
            return "function" == objType || "object" == objType && null !== obj ? "function" == typeof(key = obj.$$hashKey) ? key = obj.$$hashKey() : key === undefined && (key = obj.$$hashKey = (nextUidFn || nextUid)()) : key = obj, objType + ":" + key
        }

        function HashMap(array, isolatedUid) {
            if (isolatedUid) {
                var uid = 0;
                this.nextUid = function() {
                    return ++uid
                }
            }
            forEach(array, this.put, this)
        }

        function annotate(fn) {
            var $inject, fnText, argDecl, last;
            return "function" == typeof fn ? ($inject = fn.$inject) || ($inject = [], fn.length && (fnText = fn.toString().replace(STRIP_COMMENTS, ""), argDecl = fnText.match(FN_ARGS), forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg) {
                arg.replace(FN_ARG, function(all, underscore, name) {
                    $inject.push(name)
                })
            })), fn.$inject = $inject) : isArray(fn) ? (last = fn.length - 1, assertArgFn(fn[last], "fn"), $inject = fn.slice(0, last)) : assertArgFn(fn, "fn", !0), $inject
        }

        function createInjector(modulesToLoad) {
            function supportObject(delegate) {
                return function(key, value) {
                    return isObject(key) ? void forEach(key, reverseParams(delegate)) : delegate(key, value)
                }
            }

            function provider(name, provider_) {
                if (assertNotHasOwnProperty(name, "service"), (isFunction(provider_) || isArray(provider_)) && (provider_ = providerInjector.instantiate(provider_)), !provider_.$get) throw $injectorMinErr("pget", "Provider '{0}' must define $get factory method.", name);
                return providerCache[name + providerSuffix] = provider_
            }

            function factory(name, factoryFn) {
                return provider(name, {
                    $get: factoryFn
                })
            }

            function service(name, constructor) {
                return factory(name, ["$injector", function($injector) {
                    return $injector.instantiate(constructor)
                }])
            }

            function value(name, val) {
                return factory(name, valueFn(val))
            }

            function constant(name, value) {
                assertNotHasOwnProperty(name, "constant"), providerCache[name] = value, instanceCache[name] = value
            }

            function decorator(serviceName, decorFn) {
                var origProvider = providerInjector.get(serviceName + providerSuffix),
                    orig$get = origProvider.$get;
                origProvider.$get = function() {
                    var origInstance = instanceInjector.invoke(orig$get, origProvider);
                    return instanceInjector.invoke(decorFn, null, {
                        $delegate: origInstance
                    })
                }
            }

            function loadModules(modulesToLoad) {
                var moduleFn, invokeQueue, i, ii, runBlocks = [];
                return forEach(modulesToLoad, function(module) {
                    if (!loadedModules.get(module)) {
                        loadedModules.put(module, !0);
                        try {
                            if (isString(module))
                                for (moduleFn = angularModule(module), runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks), invokeQueue = moduleFn._invokeQueue, i = 0, ii = invokeQueue.length; ii > i; i++) {
                                    var invokeArgs = invokeQueue[i],
                                        provider = providerInjector.get(invokeArgs[0]);
                                    provider[invokeArgs[1]].apply(provider, invokeArgs[2])
                                } else isFunction(module) ? runBlocks.push(providerInjector.invoke(module)) : isArray(module) ? runBlocks.push(providerInjector.invoke(module)) : assertArgFn(module, "module")
                        } catch (e) {
                            throw isArray(module) && (module = module[module.length - 1]), e.message && e.stack && -1 == e.stack.indexOf(e.message) && (e = e.message + "\n" + e.stack), $injectorMinErr("modulerr", "Failed to instantiate module {0} due to:\n{1}", module, e.stack || e.message || e)
                        }
                    }
                }), runBlocks
            }

            function createInternalInjector(cache, factory) {
                function getService(serviceName) {
                    if (cache.hasOwnProperty(serviceName)) {
                        if (cache[serviceName] === INSTANTIATING) throw $injectorMinErr("cdep", "Circular dependency found: {0}", serviceName + " <- " + path.join(" <- "));
                        return cache[serviceName]
                    }
                    try {
                        return path.unshift(serviceName), cache[serviceName] = INSTANTIATING, cache[serviceName] = factory(serviceName)
                    } catch (err) {
                        throw cache[serviceName] === INSTANTIATING && delete cache[serviceName], err
                    } finally {
                        path.shift()
                    }
                }

                function invoke(fn, self, locals) {
                    var length, i, key, args = [],
                        $inject = annotate(fn);
                    for (i = 0, length = $inject.length; length > i; i++) {
                        if (key = $inject[i], "string" != typeof key) throw $injectorMinErr("itkn", "Incorrect injection token! Expected service name as string, got {0}", key);
                        args.push(locals && locals.hasOwnProperty(key) ? locals[key] : getService(key))
                    }
                    return isArray(fn) && (fn = fn[length]), fn.apply(self, args)
                }

                function instantiate(Type, locals) {
                    var instance, returnedValue, Constructor = function() {};
                    return Constructor.prototype = (isArray(Type) ? Type[Type.length - 1] : Type).prototype, instance = new Constructor, returnedValue = invoke(Type, instance, locals), isObject(returnedValue) || isFunction(returnedValue) ? returnedValue : instance
                }
                return {
                    invoke: invoke,
                    instantiate: instantiate,
                    get: getService,
                    annotate: annotate,
                    has: function(name) {
                        return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name)
                    }
                }
            }
            var INSTANTIATING = {},
                providerSuffix = "Provider",
                path = [],
                loadedModules = new HashMap([], !0),
                providerCache = {
                    $provide: {
                        provider: supportObject(provider),
                        factory: supportObject(factory),
                        service: supportObject(service),
                        value: supportObject(value),
                        constant: supportObject(constant),
                        decorator: decorator
                    }
                },
                providerInjector = providerCache.$injector = createInternalInjector(providerCache, function() {
                    throw $injectorMinErr("unpr", "Unknown provider: {0}", path.join(" <- "))
                }),
                instanceCache = {},
                instanceInjector = instanceCache.$injector = createInternalInjector(instanceCache, function(servicename) {
                    var provider = providerInjector.get(servicename + providerSuffix);
                    return instanceInjector.invoke(provider.$get, provider)
                });
            return forEach(loadModules(modulesToLoad), function(fn) {
                instanceInjector.invoke(fn || noop)
            }), instanceInjector
        }

        function $AnchorScrollProvider() {
            var autoScrollingEnabled = !0;
            this.disableAutoScrolling = function() {
                autoScrollingEnabled = !1
            }, this.$get = ["$window", "$location", "$rootScope", function($window, $location, $rootScope) {
                function getFirstAnchor(list) {
                    var result = null;
                    return forEach(list, function(element) {
                        result || "a" !== lowercase(element.nodeName) || (result = element)
                    }), result
                }

                function scroll() {
                    var elm, hash = $location.hash();
                    hash ? (elm = document.getElementById(hash)) ? elm.scrollIntoView() : (elm = getFirstAnchor(document.getElementsByName(hash))) ? elm.scrollIntoView() : "top" === hash && $window.scrollTo(0, 0) : $window.scrollTo(0, 0)
                }
                var document = $window.document;
                return autoScrollingEnabled && $rootScope.$watch(function() {
                    return $location.hash()
                }, function() {
                    $rootScope.$evalAsync(scroll)
                }), scroll
            }]
        }

        function $$AsyncCallbackProvider() {
            this.$get = ["$$rAF", "$timeout", function($$rAF, $timeout) {
                return $$rAF.supported ? function(fn) {
                    return $$rAF(fn)
                } : function(fn) {
                    return $timeout(fn, 0, !1)
                }
            }]
        }

        function Browser(window, document, $log, $sniffer) {
            function completeOutstandingRequest(fn) {
                try {
                    fn.apply(null, sliceArgs(arguments, 1))
                } finally {
                    if (outstandingRequestCount--, 0 === outstandingRequestCount)
                        for (; outstandingRequestCallbacks.length;) try {
                            outstandingRequestCallbacks.pop()()
                        } catch (e) {
                            $log.error(e)
                        }
                }
            }

            function startPoller(interval, setTimeout) {
                ! function check() {
                    forEach(pollFns, function(pollFn) {
                        pollFn()
                    }), pollTimeout = setTimeout(check, interval)
                }()
            }

            function fireUrlChange() {
                lastBrowserUrl != self.url() && (lastBrowserUrl = self.url(), forEach(urlChangeListeners, function(listener) {
                    listener(self.url())
                }))
            }
            var self = this,
                rawDocument = document[0],
                location = window.location,
                history = window.history,
                setTimeout = window.setTimeout,
                clearTimeout = window.clearTimeout,
                pendingDeferIds = {};
            self.isMock = !1;
            var outstandingRequestCount = 0,
                outstandingRequestCallbacks = [];
            self.$$completeOutstandingRequest = completeOutstandingRequest, self.$$incOutstandingRequestCount = function() {
                outstandingRequestCount++
            }, self.notifyWhenNoOutstandingRequests = function(callback) {
                forEach(pollFns, function(pollFn) {
                    pollFn()
                }), 0 === outstandingRequestCount ? callback() : outstandingRequestCallbacks.push(callback)
            };
            var pollTimeout, pollFns = [];
            self.addPollFn = function(fn) {
                return isUndefined(pollTimeout) && startPoller(100, setTimeout), pollFns.push(fn), fn
            };
            var lastBrowserUrl = location.href,
                baseElement = document.find("base"),
                reloadLocation = null;
            self.url = function(url, replace) {
                if (location !== window.location && (location = window.location), history !== window.history && (history = window.history), url) {
                    if (lastBrowserUrl == url) return;
                    var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);
                    return lastBrowserUrl = url, !sameBase && $sniffer.history ? replace ? history.replaceState(null, "", url) : (history.pushState(null, "", url), baseElement.attr("href", baseElement.attr("href"))) : (sameBase || (reloadLocation = url), replace ? location.replace(url) : location.href = url), self
                }
                return reloadLocation || location.href.replace(/%27/g, "'")
            };
            var urlChangeListeners = [],
                urlChangeInit = !1;
            self.onUrlChange = function(callback) {
                return urlChangeInit || ($sniffer.history && jqLite(window).on("popstate", fireUrlChange), $sniffer.hashchange ? jqLite(window).on("hashchange", fireUrlChange) : self.addPollFn(fireUrlChange), urlChangeInit = !0), urlChangeListeners.push(callback), callback
            }, self.$$checkUrlChange = fireUrlChange, self.baseHref = function() {
                var href = baseElement.attr("href");
                return href ? href.replace(/^(https?\:)?\/\/[^\/]*/, "") : ""
            };
            var lastCookies = {},
                lastCookieString = "",
                cookiePath = self.baseHref();
            self.cookies = function(name, value) {
                var cookieLength, cookieArray, cookie, i, index;
                if (!name) {
                    if (rawDocument.cookie !== lastCookieString)
                        for (lastCookieString = rawDocument.cookie, cookieArray = lastCookieString.split("; "), lastCookies = {}, i = 0; i < cookieArray.length; i++) cookie = cookieArray[i], index = cookie.indexOf("="), index > 0 && (name = unescape(cookie.substring(0, index)), lastCookies[name] === undefined && (lastCookies[name] = unescape(cookie.substring(index + 1))));
                    return lastCookies
                }
                value === undefined ? rawDocument.cookie = escape(name) + "=;path=" + cookiePath + ";expires=Thu, 01 Jan 1970 00:00:00 GMT" : isString(value) && (cookieLength = (rawDocument.cookie = escape(name) + "=" + escape(value) + ";path=" + cookiePath).length + 1, cookieLength > 4096 && $log.warn("Cookie '" + name + "' possibly not set or overflowed because it was too large (" + cookieLength + " > 4096 bytes)!"))
            }, self.defer = function(fn, delay) {
                var timeoutId;
                return outstandingRequestCount++, timeoutId = setTimeout(function() {
                    delete pendingDeferIds[timeoutId], completeOutstandingRequest(fn)
                }, delay || 0), pendingDeferIds[timeoutId] = !0, timeoutId
            }, self.defer.cancel = function(deferId) {
                return pendingDeferIds[deferId] ? (delete pendingDeferIds[deferId], clearTimeout(deferId), completeOutstandingRequest(noop), !0) : !1
            }
        }

        function $BrowserProvider() {
            this.$get = ["$window", "$log", "$sniffer", "$document", function($window, $log, $sniffer, $document) {
                return new Browser($window, $document, $log, $sniffer)
            }]
        }

        function $CacheFactoryProvider() {
            this.$get = function() {
                function cacheFactory(cacheId, options) {
                    function refresh(entry) {
                        entry != freshEnd && (staleEnd ? staleEnd == entry && (staleEnd = entry.n) : staleEnd = entry, link(entry.n, entry.p), link(entry, freshEnd), freshEnd = entry, freshEnd.n = null)
                    }

                    function link(nextEntry, prevEntry) {
                        nextEntry != prevEntry && (nextEntry && (nextEntry.p = prevEntry), prevEntry && (prevEntry.n = nextEntry))
                    }
                    if (cacheId in caches) throw minErr("$cacheFactory")("iid", "CacheId '{0}' is already taken!", cacheId);
                    var size = 0,
                        stats = extend({}, options, {
                            id: cacheId
                        }),
                        data = {},
                        capacity = options && options.capacity || Number.MAX_VALUE,
                        lruHash = {},
                        freshEnd = null,
                        staleEnd = null;
                    return caches[cacheId] = {
                        put: function(key, value) {
                            if (capacity < Number.MAX_VALUE) {
                                var lruEntry = lruHash[key] || (lruHash[key] = {
                                    key: key
                                });
                                refresh(lruEntry)
                            }
                            if (!isUndefined(value)) return key in data || size++, data[key] = value, size > capacity && this.remove(staleEnd.key), value
                        },
                        get: function(key) {
                            if (capacity < Number.MAX_VALUE) {
                                var lruEntry = lruHash[key];
                                if (!lruEntry) return;
                                refresh(lruEntry)
                            }
                            return data[key]
                        },
                        remove: function(key) {
                            if (capacity < Number.MAX_VALUE) {
                                var lruEntry = lruHash[key];
                                if (!lruEntry) return;
                                lruEntry == freshEnd && (freshEnd = lruEntry.p), lruEntry == staleEnd && (staleEnd = lruEntry.n), link(lruEntry.n, lruEntry.p), delete lruHash[key]
                            }
                            delete data[key], size--
                        },
                        removeAll: function() {
                            data = {}, size = 0, lruHash = {}, freshEnd = staleEnd = null
                        },
                        destroy: function() {
                            data = null, stats = null, lruHash = null, delete caches[cacheId]
                        },
                        info: function() {
                            return extend({}, stats, {
                                size: size
                            })
                        }
                    }
                }
                var caches = {};
                return cacheFactory.info = function() {
                    var info = {};
                    return forEach(caches, function(cache, cacheId) {
                        info[cacheId] = cache.info()
                    }), info
                }, cacheFactory.get = function(cacheId) {
                    return caches[cacheId]
                }, cacheFactory
            }
        }

        function $TemplateCacheProvider() {
            this.$get = ["$cacheFactory", function($cacheFactory) {
                return $cacheFactory("templates")
            }]
        }

        function $CompileProvider($provide, $$sanitizeUriProvider) {
            var hasDirectives = {},
                Suffix = "Directive",
                COMMENT_DIRECTIVE_REGEXP = /^\s*directive\:\s*([\d\w_\-]+)\s+(.*)$/,
                CLASS_DIRECTIVE_REGEXP = /(([\d\w_\-]+)(?:\:([^;]+))?;?)/,
                EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/;
            this.directive = function registerDirective(name, directiveFactory) {
                return assertNotHasOwnProperty(name, "directive"), isString(name) ? (assertArg(directiveFactory, "directiveFactory"), hasDirectives.hasOwnProperty(name) || (hasDirectives[name] = [], $provide.factory(name + Suffix, ["$injector", "$exceptionHandler", function($injector, $exceptionHandler) {
                    var directives = [];
                    return forEach(hasDirectives[name], function(directiveFactory, index) {
                        try {
                            var directive = $injector.invoke(directiveFactory);
                            isFunction(directive) ? directive = {
                                compile: valueFn(directive)
                            } : !directive.compile && directive.link && (directive.compile = valueFn(directive.link)), directive.priority = directive.priority || 0, directive.index = index, directive.name = directive.name || name, directive.require = directive.require || directive.controller && directive.name, directive.restrict = directive.restrict || "A", directives.push(directive)
                        } catch (e) {
                            $exceptionHandler(e)
                        }
                    }), directives
                }])), hasDirectives[name].push(directiveFactory)) : forEach(name, reverseParams(registerDirective)), this
            }, this.aHrefSanitizationWhitelist = function(regexp) {
                return isDefined(regexp) ? ($$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp), this) : $$sanitizeUriProvider.aHrefSanitizationWhitelist()
            }, this.imgSrcSanitizationWhitelist = function(regexp) {
                return isDefined(regexp) ? ($$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp), this) : $$sanitizeUriProvider.imgSrcSanitizationWhitelist()
            }, this.$get = ["$injector", "$interpolate", "$exceptionHandler", "$http", "$templateCache", "$parse", "$controller", "$rootScope", "$document", "$sce", "$animate", "$$sanitizeUri", function($injector, $interpolate, $exceptionHandler, $http, $templateCache, $parse, $controller, $rootScope, $document, $sce, $animate, $$sanitizeUri) {
                function compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext) {
                    $compileNodes instanceof jqLite || ($compileNodes = jqLite($compileNodes)), forEach($compileNodes, function(node, index) {
                        3 == node.nodeType && node.nodeValue.match(/\S+/) && ($compileNodes[index] = node = jqLite(node).wrap("<span></span>").parent()[0])
                    });
                    var compositeLinkFn = compileNodes($compileNodes, transcludeFn, $compileNodes, maxPriority, ignoreDirective, previousCompileContext);
                    return safeAddClass($compileNodes, "ng-scope"),
                        function(scope, cloneConnectFn, transcludeControllers, parentBoundTranscludeFn) {
                            assertArg(scope, "scope");
                            var $linkNode = cloneConnectFn ? JQLitePrototype.clone.call($compileNodes) : $compileNodes;
                            forEach(transcludeControllers, function(instance, name) {
                                $linkNode.data("$" + name + "Controller", instance)
                            });
                            for (var i = 0, ii = $linkNode.length; ii > i; i++) {
                                var node = $linkNode[i],
                                    nodeType = node.nodeType;
                                (1 === nodeType || 9 === nodeType) && $linkNode.eq(i).data("$scope", scope)
                            }
                            return cloneConnectFn && cloneConnectFn($linkNode, scope), compositeLinkFn && compositeLinkFn(scope, $linkNode, $linkNode, parentBoundTranscludeFn), $linkNode
                        }
                }

                function safeAddClass($element, className) {
                    try {
                        $element.addClass(className)
                    } catch (e) {}
                }

                function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority, ignoreDirective, previousCompileContext) {
                    function compositeLinkFn(scope, nodeList, $rootElement, parentBoundTranscludeFn) {
                        var nodeLinkFn, childLinkFn, node, childScope, i, ii, n, childBoundTranscludeFn, nodeListLength = nodeList.length,
                            stableNodeList = new Array(nodeListLength);
                        for (i = 0; nodeListLength > i; i++) stableNodeList[i] = nodeList[i];
                        for (i = 0, n = 0, ii = linkFns.length; ii > i; n++) node = stableNodeList[n], nodeLinkFn = linkFns[i++], childLinkFn = linkFns[i++], nodeLinkFn ? (nodeLinkFn.scope ? (childScope = scope.$new(), jqLite.data(node, "$scope", childScope)) : childScope = scope, childBoundTranscludeFn = nodeLinkFn.transcludeOnThisElement ? createBoundTranscludeFn(scope, nodeLinkFn.transclude, parentBoundTranscludeFn) : !nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn ? parentBoundTranscludeFn : !parentBoundTranscludeFn && transcludeFn ? createBoundTranscludeFn(scope, transcludeFn) : null, nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn)) : childLinkFn && childLinkFn(scope, node.childNodes, undefined, parentBoundTranscludeFn)
                    }
                    for (var attrs, directives, nodeLinkFn, childNodes, childLinkFn, linkFnFound, linkFns = [], i = 0; i < nodeList.length; i++) attrs = new Attributes, directives = collectDirectives(nodeList[i], [], attrs, 0 === i ? maxPriority : undefined, ignoreDirective), nodeLinkFn = directives.length ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement, null, [], [], previousCompileContext) : null, nodeLinkFn && nodeLinkFn.scope && safeAddClass(attrs.$$element, "ng-scope"), childLinkFn = nodeLinkFn && nodeLinkFn.terminal || !(childNodes = nodeList[i].childNodes) || !childNodes.length ? null : compileNodes(childNodes, nodeLinkFn ? (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement) && nodeLinkFn.transclude : transcludeFn), linkFns.push(nodeLinkFn, childLinkFn), linkFnFound = linkFnFound || nodeLinkFn || childLinkFn, previousCompileContext = null;
                    return linkFnFound ? compositeLinkFn : null
                }

                function createBoundTranscludeFn(scope, transcludeFn, previousBoundTranscludeFn) {
                    var boundTranscludeFn = function(transcludedScope, cloneFn, controllers) {
                        var scopeCreated = !1;
                        transcludedScope || (transcludedScope = scope.$new(), transcludedScope.$$transcluded = !0, scopeCreated = !0);
                        var clone = transcludeFn(transcludedScope, cloneFn, controllers, previousBoundTranscludeFn);
                        return scopeCreated && clone.on("$destroy", function() {
                            transcludedScope.$destroy()
                        }), clone
                    };
                    return boundTranscludeFn
                }

                function collectDirectives(node, directives, attrs, maxPriority, ignoreDirective) {
                    var match, className, nodeType = node.nodeType,
                        attrsMap = attrs.$attr;
                    switch (nodeType) {
                        case 1:
                            addDirective(directives, directiveNormalize(nodeName_(node).toLowerCase()), "E", maxPriority, ignoreDirective);
                            for (var attr, name, nName, ngAttrName, value, isNgAttr, nAttrs = node.attributes, j = 0, jj = nAttrs && nAttrs.length; jj > j; j++) {
                                var attrStartName = !1,
                                    attrEndName = !1;
                                if (attr = nAttrs[j], !msie || msie >= 8 || attr.specified) {
                                    name = attr.name, value = trim(attr.value), ngAttrName = directiveNormalize(name), (isNgAttr = NG_ATTR_BINDING.test(ngAttrName)) && (name = snake_case(ngAttrName.substr(6), "-"));
                                    var directiveNName = ngAttrName.replace(/(Start|End)$/, "");
                                    ngAttrName === directiveNName + "Start" && (attrStartName = name, attrEndName = name.substr(0, name.length - 5) + "end", name = name.substr(0, name.length - 6)), nName = directiveNormalize(name.toLowerCase()), attrsMap[nName] = name, (isNgAttr || !attrs.hasOwnProperty(nName)) && (attrs[nName] = value, getBooleanAttrName(node, nName) && (attrs[nName] = !0)), addAttrInterpolateDirective(node, directives, value, nName), addDirective(directives, nName, "A", maxPriority, ignoreDirective, attrStartName, attrEndName)
                                }
                            }
                            if (className = node.className, isString(className) && "" !== className)
                                for (; match = CLASS_DIRECTIVE_REGEXP.exec(className);) nName = directiveNormalize(match[2]), addDirective(directives, nName, "C", maxPriority, ignoreDirective) && (attrs[nName] = trim(match[3])), className = className.substr(match.index + match[0].length);
                            break;
                        case 3:
                            addTextInterpolateDirective(directives, node.nodeValue);
                            break;
                        case 8:
                            try {
                                match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue), match && (nName = directiveNormalize(match[1]), addDirective(directives, nName, "M", maxPriority, ignoreDirective) && (attrs[nName] = trim(match[2])))
                            } catch (e) {}
                    }
                    return directives.sort(byPriority), directives
                }

                function groupScan(node, attrStart, attrEnd) {
                    var nodes = [],
                        depth = 0;
                    if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) {
                        do {
                            if (!node) throw $compileMinErr("uterdir", "Unterminated attribute, found '{0}' but no matching '{1}' found.", attrStart, attrEnd);
                            1 == node.nodeType && (node.hasAttribute(attrStart) && depth++, node.hasAttribute(attrEnd) && depth--), nodes.push(node), node = node.nextSibling
                        } while (depth > 0)
                    } else nodes.push(node);
                    return jqLite(nodes)
                }

                function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {
                    return function(scope, element, attrs, controllers, transcludeFn) {
                        return element = groupScan(element[0], attrStart, attrEnd), linkFn(scope, element, attrs, controllers, transcludeFn)
                    }
                }

                function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn, jqCollection, originalReplaceDirective, preLinkFns, postLinkFns, previousCompileContext) {
                    function addLinkFns(pre, post, attrStart, attrEnd) {
                        pre && (attrStart && (pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd)), pre.require = directive.require, pre.directiveName = directiveName, (newIsolateScopeDirective === directive || directive.$$isolateScope) && (pre = cloneAndAnnotateFn(pre, {
                            isolateScope: !0
                        })), preLinkFns.push(pre)), post && (attrStart && (post = groupElementsLinkFnWrapper(post, attrStart, attrEnd)), post.require = directive.require, post.directiveName = directiveName, (newIsolateScopeDirective === directive || directive.$$isolateScope) && (post = cloneAndAnnotateFn(post, {
                            isolateScope: !0
                        })), postLinkFns.push(post))
                    }

                    function getControllers(directiveName, require, $element, elementControllers) {
                        var value, retrievalMethod = "data",
                            optional = !1;
                        if (isString(require)) {
                            for (;
                                "^" == (value = require.charAt(0)) || "?" == value;) require = require.substr(1), "^" == value && (retrievalMethod = "inheritedData"), optional = optional || "?" == value;
                            if (value = null, elementControllers && "data" === retrievalMethod && (value = elementControllers[require]), value = value || $element[retrievalMethod]("$" + require + "Controller"), !value && !optional) throw $compileMinErr("ctreq", "Controller '{0}', required by directive '{1}', can't be found!", require, directiveName);
                            return value
                        }
                        return isArray(require) && (value = [], forEach(require, function(require) {
                            value.push(getControllers(directiveName, require, $element, elementControllers))
                        })), value
                    }

                    function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {
                        function controllersBoundTransclude(scope, cloneAttachFn) {
                            var transcludeControllers;
                            return arguments.length < 2 && (cloneAttachFn = scope, scope = undefined), hasElementTranscludeDirective && (transcludeControllers = elementControllers), boundTranscludeFn(scope, cloneAttachFn, transcludeControllers)
                        }
                        var attrs, $element, i, ii, linkFn, controller, isolateScope, transcludeFn, elementControllers = {};
                        if (attrs = compileNode === linkNode ? templateAttrs : shallowCopy(templateAttrs, new Attributes(jqLite(linkNode), templateAttrs.$attr)), $element = attrs.$$element, newIsolateScopeDirective) {
                            var LOCAL_REGEXP = /^\s*([@=&])(\??)\s*(\w*)\s*$/;
                            isolateScope = scope.$new(!0), !templateDirective || templateDirective !== newIsolateScopeDirective && templateDirective !== newIsolateScopeDirective.$$originalDirective ? $element.data("$isolateScopeNoTemplate", isolateScope) : $element.data("$isolateScope", isolateScope), safeAddClass($element, "ng-isolate-scope"), forEach(newIsolateScopeDirective.scope, function(definition, scopeName) {
                                var lastValue, parentGet, parentSet, compare, match = definition.match(LOCAL_REGEXP) || [],
                                    attrName = match[3] || scopeName,
                                    optional = "?" == match[2],
                                    mode = match[1];
                                switch (isolateScope.$$isolateBindings[scopeName] = mode + attrName, mode) {
                                    case "@":
                                        attrs.$observe(attrName, function(value) {
                                            isolateScope[scopeName] = value
                                        }), attrs.$$observers[attrName].$$scope = scope, attrs[attrName] && (isolateScope[scopeName] = $interpolate(attrs[attrName])(scope));
                                        break;
                                    case "=":
                                        if (optional && !attrs[attrName]) return;
                                        parentGet = $parse(attrs[attrName]), compare = parentGet.literal ? equals : function(a, b) {
                                            return a === b || a !== a && b !== b
                                        }, parentSet = parentGet.assign || function() {
                                            throw lastValue = isolateScope[scopeName] = parentGet(scope), $compileMinErr("nonassign", "Expression '{0}' used with directive '{1}' is non-assignable!", attrs[attrName], newIsolateScopeDirective.name)
                                        }, lastValue = isolateScope[scopeName] = parentGet(scope), isolateScope.$watch(function() {
                                            var parentValue = parentGet(scope);
                                            return compare(parentValue, isolateScope[scopeName]) || (compare(parentValue, lastValue) ? parentSet(scope, parentValue = isolateScope[scopeName]) : isolateScope[scopeName] = parentValue), lastValue = parentValue
                                        }, null, parentGet.literal);
                                        break;
                                    case "&":
                                        parentGet = $parse(attrs[attrName]), isolateScope[scopeName] = function(locals) {
                                            return parentGet(scope, locals)
                                        };
                                        break;
                                    default:
                                        throw $compileMinErr("iscp", "Invalid isolate scope definition for directive '{0}'. Definition: {... {1}: '{2}' ...}", newIsolateScopeDirective.name, scopeName, definition)
                                }
                            })
                        }
                        for (transcludeFn = boundTranscludeFn && controllersBoundTransclude, controllerDirectives && forEach(controllerDirectives, function(directive) {
                                var controllerInstance, locals = {
                                    $scope: directive === newIsolateScopeDirective || directive.$$isolateScope ? isolateScope : scope,
                                    $element: $element,
                                    $attrs: attrs,
                                    $transclude: transcludeFn
                                };
                                controller = directive.controller, "@" == controller && (controller = attrs[directive.name]), controllerInstance = $controller(controller, locals), elementControllers[directive.name] = controllerInstance, hasElementTranscludeDirective || $element.data("$" + directive.name + "Controller", controllerInstance), directive.controllerAs && (locals.$scope[directive.controllerAs] = controllerInstance)
                            }), i = 0, ii = preLinkFns.length; ii > i; i++) try {
                            linkFn = preLinkFns[i], linkFn(linkFn.isolateScope ? isolateScope : scope, $element, attrs, linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers), transcludeFn)
                        } catch (e) {
                            $exceptionHandler(e, startingTag($element))
                        }
                        var scopeToChild = scope;
                        for (newIsolateScopeDirective && (newIsolateScopeDirective.template || null === newIsolateScopeDirective.templateUrl) && (scopeToChild = isolateScope), childLinkFn && childLinkFn(scopeToChild, linkNode.childNodes, undefined, boundTranscludeFn), i = postLinkFns.length - 1; i >= 0; i--) try {
                            linkFn = postLinkFns[i], linkFn(linkFn.isolateScope ? isolateScope : scope, $element, attrs, linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers), transcludeFn)
                        } catch (e) {
                            $exceptionHandler(e, startingTag($element))
                        }
                    }
                    previousCompileContext = previousCompileContext || {};
                    for (var newScopeDirective, directive, directiveName, $template, linkFn, directiveValue, terminalPriority = -Number.MAX_VALUE, controllerDirectives = previousCompileContext.controllerDirectives, newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective, templateDirective = previousCompileContext.templateDirective, nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective, hasTranscludeDirective = !1, hasTemplate = !1, hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective, $compileNode = templateAttrs.$$element = jqLite(compileNode), replaceDirective = originalReplaceDirective, childTranscludeFn = transcludeFn, i = 0, ii = directives.length; ii > i; i++) {
                        directive = directives[i];
                        var attrStart = directive.$$start,
                            attrEnd = directive.$$end;
                        if (attrStart && ($compileNode = groupScan(compileNode, attrStart, attrEnd)), $template = undefined, terminalPriority > directive.priority) break;
                        if ((directiveValue = directive.scope) && (newScopeDirective = newScopeDirective || directive, directive.templateUrl || (assertNoDuplicate("new/isolated scope", newIsolateScopeDirective, directive, $compileNode), isObject(directiveValue) && (newIsolateScopeDirective = directive))), directiveName = directive.name, !directive.templateUrl && directive.controller && (directiveValue = directive.controller, controllerDirectives = controllerDirectives || {}, assertNoDuplicate("'" + directiveName + "' controller", controllerDirectives[directiveName], directive, $compileNode), controllerDirectives[directiveName] = directive), (directiveValue = directive.transclude) && (hasTranscludeDirective = !0, directive.$$tlb || (assertNoDuplicate("transclusion", nonTlbTranscludeDirective, directive, $compileNode), nonTlbTranscludeDirective = directive), "element" == directiveValue ? (hasElementTranscludeDirective = !0, terminalPriority = directive.priority, $template = $compileNode, $compileNode = templateAttrs.$$element = jqLite(document.createComment(" " + directiveName + ": " + templateAttrs[directiveName] + " ")), compileNode = $compileNode[0], replaceWith(jqCollection, sliceArgs($template), compileNode), childTranscludeFn = compile($template, transcludeFn, terminalPriority, replaceDirective && replaceDirective.name, {
                                nonTlbTranscludeDirective: nonTlbTranscludeDirective
                            })) : ($template = jqLite(jqLiteClone(compileNode)).contents(), $compileNode.empty(), childTranscludeFn = compile($template, transcludeFn))), directive.template)
                            if (hasTemplate = !0, assertNoDuplicate("template", templateDirective, directive, $compileNode), templateDirective = directive, directiveValue = isFunction(directive.template) ? directive.template($compileNode, templateAttrs) : directive.template, directiveValue = denormalizeTemplate(directiveValue), directive.replace) {
                                if (replaceDirective = directive, $template = jqLiteIsTextNode(directiveValue) ? [] : jqLite(trim(directiveValue)), compileNode = $template[0], 1 != $template.length || 1 !== compileNode.nodeType) throw $compileMinErr("tplrt", "Template for directive '{0}' must have exactly one root element. {1}", directiveName, "");
                                replaceWith(jqCollection, $compileNode, compileNode);
                                var newTemplateAttrs = {
                                        $attr: {}
                                    },
                                    templateDirectives = collectDirectives(compileNode, [], newTemplateAttrs),
                                    unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));
                                newIsolateScopeDirective && markDirectivesAsIsolate(templateDirectives), directives = directives.concat(templateDirectives).concat(unprocessedDirectives), mergeTemplateAttributes(templateAttrs, newTemplateAttrs), ii = directives.length
                            } else $compileNode.html(directiveValue);
                        if (directive.templateUrl) hasTemplate = !0, assertNoDuplicate("template", templateDirective, directive, $compileNode), templateDirective = directive, directive.replace && (replaceDirective = directive), nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i), $compileNode, templateAttrs, jqCollection, hasTranscludeDirective && childTranscludeFn, preLinkFns, postLinkFns, {
                            controllerDirectives: controllerDirectives,
                            newIsolateScopeDirective: newIsolateScopeDirective,
                            templateDirective: templateDirective,
                            nonTlbTranscludeDirective: nonTlbTranscludeDirective
                        }), ii = directives.length;
                        else if (directive.compile) try {
                            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn), isFunction(linkFn) ? addLinkFns(null, linkFn, attrStart, attrEnd) : linkFn && addLinkFns(linkFn.pre, linkFn.post, attrStart, attrEnd)
                        } catch (e) {
                            $exceptionHandler(e, startingTag($compileNode))
                        }
                        directive.terminal && (nodeLinkFn.terminal = !0, terminalPriority = Math.max(terminalPriority, directive.priority))
                    }
                    return nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope === !0, nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective, nodeLinkFn.templateOnThisElement = hasTemplate, nodeLinkFn.transclude = childTranscludeFn, previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective, nodeLinkFn
                }

                function markDirectivesAsIsolate(directives) {
                    for (var j = 0, jj = directives.length; jj > j; j++) directives[j] = inherit(directives[j], {
                        $$isolateScope: !0
                    })
                }

                function addDirective(tDirectives, name, location, maxPriority, ignoreDirective, startAttrName, endAttrName) {
                    if (name === ignoreDirective) return null;
                    var match = null;
                    if (hasDirectives.hasOwnProperty(name))
                        for (var directive, directives = $injector.get(name + Suffix), i = 0, ii = directives.length; ii > i; i++) try {
                            directive = directives[i], (maxPriority === undefined || maxPriority > directive.priority) && -1 != directive.restrict.indexOf(location) && (startAttrName && (directive = inherit(directive, {
                                $$start: startAttrName,
                                $$end: endAttrName
                            })), tDirectives.push(directive), match = directive)
                        } catch (e) {
                            $exceptionHandler(e)
                        }
                    return match
                }

                function mergeTemplateAttributes(dst, src) {
                    var srcAttr = src.$attr,
                        dstAttr = dst.$attr,
                        $element = dst.$$element;
                    forEach(dst, function(value, key) {
                        "$" != key.charAt(0) && (src[key] && src[key] !== value && (value += ("style" === key ? ";" : " ") + src[key]), dst.$set(key, value, !0, srcAttr[key]))
                    }), forEach(src, function(value, key) {
                        "class" == key ? (safeAddClass($element, value), dst["class"] = (dst["class"] ? dst["class"] + " " : "") + value) : "style" == key ? ($element.attr("style", $element.attr("style") + ";" + value), dst.style = (dst.style ? dst.style + ";" : "") + value) : "$" == key.charAt(0) || dst.hasOwnProperty(key) || (dst[key] = value, dstAttr[key] = srcAttr[key])
                    })
                }

                function compileTemplateUrl(directives, $compileNode, tAttrs, $rootElement, childTranscludeFn, preLinkFns, postLinkFns, previousCompileContext) {
                    var afterTemplateNodeLinkFn, afterTemplateChildLinkFn, linkQueue = [],
                        beforeTemplateCompileNode = $compileNode[0],
                        origAsyncDirective = directives.shift(),
                        derivedSyncDirective = extend({}, origAsyncDirective, {
                            templateUrl: null,
                            transclude: null,
                            replace: null,
                            $$originalDirective: origAsyncDirective
                        }),
                        templateUrl = isFunction(origAsyncDirective.templateUrl) ? origAsyncDirective.templateUrl($compileNode, tAttrs) : origAsyncDirective.templateUrl;
                    return $compileNode.empty(), $http.get($sce.getTrustedResourceUrl(templateUrl), {
                            cache: $templateCache
                        }).success(function(content) {
                            var compileNode, tempTemplateAttrs, $template, childBoundTranscludeFn;
                            if (content = denormalizeTemplate(content), origAsyncDirective.replace) {
                                if ($template = jqLiteIsTextNode(content) ? [] : jqLite(trim(content)), compileNode = $template[0], 1 != $template.length || 1 !== compileNode.nodeType) throw $compileMinErr("tplrt", "Template for directive '{0}' must have exactly one root element. {1}", origAsyncDirective.name, templateUrl);
                                tempTemplateAttrs = {
                                    $attr: {}
                                }, replaceWith($rootElement, $compileNode, compileNode);
                                var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);
                                isObject(origAsyncDirective.scope) && markDirectivesAsIsolate(templateDirectives), directives = templateDirectives.concat(directives), mergeTemplateAttributes(tAttrs, tempTemplateAttrs)
                            } else compileNode = beforeTemplateCompileNode, $compileNode.html(content);
                            for (directives.unshift(derivedSyncDirective), afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs, childTranscludeFn, $compileNode, origAsyncDirective, preLinkFns, postLinkFns, previousCompileContext), forEach($rootElement, function(node, i) {
                                    node == compileNode && ($rootElement[i] = $compileNode[0])
                                }), afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn); linkQueue.length;) {
                                var scope = linkQueue.shift(),
                                    beforeTemplateLinkNode = linkQueue.shift(),
                                    linkRootElement = linkQueue.shift(),
                                    boundTranscludeFn = linkQueue.shift(),
                                    linkNode = $compileNode[0];
                                if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {
                                    var oldClasses = beforeTemplateLinkNode.className;
                                    previousCompileContext.hasElementTranscludeDirective && origAsyncDirective.replace || (linkNode = jqLiteClone(compileNode)), replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode), safeAddClass(jqLite(linkNode), oldClasses)
                                }
                                childBoundTranscludeFn = afterTemplateNodeLinkFn.transcludeOnThisElement ? createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn) : boundTranscludeFn, afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement, childBoundTranscludeFn)
                            }
                            linkQueue = null
                        }).error(function(response, code, headers, config) {
                            throw $compileMinErr("tpload", "Failed to load template: {0}", config.url)
                        }),
                        function(ignoreChildLinkFn, scope, node, rootElement, boundTranscludeFn) {
                            var childBoundTranscludeFn = boundTranscludeFn;
                            linkQueue ? (linkQueue.push(scope), linkQueue.push(node), linkQueue.push(rootElement), linkQueue.push(childBoundTranscludeFn)) : (afterTemplateNodeLinkFn.transcludeOnThisElement && (childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn)), afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn))
                        }
                }

                function byPriority(a, b) {
                    var diff = b.priority - a.priority;
                    return 0 !== diff ? diff : a.name !== b.name ? a.name < b.name ? -1 : 1 : a.index - b.index
                }

                function assertNoDuplicate(what, previousDirective, directive, element) {
                    if (previousDirective) throw $compileMinErr("multidir", "Multiple directives [{0}, {1}] asking for {2} on: {3}", previousDirective.name, directive.name, what, startingTag(element))
                }

                function addTextInterpolateDirective(directives, text) {
                    var interpolateFn = $interpolate(text, !0);
                    interpolateFn && directives.push({
                        priority: 0,
                        compile: function(templateNode) {
                            var parent = templateNode.parent(),
                                hasCompileParent = parent.length;
                            return hasCompileParent && safeAddClass(templateNode.parent(), "ng-binding"),
                                function(scope, node) {
                                    var parent = node.parent(),
                                        bindings = parent.data("$binding") || [];
                                    bindings.push(interpolateFn), parent.data("$binding", bindings), hasCompileParent || safeAddClass(parent, "ng-binding"), scope.$watch(interpolateFn, function(value) {
                                        node[0].nodeValue = value
                                    })
                                }
                        }
                    })
                }

                function getTrustedContext(node, attrNormalizedName) {
                    if ("srcdoc" == attrNormalizedName) return $sce.HTML;
                    var tag = nodeName_(node);
                    return "xlinkHref" == attrNormalizedName || "FORM" == tag && "action" == attrNormalizedName || "IMG" != tag && ("src" == attrNormalizedName || "ngSrc" == attrNormalizedName) ? $sce.RESOURCE_URL : void 0
                }

                function addAttrInterpolateDirective(node, directives, value, name) {
                    var interpolateFn = $interpolate(value, !0);
                    if (interpolateFn) {
                        if ("multiple" === name && "SELECT" === nodeName_(node)) throw $compileMinErr("selmulti", "Binding to the 'multiple' attribute is not supported. Element: {0}", startingTag(node));
                        directives.push({
                            priority: 100,
                            compile: function() {
                                return {
                                    pre: function(scope, element, attr) {
                                        var $$observers = attr.$$observers || (attr.$$observers = {});
                                        if (EVENT_HANDLER_ATTR_REGEXP.test(name)) throw $compileMinErr("nodomevents", "Interpolations for HTML DOM event attributes are disallowed.  Please use the ng- versions (such as ng-click instead of onclick) instead.");
                                        interpolateFn = $interpolate(attr[name], !0, getTrustedContext(node, name)), interpolateFn && (attr[name] = interpolateFn(scope), ($$observers[name] || ($$observers[name] = [])).$$inter = !0, (attr.$$observers && attr.$$observers[name].$$scope || scope).$watch(interpolateFn, function(newValue, oldValue) {
                                            "class" === name && newValue != oldValue ? attr.$updateClass(newValue, oldValue) : attr.$set(name, newValue)
                                        }))
                                    }
                                }
                            }
                        })
                    }
                }

                function replaceWith($rootElement, elementsToRemove, newNode) {
                    var i, ii, firstElementToRemove = elementsToRemove[0],
                        removeCount = elementsToRemove.length,
                        parent = firstElementToRemove.parentNode;
                    if ($rootElement)
                        for (i = 0, ii = $rootElement.length; ii > i; i++)
                            if ($rootElement[i] == firstElementToRemove) {
                                $rootElement[i++] = newNode;
                                for (var j = i, j2 = j + removeCount - 1, jj = $rootElement.length; jj > j; j++, j2++) jj > j2 ? $rootElement[j] = $rootElement[j2] : delete $rootElement[j];
                                $rootElement.length -= removeCount - 1;
                                break
                            }
                    parent && parent.replaceChild(newNode, firstElementToRemove);
                    var fragment = document.createDocumentFragment();
                    fragment.appendChild(firstElementToRemove), newNode[jqLite.expando] = firstElementToRemove[jqLite.expando];
                    for (var k = 1, kk = elementsToRemove.length; kk > k; k++) {
                        var element = elementsToRemove[k];
                        jqLite(element).remove(), fragment.appendChild(element), delete elementsToRemove[k]
                    }
                    elementsToRemove[0] = newNode, elementsToRemove.length = 1
                }

                function cloneAndAnnotateFn(fn, annotation) {
                    return extend(function() {
                        return fn.apply(null, arguments)
                    }, fn, annotation)
                }
                var Attributes = function(element, attr) {
                    this.$$element = element, this.$attr = attr || {}
                };
                Attributes.prototype = {
                    $normalize: directiveNormalize,
                    $addClass: function(classVal) {
                        classVal && classVal.length > 0 && $animate.addClass(this.$$element, classVal)
                    },
                    $removeClass: function(classVal) {
                        classVal && classVal.length > 0 && $animate.removeClass(this.$$element, classVal)
                    },
                    $updateClass: function(newClasses, oldClasses) {
                        var toAdd = tokenDifference(newClasses, oldClasses),
                            toRemove = tokenDifference(oldClasses, newClasses);
                        0 === toAdd.length ? $animate.removeClass(this.$$element, toRemove) : 0 === toRemove.length ? $animate.addClass(this.$$element, toAdd) : $animate.setClass(this.$$element, toAdd, toRemove)
                    },
                    $set: function(key, value, writeAttr, attrName) {
                        var nodeName, booleanKey = getBooleanAttrName(this.$$element[0], key);
                        booleanKey && (this.$$element.prop(key, value), attrName = booleanKey), this[key] = value, attrName ? this.$attr[key] = attrName : (attrName = this.$attr[key], attrName || (this.$attr[key] = attrName = snake_case(key, "-"))), nodeName = nodeName_(this.$$element), ("A" === nodeName && "href" === key || "IMG" === nodeName && "src" === key) && (this[key] = value = $$sanitizeUri(value, "src" === key)), writeAttr !== !1 && (null === value || value === undefined ? this.$$element.removeAttr(attrName) : this.$$element.attr(attrName, value));
                        var $$observers = this.$$observers;
                        $$observers && forEach($$observers[key], function(fn) {
                            try {
                                fn(value)
                            } catch (e) {
                                $exceptionHandler(e)
                            }
                        })
                    },
                    $observe: function(key, fn) {
                        var attrs = this,
                            $$observers = attrs.$$observers || (attrs.$$observers = {}),
                            listeners = $$observers[key] || ($$observers[key] = []);
                        return listeners.push(fn), $rootScope.$evalAsync(function() {
                            listeners.$$inter || fn(attrs[key])
                        }), fn
                    }
                };
                var startSymbol = $interpolate.startSymbol(),
                    endSymbol = $interpolate.endSymbol(),
                    denormalizeTemplate = "{{" == startSymbol || "}}" == endSymbol ? identity : function(template) {
                        return template.replace(/\{\{/g, startSymbol).replace(/}}/g, endSymbol)
                    },
                    NG_ATTR_BINDING = /^ngAttr[A-Z]/;
                return compile
            }]
        }

        function directiveNormalize(name) {
            return camelCase(name.replace(PREFIX_REGEXP, ""))
        }

        function tokenDifference(str1, str2) {
            var values = "",
                tokens1 = str1.split(/\s+/),
                tokens2 = str2.split(/\s+/);
            outer: for (var i = 0; i < tokens1.length; i++) {
                for (var token = tokens1[i], j = 0; j < tokens2.length; j++)
                    if (token == tokens2[j]) continue outer;
                values += (values.length > 0 ? " " : "") + token
            }
            return values
        }

        function $ControllerProvider() {
            var controllers = {},
                CNTRL_REG = /^(\S+)(\s+as\s+(\w+))?$/;
            this.register = function(name, constructor) {
                assertNotHasOwnProperty(name, "controller"), isObject(name) ? extend(controllers, name) : controllers[name] = constructor
            }, this.$get = ["$injector", "$window", function($injector, $window) {
                return function(expression, locals) {
                    var instance, match, constructor, identifier;
                    if (isString(expression) && (match = expression.match(CNTRL_REG), constructor = match[1], identifier = match[3], expression = controllers.hasOwnProperty(constructor) ? controllers[constructor] : getter(locals.$scope, constructor, !0) || getter($window, constructor, !0), assertArgFn(expression, constructor, !0)), instance = $injector.instantiate(expression, locals), identifier) {
                        if (!locals || "object" != typeof locals.$scope) throw minErr("$controller")("noscp", "Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.", constructor || expression.name, identifier);
                        locals.$scope[identifier] = instance
                    }
                    return instance
                }
            }]
        }

        function $DocumentProvider() {
            this.$get = ["$window", function(window) {
                return jqLite(window.document)
            }]
        }

        function $ExceptionHandlerProvider() {
            this.$get = ["$log", function($log) {
                return function() {
                    $log.error.apply($log, arguments)
                }
            }]
        }

        function parseHeaders(headers) {
            var key, val, i, parsed = {};
            return headers ? (forEach(headers.split("\n"), function(line) {
                i = line.indexOf(":"), key = lowercase(trim(line.substr(0, i))), val = trim(line.substr(i + 1)), key && (parsed[key] = parsed[key] ? parsed[key] + ", " + val : val)
            }), parsed) : parsed
        }

        function headersGetter(headers) {
            var headersObj = isObject(headers) ? headers : undefined;
            return function(name) {
                return headersObj || (headersObj = parseHeaders(headers)), name ? headersObj[lowercase(name)] || null : headersObj
            }
        }

        function transformData(data, headers, fns) {
            return isFunction(fns) ? fns(data, headers) : (forEach(fns, function(fn) {
                data = fn(data, headers)
            }), data)
        }

        function isSuccess(status) {
            return status >= 200 && 300 > status
        }

        function $HttpProvider() {
            var JSON_START = /^\s*(\[|\{[^\{])/,
                JSON_END = /[\}\]]\s*$/,
                PROTECTION_PREFIX = /^\)\]\}',?\n/,
                CONTENT_TYPE_APPLICATION_JSON = {
                    "Content-Type": "application/json;charset=utf-8"
                },
                defaults = this.defaults = {
                    transformResponse: [function(data) {
                        return isString(data) && (data = data.replace(PROTECTION_PREFIX, ""), JSON_START.test(data) && JSON_END.test(data) && (data = fromJson(data))), data
                    }],
                    transformRequest: [function(d) {
                        return !isObject(d) || isFile(d) || isBlob(d) ? d : toJson(d)
                    }],
                    headers: {
                        common: {
                            Accept: "application/json, text/plain, */*"
                        },
                        post: shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
                        put: shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
                        patch: shallowCopy(CONTENT_TYPE_APPLICATION_JSON)
                    },
                    xsrfCookieName: "XSRF-TOKEN",
                    xsrfHeaderName: "X-XSRF-TOKEN"
                },
                interceptorFactories = this.interceptors = [],
                responseInterceptorFactories = this.responseInterceptors = [];
            this.$get = ["$httpBackend", "$browser", "$cacheFactory", "$rootScope", "$q", "$injector", function($httpBackend, $browser, $cacheFactory, $rootScope, $q, $injector) {
                function $http(requestConfig) {
                    function transformResponse(response) {
                        var resp = extend({}, response, {
                            data: transformData(response.data, response.headers, config.transformResponse)
                        });
                        return isSuccess(response.status) ? resp : $q.reject(resp)
                    }

                    function mergeHeaders(config) {
                        function execHeaders(headers) {
                            var headerContent;
                            forEach(headers, function(headerFn, header) {
                                isFunction(headerFn) && (headerContent = headerFn(), null != headerContent ? headers[header] = headerContent : delete headers[header])
                            })
                        }
                        var defHeaderName, lowercaseDefHeaderName, reqHeaderName, defHeaders = defaults.headers,
                            reqHeaders = extend({}, config.headers);
                        defHeaders = extend({}, defHeaders.common, defHeaders[lowercase(config.method)]);
                        defaultHeadersIteration: for (defHeaderName in defHeaders) {
                            lowercaseDefHeaderName = lowercase(defHeaderName);
                            for (reqHeaderName in reqHeaders)
                                if (lowercase(reqHeaderName) === lowercaseDefHeaderName) continue defaultHeadersIteration;
                            reqHeaders[defHeaderName] = defHeaders[defHeaderName]
                        }
                        return execHeaders(reqHeaders), reqHeaders
                    }
                    var config = {
                            method: "get",
                            transformRequest: defaults.transformRequest,
                            transformResponse: defaults.transformResponse
                        },
                        headers = mergeHeaders(requestConfig);
                    extend(config, requestConfig), config.headers = headers, config.method = uppercase(config.method);
                    var serverRequest = function(config) {
                            headers = config.headers;
                            var reqData = transformData(config.data, headersGetter(headers), config.transformRequest);
                            return isUndefined(reqData) && forEach(headers, function(value, header) {
                                "content-type" === lowercase(header) && delete headers[header]
                            }), isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials) && (config.withCredentials = defaults.withCredentials), sendReq(config, reqData, headers).then(transformResponse, transformResponse)
                        },
                        chain = [serverRequest, undefined],
                        promise = $q.when(config);
                    for (forEach(reversedInterceptors, function(interceptor) {
                            (interceptor.request || interceptor.requestError) && chain.unshift(interceptor.request, interceptor.requestError), (interceptor.response || interceptor.responseError) && chain.push(interceptor.response, interceptor.responseError)
                        }); chain.length;) {
                        var thenFn = chain.shift(),
                            rejectFn = chain.shift();
                        promise = promise.then(thenFn, rejectFn)
                    }
                    return promise.success = function(fn) {
                        return promise.then(function(response) {
                            fn(response.data, response.status, response.headers, config)
                        }), promise
                    }, promise.error = function(fn) {
                        return promise.then(null, function(response) {
                            fn(response.data, response.status, response.headers, config)
                        }), promise
                    }, promise
                }

                function createShortMethods() {
                    forEach(arguments, function(name) {
                        $http[name] = function(url, config) {
                            return $http(extend(config || {}, {
                                method: name,
                                url: url
                            }))
                        }
                    })
                }

                function createShortMethodsWithData() {
                    forEach(arguments, function(name) {
                        $http[name] = function(url, data, config) {
                            return $http(extend(config || {}, {
                                method: name,
                                url: url,
                                data: data
                            }))
                        }
                    })
                }

                function sendReq(config, reqData, reqHeaders) {
                    function done(status, response, headersString, statusText) {
                        cache && (isSuccess(status) ? cache.put(url, [status, response, parseHeaders(headersString), statusText]) : cache.remove(url)), resolvePromise(response, status, headersString, statusText), $rootScope.$$phase || $rootScope.$apply()
                    }

                    function resolvePromise(response, status, headers, statusText) {
                        status = Math.max(status, 0), (isSuccess(status) ? deferred.resolve : deferred.reject)({
                            data: response,
                            status: status,
                            headers: headersGetter(headers),
                            config: config,
                            statusText: statusText
                        })
                    }

                    function removePendingReq() {
                        var idx = indexOf($http.pendingRequests, config); - 1 !== idx && $http.pendingRequests.splice(idx, 1)
                    }
                    var cache, cachedResp, deferred = $q.defer(),
                        promise = deferred.promise,
                        url = buildUrl(config.url, config.params);
                    if ($http.pendingRequests.push(config), promise.then(removePendingReq, removePendingReq), !config.cache && !defaults.cache || config.cache === !1 || "GET" !== config.method && "JSONP" !== config.method || (cache = isObject(config.cache) ? config.cache : isObject(defaults.cache) ? defaults.cache : defaultCache), cache)
                        if (cachedResp = cache.get(url), isDefined(cachedResp)) {
                            if (isPromiseLike(cachedResp)) return cachedResp.then(removePendingReq, removePendingReq), cachedResp;
                            isArray(cachedResp) ? resolvePromise(cachedResp[1], cachedResp[0], shallowCopy(cachedResp[2]), cachedResp[3]) : resolvePromise(cachedResp, 200, {}, "OK")
                        } else cache.put(url, promise);
                    if (isUndefined(cachedResp)) {
                        var xsrfValue = urlIsSameOrigin(config.url) ? $browser.cookies()[config.xsrfCookieName || defaults.xsrfCookieName] : undefined;
                        xsrfValue && (reqHeaders[config.xsrfHeaderName || defaults.xsrfHeaderName] = xsrfValue), $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout, config.withCredentials, config.responseType)
                    }
                    return promise
                }

                function buildUrl(url, params) {
                    if (!params) return url;
                    var parts = [];
                    return forEachSorted(params, function(value, key) {
                        null === value || isUndefined(value) || (isArray(value) || (value = [value]), forEach(value, function(v) {
                            isObject(v) && (v = isDate(v) ? v.toISOString() : toJson(v)), parts.push(encodeUriQuery(key) + "=" + encodeUriQuery(v))
                        }))
                    }), parts.length > 0 && (url += (-1 == url.indexOf("?") ? "?" : "&") + parts.join("&")), url
                }
                var defaultCache = $cacheFactory("$http"),
                    reversedInterceptors = [];
                return forEach(interceptorFactories, function(interceptorFactory) {
                    reversedInterceptors.unshift(isString(interceptorFactory) ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory))
                }), forEach(responseInterceptorFactories, function(interceptorFactory, index) {
                    var responseFn = isString(interceptorFactory) ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory);
                    reversedInterceptors.splice(index, 0, {
                        response: function(response) {
                            return responseFn($q.when(response))
                        },
                        responseError: function(response) {
                            return responseFn($q.reject(response))
                        }
                    })
                }), $http.pendingRequests = [], createShortMethods("get", "delete", "head", "jsonp"), createShortMethodsWithData("post", "put", "patch"), $http.defaults = defaults, $http
            }]
        }

        function createXhr(method) {
            if (8 >= msie && (!method.match(/^(get|post|head|put|delete|options)$/i) || !window.XMLHttpRequest)) return new window.ActiveXObject("Microsoft.XMLHTTP");
            if (window.XMLHttpRequest) return new window.XMLHttpRequest;
            throw minErr("$httpBackend")("noxhr", "This browser does not support XMLHttpRequest.")
        }

        function $HttpBackendProvider() {
            this.$get = ["$browser", "$window", "$document", function($browser, $window, $document) {
                return createHttpBackend($browser, createXhr, $browser.defer, $window.angular.callbacks, $document[0])
            }]
        }

        function createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {
            function jsonpReq(url, callbackId, done) {
                var script = rawDocument.createElement("script"),
                    callback = null;
                return script.type = "text/javascript", script.src = url, script.async = !0, callback = function(event) {
                    removeEventListenerFn(script, "load", callback), removeEventListenerFn(script, "error", callback), rawDocument.body.removeChild(script), script = null;
                    var status = -1,
                        text = "unknown";
                    event && ("load" !== event.type || callbacks[callbackId].called || (event = {
                        type: "error"
                    }), text = event.type, status = "error" === event.type ? 404 : 200), done && done(status, text)
                }, addEventListenerFn(script, "load", callback), addEventListenerFn(script, "error", callback), 8 >= msie && (script.onreadystatechange = function() {
                    isString(script.readyState) && /loaded|complete/.test(script.readyState) && (script.onreadystatechange = null, callback({
                        type: "load"
                    }))
                }), rawDocument.body.appendChild(script), callback
            }
            var ABORTED = -1;
            return function(method, url, post, callback, headers, timeout, withCredentials, responseType) {
                function timeoutRequest() {
                    status = ABORTED, jsonpDone && jsonpDone(), xhr && xhr.abort()
                }

                function completeRequest(callback, status, response, headersString, statusText) {
                    timeoutId && $browserDefer.cancel(timeoutId), jsonpDone = xhr = null, 0 === status && (status = response ? 200 : "file" == urlResolve(url).protocol ? 404 : 0), status = 1223 === status ? 204 : status, statusText = statusText || "", callback(status, response, headersString, statusText), $browser.$$completeOutstandingRequest(noop)
                }
                var status;
                if ($browser.$$incOutstandingRequestCount(), url = url || $browser.url(), "jsonp" == lowercase(method)) {
                    var callbackId = "_" + (callbacks.counter++).toString(36);
                    callbacks[callbackId] = function(data) {
                        callbacks[callbackId].data = data, callbacks[callbackId].called = !0
                    };
                    var jsonpDone = jsonpReq(url.replace("JSON_CALLBACK", "angular.callbacks." + callbackId), callbackId, function(status, text) {
                        completeRequest(callback, status, callbacks[callbackId].data, "", text), callbacks[callbackId] = noop
                    })
                } else {
                    var xhr = createXhr(method);
                    if (xhr.open(method, url, !0), forEach(headers, function(value, key) {
                            isDefined(value) && xhr.setRequestHeader(key, value)
                        }), xhr.onreadystatechange = function() {
                            if (xhr && 4 == xhr.readyState) {
                                var responseHeaders = null,
                                    response = null,
                                    statusText = "";
                                status !== ABORTED && (responseHeaders = xhr.getAllResponseHeaders(), response = "response" in xhr ? xhr.response : xhr.responseText), status === ABORTED && 10 > msie || (statusText = xhr.statusText), completeRequest(callback, status || xhr.status, response, responseHeaders, statusText)
                            }
                        }, withCredentials && (xhr.withCredentials = !0), responseType) try {
                        xhr.responseType = responseType
                    } catch (e) {
                        if ("json" !== responseType) throw e
                    }
                    xhr.send(post || null)
                }
                if (timeout > 0) var timeoutId = $browserDefer(timeoutRequest, timeout);
                else isPromiseLike(timeout) && timeout.then(timeoutRequest)
            }
        }

        function $InterpolateProvider() {
            var startSymbol = "{{",
                endSymbol = "}}";
            this.startSymbol = function(value) {
                return value ? (startSymbol = value, this) : startSymbol
            }, this.endSymbol = function(value) {
                return value ? (endSymbol = value, this) : endSymbol
            }, this.$get = ["$parse", "$exceptionHandler", "$sce", function($parse, $exceptionHandler, $sce) {
                function $interpolate(text, mustHaveExpression, trustedContext) {
                    for (var startIndex, endIndex, fn, exp, index = 0, parts = [], length = text.length, hasInterpolation = !1, concat = []; length > index;) - 1 != (startIndex = text.indexOf(startSymbol, index)) && -1 != (endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) ? (index != startIndex && parts.push(text.substring(index, startIndex)), parts.push(fn = $parse(exp = text.substring(startIndex + startSymbolLength, endIndex))), fn.exp = exp, index = endIndex + endSymbolLength, hasInterpolation = !0) : (index != length && parts.push(text.substring(index)), index = length);
                    if ((length = parts.length) || (parts.push(""), length = 1), trustedContext && parts.length > 1) throw $interpolateMinErr("noconcat", "Error while interpolating: {0}\nStrict Contextual Escaping disallows interpolations that concatenate multiple expressions when a trusted value is required.  See http://docs.angularjs.org/api/ng.$sce", text);
                    return !mustHaveExpression || hasInterpolation ? (concat.length = length, fn = function(context) {
                        try {
                            for (var part, i = 0, ii = length; ii > i; i++) {
                                if ("function" == typeof(part = parts[i]))
                                    if (part = part(context), part = trustedContext ? $sce.getTrusted(trustedContext, part) : $sce.valueOf(part), null == part) part = "";
                                    else switch (typeof part) {
                                        case "string":
                                            break;
                                        case "number":
                                            part = "" + part;
                                            break;
                                        default:
                                            part = toJson(part)
                                    }
                                    concat[i] = part
                            }
                            return concat.join("")
                        } catch (err) {
                            var newErr = $interpolateMinErr("interr", "Can't interpolate: {0}\n{1}", text, err.toString());
                            $exceptionHandler(newErr)
                        }
                    }, fn.exp = text, fn.parts = parts, fn) : void 0
                }
                var startSymbolLength = startSymbol.length,
                    endSymbolLength = endSymbol.length;
                return $interpolate.startSymbol = function() {
                    return startSymbol
                }, $interpolate.endSymbol = function() {
                    return endSymbol
                }, $interpolate
            }]
        }

        function $IntervalProvider() {
            this.$get = ["$rootScope", "$window", "$q", function($rootScope, $window, $q) {
                function interval(fn, delay, count, invokeApply) {
                    var setInterval = $window.setInterval,
                        clearInterval = $window.clearInterval,
                        deferred = $q.defer(),
                        promise = deferred.promise,
                        iteration = 0,
                        skipApply = isDefined(invokeApply) && !invokeApply;
                    return count = isDefined(count) ? count : 0, promise.then(null, null, fn), promise.$$intervalId = setInterval(function() {
                        deferred.notify(iteration++), count > 0 && iteration >= count && (deferred.resolve(iteration), clearInterval(promise.$$intervalId), delete intervals[promise.$$intervalId]), skipApply || $rootScope.$apply()
                    }, delay), intervals[promise.$$intervalId] = deferred, promise
                }
                var intervals = {};
                return interval.cancel = function(promise) {
                    return promise && promise.$$intervalId in intervals ? (intervals[promise.$$intervalId].reject("canceled"), $window.clearInterval(promise.$$intervalId), delete intervals[promise.$$intervalId], !0) : !1
                }, interval
            }]
        }

        function $LocaleProvider() {
            this.$get = function() {
                return {
                    id: "en-us",
                    NUMBER_FORMATS: {
                        DECIMAL_SEP: ".",
                        GROUP_SEP: ",",
                        PATTERNS: [{
                            minInt: 1,
                            minFrac: 0,
                            maxFrac: 3,
                            posPre: "",
                            posSuf: "",
                            negPre: "-",
                            negSuf: "",
                            gSize: 3,
                            lgSize: 3
                        }, {
                            minInt: 1,
                            minFrac: 2,
                            maxFrac: 2,
                            posPre: "Â¤",
                            posSuf: "",
                            negPre: "(Â¤",
                            negSuf: ")",
                            gSize: 3,
                            lgSize: 3
                        }],
                        CURRENCY_SYM: "$"
                    },
                    DATETIME_FORMATS: {
                        MONTH: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
                        SHORTMONTH: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
                        DAY: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
                        SHORTDAY: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(","),
                        AMPMS: ["AM", "PM"],
                        medium: "MMM d, y h:mm:ss a",
                        "short": "M/d/yy h:mm a",
                        fullDate: "EEEE, MMMM d, y",
                        longDate: "MMMM d, y",
                        mediumDate: "MMM d, y",
                        shortDate: "M/d/yy",
                        mediumTime: "h:mm:ss a",
                        shortTime: "h:mm a"
                    },
                    pluralCat: function(num) {
                        return 1 === num ? "one" : "other"
                    }
                }
            }
        }

        function encodePath(path) {
            for (var segments = path.split("/"), i = segments.length; i--;) segments[i] = encodeUriSegment(segments[i]);
            return segments.join("/")
        }

        function parseAbsoluteUrl(absoluteUrl, locationObj, appBase) {
            var parsedUrl = urlResolve(absoluteUrl, appBase);
            locationObj.$$protocol = parsedUrl.protocol, locationObj.$$host = parsedUrl.hostname, locationObj.$$port = int(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null
        }

        function parseAppUrl(relativeUrl, locationObj, appBase) {
            var prefixed = "/" !== relativeUrl.charAt(0);
            prefixed && (relativeUrl = "/" + relativeUrl);
            var match = urlResolve(relativeUrl, appBase);
            locationObj.$$path = decodeURIComponent(prefixed && "/" === match.pathname.charAt(0) ? match.pathname.substring(1) : match.pathname), locationObj.$$search = parseKeyValue(match.search), locationObj.$$hash = decodeURIComponent(match.hash), locationObj.$$path && "/" != locationObj.$$path.charAt(0) && (locationObj.$$path = "/" + locationObj.$$path)
        }

        function beginsWith(begin, whole) {
            return 0 === whole.indexOf(begin) ? whole.substr(begin.length) : void 0
        }

        function stripHash(url) {
            var index = url.indexOf("#");
            return -1 == index ? url : url.substr(0, index)
        }

        function stripFile(url) {
            return url.substr(0, stripHash(url).lastIndexOf("/") + 1)
        }

        function serverBase(url) {
            return url.substring(0, url.indexOf("/", url.indexOf("//") + 2))
        }

        function LocationHtml5Url(appBase, basePrefix) {
            this.$$html5 = !0, basePrefix = basePrefix || "";
            var appBaseNoFile = stripFile(appBase);
            parseAbsoluteUrl(appBase, this, appBase), this.$$parse = function(url) {
                var pathUrl = beginsWith(appBaseNoFile, url);
                if (!isString(pathUrl)) throw $locationMinErr("ipthprfx", 'Invalid url "{0}", missing path prefix "{1}".', url, appBaseNoFile);
                parseAppUrl(pathUrl, this, appBase), this.$$path || (this.$$path = "/"), this.$$compose()
            }, this.$$compose = function() {
                var search = toKeyValue(this.$$search),
                    hash = this.$$hash ? "#" + encodeUriSegment(this.$$hash) : "";
                this.$$url = encodePath(this.$$path) + (search ? "?" + search : "") + hash, this.$$absUrl = appBaseNoFile + this.$$url.substr(1)
            }, this.$$parseLinkUrl = function(url) {
                var appUrl, prevAppUrl, rewrittenUrl;
                return (appUrl = beginsWith(appBase, url)) !== undefined ? (prevAppUrl = appUrl, rewrittenUrl = (appUrl = beginsWith(basePrefix, appUrl)) !== undefined ? appBaseNoFile + (beginsWith("/", appUrl) || appUrl) : appBase + prevAppUrl) : (appUrl = beginsWith(appBaseNoFile, url)) !== undefined ? rewrittenUrl = appBaseNoFile + appUrl : appBaseNoFile == url + "/" && (rewrittenUrl = appBaseNoFile), rewrittenUrl && this.$$parse(rewrittenUrl), !!rewrittenUrl
            }
        }

        function LocationHashbangUrl(appBase, hashPrefix) {
            var appBaseNoFile = stripFile(appBase);
            parseAbsoluteUrl(appBase, this, appBase), this.$$parse = function(url) {
                function removeWindowsDriveName(path, url, base) {
                    var firstPathSegmentMatch, windowsFilePathExp = /^\/[A-Z]:(\/.*)/;
                    return 0 === url.indexOf(base) && (url = url.replace(base, "")), windowsFilePathExp.exec(url) ? path : (firstPathSegmentMatch = windowsFilePathExp.exec(path), firstPathSegmentMatch ? firstPathSegmentMatch[1] : path)
                }
                var withoutBaseUrl = beginsWith(appBase, url) || beginsWith(appBaseNoFile, url),
                    withoutHashUrl = "#" == withoutBaseUrl.charAt(0) ? beginsWith(hashPrefix, withoutBaseUrl) : this.$$html5 ? withoutBaseUrl : "";
                if (!isString(withoutHashUrl)) throw $locationMinErr("ihshprfx", 'Invalid url "{0}", missing hash prefix "{1}".', url, hashPrefix);
                parseAppUrl(withoutHashUrl, this, appBase), this.$$path = removeWindowsDriveName(this.$$path, withoutHashUrl, appBase), this.$$compose()
            }, this.$$compose = function() {
                var search = toKeyValue(this.$$search),
                    hash = this.$$hash ? "#" + encodeUriSegment(this.$$hash) : "";
                this.$$url = encodePath(this.$$path) + (search ? "?" + search : "") + hash, this.$$absUrl = appBase + (this.$$url ? hashPrefix + this.$$url : "")
            }, this.$$parseLinkUrl = function(url) {
                return stripHash(appBase) == stripHash(url) ? (this.$$parse(url), !0) : !1
            }
        }

        function LocationHashbangInHtml5Url(appBase, hashPrefix) {
            this.$$html5 = !0, LocationHashbangUrl.apply(this, arguments);
            var appBaseNoFile = stripFile(appBase);
            this.$$parseLinkUrl = function(url) {
                var rewrittenUrl, appUrl;
                return appBase == stripHash(url) ? rewrittenUrl = url : (appUrl = beginsWith(appBaseNoFile, url)) ? rewrittenUrl = appBase + hashPrefix + appUrl : appBaseNoFile === url + "/" && (rewrittenUrl = appBaseNoFile), rewrittenUrl && this.$$parse(rewrittenUrl), !!rewrittenUrl
            }, this.$$compose = function() {
                var search = toKeyValue(this.$$search),
                    hash = this.$$hash ? "#" + encodeUriSegment(this.$$hash) : "";
                this.$$url = encodePath(this.$$path) + (search ? "?" + search : "") + hash, this.$$absUrl = appBase + hashPrefix + this.$$url
            }
        }

        function locationGetter(property) {
            return function() {
                return this[property]
            }
        }

        function locationGetterSetter(property, preprocess) {
            return function(value) {
                return isUndefined(value) ? this[property] : (this[property] = preprocess(value), this.$$compose(), this)
            }
        }

        function $LocationProvider() {
            var hashPrefix = "",
                html5Mode = !1;
            this.hashPrefix = function(prefix) {
                return isDefined(prefix) ? (hashPrefix = prefix, this) : hashPrefix
            }, this.html5Mode = function(mode) {
                return isDefined(mode) ? (html5Mode = mode, this) : html5Mode
            }, this.$get = ["$rootScope", "$browser", "$sniffer", "$rootElement", function($rootScope, $browser, $sniffer, $rootElement) {
                function afterLocationChange(oldUrl) {
                    $rootScope.$broadcast("$locationChangeSuccess", $location.absUrl(), oldUrl)
                }
                var $location, LocationMode, appBase, baseHref = $browser.baseHref(),
                    initialUrl = $browser.url();
                html5Mode ? (appBase = serverBase(initialUrl) + (baseHref || "/"), LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url) : (appBase = stripHash(initialUrl), LocationMode = LocationHashbangUrl), $location = new LocationMode(appBase, "#" + hashPrefix), $location.$$parseLinkUrl(initialUrl, initialUrl);
                var IGNORE_URI_REGEXP = /^\s*(javascript|mailto):/i;
                $rootElement.on("click", function(event) {
                    if (!event.ctrlKey && !event.metaKey && 2 != event.which) {
                        for (var elm = jqLite(event.target);
                            "a" !== lowercase(elm[0].nodeName);)
                            if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;
                        var absHref = elm.prop("href"),
                            relHref = elm.attr("href") || elm.attr("xlink:href");
                        isObject(absHref) && "[object SVGAnimatedString]" === absHref.toString() && (absHref = urlResolve(absHref.animVal).href), IGNORE_URI_REGEXP.test(absHref) || !absHref || elm.attr("target") || event.isDefaultPrevented() || $location.$$parseLinkUrl(absHref, relHref) && (event.preventDefault(), $location.absUrl() != $browser.url() && ($rootScope.$apply(), window.angular["ff-684208-preventDefault"] = !0))
                    }
                }), $location.absUrl() != initialUrl && $browser.url($location.absUrl(), !0), $browser.onUrlChange(function(newUrl) {
                    $location.absUrl() != newUrl && ($rootScope.$evalAsync(function() {
                        var oldUrl = $location.absUrl();
                        $location.$$parse(newUrl), $rootScope.$broadcast("$locationChangeStart", newUrl, oldUrl).defaultPrevented ? ($location.$$parse(oldUrl), $browser.url(oldUrl)) : afterLocationChange(oldUrl)
                    }), $rootScope.$$phase || $rootScope.$digest())
                });
                var changeCounter = 0;
                return $rootScope.$watch(function() {
                    var oldUrl = $browser.url(),
                        currentReplace = $location.$$replace;
                    return changeCounter && oldUrl == $location.absUrl() || (changeCounter++, $rootScope.$evalAsync(function() {
                        $rootScope.$broadcast("$locationChangeStart", $location.absUrl(), oldUrl).defaultPrevented ? $location.$$parse(oldUrl) : ($browser.url($location.absUrl(), currentReplace), afterLocationChange(oldUrl))
                    })), $location.$$replace = !1, changeCounter
                }), $location
            }]
        }

        function $LogProvider() {
            var debug = !0,
                self = this;
            this.debugEnabled = function(flag) {
                return isDefined(flag) ? (debug = flag, this) : debug
            }, this.$get = ["$window", function($window) {
                function formatError(arg) {
                    return arg instanceof Error && (arg.stack ? arg = arg.message && -1 === arg.stack.indexOf(arg.message) ? "Error: " + arg.message + "\n" + arg.stack : arg.stack : arg.sourceURL && (arg = arg.message + "\n" + arg.sourceURL + ":" + arg.line)), arg
                }

                function consoleLog(type) {
                    var console = $window.console || {},
                        logFn = console[type] || console.log || noop,
                        hasApply = !1;
                    try {
                        hasApply = !!logFn.apply
                    } catch (e) {}
                    return hasApply ? function() {
                        var args = [];
                        return forEach(arguments, function(arg) {
                            args.push(formatError(arg))
                        }), logFn.apply(console, args)
                    } : function(arg1, arg2) {
                        logFn(arg1, null == arg2 ? "" : arg2)
                    }
                }
                return {
                    log: consoleLog("log"),
                    info: consoleLog("info"),
                    warn: consoleLog("warn"),
                    error: consoleLog("error"),
                    debug: function() {
                        var fn = consoleLog("debug");
                        return function() {
                            debug && fn.apply(self, arguments)
                        }
                    }()
                }
            }]
        }

        function ensureSafeMemberName(name, fullExpression) {
            if ("__defineGetter__" === name || "__defineSetter__" === name || "__lookupGetter__" === name || "__lookupSetter__" === name || "__proto__" === name) throw $parseMinErr("isecfld", "Attempting to access a disallowed field in Angular expressions! Expression: {0}", fullExpression);
            return name
        }

        function ensureSafeObject(obj, fullExpression) {
            if (obj) {
                if (obj.constructor === obj) throw $parseMinErr("isecfn", "Referencing Function in Angular expressions is disallowed! Expression: {0}", fullExpression);
                if (obj.document && obj.location && obj.alert && obj.setInterval) throw $parseMinErr("isecwindow", "Referencing the Window in Angular expressions is disallowed! Expression: {0}", fullExpression);
                if (obj.children && (obj.nodeName || obj.prop && obj.attr && obj.find)) throw $parseMinErr("isecdom", "Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}", fullExpression);
                if (obj === Object) throw $parseMinErr("isecobj", "Referencing Object in Angular expressions is disallowed! Expression: {0}", fullExpression)
            }
            return obj
        }

        function ensureSafeFunction(obj, fullExpression) {
            if (obj) {
                if (obj.constructor === obj) throw $parseMinErr("isecfn", "Referencing Function in Angular expressions is disallowed! Expression: {0}", fullExpression);
                if (obj === CALL || obj === APPLY || BIND && obj === BIND) throw $parseMinErr("isecff", "Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}", fullExpression)
            }
        }

        function setter(obj, path, setValue, fullExp, options) {
            ensureSafeObject(obj, fullExp), options = options || {};
            for (var key, element = path.split("."), i = 0; element.length > 1; i++) {
                key = ensureSafeMemberName(element.shift(), fullExp);
                var propertyObj = ensureSafeObject(obj[key], fullExp);
                propertyObj || (propertyObj = {}, obj[key] = propertyObj), obj = propertyObj, obj.then && options.unwrapPromises && (promiseWarning(fullExp), "$$v" in obj || ! function(promise) {
                    promise.then(function(val) {
                        promise.$$v = val
                    })
                }(obj), obj.$$v === undefined && (obj.$$v = {}), obj = obj.$$v)
            }
            return key = ensureSafeMemberName(element.shift(), fullExp), ensureSafeObject(obj[key], fullExp), obj[key] = setValue, setValue
        }

        function isPossiblyDangerousMemberName(name) {
            return "constructor" == name
        }

        function cspSafeGetterFn(key0, key1, key2, key3, key4, fullExp, options) {
            ensureSafeMemberName(key0, fullExp), ensureSafeMemberName(key1, fullExp), ensureSafeMemberName(key2, fullExp), ensureSafeMemberName(key3, fullExp), ensureSafeMemberName(key4, fullExp);
            var eso = function(o) {
                    return ensureSafeObject(o, fullExp)
                },
                expensiveChecks = options.expensiveChecks,
                eso0 = expensiveChecks || isPossiblyDangerousMemberName(key0) ? eso : identity,
                eso1 = expensiveChecks || isPossiblyDangerousMemberName(key1) ? eso : identity,
                eso2 = expensiveChecks || isPossiblyDangerousMemberName(key2) ? eso : identity,
                eso3 = expensiveChecks || isPossiblyDangerousMemberName(key3) ? eso : identity,
                eso4 = expensiveChecks || isPossiblyDangerousMemberName(key4) ? eso : identity;
            return options.unwrapPromises ? function(scope, locals) {
                var promise, pathVal = locals && locals.hasOwnProperty(key0) ? locals : scope;
                return null == pathVal ? pathVal : (pathVal = eso0(pathVal[key0]), pathVal && pathVal.then && (promiseWarning(fullExp), "$$v" in pathVal || (promise = pathVal, promise.$$v = undefined, promise.then(function(val) {
                    promise.$$v = eso0(val)
                })), pathVal = eso0(pathVal.$$v)), key1 ? null == pathVal ? undefined : (pathVal = eso1(pathVal[key1]), pathVal && pathVal.then && (promiseWarning(fullExp), "$$v" in pathVal || (promise = pathVal, promise.$$v = undefined, promise.then(function(val) {
                    promise.$$v = eso1(val)
                })), pathVal = eso1(pathVal.$$v)), key2 ? null == pathVal ? undefined : (pathVal = eso2(pathVal[key2]), pathVal && pathVal.then && (promiseWarning(fullExp), "$$v" in pathVal || (promise = pathVal, promise.$$v = undefined, promise.then(function(val) {
                    promise.$$v = eso2(val)
                })), pathVal = eso2(pathVal.$$v)), key3 ? null == pathVal ? undefined : (pathVal = eso3(pathVal[key3]), pathVal && pathVal.then && (promiseWarning(fullExp), "$$v" in pathVal || (promise = pathVal, promise.$$v = undefined, promise.then(function(val) {
                    promise.$$v = eso3(val)
                })), pathVal = eso3(pathVal.$$v)), key4 ? null == pathVal ? undefined : (pathVal = eso4(pathVal[key4]), pathVal && pathVal.then && (promiseWarning(fullExp), "$$v" in pathVal || (promise = pathVal, promise.$$v = undefined, promise.then(function(val) {
                    promise.$$v = eso4(val)
                })), pathVal = eso4(pathVal.$$v)), pathVal) : pathVal) : pathVal) : pathVal) : pathVal)
            } : function(scope, locals) {
                var pathVal = locals && locals.hasOwnProperty(key0) ? locals : scope;
                return null == pathVal ? pathVal : (pathVal = eso0(pathVal[key0]), key1 ? null == pathVal ? undefined : (pathVal = eso1(pathVal[key1]), key2 ? null == pathVal ? undefined : (pathVal = eso2(pathVal[key2]), key3 ? null == pathVal ? undefined : (pathVal = eso3(pathVal[key3]), key4 ? null == pathVal ? undefined : pathVal = eso4(pathVal[key4]) : pathVal) : pathVal) : pathVal) : pathVal)
            }
        }

        function getterFnWithExtraArgs(fn, fullExpression) {
            return function(s, l) {
                return fn(s, l, promiseWarning, ensureSafeObject, fullExpression)
            }
        }

        function getterFn(path, options, fullExp) {
            var expensiveChecks = options.expensiveChecks,
                getterFnCache = expensiveChecks ? getterFnCacheExpensive : getterFnCacheDefault;
            if (getterFnCache.hasOwnProperty(path)) return getterFnCache[path];
            var fn, pathKeys = path.split("."),
                pathKeysLength = pathKeys.length;
            if (options.csp) fn = 6 > pathKeysLength ? cspSafeGetterFn(pathKeys[0], pathKeys[1], pathKeys[2], pathKeys[3], pathKeys[4], fullExp, options) : function(scope, locals) {
                var val, i = 0;
                do val = cspSafeGetterFn(pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++], fullExp, options)(scope, locals), locals = undefined, scope = val; while (pathKeysLength > i);
                return val
            };
            else {
                var code = "var p;\n";
                expensiveChecks && (code += "s = eso(s, fe);\nl = eso(l, fe);\n");
                var needsEnsureSafeObject = expensiveChecks;
                forEach(pathKeys, function(key, index) {
                    ensureSafeMemberName(key, fullExp);
                    var lookupJs = (index ? "s" : '((l&&l.hasOwnProperty("' + key + '"))?l:s)') + '["' + key + '"]',
                        wrapWithEso = expensiveChecks || isPossiblyDangerousMemberName(key);
                    wrapWithEso && (lookupJs = "eso(" + lookupJs + ", fe)", needsEnsureSafeObject = !0), code += "if(s == null) return undefined;\ns=" + lookupJs + ";\n", options.unwrapPromises && (code += 'if (s && s.then) {\n pw("' + fullExp.replace(/(["\r\n])/g, "\\$1") + '");\n if (!("$$v" in s)) {\n p=s;\n p.$$v = undefined;\n p.then(function(v) {p.$$v=' + (wrapWithEso ? "eso(v)" : "v") + ";});\n}\n s=" + (wrapWithEso ? "eso(s.$$v)" : "s.$$v") + "\n}\n")
                }), code += "return s;";
                var evaledFnGetter = new Function("s", "l", "pw", "eso", "fe", code);
                evaledFnGetter.toString = valueFn(code), (needsEnsureSafeObject || options.unwrapPromises) && (evaledFnGetter = getterFnWithExtraArgs(evaledFnGetter, fullExp)), fn = evaledFnGetter
            }
            return "hasOwnProperty" !== path && (getterFnCache[path] = fn), fn
        }

        function $ParseProvider() {
            var cacheDefault = {},
                cacheExpensive = {},
                $parseOptions = {
                    csp: !1,
                    unwrapPromises: !1,
                    logPromiseWarnings: !0,
                    expensiveChecks: !1
                };
            this.unwrapPromises = function(value) {
                return isDefined(value) ? ($parseOptions.unwrapPromises = !!value, this) : $parseOptions.unwrapPromises
            }, this.logPromiseWarnings = function(value) {
                return isDefined(value) ? ($parseOptions.logPromiseWarnings = value, this) : $parseOptions.logPromiseWarnings
            }, this.$get = ["$filter", "$sniffer", "$log", function($filter, $sniffer, $log) {
                $parseOptions.csp = $sniffer.csp;
                var $parseOptionsExpensive = {
                    csp: $parseOptions.csp,
                    unwrapPromises: $parseOptions.unwrapPromises,
                    logPromiseWarnings: $parseOptions.logPromiseWarnings,
                    expensiveChecks: !0
                };
                return promiseWarning = function(fullExp) {
                        $parseOptions.logPromiseWarnings && !promiseWarningCache.hasOwnProperty(fullExp) && (promiseWarningCache[fullExp] = !0, $log.warn("[$parse] Promise found in the expression `" + fullExp + "`. Automatic unwrapping of promises in Angular expressions is deprecated."))
                    },
                    function(exp, expensiveChecks) {
                        var parsedExpression;
                        switch (typeof exp) {
                            case "string":
                                var cache = expensiveChecks ? cacheExpensive : cacheDefault;
                                if (cache.hasOwnProperty(exp)) return cache[exp];
                                var parseOptions = expensiveChecks ? $parseOptionsExpensive : $parseOptions,
                                    lexer = new Lexer(parseOptions),
                                    parser = new Parser(lexer, $filter, parseOptions);
                                return parsedExpression = parser.parse(exp), "hasOwnProperty" !== exp && (cache[exp] = parsedExpression), parsedExpression;
                            case "function":
                                return exp;
                            default:
                                return noop
                        }
                    }
            }]
        }

        function $QProvider() {
            this.$get = ["$rootScope", "$exceptionHandler", function($rootScope, $exceptionHandler) {
                return qFactory(function(callback) {
                    $rootScope.$evalAsync(callback)
                }, $exceptionHandler)
            }]
        }

        function qFactory(nextTick, exceptionHandler) {
            function defaultCallback(value) {
                return value
            }

            function defaultErrback(reason) {
                return reject(reason)
            }

            function all(promises) {
                var deferred = defer(),
                    counter = 0,
                    results = isArray(promises) ? [] : {};
                return forEach(promises, function(promise, key) {
                    counter++, ref(promise).then(function(value) {
                        results.hasOwnProperty(key) || (results[key] = value, --counter || deferred.resolve(results))
                    }, function(reason) {
                        results.hasOwnProperty(key) || deferred.reject(reason)
                    })
                }), 0 === counter && deferred.resolve(results), deferred.promise
            }
            var defer = function() {
                    var value, deferred, pending = [];
                    return deferred = {
                        resolve: function(val) {
                            if (pending) {
                                var callbacks = pending;
                                pending = undefined, value = ref(val), callbacks.length && nextTick(function() {
                                    for (var callback, i = 0, ii = callbacks.length; ii > i; i++) callback = callbacks[i], value.then(callback[0], callback[1], callback[2])
                                })
                            }
                        },
                        reject: function(reason) {
                            deferred.resolve(createInternalRejectedPromise(reason))
                        },
                        notify: function(progress) {
                            if (pending) {
                                var callbacks = pending;
                                pending.length && nextTick(function() {
                                    for (var callback, i = 0, ii = callbacks.length; ii > i; i++) callback = callbacks[i], callback[2](progress)
                                })
                            }
                        },
                        promise: {
                            then: function(callback, errback, progressback) {
                                var result = defer(),
                                    wrappedCallback = function(value) {
                                        try {
                                            result.resolve((isFunction(callback) ? callback : defaultCallback)(value))
                                        } catch (e) {
                                            result.reject(e), exceptionHandler(e)
                                        }
                                    },
                                    wrappedErrback = function(reason) {
                                        try {
                                            result.resolve((isFunction(errback) ? errback : defaultErrback)(reason))
                                        } catch (e) {
                                            result.reject(e), exceptionHandler(e)
                                        }
                                    },
                                    wrappedProgressback = function(progress) {
                                        try {
                                            result.notify((isFunction(progressback) ? progressback : defaultCallback)(progress))
                                        } catch (e) {
                                            exceptionHandler(e)
                                        }
                                    };
                                return pending ? pending.push([wrappedCallback, wrappedErrback, wrappedProgressback]) : value.then(wrappedCallback, wrappedErrback, wrappedProgressback), result.promise
                            },
                            "catch": function(callback) {
                                return this.then(null, callback)
                            },
                            "finally": function(callback) {
                                function makePromise(value, resolved) {
                                    var result = defer();
                                    return resolved ? result.resolve(value) : result.reject(value), result.promise
                                }

                                function handleCallback(value, isResolved) {
                                    var callbackOutput = null;
                                    try {
                                        callbackOutput = (callback || defaultCallback)()
                                    } catch (e) {
                                        return makePromise(e, !1)
                                    }
                                    return isPromiseLike(callbackOutput) ? callbackOutput.then(function() {
                                        return makePromise(value, isResolved)
                                    }, function(error) {
                                        return makePromise(error, !1)
                                    }) : makePromise(value, isResolved)
                                }
                                return this.then(function(value) {
                                    return handleCallback(value, !0)
                                }, function(error) {
                                    return handleCallback(error, !1)
                                })
                            }
                        }
                    }
                },
                ref = function(value) {
                    return isPromiseLike(value) ? value : {
                        then: function(callback) {
                            var result = defer();
                            return nextTick(function() {
                                result.resolve(callback(value))
                            }), result.promise
                        }
                    }
                },
                reject = function(reason) {
                    var result = defer();
                    return result.reject(reason), result.promise
                },
                createInternalRejectedPromise = function(reason) {
                    return {
                        then: function(callback, errback) {
                            var result = defer();
                            return nextTick(function() {
                                try {
                                    result.resolve((isFunction(errback) ? errback : defaultErrback)(reason))
                                } catch (e) {
                                    result.reject(e), exceptionHandler(e)
                                }
                            }), result.promise
                        }
                    }
                },
                when = function(value, callback, errback, progressback) {
                    var done, result = defer(),
                        wrappedCallback = function(value) {
                            try {
                                return (isFunction(callback) ? callback : defaultCallback)(value)
                            } catch (e) {
                                return exceptionHandler(e), reject(e)
                            }
                        },
                        wrappedErrback = function(reason) {
                            try {
                                return (isFunction(errback) ? errback : defaultErrback)(reason)
                            } catch (e) {
                                return exceptionHandler(e), reject(e)
                            }
                        },
                        wrappedProgressback = function(progress) {
                            try {
                                return (isFunction(progressback) ? progressback : defaultCallback)(progress)
                            } catch (e) {
                                exceptionHandler(e)
                            }
                        };
                    return nextTick(function() {
                        ref(value).then(function(value) {
                            done || (done = !0, result.resolve(ref(value).then(wrappedCallback, wrappedErrback, wrappedProgressback)))
                        }, function(reason) {
                            done || (done = !0, result.resolve(wrappedErrback(reason)))
                        }, function(progress) {
                            done || result.notify(wrappedProgressback(progress))
                        })
                    }), result.promise
                };
            return {
                defer: defer,
                reject: reject,
                when: when,
                all: all
            }
        }

        function $$RAFProvider() {
            this.$get = ["$window", "$timeout", function($window, $timeout) {
                var requestAnimationFrame = $window.requestAnimationFrame || $window.webkitRequestAnimationFrame || $window.mozRequestAnimationFrame,
                    cancelAnimationFrame = $window.cancelAnimationFrame || $window.webkitCancelAnimationFrame || $window.mozCancelAnimationFrame || $window.webkitCancelRequestAnimationFrame,
                    rafSupported = !!requestAnimationFrame,
                    raf = rafSupported ? function(fn) {
                        var id = requestAnimationFrame(fn);
                        return function() {
                            cancelAnimationFrame(id)
                        }
                    } : function(fn) {
                        var timer = $timeout(fn, 16.66, !1);
                        return function() {
                            $timeout.cancel(timer)
                        }
                    };
                return raf.supported = rafSupported, raf
            }]
        }

        function $RootScopeProvider() {
            var TTL = 10,
                $rootScopeMinErr = minErr("$rootScope"),
                lastDirtyWatch = null;
            this.digestTtl = function(value) {
                return arguments.length && (TTL = value), TTL
            }, this.$get = ["$injector", "$exceptionHandler", "$parse", "$browser", function($injector, $exceptionHandler, $parse, $browser) {
                function Scope() {
                    this.$id = nextUid(), this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null, this["this"] = this.$root = this, this.$$destroyed = !1, this.$$asyncQueue = [], this.$$postDigestQueue = [], this.$$listeners = {}, this.$$listenerCount = {}, this.$$isolateBindings = {}
                }

                function beginPhase(phase) {
                    if ($rootScope.$$phase) throw $rootScopeMinErr("inprog", "{0} already in progress", $rootScope.$$phase);
                    $rootScope.$$phase = phase
                }

                function clearPhase() {
                    $rootScope.$$phase = null
                }

                function compileToFn(exp, name) {
                    var fn = $parse(exp);
                    return assertArgFn(fn, name), fn
                }

                function decrementListenerCount(current, count, name) {
                    do current.$$listenerCount[name] -= count, 0 === current.$$listenerCount[name] && delete current.$$listenerCount[name]; while (current = current.$parent)
                }

                function initWatchVal() {}
                Scope.prototype = {
                    constructor: Scope,
                    $new: function(isolate) {
                        var child;
                        return isolate ? (child = new Scope, child.$root = this.$root, child.$$asyncQueue = this.$$asyncQueue, child.$$postDigestQueue = this.$$postDigestQueue) : (this.$$childScopeClass || (this.$$childScopeClass = function() {
                            this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null, this.$$listeners = {}, this.$$listenerCount = {}, this.$id = nextUid(), this.$$childScopeClass = null
                        }, this.$$childScopeClass.prototype = this), child = new this.$$childScopeClass), child["this"] = child, child.$parent = this, child.$$prevSibling = this.$$childTail, this.$$childHead ? (this.$$childTail.$$nextSibling = child, this.$$childTail = child) : this.$$childHead = this.$$childTail = child, child
                    },
                    $watch: function(watchExp, listener, objectEquality) {
                        var scope = this,
                            get = compileToFn(watchExp, "watch"),
                            array = scope.$$watchers,
                            watcher = {
                                fn: listener,
                                last: initWatchVal,
                                get: get,
                                exp: watchExp,
                                eq: !!objectEquality
                            };
                        if (lastDirtyWatch = null, !isFunction(listener)) {
                            var listenFn = compileToFn(listener || noop, "listener");
                            watcher.fn = function(newVal, oldVal, scope) {
                                listenFn(scope)
                            }
                        }
                        if ("string" == typeof watchExp && get.constant) {
                            var originalFn = watcher.fn;
                            watcher.fn = function(newVal, oldVal, scope) {
                                originalFn.call(this, newVal, oldVal, scope), arrayRemove(array, watcher)
                            }
                        }
                        return array || (array = scope.$$watchers = []), array.unshift(watcher),
                            function() {
                                arrayRemove(array, watcher), lastDirtyWatch = null
                            }
                    },
                    $watchCollection: function(obj, listener) {
                        function $watchCollectionWatch() {
                            newValue = objGetter(self);
                            var newLength, key, bothNaN;
                            if (isObject(newValue))
                                if (isArrayLike(newValue)) {
                                    oldValue !== internalArray && (oldValue = internalArray, oldLength = oldValue.length = 0, changeDetected++), newLength = newValue.length, oldLength !== newLength && (changeDetected++, oldValue.length = oldLength = newLength);
                                    for (var i = 0; newLength > i; i++) bothNaN = oldValue[i] !== oldValue[i] && newValue[i] !== newValue[i], bothNaN || oldValue[i] === newValue[i] || (changeDetected++, oldValue[i] = newValue[i])
                                } else {
                                    oldValue !== internalObject && (oldValue = internalObject = {}, oldLength = 0, changeDetected++), newLength = 0;
                                    for (key in newValue) newValue.hasOwnProperty(key) && (newLength++, oldValue.hasOwnProperty(key) ? (bothNaN = oldValue[key] !== oldValue[key] && newValue[key] !== newValue[key], bothNaN || oldValue[key] === newValue[key] || (changeDetected++, oldValue[key] = newValue[key])) : (oldLength++, oldValue[key] = newValue[key], changeDetected++));
                                    if (oldLength > newLength) {
                                        changeDetected++;
                                        for (key in oldValue) oldValue.hasOwnProperty(key) && !newValue.hasOwnProperty(key) && (oldLength--, delete oldValue[key])
                                    }
                                } else oldValue !== newValue && (oldValue = newValue, changeDetected++);
                            return changeDetected
                        }

                        function $watchCollectionAction() {
                            if (initRun ? (initRun = !1, listener(newValue, newValue, self)) : listener(newValue, veryOldValue, self), trackVeryOldValue)
                                if (isObject(newValue))
                                    if (isArrayLike(newValue)) {
                                        veryOldValue = new Array(newValue.length);
                                        for (var i = 0; i < newValue.length; i++) veryOldValue[i] = newValue[i]
                                    } else {
                                        veryOldValue = {};
                                        for (var key in newValue) hasOwnProperty.call(newValue, key) && (veryOldValue[key] = newValue[key])
                                    } else veryOldValue = newValue
                        }
                        var newValue, oldValue, veryOldValue, self = this,
                            trackVeryOldValue = listener.length > 1,
                            changeDetected = 0,
                            objGetter = $parse(obj),
                            internalArray = [],
                            internalObject = {},
                            initRun = !0,
                            oldLength = 0;
                        return this.$watch($watchCollectionWatch, $watchCollectionAction)
                    },
                    $digest: function() {
                        var watch, value, last, watchers, length, dirty, next, current, logIdx, logMsg, asyncTask, asyncQueue = this.$$asyncQueue,
                            postDigestQueue = this.$$postDigestQueue,
                            ttl = TTL,
                            target = this,
                            watchLog = [];
                        beginPhase("$digest"), $browser.$$checkUrlChange(), lastDirtyWatch = null;
                        do {
                            for (dirty = !1, current = target; asyncQueue.length;) {
                                try {
                                    asyncTask = asyncQueue.shift(), asyncTask.scope.$eval(asyncTask.expression)
                                } catch (e) {
                                    clearPhase(), $exceptionHandler(e)
                                }
                                lastDirtyWatch = null
                            }
                            traverseScopesLoop: do {
                                if (watchers = current.$$watchers)
                                    for (length = watchers.length; length--;) try {
                                        if (watch = watchers[length])
                                            if ((value = watch.get(current)) === (last = watch.last) || (watch.eq ? equals(value, last) : "number" == typeof value && "number" == typeof last && isNaN(value) && isNaN(last))) {
                                                if (watch === lastDirtyWatch) {
                                                    dirty = !1;
                                                    break traverseScopesLoop
                                                }
                                            } else dirty = !0, lastDirtyWatch = watch, watch.last = watch.eq ? copy(value, null) : value, watch.fn(value, last === initWatchVal ? value : last, current), 5 > ttl && (logIdx = 4 - ttl, watchLog[logIdx] || (watchLog[logIdx] = []), logMsg = isFunction(watch.exp) ? "fn: " + (watch.exp.name || watch.exp.toString()) : watch.exp, logMsg += "; newVal: " + toJson(value) + "; oldVal: " + toJson(last), watchLog[logIdx].push(logMsg))
                                    } catch (e) {
                                        clearPhase(), $exceptionHandler(e)
                                    }
                                if (!(next = current.$$childHead || current !== target && current.$$nextSibling))
                                    for (; current !== target && !(next = current.$$nextSibling);) current = current.$parent
                            } while (current = next);
                            if ((dirty || asyncQueue.length) && !ttl--) throw clearPhase(), $rootScopeMinErr("infdig", "{0} $digest() iterations reached. Aborting!\nWatchers fired in the last 5 iterations: {1}", TTL, toJson(watchLog))
                        } while (dirty || asyncQueue.length);
                        for (clearPhase(); postDigestQueue.length;) try {
                            postDigestQueue.shift()()
                        } catch (e) {
                            $exceptionHandler(e)
                        }
                    },
                    $destroy: function() {
                        if (!this.$$destroyed) {
                            var parent = this.$parent;
                            this.$broadcast("$destroy"), this.$$destroyed = !0, this !== $rootScope && (forEach(this.$$listenerCount, bind(null, decrementListenerCount, this)), parent.$$childHead == this && (parent.$$childHead = this.$$nextSibling), parent.$$childTail == this && (parent.$$childTail = this.$$prevSibling), this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling), this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling), this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = this.$root = null, this.$$listeners = {}, this.$$watchers = this.$$asyncQueue = this.$$postDigestQueue = [], this.$destroy = this.$digest = this.$apply = noop, this.$on = this.$watch = function() {
                                return noop
                            })
                        }
                    },
                    $eval: function(expr, locals) {
                        return $parse(expr)(this, locals)
                    },
                    $evalAsync: function(expr) {
                        $rootScope.$$phase || $rootScope.$$asyncQueue.length || $browser.defer(function() {
                            $rootScope.$$asyncQueue.length && $rootScope.$digest()
                        }), this.$$asyncQueue.push({
                            scope: this,
                            expression: expr
                        })
                    },
                    $$postDigest: function(fn) {
                        this.$$postDigestQueue.push(fn)
                    },
                    $apply: function(expr) {
                        try {
                            return beginPhase("$apply"), this.$eval(expr)
                        } catch (e) {
                            $exceptionHandler(e)
                        } finally {
                            clearPhase();
                            try {
                                $rootScope.$digest()
                            } catch (e) {
                                throw $exceptionHandler(e), e
                            }
                        }
                    },
                    $on: function(name, listener) {
                        var namedListeners = this.$$listeners[name];
                        namedListeners || (this.$$listeners[name] = namedListeners = []), namedListeners.push(listener);
                        var current = this;
                        do current.$$listenerCount[name] || (current.$$listenerCount[name] = 0), current.$$listenerCount[name] ++; while (current = current.$parent);
                        var self = this;
                        return function() {
                            var indexOfListener = indexOf(namedListeners, listener); - 1 !== indexOfListener && (namedListeners[indexOfListener] = null, decrementListenerCount(self, 1, name))
                        }
                    },
                    $emit: function(name) {
                        var namedListeners, i, length, empty = [],
                            scope = this,
                            stopPropagation = !1,
                            event = {
                                name: name,
                                targetScope: scope,
                                stopPropagation: function() {
                                    stopPropagation = !0
                                },
                                preventDefault: function() {
                                    event.defaultPrevented = !0
                                },
                                defaultPrevented: !1
                            },
                            listenerArgs = concat([event], arguments, 1);
                        do {
                            for (namedListeners = scope.$$listeners[name] || empty, event.currentScope = scope, i = 0, length = namedListeners.length; length > i; i++)
                                if (namedListeners[i]) try {
                                    namedListeners[i].apply(null, listenerArgs)
                                } catch (e) {
                                    $exceptionHandler(e)
                                } else namedListeners.splice(i, 1), i--, length--;
                            if (stopPropagation) return event;
                            scope = scope.$parent
                        } while (scope);
                        return event
                    },
                    $broadcast: function(name) {
                        for (var listeners, i, length, target = this, current = target, next = target, event = {
                                name: name,
                                targetScope: target,
                                preventDefault: function() {
                                    event.defaultPrevented = !0
                                },
                                defaultPrevented: !1
                            }, listenerArgs = concat([event], arguments, 1); current = next;) {
                            for (event.currentScope = current, listeners = current.$$listeners[name] || [], i = 0, length = listeners.length; length > i; i++)
                                if (listeners[i]) try {
                                    listeners[i].apply(null, listenerArgs)
                                } catch (e) {
                                    $exceptionHandler(e)
                                } else listeners.splice(i, 1), i--, length--;
                            if (!(next = current.$$listenerCount[name] && current.$$childHead || current !== target && current.$$nextSibling))
                                for (; current !== target && !(next = current.$$nextSibling);) current = current.$parent
                        }
                        return event
                    }
                };
                var $rootScope = new Scope;
                return $rootScope
            }]
        }

        function $$SanitizeUriProvider() {
            var aHrefSanitizationWhitelist = /^\s*(https?|ftp|mailto|tel|file):/,
                imgSrcSanitizationWhitelist = /^\s*((https?|ftp|file):|data:image\/)/;
            this.aHrefSanitizationWhitelist = function(regexp) {
                return isDefined(regexp) ? (aHrefSanitizationWhitelist = regexp, this) : aHrefSanitizationWhitelist
            }, this.imgSrcSanitizationWhitelist = function(regexp) {
                return isDefined(regexp) ? (imgSrcSanitizationWhitelist = regexp, this) : imgSrcSanitizationWhitelist
            }, this.$get = function() {
                return function(uri, isImage) {
                    var normalizedVal, regex = isImage ? imgSrcSanitizationWhitelist : aHrefSanitizationWhitelist;
                    return msie && !(msie >= 8) || (normalizedVal = urlResolve(uri).href, "" === normalizedVal || normalizedVal.match(regex)) ? uri : "unsafe:" + normalizedVal
                }
            }
        }

        function escapeForRegexp(s) {
            return s.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
        }

        function adjustMatcher(matcher) {
            if ("self" === matcher) return matcher;
            if (isString(matcher)) {
                if (matcher.indexOf("***") > -1) throw $sceMinErr("iwcard", "Illegal sequence *** in string matcher.  String: {0}", matcher);
                return matcher = escapeForRegexp(matcher).replace("\\*\\*", ".*").replace("\\*", "[^:/.?&;]*"), new RegExp("^" + matcher + "$")
            }
            if (isRegExp(matcher)) return new RegExp("^" + matcher.source + "$");
            throw $sceMinErr("imatcher", 'Matchers may only be "self", string patterns or RegExp objects')
        }

        function adjustMatchers(matchers) {
            var adjustedMatchers = [];
            return isDefined(matchers) && forEach(matchers, function(matcher) {
                adjustedMatchers.push(adjustMatcher(matcher))
            }), adjustedMatchers
        }

        function $SceDelegateProvider() {
            this.SCE_CONTEXTS = SCE_CONTEXTS;
            var resourceUrlWhitelist = ["self"],
                resourceUrlBlacklist = [];
            this.resourceUrlWhitelist = function(value) {
                return arguments.length && (resourceUrlWhitelist = adjustMatchers(value)), resourceUrlWhitelist
            }, this.resourceUrlBlacklist = function(value) {
                return arguments.length && (resourceUrlBlacklist = adjustMatchers(value)), resourceUrlBlacklist
            }, this.$get = ["$injector", function($injector) {
                function matchUrl(matcher, parsedUrl) {
                    return "self" === matcher ? urlIsSameOrigin(parsedUrl) : !!matcher.exec(parsedUrl.href)
                }

                function isResourceUrlAllowedByPolicy(url) {
                    var i, n, parsedUrl = urlResolve(url.toString()),
                        allowed = !1;
                    for (i = 0, n = resourceUrlWhitelist.length; n > i; i++)
                        if (matchUrl(resourceUrlWhitelist[i], parsedUrl)) {
                            allowed = !0;
                            break
                        }
                    if (allowed)
                        for (i = 0, n = resourceUrlBlacklist.length; n > i; i++)
                            if (matchUrl(resourceUrlBlacklist[i], parsedUrl)) {
                                allowed = !1;
                                break
                            }
                    return allowed
                }

                function generateHolderType(Base) {
                    var holderType = function(trustedValue) {
                        this.$$unwrapTrustedValue = function() {
                            return trustedValue
                        }
                    };
                    return Base && (holderType.prototype = new Base), holderType.prototype.valueOf = function() {
                        return this.$$unwrapTrustedValue()
                    }, holderType.prototype.toString = function() {
                        return this.$$unwrapTrustedValue().toString()
                    }, holderType
                }

                function trustAs(type, trustedValue) {
                    var Constructor = byType.hasOwnProperty(type) ? byType[type] : null;
                    if (!Constructor) throw $sceMinErr("icontext", "Attempted to trust a value in invalid context. Context: {0}; Value: {1}", type, trustedValue);
                    if (null === trustedValue || trustedValue === undefined || "" === trustedValue) return trustedValue;
                    if ("string" != typeof trustedValue) throw $sceMinErr("itype", "Attempted to trust a non-string value in a content requiring a string: Context: {0}", type);
                    return new Constructor(trustedValue)
                }

                function valueOf(maybeTrusted) {
                    return maybeTrusted instanceof trustedValueHolderBase ? maybeTrusted.$$unwrapTrustedValue() : maybeTrusted
                }

                function getTrusted(type, maybeTrusted) {
                    if (null === maybeTrusted || maybeTrusted === undefined || "" === maybeTrusted) return maybeTrusted;
                    var constructor = byType.hasOwnProperty(type) ? byType[type] : null;
                    if (constructor && maybeTrusted instanceof constructor) return maybeTrusted.$$unwrapTrustedValue();
                    if (type === SCE_CONTEXTS.RESOURCE_URL) {
                        if (isResourceUrlAllowedByPolicy(maybeTrusted)) return maybeTrusted;
                        throw $sceMinErr("insecurl", "Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}", maybeTrusted.toString())
                    }
                    if (type === SCE_CONTEXTS.HTML) return htmlSanitizer(maybeTrusted);
                    throw $sceMinErr("unsafe", "Attempting to use an unsafe value in a safe context.")
                }
                var htmlSanitizer = function() {
                    throw $sceMinErr("unsafe", "Attempting to use an unsafe value in a safe context.")
                };
                $injector.has("$sanitize") && (htmlSanitizer = $injector.get("$sanitize"));
                var trustedValueHolderBase = generateHolderType(),
                    byType = {};
                return byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase), byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase), byType[SCE_CONTEXTS.URL] = generateHolderType(trustedValueHolderBase), byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase), byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(byType[SCE_CONTEXTS.URL]), {
                    trustAs: trustAs,
                    getTrusted: getTrusted,
                    valueOf: valueOf
                }
            }]
        }

        function $SceProvider() {
            var enabled = !0;
            this.enabled = function(value) {
                return arguments.length && (enabled = !!value), enabled
            }, this.$get = ["$parse", "$sniffer", "$sceDelegate", function($parse, $sniffer, $sceDelegate) {
                if (enabled && $sniffer.msie && $sniffer.msieDocumentMode < 8) throw $sceMinErr("iequirks", "Strict Contextual Escaping does not support Internet Explorer version < 9 in quirks mode.  You can fix this by adding the text <!doctype html> to the top of your HTML document.  See http://docs.angularjs.org/api/ng.$sce for more information.");
                var sce = shallowCopy(SCE_CONTEXTS);
                sce.isEnabled = function() {
                    return enabled
                }, sce.trustAs = $sceDelegate.trustAs, sce.getTrusted = $sceDelegate.getTrusted, sce.valueOf = $sceDelegate.valueOf, enabled || (sce.trustAs = sce.getTrusted = function(type, value) {
                    return value
                }, sce.valueOf = identity), sce.parseAs = function(type, expr) {
                    var parsed = $parse(expr);
                    return parsed.literal && parsed.constant ? parsed : function(self, locals) {
                        return sce.getTrusted(type, parsed(self, locals))
                    }
                };
                var parse = sce.parseAs,
                    getTrusted = sce.getTrusted,
                    trustAs = sce.trustAs;
                return forEach(SCE_CONTEXTS, function(enumValue, name) {
                    var lName = lowercase(name);
                    sce[camelCase("parse_as_" + lName)] = function(expr) {
                        return parse(enumValue, expr)
                    }, sce[camelCase("get_trusted_" + lName)] = function(value) {
                        return getTrusted(enumValue, value)
                    }, sce[camelCase("trust_as_" + lName)] = function(value) {
                        return trustAs(enumValue, value)
                    }
                }), sce
            }]
        }

        function $SnifferProvider() {
            this.$get = ["$window", "$document", function($window, $document) {
                var vendorPrefix, match, eventSupport = {},
                    android = int((/android (\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]),
                    boxee = /Boxee/i.test(($window.navigator || {}).userAgent),
                    document = $document[0] || {},
                    documentMode = document.documentMode,
                    vendorRegex = /^(Moz|webkit|O|ms)(?=[A-Z])/,
                    bodyStyle = document.body && document.body.style,
                    transitions = !1,
                    animations = !1;
                if (bodyStyle) {
                    for (var prop in bodyStyle)
                        if (match = vendorRegex.exec(prop)) {
                            vendorPrefix = match[0], vendorPrefix = vendorPrefix.substr(0, 1).toUpperCase() + vendorPrefix.substr(1);
                            break
                        }
                    vendorPrefix || (vendorPrefix = "WebkitOpacity" in bodyStyle && "webkit"), transitions = !!("transition" in bodyStyle || vendorPrefix + "Transition" in bodyStyle), animations = !!("animation" in bodyStyle || vendorPrefix + "Animation" in bodyStyle), !android || transitions && animations || (transitions = isString(document.body.style.webkitTransition), animations = isString(document.body.style.webkitAnimation))
                }
                return {
                    history: !(!$window.history || !$window.history.pushState || 4 > android || boxee),
                    hashchange: "onhashchange" in $window && (!documentMode || documentMode > 7),
                    hasEvent: function(event) {
                        if ("input" == event && 9 == msie) return !1;
                        if (isUndefined(eventSupport[event])) {
                            var divElm = document.createElement("div");
                            eventSupport[event] = "on" + event in divElm
                        }
                        return eventSupport[event]
                    },
                    csp: csp(),
                    vendorPrefix: vendorPrefix,
                    transitions: transitions,
                    animations: animations,
                    android: android,
                    msie: msie,
                    msieDocumentMode: documentMode
                }
            }]
        }

        function $TimeoutProvider() {
            this.$get = ["$rootScope", "$browser", "$q", "$exceptionHandler", function($rootScope, $browser, $q, $exceptionHandler) {
                function timeout(fn, delay, invokeApply) {
                    var timeoutId, deferred = $q.defer(),
                        promise = deferred.promise,
                        skipApply = isDefined(invokeApply) && !invokeApply;
                    return timeoutId = $browser.defer(function() {
                        try {
                            deferred.resolve(fn())
                        } catch (e) {
                            deferred.reject(e), $exceptionHandler(e)
                        } finally {
                            delete deferreds[promise.$$timeoutId]
                        }
                        skipApply || $rootScope.$apply()
                    }, delay), promise.$$timeoutId = timeoutId, deferreds[timeoutId] = deferred, promise
                }
                var deferreds = {};
                return timeout.cancel = function(promise) {
                    return promise && promise.$$timeoutId in deferreds ? (deferreds[promise.$$timeoutId].reject("canceled"), delete deferreds[promise.$$timeoutId], $browser.defer.cancel(promise.$$timeoutId)) : !1
                }, timeout
            }]
        }

        function urlResolve(url) {
            var href = url;
            return msie && (urlParsingNode.setAttribute("href", href), href = urlParsingNode.href), urlParsingNode.setAttribute("href", href), {
                href: urlParsingNode.href,
                protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
                host: urlParsingNode.host,
                search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
                hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
                hostname: urlParsingNode.hostname,
                port: urlParsingNode.port,
                pathname: "/" === urlParsingNode.pathname.charAt(0) ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
            }
        }

        function urlIsSameOrigin(requestUrl) {
            var parsed = isString(requestUrl) ? urlResolve(requestUrl) : requestUrl;
            return parsed.protocol === originUrl.protocol && parsed.host === originUrl.host
        }

        function $WindowProvider() {
            this.$get = valueFn(window)
        }

        function $FilterProvider($provide) {
            function register(name, factory) {
                if (isObject(name)) {
                    var filters = {};
                    return forEach(name, function(filter, key) {
                        filters[key] = register(key, filter)
                    }), filters
                }
                return $provide.factory(name + suffix, factory)
            }
            var suffix = "Filter";
            this.register = register, this.$get = ["$injector", function($injector) {
                return function(name) {
                    return $injector.get(name + suffix)
                }
            }], register("currency", currencyFilter), register("date", dateFilter), register("filter", filterFilter), register("json", jsonFilter), register("limitTo", limitToFilter), register("lowercase", lowercaseFilter), register("number", numberFilter), register("orderBy", orderByFilter), register("uppercase", uppercaseFilter)
        }

        function filterFilter() {
            return function(array, expression, comparator) {
                if (!isArray(array)) return array;
                var comparatorType = typeof comparator,
                    predicates = [];
                predicates.check = function(value) {
                    for (var j = 0; j < predicates.length; j++)
                        if (!predicates[j](value)) return !1;
                    return !0
                }, "function" !== comparatorType && (comparator = "boolean" === comparatorType && comparator ? function(obj, text) {
                    return angular.equals(obj, text)
                } : function(obj, text) {
                    if (obj && text && "object" == typeof obj && "object" == typeof text) {
                        for (var objKey in obj)
                            if ("$" !== objKey.charAt(0) && hasOwnProperty.call(obj, objKey) && comparator(obj[objKey], text[objKey])) return !0;
                        return !1
                    }
                    return text = ("" + text).toLowerCase(), ("" + obj).toLowerCase().indexOf(text) > -1
                });
                var search = function(obj, text) {
                    if ("string" == typeof text && "!" === text.charAt(0)) return !search(obj, text.substr(1));
                    switch (typeof obj) {
                        case "boolean":
                        case "number":
                        case "string":
                            return comparator(obj, text);
                        case "object":
                            switch (typeof text) {
                                case "object":
                                    return comparator(obj, text);
                                default:
                                    for (var objKey in obj)
                                        if ("$" !== objKey.charAt(0) && search(obj[objKey], text)) return !0
                            }
                            return !1;
                        case "array":
                            for (var i = 0; i < obj.length; i++)
                                if (search(obj[i], text)) return !0;
                            return !1;
                        default:
                            return !1
                    }
                };
                switch (typeof expression) {
                    case "boolean":
                    case "number":
                    case "string":
                        expression = {
                            $: expression
                        };
                    case "object":
                        for (var key in expression) ! function(path) {
                            "undefined" != typeof expression[path] && predicates.push(function(value) {
                                return search("$" == path ? value : value && value[path], expression[path])
                            })
                        }(key);
                        break;
                    case "function":
                        predicates.push(expression);
                        break;
                    default:
                        return array
                }
                for (var filtered = [], j = 0; j < array.length; j++) {
                    var value = array[j];
                    predicates.check(value) && filtered.push(value)
                }
                return filtered
            }
        }

        function currencyFilter($locale) {
            var formats = $locale.NUMBER_FORMATS;
            return function(amount, currencySymbol) {
                return isUndefined(currencySymbol) && (currencySymbol = formats.CURRENCY_SYM), formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, 2).replace(/\u00A4/g, currencySymbol)
            }
        }

        function numberFilter($locale) {
            var formats = $locale.NUMBER_FORMATS;
            return function(number, fractionSize) {
                return formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP, fractionSize)
            }
        }

        function formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {
            if (null == number || !isFinite(number) || isObject(number)) return "";
            var isNegative = 0 > number;
            number = Math.abs(number);
            var numStr = number + "",
                formatedText = "",
                parts = [],
                hasExponent = !1;
            if (-1 !== numStr.indexOf("e")) {
                var match = numStr.match(/([\d\.]+)e(-?)(\d+)/);
                match && "-" == match[2] && match[3] > fractionSize + 1 ? (numStr = "0", number = 0) : (formatedText = numStr, hasExponent = !0)
            }
            if (hasExponent) fractionSize > 0 && number > -1 && 1 > number && (formatedText = number.toFixed(fractionSize));
            else {
                var fractionLen = (numStr.split(DECIMAL_SEP)[1] || "").length;
                isUndefined(fractionSize) && (fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac)), number = +(Math.round(+(number.toString() + "e" + fractionSize)).toString() + "e" + -fractionSize), 0 === number && (isNegative = !1);
                var fraction = ("" + number).split(DECIMAL_SEP),
                    whole = fraction[0];
                fraction = fraction[1] || "";
                var i, pos = 0,
                    lgroup = pattern.lgSize,
                    group = pattern.gSize;
                if (whole.length >= lgroup + group)
                    for (pos = whole.length - lgroup, i = 0; pos > i; i++)(pos - i) % group === 0 && 0 !== i && (formatedText += groupSep), formatedText += whole.charAt(i);
                for (i = pos; i < whole.length; i++)(whole.length - i) % lgroup === 0 && 0 !== i && (formatedText += groupSep), formatedText += whole.charAt(i);
                for (; fraction.length < fractionSize;) fraction += "0";
                fractionSize && "0" !== fractionSize && (formatedText += decimalSep + fraction.substr(0, fractionSize))
            }
            return parts.push(isNegative ? pattern.negPre : pattern.posPre), parts.push(formatedText), parts.push(isNegative ? pattern.negSuf : pattern.posSuf), parts.join("")
        }

        function padNumber(num, digits, trim) {
            var neg = "";
            for (0 > num && (neg = "-", num = -num), num = "" + num; num.length < digits;) num = "0" + num;
            return trim && (num = num.substr(num.length - digits)), neg + num
        }

        function dateGetter(name, size, offset, trim) {
            return offset = offset || 0,
                function(date) {
                    var value = date["get" + name]();
                    return (offset > 0 || value > -offset) && (value += offset), 0 === value && -12 == offset && (value = 12), padNumber(value, size, trim)
                }
        }

        function dateStrGetter(name, shortForm) {
            return function(date, formats) {
                var value = date["get" + name](),
                    get = uppercase(shortForm ? "SHORT" + name : name);
                return formats[get][value]
            }
        }

        function timeZoneGetter(date) {
            var zone = -1 * date.getTimezoneOffset(),
                paddedZone = zone >= 0 ? "+" : "";
            return paddedZone += padNumber(Math[zone > 0 ? "floor" : "ceil"](zone / 60), 2) + padNumber(Math.abs(zone % 60), 2)
        }

        function ampmGetter(date, formats) {
            return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1]
        }

        function dateFilter($locale) {
            function jsonStringToDate(string) {
                var match;
                if (match = string.match(R_ISO8601_STR)) {
                    var date = new Date(0),
                        tzHour = 0,
                        tzMin = 0,
                        dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear,
                        timeSetter = match[8] ? date.setUTCHours : date.setHours;
                    match[9] && (tzHour = int(match[9] + match[10]), tzMin = int(match[9] + match[11])), dateSetter.call(date, int(match[1]), int(match[2]) - 1, int(match[3]));
                    var h = int(match[4] || 0) - tzHour,
                        m = int(match[5] || 0) - tzMin,
                        s = int(match[6] || 0),
                        ms = Math.round(1e3 * parseFloat("0." + (match[7] || 0)));
                    return timeSetter.call(date, h, m, s, ms), date
                }
                return string
            }
            var R_ISO8601_STR = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
            return function(date, format) {
                var fn, match, text = "",
                    parts = [];
                if (format = format || "mediumDate", format = $locale.DATETIME_FORMATS[format] || format, isString(date) && (date = NUMBER_STRING.test(date) ? int(date) : jsonStringToDate(date)), isNumber(date) && (date = new Date(date)), !isDate(date)) return date;
                for (; format;) match = DATE_FORMATS_SPLIT.exec(format), match ? (parts = concat(parts, match, 1), format = parts.pop()) : (parts.push(format), format = null);
                return forEach(parts, function(value) {
                    fn = DATE_FORMATS[value], text += fn ? fn(date, $locale.DATETIME_FORMATS) : value.replace(/(^'|'$)/g, "").replace(/''/g, "'")
                }), text
            }
        }

        function jsonFilter() {
            return function(object) {
                return toJson(object, !0)
            }
        }

        function limitToFilter() {
            return function(input, limit) {
                if (!isArray(input) && !isString(input)) return input;
                if (limit = 1 / 0 === Math.abs(Number(limit)) ? Number(limit) : int(limit), isString(input)) return limit ? limit >= 0 ? input.slice(0, limit) : input.slice(limit, input.length) : "";
                var i, n, out = [];
                for (limit > input.length ? limit = input.length : limit < -input.length && (limit = -input.length), limit > 0 ? (i = 0, n = limit) : (i = input.length + limit, n = input.length); n > i; i++) out.push(input[i]);
                return out
            }
        }

        function orderByFilter($parse) {
            return function(array, sortPredicate, reverseOrder) {
                function comparator(o1, o2) {
                    for (var i = 0; i < sortPredicate.length; i++) {
                        var comp = sortPredicate[i](o1, o2);
                        if (0 !== comp) return comp
                    }
                    return 0
                }

                function reverseComparator(comp, descending) {
                    return toBoolean(descending) ? function(a, b) {
                        return comp(b, a)
                    } : comp
                }

                function compare(v1, v2) {
                    var t1 = typeof v1,
                        t2 = typeof v2;
                    return t1 == t2 ? (isDate(v1) && isDate(v2) && (v1 = v1.valueOf(), v2 = v2.valueOf()), "string" == t1 && (v1 = v1.toLowerCase(), v2 = v2.toLowerCase()), v1 === v2 ? 0 : v2 > v1 ? -1 : 1) : t2 > t1 ? -1 : 1
                }
                return isArrayLike(array) ? (sortPredicate = isArray(sortPredicate) ? sortPredicate : [sortPredicate], 0 === sortPredicate.length && (sortPredicate = ["+"]), sortPredicate = map(sortPredicate, function(predicate) {
                    var descending = !1,
                        get = predicate || identity;
                    if (isString(predicate)) {
                        if (("+" == predicate.charAt(0) || "-" == predicate.charAt(0)) && (descending = "-" == predicate.charAt(0), predicate = predicate.substring(1)), "" === predicate) return reverseComparator(function(a, b) {
                            return compare(a, b)
                        }, descending);
                        if (get = $parse(predicate), get.constant) {
                            var key = get();
                            return reverseComparator(function(a, b) {
                                return compare(a[key], b[key])
                            }, descending)
                        }
                    }
                    return reverseComparator(function(a, b) {
                        return compare(get(a), get(b))
                    }, descending)
                }), slice.call(array).sort(reverseComparator(comparator, reverseOrder))) : array
            }
        }

        function ngDirective(directive) {
            return isFunction(directive) && (directive = {
                link: directive
            }), directive.restrict = directive.restrict || "AC", valueFn(directive)
        }

        function FormController(element, attrs, $scope, $animate) {
            function toggleValidCss(isValid, validationErrorKey) {
                validationErrorKey = validationErrorKey ? "-" + snake_case(validationErrorKey, "-") : "", $animate.setClass(element, (isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey, (isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey)
            }
            var form = this,
                parentForm = element.parent().controller("form") || nullFormCtrl,
                invalidCount = 0,
                errors = form.$error = {},
                controls = [];
            form.$name = attrs.name || attrs.ngForm, form.$dirty = !1, form.$pristine = !0, form.$valid = !0, form.$invalid = !1, parentForm.$addControl(form), element.addClass(PRISTINE_CLASS), toggleValidCss(!0), form.$addControl = function(control) {
                assertNotHasOwnProperty(control.$name, "input"), controls.push(control), control.$name && (form[control.$name] = control)
            }, form.$removeControl = function(control) {
                control.$name && form[control.$name] === control && delete form[control.$name], forEach(errors, function(queue, validationToken) {
                    form.$setValidity(validationToken, !0, control)
                }), arrayRemove(controls, control)
            }, form.$setValidity = function(validationToken, isValid, control) {
                var queue = errors[validationToken];
                if (isValid) queue && (arrayRemove(queue, control), queue.length || (invalidCount--, invalidCount || (toggleValidCss(isValid), form.$valid = !0, form.$invalid = !1), errors[validationToken] = !1, toggleValidCss(!0, validationToken), parentForm.$setValidity(validationToken, !0, form)));
                else {
                    if (invalidCount || toggleValidCss(isValid), queue) {
                        if (includes(queue, control)) return
                    } else errors[validationToken] = queue = [], invalidCount++, toggleValidCss(!1, validationToken), parentForm.$setValidity(validationToken, !1, form);
                    queue.push(control), form.$valid = !1, form.$invalid = !0
                }
            }, form.$setDirty = function() {
                $animate.removeClass(element, PRISTINE_CLASS), $animate.addClass(element, DIRTY_CLASS), form.$dirty = !0, form.$pristine = !1, parentForm.$setDirty()
            }, form.$setPristine = function() {
                $animate.removeClass(element, DIRTY_CLASS), $animate.addClass(element, PRISTINE_CLASS), form.$dirty = !1, form.$pristine = !0, forEach(controls, function(control) {
                    control.$setPristine()
                })
            }
        }

        function validate(ctrl, validatorName, validity, value) {
            return ctrl.$setValidity(validatorName, validity), validity ? value : undefined
        }

        function testFlags(validity, flags) {
            var i, flag;
            if (flags)
                for (i = 0; i < flags.length; ++i)
                    if (flag = flags[i], validity[flag]) return !0;
            return !1
        }

        function addNativeHtml5Validators(ctrl, validatorName, badFlags, ignoreFlags, validity) {
            if (isObject(validity)) {
                ctrl.$$hasNativeValidators = !0;
                var validator = function(value) {
                    return ctrl.$error[validatorName] || testFlags(validity, ignoreFlags) || !testFlags(validity, badFlags) ? value : void ctrl.$setValidity(validatorName, !1)
                };
                ctrl.$parsers.push(validator)
            }
        }

        function textInputType(scope, element, attr, ctrl, $sniffer, $browser) {
            var validity = element.prop(VALIDITY_STATE_PROPERTY),
                placeholder = element[0].placeholder,
                noevent = {},
                type = lowercase(element[0].type);
            if (ctrl.$$validityState = validity, !$sniffer.android) {
                var composing = !1;
                element.on("compositionstart", function() {
                    composing = !0
                }), element.on("compositionend", function() {
                    composing = !1, listener()
                })
            }
            var listener = function(ev) {
                if (!composing) {
                    var value = element.val();
                    if (msie && "input" === (ev || noevent).type && element[0].placeholder !== placeholder) return void(placeholder = element[0].placeholder);
                    "password" !== type && toBoolean(attr.ngTrim || "T") && (value = trim(value));
                    var revalidate = validity && ctrl.$$hasNativeValidators;
                    (ctrl.$viewValue !== value || "" === value && revalidate) && (scope.$root.$$phase ? ctrl.$setViewValue(value) : scope.$apply(function() {
                        ctrl.$setViewValue(value)
                    }))
                }
            };
            if ($sniffer.hasEvent("input")) element.on("input", listener);
            else {
                var timeout, deferListener = function() {
                    timeout || (timeout = $browser.defer(function() {
                        listener(), timeout = null
                    }))
                };
                element.on("keydown", function(event) {
                    var key = event.keyCode;
                    91 === key || key > 15 && 19 > key || key >= 37 && 40 >= key || deferListener()
                }), $sniffer.hasEvent("paste") && element.on("paste cut", deferListener)
            }
            element.on("change", listener), ctrl.$render = function() {
                element.val(ctrl.$isEmpty(ctrl.$viewValue) ? "" : ctrl.$viewValue)
            };
            var patternValidator, match, pattern = attr.ngPattern;
            if (pattern) {
                var validateRegex = function(regexp, value) {
                    return validate(ctrl, "pattern", ctrl.$isEmpty(value) || regexp.test(value), value)
                };
                match = pattern.match(/^\/(.*)\/([gim]*)$/), match ? (pattern = new RegExp(match[1], match[2]), patternValidator = function(value) {
                    return validateRegex(pattern, value)
                }) : patternValidator = function(value) {
                    var patternObj = scope.$eval(pattern);
                    if (!patternObj || !patternObj.test) throw minErr("ngPattern")("noregexp", "Expected {0} to be a RegExp but was {1}. Element: {2}", pattern, patternObj, startingTag(element));
                    return validateRegex(patternObj, value)
                }, ctrl.$formatters.push(patternValidator), ctrl.$parsers.push(patternValidator)
            }
            if (attr.ngMinlength) {
                var minlength = int(attr.ngMinlength),
                    minLengthValidator = function(value) {
                        return validate(ctrl, "minlength", ctrl.$isEmpty(value) || value.length >= minlength, value)
                    };
                ctrl.$parsers.push(minLengthValidator), ctrl.$formatters.push(minLengthValidator)
            }
            if (attr.ngMaxlength) {
                var maxlength = int(attr.ngMaxlength),
                    maxLengthValidator = function(value) {
                        return validate(ctrl, "maxlength", ctrl.$isEmpty(value) || value.length <= maxlength, value)
                    };
                ctrl.$parsers.push(maxLengthValidator), ctrl.$formatters.push(maxLengthValidator)
            }
        }

        function numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {
            if (textInputType(scope, element, attr, ctrl, $sniffer, $browser), ctrl.$parsers.push(function(value) {
                    var empty = ctrl.$isEmpty(value);
                    return empty || NUMBER_REGEXP.test(value) ? (ctrl.$setValidity("number", !0), "" === value ? null : empty ? value : parseFloat(value)) : (ctrl.$setValidity("number", !1), undefined)
                }), addNativeHtml5Validators(ctrl, "number", numberBadFlags, null, ctrl.$$validityState), ctrl.$formatters.push(function(value) {
                    return ctrl.$isEmpty(value) ? "" : "" + value
                }), attr.min) {
                var minValidator = function(value) {
                    var min = parseFloat(attr.min);
                    return validate(ctrl, "min", ctrl.$isEmpty(value) || value >= min, value)
                };
                ctrl.$parsers.push(minValidator), ctrl.$formatters.push(minValidator)
            }
            if (attr.max) {
                var maxValidator = function(value) {
                    var max = parseFloat(attr.max);
                    return validate(ctrl, "max", ctrl.$isEmpty(value) || max >= value, value)
                };
                ctrl.$parsers.push(maxValidator), ctrl.$formatters.push(maxValidator)
            }
            ctrl.$formatters.push(function(value) {
                return validate(ctrl, "number", ctrl.$isEmpty(value) || isNumber(value), value)
            })
        }

        function urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {
            textInputType(scope, element, attr, ctrl, $sniffer, $browser);
            var urlValidator = function(value) {
                return validate(ctrl, "url", ctrl.$isEmpty(value) || URL_REGEXP.test(value), value)
            };
            ctrl.$formatters.push(urlValidator), ctrl.$parsers.push(urlValidator)
        }

        function emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {
            textInputType(scope, element, attr, ctrl, $sniffer, $browser);
            var emailValidator = function(value) {
                return validate(ctrl, "email", ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value), value)
            };
            ctrl.$formatters.push(emailValidator), ctrl.$parsers.push(emailValidator)
        }

        function radioInputType(scope, element, attr, ctrl) {
            isUndefined(attr.name) && element.attr("name", nextUid()), element.on("click", function() {
                element[0].checked && scope.$apply(function() {
                    ctrl.$setViewValue(attr.value)
                })
            }), ctrl.$render = function() {
                var value = attr.value;
                element[0].checked = value == ctrl.$viewValue
            }, attr.$observe("value", ctrl.$render)
        }

        function checkboxInputType(scope, element, attr, ctrl) {
            var trueValue = attr.ngTrueValue,
                falseValue = attr.ngFalseValue;
            isString(trueValue) || (trueValue = !0), isString(falseValue) || (falseValue = !1), element.on("click", function() {
                scope.$apply(function() {
                    ctrl.$setViewValue(element[0].checked)
                })
            }), ctrl.$render = function() {
                element[0].checked = ctrl.$viewValue
            }, ctrl.$isEmpty = function(value) {
                return value !== trueValue
            }, ctrl.$formatters.push(function(value) {
                return value === trueValue
            }), ctrl.$parsers.push(function(value) {
                return value ? trueValue : falseValue
            })
        }

        function classDirective(name, selector) {
            return name = "ngClass" + name, ["$animate", function($animate) {
                function arrayDifference(tokens1, tokens2) {
                    var values = [];
                    outer: for (var i = 0; i < tokens1.length; i++) {
                        for (var token = tokens1[i], j = 0; j < tokens2.length; j++)
                            if (token == tokens2[j]) continue outer;
                        values.push(token)
                    }
                    return values
                }

                function arrayClasses(classVal) {
                    if (isArray(classVal)) return classVal;
                    if (isString(classVal)) return classVal.split(" ");
                    if (isObject(classVal)) {
                        var classes = [];
                        return forEach(classVal, function(v, k) {
                            v && (classes = classes.concat(k.split(" ")))
                        }), classes
                    }
                    return classVal
                }
                return {
                    restrict: "AC",
                    link: function(scope, element, attr) {
                        function addClasses(classes) {
                            var newClasses = digestClassCounts(classes, 1);
                            attr.$addClass(newClasses)
                        }

                        function removeClasses(classes) {
                            var newClasses = digestClassCounts(classes, -1);
                            attr.$removeClass(newClasses)
                        }

                        function digestClassCounts(classes, count) {
                            var classCounts = element.data("$classCounts") || {},
                                classesToUpdate = [];
                            return forEach(classes, function(className) {
                                (count > 0 || classCounts[className]) && (classCounts[className] = (classCounts[className] || 0) + count, classCounts[className] === +(count > 0) && classesToUpdate.push(className))
                            }), element.data("$classCounts", classCounts), classesToUpdate.join(" ")
                        }

                        function updateClasses(oldClasses, newClasses) {
                            var toAdd = arrayDifference(newClasses, oldClasses),
                                toRemove = arrayDifference(oldClasses, newClasses);
                            toRemove = digestClassCounts(toRemove, -1), toAdd = digestClassCounts(toAdd, 1), 0 === toAdd.length ? $animate.removeClass(element, toRemove) : 0 === toRemove.length ? $animate.addClass(element, toAdd) : $animate.setClass(element, toAdd, toRemove)
                        }

                        function ngClassWatchAction(newVal) {
                            if (selector === !0 || scope.$index % 2 === selector) {
                                var newClasses = arrayClasses(newVal || []);
                                if (oldVal) {
                                    if (!equals(newVal, oldVal)) {
                                        var oldClasses = arrayClasses(oldVal);
                                        updateClasses(oldClasses, newClasses)
                                    }
                                } else addClasses(newClasses)
                            }
                            oldVal = shallowCopy(newVal)
                        }
                        var oldVal;
                        scope.$watch(attr[name], ngClassWatchAction, !0), attr.$observe("class", function() {
                            ngClassWatchAction(scope.$eval(attr[name]))
                        }), "ngClass" !== name && scope.$watch("$index", function($index, old$index) {
                            var mod = 1 & $index;
                            if (mod !== (1 & old$index)) {
                                var classes = arrayClasses(scope.$eval(attr[name]));
                                mod === selector ? addClasses(classes) : removeClasses(classes)
                            }
                        })
                    }
                }
            }]
        }
        var VALIDITY_STATE_PROPERTY = "validity",
            lowercase = function(string) {
                return isString(string) ? string.toLowerCase() : string
            },
            hasOwnProperty = Object.prototype.hasOwnProperty,
            uppercase = function(string) {
                return isString(string) ? string.toUpperCase() : string
            },
            manualLowercase = function(s) {
                return isString(s) ? s.replace(/[A-Z]/g, function(ch) {
                    return String.fromCharCode(32 | ch.charCodeAt(0))
                }) : s
            },
            manualUppercase = function(s) {
                return isString(s) ? s.replace(/[a-z]/g, function(ch) {
                    return String.fromCharCode(-33 & ch.charCodeAt(0))
                }) : s
            };
        "i" !== "I".toLowerCase() && (lowercase = manualLowercase, uppercase = manualUppercase);
        var msie, jqLite, jQuery, angularModule, nodeName_, slice = [].slice,
            push = [].push,
            toString = Object.prototype.toString,
            ngMinErr = minErr("ng"),
            angular = window.angular || (window.angular = {}),
            uid = ["0", "0", "0"];
        msie = int((/msie (\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]), isNaN(msie) && (msie = int((/trident\/.*; rv:(\d+)/.exec(lowercase(navigator.userAgent)) || [])[1])), noop.$inject = [], identity.$inject = [];
        var isArray = function() {
                return isFunction(Array.isArray) ? Array.isArray : function(value) {
                    return "[object Array]" === toString.call(value)
                }
            }(),
            trim = function() {
                return String.prototype.trim ? function(value) {
                    return isString(value) ? value.trim() : value
                } : function(value) {
                    return isString(value) ? value.replace(/^\s\s*/, "").replace(/\s\s*$/, "") : value
                }
            }();
        nodeName_ = 9 > msie ? function(element) {
            return element = element.nodeName ? element : element[0], element.scopeName && "HTML" != element.scopeName ? uppercase(element.scopeName + ":" + element.nodeName) : element.nodeName
        } : function(element) {
            return element.nodeName ? element.nodeName : element[0].nodeName
        };
        var csp = function() {
                if (isDefined(csp.isActive_)) return csp.isActive_;
                var active = !(!document.querySelector("[ng-csp]") && !document.querySelector("[data-ng-csp]"));
                if (!active) try {
                    new Function("")
                } catch (e) {
                    active = !0
                }
                return csp.isActive_ = active
            },
            SNAKE_CASE_REGEXP = /[A-Z]/g,
            version = {
                full: "1.2.28",
                major: 1,
                minor: 2,
                dot: 28,
                codeName: "finnish-disembarkation"
            };
        JQLite.expando = "ng339";
        var jqCache = JQLite.cache = {},
            jqId = 1,
            addEventListenerFn = window.document.addEventListener ? function(element, type, fn) {
                element.addEventListener(type, fn, !1)
            } : function(element, type, fn) {
                element.attachEvent("on" + type, fn)
            },
            removeEventListenerFn = window.document.removeEventListener ? function(element, type, fn) {
                element.removeEventListener(type, fn, !1)
            } : function(element, type, fn) {
                element.detachEvent("on" + type, fn)
            },
            SPECIAL_CHARS_REGEXP = (JQLite._data = function(node) {
                return this.cache[node[this.expando]] || {}
            }, /([\:\-\_]+(.))/g),
            MOZ_HACK_REGEXP = /^moz([A-Z])/,
            jqLiteMinErr = minErr("jqLite"),
            SINGLE_TAG_REGEXP = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
            HTML_REGEXP = /<|&#?\w+;/,
            TAG_NAME_REGEXP = /<([\w:]+)/,
            XHTML_TAG_REGEXP = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
            wrapMap = {
                option: [1, '<select multiple="multiple">', "</select>"],
                thead: [1, "<table>", "</table>"],
                col: [2, "<table><colgroup>", "</colgroup></table>"],
                tr: [2, "<table><tbody>", "</tbody></table>"],
                td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                _default: [0, "", ""]
            };
        wrapMap.optgroup = wrapMap.option, wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead, wrapMap.th = wrapMap.td;
        var JQLitePrototype = JQLite.prototype = {
                ready: function(fn) {
                    function trigger() {
                        fired || (fired = !0, fn())
                    }
                    var fired = !1;
                    "complete" === document.readyState ? setTimeout(trigger) : (this.on("DOMContentLoaded", trigger), JQLite(window).on("load", trigger))
                },
                toString: function() {
                    var value = [];
                    return forEach(this, function(e) {
                        value.push("" + e)
                    }), "[" + value.join(", ") + "]"
                },
                eq: function(index) {
                    return jqLite(index >= 0 ? this[index] : this[this.length + index])
                },
                length: 0,
                push: push,
                sort: [].sort,
                splice: [].splice
            },
            BOOLEAN_ATTR = {};
        forEach("multiple,selected,checked,disabled,readOnly,required,open".split(","), function(value) {
            BOOLEAN_ATTR[lowercase(value)] = value
        });
        var BOOLEAN_ELEMENTS = {};
        forEach("input,select,option,textarea,button,form,details".split(","), function(value) {
            BOOLEAN_ELEMENTS[uppercase(value)] = !0
        }), forEach({
            data: jqLiteData,
            removeData: jqLiteRemoveData
        }, function(fn, name) {
            JQLite[name] = fn
        }), forEach({
            data: jqLiteData,
            inheritedData: jqLiteInheritedData,
            scope: function(element) {
                return jqLite.data(element, "$scope") || jqLiteInheritedData(element.parentNode || element, ["$isolateScope", "$scope"])
            },
            isolateScope: function(element) {
                return jqLite.data(element, "$isolateScope") || jqLite.data(element, "$isolateScopeNoTemplate")
            },
            controller: jqLiteController,
            injector: function(element) {
                return jqLiteInheritedData(element, "$injector")
            },
            removeAttr: function(element, name) {
                element.removeAttribute(name)
            },
            hasClass: jqLiteHasClass,
            css: function(element, name, value) {
                if (name = camelCase(name), !isDefined(value)) {
                    var val;
                    return 8 >= msie && (val = element.currentStyle && element.currentStyle[name], "" === val && (val = "auto")), val = val || element.style[name], 8 >= msie && (val = "" === val ? undefined : val), val
                }
                element.style[name] = value
            },
            attr: function(element, name, value) {
                var lowercasedName = lowercase(name);
                if (BOOLEAN_ATTR[lowercasedName]) {
                    if (!isDefined(value)) return element[name] || (element.attributes.getNamedItem(name) || noop).specified ? lowercasedName : undefined;
                    value ? (element[name] = !0, element.setAttribute(name, lowercasedName)) : (element[name] = !1, element.removeAttribute(lowercasedName))
                } else if (isDefined(value)) element.setAttribute(name, value);
                else if (element.getAttribute) {
                    var ret = element.getAttribute(name, 2);
                    return null === ret ? undefined : ret
                }
            },
            prop: function(element, name, value) {
                return isDefined(value) ? void(element[name] = value) : element[name]
            },
            text: function() {
                function getText(element, value) {
                    var textProp = NODE_TYPE_TEXT_PROPERTY[element.nodeType];
                    return isUndefined(value) ? textProp ? element[textProp] : "" : void(element[textProp] = value)
                }
                var NODE_TYPE_TEXT_PROPERTY = [];
                return 9 > msie ? (NODE_TYPE_TEXT_PROPERTY[1] = "innerText", NODE_TYPE_TEXT_PROPERTY[3] = "nodeValue") : NODE_TYPE_TEXT_PROPERTY[1] = NODE_TYPE_TEXT_PROPERTY[3] = "textContent", getText.$dv = "", getText
            }(),
            val: function(element, value) {
                if (isUndefined(value)) {
                    if ("SELECT" === nodeName_(element) && element.multiple) {
                        var result = [];
                        return forEach(element.options, function(option) {
                            option.selected && result.push(option.value || option.text)
                        }), 0 === result.length ? null : result
                    }
                    return element.value
                }
                element.value = value
            },
            html: function(element, value) {
                if (isUndefined(value)) return element.innerHTML;
                for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) jqLiteDealoc(childNodes[i]);
                element.innerHTML = value
            },
            empty: jqLiteEmpty
        }, function(fn, name) {
            JQLite.prototype[name] = function(arg1, arg2) {
                var i, key, nodeCount = this.length;
                if (fn !== jqLiteEmpty && (2 == fn.length && fn !== jqLiteHasClass && fn !== jqLiteController ? arg1 : arg2) === undefined) {
                    if (isObject(arg1)) {
                        for (i = 0; nodeCount > i; i++)
                            if (fn === jqLiteData) fn(this[i], arg1);
                            else
                                for (key in arg1) fn(this[i], key, arg1[key]);
                        return this
                    }
                    for (var value = fn.$dv, jj = value === undefined ? Math.min(nodeCount, 1) : nodeCount, j = 0; jj > j; j++) {
                        var nodeValue = fn(this[j], arg1, arg2);
                        value = value ? value + nodeValue : nodeValue
                    }
                    return value
                }
                for (i = 0; nodeCount > i; i++) fn(this[i], arg1, arg2);
                return this
            }
        }), forEach({
            removeData: jqLiteRemoveData,
            dealoc: jqLiteDealoc,
            on: function onFn(element, type, fn, unsupported) {
                if (isDefined(unsupported)) throw jqLiteMinErr("onargs", "jqLite#on() does not support the `selector` or `eventData` parameters");
                var events = jqLiteExpandoStore(element, "events"),
                    handle = jqLiteExpandoStore(element, "handle");
                events || jqLiteExpandoStore(element, "events", events = {}), handle || jqLiteExpandoStore(element, "handle", handle = createEventHandler(element, events)), forEach(type.split(" "), function(type) {
                    var eventFns = events[type];
                    if (!eventFns) {
                        if ("mouseenter" == type || "mouseleave" == type) {
                            var contains = document.body.contains || document.body.compareDocumentPosition ? function(a, b) {
                                var adown = 9 === a.nodeType ? a.documentElement : a,
                                    bup = b && b.parentNode;
                                return a === bup || !(!bup || 1 !== bup.nodeType || !(adown.contains ? adown.contains(bup) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(bup)))
                            } : function(a, b) {
                                if (b)
                                    for (; b = b.parentNode;)
                                        if (b === a) return !0;
                                return !1
                            };
                            events[type] = [];
                            var eventmap = {
                                mouseleave: "mouseout",
                                mouseenter: "mouseover"
                            };
                            onFn(element, eventmap[type], function(event) {
                                var target = this,
                                    related = event.relatedTarget;
                                (!related || related !== target && !contains(target, related)) && handle(event, type)
                            })
                        } else addEventListenerFn(element, type, handle), events[type] = [];
                        eventFns = events[type]
                    }
                    eventFns.push(fn)
                })
            },
            off: jqLiteOff,
            one: function(element, type, fn) {
                element = jqLite(element), element.on(type, function onFn() {
                    element.off(type, fn), element.off(type, onFn)
                }), element.on(type, fn)
            },
            replaceWith: function(element, replaceNode) {
                var index, parent = element.parentNode;
                jqLiteDealoc(element), forEach(new JQLite(replaceNode), function(node) {
                    index ? parent.insertBefore(node, index.nextSibling) : parent.replaceChild(node, element), index = node
                })
            },
            children: function(element) {
                var children = [];
                return forEach(element.childNodes, function(element) {
                    1 === element.nodeType && children.push(element)
                }), children
            },
            contents: function(element) {
                return element.contentDocument || element.childNodes || []
            },
            append: function(element, node) {
                forEach(new JQLite(node), function(child) {
                    (1 === element.nodeType || 11 === element.nodeType) && element.appendChild(child)
                })
            },
            prepend: function(element, node) {
                if (1 === element.nodeType) {
                    var index = element.firstChild;
                    forEach(new JQLite(node), function(child) {
                        element.insertBefore(child, index)
                    })
                }
            },
            wrap: function(element, wrapNode) {
                wrapNode = jqLite(wrapNode)[0];
                var parent = element.parentNode;
                parent && parent.replaceChild(wrapNode, element), wrapNode.appendChild(element)
            },
            remove: function(element) {
                jqLiteDealoc(element);
                var parent = element.parentNode;
                parent && parent.removeChild(element)
            },
            after: function(element, newElement) {
                var index = element,
                    parent = element.parentNode;
                forEach(new JQLite(newElement), function(node) {
                    parent.insertBefore(node, index.nextSibling), index = node
                })
            },
            addClass: jqLiteAddClass,
            removeClass: jqLiteRemoveClass,
            toggleClass: function(element, selector, condition) {
                selector && forEach(selector.split(" "), function(className) {
                    var classCondition = condition;
                    isUndefined(classCondition) && (classCondition = !jqLiteHasClass(element, className)), (classCondition ? jqLiteAddClass : jqLiteRemoveClass)(element, className)
                })
            },
            parent: function(element) {
                var parent = element.parentNode;
                return parent && 11 !== parent.nodeType ? parent : null
            },
            next: function(element) {
                if (element.nextElementSibling) return element.nextElementSibling;
                for (var elm = element.nextSibling; null != elm && 1 !== elm.nodeType;) elm = elm.nextSibling;
                return elm
            },
            find: function(element, selector) {
                return element.getElementsByTagName ? element.getElementsByTagName(selector) : []
            },
            clone: jqLiteClone,
            triggerHandler: function(element, event, extraParameters) {
                var dummyEvent, eventFnsCopy, handlerArgs, eventName = event.type || event,
                    eventFns = (jqLiteExpandoStore(element, "events") || {})[eventName];
                eventFns && (dummyEvent = {
                    preventDefault: function() {
                        this.defaultPrevented = !0
                    },
                    isDefaultPrevented: function() {
                        return this.defaultPrevented === !0
                    },
                    stopPropagation: noop,
                    type: eventName,
                    target: element
                }, event.type && (dummyEvent = extend(dummyEvent, event)), eventFnsCopy = shallowCopy(eventFns), handlerArgs = extraParameters ? [dummyEvent].concat(extraParameters) : [dummyEvent], forEach(eventFnsCopy, function(fn) {
                    fn.apply(element, handlerArgs)
                }))
            }
        }, function(fn, name) {
            JQLite.prototype[name] = function(arg1, arg2, arg3) {
                for (var value, i = 0; i < this.length; i++) isUndefined(value) ? (value = fn(this[i], arg1, arg2, arg3), isDefined(value) && (value = jqLite(value))) : jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));
                return isDefined(value) ? value : this
            }, JQLite.prototype.bind = JQLite.prototype.on, JQLite.prototype.unbind = JQLite.prototype.off
        }), HashMap.prototype = {
            put: function(key, value) {
                this[hashKey(key, this.nextUid)] = value
            },
            get: function(key) {
                return this[hashKey(key, this.nextUid)]
            },
            remove: function(key) {
                var value = this[key = hashKey(key, this.nextUid)];
                return delete this[key], value
            }
        };
        var FN_ARGS = /^function\s*[^\(]*\(\s*([^\)]*)\)/m,
            FN_ARG_SPLIT = /,/,
            FN_ARG = /^\s*(_?)(\S+?)\1\s*$/,
            STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,
            $injectorMinErr = minErr("$injector"),
            $animateMinErr = minErr("$animate"),
            $AnimateProvider = ["$provide", function($provide) {
                this.$$selectors = {}, this.register = function(name, factory) {
                    var key = name + "-animation";
                    if (name && "." != name.charAt(0)) throw $animateMinErr("notcsel", "Expecting class selector starting with '.' got '{0}'.", name);
                    this.$$selectors[name.substr(1)] = key, $provide.factory(key, factory)
                }, this.classNameFilter = function(expression) {
                    return 1 === arguments.length && (this.$$classNameFilter = expression instanceof RegExp ? expression : null), this.$$classNameFilter
                }, this.$get = ["$timeout", "$$asyncCallback", function($timeout, $$asyncCallback) {
                    function async(fn) {
                        fn && $$asyncCallback(fn)
                    }
                    return {
                        enter: function(element, parent, after, done) {
                            after ? after.after(element) : (parent && parent[0] || (parent = after.parent()), parent.append(element)), async(done)
                        },
                        leave: function(element, done) {
                            element.remove(), async(done)
                        },
                        move: function(element, parent, after, done) {
                            this.enter(element, parent, after, done)
                        },
                        addClass: function(element, className, done) {
                            className = isString(className) ? className : isArray(className) ? className.join(" ") : "", forEach(element, function(element) {
                                jqLiteAddClass(element, className)
                            }), async(done)
                        },
                        removeClass: function(element, className, done) {
                            className = isString(className) ? className : isArray(className) ? className.join(" ") : "", forEach(element, function(element) {
                                jqLiteRemoveClass(element, className)
                            }), async(done)
                        },
                        setClass: function(element, add, remove, done) {
                            forEach(element, function(element) {
                                jqLiteAddClass(element, add), jqLiteRemoveClass(element, remove)
                            }), async(done)
                        },
                        enabled: noop
                    }
                }]
            }],
            $compileMinErr = minErr("$compile");
        $CompileProvider.$inject = ["$provide", "$$sanitizeUriProvider"];
        var PREFIX_REGEXP = /^(x[\:\-_]|data[\:\-_])/i,
            $interpolateMinErr = minErr("$interpolate"),
            PATH_MATCH = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/,
            DEFAULT_PORTS = {
                http: 80,
                https: 443,
                ftp: 21
            },
            $locationMinErr = minErr("$location");
        LocationHashbangInHtml5Url.prototype = LocationHashbangUrl.prototype = LocationHtml5Url.prototype = {
            $$html5: !1,
            $$replace: !1,
            absUrl: locationGetter("$$absUrl"),
            url: function(url) {
                if (isUndefined(url)) return this.$$url;
                var match = PATH_MATCH.exec(url);
                return match[1] && this.path(decodeURIComponent(match[1])), (match[2] || match[1]) && this.search(match[3] || ""), this.hash(match[5] || ""), this
            },
            protocol: locationGetter("$$protocol"),
            host: locationGetter("$$host"),
            port: locationGetter("$$port"),
            path: locationGetterSetter("$$path", function(path) {
                return path = null !== path ? path.toString() : "", "/" == path.charAt(0) ? path : "/" + path
            }),
            search: function(search, paramValue) {
                switch (arguments.length) {
                    case 0:
                        return this.$$search;
                    case 1:
                        if (isString(search) || isNumber(search)) search = search.toString(), this.$$search = parseKeyValue(search);
                        else {
                            if (!isObject(search)) throw $locationMinErr("isrcharg", "The first argument of the `$location#search()` call must be a string or an object.");
                            forEach(search, function(value, key) {
                                null == value && delete search[key]
                            }), this.$$search = search
                        }
                        break;
                    default:
                        isUndefined(paramValue) || null === paramValue ? delete this.$$search[search] : this.$$search[search] = paramValue
                }
                return this.$$compose(), this
            },
            hash: locationGetterSetter("$$hash", function(hash) {
                return null !== hash ? hash.toString() : ""
            }),
            replace: function() {
                return this.$$replace = !0, this
            }
        };
        var promiseWarning, $parseMinErr = minErr("$parse"),
            promiseWarningCache = {},
            CALL = Function.prototype.call,
            APPLY = Function.prototype.apply,
            BIND = Function.prototype.bind,
            OPERATORS = {
                "null": function() {
                    return null
                },
                "true": function() {
                    return !0
                },
                "false": function() {
                    return !1
                },
                undefined: noop,
                "+": function(self, locals, a, b) {
                    return a = a(self, locals), b = b(self, locals), isDefined(a) ? isDefined(b) ? a + b : a : isDefined(b) ? b : undefined
                },
                "-": function(self, locals, a, b) {
                    return a = a(self, locals), b = b(self, locals), (isDefined(a) ? a : 0) - (isDefined(b) ? b : 0)
                },
                "*": function(self, locals, a, b) {
                    return a(self, locals) * b(self, locals)
                },
                "/": function(self, locals, a, b) {
                    return a(self, locals) / b(self, locals)
                },
                "%": function(self, locals, a, b) {
                    return a(self, locals) % b(self, locals)
                },
                "^": function(self, locals, a, b) {
                    return a(self, locals) ^ b(self, locals)
                },
                "=": noop,
                "===": function(self, locals, a, b) {
                    return a(self, locals) === b(self, locals)
                },
                "!==": function(self, locals, a, b) {
                    return a(self, locals) !== b(self, locals)
                },
                "==": function(self, locals, a, b) {
                    return a(self, locals) == b(self, locals)
                },
                "!=": function(self, locals, a, b) {
                    return a(self, locals) != b(self, locals)
                },
                "<": function(self, locals, a, b) {
                    return a(self, locals) < b(self, locals)
                },
                ">": function(self, locals, a, b) {
                    return a(self, locals) > b(self, locals)
                },
                "<=": function(self, locals, a, b) {
                    return a(self, locals) <= b(self, locals)
                },
                ">=": function(self, locals, a, b) {
                    return a(self, locals) >= b(self, locals)
                },
                "&&": function(self, locals, a, b) {
                    return a(self, locals) && b(self, locals)
                },
                "||": function(self, locals, a, b) {
                    return a(self, locals) || b(self, locals)
                },
                "&": function(self, locals, a, b) {
                    return a(self, locals) & b(self, locals)
                },
                "|": function(self, locals, a, b) {
                    return b(self, locals)(self, locals, a(self, locals))
                },
                "!": function(self, locals, a) {
                    return !a(self, locals)
                }
            },
            ESCAPE = {
                n: "\n",
                f: "\f",
                r: "\r",
                t: "	",
                v: "",
                "'": "'",
                '"': '"'
            },
            Lexer = function(options) {
                this.options = options
            };
        Lexer.prototype = {
            constructor: Lexer,
            lex: function(text) {
                for (this.text = text, this.index = 0, this.ch = undefined, this.lastCh = ":", this.tokens = []; this.index < this.text.length;) {
                    if (this.ch = this.text.charAt(this.index), this.is("\"'")) this.readString(this.ch);
                    else if (this.isNumber(this.ch) || this.is(".") && this.isNumber(this.peek())) this.readNumber();
                    else if (this.isIdent(this.ch)) this.readIdent();
                    else if (this.is("(){}[].,;:?")) this.tokens.push({
                        index: this.index,
                        text: this.ch
                    }), this.index++;
                    else {
                        if (this.isWhitespace(this.ch)) {
                            this.index++;
                            continue
                        }
                        var ch2 = this.ch + this.peek(),
                            ch3 = ch2 + this.peek(2),
                            fn = OPERATORS[this.ch],
                            fn2 = OPERATORS[ch2],
                            fn3 = OPERATORS[ch3];
                        fn3 ? (this.tokens.push({
                            index: this.index,
                            text: ch3,
                            fn: fn3
                        }), this.index += 3) : fn2 ? (this.tokens.push({
                            index: this.index,
                            text: ch2,
                            fn: fn2
                        }), this.index += 2) : fn ? (this.tokens.push({
                            index: this.index,
                            text: this.ch,
                            fn: fn
                        }), this.index += 1) : this.throwError("Unexpected next character ", this.index, this.index + 1)
                    }
                    this.lastCh = this.ch
                }
                return this.tokens
            },
            is: function(chars) {
                return -1 !== chars.indexOf(this.ch)
            },
            was: function(chars) {
                return -1 !== chars.indexOf(this.lastCh)
            },
            peek: function(i) {
                var num = i || 1;
                return this.index + num < this.text.length ? this.text.charAt(this.index + num) : !1
            },
            isNumber: function(ch) {
                return ch >= "0" && "9" >= ch
            },
            isWhitespace: function(ch) {
                return " " === ch || "\r" === ch || "	" === ch || "\n" === ch || "" === ch || "Â " === ch
            },
            isIdent: function(ch) {
                return ch >= "a" && "z" >= ch || ch >= "A" && "Z" >= ch || "_" === ch || "$" === ch
            },
            isExpOperator: function(ch) {
                return "-" === ch || "+" === ch || this.isNumber(ch)
            },
            throwError: function(error, start, end) {
                end = end || this.index;
                var colStr = isDefined(start) ? "s " + start + "-" + this.index + " [" + this.text.substring(start, end) + "]" : " " + end;
                throw $parseMinErr("lexerr", "Lexer Error: {0} at column{1} in expression [{2}].", error, colStr, this.text)
            },
            readNumber: function() {
                for (var number = "", start = this.index; this.index < this.text.length;) {
                    var ch = lowercase(this.text.charAt(this.index));
                    if ("." == ch || this.isNumber(ch)) number += ch;
                    else {
                        var peekCh = this.peek();
                        if ("e" == ch && this.isExpOperator(peekCh)) number += ch;
                        else if (this.isExpOperator(ch) && peekCh && this.isNumber(peekCh) && "e" == number.charAt(number.length - 1)) number += ch;
                        else {
                            if (!this.isExpOperator(ch) || peekCh && this.isNumber(peekCh) || "e" != number.charAt(number.length - 1)) break;
                            this.throwError("Invalid exponent")
                        }
                    }
                    this.index++
                }
                number = 1 * number, this.tokens.push({
                    index: start,
                    text: number,
                    literal: !0,
                    constant: !0,
                    fn: function() {
                        return number
                    }
                })
            },
            readIdent: function() {
                for (var lastDot, peekIndex, methodName, ch, parser = this, ident = "", start = this.index; this.index < this.text.length && (ch = this.text.charAt(this.index), "." === ch || this.isIdent(ch) || this.isNumber(ch));) "." === ch && (lastDot = this.index), ident += ch, this.index++;
                if (lastDot)
                    for (peekIndex = this.index; peekIndex < this.text.length;) {
                        if (ch = this.text.charAt(peekIndex), "(" === ch) {
                            methodName = ident.substr(lastDot - start + 1), ident = ident.substr(0, lastDot - start), this.index = peekIndex;
                            break
                        }
                        if (!this.isWhitespace(ch)) break;
                        peekIndex++
                    }
                var token = {
                    index: start,
                    text: ident
                };
                if (OPERATORS.hasOwnProperty(ident)) token.fn = OPERATORS[ident], token.literal = !0, token.constant = !0;
                else {
                    var getter = getterFn(ident, this.options, this.text);
                    token.fn = extend(function(self, locals) {
                        return getter(self, locals)
                    }, {
                        assign: function(self, value) {
                            return setter(self, ident, value, parser.text, parser.options)
                        }
                    })
                }
                this.tokens.push(token), methodName && (this.tokens.push({
                    index: lastDot,
                    text: "."
                }), this.tokens.push({
                    index: lastDot + 1,
                    text: methodName
                }))
            },
            readString: function(quote) {
                var start = this.index;
                this.index++;
                for (var string = "", rawString = quote, escape = !1; this.index < this.text.length;) {
                    var ch = this.text.charAt(this.index);
                    if (rawString += ch, escape) {
                        if ("u" === ch) {
                            var hex = this.text.substring(this.index + 1, this.index + 5);
                            hex.match(/[\da-f]{4}/i) || this.throwError("Invalid unicode escape [\\u" + hex + "]"), this.index += 4, string += String.fromCharCode(parseInt(hex, 16))
                        } else {
                            var rep = ESCAPE[ch];
                            string += rep || ch
                        }
                        escape = !1
                    } else if ("\\" === ch) escape = !0;
                    else {
                        if (ch === quote) return this.index++, void this.tokens.push({
                            index: start,
                            text: rawString,
                            string: string,
                            literal: !0,
                            constant: !0,
                            fn: function() {
                                return string
                            }
                        });
                        string += ch
                    }
                    this.index++
                }
                this.throwError("Unterminated quote", start)
            }
        };
        var Parser = function(lexer, $filter, options) {
            this.lexer = lexer, this.$filter = $filter, this.options = options
        };
        Parser.ZERO = extend(function() {
            return 0
        }, {
            constant: !0
        }), Parser.prototype = {
            constructor: Parser,
            parse: function(text) {
                this.text = text, this.tokens = this.lexer.lex(text);
                var value = this.statements();
                return 0 !== this.tokens.length && this.throwError("is an unexpected token", this.tokens[0]), value.literal = !!value.literal, value.constant = !!value.constant, value
            },
            primary: function() {
                var primary;
                if (this.expect("(")) primary = this.filterChain(), this.consume(")");
                else if (this.expect("[")) primary = this.arrayDeclaration();
                else if (this.expect("{")) primary = this.object();
                else {
                    var token = this.expect();
                    primary = token.fn, primary || this.throwError("not a primary expression", token), primary.literal = !!token.literal, primary.constant = !!token.constant
                }
                for (var next, context; next = this.expect("(", "[", ".");) "(" === next.text ? (primary = this.functionCall(primary, context), context = null) : "[" === next.text ? (context = primary, primary = this.objectIndex(primary)) : "." === next.text ? (context = primary, primary = this.fieldAccess(primary)) : this.throwError("IMPOSSIBLE");
                return primary
            },
            throwError: function(msg, token) {
                throw $parseMinErr("syntax", "Syntax Error: Token '{0}' {1} at column {2} of the expression [{3}] starting at [{4}].", token.text, msg, token.index + 1, this.text, this.text.substring(token.index))
            },
            peekToken: function() {
                if (0 === this.tokens.length) throw $parseMinErr("ueoe", "Unexpected end of expression: {0}", this.text);
                return this.tokens[0]
            },
            peek: function(e1, e2, e3, e4) {
                if (this.tokens.length > 0) {
                    var token = this.tokens[0],
                        t = token.text;
                    if (t === e1 || t === e2 || t === e3 || t === e4 || !e1 && !e2 && !e3 && !e4) return token
                }
                return !1
            },
            expect: function(e1, e2, e3, e4) {
                var token = this.peek(e1, e2, e3, e4);
                return token ? (this.tokens.shift(), token) : !1
            },
            consume: function(e1) {
                this.expect(e1) || this.throwError("is unexpected, expecting [" + e1 + "]", this.peek())
            },
            unaryFn: function(fn, right) {
                return extend(function(self, locals) {
                    return fn(self, locals, right)
                }, {
                    constant: right.constant
                })
            },
            ternaryFn: function(left, middle, right) {
                return extend(function(self, locals) {
                    return left(self, locals) ? middle(self, locals) : right(self, locals)
                }, {
                    constant: left.constant && middle.constant && right.constant
                })
            },
            binaryFn: function(left, fn, right) {
                return extend(function(self, locals) {
                    return fn(self, locals, left, right)
                }, {
                    constant: left.constant && right.constant
                })
            },
            statements: function() {
                for (var statements = [];;)
                    if (this.tokens.length > 0 && !this.peek("}", ")", ";", "]") && statements.push(this.filterChain()), !this.expect(";")) return 1 === statements.length ? statements[0] : function(self, locals) {
                        for (var value, i = 0; i < statements.length; i++) {
                            var statement = statements[i];
                            statement && (value = statement(self, locals))
                        }
                        return value
                    }
            },
            filterChain: function() {
                for (var token, left = this.expression();;) {
                    if (!(token = this.expect("|"))) return left;
                    left = this.binaryFn(left, token.fn, this.filter())
                }
            },
            filter: function() {
                for (var token = this.expect(), fn = this.$filter(token.text), argsFn = [];;) {
                    if (!(token = this.expect(":"))) {
                        var fnInvoke = function(self, locals, input) {
                            for (var args = [input], i = 0; i < argsFn.length; i++) args.push(argsFn[i](self, locals));
                            return fn.apply(self, args)
                        };
                        return function() {
                            return fnInvoke
                        }
                    }
                    argsFn.push(this.expression())
                }
            },
            expression: function() {
                return this.assignment()
            },
            assignment: function() {
                var right, token, left = this.ternary();
                return (token = this.expect("=")) ? (left.assign || this.throwError("implies assignment but [" + this.text.substring(0, token.index) + "] can not be assigned to", token), right = this.ternary(), function(scope, locals) {
                    return left.assign(scope, right(scope, locals), locals)
                }) : left
            },
            ternary: function() {
                var middle, token, left = this.logicalOR();
                return (token = this.expect("?")) ? (middle = this.assignment(), (token = this.expect(":")) ? this.ternaryFn(left, middle, this.assignment()) : void this.throwError("expected :", token)) : left
            },
            logicalOR: function() {
                for (var token, left = this.logicalAND();;) {
                    if (!(token = this.expect("||"))) return left;
                    left = this.binaryFn(left, token.fn, this.logicalAND())
                }
            },
            logicalAND: function() {
                var token, left = this.equality();
                return (token = this.expect("&&")) && (left = this.binaryFn(left, token.fn, this.logicalAND())), left
            },
            equality: function() {
                var token, left = this.relational();
                return (token = this.expect("==", "!=", "===", "!==")) && (left = this.binaryFn(left, token.fn, this.equality())), left
            },
            relational: function() {
                var token, left = this.additive();
                return (token = this.expect("<", ">", "<=", ">=")) && (left = this.binaryFn(left, token.fn, this.relational())), left
            },
            additive: function() {
                for (var token, left = this.multiplicative(); token = this.expect("+", "-");) left = this.binaryFn(left, token.fn, this.multiplicative());
                return left
            },
            multiplicative: function() {
                for (var token, left = this.unary(); token = this.expect("*", "/", "%");) left = this.binaryFn(left, token.fn, this.unary());
                return left
            },
            unary: function() {
                var token;
                return this.expect("+") ? this.primary() : (token = this.expect("-")) ? this.binaryFn(Parser.ZERO, token.fn, this.unary()) : (token = this.expect("!")) ? this.unaryFn(token.fn, this.unary()) : this.primary()
            },
            fieldAccess: function(object) {
                var parser = this,
                    field = this.expect().text,
                    getter = getterFn(field, this.options, this.text);
                return extend(function(scope, locals, self) {
                    return getter(self || object(scope, locals))
                }, {
                    assign: function(scope, value, locals) {
                        var o = object(scope, locals);
                        return o || object.assign(scope, o = {}), setter(o, field, value, parser.text, parser.options)
                    }
                })
            },
            objectIndex: function(obj) {
                var parser = this,
                    indexFn = this.expression();
                return this.consume("]"), extend(function(self, locals) {
                    var v, p, o = obj(self, locals),
                        i = indexFn(self, locals);
                    return ensureSafeMemberName(i, parser.text), o ? (v = ensureSafeObject(o[i], parser.text), v && v.then && parser.options.unwrapPromises && (p = v, "$$v" in v || (p.$$v = undefined, p.then(function(val) {
                        p.$$v = val
                    })), v = v.$$v), v) : undefined
                }, {
                    assign: function(self, value, locals) {
                        var key = ensureSafeMemberName(indexFn(self, locals), parser.text),
                            o = ensureSafeObject(obj(self, locals), parser.text);
                        return o || obj.assign(self, o = {}), o[key] = value
                    }
                })
            },
            functionCall: function(fn, contextGetter) {
                var argsFn = [];
                if (")" !== this.peekToken().text)
                    do argsFn.push(this.expression()); while (this.expect(","));
                this.consume(")");
                var parser = this;
                return function(scope, locals) {
                    for (var args = [], context = contextGetter ? contextGetter(scope, locals) : scope, i = 0; i < argsFn.length; i++) args.push(ensureSafeObject(argsFn[i](scope, locals), parser.text));
                    var fnPtr = fn(scope, locals, context) || noop;
                    ensureSafeObject(context, parser.text), ensureSafeFunction(fnPtr, parser.text);
                    var v = fnPtr.apply ? fnPtr.apply(context, args) : fnPtr(args[0], args[1], args[2], args[3], args[4]);
                    return ensureSafeObject(v, parser.text)
                }
            },
            arrayDeclaration: function() {
                var elementFns = [],
                    allConstant = !0;
                if ("]" !== this.peekToken().text)
                    do {
                        if (this.peek("]")) break;
                        var elementFn = this.expression();
                        elementFns.push(elementFn), elementFn.constant || (allConstant = !1)
                    } while (this.expect(","));
                return this.consume("]"), extend(function(self, locals) {
                    for (var array = [], i = 0; i < elementFns.length; i++) array.push(elementFns[i](self, locals));
                    return array
                }, {
                    literal: !0,
                    constant: allConstant
                })
            },
            object: function() {
                var keyValues = [],
                    allConstant = !0;
                if ("}" !== this.peekToken().text)
                    do {
                        if (this.peek("}")) break;
                        var token = this.expect(),
                            key = token.string || token.text;
                        this.consume(":");
                        var value = this.expression();
                        keyValues.push({
                            key: key,
                            value: value
                        }), value.constant || (allConstant = !1)
                    } while (this.expect(","));
                return this.consume("}"), extend(function(self, locals) {
                    for (var object = {}, i = 0; i < keyValues.length; i++) {
                        var keyValue = keyValues[i];
                        object[keyValue.key] = keyValue.value(self, locals)
                    }
                    return object
                }, {
                    literal: !0,
                    constant: allConstant
                })
            }
        };
        var getterFnCacheDefault = {},
            getterFnCacheExpensive = {},
            $sceMinErr = minErr("$sce"),
            SCE_CONTEXTS = {
                HTML: "html",
                CSS: "css",
                URL: "url",
                RESOURCE_URL: "resourceUrl",
                JS: "js"
            },
            urlParsingNode = document.createElement("a"),
            originUrl = urlResolve(window.location.href, !0);
        $FilterProvider.$inject = ["$provide"], currencyFilter.$inject = ["$locale"], numberFilter.$inject = ["$locale"];
        var DECIMAL_SEP = ".",
            DATE_FORMATS = {
                yyyy: dateGetter("FullYear", 4),
                yy: dateGetter("FullYear", 2, 0, !0),
                y: dateGetter("FullYear", 1),
                MMMM: dateStrGetter("Month"),
                MMM: dateStrGetter("Month", !0),
                MM: dateGetter("Month", 2, 1),
                M: dateGetter("Month", 1, 1),
                dd: dateGetter("Date", 2),
                d: dateGetter("Date", 1),
                HH: dateGetter("Hours", 2),
                H: dateGetter("Hours", 1),
                hh: dateGetter("Hours", 2, -12),
                h: dateGetter("Hours", 1, -12),
                mm: dateGetter("Minutes", 2),
                m: dateGetter("Minutes", 1),
                ss: dateGetter("Seconds", 2),
                s: dateGetter("Seconds", 1),
                sss: dateGetter("Milliseconds", 3),
                EEEE: dateStrGetter("Day"),
                EEE: dateStrGetter("Day", !0),
                a: ampmGetter,
                Z: timeZoneGetter
            },
            DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/,
            NUMBER_STRING = /^\-?\d+$/;
        dateFilter.$inject = ["$locale"];
        var lowercaseFilter = valueFn(lowercase),
            uppercaseFilter = valueFn(uppercase);
        orderByFilter.$inject = ["$parse"];
        var htmlAnchorDirective = valueFn({
                restrict: "E",
                compile: function(element, attr) {
                    return 8 >= msie && (attr.href || attr.name || attr.$set("href", ""), element.append(document.createComment("IE fix"))), attr.href || attr.xlinkHref || attr.name ? void 0 : function(scope, element) {
                        var href = "[object SVGAnimatedString]" === toString.call(element.prop("href")) ? "xlink:href" : "href";
                        element.on("click", function(event) {
                            element.attr(href) || event.preventDefault()
                        })
                    }
                }
            }),
            ngAttributeAliasDirectives = {};
        forEach(BOOLEAN_ATTR, function(propName, attrName) {
            if ("multiple" != propName) {
                var normalized = directiveNormalize("ng-" + attrName);
                ngAttributeAliasDirectives[normalized] = function() {
                    return {
                        priority: 100,
                        link: function(scope, element, attr) {
                            scope.$watch(attr[normalized], function(value) {
                                attr.$set(attrName, !!value)
                            })
                        }
                    }
                }
            }
        }), forEach(["src", "srcset", "href"], function(attrName) {
            var normalized = directiveNormalize("ng-" + attrName);
            ngAttributeAliasDirectives[normalized] = function() {
                return {
                    priority: 99,
                    link: function(scope, element, attr) {
                        var propName = attrName,
                            name = attrName;
                        "href" === attrName && "[object SVGAnimatedString]" === toString.call(element.prop("href")) && (name = "xlinkHref", attr.$attr[name] = "xlink:href", propName = null), attr.$observe(normalized, function(value) {
                            return value ? (attr.$set(name, value), void(msie && propName && element.prop(propName, attr[name]))) : void("href" === attrName && attr.$set(name, null))
                        })
                    }
                }
            }
        });
        var nullFormCtrl = {
            $addControl: noop,
            $removeControl: noop,
            $setValidity: noop,
            $setDirty: noop,
            $setPristine: noop
        };
        FormController.$inject = ["$element", "$attrs", "$scope", "$animate"];
        var formDirectiveFactory = function(isNgForm) {
                return ["$timeout", function($timeout) {
                    var formDirective = {
                        name: "form",
                        restrict: isNgForm ? "EAC" : "E",
                        controller: FormController,
                        compile: function() {
                            return {
                                pre: function(scope, formElement, attr, controller) {
                                    if (!attr.action) {
                                        var preventDefaultListener = function(event) {
                                            event.preventDefault ? event.preventDefault() : event.returnValue = !1
                                        };
                                        addEventListenerFn(formElement[0], "submit", preventDefaultListener), formElement.on("$destroy", function() {
                                            $timeout(function() {
                                                removeEventListenerFn(formElement[0], "submit", preventDefaultListener)
                                            }, 0, !1)
                                        })
                                    }
                                    var parentFormCtrl = formElement.parent().controller("form"),
                                        alias = attr.name || attr.ngForm;
                                    alias && setter(scope, alias, controller, alias), parentFormCtrl && formElement.on("$destroy", function() {
                                        parentFormCtrl.$removeControl(controller), alias && setter(scope, alias, undefined, alias), extend(controller, nullFormCtrl)
                                    })
                                }
                            }
                        }
                    };
                    return formDirective
                }]
            },
            formDirective = formDirectiveFactory(),
            ngFormDirective = formDirectiveFactory(!0),
            URL_REGEXP = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/,
            EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,
            NUMBER_REGEXP = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/,
            inputType = {
                text: textInputType,
                number: numberInputType,
                url: urlInputType,
                email: emailInputType,
                radio: radioInputType,
                checkbox: checkboxInputType,
                hidden: noop,
                button: noop,
                submit: noop,
                reset: noop,
                file: noop
            },
            numberBadFlags = ["badInput"],
            inputDirective = ["$browser", "$sniffer", function($browser, $sniffer) {
                return {
                    restrict: "E",
                    require: "?ngModel",
                    link: function(scope, element, attr, ctrl) {
                        ctrl && (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrl, $sniffer, $browser)
                    }
                }
            }],
            VALID_CLASS = "ng-valid",
            INVALID_CLASS = "ng-invalid",
            PRISTINE_CLASS = "ng-pristine",
            DIRTY_CLASS = "ng-dirty",
            NgModelController = ["$scope", "$exceptionHandler", "$attrs", "$element", "$parse", "$animate", function($scope, $exceptionHandler, $attr, $element, $parse, $animate) {
                function toggleValidCss(isValid, validationErrorKey) {
                    validationErrorKey = validationErrorKey ? "-" + snake_case(validationErrorKey, "-") : "", $animate.removeClass($element, (isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey), $animate.addClass($element, (isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey)
                }
                this.$viewValue = Number.NaN, this.$modelValue = Number.NaN, this.$parsers = [], this.$formatters = [], this.$viewChangeListeners = [], this.$pristine = !0, this.$dirty = !1, this.$valid = !0, this.$invalid = !1, this.$name = $attr.name;
                var ngModelGet = $parse($attr.ngModel),
                    ngModelSet = ngModelGet.assign;
                if (!ngModelSet) throw minErr("ngModel")("nonassign", "Expression '{0}' is non-assignable. Element: {1}", $attr.ngModel, startingTag($element));
                this.$render = noop, this.$isEmpty = function(value) {
                    return isUndefined(value) || "" === value || null === value || value !== value
                };
                var parentForm = $element.inheritedData("$formController") || nullFormCtrl,
                    invalidCount = 0,
                    $error = this.$error = {};
                $element.addClass(PRISTINE_CLASS), toggleValidCss(!0), this.$setValidity = function(validationErrorKey, isValid) {
                    $error[validationErrorKey] !== !isValid && (isValid ? ($error[validationErrorKey] && invalidCount--, invalidCount || (toggleValidCss(!0), this.$valid = !0, this.$invalid = !1)) : (toggleValidCss(!1), this.$invalid = !0, this.$valid = !1, invalidCount++), $error[validationErrorKey] = !isValid, toggleValidCss(isValid, validationErrorKey), parentForm.$setValidity(validationErrorKey, isValid, this))
                }, this.$setPristine = function() {
                    this.$dirty = !1, this.$pristine = !0, $animate.removeClass($element, DIRTY_CLASS), $animate.addClass($element, PRISTINE_CLASS)
                }, this.$setViewValue = function(value) {
                    this.$viewValue = value, this.$pristine && (this.$dirty = !0, this.$pristine = !1, $animate.removeClass($element, PRISTINE_CLASS), $animate.addClass($element, DIRTY_CLASS), parentForm.$setDirty()), forEach(this.$parsers, function(fn) {
                        value = fn(value)
                    }), this.$modelValue !== value && (this.$modelValue = value, ngModelSet($scope, value), forEach(this.$viewChangeListeners, function(listener) {
                        try {
                            listener()
                        } catch (e) {
                            $exceptionHandler(e)
                        }
                    }))
                };
                var ctrl = this;
                $scope.$watch(function() {
                    var value = ngModelGet($scope);
                    if (ctrl.$modelValue !== value) {
                        var formatters = ctrl.$formatters,
                            idx = formatters.length;
                        for (ctrl.$modelValue = value; idx--;) value = formatters[idx](value);
                        ctrl.$viewValue !== value && (ctrl.$viewValue = value, ctrl.$render())
                    }
                    return value
                })
            }],
            ngModelDirective = function() {
                return {
                    require: ["ngModel", "^?form"],
                    controller: NgModelController,
                    link: function(scope, element, attr, ctrls) {
                        var modelCtrl = ctrls[0],
                            formCtrl = ctrls[1] || nullFormCtrl;
                        formCtrl.$addControl(modelCtrl), scope.$on("$destroy", function() {
                            formCtrl.$removeControl(modelCtrl)
                        })
                    }
                }
            },
            ngChangeDirective = valueFn({
                require: "ngModel",
                link: function(scope, element, attr, ctrl) {
                    ctrl.$viewChangeListeners.push(function() {
                        scope.$eval(attr.ngChange)
                    })
                }
            }),
            requiredDirective = function() {
                return {
                    require: "?ngModel",
                    link: function(scope, elm, attr, ctrl) {
                        if (ctrl) {
                            attr.required = !0;
                            var validator = function(value) {
                                return attr.required && ctrl.$isEmpty(value) ? void ctrl.$setValidity("required", !1) : (ctrl.$setValidity("required", !0), value)
                            };
                            ctrl.$formatters.push(validator), ctrl.$parsers.unshift(validator), attr.$observe("required", function() {
                                validator(ctrl.$viewValue)
                            })
                        }
                    }
                }
            },
            ngListDirective = function() {
                return {
                    require: "ngModel",
                    link: function(scope, element, attr, ctrl) {
                        var match = /\/(.*)\//.exec(attr.ngList),
                            separator = match && new RegExp(match[1]) || attr.ngList || ",",
                            parse = function(viewValue) {
                                if (!isUndefined(viewValue)) {
                                    var list = [];
                                    return viewValue && forEach(viewValue.split(separator), function(value) {
                                        value && list.push(trim(value))
                                    }), list
                                }
                            };
                        ctrl.$parsers.push(parse), ctrl.$formatters.push(function(value) {
                            return isArray(value) ? value.join(", ") : undefined
                        }), ctrl.$isEmpty = function(value) {
                            return !value || !value.length
                        }
                    }
                }
            },
            CONSTANT_VALUE_REGEXP = /^(true|false|\d+)$/,
            ngValueDirective = function() {
                return {
                    priority: 100,
                    compile: function(tpl, tplAttr) {
                        return CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue) ? function(scope, elm, attr) {
                            attr.$set("value", scope.$eval(attr.ngValue))
                        } : function(scope, elm, attr) {
                            scope.$watch(attr.ngValue, function(value) {
                                attr.$set("value", value)
                            })
                        }
                    }
                }
            },
            ngBindDirective = ngDirective({
                compile: function(templateElement) {
                    return templateElement.addClass("ng-binding"),
                        function(scope, element, attr) {
                            element.data("$binding", attr.ngBind), scope.$watch(attr.ngBind, function(value) {
                                element.text(value == undefined ? "" : value)
                            })
                        }
                }
            }),
            ngBindTemplateDirective = ["$interpolate", function($interpolate) {
                return function(scope, element, attr) {
                    var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));
                    element.addClass("ng-binding").data("$binding", interpolateFn), attr.$observe("ngBindTemplate", function(value) {
                        element.text(value)
                    })
                }
            }],
            ngBindHtmlDirective = ["$sce", "$parse", function($sce, $parse) {
                return {
                    compile: function(tElement) {
                        return tElement.addClass("ng-binding"),
                            function(scope, element, attr) {
                                function getStringValue() {
                                    return (parsed(scope) || "").toString()
                                }
                                element.data("$binding", attr.ngBindHtml);
                                var parsed = $parse(attr.ngBindHtml);
                                scope.$watch(getStringValue, function() {
                                    element.html($sce.getTrustedHtml(parsed(scope)) || "")
                                })
                            }
                    }
                }
            }],
            ngClassDirective = classDirective("", !0),
            ngClassOddDirective = classDirective("Odd", 0),
            ngClassEvenDirective = classDirective("Even", 1),
            ngCloakDirective = ngDirective({
                compile: function(element, attr) {
                    attr.$set("ngCloak", undefined), element.removeClass("ng-cloak")
                }
            }),
            ngControllerDirective = [function() {
                return {
                    scope: !0,
                    controller: "@",
                    priority: 500
                }
            }],
            ngEventDirectives = {},
            forceAsyncEvents = {
                blur: !0,
                focus: !0
            };
        forEach("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function(eventName) {
            var directiveName = directiveNormalize("ng-" + eventName);
            ngEventDirectives[directiveName] = ["$parse", "$rootScope", function($parse, $rootScope) {
                return {
                    compile: function($element, attr) {
                        var fn = $parse(attr[directiveName], !0);
                        return function(scope, element) {
                            element.on(eventName, function(event) {
                                var callback = function() {
                                    fn(scope, {
                                        $event: event
                                    })
                                };
                                forceAsyncEvents[eventName] && $rootScope.$$phase ? scope.$evalAsync(callback) : scope.$apply(callback)
                            })
                        }
                    }
                }
            }]
        });
        var ngIfDirective = ["$animate", function($animate) {
                return {
                    transclude: "element",
                    priority: 600,
                    terminal: !0,
                    restrict: "A",
                    $$tlb: !0,
                    link: function($scope, $element, $attr, ctrl, $transclude) {
                        var block, childScope, previousElements;
                        $scope.$watch($attr.ngIf, function(value) {
                            toBoolean(value) ? childScope || (childScope = $scope.$new(), $transclude(childScope, function(clone) {
                                clone[clone.length++] = document.createComment(" end ngIf: " + $attr.ngIf + " "), block = {
                                    clone: clone
                                }, $animate.enter(clone, $element.parent(), $element)
                            })) : (previousElements && (previousElements.remove(), previousElements = null), childScope && (childScope.$destroy(), childScope = null), block && (previousElements = getBlockElements(block.clone), $animate.leave(previousElements, function() {
                                previousElements = null
                            }), block = null))
                        })
                    }
                }
            }],
            ngIncludeDirective = ["$http", "$templateCache", "$anchorScroll", "$animate", "$sce", function($http, $templateCache, $anchorScroll, $animate, $sce) {
                return {
                    restrict: "ECA",
                    priority: 400,
                    terminal: !0,
                    transclude: "element",
                    controller: angular.noop,
                    compile: function(element, attr) {
                        var srcExp = attr.ngInclude || attr.src,
                            onloadExp = attr.onload || "",
                            autoScrollExp = attr.autoscroll;
                        return function(scope, $element, $attr, ctrl, $transclude) {
                            var currentScope, previousElement, currentElement, changeCounter = 0,
                                cleanupLastIncludeContent = function() {
                                    previousElement && (previousElement.remove(), previousElement = null), currentScope && (currentScope.$destroy(), currentScope = null), currentElement && ($animate.leave(currentElement, function() {
                                        previousElement = null
                                    }), previousElement = currentElement, currentElement = null)
                                };
                            scope.$watch($sce.parseAsResourceUrl(srcExp), function(src) {
                                var afterAnimation = function() {
                                        !isDefined(autoScrollExp) || autoScrollExp && !scope.$eval(autoScrollExp) || $anchorScroll()
                                    },
                                    thisChangeId = ++changeCounter;
                                src ? ($http.get(src, {
                                    cache: $templateCache
                                }).success(function(response) {
                                    if (thisChangeId === changeCounter) {
                                        var newScope = scope.$new();
                                        ctrl.template = response;
                                        var clone = $transclude(newScope, function(clone) {
                                            cleanupLastIncludeContent(), $animate.enter(clone, null, $element, afterAnimation)
                                        });
                                        currentScope = newScope, currentElement = clone, currentScope.$emit("$includeContentLoaded"), scope.$eval(onloadExp)
                                    }
                                }).error(function() {
                                    thisChangeId === changeCounter && cleanupLastIncludeContent()
                                }), scope.$emit("$includeContentRequested")) : (cleanupLastIncludeContent(), ctrl.template = null)
                            })
                        }
                    }
                }
            }],
            ngIncludeFillContentDirective = ["$compile", function($compile) {
                return {
                    restrict: "ECA",
                    priority: -400,
                    require: "ngInclude",
                    link: function(scope, $element, $attr, ctrl) {
                        $element.html(ctrl.template), $compile($element.contents())(scope)
                    }
                }
            }],
            ngInitDirective = ngDirective({
                priority: 450,
                compile: function() {
                    return {
                        pre: function(scope, element, attrs) {
                            scope.$eval(attrs.ngInit)
                        }
                    }
                }
            }),
            ngNonBindableDirective = ngDirective({
                terminal: !0,
                priority: 1e3
            }),
            ngPluralizeDirective = ["$locale", "$interpolate", function($locale, $interpolate) {
                var BRACE = /{}/g;
                return {
                    restrict: "EA",
                    link: function(scope, element, attr) {
                        var numberExp = attr.count,
                            whenExp = attr.$attr.when && element.attr(attr.$attr.when),
                            offset = attr.offset || 0,
                            whens = scope.$eval(whenExp) || {},
                            whensExpFns = {},
                            startSymbol = $interpolate.startSymbol(),
                            endSymbol = $interpolate.endSymbol(),
                            isWhen = /^when(Minus)?(.+)$/;
                        forEach(attr, function(expression, attributeName) {
                            isWhen.test(attributeName) && (whens[lowercase(attributeName.replace("when", "").replace("Minus", "-"))] = element.attr(attr.$attr[attributeName]))
                        }), forEach(whens, function(expression, key) {
                            whensExpFns[key] = $interpolate(expression.replace(BRACE, startSymbol + numberExp + "-" + offset + endSymbol))
                        }), scope.$watch(function() {
                            var value = parseFloat(scope.$eval(numberExp));
                            return isNaN(value) ? "" : (value in whens || (value = $locale.pluralCat(value - offset)), whensExpFns[value](scope, element, !0))
                        }, function(newVal) {
                            element.text(newVal)
                        })
                    }
                }
            }],
            ngRepeatDirective = ["$parse", "$animate", function($parse, $animate) {
                function getBlockStart(block) {
                    return block.clone[0]
                }

                function getBlockEnd(block) {
                    return block.clone[block.clone.length - 1]
                }
                var NG_REMOVED = "$$NG_REMOVED",
                    ngRepeatMinErr = minErr("ngRepeat");
                return {
                    transclude: "element",
                    priority: 1e3,
                    terminal: !0,
                    $$tlb: !0,
                    link: function($scope, $element, $attr, ctrl, $transclude) {
                        var trackByExp, trackByExpGetter, trackByIdExpFn, trackByIdArrayFn, trackByIdObjFn, lhs, rhs, valueIdentifier, keyIdentifier, expression = $attr.ngRepeat,
                            match = expression.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?\s*$/),
                            hashFnLocals = {
                                $id: hashKey
                            };
                        if (!match) throw ngRepeatMinErr("iexp", "Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.", expression);
                        if (lhs = match[1], rhs = match[2], trackByExp = match[3], trackByExp ? (trackByExpGetter = $parse(trackByExp), trackByIdExpFn = function(key, value, index) {
                                return keyIdentifier && (hashFnLocals[keyIdentifier] = key), hashFnLocals[valueIdentifier] = value, hashFnLocals.$index = index, trackByExpGetter($scope, hashFnLocals)
                            }) : (trackByIdArrayFn = function(key, value) {
                                return hashKey(value)
                            }, trackByIdObjFn = function(key) {
                                return key
                            }), match = lhs.match(/^(?:([\$\w]+)|\(([\$\w]+)\s*,\s*([\$\w]+)\))$/), !match) throw ngRepeatMinErr("iidexp", "'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.", lhs);
                        valueIdentifier = match[3] || match[1], keyIdentifier = match[2];
                        var lastBlockMap = {};
                        $scope.$watchCollection(rhs, function(collection) {
                            var index, length, nextNode, arrayLength, childScope, key, value, trackById, trackByIdFn, collectionKeys, block, elementsToRemove, previousNode = $element[0],
                                nextBlockMap = {},
                                nextBlockOrder = [];
                            if (isArrayLike(collection)) collectionKeys = collection, trackByIdFn = trackByIdExpFn || trackByIdArrayFn;
                            else {
                                trackByIdFn = trackByIdExpFn || trackByIdObjFn, collectionKeys = [];
                                for (key in collection) collection.hasOwnProperty(key) && "$" != key.charAt(0) && collectionKeys.push(key);
                                collectionKeys.sort()
                            }
                            for (arrayLength = collectionKeys.length, length = nextBlockOrder.length = collectionKeys.length, index = 0; length > index; index++)
                                if (key = collection === collectionKeys ? index : collectionKeys[index], value = collection[key], trackById = trackByIdFn(key, value, index), assertNotHasOwnProperty(trackById, "`track by` id"), lastBlockMap.hasOwnProperty(trackById)) block = lastBlockMap[trackById], delete lastBlockMap[trackById], nextBlockMap[trackById] = block, nextBlockOrder[index] = block;
                                else {
                                    if (nextBlockMap.hasOwnProperty(trackById)) throw forEach(nextBlockOrder, function(block) {
                                        block && block.scope && (lastBlockMap[block.id] = block)
                                    }), ngRepeatMinErr("dupes", "Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}", expression, trackById, toJson(value));
                                    nextBlockOrder[index] = {
                                        id: trackById
                                    }, nextBlockMap[trackById] = !1
                                }
                            for (key in lastBlockMap) lastBlockMap.hasOwnProperty(key) && (block = lastBlockMap[key], elementsToRemove = getBlockElements(block.clone), $animate.leave(elementsToRemove), forEach(elementsToRemove, function(element) {
                                element[NG_REMOVED] = !0
                            }), block.scope.$destroy());
                            for (index = 0, length = collectionKeys.length; length > index; index++) {
                                if (key = collection === collectionKeys ? index : collectionKeys[index], value = collection[key], block = nextBlockOrder[index], nextBlockOrder[index - 1] && (previousNode = getBlockEnd(nextBlockOrder[index - 1])), block.scope) {
                                    childScope = block.scope, nextNode = previousNode;
                                    do nextNode = nextNode.nextSibling; while (nextNode && nextNode[NG_REMOVED]);
                                    getBlockStart(block) != nextNode && $animate.move(getBlockElements(block.clone), null, jqLite(previousNode)), previousNode = getBlockEnd(block)
                                } else childScope = $scope.$new();
                                childScope[valueIdentifier] = value, keyIdentifier && (childScope[keyIdentifier] = key), childScope.$index = index, childScope.$first = 0 === index, childScope.$last = index === arrayLength - 1, childScope.$middle = !(childScope.$first || childScope.$last), childScope.$odd = !(childScope.$even = 0 === (1 & index)), block.scope || $transclude(childScope, function(clone) {
                                    clone[clone.length++] = document.createComment(" end ngRepeat: " + expression + " "), $animate.enter(clone, null, jqLite(previousNode)), previousNode = clone, block.scope = childScope, block.clone = clone, nextBlockMap[block.id] = block
                                })
                            }
                            lastBlockMap = nextBlockMap
                        })
                    }
                }
            }],
            ngShowDirective = ["$animate", function($animate) {
                return function(scope, element, attr) {
                    scope.$watch(attr.ngShow, function(value) {
                        $animate[toBoolean(value) ? "removeClass" : "addClass"](element, "ng-hide")
                    })
                }
            }],
            ngHideDirective = ["$animate", function($animate) {
                return function(scope, element, attr) {
                    scope.$watch(attr.ngHide, function(value) {
                        $animate[toBoolean(value) ? "addClass" : "removeClass"](element, "ng-hide")
                    })
                }
            }],
            ngStyleDirective = ngDirective(function(scope, element, attr) {
                scope.$watch(attr.ngStyle, function(newStyles, oldStyles) {
                    oldStyles && newStyles !== oldStyles && forEach(oldStyles, function(val, style) {
                        element.css(style, "")
                    }), newStyles && element.css(newStyles)
                }, !0)
            }),
            ngSwitchDirective = ["$animate", function($animate) {
                return {
                    restrict: "EA",
                    require: "ngSwitch",
                    controller: ["$scope", function() {
                        this.cases = {}
                    }],
                    link: function(scope, element, attr, ngSwitchController) {
                        var watchExpr = attr.ngSwitch || attr.on,
                            selectedTranscludes = [],
                            selectedElements = [],
                            previousElements = [],
                            selectedScopes = [];
                        scope.$watch(watchExpr, function(value) {
                            var i, ii;
                            for (i = 0, ii = previousElements.length; ii > i; ++i) previousElements[i].remove();
                            for (previousElements.length = 0, i = 0, ii = selectedScopes.length; ii > i; ++i) {
                                var selected = selectedElements[i];
                                selectedScopes[i].$destroy(), previousElements[i] = selected, $animate.leave(selected, function() {
                                    previousElements.splice(i, 1)
                                })
                            }
                            selectedElements.length = 0, selectedScopes.length = 0, (selectedTranscludes = ngSwitchController.cases["!" + value] || ngSwitchController.cases["?"]) && (scope.$eval(attr.change), forEach(selectedTranscludes, function(selectedTransclude) {
                                var selectedScope = scope.$new();
                                selectedScopes.push(selectedScope), selectedTransclude.transclude(selectedScope, function(caseElement) {
                                    var anchor = selectedTransclude.element;
                                    selectedElements.push(caseElement), $animate.enter(caseElement, anchor.parent(), anchor)
                                })
                            }))
                        })
                    }
                }
            }],
            ngSwitchWhenDirective = ngDirective({
                transclude: "element",
                priority: 800,
                require: "^ngSwitch",
                link: function(scope, element, attrs, ctrl, $transclude) {
                    ctrl.cases["!" + attrs.ngSwitchWhen] = ctrl.cases["!" + attrs.ngSwitchWhen] || [], ctrl.cases["!" + attrs.ngSwitchWhen].push({
                        transclude: $transclude,
                        element: element
                    })
                }
            }),
            ngSwitchDefaultDirective = ngDirective({
                transclude: "element",
                priority: 800,
                require: "^ngSwitch",
                link: function(scope, element, attr, ctrl, $transclude) {
                    ctrl.cases["?"] = ctrl.cases["?"] || [], ctrl.cases["?"].push({
                        transclude: $transclude,
                        element: element
                    })
                }
            }),
            ngTranscludeDirective = ngDirective({
                link: function($scope, $element, $attrs, controller, $transclude) {
                    if (!$transclude) throw minErr("ngTransclude")("orphan", "Illegal use of ngTransclude directive in the template! No parent directive that requires a transclusion found. Element: {0}", startingTag($element));
                    $transclude(function(clone) {
                        $element.empty(), $element.append(clone)
                    })
                }
            }),
            scriptDirective = ["$templateCache", function($templateCache) {
                return {
                    restrict: "E",
                    terminal: !0,
                    compile: function(element, attr) {
                        if ("text/ng-template" == attr.type) {
                            var templateUrl = attr.id,
                                text = element[0].text;
                            $templateCache.put(templateUrl, text)
                        }
                    }
                }
            }],
            ngOptionsMinErr = minErr("ngOptions"),
            ngOptionsDirective = valueFn({
                terminal: !0
            }),
            selectDirective = ["$compile", "$parse", function($compile, $parse) {
                var NG_OPTIONS_REGEXP = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,
                    nullModelCtrl = {
                        $setViewValue: noop
                    };
                return {
                    restrict: "E",
                    require: ["select", "?ngModel"],
                    controller: ["$element", "$scope", "$attrs", function($element, $scope, $attrs) {
                        var nullOption, unknownOption, self = this,
                            optionsMap = {},
                            ngModelCtrl = nullModelCtrl;
                        self.databound = $attrs.ngModel, self.init = function(ngModelCtrl_, nullOption_, unknownOption_) {
                            ngModelCtrl = ngModelCtrl_, nullOption = nullOption_, unknownOption = unknownOption_
                        }, self.addOption = function(value) {
                            assertNotHasOwnProperty(value, '"option value"'), optionsMap[value] = !0, ngModelCtrl.$viewValue == value && ($element.val(value), unknownOption.parent() && unknownOption.remove())
                        }, self.removeOption = function(value) {
                            this.hasOption(value) && (delete optionsMap[value], ngModelCtrl.$viewValue == value && this.renderUnknownOption(value))
                        }, self.renderUnknownOption = function(val) {
                            var unknownVal = "? " + hashKey(val) + " ?";
                            unknownOption.val(unknownVal), $element.prepend(unknownOption), $element.val(unknownVal), unknownOption.prop("selected", !0)
                        }, self.hasOption = function(value) {
                            return optionsMap.hasOwnProperty(value)
                        }, $scope.$on("$destroy", function() {
                            self.renderUnknownOption = noop
                        })
                    }],
                    link: function(scope, element, attr, ctrls) {
                        function setupAsSingle(scope, selectElement, ngModelCtrl, selectCtrl) {
                            ngModelCtrl.$render = function() {
                                var viewValue = ngModelCtrl.$viewValue;
                                selectCtrl.hasOption(viewValue) ? (unknownOption.parent() && unknownOption.remove(), selectElement.val(viewValue), "" === viewValue && emptyOption.prop("selected", !0)) : isUndefined(viewValue) && emptyOption ? selectElement.val("") : selectCtrl.renderUnknownOption(viewValue)
                            }, selectElement.on("change", function() {
                                scope.$apply(function() {
                                    unknownOption.parent() && unknownOption.remove(), ngModelCtrl.$setViewValue(selectElement.val())
                                })
                            })
                        }

                        function setupAsMultiple(scope, selectElement, ctrl) {
                            var lastView;
                            ctrl.$render = function() {
                                var items = new HashMap(ctrl.$viewValue);
                                forEach(selectElement.find("option"), function(option) {
                                    option.selected = isDefined(items.get(option.value))
                                })
                            }, scope.$watch(function() {
                                equals(lastView, ctrl.$viewValue) || (lastView = shallowCopy(ctrl.$viewValue), ctrl.$render())
                            }), selectElement.on("change", function() {
                                scope.$apply(function() {
                                    var array = [];
                                    forEach(selectElement.find("option"), function(option) {
                                        option.selected && array.push(option.value)
                                    }), ctrl.$setViewValue(array)
                                })
                            })
                        }

                        function setupAsOptions(scope, selectElement, ctrl) {
                            function getSelectedSet() {
                                var selectedSet = !1;
                                if (multiple) {
                                    var modelValue = ctrl.$modelValue;
                                    if (trackFn && isArray(modelValue)) {
                                        selectedSet = new HashMap([]);
                                        for (var locals = {}, trackIndex = 0; trackIndex < modelValue.length; trackIndex++) locals[valueName] = modelValue[trackIndex], selectedSet.put(trackFn(scope, locals), modelValue[trackIndex])
                                    } else selectedSet = new HashMap(modelValue)
                                }
                                return selectedSet
                            }

                            function render() {
                                var optionGroupName, optionGroup, option, existingParent, existingOptions, existingOption, key, groupLength, length, groupIndex, index, selected, lastElement, element, label, optionGroups = {
                                        "": []
                                    },
                                    optionGroupNames = [""],
                                    modelValue = ctrl.$modelValue,
                                    values = valuesFn(scope) || [],
                                    keys = keyName ? sortedKeys(values) : values,
                                    locals = {},
                                    selectedSet = getSelectedSet();
                                for (index = 0; length = keys.length, length > index; index++) {
                                    if (key = index, keyName) {
                                        if (key = keys[index], "$" === key.charAt(0)) continue;
                                        locals[keyName] = key
                                    }
                                    if (locals[valueName] = values[key], optionGroupName = groupByFn(scope, locals) || "", (optionGroup = optionGroups[optionGroupName]) || (optionGroup = optionGroups[optionGroupName] = [], optionGroupNames.push(optionGroupName)), multiple) selected = isDefined(selectedSet.remove(trackFn ? trackFn(scope, locals) : valueFn(scope, locals)));
                                    else {
                                        if (trackFn) {
                                            var modelCast = {};
                                            modelCast[valueName] = modelValue, selected = trackFn(scope, modelCast) === trackFn(scope, locals)
                                        } else selected = modelValue === valueFn(scope, locals);
                                        selectedSet = selectedSet || selected
                                    }
                                    label = displayFn(scope, locals), label = isDefined(label) ? label : "", optionGroup.push({
                                        id: trackFn ? trackFn(scope, locals) : keyName ? keys[index] : index,
                                        label: label,
                                        selected: selected
                                    })
                                }
                                for (multiple || (nullOption || null === modelValue ? optionGroups[""].unshift({
                                        id: "",
                                        label: "",
                                        selected: !selectedSet
                                    }) : selectedSet || optionGroups[""].unshift({
                                        id: "?",
                                        label: "",
                                        selected: !0
                                    })), groupIndex = 0, groupLength = optionGroupNames.length; groupLength > groupIndex; groupIndex++) {
                                    for (optionGroupName = optionGroupNames[groupIndex], optionGroup = optionGroups[optionGroupName], optionGroupsCache.length <= groupIndex ? (existingParent = {
                                            element: optGroupTemplate.clone().attr("label", optionGroupName),
                                            label: optionGroup.label
                                        }, existingOptions = [existingParent], optionGroupsCache.push(existingOptions), selectElement.append(existingParent.element)) : (existingOptions = optionGroupsCache[groupIndex], existingParent = existingOptions[0], existingParent.label != optionGroupName && existingParent.element.attr("label", existingParent.label = optionGroupName)), lastElement = null, index = 0, length = optionGroup.length; length > index; index++) option = optionGroup[index], (existingOption = existingOptions[index + 1]) ? (lastElement = existingOption.element, existingOption.label !== option.label && (lastElement.text(existingOption.label = option.label), lastElement.prop("label", existingOption.label)), existingOption.id !== option.id && lastElement.val(existingOption.id = option.id), lastElement[0].selected !== option.selected && (lastElement.prop("selected", existingOption.selected = option.selected), msie && lastElement.prop("selected", existingOption.selected))) : ("" === option.id && nullOption ? element = nullOption : (element = optionTemplate.clone()).val(option.id).prop("selected", option.selected).attr("selected", option.selected).prop("label", option.label).text(option.label), existingOptions.push(existingOption = {
                                        element: element,
                                        label: option.label,
                                        id: option.id,
                                        selected: option.selected
                                    }), selectCtrl.addOption(option.label, element), lastElement ? lastElement.after(element) : existingParent.element.append(element), lastElement = element);
                                    for (index++; existingOptions.length > index;) option = existingOptions.pop(), selectCtrl.removeOption(option.label), option.element.remove()
                                }
                                for (; optionGroupsCache.length > groupIndex;) optionGroupsCache.pop()[0].element.remove()
                            }
                            var match;
                            if (!(match = optionsExp.match(NG_OPTIONS_REGEXP))) throw ngOptionsMinErr("iexp", "Expected expression in form of '_select_ (as _label_)? for (_key_,)?_value_ in _collection_' but got '{0}'. Element: {1}", optionsExp, startingTag(selectElement));
                            var displayFn = $parse(match[2] || match[1]),
                                valueName = match[4] || match[6],
                                keyName = match[5],
                                groupByFn = $parse(match[3] || ""),
                                valueFn = $parse(match[2] ? match[1] : valueName),
                                valuesFn = $parse(match[7]),
                                track = match[8],
                                trackFn = track ? $parse(match[8]) : null,
                                optionGroupsCache = [
                                    [{
                                        element: selectElement,
                                        label: ""
                                    }]
                                ];
                            nullOption && ($compile(nullOption)(scope), nullOption.removeClass("ng-scope"), nullOption.remove()), selectElement.empty(), selectElement.on("change", function() {
                                scope.$apply(function() {
                                    var optionGroup, key, value, optionElement, index, groupIndex, length, groupLength, trackIndex, collection = valuesFn(scope) || [],
                                        locals = {};
                                    if (multiple) {
                                        for (value = [], groupIndex = 0, groupLength = optionGroupsCache.length; groupLength > groupIndex; groupIndex++)
                                            for (optionGroup = optionGroupsCache[groupIndex], index = 1, length = optionGroup.length; length > index; index++)
                                                if ((optionElement = optionGroup[index].element)[0].selected) {
                                                    if (key = optionElement.val(), keyName && (locals[keyName] = key), trackFn)
                                                        for (trackIndex = 0; trackIndex < collection.length && (locals[valueName] = collection[trackIndex], trackFn(scope, locals) != key); trackIndex++);
                                                    else locals[valueName] = collection[key];
                                                    value.push(valueFn(scope, locals))
                                                }
                                    } else if (key = selectElement.val(), "?" == key) value = undefined;
                                    else if ("" === key) value = null;
                                    else if (trackFn) {
                                        for (trackIndex = 0; trackIndex < collection.length; trackIndex++)
                                            if (locals[valueName] = collection[trackIndex], trackFn(scope, locals) == key) {
                                                value = valueFn(scope, locals);
                                                break
                                            }
                                    } else locals[valueName] = collection[key], keyName && (locals[keyName] = key), value = valueFn(scope, locals);
                                    ctrl.$setViewValue(value), render()
                                })
                            }), ctrl.$render = render, scope.$watchCollection(valuesFn, render), scope.$watchCollection(function() {
                                var locals = {},
                                    values = valuesFn(scope);
                                if (values) {
                                    for (var toDisplay = new Array(values.length), i = 0, ii = values.length; ii > i; i++) locals[valueName] = values[i], toDisplay[i] = displayFn(scope, locals);
                                    return toDisplay
                                }
                            }, render), multiple && scope.$watchCollection(function() {
                                return ctrl.$modelValue
                            }, render)
                        }
                        if (ctrls[1]) {
                            for (var emptyOption, selectCtrl = ctrls[0], ngModelCtrl = ctrls[1], multiple = attr.multiple, optionsExp = attr.ngOptions, nullOption = !1, optionTemplate = jqLite(document.createElement("option")), optGroupTemplate = jqLite(document.createElement("optgroup")), unknownOption = optionTemplate.clone(), i = 0, children = element.children(), ii = children.length; ii > i; i++)
                                if ("" === children[i].value) {
                                    emptyOption = nullOption = children.eq(i);
                                    break
                                }
                            selectCtrl.init(ngModelCtrl, nullOption, unknownOption), multiple && (ngModelCtrl.$isEmpty = function(value) {
                                return !value || 0 === value.length
                            }), optionsExp ? setupAsOptions(scope, element, ngModelCtrl) : multiple ? setupAsMultiple(scope, element, ngModelCtrl) : setupAsSingle(scope, element, ngModelCtrl, selectCtrl)
                        }
                    }
                }
            }],
            optionDirective = ["$interpolate", function($interpolate) {
                var nullSelectCtrl = {
                    addOption: noop,
                    removeOption: noop
                };
                return {
                    restrict: "E",
                    priority: 100,
                    compile: function(element, attr) {
                        if (isUndefined(attr.value)) {
                            var interpolateFn = $interpolate(element.text(), !0);
                            interpolateFn || attr.$set("value", element.text())
                        }
                        return function(scope, element, attr) {
                            var selectCtrlName = "$selectController",
                                parent = element.parent(),
                                selectCtrl = parent.data(selectCtrlName) || parent.parent().data(selectCtrlName);
                            selectCtrl && selectCtrl.databound ? element.prop("selected", !1) : selectCtrl = nullSelectCtrl, interpolateFn ? scope.$watch(interpolateFn, function(newVal, oldVal) {
                                attr.$set("value", newVal), newVal !== oldVal && selectCtrl.removeOption(oldVal), selectCtrl.addOption(newVal)
                            }) : selectCtrl.addOption(attr.value), element.on("$destroy", function() {
                                selectCtrl.removeOption(attr.value)
                            })
                        }
                    }
                }
            }],
            styleDirective = valueFn({
                restrict: "E",
                terminal: !0
            });
        return window.angular.bootstrap ? void console.log("WARNING: Tried to load angular more than once.") : (bindJQuery(), publishExternalAPI(angular), void jqLite(document).ready(function() {
            angularInit(document, bootstrap)
        }))
    }(window, document), !window.angular.$$csp() && window.angular.element(document).find("head").prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}</style>'), ! function() {
        if (window.XMLHttpRequest && (window.XMLHttpRequest = window.FormData ? function(a) {
                return function() {
                    var b = new a;
                    return b.setRequestHeader = function(a) {
                        return function(c, d) {
                            if ("__setXHR_" === c) {
                                var e = d(b);
                                e instanceof Function && e(b)
                            } else a.apply(b, arguments)
                        }
                    }(b.setRequestHeader), b
                }
            }(window.XMLHttpRequest) : function(a) {
                return function() {
                    var b = new a,
                        c = b.send;
                    return b.__requestHeaders = [], b.open = function(a) {
                        return b.upload = {
                                addEventListener: function(a, c) {
                                    "progress" === a && (b.__progress = c), "load" === a && (b.__load = c)
                                }
                            },
                            function(c, d, e) {
                                a.apply(b, [c, d, e]), b.__url = d
                            }
                    }(b.open), b.getResponseHeader = function(a) {
                        return function(c) {
                            return b.__fileApiXHR ? b.__fileApiXHR.getResponseHeader(c) : a.apply(b, [c])
                        }
                    }(b.getResponseHeader), b.getAllResponseHeaders = function(a) {
                        return function() {
                            return b.__fileApiXHR ? b.__fileApiXHR.getAllResponseHeaders() : a.apply(b)
                        }
                    }(b.getAllResponseHeaders), b.abort = function(a) {
                        return function() {
                            return b.__fileApiXHR ? b.__fileApiXHR.abort() : null == a ? null : a.apply(b)
                        }
                    }(b.abort), b.setRequestHeader = function(a) {
                        return function(c, d) {
                            if ("__setXHR_" === c) {
                                var e = d(b);
                                e instanceof Function && e(b)
                            } else a.apply(b, arguments)
                        }
                    }(b.setRequestHeader), b.send = function() {
                        if (arguments[0] && arguments[0].__isShim) {
                            var a = arguments[0],
                                d = {
                                    url: b.__url,
                                    complete: function(a, c) {
                                        b.__load({
                                            type: "load",
                                            loaded: b.__total,
                                            total: b.__total,
                                            target: b,
                                            lengthComputable: !0
                                        }), void 0 !== c.status && Object.defineProperty(b, "status", {
                                            get: function() {
                                                return c.status
                                            }
                                        }), void 0 !== c.statusText && Object.defineProperty(b, "statusText", {
                                            get: function() {
                                                return c.statusText
                                            }
                                        }), Object.defineProperty(b, "readyState", {
                                            get: function() {
                                                return 4
                                            }
                                        }), void 0 !== c.response && Object.defineProperty(b, "response", {
                                            get: function() {
                                                return c.response
                                            }
                                        }), Object.defineProperty(b, "responseText", {
                                            get: function() {
                                                return c.responseText
                                            }
                                        }), b.__fileApiXHR = c, b.onreadystatechange()
                                    },
                                    progress: function(a) {
                                        a.target = b, b.__progress(a), b.__total = a.total
                                    },
                                    headers: b.__requestHeaders
                                };
                            d.data = {}, d.files = {};
                            for (var e = 0; e < a.data.length; e++) {
                                var f = a.data[e];
                                null != f.val && null != f.val.name && null != f.val.size && null != f.val.type ? d.files[f.key] = f.val : d.data[f.key] = f.val
                            }
                            setTimeout(function() {
                                b.__fileApiXHR = FileAPI.upload(d)
                            }, 1)
                        } else c.apply(b, arguments)
                    }, b
                }
            }(window.XMLHttpRequest), window.XMLHttpRequest.__isShim = !0), !window.FormData) {
            var a = !1;
            try {
                var b = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
                b && (a = !0)
            } catch (c) {
                void 0 != navigator.mimeTypes["application/x-shockwave-flash"] && (a = !0)
            }
            var d = function(b) {
                    if (!b.__isWrapped && (null != b.getAttribute("ng-file-select") || null != b.getAttribute("data-ng-file-select"))) {
                        var c = document.createElement("div");
                        c.innerHTML = '<div class="js-fileapi-wrapper" style="position:relative; overflow:hidden"></div>', c = c.firstChild;
                        var d = b.parentNode;
                        d.insertBefore(c, b), d.removeChild(b), c.appendChild(b), a || c.appendChild(document.createTextNode("Flash is required")), b.__isWrapped = !0
                    }
                },
                e = function(a) {
                    return function(b) {
                        var c = FileAPI.getFiles(b);
                        b.target || (b.target = {}), b.target.files = c, b.target.files.item = function(a) {
                            return b.target.files[a] || null
                        }, a(b)
                    }
                },
                f = function(a, b) {
                    return ("change" === b.toLowerCase() || "onchange" === b.toLowerCase()) && "file" == a.getAttribute("type")
                };
            HTMLInputElement.prototype.addEventListener && (HTMLInputElement.prototype.addEventListener = function(a) {
                    return function(b, c, g, h) {
                        f(this, b) ? (d(this), a.apply(this, [b, e(c), g, h])) : a.apply(this, [b, c, g, h])
                    }
                }(HTMLInputElement.prototype.addEventListener)), HTMLInputElement.prototype.attachEvent && (HTMLInputElement.prototype.attachEvent = function(a) {
                    return function(b, c) {
                        f(this, b) ? (d(this), a.apply(this, [b, e(c)])) : a.apply(this, [b, c])
                    }
                }(HTMLInputElement.prototype.attachEvent)), window.FormData = FormData = function() {
                    return {
                        append: function(a, b, c) {
                            this.data.push({
                                key: a,
                                val: b,
                                name: c
                            })
                        },
                        data: [],
                        __isShim: !0
                    }
                },
                function() {
                    if (!window.FileAPI || !FileAPI.upload) {
                        var a, b, c, d = "",
                            e = document.createElement("script"),
                            f = document.getElementsByTagName("script");
                        if (window.FileAPI && window.FileAPI.jsPath) d = window.FileAPI.jsPath;
                        else
                            for (a = 0; a < f.length; a++)
                                if (c = f[a].src, b = c.indexOf("angular-file-upload-shim.js"), -1 == b && (b = c.indexOf("angular-file-upload-shim.min.js")), b > -1) {
                                    d = c.substring(0, b);
                                    break
                                }
                        window.FileAPI && null != FileAPI.staticPath || (FileAPI = {
                            staticPath: d
                        }), e.setAttribute("src", d + "FileAPI.min.js"), document.getElementsByTagName("head")[0].appendChild(e)
                    }
                }()
        }
    }(), "undefined" != typeof module && "undefined" != typeof exports && module.exports === exports && (module.exports = "ui.router"),
    function(window, angular, undefined) {
        "use strict";

        function inherit(parent, extra) {
            return extend(new(extend(function() {}, {
                prototype: parent
            })), extra)
        }

        function merge(dst) {
            return forEach(arguments, function(obj) {
                obj !== dst && forEach(obj, function(value, key) {
                    dst.hasOwnProperty(key) || (dst[key] = value)
                })
            }), dst
        }

        function ancestors(first, second) {
            var path = [];
            for (var n in first.path) {
                if (first.path[n] !== second.path[n]) break;
                path.push(first.path[n])
            }
            return path
        }

        function objectKeys(object) {
            if (Object.keys) return Object.keys(object);
            var result = [];
            return angular.forEach(object, function(val, key) {
                result.push(key)
            }), result
        }

        function indexOf(array, value) {
            if (Array.prototype.indexOf) return array.indexOf(value, Number(arguments[2]) || 0);
            var len = array.length >>> 0,
                from = Number(arguments[2]) || 0;
            for (from = 0 > from ? Math.ceil(from) : Math.floor(from), 0 > from && (from += len); len > from; from++)
                if (from in array && array[from] === value) return from;
            return -1
        }

        function inheritParams(currentParams, newParams, $current, $to) {
            var parentParams, parents = ancestors($current, $to),
                inherited = {},
                inheritList = [];
            for (var i in parents)
                if (parents[i].params && (parentParams = objectKeys(parents[i].params), parentParams.length))
                    for (var j in parentParams) indexOf(inheritList, parentParams[j]) >= 0 || (inheritList.push(parentParams[j]), inherited[parentParams[j]] = currentParams[parentParams[j]]);
            return extend({}, inherited, newParams)
        }

        function equalForKeys(a, b, keys) {
            if (!keys) {
                keys = [];
                for (var n in a) keys.push(n)
            }
            for (var i = 0; i < keys.length; i++) {
                var k = keys[i];
                if (a[k] != b[k]) return !1
            }
            return !0
        }

        function filterByKeys(keys, values) {
            var filtered = {};
            return forEach(keys, function(name) {
                filtered[name] = values[name]
            }), filtered
        }

        function omit(obj) {
            var copy = {},
                keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
            for (var key in obj) - 1 == indexOf(keys, key) && (copy[key] = obj[key]);
            return copy
        }

        function filter(collection, callback) {
            var array = isArray(collection),
                result = array ? [] : {};
            return forEach(collection, function(val, i) {
                callback(val, i) && (result[array ? result.length : i] = val)
            }), result
        }

        function map(collection, callback) {
            var result = isArray(collection) ? [] : {};
            return forEach(collection, function(val, i) {
                result[i] = callback(val, i)
            }), result
        }

        function $Resolve($q, $injector) {
            var VISIT_IN_PROGRESS = 1,
                VISIT_DONE = 2,
                NOTHING = {},
                NO_DEPENDENCIES = [],
                NO_LOCALS = NOTHING,
                NO_PARENT = extend($q.when(NOTHING), {
                    $$promises: NOTHING,
                    $$values: NOTHING
                });
            this.study = function(invocables) {
                function visit(value, key) {
                    if (visited[key] !== VISIT_DONE) {
                        if (cycle.push(key), visited[key] === VISIT_IN_PROGRESS) throw cycle.splice(0, indexOf(cycle, key)), new Error("Cyclic dependency: " + cycle.join(" -> "));
                        if (visited[key] = VISIT_IN_PROGRESS, isString(value)) plan.push(key, [function() {
                            return $injector.get(value)
                        }], NO_DEPENDENCIES);
                        else {
                            var params = $injector.annotate(value);
                            forEach(params, function(param) {
                                param !== key && invocables.hasOwnProperty(param) && visit(invocables[param], param)
                            }), plan.push(key, value, params)
                        }
                        cycle.pop(), visited[key] = VISIT_DONE
                    }
                }

                function isResolve(value) {
                    return isObject(value) && value.then && value.$$promises
                }
                if (!isObject(invocables)) throw new Error("'invocables' must be an object");
                var invocableKeys = objectKeys(invocables || {}),
                    plan = [],
                    cycle = [],
                    visited = {};
                return forEach(invocables, visit), invocables = cycle = visited = null,
                    function(locals, parent, self) {
                        function done() {
                            --wait || (merged || merge(values, parent.$$values), result.$$values = values, result.$$promises = result.$$promises || !0, delete result.$$inheritedValues, resolution.resolve(values))
                        }

                        function fail(reason) {
                            result.$$failure = reason, resolution.reject(reason)
                        }

                        function invoke(key, invocable, params) {
                            function onfailure(reason) {
                                invocation.reject(reason), fail(reason)
                            }

                            function proceed() {
                                if (!isDefined(result.$$failure)) try {
                                    invocation.resolve($injector.invoke(invocable, self, values)), invocation.promise.then(function(result) {
                                        values[key] = result, done()
                                    }, onfailure)
                                } catch (e) {
                                    onfailure(e)
                                }
                            }
                            var invocation = $q.defer(),
                                waitParams = 0;
                            forEach(params, function(dep) {
                                promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep) && (waitParams++, promises[dep].then(function(result) {
                                    values[dep] = result, --waitParams || proceed()
                                }, onfailure))
                            }), waitParams || proceed(), promises[key] = invocation.promise
                        }
                        if (isResolve(locals) && self === undefined && (self = parent, parent = locals, locals = null), locals) {
                            if (!isObject(locals)) throw new Error("'locals' must be an object")
                        } else locals = NO_LOCALS;
                        if (parent) {
                            if (!isResolve(parent)) throw new Error("'parent' must be a promise returned by $resolve.resolve()")
                        } else parent = NO_PARENT;
                        var resolution = $q.defer(),
                            result = resolution.promise,
                            promises = result.$$promises = {},
                            values = extend({}, locals),
                            wait = 1 + plan.length / 3,
                            merged = !1;
                        if (isDefined(parent.$$failure)) return fail(parent.$$failure), result;
                        parent.$$inheritedValues && merge(values, omit(parent.$$inheritedValues, invocableKeys)), extend(promises, parent.$$promises), parent.$$values ? (merged = merge(values, omit(parent.$$values, invocableKeys)), result.$$inheritedValues = omit(parent.$$values, invocableKeys), done()) : (parent.$$inheritedValues && (result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys)), parent.then(done, fail));
                        for (var i = 0, ii = plan.length; ii > i; i += 3) locals.hasOwnProperty(plan[i]) ? done() : invoke(plan[i], plan[i + 1], plan[i + 2]);
                        return result
                    }
            }, this.resolve = function(invocables, locals, parent, self) {
                return this.study(invocables)(locals, parent, self)
            }
        }

        function $TemplateFactory($http, $templateCache, $injector) {
            this.fromConfig = function(config, params, locals) {
                return isDefined(config.template) ? this.fromString(config.template, params) : isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) : isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) : null
            }, this.fromString = function(template, params) {
                return isFunction(template) ? template(params) : template
            }, this.fromUrl = function(url, params) {
                return isFunction(url) && (url = url(params)), null == url ? null : $http.get(url, {
                    cache: $templateCache,
                    headers: {
                        Accept: "text/html"
                    }
                }).then(function(response) {
                    return response.data
                })
            }, this.fromProvider = function(provider, params, locals) {
                return $injector.invoke(provider, null, locals || {
                    params: params
                })
            }
        }

        function UrlMatcher(pattern, config, parentMatcher) {
            function addParameter(id, type, config, location) {
                if (paramNames.push(id), parentParams[id]) return parentParams[id];
                if (!/^\w+(-+\w+)*(?:\[\])?$/.test(id)) throw new Error("Invalid parameter name '" + id + "' in pattern '" + pattern + "'");
                if (params[id]) throw new Error("Duplicate parameter name '" + id + "' in pattern '" + pattern + "'");
                return params[id] = new $$UMFP.Param(id, type, config, location), params[id]
            }

            function quoteRegExp(string, pattern, squash) {
                var surroundPattern = ["", ""],
                    result = string.replace(/[\\\[\]\^$*+?.()|{}]/g, "\\$&");
                if (!pattern) return result;
                switch (squash) {
                    case !1:
                        surroundPattern = ["(", ")"];
                        break;
                    case !0:
                        surroundPattern = ["?(", ")?"];
                        break;
                    default:
                        surroundPattern = ["(" + squash + "|", ")?"]
                }
                return result + surroundPattern[0] + pattern + surroundPattern[1]
            }

            function matchDetails(m, isSearch) {
                var id, regexp, segment, type, cfg;
                return id = m[2] || m[3], cfg = config.params[id], segment = pattern.substring(last, m.index), regexp = isSearch ? m[4] : m[4] || ("*" == m[1] ? ".*" : null), type = $$UMFP.type(regexp || "string") || inherit($$UMFP.type("string"), {
                    pattern: new RegExp(regexp)
                }), {
                    id: id,
                    regexp: regexp,
                    segment: segment,
                    type: type,
                    cfg: cfg
                }
            }
            config = extend({
                params: {}
            }, isObject(config) ? config : {});
            var m, placeholder = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
                searchPlaceholder = /([:]?)([\w\[\]-]+)|\{([\w\[\]-]+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
                compiled = "^",
                last = 0,
                segments = this.segments = [],
                parentParams = parentMatcher ? parentMatcher.params : {},
                params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet,
                paramNames = [];
            this.source = pattern;
            for (var p, param, segment;
                (m = placeholder.exec(pattern)) && (p = matchDetails(m, !1), !(p.segment.indexOf("?") >= 0));) param = addParameter(p.id, p.type, p.cfg, "path"), compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash), segments.push(p.segment), last = placeholder.lastIndex;
            segment = pattern.substring(last);
            var i = segment.indexOf("?");
            if (i >= 0) {
                var search = this.sourceSearch = segment.substring(i);
                if (segment = segment.substring(0, i), this.sourcePath = pattern.substring(0, last + i), search.length > 0)
                    for (last = 0; m = searchPlaceholder.exec(search);) p = matchDetails(m, !0), param = addParameter(p.id, p.type, p.cfg, "search"), last = placeholder.lastIndex
            } else this.sourcePath = pattern, this.sourceSearch = "";
            compiled += quoteRegExp(segment) + (config.strict === !1 ? "/?" : "") + "$", segments.push(segment), this.regexp = new RegExp(compiled, config.caseInsensitive ? "i" : undefined), this.prefix = segments[0], this.$$paramNames = paramNames
        }

        function Type(config) {
            extend(this, config)
        }

        function $UrlMatcherFactory() {
            function valToString(val) {
                return null != val ? val.toString().replace(/\//g, "%2F") : val
            }

            function valFromString(val) {
                return null != val ? val.toString().replace(/%2F/g, "/") : val
            }

            function regexpMatches(val) {
                return this.pattern.test(val)
            }

            function getDefaultConfig() {
                return {
                    strict: isStrictMode,
                    caseInsensitive: isCaseInsensitive
                }
            }

            function isInjectable(value) {
                return isFunction(value) || isArray(value) && isFunction(value[value.length - 1])
            }

            function flushTypeQueue() {
                for (; typeQueue.length;) {
                    var type = typeQueue.shift();
                    if (type.pattern) throw new Error("You cannot override a type's .pattern at runtime.");
                    angular.extend($types[type.name], injector.invoke(type.def))
                }
            }

            function ParamSet(params) {
                extend(this, params || {})
            }
            $$UMFP = this;
            var injector, isCaseInsensitive = !1,
                isStrictMode = !0,
                defaultSquashPolicy = !1,
                $types = {},
                enqueue = !0,
                typeQueue = [],
                defaultTypes = {
                    string: {
                        encode: valToString,
                        decode: valFromString,
                        is: regexpMatches,
                        pattern: /[^/]*/
                    },
                    "int": {
                        encode: valToString,
                        decode: function(val) {
                            return parseInt(val, 10)
                        },
                        is: function(val) {
                            return isDefined(val) && this.decode(val.toString()) === val
                        },
                        pattern: /\d+/
                    },
                    bool: {
                        encode: function(val) {
                            return val ? 1 : 0
                        },
                        decode: function(val) {
                            return 0 !== parseInt(val, 10)
                        },
                        is: function(val) {
                            return val === !0 || val === !1
                        },
                        pattern: /0|1/
                    },
                    date: {
                        encode: function(val) {
                            return this.is(val) ? [val.getFullYear(), ("0" + (val.getMonth() + 1)).slice(-2), ("0" + val.getDate()).slice(-2)].join("-") : undefined
                        },
                        decode: function(val) {
                            if (this.is(val)) return val;
                            var match = this.capture.exec(val);
                            return match ? new Date(match[1], match[2] - 1, match[3]) : undefined
                        },
                        is: function(val) {
                            return val instanceof Date && !isNaN(val.valueOf())
                        },
                        equals: function(a, b) {
                            return this.is(a) && this.is(b) && a.toISOString() === b.toISOString()
                        },
                        pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
                        capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
                    },
                    json: {
                        encode: angular.toJson,
                        decode: angular.fromJson,
                        is: angular.isObject,
                        equals: angular.equals,
                        pattern: /[^/]*/
                    },
                    any: {
                        encode: angular.identity,
                        decode: angular.identity,
                        is: angular.identity,
                        equals: angular.equals,
                        pattern: /.*/
                    }
                };
            $UrlMatcherFactory.$$getDefaultValue = function(config) {
                if (!isInjectable(config.value)) return config.value;
                if (!injector) throw new Error("Injectable functions cannot be called at configuration time");
                return injector.invoke(config.value)
            }, this.caseInsensitive = function(value) {
                return isDefined(value) && (isCaseInsensitive = value), isCaseInsensitive
            }, this.strictMode = function(value) {
                return isDefined(value) && (isStrictMode = value), isStrictMode
            }, this.defaultSquashPolicy = function(value) {
                if (!isDefined(value)) return defaultSquashPolicy;
                if (value !== !0 && value !== !1 && !isString(value)) throw new Error("Invalid squash policy: " + value + ". Valid policies: false, true, arbitrary-string");
                return defaultSquashPolicy = value, value
            }, this.compile = function(pattern, config) {
                return new UrlMatcher(pattern, extend(getDefaultConfig(), config))
            }, this.isMatcher = function(o) {
                if (!isObject(o)) return !1;
                var result = !0;
                return forEach(UrlMatcher.prototype, function(val, name) {
                    isFunction(val) && (result = result && isDefined(o[name]) && isFunction(o[name]))
                }), result
            }, this.type = function(name, definition, definitionFn) {
                if (!isDefined(definition)) return $types[name];
                if ($types.hasOwnProperty(name)) throw new Error("A type named '" + name + "' has already been defined.");
                return $types[name] = new Type(extend({
                    name: name
                }, definition)), definitionFn && (typeQueue.push({
                    name: name,
                    def: definitionFn
                }), enqueue || flushTypeQueue()), this
            }, forEach(defaultTypes, function(type, name) {
                $types[name] = new Type(extend({
                    name: name
                }, type))
            }), $types = inherit($types, {}), this.$get = ["$injector", function($injector) {
                return injector = $injector, enqueue = !1, flushTypeQueue(), forEach(defaultTypes, function(type, name) {
                    $types[name] || ($types[name] = new Type(type))
                }), this
            }], this.Param = function(id, type, config, location) {
                function unwrapShorthand(config) {
                    var keys = isObject(config) ? objectKeys(config) : [],
                        isShorthand = -1 === indexOf(keys, "value") && -1 === indexOf(keys, "type") && -1 === indexOf(keys, "squash") && -1 === indexOf(keys, "array");
                    return isShorthand && (config = {
                        value: config
                    }), config.$$fn = isInjectable(config.value) ? config.value : function() {
                        return config.value
                    }, config
                }

                function getType(config, urlType, location) {
                    if (config.type && urlType) throw new Error("Param '" + id + "' has two type configurations.");
                    return urlType ? urlType : config.type ? config.type instanceof Type ? config.type : new Type(config.type) : "config" === location ? $types.any : $types.string
                }

                function getArrayMode() {
                    var arrayDefaults = {
                            array: "search" === location ? "auto" : !1
                        },
                        arrayParamNomenclature = id.match(/\[\]$/) ? {
                            array: !0
                        } : {};
                    return extend(arrayDefaults, arrayParamNomenclature, config).array
                }

                function getSquashPolicy(config, isOptional) {
                    var squash = config.squash;
                    if (!isOptional || squash === !1) return !1;
                    if (!isDefined(squash) || null == squash) return defaultSquashPolicy;
                    if (squash === !0 || isString(squash)) return squash;
                    throw new Error("Invalid squash policy: '" + squash + "'. Valid policies: false, true, or arbitrary string")
                }

                function getReplace(config, arrayMode, isOptional, squash) {
                    var replace, configuredKeys, defaultPolicy = [{
                        from: "",
                        to: isOptional || arrayMode ? undefined : ""
                    }, {
                        from: null,
                        to: isOptional || arrayMode ? undefined : ""
                    }];
                    return replace = isArray(config.replace) ? config.replace : [], isString(squash) && replace.push({
                        from: squash,
                        to: undefined
                    }), configuredKeys = map(replace, function(item) {
                        return item.from
                    }), filter(defaultPolicy, function(item) {
                        return -1 === indexOf(configuredKeys, item.from)
                    }).concat(replace)
                }

                function $$getDefaultValue() {
                    if (!injector) throw new Error("Injectable functions cannot be called at configuration time");
                    return injector.invoke(config.$$fn)
                }

                function $value(value) {
                    function hasReplaceVal(val) {
                        return function(obj) {
                            return obj.from === val
                        }
                    }

                    function $replace(value) {
                        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) {
                            return obj.to
                        });
                        return replacement.length ? replacement[0] : value
                    }
                    return value = $replace(value), isDefined(value) ? self.type.decode(value) : $$getDefaultValue()
                }

                function toString() {
                    return "{Param:" + id + " " + type + " squash: '" + squash + "' optional: " + isOptional + "}"
                }
                var self = this;
                config = unwrapShorthand(config), type = getType(config, type, location);
                var arrayMode = getArrayMode();
                type = arrayMode ? type.$asArray(arrayMode, "search" === location) : type, "string" !== type.name || arrayMode || "path" !== location || config.value !== undefined || (config.value = "");
                var isOptional = config.value !== undefined,
                    squash = getSquashPolicy(config, isOptional),
                    replace = getReplace(config, arrayMode, isOptional, squash);
                extend(this, {
                    id: id,
                    type: type,
                    location: location,
                    array: arrayMode,
                    squash: squash,
                    replace: replace,
                    isOptional: isOptional,
                    value: $value,
                    dynamic: undefined,
                    config: config,
                    toString: toString
                })
            }, ParamSet.prototype = {
                $$new: function() {
                    return inherit(this, extend(new ParamSet, {
                        $$parent: this
                    }))
                },
                $$keys: function() {
                    for (var keys = [], chain = [], parent = this, ignore = objectKeys(ParamSet.prototype); parent;) chain.push(parent), parent = parent.$$parent;
                    return chain.reverse(), forEach(chain, function(paramset) {
                        forEach(objectKeys(paramset), function(key) {
                            -1 === indexOf(keys, key) && -1 === indexOf(ignore, key) && keys.push(key)
                        })
                    }), keys
                },
                $$values: function(paramValues) {
                    var values = {},
                        self = this;
                    return forEach(self.$$keys(), function(key) {
                        values[key] = self[key].value(paramValues && paramValues[key])
                    }), values
                },
                $$equals: function(paramValues1, paramValues2) {
                    var equal = !0,
                        self = this;
                    return forEach(self.$$keys(), function(key) {
                        var left = paramValues1 && paramValues1[key],
                            right = paramValues2 && paramValues2[key];
                        self[key].type.equals(left, right) || (equal = !1)
                    }), equal
                },
                $$validates: function(paramValues) {
                    var isOptional, val, param, result = !0,
                        self = this;
                    return forEach(this.$$keys(), function(key) {
                        param = self[key], val = paramValues[key], isOptional = !val && param.isOptional, result = result && (isOptional || !!param.type.is(val))
                    }), result
                },
                $$parent: undefined
            }, this.ParamSet = ParamSet
        }

        function $UrlRouterProvider($locationProvider, $urlMatcherFactory) {
            function regExpPrefix(re) {
                var prefix = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(re.source);
                return null != prefix ? prefix[1].replace(/\\(.)/g, "$1") : ""
            }

            function interpolate(pattern, match) {
                return pattern.replace(/\$(\$|\d{1,2})/, function(m, what) {
                    return match["$" === what ? 0 : Number(what)]
                })
            }

            function handleIfMatch($injector, handler, match) {
                if (!match) return !1;
                var result = $injector.invoke(handler, handler, {
                    $match: match
                });
                return isDefined(result) ? result : !0
            }

            function $get($location, $rootScope, $injector, $browser) {
                function appendBasePath(url, isHtml5, absolute) {
                    return "/" === baseHref ? url : isHtml5 ? baseHref.slice(0, -1) + url : absolute ? baseHref.slice(1) + url : url
                }

                function update(evt) {
                    function check(rule) {
                        var handled = rule($injector, $location);
                        return handled ? (isString(handled) && $location.replace().url(handled), !0) : !1
                    }
                    if (!evt || !evt.defaultPrevented) {
                        var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;
                        if (lastPushedUrl = undefined, ignoreUpdate) return !0;
                        var i, n = rules.length;
                        for (i = 0; n > i; i++)
                            if (check(rules[i])) return;
                        otherwise && check(otherwise)
                    }
                }

                function listen() {
                    return listener = listener || $rootScope.$on("$locationChangeSuccess", update)
                }
                var lastPushedUrl, baseHref = $browser.baseHref(),
                    location = $location.url();
                return interceptDeferred || listen(), {
                    sync: function() {
                        update()
                    },
                    listen: function() {
                        return listen()
                    },
                    update: function(read) {
                        return read ? void(location = $location.url()) : void($location.url() !== location && ($location.url(location), $location.replace()))
                    },
                    push: function(urlMatcher, params, options) {
                        $location.url(urlMatcher.format(params || {})), lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined, options && options.replace && $location.replace()
                    },
                    href: function(urlMatcher, params, options) {
                        if (!urlMatcher.validates(params)) return null;
                        var isHtml5 = $locationProvider.html5Mode();
                        angular.isObject(isHtml5) && (isHtml5 = isHtml5.enabled);
                        var url = urlMatcher.format(params);
                        if (options = options || {}, isHtml5 || null === url || (url = "#" + $locationProvider.hashPrefix() + url), url = appendBasePath(url, isHtml5, options.absolute), !options.absolute || !url) return url;
                        var slash = !isHtml5 && url ? "/" : "",
                            port = $location.port();
                        return port = 80 === port || 443 === port ? "" : ":" + port, [$location.protocol(), "://", $location.host(), port, slash, url].join("")
                    }
                }
            }
            var listener, rules = [],
                otherwise = null,
                interceptDeferred = !1;
            this.rule = function(rule) {
                if (!isFunction(rule)) throw new Error("'rule' must be a function");
                return rules.push(rule), this
            }, this.otherwise = function(rule) {
                if (isString(rule)) {
                    var redirect = rule;
                    rule = function() {
                        return redirect
                    }
                } else if (!isFunction(rule)) throw new Error("'rule' must be a function");
                return otherwise = rule, this
            }, this.when = function(what, handler) {
                var redirect, handlerIsString = isString(handler);
                if (isString(what) && (what = $urlMatcherFactory.compile(what)), !handlerIsString && !isFunction(handler) && !isArray(handler)) throw new Error("invalid 'handler' in when()");
                var strategies = {
                        matcher: function(what, handler) {
                            return handlerIsString && (redirect = $urlMatcherFactory.compile(handler), handler = ["$match", function($match) {
                                return redirect.format($match)
                            }]), extend(function($injector, $location) {
                                return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()))
                            }, {
                                prefix: isString(what.prefix) ? what.prefix : ""
                            })
                        },
                        regex: function(what, handler) {
                            if (what.global || what.sticky) throw new Error("when() RegExp must not be global or sticky");
                            return handlerIsString && (redirect = handler, handler = ["$match", function($match) {
                                return interpolate(redirect, $match)
                            }]), extend(function($injector, $location) {
                                return handleIfMatch($injector, handler, what.exec($location.path()))
                            }, {
                                prefix: regExpPrefix(what)
                            })
                        }
                    },
                    check = {
                        matcher: $urlMatcherFactory.isMatcher(what),
                        regex: what instanceof RegExp
                    };
                for (var n in check)
                    if (check[n]) return this.rule(strategies[n](what, handler));
                throw new Error("invalid 'what' in when()")
            }, this.deferIntercept = function(defer) {
                defer === undefined && (defer = !0), interceptDeferred = defer
            }, this.$get = $get, $get.$inject = ["$location", "$rootScope", "$injector", "$browser"]
        }

        function $StateProvider($urlRouterProvider, $urlMatcherFactory) {
            function isRelative(stateName) {
                return 0 === stateName.indexOf(".") || 0 === stateName.indexOf("^")
            }

            function findState(stateOrName, base) {
                if (!stateOrName) return undefined;
                var isStr = isString(stateOrName),
                    name = isStr ? stateOrName : stateOrName.name,
                    path = isRelative(name);
                if (path) {
                    if (!base) throw new Error("No reference point given for path '" + name + "'");
                    base = findState(base);
                    for (var rel = name.split("."), i = 0, pathLength = rel.length, current = base; pathLength > i; i++)
                        if ("" !== rel[i] || 0 !== i) {
                            if ("^" !== rel[i]) break;
                            if (!current.parent) throw new Error("Path '" + name + "' not valid for state '" + base.name + "'");
                            current = current.parent
                        } else current = base;
                    rel = rel.slice(i).join("."), name = current.name + (current.name && rel ? "." : "") + rel
                }
                var state = states[name];
                return !state || !isStr && (isStr || state !== stateOrName && state.self !== stateOrName) ? undefined : state
            }

            function queueState(parentName, state) {
                queue[parentName] || (queue[parentName] = []), queue[parentName].push(state)
            }

            function flushQueuedChildren(parentName) {
                for (var queued = queue[parentName] || []; queued.length;) registerState(queued.shift())
            }

            function registerState(state) {
                state = inherit(state, {
                    self: state,
                    resolve: state.resolve || {},
                    toString: function() {
                        return this.name
                    }
                });
                var name = state.name;
                if (!isString(name) || name.indexOf("@") >= 0) throw new Error("State must have a valid name");
                if (states.hasOwnProperty(name)) throw new Error("State '" + name + "'' is already defined");
                var parentName = -1 !== name.indexOf(".") ? name.substring(0, name.lastIndexOf(".")) : isString(state.parent) ? state.parent : isObject(state.parent) && isString(state.parent.name) ? state.parent.name : "";
                if (parentName && !states[parentName]) return queueState(parentName, state.self);
                for (var key in stateBuilder) isFunction(stateBuilder[key]) && (state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]));
                return states[name] = state, !state[abstractKey] && state.url && $urlRouterProvider.when(state.url, ["$match", "$stateParams", function($match, $stateParams) {
                    $state.$current.navigable == state && equalForKeys($match, $stateParams) || $state.transitionTo(state, $match, {
                        inherit: !0,
                        location: !1
                    })
                }]), flushQueuedChildren(name), state
            }

            function isGlob(text) {
                return text.indexOf("*") > -1
            }

            function doesStateMatchGlob(glob) {
                var globSegments = glob.split("."),
                    segments = $state.$current.name.split(".");
                if ("**" === globSegments[0] && (segments = segments.slice(indexOf(segments, globSegments[1])), segments.unshift("**")), "**" === globSegments[globSegments.length - 1] && (segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE), segments.push("**")), globSegments.length != segments.length) return !1;
                for (var i = 0, l = globSegments.length; l > i; i++) "*" === globSegments[i] && (segments[i] = "*");
                return segments.join("") === globSegments.join("")
            }

            function decorator(name, func) {
                return isString(name) && !isDefined(func) ? stateBuilder[name] : isFunction(func) && isString(name) ? (stateBuilder[name] && !stateBuilder.$delegates[name] && (stateBuilder.$delegates[name] = stateBuilder[name]), stateBuilder[name] = func, this) : this
            }

            function state(name, definition) {
                return isObject(name) ? definition = name : definition.name = name, registerState(definition), this
            }

            function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter) {
                function handleRedirect(redirect, state, params, options) {
                    var evt = $rootScope.$broadcast("$stateNotFound", redirect, state, params);
                    if (evt.defaultPrevented) return $urlRouter.update(), TransitionAborted;
                    if (!evt.retry) return null;
                    if (options.$retry) return $urlRouter.update(), TransitionFailed;
                    var retryTransition = $state.transition = $q.when(evt.retry);
                    return retryTransition.then(function() {
                        return retryTransition !== $state.transition ? TransitionSuperseded : (redirect.options.$retry = !0, $state.transitionTo(redirect.to, redirect.toParams, redirect.options))
                    }, function() {
                        return TransitionAborted
                    }), $urlRouter.update(), retryTransition
                }

                function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {
                    var $stateParams = paramsAreFiltered ? params : filterByKeys(state.params.$$keys(), params),
                        locals = {
                            $stateParams: $stateParams
                        };
                    dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);
                    var promises = [dst.resolve.then(function(globals) {
                        dst.globals = globals
                    })];
                    return inherited && promises.push(inherited), forEach(state.views, function(view, name) {
                        var injectables = view.resolve && view.resolve !== state.resolve ? view.resolve : {};
                        injectables.$template = [function() {
                            return $view.load(name, {
                                view: view,
                                locals: locals,
                                params: $stateParams,
                                notify: options.notify
                            }) || ""
                        }], promises.push($resolve.resolve(injectables, locals, dst.resolve, state).then(function(result) {
                            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {
                                var injectLocals = angular.extend({}, injectables, locals);
                                result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals)
                            } else result.$$controller = view.controller;
                            result.$$state = state, result.$$controllerAs = view.controllerAs, dst[name] = result
                        }))
                    }), $q.all(promises).then(function() {
                        return dst
                    })
                }
                var TransitionSuperseded = $q.reject(new Error("transition superseded")),
                    TransitionPrevented = $q.reject(new Error("transition prevented")),
                    TransitionAborted = $q.reject(new Error("transition aborted")),
                    TransitionFailed = $q.reject(new Error("transition failed"));
                return root.locals = {
                    resolve: null,
                    globals: {
                        $stateParams: {}
                    }
                }, $state = {
                    params: {},
                    current: root.self,
                    $current: root,
                    transition: null
                }, $state.reload = function() {
                    return $state.transitionTo($state.current, $stateParams, {
                        reload: !0,
                        inherit: !1,
                        notify: !0
                    })
                }, $state.go = function(to, params, options) {
                    return $state.transitionTo(to, params, extend({
                        inherit: !0,
                        relative: $state.$current
                    }, options))
                }, $state.transitionTo = function(to, toParams, options) {
                    toParams = toParams || {}, options = extend({
                        location: !0,
                        inherit: !1,
                        relative: null,
                        notify: !0,
                        reload: !1,
                        $retry: !1
                    }, options || {});
                    var evt, from = $state.$current,
                        fromParams = $state.params,
                        fromPath = from.path,
                        toState = findState(to, options.relative);
                    if (!isDefined(toState)) {
                        var redirect = {
                                to: to,
                                toParams: toParams,
                                options: options
                            },
                            redirectResult = handleRedirect(redirect, from.self, fromParams, options);
                        if (redirectResult) return redirectResult;
                        if (to = redirect.to, toParams = redirect.toParams, options = redirect.options, toState = findState(to, options.relative), !isDefined(toState)) {
                            if (!options.relative) throw new Error("No such state '" + to + "'");
                            throw new Error("Could not resolve '" + to + "' from state '" + options.relative + "'")
                        }
                    }
                    if (toState[abstractKey]) throw new Error("Cannot transition to abstract state '" + to + "'");
                    if (options.inherit && (toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState)), !toState.params.$$validates(toParams)) return TransitionFailed;
                    toParams = toState.params.$$values(toParams), to = toState;
                    var toPath = to.path,
                        keep = 0,
                        state = toPath[keep],
                        locals = root.locals,
                        toLocals = [];
                    if (!options.reload)
                        for (; state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams);) locals = toLocals[keep] = state.locals, keep++, state = toPath[keep];
                    if (shouldTriggerReload(to, from, locals, options)) return to.self.reloadOnSearch !== !1 && $urlRouter.update(), $state.transition = null, $q.when($state.current);
                    if (toParams = filterByKeys(to.params.$$keys(), toParams || {}), options.notify && $rootScope.$broadcast("$stateChangeStart", to.self, toParams, from.self, fromParams).defaultPrevented) return $urlRouter.update(), TransitionPrevented;
                    for (var resolved = $q.when(locals), l = keep; l < toPath.length; l++, state = toPath[l]) locals = toLocals[l] = inherit(locals), resolved = resolveState(state, toParams, state === to, resolved, locals, options);
                    var transition = $state.transition = resolved.then(function() {
                        var l, entering, exiting;
                        if ($state.transition !== transition) return TransitionSuperseded;
                        for (l = fromPath.length - 1; l >= keep; l--) exiting = fromPath[l], exiting.self.onExit && $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals), exiting.locals = null;
                        for (l = keep; l < toPath.length; l++) entering = toPath[l], entering.locals = toLocals[l], entering.self.onEnter && $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);
                        return $state.transition !== transition ? TransitionSuperseded : ($state.$current = to, $state.current = to.self, $state.params = toParams, copy($state.params, $stateParams), $state.transition = null, options.location && to.navigable && $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {
                            $$avoidResync: !0,
                            replace: "replace" === options.location
                        }), options.notify && $rootScope.$broadcast("$stateChangeSuccess", to.self, toParams, from.self, fromParams), $urlRouter.update(!0), $state.current)
                    }, function(error) {
                        return $state.transition !== transition ? TransitionSuperseded : ($state.transition = null, evt = $rootScope.$broadcast("$stateChangeError", to.self, toParams, from.self, fromParams, error), evt.defaultPrevented || $urlRouter.update(), $q.reject(error))
                    });
                    return transition
                }, $state.is = function(stateOrName, params, options) {
                    options = extend({
                        relative: $state.$current
                    }, options || {});
                    var state = findState(stateOrName, options.relative);
                    return isDefined(state) ? $state.$current !== state ? !1 : params ? equalForKeys(state.params.$$values(params), $stateParams) : !0 : undefined
                }, $state.includes = function(stateOrName, params, options) {
                    if (options = extend({
                            relative: $state.$current
                        }, options || {}), isString(stateOrName) && isGlob(stateOrName)) {
                        if (!doesStateMatchGlob(stateOrName)) return !1;
                        stateOrName = $state.$current.name
                    }
                    var state = findState(stateOrName, options.relative);
                    return isDefined(state) ? isDefined($state.$current.includes[state.name]) ? params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : !0 : !1 : undefined
                }, $state.href = function(stateOrName, params, options) {
                    options = extend({
                        lossy: !0,
                        inherit: !0,
                        absolute: !1,
                        relative: $state.$current
                    }, options || {});
                    var state = findState(stateOrName, options.relative);
                    if (!isDefined(state)) return null;
                    options.inherit && (params = inheritParams($stateParams, params || {}, $state.$current, state));
                    var nav = state && options.lossy ? state.navigable : state;
                    return nav && nav.url !== undefined && null !== nav.url ? $urlRouter.href(nav.url, filterByKeys(state.params.$$keys(), params || {}), {
                        absolute: options.absolute
                    }) : null
                }, $state.get = function(stateOrName, context) {
                    if (0 === arguments.length) return map(objectKeys(states), function(name) {
                        return states[name].self
                    });
                    var state = findState(stateOrName, context || $state.$current);
                    return state && state.self ? state.self : null
                }, $state
            }

            function shouldTriggerReload(to, from, locals, options) {
                return to !== from || (locals !== from.locals || options.reload) && to.self.reloadOnSearch !== !1 ? void 0 : !0
            }
            var root, $state, states = {},
                queue = {},
                abstractKey = "abstract",
                stateBuilder = {
                    parent: function(state) {
                        if (isDefined(state.parent) && state.parent) return findState(state.parent);
                        var compositeName = /^(.+)\.[^.]+$/.exec(state.name);
                        return compositeName ? findState(compositeName[1]) : root
                    },
                    data: function(state) {
                        return state.parent && state.parent.data && (state.data = state.self.data = extend({}, state.parent.data, state.data)), state.data
                    },
                    url: function(state) {
                        var url = state.url,
                            config = {
                                params: state.params || {}
                            };
                        if (isString(url)) return "^" == url.charAt(0) ? $urlMatcherFactory.compile(url.substring(1), config) : (state.parent.navigable || root).url.concat(url, config);
                        if (!url || $urlMatcherFactory.isMatcher(url)) return url;
                        throw new Error("Invalid url '" + url + "' in state '" + state + "'")
                    },
                    navigable: function(state) {
                        return state.url ? state : state.parent ? state.parent.navigable : null
                    },
                    ownParams: function(state) {
                        var params = state.url && state.url.params || new $$UMFP.ParamSet;
                        return forEach(state.params || {}, function(config, id) {
                            params[id] || (params[id] = new $$UMFP.Param(id, null, config, "config"))
                        }), params
                    },
                    params: function(state) {
                        return state.parent && state.parent.params ? extend(state.parent.params.$$new(), state.ownParams) : new $$UMFP.ParamSet
                    },
                    views: function(state) {
                        var views = {};
                        return forEach(isDefined(state.views) ? state.views : {
                            "": state
                        }, function(view, name) {
                            name.indexOf("@") < 0 && (name += "@" + state.parent.name), views[name] = view
                        }), views
                    },
                    path: function(state) {
                        return state.parent ? state.parent.path.concat(state) : []
                    },
                    includes: function(state) {
                        var includes = state.parent ? extend({}, state.parent.includes) : {};
                        return includes[state.name] = !0, includes
                    },
                    $delegates: {}
                };
            root = registerState({
                name: "",
                url: "^",
                views: null,
                "abstract": !0
            }), root.navigable = null, this.decorator = decorator, this.state = state, this.$get = $get, $get.$inject = ["$rootScope", "$q", "$view", "$injector", "$resolve", "$stateParams", "$urlRouter", "$location", "$urlMatcherFactory"]
        }

        function $ViewProvider() {
            function $get($rootScope, $templateFactory) {
                return {
                    load: function(name, options) {
                        var result, defaults = {
                            template: null,
                            controller: null,
                            view: null,
                            locals: null,
                            notify: !0,
                            async: !0,
                            params: {}
                        };
                        return options = extend(defaults, options), options.view && (result = $templateFactory.fromConfig(options.view, options.params, options.locals)), result && options.notify && $rootScope.$broadcast("$viewContentLoading", options), result
                    }
                }
            }
            this.$get = $get, $get.$inject = ["$rootScope", "$templateFactory"]
        }

        function $ViewScrollProvider() {
            var useAnchorScroll = !1;
            this.useAnchorScroll = function() {
                useAnchorScroll = !0
            }, this.$get = ["$anchorScroll", "$timeout", function($anchorScroll, $timeout) {
                return useAnchorScroll ? $anchorScroll : function($element) {
                    $timeout(function() {
                        $element[0].scrollIntoView()
                    }, 0, !1)
                }
            }]
        }

        function $ViewDirective($state, $injector, $uiViewScroll, $interpolate) {
            function getService() {
                return $injector.has ? function(service) {
                    return $injector.has(service) ? $injector.get(service) : null
                } : function(service) {
                    try {
                        return $injector.get(service)
                    } catch (e) {
                        return null
                    }
                }
            }

            function getRenderer(attrs, scope) {
                var statics = function() {
                    return {
                        enter: function(element, target, cb) {
                            target.after(element), cb()
                        },
                        leave: function(element, cb) {
                            element.remove(), cb()
                        }
                    }
                };
                if ($animate) return {
                    enter: function(element, target, cb) {
                        var promise = $animate.enter(element, null, target, cb);
                        promise && promise.then && promise.then(cb)
                    },
                    leave: function(element, cb) {
                        var promise = $animate.leave(element, cb);
                        promise && promise.then && promise.then(cb)
                    }
                };
                if ($animator) {
                    var animate = $animator && $animator(scope, attrs);
                    return {
                        enter: function(element, target, cb) {
                            animate.enter(element, null, target), cb()
                        },
                        leave: function(element, cb) {
                            animate.leave(element), cb()
                        }
                    }
                }
                return statics()
            }
            var service = getService(),
                $animator = service("$animator"),
                $animate = service("$animate"),
                directive = {
                    restrict: "ECA",
                    terminal: !0,
                    priority: 400,
                    transclude: "element",
                    compile: function(tElement, tAttrs, $transclude) {
                        return function(scope, $element, attrs) {
                            function cleanupLastView() {
                                previousEl && (previousEl.remove(), previousEl = null), currentScope && (currentScope.$destroy(), currentScope = null), currentEl && (renderer.leave(currentEl, function() {
                                    previousEl = null
                                }), previousEl = currentEl, currentEl = null)
                            }

                            function updateView(firstTime) {
                                var newScope, name = getUiViewName(scope, attrs, $element, $interpolate),
                                    previousLocals = name && $state.$current && $state.$current.locals[name];
                                if (firstTime || previousLocals !== latestLocals) {
                                    newScope = scope.$new(), latestLocals = $state.$current.locals[name];
                                    var clone = $transclude(newScope, function(clone) {
                                        renderer.enter(clone, $element, function() {
                                            currentScope && currentScope.$emit("$viewContentAnimationEnded"), (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) && $uiViewScroll(clone)
                                        }), cleanupLastView()
                                    });
                                    currentEl = clone, currentScope = newScope, currentScope.$emit("$viewContentLoaded"), currentScope.$eval(onloadExp)
                                }
                            }
                            var previousEl, currentEl, currentScope, latestLocals, onloadExp = attrs.onload || "",
                                autoScrollExp = attrs.autoscroll,
                                renderer = getRenderer(attrs, scope);
                            scope.$on("$stateChangeSuccess", function() {
                                updateView(!1)
                            }), scope.$on("$viewContentLoading", function() {
                                updateView(!1)
                            }), updateView(!0)
                        }
                    }
                };
            return directive
        }

        function $ViewDirectiveFill($compile, $controller, $state, $interpolate) {
            return {
                restrict: "ECA",
                priority: -400,
                compile: function(tElement) {
                    var initial = tElement.html();
                    return function(scope, $element, attrs) {
                        var current = $state.$current,
                            name = getUiViewName(scope, attrs, $element, $interpolate),
                            locals = current && current.locals[name];
                        if (locals) {
                            $element.data("$uiView", {
                                name: name,
                                state: locals.$$state
                            }), $element.html(locals.$template ? locals.$template : initial);
                            var link = $compile($element.contents());
                            if (locals.$$controller) {
                                locals.$scope = scope;
                                var controller = $controller(locals.$$controller, locals);
                                locals.$$controllerAs && (scope[locals.$$controllerAs] = controller), $element.data("$ngControllerController", controller), $element.children().data("$ngControllerController", controller)
                            }
                            link(scope)
                        }
                    }
                }
            }
        }

        function getUiViewName(scope, attrs, element, $interpolate) {
            var name = $interpolate(attrs.uiView || attrs.name || "")(scope),
                inherited = element.inheritedData("$uiView");
            return name.indexOf("@") >= 0 ? name : name + "@" + (inherited ? inherited.state.name : "")
        }

        function parseStateRef(ref, current) {
            var parsed, preparsed = ref.match(/^\s*({[^}]*})\s*$/);
            if (preparsed && (ref = current + "(" + preparsed[1] + ")"), parsed = ref.replace(/\n/g, " ").match(/^([^(]+?)\s*(\((.*)\))?$/), !parsed || 4 !== parsed.length) throw new Error("Invalid state ref '" + ref + "'");
            return {
                state: parsed[1],
                paramExpr: parsed[3] || null
            }
        }

        function stateContext(el) {
            var stateData = el.parent().inheritedData("$uiView");
            return stateData && stateData.state && stateData.state.name ? stateData.state : void 0
        }

        function $StateRefDirective($state, $timeout) {
            var allowedOptions = ["location", "inherit", "reload"];
            return {
                restrict: "A",
                require: ["?^uiSrefActive", "?^uiSrefActiveEq"],
                link: function(scope, element, attrs, uiSrefActive) {
                    var ref = parseStateRef(attrs.uiSref, $state.current.name),
                        params = null,
                        base = stateContext(element) || $state.$current,
                        newHref = null,
                        isAnchor = "A" === element.prop("tagName"),
                        isForm = "FORM" === element[0].nodeName,
                        attr = isForm ? "action" : "href",
                        nav = !0,
                        options = {
                            relative: base,
                            inherit: !0
                        },
                        optionsOverride = scope.$eval(attrs.uiSrefOpts) || {};
                    angular.forEach(allowedOptions, function(option) {
                        option in optionsOverride && (options[option] = optionsOverride[option])
                    });
                    var update = function(newVal) {
                        if (newVal && (params = angular.copy(newVal)), nav) {
                            newHref = $state.href(ref.state, params, options);
                            var activeDirective = uiSrefActive[1] || uiSrefActive[0];
                            return activeDirective && activeDirective.$$setStateInfo(ref.state, params), null === newHref ? (nav = !1, !1) : void attrs.$set(attr, newHref)
                        }
                    };
                    ref.paramExpr && (scope.$watch(ref.paramExpr, function(newVal) {
                        newVal !== params && update(newVal)
                    }, !0), params = angular.copy(scope.$eval(ref.paramExpr))), update(), isForm || element.bind("click", function(e) {
                        var button = e.which || e.button;
                        if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || element.attr("target"))) {
                            var transition = $timeout(function() {
                                $state.go(ref.state, params, options)
                            });
                            e.preventDefault();
                            var ignorePreventDefaultCount = isAnchor && !newHref ? 1 : 0;
                            e.preventDefault = function() {
                                ignorePreventDefaultCount-- <= 0 && $timeout.cancel(transition)
                            }
                        }
                    })
                }
            }
        }

        function $StateRefActiveDirective($state, $stateParams, $interpolate) {
            return {
                restrict: "A",
                controller: ["$scope", "$element", "$attrs", function($scope, $element, $attrs) {
                    function update() {
                        isMatch() ? $element.addClass(activeClass) : $element.removeClass(activeClass)
                    }

                    function isMatch() {
                        return "undefined" != typeof $attrs.uiSrefActiveEq ? state && $state.is(state.name, params) : state && $state.includes(state.name, params)
                    }
                    var state, params, activeClass;
                    activeClass = $interpolate($attrs.uiSrefActiveEq || $attrs.uiSrefActive || "", !1)($scope), this.$$setStateInfo = function(newState, newParams) {
                        state = $state.get(newState, stateContext($element)), params = newParams, update()
                    }, $scope.$on("$stateChangeSuccess", update)
                }]
            }
        }

        function $IsStateFilter($state) {
            var isFilter = function(state) {
                return $state.is(state)
            };
            return isFilter.$stateful = !0, isFilter
        }

        function $IncludedByStateFilter($state) {
            var includesFilter = function(state) {
                return $state.includes(state)
            };
            return includesFilter.$stateful = !0, includesFilter
        }
        var isDefined = angular.isDefined,
            isFunction = angular.isFunction,
            isString = angular.isString,
            isObject = angular.isObject,
            isArray = angular.isArray,
            forEach = angular.forEach,
            extend = angular.extend,
            copy = angular.copy;
        angular.module("ui.router.util", ["ng"]), angular.module("ui.router.router", ["ui.router.util"]), angular.module("ui.router.state", ["ui.router.router", "ui.router.util"]), angular.module("ui.router", ["ui.router.state"]), angular.module("ui.router.compat", ["ui.router"]), $Resolve.$inject = ["$q", "$injector"], angular.module("ui.router.util").service("$resolve", $Resolve), $TemplateFactory.$inject = ["$http", "$templateCache", "$injector"], angular.module("ui.router.util").service("$templateFactory", $TemplateFactory);
        var $$UMFP;
        UrlMatcher.prototype.concat = function(pattern, config) {
            var defaultConfig = {
                caseInsensitive: $$UMFP.caseInsensitive(),
                strict: $$UMFP.strictMode(),
                squash: $$UMFP.defaultSquashPolicy()
            };
            return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this)
        }, UrlMatcher.prototype.toString = function() {
            return this.source
        }, UrlMatcher.prototype.exec = function(path, searchParams) {
            function decodePathArray(string) {
                function reverseString(str) {
                    return str.split("").reverse().join("")
                }

                function unquoteDashes(str) {
                    return str.replace(/\\-/, "-")
                }
                var split = reverseString(string).split(/-(?!\\)/),
                    allReversed = map(split, reverseString);
                return map(allReversed, unquoteDashes).reverse()
            }
            var m = this.regexp.exec(path);
            if (!m) return null;
            searchParams = searchParams || {};
            var i, j, paramName, paramNames = this.parameters(),
                nTotal = paramNames.length,
                nPath = this.segments.length - 1,
                values = {};
            if (nPath !== m.length - 1) throw new Error("Unbalanced capture group in route '" + this.source + "'");
            for (i = 0; nPath > i; i++) {
                paramName = paramNames[i];
                var param = this.params[paramName],
                    paramVal = m[i + 1];
                for (j = 0; j < param.replace; j++) param.replace[j].from === paramVal && (paramVal = param.replace[j].to);
                paramVal && param.array === !0 && (paramVal = decodePathArray(paramVal)), values[paramName] = param.value(paramVal)
            }
            for (; nTotal > i; i++) paramName = paramNames[i], values[paramName] = this.params[paramName].value(searchParams[paramName]);
            return values
        }, UrlMatcher.prototype.parameters = function(param) {
            return isDefined(param) ? this.params[param] || null : this.$$paramNames
        }, UrlMatcher.prototype.validates = function(params) {
            return this.params.$$validates(params)
        }, UrlMatcher.prototype.format = function(values) {
            function encodeDashes(str) {
                return encodeURIComponent(str).replace(/-/g, function(c) {
                    return "%5C%" + c.charCodeAt(0).toString(16).toUpperCase()
                })
            }
            values = values || {};
            var segments = this.segments,
                params = this.parameters(),
                paramset = this.params;
            if (!this.validates(values)) return null;
            var i, search = !1,
                nPath = segments.length - 1,
                nTotal = params.length,
                result = segments[0];
            for (i = 0; nTotal > i; i++) {
                var isPathParam = nPath > i,
                    name = params[i],
                    param = paramset[name],
                    value = param.value(values[name]),
                    isDefaultValue = param.isOptional && param.type.equals(param.value(), value),
                    squash = isDefaultValue ? param.squash : !1,
                    encoded = param.type.encode(value);
                if (isPathParam) {
                    var nextSegment = segments[i + 1];
                    if (squash === !1) null != encoded && (result += isArray(encoded) ? map(encoded, encodeDashes).join("-") : encodeURIComponent(encoded)), result += nextSegment;
                    else if (squash === !0) {
                        var capture = result.match(/\/$/) ? /\/?(.*)/ : /(.*)/;
                        result += nextSegment.match(capture)[1]
                    } else isString(squash) && (result += squash + nextSegment)
                } else {
                    if (null == encoded || isDefaultValue && squash !== !1) continue;
                    isArray(encoded) || (encoded = [encoded]), encoded = map(encoded, encodeURIComponent).join("&" + name + "="), result += (search ? "&" : "?") + (name + "=" + encoded), search = !0
                }
            }
            return result
        }, Type.prototype.is = function() {
            return !0
        }, Type.prototype.encode = function(val) {
            return val
        }, Type.prototype.decode = function(val) {
            return val
        }, Type.prototype.equals = function(a, b) {
            return a == b
        }, Type.prototype.$subPattern = function() {
            var sub = this.pattern.toString();
            return sub.substr(1, sub.length - 2)
        }, Type.prototype.pattern = /.*/, Type.prototype.toString = function() {
            return "{Type:" + this.name + "}"
        }, Type.prototype.$asArray = function(mode, isSearch) {
            function ArrayType(type, mode) {
                function bindTo(type, callbackName) {
                    return function() {
                        return type[callbackName].apply(type, arguments)
                    }
                }

                function arrayWrap(val) {
                    return isArray(val) ? val : isDefined(val) ? [val] : []
                }

                function arrayUnwrap(val) {
                    switch (val.length) {
                        case 0:
                            return undefined;
                        case 1:
                            return "auto" === mode ? val[0] : val;
                        default:
                            return val
                    }
                }

                function falsey(val) {
                    return !val
                }

                function arrayHandler(callback, allTruthyMode) {
                    return function(val) {
                        val = arrayWrap(val);
                        var result = map(val, callback);
                        return allTruthyMode === !0 ? 0 === filter(result, falsey).length : arrayUnwrap(result)
                    }
                }

                function arrayEqualsHandler(callback) {
                    return function(val1, val2) {
                        var left = arrayWrap(val1),
                            right = arrayWrap(val2);
                        if (left.length !== right.length) return !1;
                        for (var i = 0; i < left.length; i++)
                            if (!callback(left[i], right[i])) return !1;
                        return !0
                    }
                }
                this.encode = arrayHandler(bindTo(type, "encode")), this.decode = arrayHandler(bindTo(type, "decode")), this.is = arrayHandler(bindTo(type, "is"), !0), this.equals = arrayEqualsHandler(bindTo(type, "equals")), this.pattern = type.pattern, this.$arrayMode = mode
            }
            if (!mode) return this;
            if ("auto" === mode && !isSearch) throw new Error("'auto' array mode is for query parameters only");
            return new ArrayType(this, mode)
        }, angular.module("ui.router.util").provider("$urlMatcherFactory", $UrlMatcherFactory), angular.module("ui.router.util").run(["$urlMatcherFactory", function() {}]), $UrlRouterProvider.$inject = ["$locationProvider", "$urlMatcherFactoryProvider"], angular.module("ui.router.router").provider("$urlRouter", $UrlRouterProvider), $StateProvider.$inject = ["$urlRouterProvider", "$urlMatcherFactoryProvider"], angular.module("ui.router.state").value("$stateParams", {}).provider("$state", $StateProvider), $ViewProvider.$inject = [], angular.module("ui.router.state").provider("$view", $ViewProvider), angular.module("ui.router.state").provider("$uiViewScroll", $ViewScrollProvider), $ViewDirective.$inject = ["$state", "$injector", "$uiViewScroll", "$interpolate"], $ViewDirectiveFill.$inject = ["$compile", "$controller", "$state", "$interpolate"], angular.module("ui.router.state").directive("uiView", $ViewDirective), angular.module("ui.router.state").directive("uiView", $ViewDirectiveFill), $StateRefDirective.$inject = ["$state", "$timeout"], $StateRefActiveDirective.$inject = ["$state", "$stateParams", "$interpolate"], angular.module("ui.router.state").directive("uiSref", $StateRefDirective).directive("uiSrefActive", $StateRefActiveDirective).directive("uiSrefActiveEq", $StateRefActiveDirective), $IsStateFilter.$inject = ["$state"], $IncludedByStateFilter.$inject = ["$state"], angular.module("ui.router.state").filter("isState", $IsStateFilter).filter("includedByState", $IncludedByStateFilter)
    }(window, window.angular),
    function(angular, undefined) {
        "use strict";

        function ancestors(first, second) {
            var path = [];
            for (var n in first.path) {
                if (first.path[n] !== second.path[n]) break;
                path.push(first.path[n])
            }
            return path
        }

        function objectKeys(object) {
            if (Object.keys) return Object.keys(object);
            var result = [];
            return angular.forEach(object, function(val, key) {
                result.push(key)
            }), result
        }

        function protoKeys(object, ignoreKeys) {
            var result = [];
            for (var key in object) ignoreKeys && -1 !== ignoreKeys.indexOf(key) || result.push(key);
            return result
        }

        function arraySearch(array, value) {
            if (Array.prototype.indexOf) return array.indexOf(value, Number(arguments[2]) || 0);
            var len = array.length >>> 0,
                from = Number(arguments[2]) || 0;
            for (from = 0 > from ? Math.ceil(from) : Math.floor(from), 0 > from && (from += len); len > from; from++)
                if (from in array && array[from] === value) return from;
            return -1
        }

        function inheritParams(currentParams, newParams, $current, $to) {
            var parentParams, parents = ancestors($current, $to),
                inherited = {},
                inheritList = [];
            for (var i in parents)
                if (parents[i].params && (parentParams = isArray(parents[i].params) ? parents[i].params : objectKeys(parents[i].params), parentParams.length))
                    for (var j in parentParams) arraySearch(inheritList, parentParams[j]) >= 0 || (inheritList.push(parentParams[j]), inherited[parentParams[j]] = currentParams[parentParams[j]]);
            return extend({}, inherited, newParams)
        }

        function inherit(parent, extra) {
            return extend(new(extend(function() {}, {
                prototype: parent
            })), extra)
        }

        function onStateRegistered(callback) {
            stateRegisteredCallbacks.push(callback)
        }

        function resetIgnoreDsr() {
            ignoreDsr = undefined
        }

        function $StickyStateProvider($stateProvider, uirextras_coreProvider) {
            var core = uirextras_coreProvider,
                inheritParams = core.inheritParams,
                protoKeys = core.protoKeys,
                map = core.map,
                inactiveStates = {},
                stickyStates = {},
                DEBUG = !1;
            this.registerStickyState = function(state) {
                stickyStates[state.name] = state
            }, this.enableDebug = this.debugMode = function(enabled) {
                return angular.isDefined(enabled) && (DEBUG = enabled), DEBUG
            }, this.$get = ["$rootScope", "$state", "$stateParams", "$injector", "$log", function($rootScope, $state, $stateParams, $injector, $log) {
                function mapInactives() {
                    var mappedStates = {};
                    return angular.forEach(inactiveStates, function(state) {
                        for (var stickyAncestors = getStickyStateStack(state), i = 0; i < stickyAncestors.length; i++) {
                            var parent = stickyAncestors[i].parent;
                            mappedStates[parent.name] = mappedStates[parent.name] || [], mappedStates[parent.name].push(state)
                        }
                        mappedStates[""] && (mappedStates.__inactives = mappedStates[""])
                    }), mappedStates
                }

                function getStickyStateStack(state) {
                    var stack = [];
                    if (!state) return stack;
                    do state.sticky && stack.push(state), state = state.parent; while (state);
                    return stack.reverse(), stack
                }

                function getStickyTransitionType(fromPath, toPath, keep) {
                    if (fromPath[keep] === toPath[keep]) return {
                        from: !1,
                        to: !1
                    };
                    var stickyFromState = keep < fromPath.length && fromPath[keep].self.sticky,
                        stickyToState = keep < toPath.length && toPath[keep].self.sticky;
                    return {
                        from: stickyFromState,
                        to: stickyToState
                    }
                }

                function getEnterTransition(state, stateParams, reloadStateTree, ancestorParamsChanged) {
                    if (ancestorParamsChanged) return "updateStateParams";
                    var inactiveState = inactiveStates[state.self.name];
                    if (!inactiveState) return "enter";
                    if (state.self === reloadStateTree) return "updateStateParams";
                    var paramsMatch = equalForKeys(stateParams, inactiveState.locals.globals.$stateParams, state.ownParams);
                    return paramsMatch ? "reactivate" : "updateStateParams"
                }

                function getInactivatedState(state, stateParams) {
                    var inactiveState = inactiveStates[state.name];
                    if (!inactiveState) return null;
                    if (!stateParams) return inactiveState;
                    var paramsMatch = equalForKeys(stateParams, inactiveState.locals.globals.$stateParams, state.ownParams);
                    return paramsMatch ? inactiveState : null
                }

                function equalForKeys(a, b, keys) {
                    if (!angular.isArray(keys) && angular.isObject(keys) && (keys = protoKeys(keys, ["$$keys", "$$values", "$$equals", "$$validates", "$$new", "$$parent"])), !keys) {
                        keys = [];
                        for (var n in a) keys.push(n)
                    }
                    for (var i = 0; i < keys.length; i++) {
                        var k = keys[i];
                        if (a[k] != b[k]) return !1
                    }
                    return !0
                }
                var stickySupport = {
                    getInactiveStates: function() {
                        var states = [];
                        return angular.forEach(inactiveStates, function(state) {
                            states.push(state)
                        }), states
                    },
                    getInactiveStatesByParent: function() {
                        return mapInactives()
                    },
                    processTransition: function(transition) {
                        var result = {
                                inactives: [],
                                enter: [],
                                exit: [],
                                keep: 0
                            },
                            fromPath = transition.fromState.path,
                            fromParams = transition.fromParams,
                            toPath = transition.toState.path,
                            toParams = transition.toParams,
                            reloadStateTree = transition.reloadStateTree,
                            options = transition.options,
                            keep = 0,
                            state = toPath[keep];
                        for (options.inherit && (toParams = inheritParams($stateParams, toParams || {}, $state.$current, transition.toState)); state && state === fromPath[keep] && equalForKeys(toParams, fromParams, state.ownParams);) state = toPath[++keep];
                        result.keep = keep;
                        var idx, deepestUpdatedParams, deepestReactivate, noLongerInactiveStates = {},
                            pType = getStickyTransitionType(fromPath, toPath, keep),
                            ancestorUpdated = !!options.reload;
                        for (idx = keep; idx < toPath.length; idx++) {
                            var enterTrans = pType.to ? getEnterTransition(toPath[idx], toParams, reloadStateTree, ancestorUpdated) : "enter";
                            ancestorUpdated = ancestorUpdated || "updateStateParams" == enterTrans, result.enter[idx] = enterTrans, "reactivate" == enterTrans && (deepestReactivate = noLongerInactiveStates[toPath[idx].name] = toPath[idx]), "updateStateParams" == enterTrans && (deepestUpdatedParams = noLongerInactiveStates[toPath[idx].name] = toPath[idx])
                        }
                        deepestReactivate = deepestReactivate ? deepestReactivate.self.name + "." : "", deepestUpdatedParams = deepestUpdatedParams ? deepestUpdatedParams.self.name + "." : "";
                        var inactivesByParent = mapInactives(),
                            keptStateNames = [""].concat(map(fromPath.slice(0, keep), function(state) {
                                return state.self.name
                            }));
                        for (angular.forEach(keptStateNames, function(name) {
                                for (var inactiveChildren = inactivesByParent[name], i = 0; inactiveChildren && i < inactiveChildren.length; i++) {
                                    var child = inactiveChildren[i];
                                    noLongerInactiveStates[child.name] || deepestReactivate && 0 === child.self.name.indexOf(deepestReactivate) || deepestUpdatedParams && 0 === child.self.name.indexOf(deepestUpdatedParams) || result.inactives.push(child)
                                }
                            }), idx = keep; idx < fromPath.length; idx++) {
                            var exitTrans = "exit";
                            pType.from && (result.inactives.push(fromPath[idx]), exitTrans = "inactivate"), result.exit[idx] = exitTrans
                        }
                        return result
                    },
                    stateInactivated: function(state) {
                        inactiveStates[state.self.name] = state, state.self.status = "inactive", state.self.onInactivate && $injector.invoke(state.self.onInactivate, state.self, state.locals.globals)
                    },
                    stateReactivated: function(state) {
                        inactiveStates[state.self.name] && delete inactiveStates[state.self.name], state.self.status = "entered", state.self.onReactivate && $injector.invoke(state.self.onReactivate, state.self, state.locals.globals)
                    },
                    stateExiting: function(exiting, exitQueue, onExit) {
                        var exitingNames = {};
                        angular.forEach(exitQueue, function(state) {
                            exitingNames[state.self.name] = !0
                        }), angular.forEach(inactiveStates, function(inactiveExiting, name) {
                            !exitingNames[name] && inactiveExiting.includes[exiting.name] && (DEBUG && $log.debug("Exiting " + name + " because it's a substate of " + exiting.name + " and wasn't found in ", exitingNames), inactiveExiting.self.onExit && $injector.invoke(inactiveExiting.self.onExit, inactiveExiting.self, inactiveExiting.locals.globals), angular.forEach(inactiveExiting.locals, function(localval, key) {
                                delete inactivePseudoState.locals[key]
                            }), inactiveExiting.locals = null, inactiveExiting.self.status = "exited", delete inactiveStates[name])
                        }), onExit && $injector.invoke(onExit, exiting.self, exiting.locals.globals), exiting.locals = null, exiting.self.status = "exited", delete inactiveStates[exiting.self.name]
                    },
                    stateEntering: function(entering, params, onEnter, updateParams) {
                        var inactivatedState = getInactivatedState(entering);
                        if (inactivatedState && (updateParams || !getInactivatedState(entering, params))) {
                            var savedLocals = entering.locals;
                            this.stateExiting(inactivatedState), entering.locals = savedLocals
                        }
                        entering.self.status = "entered", onEnter && $injector.invoke(onEnter, entering.self, entering.locals.globals)
                    },
                    reset: function(inactiveState, params) {
                        var state = $state.get(inactiveState),
                            exiting = getInactivatedState(state, params);
                        return exiting ? (stickySupport.stateExiting(exiting), $rootScope.$broadcast("$viewContentLoading"), !0) : !1
                    }
                };
                return stickySupport
            }]
        }

        function SurrogateState(type) {
            return {
                resolve: {},
                locals: {
                    globals: root && root.locals && root.locals.globals
                },
                views: {},
                self: {},
                params: {},
                ownParams: versionHeuristics.hasParamSet ? {
                    $$equals: function() {
                        return !0
                    }
                } : [],
                surrogateType: type
            }
        }
        var mod_core = angular.module("ct.ui.router.extras.core", ["ui.router"]),
            internalStates = {},
            stateRegisteredCallbacks = [];
        mod_core.config(["$stateProvider", "$injector", function($stateProvider) {
            $stateProvider.decorator("parent", function(state, parentFn) {
                return internalStates[state.self.name] = state, state.self.$$state = function() {
                    return internalStates[state.self.name]
                }, angular.forEach(stateRegisteredCallbacks, function(callback) {
                    callback(state)
                }), parentFn(state)
            })
        }]);
        var forEach = angular.forEach,
            extend = angular.extend,
            isArray = angular.isArray,
            map = function(collection, callback) {
                var result = [];
                return forEach(collection, function(item, index) {
                    result.push(callback(item, index))
                }), result
            },
            keys = function(collection) {
                return map(collection, function(collection, key) {
                    return key
                })
            },
            filter = function(collection, callback) {
                var result = [];
                return forEach(collection, function(item, index) {
                    callback(item, index) && result.push(item)
                }), result
            },
            filterObj = function(collection, callback) {
                var result = {};
                return forEach(collection, function(item, index) {
                    callback(item, index) && (result[index] = item)
                }), result
            };
        mod_core.provider("uirextras_core", function() {
            var core = {
                internalStates: internalStates,
                onStateRegistered: onStateRegistered,
                forEach: forEach,
                extend: extend,
                isArray: isArray,
                map: map,
                keys: keys,
                filter: filter,
                filterObj: filterObj,
                ancestors: ancestors,
                objectKeys: objectKeys,
                protoKeys: protoKeys,
                arraySearch: arraySearch,
                inheritParams: inheritParams,
                inherit: inherit
            };
            angular.extend(this, core), this.$get = function() {
                return core
            }
        });
        var ignoreDsr;
        angular.module("ct.ui.router.extras.dsr", ["ct.ui.router.extras.core"]).config(["$provide", function($provide) {
            var $state_transitionTo;
            $provide.decorator("$state", ["$delegate", "$q", function($state, $q) {
                return $state_transitionTo = $state.transitionTo, $state.transitionTo = function(to, toParams, options) {
                    return options.ignoreDsr && (ignoreDsr = options.ignoreDsr), $state_transitionTo.apply($state, arguments).then(function(result) {
                        return resetIgnoreDsr(), result
                    }, function(err) {
                        return resetIgnoreDsr(), $q.reject(err)
                    })
                }, $state
            }])
        }]), angular.module("ct.ui.router.extras.dsr").service("$deepStateRedirect", ["$rootScope", "$state", "$injector", function($rootScope, $state, $injector) {
            function computeDeepStateStatus(state) {
                var name = state.name;
                return deepStateRedirectsByName.hasOwnProperty(name) ? deepStateRedirectsByName[name] : void recordDeepStateRedirectStatus(name)
            }

            function getConfig(state) {
                var declaration = state.deepStateRedirect || state.dsr;
                if (!declaration) return {
                    dsr: !1
                };
                var dsrCfg = {
                    dsr: !0
                };
                return angular.isFunction(declaration) ? dsrCfg.fn = declaration : angular.isObject(declaration) && (dsrCfg = angular.extend(dsrCfg, declaration)), angular.isString(dsrCfg["default"]) && (dsrCfg["default"] = {
                    state: dsrCfg["default"]
                }), dsrCfg.fn || (dsrCfg.fn = ["$dsr$", function($dsr$) {
                    return $dsr$.redirect.state != $dsr$.to.state
                }]), dsrCfg
            }

            function recordDeepStateRedirectStatus(stateName) {
                var state = $state.get(stateName);
                if (!state) return !1;
                var cfg = getConfig(state);
                cfg.dsr && (deepStateRedirectsByName[state.name] = REDIRECT, lastSubstate[stateName] === undefined && (lastSubstate[stateName] = {}));
                var parent = state.$$state && state.$$state().parent;
                if (parent) {
                    var parentStatus = recordDeepStateRedirectStatus(parent.self.name);
                    parentStatus && deepStateRedirectsByName[state.name] === undefined && (deepStateRedirectsByName[state.name] = ANCESTOR_REDIRECT)
                }
                return deepStateRedirectsByName[state.name] || !1
            }

            function getMatchParams(params, dsrParams) {
                dsrParams === !0 && (dsrParams = Object.keys(params)), (null === dsrParams || dsrParams === undefined) && (dsrParams = []);
                var matchParams = {};
                return angular.forEach(dsrParams.sort(), function(name) {
                    matchParams[name] = params[name]
                }), matchParams
            }

            function getParamsString(params, dsrParams) {
                function safeString(input) {
                    return input ? input.toString() : input
                }
                var matchParams = getMatchParams(params, dsrParams),
                    paramsToString = {};
                return angular.forEach(matchParams, function(val, name) {
                    paramsToString[name] = safeString(val)
                }), angular.toJson(paramsToString)
            }
            var lastSubstate = {},
                deepStateRedirectsByName = {},
                REDIRECT = "Redirect",
                ANCESTOR_REDIRECT = "AncestorRedirect";
            return $rootScope.$on("$stateChangeStart", function(event, toState, toParams) {
                var cfg = getConfig(toState);
                if (!ignoreDsr && (computeDeepStateStatus(toState) === REDIRECT || cfg["default"])) {
                    var key = getParamsString(toParams, cfg.params),
                        redirect = lastSubstate[toState.name][key] || cfg["default"];
                    if (redirect) {
                        var $dsr$ = {
                                redirect: {
                                    state: redirect.state,
                                    params: redirect.params
                                },
                                to: {
                                    state: toState.name,
                                    params: toParams
                                }
                            },
                            result = $injector.invoke(cfg.fn, toState, {
                                $dsr$: $dsr$
                            });
                        if (result) {
                            result.state && (redirect = result), event.preventDefault();
                            var redirectParams = getMatchParams(toParams, cfg.params);
                            $state.go(redirect.state, angular.extend(redirectParams, redirect.params))
                        }
                    }
                }
            }), $rootScope.$on("$stateChangeSuccess", function(event, toState, toParams) {
                var deepStateStatus = computeDeepStateStatus(toState);
                if (deepStateStatus) {
                    var name = toState.name;
                    angular.forEach(lastSubstate, function(redirect, dsrState) {
                        var cfg = getConfig($state.get(dsrState)),
                            key = getParamsString(toParams, cfg.params);
                        (name == dsrState || -1 != name.indexOf(dsrState + ".")) && (lastSubstate[dsrState][key] = {
                            state: name,
                            params: angular.copy(toParams)
                        })
                    })
                }
            }), {
                reset: function(stateOrName, params) {
                    if (stateOrName) {
                        var state = $state.get(stateOrName);
                        if (!state) throw new Error("Unknown state: " + stateOrName);
                        if (lastSubstate[state.name])
                            if (params) {
                                var key = getParamsString(params, getConfig(state).params);
                                delete lastSubstate[state.name][key]
                            } else lastSubstate[state.name] = {}
                    } else angular.forEach(lastSubstate, function(redirect, dsrState) {
                        lastSubstate[dsrState] = {}
                    })
                }
            }
        }]), angular.module("ct.ui.router.extras.dsr").run(["$deepStateRedirect", function() {}]), angular.module("ct.ui.router.extras.sticky", ["ct.ui.router.extras.core"]);
        var mod_sticky = angular.module("ct.ui.router.extras.sticky");
        $StickyStateProvider.$inject = ["$stateProvider", "uirextras_coreProvider"], mod_sticky.provider("$stickyState", $StickyStateProvider);
        var _StickyState, root, pendingRestore, inactivePseudoState, internalStates = {},
            pendingTransitions = [],
            versionHeuristics = {
                hasParamSet: !1
            };
        angular.module("ct.ui.router.extras.sticky").run(["$stickyState", function($stickyState) {
                _StickyState = $stickyState
            }]), angular.module("ct.ui.router.extras.sticky").config(["$provide", "$stateProvider", "$stickyStateProvider", "$urlMatcherFactoryProvider", "uirextras_coreProvider", function($provide, $stateProvider, $stickyStateProvider, $urlMatcherFactoryProvider, uirextras_coreProvider) {
                function debugTransition($log, currentTransition, stickyTransition) {
                    function message(path, index, state) {
                        return path[index] ? path[index].toUpperCase() + ": " + state.self.name : "(" + state.self.name + ")"
                    }
                    var inactiveLogVar = map(stickyTransition.inactives, function(state) {
                            return state.self.name
                        }),
                        enterLogVar = map(currentTransition.toState.path, function(state, index) {
                            return message(stickyTransition.enter, index, state)
                        }),
                        exitLogVar = map(currentTransition.fromState.path, function(state, index) {
                            return message(stickyTransition.exit, index, state)
                        }),
                        transitionMessage = currentTransition.fromState.self.name + ": " + angular.toJson(currentTransition.fromParams) + ":  -> " + currentTransition.toState.self.name + ": " + angular.toJson(currentTransition.toParams);
                    $log.debug("   Current transition: ", transitionMessage), $log.debug("Before transition, inactives are:   : ", map(_StickyState.getInactiveStates(), function(s) {
                        return s.self.name
                    })), $log.debug("After transition,  inactives will be: ", inactiveLogVar), $log.debug("Transition will exit:  ", exitLogVar), $log.debug("Transition will enter: ", enterLogVar)
                }

                function debugViewsAfterSuccess($log, currentState, $state) {
                    $log.debug("Current state: " + currentState.self.name + ", inactive states: ", map(_StickyState.getInactiveStates(), function(s) {
                        return s.self.name
                    }));
                    for (var viewMsg = function(local, name) {
                            return "'" + name + "' (" + local.$$state.name + ")"
                        }, statesOnly = function(local, name) {
                            return "globals" != name && "resolve" != name
                        }, viewsForState = function(state) {
                            var views = map(filterObj(state.locals, statesOnly), viewMsg).join(", ");
                            return "(" + (state.self.name ? state.self.name : "root") + ".locals" + (views.length ? ": " + views : "") + ")"
                        }, message = viewsForState(currentState), parent = currentState.parent; parent && parent !== currentState;) "" === parent.self.name && (message = viewsForState($state.$current.path[0]) + " / " + message), message = viewsForState(parent) + " / " + message, currentState = parent, parent = currentState.parent;
                    $log.debug("Views: " + message)
                }
                var core = uirextras_coreProvider,
                    internalStates = core.internalStates,
                    inherit = core.inherit,
                    map = (core.inheritParams, core.map),
                    filterObj = core.filterObj;
                versionHeuristics.hasParamSet = !!$urlMatcherFactoryProvider.ParamSet, inactivePseudoState = angular.extend(new SurrogateState("__inactives"), {
                    self: {
                        name: "__inactives"
                    }
                }), root = pendingRestore = undefined, pendingTransitions = [], uirextras_coreProvider.onStateRegistered(function(state) {
                    state.self.sticky === !0 && $stickyStateProvider.registerStickyState(state.self)
                });
                var $state_transitionTo;
                $provide.decorator("$state", ["$delegate", "$log", "$q", function($state, $log, $q) {
                    return root = $state.$current, internalStates[""] = root, root.parent = inactivePseudoState, inactivePseudoState.parent = undefined, root.locals = inherit(inactivePseudoState.locals, root.locals), delete inactivePseudoState.locals.globals, $state_transitionTo = $state.transitionTo, $state.transitionTo = function(to, toParams, options) {
                        function stateReactivatedSurrogatePhase1(state) {
                            var surrogate = angular.extend(new SurrogateState("reactivate_phase1"), {
                                locals: state.locals
                            });
                            return surrogate.self = angular.extend({}, state.self), surrogate
                        }

                        function stateReactivatedSurrogatePhase2(state) {
                            var surrogate = angular.extend(new SurrogateState("reactivate_phase2"), state),
                                oldOnEnter = surrogate.self.onEnter;
                            return surrogate.resolve = {}, surrogate.views = {}, surrogate.self.onEnter = function() {
                                surrogate.locals = state.locals, _StickyState.stateReactivated(state)
                            }, restore.addRestoreFunction(function() {
                                state.self.onEnter = oldOnEnter
                            }), surrogate
                        }

                        function stateInactivatedSurrogate(state) {
                            var surrogate = new SurrogateState("inactivate");
                            surrogate.self = state.self;
                            var oldOnExit = state.self.onExit;
                            return surrogate.self.onExit = function() {
                                _StickyState.stateInactivated(state)
                            }, restore.addRestoreFunction(function() {
                                state.self.onExit = oldOnExit
                            }), surrogate
                        }

                        function stateEnteredSurrogate(state, toParams) {
                            var oldOnEnter = state.self.onEnter;
                            return state.self.onEnter = function() {
                                _StickyState.stateEntering(state, toParams, oldOnEnter)
                            }, restore.addRestoreFunction(function() {
                                state.self.onEnter = oldOnEnter
                            }), state
                        }

                        function stateUpdateParamsSurrogate(state, toParams) {
                            var oldOnEnter = state.self.onEnter;
                            return state.self.onEnter = function() {
                                _StickyState.stateEntering(state, toParams, oldOnEnter, !0)
                            }, restore.addRestoreFunction(function() {
                                state.self.onEnter = oldOnEnter
                            }), state
                        }

                        function stateExitedSurrogate(state) {
                            var oldOnExit = state.self.onExit;
                            return state.self.onExit = function() {
                                _StickyState.stateExiting(state, exited, oldOnExit)
                            }, restore.addRestoreFunction(function() {
                                state.self.onExit = oldOnExit
                            }), state
                        }
                        var DEBUG = $stickyStateProvider.debugMode();
                        inactivePseudoState.locals || (inactivePseudoState.locals = root.locals);
                        var idx = pendingTransitions.length;
                        pendingRestore && (pendingRestore(), DEBUG && $log.debug("Restored paths from pending transition"));
                        var savedToStatePath, savedFromStatePath, stickyTransitions, terminalReactivatedState, fromState = $state.$current,
                            fromParams = $state.params,
                            rel = options && options.relative || $state.$current,
                            toStateSelf = $state.get(to, rel),
                            reactivated = [],
                            exited = [];
                        toParams = toParams || {}, arguments[1] = toParams;
                        var noop = function() {},
                            restore = function() {
                                savedToStatePath && (toState.path = savedToStatePath, savedToStatePath = null), savedFromStatePath && (fromState.path = savedFromStatePath, savedFromStatePath = null), angular.forEach(restore.restoreFunctions, function(restoreFunction) {
                                    restoreFunction()
                                }), restore = noop, pendingRestore = null, pendingTransitions.splice(idx, 1)
                            };
                        if (restore.restoreFunctions = [], restore.addRestoreFunction = function(fn) {
                                this.restoreFunctions.push(fn)
                            }, toStateSelf) {
                            var toState = internalStates[toStateSelf.name];
                            if (toState) {
                                savedToStatePath = toState.path, savedFromStatePath = fromState.path;
                                var reload = options && options.reload || !1,
                                    reloadStateTree = reload && (reload === !0 ? savedToStatePath[0].self : $state.get(reload, rel));
                                options && reload && reload !== !0 && delete options.reload;
                                var currentTransition = {
                                    toState: toState,
                                    toParams: toParams || {},
                                    fromState: fromState,
                                    fromParams: fromParams || {},
                                    options: options,
                                    reloadStateTree: reloadStateTree
                                };
                                if (pendingTransitions.push(currentTransition), pendingRestore = restore, reloadStateTree) {
                                    currentTransition.toParams.$$uirouterextrasreload = Math.random();
                                    var params = reloadStateTree.$$state().params,
                                        ownParams = reloadStateTree.$$state().ownParams;
                                    if (versionHeuristics.hasParamSet) {
                                        var tempParam = new $urlMatcherFactoryProvider.Param("$$uirouterextrasreload");
                                        params.$$uirouterextrasreload = ownParams.$$uirouterextrasreload = tempParam, restore.restoreFunctions.push(function() {
                                            delete params.$$uirouterextrasreload, delete ownParams.$$uirouterextrasreload
                                        })
                                    } else params.push("$$uirouterextrasreload"), ownParams.push("$$uirouterextrasreload"), restore.restoreFunctions.push(function() {
                                        params.length = params.length - 1, ownParams.length = ownParams.length - 1
                                    })
                                }
                                stickyTransitions = _StickyState.processTransition(currentTransition), DEBUG && debugTransition($log, currentTransition, stickyTransitions);
                                var surrogateToPath = toState.path.slice(0, stickyTransitions.keep),
                                    surrogateFromPath = fromState.path.slice(0, stickyTransitions.keep);
                                angular.forEach(inactivePseudoState.locals, function(local, name) {
                                    -1 != name.indexOf("@") && delete inactivePseudoState.locals[name]
                                });
                                for (var i = 0; i < stickyTransitions.inactives.length; i++) {
                                    var iLocals = stickyTransitions.inactives[i].locals;
                                    angular.forEach(iLocals, function(view, name) {
                                        iLocals.hasOwnProperty(name) && -1 != name.indexOf("@") && (inactivePseudoState.locals[name] = view)
                                    })
                                }
                                if (angular.forEach(stickyTransitions.enter, function(value, idx) {
                                        var surrogate, enteringState = toState.path[idx];
                                        "reactivate" === value ? (surrogate = stateReactivatedSurrogatePhase1(enteringState), surrogateToPath.push(surrogate), surrogateFromPath.push(surrogate), reactivated.push(stateReactivatedSurrogatePhase2(enteringState)), terminalReactivatedState = enteringState) : "updateStateParams" === value ? (surrogate = stateUpdateParamsSurrogate(enteringState), surrogateToPath.push(surrogate), terminalReactivatedState = enteringState) : "enter" === value && surrogateToPath.push(stateEnteredSurrogate(enteringState))
                                    }), angular.forEach(stickyTransitions.exit, function(value, idx) {
                                        var exiting = fromState.path[idx];
                                        "inactivate" === value ? (surrogateFromPath.push(stateInactivatedSurrogate(exiting)), exited.push(exiting)) : "exit" === value && (surrogateFromPath.push(stateExitedSurrogate(exiting)), exited.push(exiting))
                                    }), reactivated.length && angular.forEach(reactivated, function(surrogate) {
                                        surrogateToPath.push(surrogate)
                                    }), toState === terminalReactivatedState) {
                                    var prefix = terminalReactivatedState.self.name + ".",
                                        inactiveStates = _StickyState.getInactiveStates(),
                                        inactiveOrphans = [];
                                    inactiveStates.forEach(function(exiting) {
                                        0 === exiting.self.name.indexOf(prefix) && inactiveOrphans.push(exiting)
                                    }), inactiveOrphans.sort(), inactiveOrphans.reverse(), surrogateFromPath = surrogateFromPath.concat(map(inactiveOrphans, function(exiting) {
                                        return stateExitedSurrogate(exiting)
                                    })), exited = exited.concat(inactiveOrphans)
                                }
                                toState.path = surrogateToPath, fromState.path = surrogateFromPath;
                                var pathMessage = function(state) {
                                    return (state.surrogateType ? state.surrogateType + ":" : "") + state.self.name
                                };
                                DEBUG && $log.debug("SurrogateFromPath: ", map(surrogateFromPath, pathMessage)), DEBUG && $log.debug("SurrogateToPath:   ", map(surrogateToPath, pathMessage))
                            }
                        }
                        var transitionPromise = $state_transitionTo.apply($state, arguments);
                        return transitionPromise.then(function(state) {
                            return restore(), DEBUG && debugViewsAfterSuccess($log, internalStates[state.name], $state), state.status = "active", state
                        }, function(err) {
                            return restore(), DEBUG && "transition prevented" !== err.message && "transition aborted" !== err.message && "transition superseded" !== err.message && ($log.debug("transition failed", err), console.log(err.stack)), $q.reject(err)
                        })
                    }, $state
                }])
            }]),
            function(angular, undefined) {
                function _futureStateProvider($stateProvider, $urlRouterProvider, $urlMatcherFactory, uirextras_coreProvider) {
                    function findState(stateOrName, findFutureState) {
                        var statename = angular.isObject(stateOrName) ? stateOrName.name : stateOrName;
                        return findFutureState ? futureStates[statename] : internalStates[statename]
                    }

                    function findFutureState($state, options) {
                        if (options.name) {
                            var nameComponents = options.name.split(/\./);
                            for ("." === options.name.charAt(0) && (nameComponents[0] = $state.current.name); nameComponents.length;) {
                                var stateName = nameComponents.join(".");
                                if ($state.get(stateName, {
                                        relative: $state.current
                                    })) return null;
                                if (futureStates[stateName]) return futureStates[stateName];
                                nameComponents.pop()
                            }
                        }
                        if (options.url) {
                            var matches = [];
                            for (var future in futureStates) {
                                var matcher = futureStates[future].urlMatcher;
                                matcher && matcher.exec(options.url) && matches.push(futureStates[future])
                            }
                            for (var copy = matches.slice(0), i = matches.length - 1; i >= 0; i--)
                                for (var j = 0; j < copy.length; j++) matches[i] === copy[j].parentFutureState && matches.splice(i, 1);
                            return matches[0]
                        }
                    }

                    function lazyLoadState($injector, futureState) {
                        lazyloadInProgress = !0;
                        var $q = $injector.get("$q");
                        if (!futureState) {
                            var deferred = $q.defer();
                            return deferred.reject("No lazyState passed in " + futureState), deferred.promise
                        }
                        var promise = $q.when([]),
                            parentFuture = futureState.parentFutureState;
                        parentFuture && futureStates[parentFuture.name] && (promise = lazyLoadState($injector, futureStates[parentFuture.name]));
                        var type = futureState.type,
                            factory = stateFactories[type];
                        if (!factory) throw Error("No state factory for futureState.type: " + (futureState && futureState.type));
                        return promise.then(function(array) {
                            var injectorPromise = $injector.invoke(factory, factory, {
                                futureState: futureState
                            });
                            return injectorPromise.then(function(fullState) {
                                return fullState && array.push(fullState), array
                            })
                        })["finally"](function() {
                            delete futureStates[futureState.name]
                        })
                    }

                    function futureState_otherwise($injector, $location) {
                        var resyncing = !1,
                            lazyLoadMissingState = ["$rootScope", "$urlRouter", "$state", function($rootScope, $urlRouter, $state) {
                                function resync() {
                                    resyncing = !0, $urlRouter.sync(), resyncing = !1
                                }
                                if (!initDone) return initPromise().then(resync), void(initDone = !0);
                                var futureState = findFutureState($state, {
                                    url: $location.path()
                                });
                                return futureState ? void lazyLoadState($injector, futureState).then(function(states) {
                                    states.forEach(function(state) {
                                        state && (!$state.get(state) || state.name && !$state.get(state.name)) && $stateProvider.state(state)
                                    }), lazyloadInProgress = !1, resync()
                                }, function() {
                                    lazyloadInProgress = !1, resync()
                                }) : $injector.invoke(otherwiseFunc)
                            }];
                        if (!lazyloadInProgress) {
                            var nextFn = resyncing ? otherwiseFunc : lazyLoadMissingState;
                            return $injector.invoke(nextFn)
                        }
                    }
                    var initPromise, core = uirextras_coreProvider,
                        internalStates = core.internalStates,
                        stateFactories = {},
                        futureStates = {},
                        lazyloadInProgress = !1,
                        resolveFunctions = [],
                        initDone = !1,
                        provider = this;
                    this.addResolve = function(promiseFn) {
                        resolveFunctions.push(promiseFn)
                    }, this.stateFactory = function(futureStateType, factory) {
                        stateFactories[futureStateType] = factory
                    }, this.futureState = function(futureState) {
                        futureState.stateName && (futureState.name = futureState.stateName), futureState.urlPrefix && (futureState.url = "^" + futureState.urlPrefix), futureStates[futureState.name] = futureState;
                        var parentMatcher, parentName = futureState.name.split(/\./).slice(0, -1).join("."),
                            realParent = findState(futureState.parent || parentName);
                        if (realParent) parentMatcher = realParent.url || realParent.navigable.url;
                        else if ("" === parentName) parentMatcher = $urlMatcherFactory.compile("");
                        else {
                            var futureParent = findState(futureState.parent || parentName, !0);
                            if (!futureParent) throw new Error("Couldn't determine parent state of future state. FutureState:" + angular.toJson(futureState));
                            var pattern = futureParent.urlMatcher.source.replace(/\*rest$/, "");
                            parentMatcher = $urlMatcherFactory.compile(pattern), futureState.parentFutureState = futureParent
                        }
                        futureState.url && (futureState.urlMatcher = "^" === futureState.url.charAt(0) ? $urlMatcherFactory.compile(futureState.url.substring(1) + "*rest") : parentMatcher.concat(futureState.url + "*rest"))
                    }, this.get = function() {
                        return angular.extend({}, futureStates)
                    };
                    var otherwiseFunc = ["$log", "$location", function($log, $location) {
                        $log.debug("Unable to map " + $location.path())
                    }];
                    $urlRouterProvider.otherwise(futureState_otherwise), $urlRouterProvider.otherwise = function(rule) {
                        if (angular.isString(rule)) {
                            var redirect = rule;
                            rule = function() {
                                return redirect
                            }
                        } else if (!angular.isFunction(rule)) throw new Error("'rule' must be a function");
                        return otherwiseFunc = ["$injector", "$location", rule], $urlRouterProvider
                    };
                    var serviceObject = {
                        getResolvePromise: function() {
                            return initPromise()
                        }
                    };
                    this.$get = ["$injector", "$state", "$q", "$rootScope", "$urlRouter", "$timeout", "$log", function($injector, $state, $q, $rootScope, $urlRouter, $timeout, $log) {
                        function init() {
                            if ($rootScope.$on("$stateNotFound", function(event, unfoundState, fromState, fromParams) {
                                    if (!lazyloadInProgress) {
                                        $log.debug("event, unfoundState, fromState, fromParams", event, unfoundState, fromState, fromParams);
                                        var futureState = findFutureState($state, {
                                            name: unfoundState.to
                                        });
                                        if (futureState) {
                                            event.preventDefault();
                                            var promise = lazyLoadState($injector, futureState);
                                            promise.then(function(states) {
                                                states.forEach(function(state) {
                                                    state && (!$state.get(state) || state.name && !$state.get(state.name)) && $stateProvider.state(state)
                                                }), $state.go(unfoundState.to, unfoundState.toParams), lazyloadInProgress = !1
                                            }, function(error) {
                                                console.log("failed to lazy load state ", error), $state.go(fromState, fromParams), lazyloadInProgress = !1
                                            })
                                        }
                                    }
                                }), !initPromise) {
                                var promises = [];
                                angular.forEach(resolveFunctions, function(promiseFn) {
                                    promises.push($injector.invoke(promiseFn))
                                }), initPromise = function() {
                                    return $q.all(promises)
                                }
                            }
                            initPromise().then(function() {
                                $timeout(function() {
                                    $state.transition ? $state.transition.then($urlRouter.sync, $urlRouter.sync) : $urlRouter.sync()
                                })
                            })
                        }
                        return init(), serviceObject.state = $stateProvider.state, serviceObject.futureState = provider.futureState, serviceObject.get = provider.get, serviceObject
                    }]
                }
                var app = angular.module("ct.ui.router.extras.future", ["ct.ui.router.extras.core"]);
                _futureStateProvider.$inject = ["$stateProvider", "$urlRouterProvider", "$urlMatcherFactoryProvider", "uirextras_coreProvider"], app.provider("$futureState", _futureStateProvider);
                var statesAddedQueue = {
                    state: function(state) {
                        statesAddedQueue.$rootScope && statesAddedQueue.$rootScope.$broadcast("$stateAdded", state)
                    },
                    itsNowRuntimeOhWhatAHappyDay: function($rootScope) {
                        statesAddedQueue.$rootScope = $rootScope
                    },
                    $rootScope: undefined
                };
                app.config(["$stateProvider", function($stateProvider) {
                    var realStateFn = $stateProvider.state;
                    $stateProvider.state = function() {
                        var val = realStateFn.apply($stateProvider, arguments),
                            state = angular.isObject(arguments[0]) ? arguments[0] : arguments[1];
                        return statesAddedQueue.state(state), val
                    }
                }]), app.run(["$futureState", function($futureState, $rootScope) {
                    statesAddedQueue.itsNowRuntimeOhWhatAHappyDay($rootScope)
                }])
            }(angular), angular.module("ct.ui.router.extras.previous", ["ct.ui.router.extras.core", "ct.ui.router.extras.transition"]).service("$previousState", ["$rootScope", "$state", function($rootScope, $state) {
                var previous = null,
                    lastPrevious = null,
                    memos = {};
                $rootScope.$on("$transitionStart", function(evt, $transition$) {
                    function commit() {
                        lastPrevious = null
                    }

                    function revert() {
                        previous = lastPrevious
                    }
                    var from = $transition$.from,
                        fromState = from.state && from.state.$$state && from.state.$$state();
                    fromState && fromState.navigable && (lastPrevious = previous, previous = $transition$.from), $transition$.promise.then(commit)["catch"](revert)
                });
                var $previousState = {
                    get: function(memoName) {
                        return memoName ? memos[memoName] : previous
                    },
                    go: function(memoName, options) {
                        var to = $previousState.get(memoName);
                        return $state.go(to.state, to.params, options)
                    },
                    memo: function(memoName, defaultStateName, defaultStateParams) {
                        memos[memoName] = previous || {
                            state: $state.get(defaultStateName),
                            params: defaultStateParams
                        }
                    },
                    forget: function(memoName) {
                        memoName ? delete memos[memoName] : previous = undefined
                    }
                };
                return $previousState
            }]), angular.module("ct.ui.router.extras.previous").run(["$previousState", function() {}]), angular.module("ct.ui.router.extras.transition", ["ct.ui.router.extras.core"]).config(["$provide", function($provide) {
                $provide.decorator("$state", ["$delegate", "$rootScope", "$q", "$injector", function($state, $rootScope, $q, $injector) {
                    function decorateInjector(tData) {
                        var oldinvoke = $injector.invoke,
                            oldinstantiate = $injector.instantiate;
                        return $injector.invoke = function(fn, self, locals) {
                                return oldinvoke(fn, self, angular.extend({
                                    $transition$: tData
                                }, locals))
                            }, $injector.instantiate = function(fn, locals) {
                                return oldinstantiate(fn, angular.extend({
                                    $transition$: tData
                                }, locals))
                            },
                            function() {
                                $injector.invoke = oldinvoke, $injector.instantiate = oldinstantiate
                            }
                    }

                    function popStack() {
                        restoreFnStack.pop()(), tDataStack.pop(), transitionDepth--
                    }

                    function transitionSuccess(deferred, tSuccess) {
                        return function(data) {
                            return popStack(), $rootScope.$broadcast("$transitionSuccess", tSuccess), deferred.resolve(data), data
                        }
                    }

                    function transitionFailure(deferred, tFail) {
                        return function(error) {
                            return popStack(), $rootScope.$broadcast("$transitionError", tFail, error), deferred.reject(error), $q.reject(error)
                        }
                    }
                    var $state_transitionTo = $state.transitionTo,
                        transitionDepth = -1,
                        tDataStack = [],
                        restoreFnStack = [];
                    return $state.transitionTo = function() {
                        var deferred = $q.defer(),
                            tData = tDataStack[++transitionDepth] = {
                                promise: deferred.promise
                            };
                        restoreFnStack[transitionDepth] = function() {};
                        var tPromise = $state_transitionTo.apply($state, arguments);
                        return tPromise.then(transitionSuccess(deferred, tData), transitionFailure(deferred, tData))
                    }, $rootScope.$on("$stateChangeStart", function(evt, toState, toParams, fromState, fromParams) {
                        var depth = transitionDepth,
                            tData = angular.extend(tDataStack[depth], {
                                to: {
                                    state: toState,
                                    params: toParams
                                },
                                from: {
                                    state: fromState,
                                    params: fromParams
                                }
                            }),
                            restoreFn = decorateInjector(tData);
                        restoreFnStack[depth] = restoreFn, $rootScope.$broadcast("$transitionStart", tData)
                    }), $state
                }])
            }]),
            function() {
                function stateVisDirective($state, $timeout, $interval) {
                    return {
                        scope: {
                            width: "@",
                            height: "@"
                        },
                        restrict: "AE",
                        template: "<svg></svg>",
                        link: function(_scope, _elem) {
                            function addStates(data) {
                                data = data.map(function(node) {
                                    return "" === node.name ? root : angular.copy(node)
                                }), angular.extend(stateMap, data.reduce(function(map, node) {
                                    return map[node.name] = node, map
                                }, {})), data.forEach(function(node) {
                                    var parentName = node.name.split(/\./).slice(0, -1).join("."),
                                        parent = node.name != parentName && stateMap[parentName];
                                    parent && ((parent.children || (parent.children = [])).push(node), node.px = parent.px, node.py = parent.py, nodes.push(node))
                                })
                            }

                            function update() {
                                function stateName(node) {
                                    var name = node.name.split(".").pop();
                                    return node.sticky && (name += " (STICKY)"), node.deepStateRedirect && (name += " (DSR)"), name
                                }
                                node = node.data(tree.nodes(root), function(d) {
                                    return d.name
                                }), link = link.data(tree.links(nodes), function(d) {
                                    return d.target.name
                                }), active = active.data(activeNode), nodes.forEach(function(d) {
                                    d.y = 70 * d.depth
                                });
                                var nodeEnter = node.enter();
                                active.enter().append("circle").attr("class", "active").attr("r", 13).attr("cx", function(d) {
                                    return d.parent.px || 100
                                }).attr("cy", function(d) {
                                    return d.parent.py || 100
                                }), nodeEnter.append("circle").attr("class", "node").attr("r", 9).attr("cx", function(d) {
                                    return d.parent.px
                                }).attr("cy", function(d) {
                                    return d.parent.py
                                }), nodeEnter.append("text").attr("class", "label").attr("x", function(d) {
                                    return d.parent.px
                                }).attr("y", function(d) {
                                    return d.parent.py
                                }).attr("text-anchor", function() {
                                    return "middle"
                                }).text(stateName).style("fill-opacity", 1), link.enter().insert("path", ".node").attr("class", "link").attr("d", function(d) {
                                    var o = {
                                        x: d.source.px,
                                        y: d.source.py
                                    };
                                    return diagonal({
                                        source: o,
                                        target: o
                                    })
                                });
                                var t = svg.transition().duration(transLength);
                                t.selectAll(".link").attr("d", diagonal);
                                var circleColors = {
                                    entered: "#AF0",
                                    exited: "#777",
                                    active: "#0f0",
                                    inactive: "#55F",
                                    future: "#009"
                                };
                                t.selectAll(".node").attr("cx", function(d) {
                                    return d.px = d.x
                                }).attr("cy", function(d) {
                                    return d.py = d.y
                                }).attr("r", function(d) {
                                    return "active" === d.status ? 15 : 10
                                }).style("fill", function(d) {
                                    return circleColors[d.status] || "#FFF"
                                }), t.selectAll(".label").attr("x", function(d) {
                                    return d.px = d.x
                                }).attr("y", function(d) {
                                    return d.py = d.y - 15
                                }).attr("transform", function(d) {
                                    return "rotate(-25 " + d.x + " " + d.y + ")"
                                }), t.selectAll(".active").attr("x", function(d) {
                                    return d.px = d.x
                                }).attr("y", function(d) {
                                    return d.py = d.y - 15
                                })
                            }
                            var stateMap = {},
                                width = _scope.width || 400,
                                height = _scope.height || 400,
                                tree = d3.layout.tree().size([width - 20, height - 20]).separation(function(a, b) {
                                    return a.parent == b.parent ? 10 : 25
                                }),
                                root = $state.get().filter(function(state) {
                                    return "" === state.name
                                })[0],
                                nodes = tree(root);
                            root.parent = root, root.px = root.x = width / 2, root.py = root.y = height / 2;
                            var activeNode = {};
                            activeNode.px = activeNode.x = root.px, activeNode.py = activeNode.y = root.py; {
                                var diagonal = d3.svg.diagonal(),
                                    svg = d3.select(_elem.find("svg")[0]).attr("width", width).attr("height", height).append("g").attr("transform", "translate(10, 10)"),
                                    node = svg.selectAll(".node"),
                                    link = svg.selectAll(".link"),
                                    active = svg.selectAll(".active"),
                                    updateInterval = 200,
                                    transLength = 200;
                                setInterval(update, updateInterval)
                            }
                            $interval(function() {
                                _scope.states = $state.get(), angular.forEach(nodes, function(n) {
                                    var s = $state.get(n.name);
                                    s && (n.status = s.status || "exited")
                                })
                            }, 250), _scope.$watchCollection("states", function(newval, oldval) {
                                var oldstates = (oldval || []).map(function(s) {
                                    return s.name
                                });
                                addStates((newval || []).filter(function(state) {
                                    return -1 == oldstates.indexOf(state.name)
                                }))
                            }), update(updateInterval)
                        }
                    }
                }
                var app = angular.module("ct.ui.router.extras.statevis", ["ct.ui.router.extras.core", "ct.ui.router.extras.sticky"]);
                app.directive("stateVis", ["$state", "$timeout", "$interval", stateVisDirective])
            }(), angular.module("ct.ui.router.extras", ["ct.ui.router.extras.core", "ct.ui.router.extras.dsr", "ct.ui.router.extras.future", "ct.ui.router.extras.previous", "ct.ui.router.extras.statevis", "ct.ui.router.extras.sticky", "ct.ui.router.extras.transition"])
    }(angular),
    function(window, angular, undefined) {
        "use strict";

        function isValidDottedPath(path) {
            return null != path && "" !== path && "hasOwnProperty" !== path && MEMBER_NAME_REGEX.test("." + path)
        }

        function lookupDottedPath(obj, path) {
            if (!isValidDottedPath(path)) throw $resourceMinErr("badmember", 'Dotted member path "@{0}" is invalid.', path);
            for (var keys = path.split("."), i = 0, ii = keys.length; ii > i && obj !== undefined; i++) {
                var key = keys[i];
                obj = null !== obj ? obj[key] : undefined
            }
            return obj
        }

        function shallowClearAndCopy(src, dst) {
            dst = dst || {}, angular.forEach(dst, function(value, key) {
                delete dst[key]
            });
            for (var key in src) !src.hasOwnProperty(key) || "$" === key.charAt(0) && "$" === key.charAt(1) || (dst[key] = src[key]);
            return dst
        }
        var $resourceMinErr = angular.$$minErr("$resource"),
            MEMBER_NAME_REGEX = /^(\.[a-zA-Z_$][0-9a-zA-Z_$]*)+$/;
        angular.module("ngResource", ["ng"]).factory("$resource", ["$http", "$q", function($http, $q) {
            function encodeUriSegment(val) {
                return encodeUriQuery(val, !0).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+")
            }

            function encodeUriQuery(val, pctEncodeSpaces) {
                return encodeURIComponent(val).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, pctEncodeSpaces ? "%20" : "+")
            }

            function Route(template, defaults) {
                this.template = template, this.defaults = defaults || {}, this.urlParams = {}
            }

            function resourceFactory(url, paramDefaults, actions) {
                function extractParams(data, actionParams) {
                    var ids = {};
                    return actionParams = extend({}, paramDefaults, actionParams), forEach(actionParams, function(value, key) {
                        isFunction(value) && (value = value()), ids[key] = value && value.charAt && "@" == value.charAt(0) ? lookupDottedPath(data, value.substr(1)) : value
                    }), ids
                }

                function defaultResponseInterceptor(response) {
                    return response.resource
                }

                function Resource(value) {
                    shallowClearAndCopy(value || {}, this)
                }
                var route = new Route(url);
                return actions = extend({}, DEFAULT_ACTIONS, actions), forEach(actions, function(action, name) {
                    var hasBody = /^(POST|PUT|PATCH)$/i.test(action.method);
                    Resource[name] = function(a1, a2, a3, a4) {
                        var data, success, error, params = {};
                        switch (arguments.length) {
                            case 4:
                                error = a4, success = a3;
                            case 3:
                            case 2:
                                if (!isFunction(a2)) {
                                    params = a1, data = a2, success = a3;
                                    break
                                }
                                if (isFunction(a1)) {
                                    success = a1, error = a2;
                                    break
                                }
                                success = a2, error = a3;
                            case 1:
                                isFunction(a1) ? success = a1 : hasBody ? data = a1 : params = a1;
                                break;
                            case 0:
                                break;
                            default:
                                throw $resourceMinErr("badargs", "Expected up to 4 arguments [params, data, success, error], got {0} arguments", arguments.length)
                        }
                        var isInstanceCall = this instanceof Resource,
                            value = isInstanceCall ? data : action.isArray ? [] : new Resource(data),
                            httpConfig = {},
                            responseInterceptor = action.interceptor && action.interceptor.response || defaultResponseInterceptor,
                            responseErrorInterceptor = action.interceptor && action.interceptor.responseError || undefined;
                        forEach(action, function(value, key) {
                            "params" != key && "isArray" != key && "interceptor" != key && (httpConfig[key] = copy(value))
                        }), hasBody && (httpConfig.data = data), route.setUrlParams(httpConfig, extend({}, extractParams(data, action.params || {}), params), action.url);
                        var promise = $http(httpConfig).then(function(response) {
                            var data = response.data,
                                promise = value.$promise;
                            if (data) {
                                if (angular.isArray(data) !== !!action.isArray) throw $resourceMinErr("badcfg", "Error in resource configuration. Expected response to contain an {0} but got an {1}", action.isArray ? "array" : "object", angular.isArray(data) ? "array" : "object");
                                action.isArray ? (value.length = 0, forEach(data, function(item) {
                                    value.push("object" == typeof item ? new Resource(item) : item)
                                })) : (shallowClearAndCopy(data, value), value.$promise = promise)
                            }
                            return value.$resolved = !0, response.resource = value, response
                        }, function(response) {
                            return value.$resolved = !0, (error || noop)(response), $q.reject(response)
                        });
                        return promise = promise.then(function(response) {
                            var value = responseInterceptor(response);
                            return (success || noop)(value, response.headers), value
                        }, responseErrorInterceptor), isInstanceCall ? promise : (value.$promise = promise, value.$resolved = !1, value)
                    }, Resource.prototype["$" + name] = function(params, success, error) {
                        isFunction(params) && (error = success, success = params, params = {});
                        var result = Resource[name].call(this, params, this, success, error);
                        return result.$promise || result
                    }
                }), Resource.bind = function(additionalParamDefaults) {
                    return resourceFactory(url, extend({}, paramDefaults, additionalParamDefaults), actions)
                }, Resource
            }
            var DEFAULT_ACTIONS = {
                    get: {
                        method: "GET"
                    },
                    save: {
                        method: "POST"
                    },
                    query: {
                        method: "GET",
                        isArray: !0
                    },
                    remove: {
                        method: "DELETE"
                    },
                    "delete": {
                        method: "DELETE"
                    }
                },
                noop = angular.noop,
                forEach = angular.forEach,
                extend = angular.extend,
                copy = angular.copy,
                isFunction = angular.isFunction;
            return Route.prototype = {
                setUrlParams: function(config, params, actionUrl) {
                    var val, encodedVal, self = this,
                        url = actionUrl || self.template,
                        urlParams = self.urlParams = {};
                    forEach(url.split(/\W/), function(param) {
                        if ("hasOwnProperty" === param) throw $resourceMinErr("badname", "hasOwnProperty is not a valid parameter name.");
                        !new RegExp("^\\d+$").test(param) && param && new RegExp("(^|[^\\\\]):" + param + "(\\W|$)").test(url) && (urlParams[param] = !0)
                    }), url = url.replace(/\\:/g, ":"), params = params || {}, forEach(self.urlParams, function(_, urlParam) {
                        val = params.hasOwnProperty(urlParam) ? params[urlParam] : self.defaults[urlParam], angular.isDefined(val) && null !== val ? (encodedVal = encodeUriSegment(val), url = url.replace(new RegExp(":" + urlParam + "(\\W|$)", "g"), function(match, p1) {
                            return encodedVal + p1
                        })) : url = url.replace(new RegExp("(/?):" + urlParam + "(\\W|$)", "g"), function(match, leadingSlashes, tail) {
                            return "/" == tail.charAt(0) ? tail : leadingSlashes + tail
                        })
                    }), url = url.replace(/\/+$/, "") || "/", url = url.replace(/\/\.(?=\w+($|\?))/, "."), config.url = url.replace(/\/\\\./, "/."), forEach(params, function(value, key) {
                        self.urlParams[key] || (config.params = config.params || {}, config.params[key] = value)
                    })
                }
            }, resourceFactory
        }])
    }(window, window.angular),
    function(window, angular) {
        "use strict";

        function makeSwipeDirective(directiveName, direction, eventName) {
            ngTouch.directive(directiveName, ["$parse", "$swipe", function($parse, $swipe) {
                var MAX_VERTICAL_DISTANCE = 75,
                    MAX_VERTICAL_RATIO = .3,
                    MIN_HORIZONTAL_DISTANCE = 30;
                return function(scope, element, attr) {
                    function validSwipe(coords) {
                        if (!startCoords) return !1;
                        var deltaY = Math.abs(coords.y - startCoords.y),
                            deltaX = (coords.x - startCoords.x) * direction;
                        return valid && MAX_VERTICAL_DISTANCE > deltaY && deltaX > 0 && deltaX > MIN_HORIZONTAL_DISTANCE && MAX_VERTICAL_RATIO > deltaY / deltaX
                    }
                    var startCoords, valid, swipeHandler = $parse(attr[directiveName]);
                    $swipe.bind(element, {
                        start: function(coords) {
                            startCoords = coords, valid = !0
                        },
                        cancel: function() {
                            valid = !1
                        },
                        end: function(coords, event) {
                            validSwipe(coords) && scope.$apply(function() {
                                element.triggerHandler(eventName), swipeHandler(scope, {
                                    $event: event
                                })
                            })
                        }
                    })
                }
            }])
        }
        var ngTouch = angular.module("ngTouch", []);
        ngTouch.factory("$swipe", [function() {
            function getCoordinates(event) {
                var touches = event.touches && event.touches.length ? event.touches : [event],
                    e = event.changedTouches && event.changedTouches[0] || event.originalEvent && event.originalEvent.changedTouches && event.originalEvent.changedTouches[0] || touches[0].originalEvent || touches[0];
                return {
                    x: e.clientX,
                    y: e.clientY
                }
            }
            var MOVE_BUFFER_RADIUS = 10;
            return {
                bind: function(element, eventHandlers) {
                    var totalX, totalY, startCoords, lastPos, active = !1;
                    element.on("touchstart mousedown", function(event) {
                        startCoords = getCoordinates(event), active = !0, totalX = 0, totalY = 0, lastPos = startCoords, eventHandlers.start && eventHandlers.start(startCoords, event)
                    }), element.on("touchcancel", function(event) {
                        active = !1, eventHandlers.cancel && eventHandlers.cancel(event)
                    }), element.on("touchmove mousemove", function(event) {
                        if (active && startCoords) {
                            var coords = getCoordinates(event);
                            if (totalX += Math.abs(coords.x - lastPos.x), totalY += Math.abs(coords.y - lastPos.y), lastPos = coords, !(MOVE_BUFFER_RADIUS > totalX && MOVE_BUFFER_RADIUS > totalY)) return totalY > totalX ? (active = !1, void(eventHandlers.cancel && eventHandlers.cancel(event))) : (event.preventDefault(), void(eventHandlers.move && eventHandlers.move(coords, event)))
                        }
                    }), element.on("touchend mouseup", function(event) {
                        active && (active = !1, eventHandlers.end && eventHandlers.end(getCoordinates(event), event))
                    })
                }
            }
        }]), ngTouch.config(["$provide", function($provide) {
            $provide.decorator("ngClickDirective", ["$delegate", function($delegate) {
                return $delegate.shift(), $delegate
            }])
        }]), ngTouch.directive("ngClick", ["$parse", "$timeout", "$rootElement", function($parse, $timeout, $rootElement) {
            function hit(x1, y1, x2, y2) {
                return Math.abs(x1 - x2) < CLICKBUSTER_THRESHOLD && Math.abs(y1 - y2) < CLICKBUSTER_THRESHOLD
            }

            function checkAllowableRegions(touchCoordinates, x, y) {
                for (var i = 0; i < touchCoordinates.length; i += 2)
                    if (hit(touchCoordinates[i], touchCoordinates[i + 1], x, y)) return touchCoordinates.splice(i, i + 2), !0;
                return !1
            }

            function onClick(event) {
                if (!(Date.now() - lastPreventedTime > PREVENT_DURATION)) {
                    var touches = event.touches && event.touches.length ? event.touches : [event],
                        x = touches[0].clientX,
                        y = touches[0].clientY;
                    1 > x && 1 > y || lastLabelClickCoordinates && lastLabelClickCoordinates[0] === x && lastLabelClickCoordinates[1] === y || (lastLabelClickCoordinates && (lastLabelClickCoordinates = null), "label" === event.target.tagName.toLowerCase() && (lastLabelClickCoordinates = [x, y]), checkAllowableRegions(touchCoordinates, x, y) || (event.stopPropagation(), event.preventDefault(), event.target && event.target.blur()))
                }
            }

            function onTouchStart(event) {
                var touches = event.touches && event.touches.length ? event.touches : [event],
                    x = touches[0].clientX,
                    y = touches[0].clientY;
                touchCoordinates.push(x, y), $timeout(function() {
                    for (var i = 0; i < touchCoordinates.length; i += 2)
                        if (touchCoordinates[i] == x && touchCoordinates[i + 1] == y) return void touchCoordinates.splice(i, i + 2)
                }, PREVENT_DURATION, !1)
            }

            function preventGhostClick(x, y) {
                touchCoordinates || ($rootElement[0].addEventListener("click", onClick, !0), $rootElement[0].addEventListener("touchstart", onTouchStart, !0), touchCoordinates = []), lastPreventedTime = Date.now(), checkAllowableRegions(touchCoordinates, x, y)
            }
            var lastPreventedTime, touchCoordinates, lastLabelClickCoordinates, TAP_DURATION = 750,
                MOVE_TOLERANCE = 12,
                PREVENT_DURATION = 2500,
                CLICKBUSTER_THRESHOLD = 25,
                ACTIVE_CLASS_NAME = "ng-click-active";
            return function(scope, element, attr) {
                function resetState() {
                    tapping = !1, element.removeClass(ACTIVE_CLASS_NAME)
                }
                var tapElement, startTime, touchStartX, touchStartY, clickHandler = $parse(attr.ngClick),
                    tapping = !1;
                element.on("touchstart", function(event) {
                    tapping = !0, tapElement = event.target ? event.target : event.srcElement, 3 == tapElement.nodeType && (tapElement = tapElement.parentNode), element.addClass(ACTIVE_CLASS_NAME), startTime = Date.now();
                    var touches = event.touches && event.touches.length ? event.touches : [event],
                        e = touches[0].originalEvent || touches[0];
                    touchStartX = e.clientX, touchStartY = e.clientY
                }), element.on("touchmove", function() {
                    resetState()
                }), element.on("touchcancel", function() {
                    resetState()
                }), element.on("touchend", function(event) {
                    var diff = Date.now() - startTime,
                        touches = event.changedTouches && event.changedTouches.length ? event.changedTouches : event.touches && event.touches.length ? event.touches : [event],
                        e = touches[0].originalEvent || touches[0],
                        x = e.clientX,
                        y = e.clientY,
                        dist = Math.sqrt(Math.pow(x - touchStartX, 2) + Math.pow(y - touchStartY, 2));
                    tapping && TAP_DURATION > diff && MOVE_TOLERANCE > dist && (preventGhostClick(x, y), tapElement && tapElement.blur(), angular.isDefined(attr.disabled) && attr.disabled !== !1 || element.triggerHandler("click", [event])), resetState()
                }), element.onclick = function() {}, element.on("click", function(event, touchend) {
                    scope.$apply(function() {
                        clickHandler(scope, {
                            $event: touchend || event
                        })
                    })
                }), element.on("mousedown", function() {
                    element.addClass(ACTIVE_CLASS_NAME)
                }), element.on("mousemove mouseup", function() {
                    element.removeClass(ACTIVE_CLASS_NAME)
                })
            }
        }]), makeSwipeDirective("ngSwipeLeft", -1, "swipeleft"), makeSwipeDirective("ngSwipeRight", 1, "swiperight")
    }(window, window.angular),
    function() {
        var $ = jQuery,
            LightboxOptions = function() {
                function LightboxOptions() {
                    this.fadeDuration = 500, this.fitImagesInViewport = !0, this.resizeDuration = 700, this.positionFromTop = 50, this.showImageNumberLabel = !0, this.alwaysShowNavOnTouchDevices = !1, this.wrapAround = !1
                }
                return LightboxOptions.prototype.albumLabel = function(curImageNum, albumSize) {
                    return "Image " + curImageNum + " of " + albumSize
                }, LightboxOptions
            }(),
            Lightbox = function() {
                function Lightbox(options) {
                    this.options = options, this.album = [], this.currentImageIndex = void 0, this.init()
                }
                return Lightbox.prototype.init = function() {
                    this.enable(), this.build()
                }, Lightbox.prototype.enable = function() {
                    var self = this;
                    $("body").on("click", "a[rel^=lightbox], area[rel^=lightbox], a[data-lightbox], area[data-lightbox]", function(event) {
                        return self.start($(event.currentTarget)), !1
                    })
                }, Lightbox.prototype.build = function() {
                    var self = this;
                    $("<div id='lightboxOverlay' class='lightboxOverlay'></div><div id='lightbox' class='lightbox'><div class='lb-dataContainer'><div class='lb-data'><div class='lb-details'><span class='lb-caption'></span><span class='lb-number'></span></div><div class='lb-closeContainer'><a class='lb-close'></a></div></div></div><div class='lb-outerContainer'><div class='lb-container'><img class='lb-image' src='' /><div class='lb-nav'><a class='lb-prev' href='' ></a><a class='lb-next' href='' ></a></div><div class='lb-loader'><a class='lb-cancel'></a></div></div></div></div>").appendTo($("body")), this.$lightbox = $("#lightbox"), this.$overlay = $("#lightboxOverlay"), this.$outerContainer = this.$lightbox.find(".lb-outerContainer"), this.$container = this.$lightbox.find(".lb-container"), this.containerTopPadding = parseInt(this.$container.css("padding-top"), 10), this.containerRightPadding = parseInt(this.$container.css("padding-right"), 10), this.containerBottomPadding = parseInt(this.$container.css("padding-bottom"), 10), this.containerLeftPadding = parseInt(this.$container.css("padding-left"), 10), this.$overlay.hide().on("click", function() {
                        return self.end(), !1
                    }), this.$lightbox.hide().on("click", function(event) {
                        return "lightbox" === $(event.target).attr("id") && self.end(), !1
                    }), this.$outerContainer.on("click", function(event) {
                        return "lightbox" === $(event.target).attr("id") && self.end(), !1
                    }), this.$lightbox.find(".lb-prev").on("click", function() {
                        return self.changeImage(0 === self.currentImageIndex ? self.album.length - 1 : self.currentImageIndex - 1), !1
                    }), this.$lightbox.find(".lb-next").on("click", function() {
                        return self.changeImage(self.currentImageIndex === self.album.length - 1 ? 0 : self.currentImageIndex + 1), !1
                    }), this.$lightbox.find(".lb-loader, .lb-close").on("click", function() {
                        return self.end(), !1
                    })
                }, Lightbox.prototype.start = function($link) {
                    function addToAlbum($link) {
                        self.album.push({
                            link: $link.attr("href"),
                            title: $link.attr("data-title") || $link.attr("title")
                        })
                    }
                    var self = this,
                        $window = $(window);
                    $window.on("resize", $.proxy(this.sizeOverlay, this)), $("select, object, embed").css({
                        visibility: "hidden"
                    }), this.sizeOverlay(), this.album = [];
                    var $links, imageNumber = 0,
                        dataLightboxValue = $link.attr("data-lightbox");
                    if (dataLightboxValue) {
                        $links = $($link.prop("tagName") + '[data-lightbox="' + dataLightboxValue + '"]');
                        for (var i = 0; i < $links.length; i = ++i) addToAlbum($($links[i])), $links[i] === $link[0] && (imageNumber = i)
                    } else if ("lightbox" === $link.attr("rel")) addToAlbum($link);
                    else {
                        $links = $($link.prop("tagName") + '[rel="' + $link.attr("rel") + '"]');
                        for (var j = 0; j < $links.length; j = ++j) addToAlbum($($links[j])), $links[j] === $link[0] && (imageNumber = j)
                    }
                    var top = $window.scrollTop() + this.options.positionFromTop,
                        left = $window.scrollLeft();
                    this.$lightbox.css({
                        top: top + "px",
                        left: left + "px"
                    }).fadeIn(this.options.fadeDuration), this.changeImage(imageNumber)
                }, Lightbox.prototype.changeImage = function(imageNumber) {
                    var self = this;
                    this.disableKeyboardNav();
                    var $image = this.$lightbox.find(".lb-image");
                    this.$overlay.fadeIn(this.options.fadeDuration), $(".lb-loader").fadeIn("slow"), this.$lightbox.find(".lb-image, .lb-nav, .lb-prev, .lb-next, .lb-dataContainer, .lb-numbers, .lb-caption").hide(), this.$outerContainer.addClass("animating");
                    var preloader = new Image;
                    preloader.onload = function() {
                        var $preloader, imageHeight, imageWidth, maxImageHeight, maxImageWidth, windowHeight, windowWidth;
                        $image.attr("src", self.album[imageNumber].link), $preloader = $(preloader), $image.width(preloader.width), $image.height(preloader.height), self.options.fitImagesInViewport && (windowWidth = $(window).width(), windowHeight = $(window).height(), maxImageWidth = windowWidth - self.containerLeftPadding - self.containerRightPadding - 20, maxImageHeight = windowHeight - self.containerTopPadding - self.containerBottomPadding - 120, (preloader.width > maxImageWidth || preloader.height > maxImageHeight) && (preloader.width / maxImageWidth > preloader.height / maxImageHeight ? (imageWidth = maxImageWidth, imageHeight = parseInt(preloader.height / (preloader.width / imageWidth), 10), $image.width(imageWidth), $image.height(imageHeight)) : (imageHeight = maxImageHeight, imageWidth = parseInt(preloader.width / (preloader.height / imageHeight), 10), $image.width(imageWidth), $image.height(imageHeight)))), self.sizeContainer($image.width(), $image.height())
                    }, preloader.src = this.album[imageNumber].link, this.currentImageIndex = imageNumber
                }, Lightbox.prototype.sizeOverlay = function() {
                    this.$overlay.width($(window).width()).height($(document).height())
                }, Lightbox.prototype.sizeContainer = function(imageWidth, imageHeight) {
                    function postResize() {
                        self.$lightbox.find(".lb-dataContainer").width(newWidth), self.$lightbox.find(".lb-prevLink").height(newHeight), self.$lightbox.find(".lb-nextLink").height(newHeight), self.showImage()
                    }
                    var self = this,
                        oldWidth = this.$outerContainer.outerWidth(),
                        oldHeight = this.$outerContainer.outerHeight(),
                        newWidth = imageWidth + this.containerLeftPadding + this.containerRightPadding,
                        newHeight = imageHeight + this.containerTopPadding + this.containerBottomPadding;
                    oldWidth !== newWidth || oldHeight !== newHeight ? this.$outerContainer.animate({
                        width: newWidth,
                        height: newHeight
                    }, this.options.resizeDuration, "swing", function() {
                        postResize()
                    }) : postResize()
                }, Lightbox.prototype.showImage = function() {
                    this.$lightbox.find(".lb-loader").hide(), this.$lightbox.find(".lb-image").fadeIn("slow"), this.updateNav(), this.updateDetails(), this.preloadNeighboringImages(), this.enableKeyboardNav()
                }, Lightbox.prototype.updateNav = function() {
                    var alwaysShowNav = !1;
                    try {
                        document.createEvent("TouchEvent"), alwaysShowNav = this.options.alwaysShowNavOnTouchDevices ? !0 : !1
                    } catch (e) {}
                    this.$lightbox.find(".lb-nav").show(), this.album.length > 1 && (this.options.wrapAround ? (alwaysShowNav && this.$lightbox.find(".lb-prev, .lb-next").css("opacity", "1"), this.$lightbox.find(".lb-prev, .lb-next").show()) : (this.currentImageIndex > 0 && (this.$lightbox.find(".lb-prev").show(), alwaysShowNav && this.$lightbox.find(".lb-prev").css("opacity", "1")), this.currentImageIndex < this.album.length - 1 && (this.$lightbox.find(".lb-next").show(), alwaysShowNav && this.$lightbox.find(".lb-next").css("opacity", "1"))))
                }, Lightbox.prototype.updateDetails = function() {
                    var self = this;
                    "undefined" != typeof this.album[this.currentImageIndex].title && "" !== this.album[this.currentImageIndex].title && this.$lightbox.find(".lb-caption").html(this.album[this.currentImageIndex].title).fadeIn("fast").find("a").on("click", function() {
                        location.href = $(this).attr("href")
                    }), this.album.length > 1 && this.options.showImageNumberLabel ? this.$lightbox.find(".lb-number").text(this.options.albumLabel(this.currentImageIndex + 1, this.album.length)).fadeIn("fast") : this.$lightbox.find(".lb-number").hide(), this.$outerContainer.removeClass("animating"), this.$lightbox.find(".lb-dataContainer").fadeIn(this.options.resizeDuration, function() {
                        return self.sizeOverlay()
                    })
                }, Lightbox.prototype.preloadNeighboringImages = function() {
                    if (this.album.length > this.currentImageIndex + 1) {
                        var preloadNext = new Image;
                        preloadNext.src = this.album[this.currentImageIndex + 1].link
                    }
                    if (this.currentImageIndex > 0) {
                        var preloadPrev = new Image;
                        preloadPrev.src = this.album[this.currentImageIndex - 1].link
                    }
                }, Lightbox.prototype.enableKeyboardNav = function() {
                    $(document).on("keyup.keyboard", $.proxy(this.keyboardAction, this))
                }, Lightbox.prototype.disableKeyboardNav = function() {
                    $(document).off(".keyboard")
                }, Lightbox.prototype.keyboardAction = function(event) {
                    var KEYCODE_ESC = 27,
                        KEYCODE_LEFTARROW = 37,
                        KEYCODE_RIGHTARROW = 39,
                        keycode = event.keyCode,
                        key = String.fromCharCode(keycode).toLowerCase();
                    keycode === KEYCODE_ESC || key.match(/x|o|c/) ? this.end() : "p" === key || keycode === KEYCODE_LEFTARROW ? 0 !== this.currentImageIndex ? this.changeImage(this.currentImageIndex - 1) : this.options.wrapAround && this.album.length > 1 && this.changeImage(this.album.length - 1) : ("n" === key || keycode === KEYCODE_RIGHTARROW) && (this.currentImageIndex !== this.album.length - 1 ? this.changeImage(this.currentImageIndex + 1) : this.options.wrapAround && this.album.length > 1 && this.changeImage(0))
                }, Lightbox.prototype.end = function() {
                    this.disableKeyboardNav(), $(window).off("resize", this.sizeOverlay), this.$lightbox.fadeOut(this.options.fadeDuration), this.$overlay.fadeOut(this.options.fadeDuration), $("select, object, embed").css({
                        visibility: "visible"
                    })
                }, Lightbox
            }();
        $(function() {
            {
                var options = new LightboxOptions;
                new Lightbox(options)
            }
        })
    }.call(this),
    function(window, $) {
        "use strict";
        var EXCESS_ROWS = 6,
            SCROLL_THRESHOLD = 4,
            ASC = "asc",
            DESC = "desc",
            NG_FIELD = "_ng_field_",
            NG_DEPTH = "_ng_depth_",
            NG_HIDDEN = "_ng_hidden_",
            NG_COLUMN = "_ng_column_",
            CUSTOM_FILTERS = /CUSTOM_FILTERS/g,
            COL_FIELD = /COL_FIELD/g,
            DISPLAY_CELL_TEMPLATE = /DISPLAY_CELL_TEMPLATE/g,
            EDITABLE_CELL_TEMPLATE = /EDITABLE_CELL_TEMPLATE/g,
            CELL_EDITABLE_CONDITION = /CELL_EDITABLE_CONDITION/g,
            TEMPLATE_REGEXP = /<.+>/,
            FUNC_REGEXP = /(\([^)]*\))?$/,
            DOT_REGEXP = /\./g,
            APOS_REGEXP = /'/g,
            BRACKET_REGEXP = /^(.*)((?:\s*\[\s*\d+\s*\]\s*)|(?:\s*\[\s*"(?:[^"\\]|\\.)*"\s*\]\s*)|(?:\s*\[\s*'(?:[^'\\]|\\.)*'\s*\]\s*))(.*)$/;
        window.ngGrid = {}, window.ngGrid.i18n = {};
        var ngGridDirectives = (angular.module("ngGrid.services", []), angular.module("ngGrid.directives", [])),
            ngGridFilters = angular.module("ngGrid.filters", []);
        angular.module("ngGrid", ["ngGrid.services", "ngGrid.directives", "ngGrid.filters"]);
        var ngMoveSelectionHandler = function($scope, elm, evt, grid) {
            if (void 0 === $scope.selectionProvider.selectedItems) return !0;
            var newColumnIndex, charCode = evt.which || evt.keyCode,
                lastInRow = !1,
                firstInRow = !1,
                rowIndex = void 0 === $scope.selectionProvider.lastClickedRow ? 1 : $scope.selectionProvider.lastClickedRow.rowIndex,
                visibleCols = $scope.columns.filter(function(c) {
                    return c.visible && c.width > 0
                }),
                pinnedCols = $scope.columns.filter(function(c) {
                    return c.pinned
                });
            if ($scope.col && (newColumnIndex = visibleCols.indexOf($scope.col)), 37 !== charCode && 38 !== charCode && 39 !== charCode && 40 !== charCode && (grid.config.noTabInterference || 9 !== charCode) && 13 !== charCode) return !0;
            if ($scope.enableCellSelection) {
                9 === charCode && evt.preventDefault();
                var focusedOnFirstColumn = $scope.showSelectionCheckbox ? 1 === newColumnIndex : 0 === newColumnIndex,
                    focusedOnFirstVisibleColumns = 1 === newColumnIndex || 0 === newColumnIndex,
                    focusedOnLastVisibleColumns = newColumnIndex === visibleCols.length - 1 || newColumnIndex === visibleCols.length - 2,
                    focusedOnLastColumn = visibleCols.indexOf($scope.col) === visibleCols.length - 1,
                    focusedOnLastPinnedColumn = pinnedCols.indexOf($scope.col) === pinnedCols.length - 1;
                if (37 === charCode || 9 === charCode && evt.shiftKey) {
                    var scrollTo = 0;
                    focusedOnFirstColumn || (newColumnIndex -= 1), focusedOnFirstVisibleColumns ? focusedOnFirstColumn && 9 === charCode && evt.shiftKey ? (scrollTo = grid.$canvas.width(), newColumnIndex = visibleCols.length - 1, firstInRow = !0) : scrollTo = grid.$viewport.scrollLeft() - $scope.col.width : pinnedCols.length > 0 && (scrollTo = grid.$viewport.scrollLeft() - visibleCols[newColumnIndex].width), grid.$viewport.scrollLeft(scrollTo)
                } else(39 === charCode || 9 === charCode && !evt.shiftKey) && (focusedOnLastVisibleColumns ? focusedOnLastColumn && 9 === charCode && !evt.shiftKey ? (grid.$viewport.scrollLeft(0), newColumnIndex = $scope.showSelectionCheckbox ? 1 : 0, lastInRow = !0) : grid.$viewport.scrollLeft(grid.$viewport.scrollLeft() + $scope.col.width) : focusedOnLastPinnedColumn && grid.$viewport.scrollLeft(0), focusedOnLastColumn || (newColumnIndex += 1))
            }
            var items;
            items = $scope.configGroups.length > 0 ? grid.rowFactory.parsedData.filter(function(row) {
                return !row.isAggRow
            }) : grid.filteredRows;
            var offset = 0;
            if (0 !== rowIndex && (38 === charCode || 13 === charCode && evt.shiftKey || 9 === charCode && evt.shiftKey && firstInRow) ? offset = -1 : rowIndex !== items.length - 1 && (40 === charCode || 13 === charCode && !evt.shiftKey || 9 === charCode && lastInRow) && (offset = 1), offset) {
                var r = items[rowIndex + offset];
                r.beforeSelectionChange(r, evt) && (r.continueSelection(evt), $scope.$emit("ngGridEventDigestGridParent"), $scope.selectionProvider.lastClickedRow.renderedRowIndex >= $scope.renderedRows.length - EXCESS_ROWS - 2 ? grid.$viewport.scrollTop(grid.$viewport.scrollTop() + $scope.rowHeight) : $scope.selectionProvider.lastClickedRow.renderedRowIndex <= EXCESS_ROWS + 2 && grid.$viewport.scrollTop(grid.$viewport.scrollTop() - $scope.rowHeight))
            }
            return $scope.enableCellSelection && setTimeout(function() {
                $scope.domAccessProvider.focusCellElement($scope, $scope.renderedColumns.indexOf(visibleCols[newColumnIndex]))
            }, 3), !1
        };
        String.prototype.trim || (String.prototype.trim = function() {
            return this.replace(/^\s+|\s+$/g, "")
        }), Array.prototype.indexOf || (Array.prototype.indexOf = function(elt) {
            var len = this.length >>> 0,
                from = Number(arguments[1]) || 0;
            for (from = 0 > from ? Math.ceil(from) : Math.floor(from), 0 > from && (from += len); len > from; from++)
                if (from in this && this[from] === elt) return from;
            return -1
        }), Array.prototype.filter || (Array.prototype.filter = function(fun) {
            var t = Object(this),
                len = t.length >>> 0;
            if ("function" != typeof fun) throw new TypeError;
            for (var res = [], thisp = arguments[1], i = 0; len > i; i++)
                if (i in t) {
                    var val = t[i];
                    fun.call(thisp, val, i, t) && res.push(val)
                }
            return res
        }), ngGridFilters.filter("checkmark", function() {
            return function(input) {
                return input ? "âœ”" : "âœ˜"
            }
        }), ngGridFilters.filter("ngColumns", function() {
            return function(input) {
                return input.filter(function(col) {
                    return !col.isAggCol
                })
            }
        }), angular.module("ngGrid.services").factory("$domUtilityService", ["$utilityService", "$window", function($utils, $window) {
            var domUtilityService = {},
                regexCache = {},
                getWidths = function() {
                    var $testContainer = $("<div></div>");
                    $testContainer.appendTo("body"), $testContainer.height(100).width(100).css("position", "absolute").css("overflow", "scroll"), $testContainer.append('<div style="height: 400px; width: 400px;"></div>'), domUtilityService.ScrollH = $testContainer.height() - $testContainer[0].clientHeight, domUtilityService.ScrollW = $testContainer.width() - $testContainer[0].clientWidth, $testContainer.empty(), $testContainer.attr("style", ""), $testContainer.append('<span style="font-family: Verdana, Helvetica, Sans-Serif; font-size: 14px;"><strong>M</strong></span>'), domUtilityService.LetterW = $testContainer.children().first().width(), $testContainer.remove()
                };
            return domUtilityService.eventStorage = {}, domUtilityService.AssignGridContainers = function($scope, rootEl, grid) {
                grid.$root = $(rootEl), grid.$topPanel = grid.$root.find(".ngTopPanel"), grid.$groupPanel = grid.$root.find(".ngGroupPanel"), grid.$headerContainer = grid.$topPanel.find(".ngHeaderContainer"), $scope.$headerContainer = grid.$headerContainer, grid.$headerScroller = grid.$topPanel.find(".ngHeaderScroller"), grid.$headers = grid.$headerScroller.children(), grid.$viewport = grid.$root.find(".ngViewport"), grid.$canvas = grid.$viewport.find(".ngCanvas"), grid.$footerPanel = grid.$root.find(".ngFooterPanel");
                var scopeDereg = $scope.$watch(function() {
                    return grid.$viewport.scrollLeft()
                }, function(newLeft) {
                    return grid.$headerContainer.scrollLeft(newLeft)
                });
                $scope.$on("$destroy", function() {
                    grid.$root && ($(grid.$root.parent()).off("resize.nggrid"), grid.$root = null, grid.$topPanel = null, grid.$headerContainer = null, grid.$headers = null, grid.$canvas = null, grid.$footerPanel = null), scopeDereg()
                }), domUtilityService.UpdateGridLayout($scope, grid)
            }, domUtilityService.getRealWidth = function(obj) {
                var width = 0,
                    props = {
                        visibility: "hidden",
                        display: "block"
                    },
                    hiddenParents = obj.parents().andSelf().not(":visible");
                return $.swap(hiddenParents[0], props, function() {
                    width = obj.outerWidth()
                }), width
            }, domUtilityService.UpdateGridLayout = function($scope, grid) {
                if (grid.$root) {
                    var scrollTop = grid.$viewport.scrollTop();
                    grid.elementDims.rootMaxW = grid.$root.width(), grid.$root.is(":hidden") && (grid.elementDims.rootMaxW = domUtilityService.getRealWidth(grid.$root)), grid.elementDims.rootMaxH = grid.$root.height(), grid.refreshDomSizes(), $scope.adjustScrollTop(scrollTop, !0)
                }
            }, domUtilityService.numberOfGrids = 0, domUtilityService.setStyleText = function(grid, css) {
                var style = grid.styleSheet,
                    gridId = grid.gridId,
                    doc = $window.document;
                style || (style = doc.getElementById(gridId)), style || (style = doc.createElement("style"), style.type = "text/css", style.id = gridId, (doc.head || doc.getElementsByTagName("head")[0]).appendChild(style)), style.styleSheet && !style.sheet ? style.styleSheet.cssText = css : style.innerHTML = css, grid.styleSheet = style, grid.styleText = css
            }, domUtilityService.BuildStyles = function($scope, grid, digest) {
                var css, rowHeight = grid.config.rowHeight,
                    gridId = grid.gridId,
                    cols = $scope.columns,
                    sumWidth = 0,
                    trw = $scope.totalRowWidth();
                css = "." + gridId + " .ngCanvas { width: " + trw + "px; }." + gridId + " .ngRow { width: " + trw + "px; }." + gridId + " .ngCanvas { width: " + trw + "px; }." + gridId + " .ngHeaderScroller { width: " + (trw + domUtilityService.ScrollH) + "px}";
                for (var i = 0; i < cols.length; i++) {
                    var col = cols[i];
                    if (col.visible !== !1) {
                        var rightPad = 0;
                        i === cols.length - 1 && sumWidth + col.width < grid.elementDims.rootMaxW && (rightPad = grid.elementDims.rootMaxW - sumWidth - col.width), css += "." + gridId + " .col" + i + " { width: " + (col.width + rightPad) + "px; left: " + sumWidth + "px; height: " + rowHeight + "px }." + gridId + " .colt" + i + " { width: " + (col.width + rightPad) + "px; }", sumWidth += col.width
                    }
                }
                domUtilityService.setStyleText(grid, css), $scope.adjustScrollLeft(grid.$viewport.scrollLeft()), digest && domUtilityService.digest($scope)
            }, domUtilityService.setColLeft = function(col, colLeft, grid) {
                if (grid.styleText) {
                    var regex = regexCache[col.index];
                    regex || (regex = regexCache[col.index] = new RegExp(".col" + col.index + " { width: [0-9]+px; left: [0-9]+px"));
                    var css = grid.styleText.replace(regex, ".col" + col.index + " { width: " + col.width + "px; left: " + colLeft + "px");
                    domUtilityService.setStyleText(grid, css)
                }
            }, domUtilityService.setColLeft.immediate = 1, domUtilityService.RebuildGrid = function($scope, grid) {
                domUtilityService.UpdateGridLayout($scope, grid), (null == grid.config.maintainColumnRatios || grid.config.maintainColumnRatios) && grid.configureColumnWidths(), $scope.adjustScrollLeft(grid.$viewport.scrollLeft()), domUtilityService.BuildStyles($scope, grid, !0)
            }, domUtilityService.digest = function($scope) {
                $scope.$root.$$phase || $scope.$digest()
            }, domUtilityService.ScrollH = 17, domUtilityService.ScrollW = 17, domUtilityService.LetterW = 10, getWidths(), domUtilityService
        }]), angular.module("ngGrid.services").factory("$sortService", ["$parse", "$utilityService", function($parse, $utils) {
            var sortService = {};
            return sortService.colSortFnCache = {}, sortService.isCustomSort = !1, sortService.guessSortFn = function(item) {
                var itemType = typeof item;
                switch (itemType) {
                    case "number":
                        return sortService.sortNumber;
                    case "boolean":
                        return sortService.sortBool;
                    case "string":
                        return item.match(/^[-+]?[Â£$Â¤]?[\d,.]+%?$/) ? sortService.sortNumberStr : sortService.sortAlpha;
                    default:
                        return "[object Date]" === Object.prototype.toString.call(item) ? sortService.sortDate : sortService.basicSort
                }
            }, sortService.basicSort = function(a, b) {
                return a === b ? 0 : b > a ? -1 : 1
            }, sortService.sortNumber = function(a, b) {
                return a - b
            }, sortService.sortNumberStr = function(a, b) {
                var numA, numB, badA = !1,
                    badB = !1;
                return numA = parseFloat(a.replace(/[^0-9.-]/g, "")), isNaN(numA) && (badA = !0), numB = parseFloat(b.replace(/[^0-9.-]/g, "")), isNaN(numB) && (badB = !0), badA && badB ? 0 : badA ? 1 : badB ? -1 : numA - numB
            }, sortService.sortAlpha = function(a, b) {
                var strA = a.toLowerCase(),
                    strB = b.toLowerCase();
                return strA === strB ? 0 : strB > strA ? -1 : 1
            }, sortService.sortDate = function(a, b) {
                var timeA = a.getTime(),
                    timeB = b.getTime();
                return timeA === timeB ? 0 : timeB > timeA ? -1 : 1
            }, sortService.sortBool = function(a, b) {
                return a && b ? 0 : a || b ? a ? 1 : -1 : 0
            }, sortService.sortData = function(sortInfo, data) {
                if (data && sortInfo) {
                    var col, direction, l = sortInfo.fields.length,
                        order = sortInfo.fields,
                        d = data.slice(0);
                    data.sort(function(itemA, itemB) {
                        for (var res, sortFn, tem = 0, indx = 0; 0 === tem && l > indx;) {
                            col = sortInfo.columns[indx], direction = sortInfo.directions[indx], sortFn = sortService.getSortFn(col, d);
                            var propA = $utils.evalProperty(itemA, order[indx]),
                                propB = $utils.evalProperty(itemB, order[indx]);
                            sortService.isCustomSort ? (res = sortFn(propA, propB), tem = direction === ASC ? res : 0 - res) : null == propA || null == propB ? null == propB && null == propA ? tem = 0 : null == propA ? tem = 1 : null == propB && (tem = -1) : (res = sortFn(propA, propB), tem = direction === ASC ? res : 0 - res), indx++
                        }
                        return tem
                    })
                }
            }, sortService.Sort = function(sortInfo, data) {
                sortService.isSorting || (sortService.isSorting = !0, sortService.sortData(sortInfo, data), sortService.isSorting = !1)
            }, sortService.getSortFn = function(col, data) {
                var sortFn, item;
                if (sortService.colSortFnCache[col.field]) sortFn = sortService.colSortFnCache[col.field];
                else if (void 0 !== col.sortingAlgorithm) sortFn = col.sortingAlgorithm, sortService.colSortFnCache[col.field] = col.sortingAlgorithm, sortService.isCustomSort = !0;
                else {
                    if (item = data[0], !item) return sortFn;
                    sortFn = sortService.guessSortFn($parse("entity['" + col.field.replace(DOT_REGEXP, "']['") + "']")({
                        entity: item
                    })), sortFn ? sortService.colSortFnCache[col.field] = sortFn : sortFn = sortService.sortAlpha
                }
                return sortFn
            }, sortService
        }]), angular.module("ngGrid.services").factory("$utilityService", ["$parse", function($parse) {
            var funcNameRegex = /function (.{1,})\(/,
                utils = {
                    visualLength: function(node) {
                        var elem = document.getElementById("testDataLength");
                        elem || (elem = document.createElement("SPAN"), elem.id = "testDataLength", elem.style.visibility = "hidden", document.body.appendChild(elem));
                        var $node = $(node);
                        $(elem).css({
                            font: $node.css("font"),
                            "font-size": $node.css("font-size"),
                            "font-family": $node.css("font-family")
                        }), elem.innerHTML = $node.text();
                        var width = elem.offsetWidth;
                        return document.body.removeChild(elem), width
                    },
                    forIn: function(obj, action) {
                        for (var prop in obj) obj.hasOwnProperty(prop) && action(obj[prop], prop)
                    },
                    endsWith: function(str, suffix) {
                        return str && suffix && "string" == typeof str ? -1 !== str.indexOf(suffix, str.length - suffix.length) : !1
                    },
                    isNullOrUndefined: function(obj) {
                        return void 0 === obj || null === obj ? !0 : !1
                    },
                    getElementsByClassName: function(cl) {
                        if (document.getElementsByClassName) return document.getElementsByClassName(cl);
                        for (var retnode = [], myclass = new RegExp("\\b" + cl + "\\b"), elem = document.getElementsByTagName("*"), i = 0; i < elem.length; i++) {
                            var classes = elem[i].className;
                            myclass.test(classes) && retnode.push(elem[i])
                        }
                        return retnode
                    },
                    newId: function() {
                        var seedId = (new Date).getTime();
                        return function() {
                            return seedId += 1
                        }
                    }(),
                    seti18n: function($scope, language) {
                        var $langPack = window.ngGrid.i18n[language];
                        for (var label in $langPack) $scope.i18n[label] = $langPack[label]
                    },
                    getInstanceType: function(o) {
                        var results = funcNameRegex.exec(o.constructor.toString());
                        if (results && results.length > 1) {
                            var instanceType = results[1].replace(/^\s+|\s+$/g, "");
                            return instanceType
                        }
                        return ""
                    },
                    init: function() {
                        function preEval(path) {
                            var m = BRACKET_REGEXP.exec(path);
                            if (m) return (m[1] ? preEval(m[1]) : m[1]) + m[2] + (m[3] ? preEval(m[3]) : m[3]);
                            path = path.replace(APOS_REGEXP, "\\'");
                            var parts = path.split(DOT_REGEXP),
                                preparsed = [parts.shift()];
                            return angular.forEach(parts, function(part) {
                                preparsed.push(part.replace(FUNC_REGEXP, "']$1"))
                            }), preparsed.join("['")
                        }
                        return this.preEval = preEval, this.evalProperty = function(entity, path) {
                            return $parse(preEval("entity." + path))({
                                entity: entity
                            })
                        }, delete this.init, this
                    }
                }.init();
            return utils
        }]);
        var ngAggregate = function(aggEntity, rowFactory, rowHeight, groupInitState) {
            this.rowIndex = 0, this.offsetTop = this.rowIndex * rowHeight, this.entity = aggEntity, this.label = aggEntity.gLabel, this.field = aggEntity.gField, this.depth = aggEntity.gDepth, this.parent = aggEntity.parent, this.children = aggEntity.children, this.aggChildren = aggEntity.aggChildren, this.aggIndex = aggEntity.aggIndex, this.collapsed = groupInitState, this.groupInitState = groupInitState, this.rowFactory = rowFactory, this.rowHeight = rowHeight, this.isAggRow = !0, this.offsetLeft = 25 * aggEntity.gDepth, this.aggLabelFilter = aggEntity.aggLabelFilter
        };
        ngAggregate.prototype.toggleExpand = function() {
            this.collapsed = this.collapsed ? !1 : !0, this.orig && (this.orig.collapsed = this.collapsed), this.notifyChildren()
        }, ngAggregate.prototype.setExpand = function(state) {
            this.collapsed = state, this.orig && (this.orig.collapsed = state), this.notifyChildren()
        }, ngAggregate.prototype.notifyChildren = function() {
            for (var longest = Math.max(this.rowFactory.aggCache.length, this.children.length), i = 0; longest > i; i++)
                if (this.aggChildren[i] && (this.aggChildren[i].entity[NG_HIDDEN] = this.collapsed, this.collapsed && this.aggChildren[i].setExpand(this.collapsed)), this.children[i] && (this.children[i][NG_HIDDEN] = this.collapsed), i > this.aggIndex && this.rowFactory.aggCache[i]) {
                    var agg = this.rowFactory.aggCache[i],
                        offset = 30 * this.children.length;
                    agg.offsetTop = this.collapsed ? agg.offsetTop - offset : agg.offsetTop + offset
                }
            this.rowFactory.renderedChange()
        }, ngAggregate.prototype.aggClass = function() {
            return this.collapsed ? "ngAggArrowCollapsed" : "ngAggArrowExpanded"
        }, ngAggregate.prototype.totalChildren = function() {
            if (this.aggChildren.length > 0) {
                var i = 0,
                    recurse = function(cur) {
                        cur.aggChildren.length > 0 ? angular.forEach(cur.aggChildren, function(a) {
                            recurse(a)
                        }) : i += cur.children.length
                    };
                return recurse(this), i
            }
            return this.children.length
        }, ngAggregate.prototype.copy = function() {
            var ret = new ngAggregate(this.entity, this.rowFactory, this.rowHeight, this.groupInitState);
            return ret.orig = this, ret
        };
        var ngColumn = function(config, $scope, grid, domUtilityService, $templateCache, $utils) {
                var self = this,
                    colDef = config.colDef,
                    delay = 500,
                    clicks = 0,
                    timer = null;
                self.colDef = config.colDef, self.width = colDef.width, self.groupIndex = 0, self.isGroupedBy = !1, self.minWidth = colDef.minWidth ? colDef.minWidth : 50, self.maxWidth = colDef.maxWidth ? colDef.maxWidth : 9e3, self.enableCellEdit = void 0 !== colDef.enableCellEdit ? colDef.enableCellEdit : config.enableCellEdit || config.enableCellEditOnFocus, self.cellEditableCondition = colDef.cellEditableCondition || config.cellEditableCondition || "true", self.headerRowHeight = config.headerRowHeight, self.displayName = void 0 === colDef.displayName ? colDef.field : colDef.displayName, self.index = config.index, self.isAggCol = config.isAggCol, self.cellClass = colDef.cellClass, self.sortPriority = void 0, self.cellFilter = colDef.cellFilter ? colDef.cellFilter : "", self.field = colDef.field, self.aggLabelFilter = colDef.aggLabelFilter || colDef.cellFilter, self.visible = $utils.isNullOrUndefined(colDef.visible) || colDef.visible, self.sortable = !1, self.resizable = !1, self.pinnable = !1, self.pinned = config.enablePinning && colDef.pinned, self.originalIndex = null == config.originalIndex ? self.index : config.originalIndex, self.groupable = $utils.isNullOrUndefined(colDef.groupable) || colDef.groupable, config.enableSort && (self.sortable = $utils.isNullOrUndefined(colDef.sortable) || colDef.sortable), config.enableResize && (self.resizable = $utils.isNullOrUndefined(colDef.resizable) || colDef.resizable), config.enablePinning && (self.pinnable = $utils.isNullOrUndefined(colDef.pinnable) || colDef.pinnable), self.sortDirection = void 0, self.sortingAlgorithm = colDef.sortFn, self.headerClass = colDef.headerClass, self.cursor = self.sortable ? "pointer" : "default", self.headerCellTemplate = colDef.headerCellTemplate || $templateCache.get("headerCellTemplate.html"), self.cellTemplate = colDef.cellTemplate || $templateCache.get("cellTemplate.html").replace(CUSTOM_FILTERS, self.cellFilter ? "|" + self.cellFilter : ""), self.enableCellEdit && (self.cellEditTemplate = colDef.cellEditTemplate || $templateCache.get("cellEditTemplate.html"), self.editableCellTemplate = colDef.editableCellTemplate || $templateCache.get("editableCellTemplate.html")), colDef.cellTemplate && !TEMPLATE_REGEXP.test(colDef.cellTemplate) && (self.cellTemplate = $templateCache.get(colDef.cellTemplate) || $.ajax({
                    type: "GET",
                    url: colDef.cellTemplate,
                    async: !1
                }).responseText), self.enableCellEdit && colDef.editableCellTemplate && !TEMPLATE_REGEXP.test(colDef.editableCellTemplate) && (self.editableCellTemplate = $templateCache.get(colDef.editableCellTemplate) || $.ajax({
                    type: "GET",
                    url: colDef.editableCellTemplate,
                    async: !1
                }).responseText), colDef.headerCellTemplate && !TEMPLATE_REGEXP.test(colDef.headerCellTemplate) && (self.headerCellTemplate = $templateCache.get(colDef.headerCellTemplate) || $.ajax({
                    type: "GET",
                    url: colDef.headerCellTemplate,
                    async: !1
                }).responseText), self.colIndex = function() {
                    var classes = self.pinned ? "pinned " : "";
                    return classes += "col" + self.index + " colt" + self.index, self.cellClass && (classes += " " + self.cellClass), classes
                }, self.groupedByClass = function() {
                    return self.isGroupedBy ? "ngGroupedByIcon" : "ngGroupIcon"
                }, self.toggleVisible = function() {
                    self.visible = !self.visible
                }, self.showSortButtonUp = function() {
                    return self.sortable ? self.sortDirection === DESC : self.sortable
                }, self.showSortButtonDown = function() {
                    return self.sortable ? self.sortDirection === ASC : self.sortable
                }, self.noSortVisible = function() {
                    return !self.sortDirection
                }, self.sort = function(evt) {
                    if (!self.sortable) return !0;
                    var dir = self.sortDirection === ASC ? DESC : ASC;
                    return self.sortDirection = dir, config.sortCallback(self, evt), !1
                }, self.gripClick = function() {
                    clicks++, 1 === clicks ? timer = setTimeout(function() {
                        clicks = 0
                    }, delay) : (clearTimeout(timer), config.resizeOnDataCallback(self), clicks = 0)
                }, self.gripOnMouseDown = function(event) {
                    return $scope.isColumnResizing = !0, event.ctrlKey && !self.pinned ? (self.toggleVisible(), domUtilityService.BuildStyles($scope, grid), !0) : (event.target.parentElement.style.cursor = "col-resize", self.startMousePosition = event.clientX, self.origWidth = self.width, $(document).mousemove(self.onMouseMove), $(document).mouseup(self.gripOnMouseUp), !1)
                }, self.onMouseMove = function(event) {
                    var diff = event.clientX - self.startMousePosition,
                        newWidth = diff + self.origWidth;
                    return self.width = newWidth < self.minWidth ? self.minWidth : newWidth > self.maxWidth ? self.maxWidth : newWidth, $scope.hasUserChangedGridColumnWidths = !0, domUtilityService.BuildStyles($scope, grid), !1
                }, self.gripOnMouseUp = function(event) {
                    return $(document).off("mousemove", self.onMouseMove), $(document).off("mouseup", self.gripOnMouseUp), event.target.parentElement.style.cursor = "default", domUtilityService.digest($scope), $scope.isColumnResizing = !1, !1
                }, self.copy = function() {
                    var ret = new ngColumn(config, $scope, grid, domUtilityService, $templateCache, $utils);
                    return ret.isClone = !0, ret.orig = self, ret
                }, self.setVars = function(fromCol) {
                    self.orig = fromCol, self.width = fromCol.width, self.groupIndex = fromCol.groupIndex, self.isGroupedBy = fromCol.isGroupedBy, self.displayName = fromCol.displayName, self.index = fromCol.index, self.isAggCol = fromCol.isAggCol, self.cellClass = fromCol.cellClass, self.cellFilter = fromCol.cellFilter, self.field = fromCol.field, self.aggLabelFilter = fromCol.aggLabelFilter, self.visible = fromCol.visible, self.sortable = fromCol.sortable, self.resizable = fromCol.resizable, self.pinnable = fromCol.pinnable, self.pinned = fromCol.pinned, self.originalIndex = fromCol.originalIndex, self.sortDirection = fromCol.sortDirection, self.sortingAlgorithm = fromCol.sortingAlgorithm, self.headerClass = fromCol.headerClass, self.headerCellTemplate = fromCol.headerCellTemplate, self.cellTemplate = fromCol.cellTemplate, self.cellEditTemplate = fromCol.cellEditTemplate
                }
            },
            ngDimension = function(options) {
                this.outerHeight = null, this.outerWidth = null, $.extend(this, options)
            },
            ngDomAccessProvider = function(grid) {
                this.previousColumn = null, this.grid = grid
            };
        ngDomAccessProvider.prototype.changeUserSelect = function(elm, value) {
            elm.css({
                "-webkit-touch-callout": value,
                "-webkit-user-select": value,
                "-khtml-user-select": value,
                "-moz-user-select": "none" === value ? "-moz-none" : value,
                "-ms-user-select": value,
                "user-select": value
            })
        }, ngDomAccessProvider.prototype.focusCellElement = function($scope, index) {
            if ($scope.selectionProvider.lastClickedRow) {
                var columnIndex = void 0 !== index ? index : this.previousColumn,
                    elm = $scope.selectionProvider.lastClickedRow.clone ? $scope.selectionProvider.lastClickedRow.clone.elm : $scope.selectionProvider.lastClickedRow.elm;
                if (void 0 !== columnIndex && elm) {
                    var columns = angular.element(elm[0].children).filter(function() {
                            return 8 !== this.nodeType
                        }),
                        i = Math.max(Math.min($scope.renderedColumns.length - 1, columnIndex), 0);
                    this.grid.config.showSelectionCheckbox && angular.element(columns[i]).scope() && 0 === angular.element(columns[i]).scope().col.index && (i = 1), columns[i] && columns[i].children[1].children[0].focus(), this.previousColumn = columnIndex
                }
            }
        }, ngDomAccessProvider.prototype.selectionHandlers = function($scope, elm) {
            function keydown(evt) {
                if (16 === evt.keyCode) return self.changeUserSelect(elm, "none", evt), !0;
                if (!doingKeyDown) {
                    doingKeyDown = !0;
                    var ret = ngMoveSelectionHandler($scope, elm, evt, self.grid);
                    return doingKeyDown = !1, ret
                }
                return !0
            }

            function keyup(evt) {
                return 16 === evt.keyCode && self.changeUserSelect(elm, "text", evt), !0
            }
            var doingKeyDown = !1,
                self = this;
            elm.bind("keydown", keydown), elm.bind("keyup", keyup), elm.on("$destroy", function() {
                elm.off("keydown", keydown), elm.off("keyup", keyup)
            })
        };
        var ngEventProvider = function(grid, $scope, domUtilityService, $timeout) {
                var self = this;
                self.colToMove = void 0, self.groupToMove = void 0, self.assignEvents = function() {
                    grid.config.jqueryUIDraggable && !grid.config.enablePinning ? (grid.$groupPanel.droppable({
                        addClasses: !1,
                        drop: function(event) {
                            self.onGroupDrop(event)
                        }
                    }), grid.$groupPanel.on("$destroy", function() {
                        grid.$groupPanel = null
                    })) : (grid.$groupPanel.on("mousedown", self.onGroupMouseDown).on("dragover", self.dragOver).on("drop", self.onGroupDrop), grid.$topPanel.on("mousedown", ".ngHeaderScroller", self.onHeaderMouseDown).on("dragover", ".ngHeaderScroller", self.dragOver), grid.$groupPanel.on("$destroy", function() {
                        grid.$groupPanel && grid.$groupPanel.off("mousedown"), grid.$groupPanel = null
                    }), grid.config.enableColumnReordering && grid.$topPanel.on("drop", ".ngHeaderScroller", self.onHeaderDrop), grid.$topPanel.on("$destroy", function() {
                        grid.$topPanel && grid.$topPanel.off("mousedown"), grid.config.enableColumnReordering && grid.$topPanel && grid.$topPanel.off("drop"), grid.$topPanel = null
                    })), $scope.$on("$destroy", $scope.$watch("renderedColumns", function() {
                        $timeout(self.setDraggables)
                    }))
                }, self.dragStart = function(evt) {
                    evt.dataTransfer.setData("text", "")
                }, self.dragOver = function(evt) {
                    evt.preventDefault()
                }, self.setDraggables = function() {
                    if (grid.config.jqueryUIDraggable) grid.$root && grid.$root.find(".ngHeaderSortColumn").draggable({
                        helper: "clone",
                        appendTo: "body",
                        stack: "div",
                        addClasses: !1,
                        start: function(event) {
                            self.onHeaderMouseDown(event)
                        }
                    }).droppable({
                        drop: function(event) {
                            self.onHeaderDrop(event)
                        }
                    });
                    else {
                        var columns = grid.$root.find(".ngHeaderSortColumn");
                        if (angular.forEach(columns, function(col) {
                                col.className && -1 !== col.className.indexOf("ngHeaderSortColumn") && (col.setAttribute("draggable", "true"), col.addEventListener && (col.addEventListener("dragstart", self.dragStart), angular.element(col).on("$destroy", function() {
                                    angular.element(col).off("dragstart", self.dragStart), col.removeEventListener("dragstart", self.dragStart)
                                })))
                            }), -1 !== navigator.userAgent.indexOf("MSIE")) {
                            var sortColumn = grid.$root.find(".ngHeaderSortColumn");
                            sortColumn.bind("selectstart", function() {
                                return this.dragDrop(), !1
                            }), angular.element(sortColumn).on("$destroy", function() {
                                sortColumn.off("selectstart")
                            })
                        }
                    }
                }, self.onGroupMouseDown = function(event) {
                    var groupItem = $(event.target);
                    if ("ngRemoveGroup" !== groupItem[0].className) {
                        var groupItemScope = angular.element(groupItem).scope();
                        groupItemScope && (grid.config.jqueryUIDraggable || (groupItem.attr("draggable", "true"), this.addEventListener && (this.addEventListener("dragstart", self.dragStart), angular.element(this).on("$destroy", function() {
                            this.removeEventListener("dragstart", self.dragStart)
                        })), -1 !== navigator.userAgent.indexOf("MSIE") && (groupItem.bind("selectstart", function() {
                            return this.dragDrop(), !1
                        }), groupItem.on("$destroy", function() {
                            groupItem.off("selectstart")
                        }))), self.groupToMove = {
                            header: groupItem,
                            groupName: groupItemScope.group,
                            index: groupItemScope.$index
                        })
                    } else self.groupToMove = void 0
                }, self.onGroupDrop = function(event) {
                    event.stopPropagation();
                    var groupContainer, groupScope;
                    self.groupToMove ? (groupContainer = $(event.target).closest(".ngGroupElement"), "ngGroupPanel" === groupContainer.context.className ? ($scope.configGroups.splice(self.groupToMove.index, 1), $scope.configGroups.push(self.groupToMove.groupName)) : (groupScope = angular.element(groupContainer).scope(), groupScope && self.groupToMove.index !== groupScope.$index && ($scope.configGroups.splice(self.groupToMove.index, 1), $scope.configGroups.splice(groupScope.$index, 0, self.groupToMove.groupName))), self.groupToMove = void 0, grid.fixGroupIndexes()) : self.colToMove && (-1 === $scope.configGroups.indexOf(self.colToMove.col) && (groupContainer = $(event.target).closest(".ngGroupElement"), "ngGroupPanel" === groupContainer.context.className || "ngGroupPanelDescription ng-binding" === groupContainer.context.className ? $scope.groupBy(self.colToMove.col) : (groupScope = angular.element(groupContainer).scope(), groupScope && $scope.removeGroup(groupScope.$index))), self.colToMove = void 0), $scope.$$phase || $scope.$apply()
                }, self.onHeaderMouseDown = function(event) {
                    var headerContainer = $(event.target).closest(".ngHeaderSortColumn"),
                        headerScope = angular.element(headerContainer).scope();
                    headerScope && (self.colToMove = {
                        header: headerContainer,
                        col: headerScope.col
                    })
                }, self.onHeaderDrop = function(event) {
                    if (self.colToMove && !self.colToMove.col.pinned) {
                        var headerContainer = $(event.target).closest(".ngHeaderSortColumn"),
                            headerScope = angular.element(headerContainer).scope();
                        if (headerScope) {
                            if (self.colToMove.col === headerScope.col || headerScope.col.pinned) return;
                            $scope.columns.splice(self.colToMove.col.index, 1), $scope.columns.splice(headerScope.col.index, 0, self.colToMove.col), grid.fixColumnIndexes(), self.colToMove = void 0, domUtilityService.digest($scope)
                        }
                    }
                }, self.assignGridEventHandlers = function() {
                    -1 === grid.config.tabIndex ? (grid.$viewport.attr("tabIndex", domUtilityService.numberOfGrids), domUtilityService.numberOfGrids++) : grid.$viewport.attr("tabIndex", grid.config.tabIndex);
                    var windowThrottle, windowResize = function() {
                        clearTimeout(windowThrottle), windowThrottle = setTimeout(function() {
                            domUtilityService.RebuildGrid($scope, grid)
                        }, 100)
                    };
                    $(window).on("resize.nggrid", windowResize);
                    var parentThrottle, parentResize = function() {
                        clearTimeout(parentThrottle), parentThrottle = setTimeout(function() {
                            domUtilityService.RebuildGrid($scope, grid)
                        }, 100)
                    };
                    $(grid.$root.parent()).on("resize.nggrid", parentResize), $scope.$on("$destroy", function() {
                        $(window).off("resize.nggrid", windowResize)
                    })
                }, self.assignGridEventHandlers(), self.assignEvents()
            },
            ngFooter = function($scope, grid) {
                $scope.maxRows = function() {
                    var ret = Math.max($scope.totalServerItems, grid.data.length);
                    return ret
                }, $scope.$on("$destroy", $scope.$watch("totalServerItems", function() {
                    $scope.currentMaxPages = $scope.maxPages()
                })), $scope.multiSelect = grid.config.enableRowSelection && grid.config.multiSelect, $scope.selectedItemCount = grid.selectedItemCount, $scope.maxPages = function() {
                    return 0 === $scope.maxRows() ? 1 : Math.ceil($scope.maxRows() / $scope.pagingOptions.pageSize)
                }, $scope.pageForward = function() {
                    var page = $scope.pagingOptions.currentPage;
                    $scope.totalServerItems > 0 ? $scope.pagingOptions.currentPage = Math.min(page + 1, $scope.maxPages()) : $scope.pagingOptions.currentPage++
                }, $scope.pageBackward = function() {
                    var page = $scope.pagingOptions.currentPage;
                    $scope.pagingOptions.currentPage = Math.max(page - 1, 1)
                }, $scope.pageToFirst = function() {
                    $scope.pagingOptions.currentPage = 1
                }, $scope.pageToLast = function() {
                    var maxPages = $scope.maxPages();
                    $scope.pagingOptions.currentPage = maxPages
                }, $scope.cantPageForward = function() {
                    var curPage = $scope.pagingOptions.currentPage,
                        maxPages = $scope.maxPages();
                    return $scope.totalServerItems > 0 ? curPage >= maxPages : grid.data.length < 1
                }, $scope.cantPageToLast = function() {
                    return $scope.totalServerItems > 0 ? $scope.cantPageForward() : !0
                }, $scope.cantPageBackward = function() {
                    var curPage = $scope.pagingOptions.currentPage;
                    return 1 >= curPage
                }
            },
            ngGrid = function($scope, options, sortService, domUtilityService, $filter, $templateCache, $utils, $timeout, $parse, $http, $q) {
                var defaults = {
                        aggregateTemplate: void 0,
                        afterSelectionChange: function() {},
                        beforeSelectionChange: function() {
                            return !0
                        },
                        checkboxCellTemplate: void 0,
                        checkboxHeaderTemplate: void 0,
                        columnDefs: void 0,
                        data: [],
                        dataUpdated: function() {},
                        enableCellEdit: !1,
                        enableCellEditOnFocus: !1,
                        enableCellSelection: !1,
                        enableColumnResize: !1,
                        enableColumnReordering: !1,
                        enableColumnHeavyVirt: !1,
                        enablePaging: !1,
                        enablePinning: !1,
                        enableRowSelection: !0,
                        enableSorting: !0,
                        enableHighlighting: !1,
                        excludeProperties: [],
                        filterOptions: {
                            filterText: "",
                            useExternalFilter: !1
                        },
                        footerRowHeight: 55,
                        footerTemplate: void 0,
                        forceSyncScrolling: !0,
                        groups: [],
                        groupsCollapsedByDefault: !0,
                        headerRowHeight: 30,
                        headerRowTemplate: void 0,
                        jqueryUIDraggable: !1,
                        jqueryUITheme: !1,
                        keepLastSelected: !0,
                        maintainColumnRatios: void 0,
                        menuTemplate: void 0,
                        multiSelect: !0,
                        pagingOptions: {
                            pageSizes: [250, 500, 1e3],
                            pageSize: 250,
                            currentPage: 1
                        },
                        pinSelectionCheckbox: !1,
                        plugins: [],
                        primaryKey: void 0,
                        rowHeight: 30,
                        rowTemplate: void 0,
                        selectedItems: [],
                        selectionCheckboxColumnWidth: 25,
                        selectWithCheckboxOnly: !1,
                        showColumnMenu: !1,
                        showFilter: !1,
                        showFooter: !1,
                        showGroupPanel: !1,
                        showSelectionCheckbox: !1,
                        sortInfo: {
                            fields: [],
                            columns: [],
                            directions: []
                        },
                        tabIndex: -1,
                        totalServerItems: 0,
                        useExternalSorting: !1,
                        i18n: "en",
                        virtualizationThreshold: 50,
                        noTabInterference: !1
                    },
                    self = this;
                self.maxCanvasHt = 0, self.config = $.extend(defaults, window.ngGrid.config, options), self.config.showSelectionCheckbox = self.config.showSelectionCheckbox && self.config.enableColumnHeavyVirt === !1, self.config.enablePinning = self.config.enablePinning && self.config.enableColumnHeavyVirt === !1, self.config.selectWithCheckboxOnly = self.config.selectWithCheckboxOnly && self.config.showSelectionCheckbox !== !1, self.config.pinSelectionCheckbox = self.config.enablePinning, "string" == typeof options.columnDefs && (self.config.columnDefs = $scope.$eval(options.columnDefs)), self.rowCache = [], self.rowMap = [], self.gridId = "ng" + $utils.newId(), self.$root = null, self.$groupPanel = null, self.$topPanel = null, self.$headerContainer = null, self.$headerScroller = null, self.$headers = null, self.$viewport = null, self.$canvas = null, self.rootDim = self.config.gridDim, self.data = [], self.lateBindColumns = !1, self.filteredRows = [], self.initTemplates = function() {
                    var templates = ["rowTemplate", "aggregateTemplate", "headerRowTemplate", "checkboxCellTemplate", "checkboxHeaderTemplate", "menuTemplate", "footerTemplate"],
                        promises = [];
                    return angular.forEach(templates, function(template) {
                        promises.push(self.getTemplate(template))
                    }), $q.all(promises)
                }, self.getTemplate = function(key) {
                    var t = self.config[key],
                        uKey = self.gridId + key + ".html",
                        p = $q.defer();
                    if (t && !TEMPLATE_REGEXP.test(t)) $http.get(t, {
                        cache: $templateCache
                    }).success(function(data) {
                        $templateCache.put(uKey, data), p.resolve()
                    }).error(function() {
                        p.reject("Could not load template: " + t)
                    });
                    else if (t) $templateCache.put(uKey, t), p.resolve();
                    else {
                        var dKey = key + ".html";
                        $templateCache.put(uKey, $templateCache.get(dKey)), p.resolve()
                    }
                    return p.promise
                }, "object" == typeof self.config.data && (self.data = self.config.data), self.calcMaxCanvasHeight = function() {
                    var calculatedHeight;
                    return calculatedHeight = self.config.groups.length > 0 ? self.rowFactory.parsedData.filter(function(e) {
                        return !e[NG_HIDDEN]
                    }).length * self.config.rowHeight : self.filteredRows.length * self.config.rowHeight
                }, self.elementDims = {
                    scrollW: 0,
                    scrollH: 0,
                    rowIndexCellW: self.config.selectionCheckboxColumnWidth,
                    rowSelectedCellW: self.config.selectionCheckboxColumnWidth,
                    rootMaxW: 0,
                    rootMaxH: 0
                }, self.setRenderedRows = function(newRows) {
                    $scope.renderedRows.length = newRows.length;
                    for (var i = 0; i < newRows.length; i++) !$scope.renderedRows[i] || newRows[i].isAggRow || $scope.renderedRows[i].isAggRow ? ($scope.renderedRows[i] = newRows[i].copy(), $scope.renderedRows[i].collapsed = newRows[i].collapsed, newRows[i].isAggRow || $scope.renderedRows[i].setVars(newRows[i])) : $scope.renderedRows[i].setVars(newRows[i]), $scope.renderedRows[i].rowIndex = newRows[i].rowIndex, $scope.renderedRows[i].offsetTop = newRows[i].offsetTop, $scope.renderedRows[i].selected = newRows[i].selected, newRows[i].renderedRowIndex = i;
                    self.refreshDomSizes(), $scope.$emit("ngGridEventRows", newRows)
                }, self.minRowsToRender = function() {
                    var viewportH = $scope.viewportDimHeight() || 1;
                    return Math.floor(viewportH / self.config.rowHeight)
                }, self.refreshDomSizes = function() {
                    var dim = new ngDimension;
                    dim.outerWidth = self.elementDims.rootMaxW, dim.outerHeight = self.elementDims.rootMaxH, self.rootDim = dim, self.maxCanvasHt = self.calcMaxCanvasHeight()
                }, self.buildColumnDefsFromData = function() {
                    self.config.columnDefs = [];
                    var item = self.data[0];
                    return item ? void $utils.forIn(item, function(prop, propName) {
                        -1 === self.config.excludeProperties.indexOf(propName) && self.config.columnDefs.push({
                            field: propName
                        })
                    }) : void(self.lateBoundColumns = !0)
                }, self.buildColumns = function() {
                    var columnDefs = self.config.columnDefs,
                        cols = [];
                    if (columnDefs || (self.buildColumnDefsFromData(), columnDefs = self.config.columnDefs), self.config.showSelectionCheckbox && cols.push(new ngColumn({
                            colDef: {
                                field: "âœ”",
                                width: self.elementDims.rowSelectedCellW,
                                sortable: !1,
                                resizable: !1,
                                groupable: !1,
                                headerCellTemplate: $templateCache.get($scope.gridId + "checkboxHeaderTemplate.html"),
                                cellTemplate: $templateCache.get($scope.gridId + "checkboxCellTemplate.html"),
                                pinned: self.config.pinSelectionCheckbox
                            },
                            index: 0,
                            headerRowHeight: self.config.headerRowHeight,
                            sortCallback: self.sortData,
                            resizeOnDataCallback: self.resizeOnData,
                            enableResize: self.config.enableColumnResize,
                            enableSort: self.config.enableSorting,
                            enablePinning: self.config.enablePinning
                        }, $scope, self, domUtilityService, $templateCache, $utils)), columnDefs.length > 0) {
                        var checkboxOffset = self.config.showSelectionCheckbox ? 1 : 0,
                            groupOffset = $scope.configGroups.length;
                        $scope.configGroups.length = 0, angular.forEach(columnDefs, function(colDef, i) {
                            i += checkboxOffset;
                            var column = new ngColumn({
                                    colDef: colDef,
                                    index: i + groupOffset,
                                    originalIndex: i,
                                    headerRowHeight: self.config.headerRowHeight,
                                    sortCallback: self.sortData,
                                    resizeOnDataCallback: self.resizeOnData,
                                    enableResize: self.config.enableColumnResize,
                                    enableSort: self.config.enableSorting,
                                    enablePinning: self.config.enablePinning,
                                    enableCellEdit: self.config.enableCellEdit || self.config.enableCellEditOnFocus,
                                    cellEditableCondition: self.config.cellEditableCondition
                                }, $scope, self, domUtilityService, $templateCache, $utils),
                                indx = self.config.groups.indexOf(colDef.field); - 1 !== indx && (column.isGroupedBy = !0, $scope.configGroups.splice(indx, 0, column), column.groupIndex = $scope.configGroups.length), cols.push(column)
                        }), $scope.columns = cols, self.config.groups.length > 0 && self.rowFactory.getGrouping(self.config.groups)
                    }
                }, self.configureColumnWidths = function() {
                    var asterisksArray = [],
                        percentArray = [],
                        asteriskNum = 0,
                        totalWidth = 0,
                        indexMap = {};
                    if (angular.forEach($scope.columns, function(ngCol, i) {
                            if ($utils.isNullOrUndefined(ngCol.originalIndex)) ngCol.isAggCol && ngCol.visible && (totalWidth += 25);
                            else {
                                var origIndex = ngCol.originalIndex;
                                self.config.showSelectionCheckbox && (0 === ngCol.originalIndex && ngCol.visible && (totalWidth += self.config.selectionCheckboxColumnWidth), origIndex--), indexMap[origIndex] = i
                            }
                        }), angular.forEach(self.config.columnDefs, function(colDef, i) {
                            var ngColumn = $scope.columns[indexMap[i]];
                            colDef.index = i;
                            var t, isPercent = !1;
                            if ($utils.isNullOrUndefined(colDef.width) ? colDef.width = "*" : (isPercent = isNaN(colDef.width) ? $utils.endsWith(colDef.width, "%") : !1, t = isPercent ? colDef.width : parseInt(colDef.width, 10)), isNaN(t)) {
                                if (t = colDef.width, "auto" === t) {
                                    ngColumn.width = ngColumn.minWidth, totalWidth += ngColumn.width;
                                    var temp = ngColumn;
                                    return void $scope.$on("$destroy", $scope.$on("ngGridEventData", function() {
                                        self.resizeOnData(temp)
                                    }))
                                }
                                if (-1 !== t.indexOf("*")) return ngColumn.visible !== !1 && (asteriskNum += t.length), void asterisksArray.push(colDef);
                                if (isPercent) return void percentArray.push(colDef);
                                throw 'unable to parse column width, use percentage ("10%","20%", etc...) or "*" to use remaining width of grid'
                            }
                            ngColumn.visible !== !1 && (totalWidth += ngColumn.width = parseInt(ngColumn.width, 10))
                        }), percentArray.length > 0) {
                        self.config.maintainColumnRatios = self.config.maintainColumnRatios !== !1;
                        var percentWidth = 0,
                            hiddenPercent = 0;
                        angular.forEach(percentArray, function(colDef) {
                            var ngColumn = $scope.columns[indexMap[colDef.index]],
                                percent = parseFloat(colDef.width) / 100;
                            percentWidth += percent, ngColumn.visible || (hiddenPercent += percent)
                        });
                        var percentWidthUsed = percentWidth - hiddenPercent;
                        angular.forEach(percentArray, function(colDef) {
                            var ngColumn = $scope.columns[indexMap[colDef.index]],
                                percent = parseFloat(colDef.width) / 100;
                            percent /= hiddenPercent > 0 ? percentWidthUsed : percentWidth;
                            var pixelsForPercentBasedWidth = self.rootDim.outerWidth * percentWidth;
                            ngColumn.width = pixelsForPercentBasedWidth * percent, totalWidth += ngColumn.width
                        })
                    }
                    if (asterisksArray.length > 0) {
                        self.config.maintainColumnRatios = self.config.maintainColumnRatios !== !1;
                        var remainingWidth = self.rootDim.outerWidth - totalWidth;
                        self.maxCanvasHt > $scope.viewportDimHeight() && (remainingWidth -= domUtilityService.ScrollW);
                        var asteriskVal = Math.floor(remainingWidth / asteriskNum);
                        angular.forEach(asterisksArray, function(colDef, i) {
                            var ngColumn = $scope.columns[indexMap[colDef.index]];
                            ngColumn.width = asteriskVal * colDef.width.length, ngColumn.width < ngColumn.minWidth && (ngColumn.width = ngColumn.minWidth), ngColumn.visible !== !1 && (totalWidth += ngColumn.width);
                            var isLast = i === asterisksArray.length - 1;
                            if (isLast && totalWidth < self.rootDim.outerWidth) {
                                var gridWidthDifference = self.rootDim.outerWidth - totalWidth;
                                self.maxCanvasHt > $scope.viewportDimHeight() && (gridWidthDifference -= domUtilityService.ScrollW), ngColumn.width += gridWidthDifference
                            }
                        })
                    }
                }, self.init = function() {
                    return self.initTemplates().then(function() {
                        $scope.selectionProvider = new ngSelectionProvider(self, $scope, $parse, $utils), $scope.domAccessProvider = new ngDomAccessProvider(self), self.rowFactory = new ngRowFactory(self, $scope, domUtilityService, $templateCache, $utils), self.searchProvider = new ngSearchProvider($scope, self, $filter, $utils), self.styleProvider = new ngStyleProvider($scope, self), $scope.$on("$destroy", $scope.$watch("configGroups", function(a) {
                            var tempArr = [];
                            angular.forEach(a, function(item) {
                                tempArr.push(item.field || item)
                            }), self.config.groups = tempArr, self.rowFactory.filteredRowsChanged(), $scope.$emit("ngGridEventGroups", a)
                        }, !0)), $scope.$on("$destroy", $scope.$watch("columns", function(a) {
                            $scope.isColumnResizing || domUtilityService.RebuildGrid($scope, self), $scope.$emit("ngGridEventColumns", a)
                        }, !0)), $scope.$on("$destroy", $scope.$watch(function() {
                            return options.i18n
                        }, function(newLang) {
                            $utils.seti18n($scope, newLang)
                        })), self.maxCanvasHt = self.calcMaxCanvasHeight(), self.config.sortInfo.fields && self.config.sortInfo.fields.length > 0 && $scope.$on("$destroy", $scope.$watch(function() {
                            return self.config.sortInfo
                        }, function() {
                            sortService.isSorting || (self.sortColumnsInit(), $scope.$emit("ngGridEventSorted", self.config.sortInfo))
                        }, !0))
                    })
                }, self.resizeOnData = function(col) {
                    var longest = col.minWidth,
                        arr = $utils.getElementsByClassName("col" + col.index);
                    angular.forEach(arr, function(elem, index) {
                        var i;
                        if (0 === index) {
                            var kgHeaderText = $(elem).find(".ngHeaderText");
                            i = $utils.visualLength(kgHeaderText) + 10
                        } else {
                            var ngCellText = $(elem).find(".ngCellText");
                            i = $utils.visualLength(ngCellText) + 10
                        }
                        i > longest && (longest = i)
                    }), col.width = col.longest = Math.min(col.maxWidth, longest + 7), domUtilityService.BuildStyles($scope, self, !0)
                }, self.lastSortedColumns = [], self.sortData = function(col, evt) {
                    if (evt && evt.shiftKey && self.config.sortInfo) {
                        var indx = self.config.sortInfo.columns.indexOf(col); - 1 === indx ? (1 === self.config.sortInfo.columns.length && (self.config.sortInfo.columns[0].sortPriority = 1), self.config.sortInfo.columns.push(col), col.sortPriority = self.config.sortInfo.columns.length, self.config.sortInfo.fields.push(col.field), self.config.sortInfo.directions.push(col.sortDirection), self.lastSortedColumns.push(col)) : self.config.sortInfo.directions[indx] = col.sortDirection, $scope.$emit("ngGridEventSorted", self.config.sortInfo)
                    } else if (!self.config.useExternalSorting || self.config.useExternalSorting && self.config.sortInfo) {
                        var isArr = $.isArray(col);
                        self.config.sortInfo.columns.length = 0, self.config.sortInfo.fields.length = 0, self.config.sortInfo.directions.length = 0;
                        var push = function(c) {
                            self.config.sortInfo.columns.push(c), self.config.sortInfo.fields.push(c.field), self.config.sortInfo.directions.push(c.sortDirection), self.lastSortedColumns.push(c)
                        };
                        isArr ? angular.forEach(col, function(c, i) {
                            c.sortPriority = i + 1, push(c)
                        }) : (self.clearSortingData(col), col.sortPriority = void 0, push(col)), self.sortActual(), self.searchProvider.evalFilter(), $scope.$emit("ngGridEventSorted", self.config.sortInfo)
                    }
                }, self.sortColumnsInit = function() {
                    self.config.sortInfo.columns ? self.config.sortInfo.columns.length = 0 : self.config.sortInfo.columns = [];
                    var cols = [];
                    angular.forEach($scope.columns, function(c) {
                        var i = self.config.sortInfo.fields.indexOf(c.field); - 1 !== i && (c.sortDirection = self.config.sortInfo.directions[i] || "asc", cols[i] = c)
                    }), self.sortData(1 === cols.length ? cols[0] : cols)
                }, self.sortActual = function() {
                    if (!self.config.useExternalSorting) {
                        var tempData = self.data.slice(0);
                        angular.forEach(tempData, function(item, i) {
                            var e = self.rowMap[i];
                            if (void 0 !== e) {
                                var v = self.rowCache[e];
                                void 0 !== v && (item.preSortSelected = v.selected, item.preSortIndex = i)
                            }
                        }), sortService.Sort(self.config.sortInfo, tempData), angular.forEach(tempData, function(item, i) {
                            self.rowCache[i].entity = item, self.rowCache[i].selected = item.preSortSelected, self.rowMap[item.preSortIndex] = i, delete item.preSortSelected, delete item.preSortIndex
                        })
                    }
                }, self.clearSortingData = function(col) {
                    col ? (angular.forEach(self.lastSortedColumns, function(c) {
                        col.index !== c.index && (c.sortDirection = "", c.sortPriority = null)
                    }), self.lastSortedColumns[0] = col, self.lastSortedColumns.length = 1) : (angular.forEach(self.lastSortedColumns, function(c) {
                        c.sortDirection = "", c.sortPriority = null
                    }), self.lastSortedColumns = [])
                }, self.fixColumnIndexes = function() {
                    for (var i = 0; i < $scope.columns.length; i++) $scope.columns[i].index = i
                }, self.fixGroupIndexes = function() {
                    angular.forEach($scope.configGroups, function(item, i) {
                        item.groupIndex = i + 1
                    })
                }, $scope.elementsNeedMeasuring = !0, $scope.columns = [], $scope.renderedRows = [], $scope.renderedColumns = [], $scope.headerRow = null, $scope.rowHeight = self.config.rowHeight, $scope.jqueryUITheme = self.config.jqueryUITheme, $scope.showSelectionCheckbox = self.config.showSelectionCheckbox, $scope.enableCellSelection = self.config.enableCellSelection, $scope.enableCellEditOnFocus = self.config.enableCellEditOnFocus, $scope.footer = null, $scope.selectedItems = self.config.selectedItems, $scope.multiSelect = self.config.multiSelect, $scope.showFooter = self.config.showFooter, $scope.footerRowHeight = $scope.showFooter ? self.config.footerRowHeight : 0, $scope.showColumnMenu = self.config.showColumnMenu, $scope.forceSyncScrolling = self.config.forceSyncScrolling, $scope.showMenu = !1, $scope.configGroups = [], $scope.gridId = self.gridId, $scope.enablePaging = self.config.enablePaging, $scope.pagingOptions = self.config.pagingOptions, $scope.i18n = {}, $utils.seti18n($scope, self.config.i18n), $scope.adjustScrollLeft = function(scrollLeft) {
                    for (var colwidths = 0, totalLeft = 0, x = $scope.columns.length, newCols = [], dcv = !self.config.enableColumnHeavyVirt, r = 0, addCol = function(c) {
                            dcv ? newCols.push(c) : $scope.renderedColumns[r] ? $scope.renderedColumns[r].setVars(c) : $scope.renderedColumns[r] = c.copy(), r++
                        }, i = 0; x > i; i++) {
                        var col = $scope.columns[i];
                        if (col.visible !== !1) {
                            var w = col.width + colwidths;
                            if (col.pinned) {
                                addCol(col);
                                var newLeft = i > 0 ? scrollLeft + totalLeft : scrollLeft;
                                domUtilityService.setColLeft(col, newLeft, self), totalLeft += col.width
                            } else w >= scrollLeft && colwidths <= scrollLeft + self.rootDim.outerWidth && addCol(col);
                            colwidths += col.width
                        }
                    }
                    dcv && ($scope.renderedColumns = newCols)
                }, self.prevScrollTop = 0, self.prevScrollIndex = 0, $scope.adjustScrollTop = function(scrollTop, force) {
                    if (self.prevScrollTop !== scrollTop || force) {
                        scrollTop > 0 && self.$viewport[0].scrollHeight - scrollTop <= self.$viewport.outerHeight() && $scope.$emit("ngGridEventScroll");
                        var newRange, rowIndex = Math.floor(scrollTop / self.config.rowHeight);
                        if (self.filteredRows.length > self.config.virtualizationThreshold) {
                            if (self.prevScrollTop < scrollTop && rowIndex < self.prevScrollIndex + SCROLL_THRESHOLD) return;
                            if (self.prevScrollTop > scrollTop && rowIndex > self.prevScrollIndex - SCROLL_THRESHOLD) return;
                            newRange = new ngRange(Math.max(0, rowIndex - EXCESS_ROWS), rowIndex + self.minRowsToRender() + EXCESS_ROWS)
                        } else {
                            var maxLen = $scope.configGroups.length > 0 ? self.rowFactory.parsedData.length : self.filteredRows.length;
                            newRange = new ngRange(0, Math.max(maxLen, self.minRowsToRender() + EXCESS_ROWS))
                        }
                        self.prevScrollTop = scrollTop, self.rowFactory.UpdateViewableRange(newRange), self.prevScrollIndex = rowIndex
                    }
                }, $scope.toggleShowMenu = function() {
                    $scope.showMenu = !$scope.showMenu
                }, $scope.toggleSelectAll = function(state, selectOnlyVisible) {
                    $scope.selectionProvider.toggleSelectAll(state, !1, selectOnlyVisible)
                }, $scope.totalFilteredItemsLength = function() {
                    return self.filteredRows.length
                }, $scope.showGroupPanel = function() {
                    return self.config.showGroupPanel
                }, $scope.topPanelHeight = function() {
                    return self.config.showGroupPanel === !0 ? self.config.headerRowHeight + 32 : self.config.headerRowHeight
                }, $scope.viewportDimHeight = function() {
                    return Math.max(0, self.rootDim.outerHeight - $scope.topPanelHeight() - $scope.footerRowHeight - 2)
                }, $scope.groupBy = function(col) {
                    if (!(self.data.length < 1) && col.groupable && col.field) {
                        col.sortDirection || col.sort({
                            shiftKey: $scope.configGroups.length > 0 ? !0 : !1
                        });
                        var indx = $scope.configGroups.indexOf(col); - 1 === indx ? (col.isGroupedBy = !0, $scope.configGroups.push(col), col.groupIndex = $scope.configGroups.length) : $scope.removeGroup(indx), self.$viewport.scrollTop(0), domUtilityService.digest($scope)
                    }
                }, $scope.removeGroup = function(index) {
                    var col = $scope.columns.filter(function(item) {
                        return item.groupIndex === index + 1
                    })[0];
                    col.isGroupedBy = !1, col.groupIndex = 0, $scope.columns[index].isAggCol && ($scope.columns.splice(index, 1), $scope.configGroups.splice(index, 1), self.fixGroupIndexes()), 0 === $scope.configGroups.length && (self.fixColumnIndexes(), domUtilityService.digest($scope)), $scope.adjustScrollLeft(0)
                }, $scope.togglePin = function(col) {
                    for (var indexFrom = col.index, indexTo = 0, i = 0; i < $scope.columns.length && $scope.columns[i].pinned; i++) indexTo++;
                    col.pinned && (indexTo = Math.max(col.originalIndex, indexTo - 1)), col.pinned = !col.pinned, $scope.columns.splice(indexFrom, 1), $scope.columns.splice(indexTo, 0, col), self.fixColumnIndexes(), domUtilityService.BuildStyles($scope, self, !0), self.$viewport.scrollLeft(self.$viewport.scrollLeft() - col.width)
                }, $scope.totalRowWidth = function() {
                    for (var totalWidth = 0, cols = $scope.columns, i = 0; i < cols.length; i++) cols[i].visible !== !1 && (totalWidth += cols[i].width);
                    return totalWidth
                }, $scope.headerScrollerDim = function() {
                    var viewportH = $scope.viewportDimHeight(),
                        maxHeight = self.maxCanvasHt,
                        vScrollBarIsOpen = maxHeight > viewportH,
                        newDim = new ngDimension;
                    return newDim.autoFitHeight = !0, newDim.outerWidth = $scope.totalRowWidth(), vScrollBarIsOpen ? newDim.outerWidth += self.elementDims.scrollW : maxHeight - viewportH <= self.elementDims.scrollH && (newDim.outerWidth += self.elementDims.scrollW), newDim
                }
            },
            ngRange = function(top, bottom) {
                this.topRow = top, this.bottomRow = bottom
            },
            ngRow = function(entity, config, selectionProvider, rowIndex, $utils) {
                this.entity = entity, this.config = config, this.selectionProvider = selectionProvider, this.rowIndex = rowIndex, this.utils = $utils, this.selected = selectionProvider.getSelection(entity), this.cursor = this.config.enableRowSelection && !this.config.selectWithCheckboxOnly ? "pointer" : "default", this.beforeSelectionChange = config.beforeSelectionChangeCallback, this.afterSelectionChange = config.afterSelectionChangeCallback, this.offsetTop = this.rowIndex * config.rowHeight, this.rowDisplayIndex = 0
            };
        ngRow.prototype.setSelection = function(isSelected) {
            this.selectionProvider.setSelection(this, isSelected), this.selectionProvider.lastClickedRow = this
        }, ngRow.prototype.continueSelection = function(event) {
            this.selectionProvider.ChangeSelection(this, event)
        }, ngRow.prototype.ensureEntity = function(expected) {
            this.entity !== expected && (this.entity = expected, this.selected = this.selectionProvider.getSelection(this.entity))
        }, ngRow.prototype.toggleSelected = function(event) {
            if (!this.config.enableRowSelection && !this.config.enableCellSelection) return !0;
            var element = event.target || event;
            return "checkbox" === element.type && "ngSelectionCell ng-scope" !== element.parentElement.className ? !0 : this.config.selectWithCheckboxOnly && "checkbox" !== element.type ? (this.selectionProvider.lastClickedRow = this, !0) : (this.beforeSelectionChange(this, event) && this.continueSelection(event), !1)
        }, ngRow.prototype.alternatingRowClass = function() {
            var isEven = this.rowIndex % 2 === 0,
                classes = {
                    ngRow: !0,
                    selected: this.selected,
                    even: isEven,
                    odd: !isEven,
                    "ui-state-default": this.config.jqueryUITheme && isEven,
                    "ui-state-active": this.config.jqueryUITheme && !isEven
                };
            return classes
        }, ngRow.prototype.getProperty = function(path) {
            return this.utils.evalProperty(this.entity, path)
        }, ngRow.prototype.copy = function() {
            return this.clone = new ngRow(this.entity, this.config, this.selectionProvider, this.rowIndex, this.utils), this.clone.isClone = !0, this.clone.elm = this.elm, this.clone.orig = this, this.clone
        }, ngRow.prototype.setVars = function(fromRow) {
            fromRow.clone = this, this.entity = fromRow.entity, this.selected = fromRow.selected, this.orig = fromRow
        };
        var ngRowFactory = function(grid, $scope, domUtilityService, $templateCache, $utils) {
                var self = this;
                self.aggCache = {}, self.parentCache = [], self.dataChanged = !0, self.parsedData = [], self.rowConfig = {}, self.selectionProvider = $scope.selectionProvider, self.rowHeight = 30, self.numberOfAggregates = 0, self.groupedData = void 0, self.rowHeight = grid.config.rowHeight, self.rowConfig = {
                    enableRowSelection: grid.config.enableRowSelection,
                    rowClasses: grid.config.rowClasses,
                    selectedItems: $scope.selectedItems,
                    selectWithCheckboxOnly: grid.config.selectWithCheckboxOnly,
                    beforeSelectionChangeCallback: grid.config.beforeSelectionChange,
                    afterSelectionChangeCallback: grid.config.afterSelectionChange,
                    jqueryUITheme: grid.config.jqueryUITheme,
                    enableCellSelection: grid.config.enableCellSelection,
                    rowHeight: grid.config.rowHeight
                }, self.renderedRange = new ngRange(0, grid.minRowsToRender() + EXCESS_ROWS), self.buildEntityRow = function(entity, rowIndex) {
                    return new ngRow(entity, self.rowConfig, self.selectionProvider, rowIndex, $utils)
                }, self.buildAggregateRow = function(aggEntity, rowIndex) {
                    var agg = self.aggCache[aggEntity.aggIndex];
                    return agg || (agg = new ngAggregate(aggEntity, self, self.rowConfig.rowHeight, grid.config.groupsCollapsedByDefault), self.aggCache[aggEntity.aggIndex] = agg), agg.rowIndex = rowIndex, agg.offsetTop = rowIndex * self.rowConfig.rowHeight, agg
                }, self.UpdateViewableRange = function(newRange) {
                    self.renderedRange = newRange, self.renderedChange()
                }, self.filteredRowsChanged = function() {
                    grid.lateBoundColumns && grid.filteredRows.length > 0 && (grid.config.columnDefs = void 0, grid.buildColumns(), grid.lateBoundColumns = !1, $scope.$evalAsync(function() {
                        $scope.adjustScrollLeft(0)
                    })), self.dataChanged = !0, grid.config.groups.length > 0 && self.getGrouping(grid.config.groups), self.UpdateViewableRange(self.renderedRange)
                }, self.renderedChange = function() {
                    if (!self.groupedData || grid.config.groups.length < 1) return self.renderedChangeNoGroups(), void grid.refreshDomSizes();
                    self.wasGrouped = !0, self.parentCache = [];
                    var x = 0,
                        temp = self.parsedData.filter(function(e) {
                            return e.isAggRow ? e.parent && e.parent.collapsed ? !1 : !0 : (e[NG_HIDDEN] || (e.rowIndex = x++), !e[NG_HIDDEN])
                        });
                    self.totalRows = temp.length;
                    for (var rowArr = [], i = self.renderedRange.topRow; i < self.renderedRange.bottomRow; i++) temp[i] && (temp[i].offsetTop = i * grid.config.rowHeight, rowArr.push(temp[i]));
                    grid.setRenderedRows(rowArr)
                }, self.renderedChangeNoGroups = function() {
                    for (var rowArr = [], i = self.renderedRange.topRow; i < self.renderedRange.bottomRow; i++) grid.filteredRows[i] && (grid.filteredRows[i].rowIndex = i, grid.filteredRows[i].offsetTop = i * grid.config.rowHeight, rowArr.push(grid.filteredRows[i]));
                    grid.setRenderedRows(rowArr)
                }, self.fixRowCache = function() {
                    var newLen = grid.data.length,
                        diff = newLen - grid.rowCache.length;
                    if (0 > diff) grid.rowCache.length = grid.rowMap.length = newLen;
                    else
                        for (var i = grid.rowCache.length; newLen > i; i++) grid.rowCache[i] = grid.rowFactory.buildEntityRow(grid.data[i], i)
                }, self.parseGroupData = function(g) {
                    if (g.values)
                        for (var x = 0; x < g.values.length; x++) self.parentCache[self.parentCache.length - 1].children.push(g.values[x]), self.parsedData.push(g.values[x]);
                    else
                        for (var prop in g)
                            if (prop !== NG_FIELD && prop !== NG_DEPTH && prop !== NG_COLUMN && g.hasOwnProperty(prop)) {
                                var agg = self.buildAggregateRow({
                                    gField: g[NG_FIELD],
                                    gLabel: prop,
                                    gDepth: g[NG_DEPTH],
                                    isAggRow: !0,
                                    _ng_hidden_: !1,
                                    children: [],
                                    aggChildren: [],
                                    aggIndex: self.numberOfAggregates,
                                    aggLabelFilter: g[NG_COLUMN].aggLabelFilter
                                }, 0);
                                self.numberOfAggregates++, agg.parent = self.parentCache[agg.depth - 1], agg.parent && (agg.parent.collapsed = !1, agg.parent.aggChildren.push(agg)), self.parsedData.push(agg), self.parentCache[agg.depth] = agg, self.parseGroupData(g[prop])
                            }
                }, self.getGrouping = function(groups) {
                    function filterCols(cols, group) {
                        return cols.filter(function(c) {
                            return c.field === group
                        })
                    }
                    self.aggCache = [], self.numberOfAggregates = 0, self.groupedData = {};
                    for (var rows = grid.filteredRows, maxDepth = groups.length, cols = $scope.columns, x = 0; x < rows.length; x++) {
                        var model = rows[x].entity;
                        if (!model) return;
                        rows[x][NG_HIDDEN] = grid.config.groupsCollapsedByDefault;
                        for (var ptr = self.groupedData, y = 0; y < groups.length; y++) {
                            var group = groups[y],
                                col = filterCols(cols, group)[0],
                                val = $utils.evalProperty(model, group);
                            val = "" === val || null === val ? "null" : val.toString(), ptr[val] || (ptr[val] = {}), ptr[NG_FIELD] || (ptr[NG_FIELD] = group), ptr[NG_DEPTH] || (ptr[NG_DEPTH] = y), ptr[NG_COLUMN] || (ptr[NG_COLUMN] = col), ptr = ptr[val]
                        }
                        ptr.values || (ptr.values = []), ptr.values.push(rows[x])
                    }
                    if (cols.length > 0)
                        for (var z = 0; z < groups.length; z++) !cols[z].isAggCol && maxDepth >= z && cols.splice(0, 0, new ngColumn({
                            colDef: {
                                field: "",
                                width: 25,
                                sortable: !1,
                                resizable: !1,
                                headerCellTemplate: '<div class="ngAggHeader"></div>',
                                pinned: grid.config.pinSelectionCheckbox
                            },
                            enablePinning: grid.config.enablePinning,
                            isAggCol: !0,
                            headerRowHeight: grid.config.headerRowHeight
                        }, $scope, grid, domUtilityService, $templateCache, $utils));
                    grid.fixColumnIndexes(), $scope.adjustScrollLeft(0), self.parsedData.length = 0, self.parseGroupData(self.groupedData), self.fixRowCache()
                }, grid.config.groups.length > 0 && grid.filteredRows.length > 0 && self.getGrouping(grid.config.groups)
            },
            ngSearchProvider = function($scope, grid, $filter, $utils) {
                var self = this,
                    searchConditions = [];
                self.extFilter = grid.config.filterOptions.useExternalFilter, $scope.showFilter = grid.config.showFilter, $scope.filterText = "", self.fieldMap = {};
                var convertToFieldMap = function(obj) {
                        var fieldMap = {};
                        for (var prop in obj) obj.hasOwnProperty(prop) && (fieldMap[prop.toLowerCase()] = obj[prop]);
                        return fieldMap
                    },
                    getAllPrimitiveValues = function(value) {
                        if ("object" == typeof value) {
                            var arr = [];
                            for (var prop in value) arr = arr.concat(getAllPrimitiveValues(value[prop]));
                            return arr
                        }
                        return [value]
                    },
                    searchEntireRow = function(condition, item, fieldMap) {
                        var result;
                        for (var prop in item)
                            if (item.hasOwnProperty(prop)) {
                                var c = fieldMap[prop.toLowerCase()],
                                    pVal = item[prop];
                                if ("object" != typeof pVal || pVal instanceof Date) {
                                    var f = null,
                                        s = null;
                                    if (c && c.cellFilter && (s = c.cellFilter.split(":"), f = $filter(s[0])), null !== pVal && void 0 !== pVal) {
                                        if ("function" == typeof f) {
                                            var filterRes = f(pVal, s[1] ? s[1].slice(1, -1) : "").toString();
                                            result = condition.regex.test(filterRes)
                                        } else result = condition.regex.test(pVal.toString());
                                        if (result) return !0
                                    }
                                } else {
                                    var objectFieldMap = convertToFieldMap(c);
                                    if (result = searchEntireRow(condition, pVal, objectFieldMap)) return !0
                                }
                            }
                        return !1
                    },
                    searchColumn = function(condition, item) {
                        var result, col = self.fieldMap[condition.columnDisplay];
                        if (!col) return !1;
                        var sp = col.cellFilter.split(":"),
                            filter = col.cellFilter ? $filter(sp[0]) : null,
                            value = item[condition.column] || item[col.field.split(".")[0]] || $utils.evalProperty(item, col.field);
                        if (null === value || void 0 === value) return !1;
                        if ("function" == typeof filter) {
                            var filterResults = filter("object" == typeof value ? evalObject(value, col.field) : value, sp[1]).toString();
                            result = condition.regex.test(filterResults)
                        } else {
                            var primitiveValues = getAllPrimitiveValues(evalObject(value, col.field));
                            for (var prop in primitiveValues) result |= condition.regex.test(primitiveValues[prop])
                        }
                        return result ? !0 : !1
                    },
                    filterFunc = function(item) {
                        for (var x = 0, len = searchConditions.length; len > x; x++) {
                            var result, condition = searchConditions[x];
                            if (result = condition.column ? searchColumn(condition, item) : searchEntireRow(condition, item, self.fieldMap), !result) return !1
                        }
                        return !0
                    };
                self.evalFilter = function() {
                    grid.filteredRows = 0 === searchConditions.length ? grid.rowCache : grid.rowCache.filter(function(row) {
                        return filterFunc(row.entity)
                    });
                    for (var i = 0; i < grid.filteredRows.length; i++) grid.filteredRows[i].rowIndex = i;
                    grid.rowFactory.filteredRowsChanged()
                };
                var evalObject = function(obj, columnName) {
                        if ("object" != typeof obj || "string" != typeof columnName) return obj;
                        var args = columnName.split("."),
                            cObj = obj;
                        if (args.length > 1) {
                            for (var i = 1, len = args.length; len > i; i++)
                                if (cObj = cObj[args[i]], !cObj) return obj;
                            return cObj
                        }
                        return obj
                    },
                    getRegExp = function(str, modifiers) {
                        try {
                            return new RegExp(str, modifiers)
                        } catch (err) {
                            return new RegExp(str.replace(/(\^|\$|\(|\)|<|>|\[|\]|\{|\}|\\|\||\.|\*|\+|\?)/g, "\\$1"))
                        }
                    },
                    buildSearchConditions = function(a) {
                        searchConditions = [];
                        var qStr;
                        if (qStr = $.trim(a))
                            for (var columnFilters = qStr.split(";"), i = 0; i < columnFilters.length; i++) {
                                var args = columnFilters[i].split(":");
                                if (args.length > 1) {
                                    var columnName = $.trim(args[0]),
                                        columnValue = $.trim(args[1]);
                                    columnName && columnValue && searchConditions.push({
                                        column: columnName,
                                        columnDisplay: columnName.replace(/\s+/g, "").toLowerCase(),
                                        regex: getRegExp(columnValue, "i")
                                    })
                                } else {
                                    var val = $.trim(args[0]);
                                    val && searchConditions.push({
                                        column: "",
                                        regex: getRegExp(val, "i")
                                    })
                                }
                            }
                    };
                self.extFilter || $scope.$on("$destroy", $scope.$watch("columns", function(cs) {
                    for (var i = 0; i < cs.length; i++) {
                        var col = cs[i];
                        if (col.field)
                            if (col.field.match(/\./g)) {
                                for (var properties = col.field.split("."), currentProperty = self.fieldMap, j = 0; j < properties.length - 1; j++) currentProperty[properties[j]] = currentProperty[properties[j]] || {}, currentProperty = currentProperty[properties[j]];
                                currentProperty[properties[properties.length - 1]] = col
                            } else self.fieldMap[col.field.toLowerCase()] = col;
                        col.displayName && (self.fieldMap[col.displayName.toLowerCase().replace(/\s+/g, "")] = col)
                    }
                })), $scope.$on("$destroy", $scope.$watch(function() {
                    return grid.config.filterOptions.filterText
                }, function(a) {
                    $scope.filterText = a
                })), $scope.$on("$destroy", $scope.$watch("filterText", function(a) {
                    self.extFilter || ($scope.$emit("ngGridEventFilter", a), buildSearchConditions(a), self.evalFilter())
                }))
            },
            ngSelectionProvider = function(grid, $scope, $parse, $utils) {
                var self = this;
                self.multi = grid.config.multiSelect, self.selectedItems = grid.config.selectedItems, self.selectedIndex = grid.config.selectedIndex, self.lastClickedRow = void 0, self.ignoreSelectedItemChanges = !1;
                var pKeyExpression = grid.config.primaryKey;
                pKeyExpression && (pKeyExpression = $utils.preEval("entity." + grid.config.primaryKey)), self.pKeyParser = $parse(pKeyExpression), self.ChangeSelection = function(rowItem, evt) {
                    var charCode = evt.which || evt.keyCode,
                        isUpDownKeyPress = 40 === charCode || 38 === charCode;
                    if (evt && evt.shiftKey && !evt.keyCode && self.multi && grid.config.enableRowSelection) {
                        if (self.lastClickedRow) {
                            var rowsArr;
                            rowsArr = $scope.configGroups.length > 0 ? grid.rowFactory.parsedData.filter(function(row) {
                                return !row.isAggRow
                            }) : grid.filteredRows;
                            var thisIndx = rowItem.rowIndex,
                                prevIndx = self.lastClickedRowIndex;
                            if (thisIndx === prevIndx) return !1;
                            prevIndx > thisIndx ? (thisIndx ^= prevIndx, prevIndx = thisIndx ^ prevIndx, thisIndx ^= prevIndx, thisIndx--) : prevIndx++;
                            for (var rows = []; thisIndx >= prevIndx; prevIndx++) rows.push(rowsArr[prevIndx]);
                            if (rows[rows.length - 1].beforeSelectionChange(rows, evt)) {
                                for (var i = 0; i < rows.length; i++) {
                                    var ri = rows[i],
                                        selectionState = ri.selected;
                                    ri.selected = !selectionState, ri.clone && (ri.clone.selected = ri.selected);
                                    var index = self.selectedItems.indexOf(ri.entity); - 1 === index ? self.selectedItems.push(ri.entity) : self.selectedItems.splice(index, 1)
                                }
                                rows[rows.length - 1].afterSelectionChange(rows, evt)
                            }
                            return self.lastClickedRow = rowItem, self.lastClickedRowIndex = rowItem.rowIndex, !0
                        }
                    } else self.multi ? (!evt.keyCode || isUpDownKeyPress && !grid.config.selectWithCheckboxOnly) && self.setSelection(rowItem, !rowItem.selected) : self.lastClickedRow === rowItem ? self.setSelection(self.lastClickedRow, grid.config.keepLastSelected ? !0 : !rowItem.selected) : (self.lastClickedRow && self.setSelection(self.lastClickedRow, !1), self.setSelection(rowItem, !rowItem.selected));
                    return self.lastClickedRow = rowItem, self.lastClickedRowIndex = rowItem.rowIndex, !0
                }, self.getSelection = function(entity) {
                    return -1 !== self.getSelectionIndex(entity)
                }, self.getSelectionIndex = function(entity) {
                    var index = -1;
                    if (grid.config.primaryKey) {
                        var val = self.pKeyParser({
                            entity: entity
                        });
                        angular.forEach(self.selectedItems, function(c, k) {
                            val === self.pKeyParser({
                                entity: c
                            }) && (index = k)
                        })
                    } else index = self.selectedItems.indexOf(entity);
                    return index
                }, self.setSelection = function(rowItem, isSelected) {
                    if (grid.config.enableRowSelection) {
                        if (isSelected) - 1 === self.getSelectionIndex(rowItem.entity) && (!self.multi && self.selectedItems.length > 0 && self.toggleSelectAll(!1, !0), self.selectedItems.push(rowItem.entity));
                        else {
                            var indx = self.getSelectionIndex(rowItem.entity); - 1 !== indx && self.selectedItems.splice(indx, 1)
                        }
                        rowItem.selected = isSelected, rowItem.orig && (rowItem.orig.selected = isSelected), rowItem.clone && (rowItem.clone.selected = isSelected), rowItem.afterSelectionChange(rowItem)
                    }
                }, self.toggleSelectAll = function(checkAll, bypass, selectFiltered) {
                    var wasSelected, index, rows = selectFiltered ? grid.filteredRows : grid.rowCache;
                    if (bypass || grid.config.beforeSelectionChange(rows, checkAll)) {
                        !selectFiltered && self.selectedItems.length > 0 && (self.selectedItems.length = 0);
                        for (var i = 0; i < rows.length; i++) wasSelected = rows[i].selected, rows[i].selected = checkAll, rows[i].clone && (rows[i].clone.selected = checkAll), !wasSelected && checkAll ? self.selectedItems.push(rows[i].entity) : wasSelected && !checkAll && (index = self.selectedItems.indexOf(rows[i].entity), index > -1 && self.selectedItems.splice(index, 1));
                        bypass || grid.config.afterSelectionChange(rows, checkAll)
                    }
                }
            },
            ngStyleProvider = function($scope, grid) {
                $scope.headerCellStyle = function(col) {
                    return {
                        height: col.headerRowHeight + "px"
                    }
                }, $scope.rowStyle = function(row) {
                    var ret = {
                        top: row.offsetTop + "px",
                        height: $scope.rowHeight + "px"
                    };
                    return row.isAggRow && (ret.left = row.offsetLeft), ret
                }, $scope.canvasStyle = function() {
                    return {
                        height: grid.maxCanvasHt + "px"
                    }
                }, $scope.headerScrollerStyle = function() {
                    return {
                        height: grid.config.headerRowHeight + "px"
                    }
                }, $scope.topPanelStyle = function() {
                    return {
                        width: grid.rootDim.outerWidth + "px",
                        height: $scope.topPanelHeight() + "px"
                    }
                }, $scope.headerStyle = function() {
                    return {
                        width: grid.rootDim.outerWidth + "px",
                        height: grid.config.headerRowHeight + "px"
                    }
                }, $scope.groupPanelStyle = function() {
                    return {
                        width: grid.rootDim.outerWidth + "px",
                        height: "32px"
                    }
                }, $scope.viewportStyle = function() {
                    return {
                        width: grid.rootDim.outerWidth + "px",
                        height: $scope.viewportDimHeight() + "px"
                    }
                }, $scope.footerStyle = function() {
                    return {
                        width: grid.rootDim.outerWidth + "px",
                        height: $scope.footerRowHeight + "px"
                    }
                }
            };
        ngGridDirectives.directive("ngCellHasFocus", ["$domUtilityService", function(domUtilityService) {
            var focusOnInputElement = function($scope) {
                $scope.isFocused = !0, domUtilityService.digest($scope), $scope.$broadcast("ngGridEventStartCellEdit"), $scope.$emit("ngGridEventStartCellEdit"), $scope.$on("$destroy", $scope.$on("ngGridEventEndCellEdit", function() {
                    $scope.isFocused = !1, domUtilityService.digest($scope)
                }))
            };
            return function($scope, elm) {
                function mousedown() {
                    return $scope.enableCellEditOnFocus ? isCellEditableOnMouseDown = !0 : elm.focus(), !0
                }

                function click(evt) {
                    $scope.enableCellEditOnFocus && (evt.preventDefault(), isCellEditableOnMouseDown = !1, focusOnInputElement($scope, elm))
                }

                function focus() {
                    return isFocused = !0, $scope.enableCellEditOnFocus && !isCellEditableOnMouseDown && focusOnInputElement($scope, elm), !0
                }

                function blur() {
                    return isFocused = !1, !0
                }

                function keydown(evt) {
                    return $scope.enableCellEditOnFocus || (isFocused && 37 !== evt.keyCode && 38 !== evt.keyCode && 39 !== evt.keyCode && 40 !== evt.keyCode && 9 !== evt.keyCode && !evt.shiftKey && 13 !== evt.keyCode && focusOnInputElement($scope, elm), isFocused && evt.shiftKey && evt.keyCode >= 65 && evt.keyCode <= 90 && focusOnInputElement($scope, elm), 27 === evt.keyCode && elm.focus()), !0
                }
                var isFocused = !1,
                    isCellEditableOnMouseDown = !1;
                $scope.editCell = function() {
                    $scope.enableCellEditOnFocus || setTimeout(function() {
                        focusOnInputElement($scope, elm)
                    }, 0)
                }, elm.bind("mousedown", mousedown), elm.bind("click", click), elm.bind("focus", focus), elm.bind("blur", blur), elm.bind("keydown", keydown), elm.on("$destroy", function() {
                    elm.off("mousedown", mousedown), elm.off("click", click), elm.off("focus", focus), elm.off("blur", blur), elm.off("keydown", keydown)
                })
            }
        }]), ngGridDirectives.directive("ngCellText", function() {
            return function(scope, elm) {
                function mouseover(evt) {
                    evt.preventDefault()
                }

                function mouseleave(evt) {
                    evt.preventDefault()
                }
                elm.bind("mouseover", mouseover), elm.bind("mouseleave", mouseleave), elm.on("$destroy", function() {
                    elm.off("mouseover", mouseover), elm.off("mouseleave", mouseleave)
                })
            }
        }), ngGridDirectives.directive("ngCell", ["$compile", "$domUtilityService", "$utilityService", function($compile, domUtilityService, utilityService) {
            var ngCell = {
                scope: !1,
                compile: function() {
                    return {
                        pre: function($scope, iElement) {
                            var html, cellTemplate = $scope.col.cellTemplate.replace(COL_FIELD, utilityService.preEval("row.entity." + $scope.col.field));
                            $scope.col.enableCellEdit ? (html = $scope.col.cellEditTemplate, html = html.replace(CELL_EDITABLE_CONDITION, $scope.col.cellEditableCondition), html = html.replace(DISPLAY_CELL_TEMPLATE, cellTemplate), html = html.replace(EDITABLE_CELL_TEMPLATE, $scope.col.editableCellTemplate.replace(COL_FIELD, utilityService.preEval("row.entity." + $scope.col.field)))) : html = cellTemplate;
                            var cellElement = $(html);
                            iElement.append(cellElement), $compile(cellElement)($scope), $scope.enableCellSelection && -1 === cellElement[0].className.indexOf("ngSelectionCell") && (cellElement[0].setAttribute("tabindex", 0), cellElement.addClass("ngCellElement"))
                        },
                        post: function($scope, iElement) {
                            $scope.enableCellSelection && $scope.domAccessProvider.selectionHandlers($scope, iElement), $scope.$on("$destroy", $scope.$on("ngGridEventDigestCell", function() {
                                domUtilityService.digest($scope)
                            }))
                        }
                    }
                }
            };
            return ngCell
        }]), ngGridDirectives.directive("ngEditCellIf", [function() {
            return {
                transclude: "element",
                priority: 1e3,
                terminal: !0,
                restrict: "A",
                compile: function(e, a, transclude) {
                    return function(scope, element, attr) {
                        var childElement, childScope;
                        scope.$on("$destroy", scope.$watch(attr.ngEditCellIf, function(newValue) {
                            childElement && (childElement.remove(), childElement = void 0), childScope && (childScope.$destroy(), childScope = void 0), newValue && (childScope = scope.$new(), transclude(childScope, function(clone) {
                                childElement = clone, element.after(clone)
                            }))
                        }))
                    }
                }
            }
        }]), ngGridDirectives.directive("ngGridFooter", ["$compile", "$templateCache", function($compile, $templateCache) {
            var ngGridFooter = {
                scope: !1,
                compile: function() {
                    return {
                        pre: function($scope, iElement) {
                            0 === iElement.children().length && iElement.append($compile($templateCache.get($scope.gridId + "footerTemplate.html"))($scope))
                        }
                    }
                }
            };
            return ngGridFooter
        }]), ngGridDirectives.directive("ngGridMenu", ["$compile", "$templateCache", function($compile, $templateCache) {
            var ngGridMenu = {
                scope: !1,
                compile: function() {
                    return {
                        pre: function($scope, iElement) {
                            0 === iElement.children().length && iElement.append($compile($templateCache.get($scope.gridId + "menuTemplate.html"))($scope))
                        }
                    }
                }
            };
            return ngGridMenu
        }]), ngGridDirectives.directive("ngGrid", ["$compile", "$filter", "$templateCache", "$sortService", "$domUtilityService", "$utilityService", "$timeout", "$parse", "$http", "$q", function($compile, $filter, $templateCache, sortService, domUtilityService, $utils, $timeout, $parse, $http, $q) {
            var ngGridDirective = {
                scope: !0,
                compile: function() {
                    return {
                        pre: function($scope, iElement, iAttrs) {
                            var $element = $(iElement),
                                options = $scope.$eval(iAttrs.ngGrid);
                            options.gridDim = new ngDimension({
                                outerHeight: $($element).height(),
                                outerWidth: $($element).width()
                            });
                            var grid = new ngGrid($scope, options, sortService, domUtilityService, $filter, $templateCache, $utils, $timeout, $parse, $http, $q);
                            return $scope.$on("$destroy", function() {
                                options.gridDim = null, options.selectRow = null, options.selectItem = null, options.selectAll = null, options.selectVisible = null, options.groupBy = null, options.sortBy = null, options.gridId = null, options.ngGrid = null, options.$gridScope = null, options.$gridServices = null, $scope.domAccessProvider.grid = null, angular.element(grid.styleSheet).remove(), grid.styleSheet = null
                            }), grid.init().then(function() {
                                if ("string" == typeof options.columnDefs ? $scope.$on("$destroy", $scope.$parent.$watch(options.columnDefs, function(a) {
                                        return a ? (grid.lateBoundColumns = !1, $scope.columns = [], grid.config.columnDefs = a, grid.buildColumns(), grid.eventProvider.assignEvents(), void domUtilityService.RebuildGrid($scope, grid)) : (grid.refreshDomSizes(), void grid.buildColumns())
                                    }, !0)) : grid.buildColumns(), "string" == typeof options.totalServerItems ? $scope.$on("$destroy", $scope.$parent.$watch(options.totalServerItems, function(newTotal) {
                                        $scope.totalServerItems = angular.isDefined(newTotal) ? newTotal : 0
                                    })) : $scope.totalServerItems = 0, "string" == typeof options.data) {
                                    var dataWatcher = function(a) {
                                        grid.data = $.extend([], a), grid.rowFactory.fixRowCache(), angular.forEach(grid.data, function(item, j) {
                                            var indx = grid.rowMap[j] || j;
                                            grid.rowCache[indx] && grid.rowCache[indx].ensureEntity(item), grid.rowMap[indx] = j
                                        }), grid.searchProvider.evalFilter(), grid.configureColumnWidths(), grid.refreshDomSizes(), grid.config.sortInfo.fields.length > 0 && (grid.sortColumnsInit(), $scope.$emit("ngGridEventSorted", grid.config.sortInfo)), $scope.$emit("ngGridEventData", grid.gridId)
                                    };
                                    $scope.$on("$destroy", $scope.$parent.$watch(options.data, dataWatcher)), $scope.$on("$destroy", $scope.$parent.$watch(options.data + ".length", function() {
                                        dataWatcher($scope.$eval(options.data)), $scope.adjustScrollTop(grid.$viewport.scrollTop(), !0)
                                    }))
                                }
                                return grid.footerController = new ngFooter($scope, grid), iElement.addClass("ngGrid").addClass(grid.gridId.toString()), options.enableHighlighting || iElement.addClass("unselectable"), options.jqueryUITheme && iElement.addClass("ui-widget"), iElement.append($compile($templateCache.get("gridTemplate.html"))($scope)), domUtilityService.AssignGridContainers($scope, iElement, grid), grid.eventProvider = new ngEventProvider(grid, $scope, domUtilityService, $timeout), options.selectRow = function(rowIndex, state) {
                                    grid.rowCache[rowIndex] && (grid.rowCache[rowIndex].clone && grid.rowCache[rowIndex].clone.setSelection(state ? !0 : !1), grid.rowCache[rowIndex].setSelection(state ? !0 : !1))
                                }, options.selectItem = function(itemIndex, state) {
                                    options.selectRow(grid.rowMap[itemIndex], state)
                                }, options.selectAll = function(state) {
                                    $scope.toggleSelectAll(state)
                                }, options.selectVisible = function(state) {
                                    $scope.toggleSelectAll(state, !0)
                                }, options.groupBy = function(field) {
                                    if (field) $scope.groupBy($scope.columns.filter(function(c) {
                                        return c.field === field
                                    })[0]);
                                    else {
                                        var arr = $.extend(!0, [], $scope.configGroups);
                                        angular.forEach(arr, $scope.groupBy)
                                    }
                                }, options.sortBy = function(field) {
                                    var col = $scope.columns.filter(function(c) {
                                        return c.field === field
                                    })[0];
                                    col && col.sort()
                                }, options.gridId = grid.gridId, options.ngGrid = grid, options.$gridScope = $scope, options.$gridServices = {
                                    SortService: sortService,
                                    DomUtilityService: domUtilityService,
                                    UtilityService: $utils
                                }, $scope.$on("$destroy", $scope.$on("ngGridEventDigestGrid", function() {
                                    domUtilityService.digest($scope.$parent)
                                })), $scope.$on("$destroy", $scope.$on("ngGridEventDigestGridParent", function() {
                                    domUtilityService.digest($scope.$parent)
                                })), $scope.$evalAsync(function() {
                                    $scope.adjustScrollLeft(0)
                                }), angular.forEach(options.plugins, function(p) {
                                    "function" == typeof p && (p = new p);
                                    var newScope = $scope.$new();
                                    p.init(newScope, grid, options.$gridServices), options.plugins[$utils.getInstanceType(p)] = p, $scope.$on("$destroy", function() {
                                        newScope.$destroy()
                                    })
                                }), "function" == typeof options.init && options.init(grid, $scope), null
                            })
                        }
                    }
                }
            };
            return ngGridDirective
        }]), ngGridDirectives.directive("ngHeaderCell", ["$compile", function($compile) {
            var ngHeaderCell = {
                scope: !1,
                compile: function() {
                    return {
                        pre: function($scope, iElement) {
                            iElement.append($compile($scope.col.headerCellTemplate)($scope))
                        }
                    }
                }
            };
            return ngHeaderCell
        }]), ngGridDirectives.directive("ngHeaderRow", ["$compile", "$templateCache", function($compile, $templateCache) {
            var ngHeaderRow = {
                scope: !1,
                compile: function() {
                    return {
                        pre: function($scope, iElement) {
                            0 === iElement.children().length && iElement.append($compile($templateCache.get($scope.gridId + "headerRowTemplate.html"))($scope))
                        }
                    }
                }
            };
            return ngHeaderRow
        }]), ngGridDirectives.directive("ngInput", [function() {
            return {
                require: "ngModel",
                link: function(scope, elm, attrs, ngModel) {
                    function keydown(evt) {
                        switch (evt.keyCode) {
                            case 37:
                            case 38:
                            case 39:
                            case 40:
                                evt.stopPropagation();
                                break;
                            case 27:
                                scope.$$phase || scope.$apply(function() {
                                    ngModel.$setViewValue(oldCellValue), elm.blur()
                                });
                                break;
                            case 13:
                                (scope.enableCellEditOnFocus && scope.totalFilteredItemsLength() - 1 > scope.row.rowIndex && scope.row.rowIndex > 0 || scope.col.enableCellEdit) && elm.blur()
                        }
                        return !0
                    }

                    function click(evt) {
                        evt.stopPropagation()
                    }

                    function mousedown(evt) {
                        evt.stopPropagation()
                    }
                    var oldCellValue, dereg = scope.$watch("ngModel", function() {
                        oldCellValue = ngModel.$modelValue, dereg()
                    });
                    elm.bind("keydown", keydown), elm.bind("click", click), elm.bind("mousedown", mousedown), elm.on("$destroy", function() {
                        elm.off("keydown", keydown), elm.off("click", click), elm.off("mousedown", mousedown)
                    }), scope.$on("$destroy", scope.$on("ngGridEventStartCellEdit", function() {
                        elm.focus(), elm.select()
                    })), angular.element(elm).bind("blur", function() {
                        scope.$emit("ngGridEventEndCellEdit")
                    })
                }
            }
        }]), ngGridDirectives.directive("ngRow", ["$compile", "$domUtilityService", "$templateCache", function($compile, domUtilityService, $templateCache) {
            var ngRow = {
                scope: !1,
                compile: function() {
                    return {
                        pre: function($scope, iElement) {
                            if ($scope.row.elm = iElement, $scope.row.clone && ($scope.row.clone.elm = iElement), $scope.row.isAggRow) {
                                var html = $templateCache.get($scope.gridId + "aggregateTemplate.html");
                                html = $scope.row.aggLabelFilter ? html.replace(CUSTOM_FILTERS, "| " + $scope.row.aggLabelFilter) : html.replace(CUSTOM_FILTERS, ""), iElement.append($compile(html)($scope))
                            } else iElement.append($compile($templateCache.get($scope.gridId + "rowTemplate.html"))($scope));
                            $scope.$on("$destroy", $scope.$on("ngGridEventDigestRow", function() {
                                domUtilityService.digest($scope)
                            }))
                        }
                    }
                }
            };
            return ngRow
        }]), ngGridDirectives.directive("ngViewport", [function() {
            return function($scope, elm) {
                function scroll(evt) {
                    var scrollLeft = evt.target.scrollLeft,
                        scrollTop = evt.target.scrollTop;
                    return $scope.$headerContainer && $scope.$headerContainer.scrollLeft(scrollLeft), $scope.adjustScrollLeft(scrollLeft), $scope.adjustScrollTop(scrollTop), $scope.forceSyncScrolling ? ensureDigest() : (clearTimeout(scrollTimer), scrollTimer = setTimeout(ensureDigest, 150)), prevScollLeft = scrollLeft, prevScollTop = scrollTop, isMouseWheelActive = !1, !0
                }

                function mousewheel() {
                    return isMouseWheelActive = !0, elm.focus && elm.focus(), !0
                }
                var isMouseWheelActive, prevScollLeft, scrollTimer, prevScollTop = 0,
                    ensureDigest = function() {
                        $scope.$root.$$phase || $scope.$digest()
                    };
                elm.bind("scroll", scroll), elm.bind("mousewheel DOMMouseScroll", mousewheel), elm.on("$destroy", function() {
                    elm.off("scroll", scroll), elm.off("mousewheel DOMMouseScroll", mousewheel)
                }), $scope.enableCellSelection || $scope.domAccessProvider.selectionHandlers($scope, elm)
            }
        }]), window.ngGrid.i18n.da = {
            ngAggregateLabel: "artikler",
            ngGroupPanelDescription: "GrupÃ©r rÃ¦kker udfra en kolonne ved at trÃ¦kke dens overskift hertil.",
            ngSearchPlaceHolder: "SÃ¸g...",
            ngMenuText: "VÃ¦lg kolonner:",
            ngShowingItemsLabel: "Viste rÃ¦kker:",
            ngTotalItemsLabel: "RÃ¦kker totalt:",
            ngSelectedItemsLabel: "Valgte rÃ¦kker:",
            ngPageSizeLabel: "Side stÃ¸rrelse:",
            ngPagerFirstTitle: "FÃ¸rste side",
            ngPagerNextTitle: "NÃ¦ste side",
            ngPagerPrevTitle: "Forrige side",
            ngPagerLastTitle: "Sidste side"
        }, window.ngGrid.i18n.de = {
            ngAggregateLabel: "eintrag",
            ngGroupPanelDescription: "Ziehen Sie eine SpaltenÃ¼berschrift hierhin um nach dieser Spalte zu gruppieren.",
            ngSearchPlaceHolder: "Suche...",
            ngMenuText: "Spalten auswÃ¤hlen:",
            ngShowingItemsLabel: "Zeige EintrÃ¤ge:",
            ngTotalItemsLabel: "EintrÃ¤ge gesamt:",
            ngSelectedItemsLabel: "AusgewÃ¤hlte EintrÃ¤ge:",
            ngPageSizeLabel: "EintrÃ¤ge pro Seite:",
            ngPagerFirstTitle: "Erste Seite",
            ngPagerNextTitle: "NÃ¤chste Seite",
            ngPagerPrevTitle: "Vorherige Seite",
            ngPagerLastTitle: "Letzte Seite"
        }, window.ngGrid.i18n.en = {
            ngAggregateLabel: "items",
            ngGroupPanelDescription: "Drag a column header here and drop it to group by that column.",
            ngSearchPlaceHolder: "Search...",
            ngMenuText: "Choose Columns:",
            ngShowingItemsLabel: "Showing Items:",
            ngTotalItemsLabel: "Total Items:",
            ngSelectedItemsLabel: "Selected Items:",
            ngPageSizeLabel: "Page Size:",
            ngPagerFirstTitle: "First Page",
            ngPagerNextTitle: "Next Page",
            ngPagerPrevTitle: "Previous Page",
            ngPagerLastTitle: "Last Page"
        }, window.ngGrid.i18n.es = {
            ngAggregateLabel: "ArtÃ­culos",
            ngGroupPanelDescription: "Arrastre un encabezado de columna aquÃ­ y soltarlo para agrupar por esa columna.",
            ngSearchPlaceHolder: "Buscar...",
            ngMenuText: "Elegir columnas:",
            ngShowingItemsLabel: "ArtÃ­culos Mostrando:",
            ngTotalItemsLabel: "ArtÃ­culos Totales:",
            ngSelectedItemsLabel: "ArtÃ­culos Seleccionados:",
            ngPageSizeLabel: "TamaÃ±o de PÃ¡gina:",
            ngPagerFirstTitle: "Primera PÃ¡gina",
            ngPagerNextTitle: "PÃ¡gina Siguiente",
            ngPagerPrevTitle: "PÃ¡gina Anterior",
            ngPagerLastTitle: "Ãšltima PÃ¡gina"
        }, window.ngGrid.i18n.fa = {
            ngAggregateLabel: "Ù…ÙˆØ±Ø¯Ù‡Ø§",
            ngGroupPanelDescription: "ÛŒÚ© Ø¹Ù†ÙˆØ§Ù† Ø³ØªÙˆÙ† Ø§ÛŒÙ†Ø¬Ø§ Ø±Ø§ Ø¨Ø±Ø¯Ø§Ø± Ùˆ Ø¨Ù‡ Ú¯Ø±ÙˆÙ‡ÛŒ Ø§Ø² Ø¢Ù† Ø³ØªÙˆÙ† Ø¨ÛŒØ§Ù†Ø¯Ø§Ø².",
            ngSearchPlaceHolder: "Ø¬Ø³ØªØ¬Ùˆ...",
            ngMenuText: "Ø§Ù†ØªØ®Ø§Ø¨ Ø³ØªÙˆÙ†â€ŒÙ‡Ø§:",
            ngShowingItemsLabel: "Ù†Ù…Ø§ÛŒØ´ Ù…ÙˆØ±Ø¯Ù‡Ø§:",
            ngTotalItemsLabel: "Ù‡Ù…Ù‡Ù” Ù…ÙˆØ±Ø¯Ù‡Ø§:",
            ngSelectedItemsLabel: "Ù…ÙˆØ±Ø¯Ù‡Ø§ÛŒ Ø§Ù†ØªØ®Ø§Ø¨â€ŒØ´Ø¯Ù‡:",
            ngPageSizeLabel: "Ø§Ù†Ø¯Ø§Ø²Ù‡Ù” ØµÙØ­Ù‡:",
            ngPagerFirstTitle: "ØµÙØ­Ù‡Ù” Ø§ÙˆÙ„",
            ngPagerNextTitle: "ØµÙØ­Ù‡Ù” Ø¨Ø¹Ø¯",
            ngPagerPrevTitle: "ØµÙØ­Ù‡Ù” Ù‚Ø¨Ù„",
            ngPagerLastTitle: "Ø¢Ø®Ø±ÛŒÙ† ØµÙØ­Ù‡"
        }, window.ngGrid.i18n.fr = {
            ngAggregateLabel: "articles",
            ngGroupPanelDescription: "Faites glisser un en-tÃªte de colonne ici et dÃ©posez-le vers un groupe par cette colonne.",
            ngSearchPlaceHolder: "Recherche...",
            ngMenuText: "Choisir des colonnes:",
            ngShowingItemsLabel: "Articles Affichage des:",
            ngTotalItemsLabel: "Nombre total d'articles:",
            ngSelectedItemsLabel: "Ã‰lÃ©ments Articles:",
            ngPageSizeLabel: "Taille de page:",
            ngPagerFirstTitle: "PremiÃ¨re page",
            ngPagerNextTitle: "Page Suivante",
            ngPagerPrevTitle: "Page prÃ©cÃ©dente",
            ngPagerLastTitle: "DerniÃ¨re page"
        }, window.ngGrid.i18n.nl = {
            ngAggregateLabel: "items",
            ngGroupPanelDescription: "Sleep hier een kolomkop om op te groeperen.",
            ngSearchPlaceHolder: "Zoeken...",
            ngMenuText: "Kies kolommen:",
            ngShowingItemsLabel: "Toon items:",
            ngTotalItemsLabel: "Totaal items:",
            ngSelectedItemsLabel: "Geselecteerde items:",
            ngPageSizeLabel: "Pagina grootte:, ",
            ngPagerFirstTitle: "Eerste pagina",
            ngPagerNextTitle: "Volgende pagina",
            ngPagerPrevTitle: "Vorige pagina",
            ngPagerLastTitle: "Laatste pagina"
        }, window.ngGrid.i18n["pt-br"] = {
            ngAggregateLabel: "itens",
            ngGroupPanelDescription: "Arraste e solte uma coluna aqui para agrupar por essa coluna",
            ngSearchPlaceHolder: "Procurar...",
            ngMenuText: "Selecione as colunas:",
            ngShowingItemsLabel: "Mostrando os Itens:",
            ngTotalItemsLabel: "Total de Itens:",
            ngSelectedItemsLabel: "Items Selecionados:",
            ngPageSizeLabel: "Tamanho da PÃ¡gina:",
            ngPagerFirstTitle: "Primeira PÃ¡gina",
            ngPagerNextTitle: "PrÃ³xima PÃ¡gina",
            ngPagerPrevTitle: "PÃ¡gina Anterior",
            ngPagerLastTitle: "Ãšltima PÃ¡gina"
        }, window.ngGrid.i18n.ru = {
            ngAggregateLabel: "Ð·Ð°Ð¿Ð¸ÑÐ¸",
            ngGroupPanelDescription: "ÐŸÐµÑ€ÐµÑ‚Ð°Ñ‰Ð¸Ñ‚Ðµ ÑÑŽÐ´Ð° Ð·Ð°Ð³Ð¾Ð»Ð¾Ð²Ð¾Ðº ÐºÐ¾Ð»Ð¾Ð½ÐºÐ¸ Ð´Ð»Ñ Ð³Ñ€ÑƒÐ¿Ð¿Ð¸Ñ€Ð¾Ð²ÐºÐ¸ Ð¿Ð¾ ÑÑ‚Ð¾Ð¹ ÐºÐ¾Ð»Ð¾Ð½ÐºÐµ.",
            ngSearchPlaceHolder: "Ð˜ÑÐºÐ°Ñ‚ÑŒ...",
            ngMenuText: "Ð’Ñ‹Ð±ÐµÑ€Ð¸Ñ‚Ðµ ÑÑ‚Ð¾Ð»Ð±Ñ†Ñ‹:",
            ngShowingItemsLabel: "ÐŸÐ¾ÐºÐ°Ð·Ð°Ð½Ñ‹ Ð·Ð°Ð¿Ð¸ÑÐ¸:",
            ngTotalItemsLabel: "Ð’ÑÐµÐ³Ð¾ Ð·Ð°Ð¿Ð¸ÑÐµÐ¹:",
            ngSelectedItemsLabel: "Ð’Ñ‹Ð±Ñ€Ð°Ð½Ð½Ñ‹Ðµ Ð·Ð°Ð¿Ð¸ÑÐ¸:",
            ngPageSizeLabel: "Ð¡Ñ‚Ñ€Ð¾Ðº Ð½Ð° ÑÑ‚Ñ€Ð°Ð½Ð¸Ñ†Ðµ:",
            ngPagerFirstTitle: "ÐŸÐµÑ€Ð²Ð°Ñ ÑÑ‚Ñ€Ð°Ð½Ð¸Ñ†Ð°",
            ngPagerNextTitle: "Ð¡Ð»ÐµÐ´ÑƒÑŽÑ‰Ð°Ñ ÑÑ‚Ñ€Ð°Ð½Ð¸Ñ†Ð°",
            ngPagerPrevTitle: "ÐŸÑ€ÐµÐ´Ñ‹Ð´ÑƒÑ‰Ð°Ñ ÑÑ‚Ñ€Ð°Ð½Ð¸Ñ†Ð°",
            ngPagerLastTitle: "ÐŸÐ¾ÑÐ»ÐµÐ´Ð½ÑÑ ÑÑ‚Ñ€Ð°Ð½Ð¸Ñ†Ð°"
        }, window.ngGrid.i18n["zh-cn"] = {
            ngAggregateLabel: "æ¡ç›®",
            ngGroupPanelDescription: "æ‹–æ›³è¡¨å¤´åˆ°æ­¤å¤„ä»¥è¿›è¡Œåˆ†ç»„",
            ngSearchPlaceHolder: "æœç´¢...",
            ngMenuText: "æ•°æ®åˆ†ç»„ä¸Žé€‰æ‹©åˆ—ï¼š",
            ngShowingItemsLabel: "å½“å‰æ˜¾ç¤ºæ¡ç›®ï¼š",
            ngTotalItemsLabel: "æ¡ç›®æ€»æ•°ï¼š",
            ngSelectedItemsLabel: "é€‰ä¸­æ¡ç›®ï¼š",
            ngPageSizeLabel: "æ¯é¡µæ˜¾ç¤ºæ•°ï¼š",
            ngPagerFirstTitle: "å›žåˆ°é¦–é¡µ",
            ngPagerNextTitle: "ä¸‹ä¸€é¡µ",
            ngPagerPrevTitle: "ä¸Šä¸€é¡µ",
            ngPagerLastTitle: "å‰å¾€å°¾é¡µ"
        }, window.ngGrid.i18n["zh-tw"] = {
            ngAggregateLabel: "ç­†",
            ngGroupPanelDescription: "æ‹–æ‹‰è¡¨é ­åˆ°æ­¤è™•ä»¥é€²è¡Œåˆ†çµ„",
            ngSearchPlaceHolder: "æœå°‹...",
            ngMenuText: "é¸æ“‡æ¬„ä½ï¼š",
            ngShowingItemsLabel: "ç›®å‰é¡¯ç¤ºç­†æ•¸ï¼š",
            ngTotalItemsLabel: "ç¸½ç­†æ•¸ï¼š",
            ngSelectedItemsLabel: "é¸å–ç­†æ•¸ï¼š",
            ngPageSizeLabel: "æ¯é é¡¯ç¤ºï¼š",
            ngPagerFirstTitle: "ç¬¬ä¸€é ",
            ngPagerNextTitle: "ä¸‹ä¸€é ",
            ngPagerPrevTitle: "ä¸Šä¸€é ",
            ngPagerLastTitle: "æœ€å¾Œé "
        }, angular.module("ngGrid").run(["$templateCache", function($templateCache) {
            $templateCache.put("aggregateTemplate.html", '<div ng-click="row.toggleExpand()" ng-style="rowStyle(row)" class="ngAggregate">\r\n    <span class="ngAggregateText">{{row.label CUSTOM_FILTERS}} ({{row.totalChildren()}} {{AggItemsLabel}})</span>\r\n    <div class="{{row.aggClass()}}"></div>\r\n</div>\r\n'), $templateCache.put("cellEditTemplate.html", '<div ng-cell-has-focus ng-dblclick="CELL_EDITABLE_CONDITION && editCell()">\r\n	<div ng-edit-cell-if="!(isFocused && CELL_EDITABLE_CONDITION)">	\r\n		DISPLAY_CELL_TEMPLATE\r\n	</div>\r\n	<div ng-edit-cell-if="isFocused && CELL_EDITABLE_CONDITION">\r\n		EDITABLE_CELL_TEMPLATE\r\n	</div>\r\n</div>\r\n'), $templateCache.put("cellTemplate.html", '<div class="ngCellText" ng-class="col.colIndex()"><span ng-cell-text>{{COL_FIELD CUSTOM_FILTERS}}</span></div>'), $templateCache.put("checkboxCellTemplate.html", '<div class="ngSelectionCell"><input tabindex="-1" class="ngSelectionCheckbox" type="checkbox" ng-checked="row.selected" /></div>'), $templateCache.put("checkboxHeaderTemplate.html", '<input class="ngSelectionHeader" type="checkbox" ng-show="multiSelect" ng-model="allSelected" ng-change="toggleSelectAll(allSelected, true)"/>'), $templateCache.put("editableCellTemplate.html", '<input ng-class="\'colt\' + col.index" ng-input="COL_FIELD" ng-model="COL_FIELD" />'), $templateCache.put("footerTemplate.html", '<div ng-show="showFooter" class="ngFooterPanel" ng-class="{\'ui-widget-content\': jqueryUITheme, \'ui-corner-bottom\': jqueryUITheme}" ng-style="footerStyle()">\r\n    <div class="ngTotalSelectContainer" >\r\n        <div class="ngFooterTotalItems" ng-class="{\'ngNoMultiSelect\': !multiSelect}" >\r\n            <span class="ngLabel">{{i18n.ngTotalItemsLabel}} {{maxRows()}}</span><span ng-show="filterText.length > 0" class="ngLabel">({{i18n.ngShowingItemsLabel}} {{totalFilteredItemsLength()}})</span>\r\n        </div>\r\n        <div class="ngFooterSelectedItems" ng-show="multiSelect">\r\n            <span class="ngLabel">{{i18n.ngSelectedItemsLabel}} {{selectedItems.length}}</span>\r\n        </div>\r\n    </div>\r\n    <div class="ngPagerContainer" style="float: right; margin-top: 10px;" ng-show="enablePaging" ng-class="{\'ngNoMultiSelect\': !multiSelect}">\r\n        <div style="float:left; margin-right: 10px;" class="ngRowCountPicker">\r\n            <span style="float: left; margin-top: 3px;" class="ngLabel">{{i18n.ngPageSizeLabel}}</span>\r\n            <select style="float: left;height: 27px; width: 100px" ng-model="pagingOptions.pageSize" >\r\n                <option ng-repeat="size in pagingOptions.pageSizes">{{size}}</option>\r\n            </select>\r\n        </div>\r\n        <div style="float:left; margin-right: 10px; line-height:25px;" class="ngPagerControl" style="float: left; min-width: 135px;">\r\n            <button type="button" class="ngPagerButton" ng-click="pageToFirst()" ng-disabled="cantPageBackward()" title="{{i18n.ngPagerFirstTitle}}"><div class="ngPagerFirstTriangle"><div class="ngPagerFirstBar"></div></div></button>\r\n            <button type="button" class="ngPagerButton" ng-click="pageBackward()" ng-disabled="cantPageBackward()" title="{{i18n.ngPagerPrevTitle}}"><div class="ngPagerFirstTriangle ngPagerPrevTriangle"></div></button>\r\n            <input class="ngPagerCurrent" min="1" max="{{currentMaxPages}}" type="number" style="width:50px; height: 24px; margin-top: 1px; padding: 0 4px;" ng-model="pagingOptions.currentPage"/>\r\n            <span class="ngGridMaxPagesNumber" ng-show="maxPages() > 0">/ {{maxPages()}}</span>\r\n            <button type="button" class="ngPagerButton" ng-click="pageForward()" ng-disabled="cantPageForward()" title="{{i18n.ngPagerNextTitle}}"><div class="ngPagerLastTriangle ngPagerNextTriangle"></div></button>\r\n            <button type="button" class="ngPagerButton" ng-click="pageToLast()" ng-disabled="cantPageToLast()" title="{{i18n.ngPagerLastTitle}}"><div class="ngPagerLastTriangle"><div class="ngPagerLastBar"></div></div></button>\r\n        </div>\r\n    </div>\r\n</div>\r\n'), $templateCache.put("gridTemplate.html", '<div class="ngTopPanel" ng-class="{\'ui-widget-header\':jqueryUITheme, \'ui-corner-top\': jqueryUITheme}" ng-style="topPanelStyle()">\r\n    <div class="ngGroupPanel" ng-show="showGroupPanel()" ng-style="groupPanelStyle()">\r\n        <div class="ngGroupPanelDescription" ng-show="configGroups.length == 0">{{i18n.ngGroupPanelDescription}}</div>\r\n        <ul ng-show="configGroups.length > 0" class="ngGroupList">\r\n            <li class="ngGroupItem" ng-repeat="group in configGroups">\r\n                <span class="ngGroupElement">\r\n                    <span class="ngGroupName">{{group.displayName}}\r\n                        <span ng-click="removeGroup($index)" class="ngRemoveGroup">x</span>\r\n                    </span>\r\n                    <span ng-hide="$last" class="ngGroupArrow"></span>\r\n                </span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class="ngHeaderContainer" ng-style="headerStyle()">\r\n        <div ng-header-row class="ngHeaderScroller" ng-style="headerScrollerStyle()"></div>\r\n    </div>\r\n    <div ng-grid-menu></div>\r\n</div>\r\n<div class="ngViewport" unselectable="on" ng-viewport ng-class="{\'ui-widget-content\': jqueryUITheme}" ng-style="viewportStyle()">\r\n    <div class="ngCanvas" ng-style="canvasStyle()">\r\n        <div ng-style="rowStyle(row)" ng-repeat="row in renderedRows" ng-click="row.toggleSelected($event)" ng-class="row.alternatingRowClass()" ng-row></div>\r\n    </div>\r\n</div>\r\n<div ng-grid-footer></div>\r\n'), $templateCache.put("headerCellTemplate.html", '<div class="ngHeaderSortColumn {{col.headerClass}}" ng-style="{\'cursor\': col.cursor}" ng-class="{ \'ngSorted\': !col.noSortVisible() }">\r\n    <div ng-click="col.sort($event)" ng-class="\'colt\' + col.index" class="ngHeaderText">{{col.displayName}}</div>\r\n    <div class="ngSortButtonDown" ng-click="col.sort($event)" ng-show="col.showSortButtonDown()"></div>\r\n    <div class="ngSortButtonUp" ng-click="col.sort($event)" ng-show="col.showSortButtonUp()"></div>\r\n    <div class="ngSortPriority">{{col.sortPriority}}</div>\r\n    <div ng-class="{ ngPinnedIcon: col.pinned, ngUnPinnedIcon: !col.pinned }" ng-click="togglePin(col)" ng-show="col.pinnable"></div>\r\n</div>\r\n<div ng-show="col.resizable" class="ngHeaderGrip" ng-click="col.gripClick($event)" ng-mousedown="col.gripOnMouseDown($event)"></div>\r\n'), $templateCache.put("headerRowTemplate.html", '<div ng-style="{ height: col.headerRowHeight }" ng-repeat="col in renderedColumns" ng-class="col.colIndex()" class="ngHeaderCell">\r\n	<div class="ngVerticalBar" ng-style="{height: col.headerRowHeight}" ng-class="{ ngVerticalBarVisible: !$last }">&nbsp;</div>\r\n	<div ng-header-cell></div>\r\n</div>'), $templateCache.put("menuTemplate.html", '<div ng-show="showColumnMenu || showFilter"  class="ngHeaderButton" ng-click="toggleShowMenu()">\r\n    <div class="ngHeaderButtonArrow"></div>\r\n</div>\r\n<div ng-show="showMenu" class="ngColMenu">\r\n    <div ng-show="showFilter">\r\n        <input placeholder="{{i18n.ngSearchPlaceHolder}}" type="text" ng-model="filterText"/>\r\n    </div>\r\n    <div ng-show="showColumnMenu">\r\n        <span class="ngMenuText">{{i18n.ngMenuText}}</span>\r\n        <ul class="ngColList">\r\n            <li class="ngColListItem" ng-repeat="col in columns | ngColumns">\r\n                <label><input ng-disabled="col.pinned" type="checkbox" class="ngColListCheckbox" ng-model="col.visible"/>{{col.displayName}}</label>\r\n				<a title="Group By" ng-class="col.groupedByClass()" ng-show="col.groupable && col.visible" ng-click="groupBy(col)"></a>\r\n				<span class="ngGroupingNumber" ng-show="col.groupIndex > 0">{{col.groupIndex}}</span>          \r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>'), $templateCache.put("rowTemplate.html", '<div ng-style="{ \'cursor\': row.cursor }" ng-repeat="col in renderedColumns" ng-class="col.colIndex()" class="ngCell {{col.cellClass}}">\r\n	<div class="ngVerticalBar" ng-style="{height: rowHeight}" ng-class="{ ngVerticalBarVisible: !$last }">&nbsp;</div>\r\n	<div ng-cell></div>\r\n</div>')
        }])
    }(window, jQuery),
    function(window, angular) {
        "use strict";

        function $SanitizeProvider() {
            this.$get = ["$$sanitizeUri", function($$sanitizeUri) {
                return function(html) {
                    var buf = [];
                    return htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {
                        return !/^unsafe/.test($$sanitizeUri(uri, isImage))
                    })), buf.join("")
                }
            }]
        }

        function sanitizeText(chars) {
            var buf = [],
                writer = htmlSanitizeWriter(buf, angular.noop);
            return writer.chars(chars), buf.join("")
        }

        function makeMap(str) {
            var i, obj = {},
                items = str.split(",");
            for (i = 0; i < items.length; i++) obj[items[i]] = !0;
            return obj
        }

        function htmlParser(html, handler) {
            function parseStartTag(tag, tagName, rest, unary) {
                if (tagName = angular.lowercase(tagName), blockElements[tagName])
                    for (; stack.last() && inlineElements[stack.last()];) parseEndTag("", stack.last());
                optionalEndTagElements[tagName] && stack.last() == tagName && parseEndTag("", tagName), unary = voidElements[tagName] || !!unary, unary || stack.push(tagName);
                var attrs = {};
                rest.replace(ATTR_REGEXP, function(match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {
                    var value = doubleQuotedValue || singleQuotedValue || unquotedValue || "";
                    attrs[name] = decodeEntities(value)
                }), handler.start && handler.start(tagName, attrs, unary)
            }

            function parseEndTag(tag, tagName) {
                var i, pos = 0;
                if (tagName = angular.lowercase(tagName))
                    for (pos = stack.length - 1; pos >= 0 && stack[pos] != tagName; pos--);
                if (pos >= 0) {
                    for (i = stack.length - 1; i >= pos; i--) handler.end && handler.end(stack[i]);
                    stack.length = pos
                }
            }
            "string" != typeof html && (html = null === html || "undefined" == typeof html ? "" : "" + html);
            var index, chars, match, text, stack = [],
                last = html;
            for (stack.last = function() {
                    return stack[stack.length - 1]
                }; html;) {
                if (text = "", chars = !0, stack.last() && specialElements[stack.last()] ? (html = html.replace(new RegExp("(.*)<\\s*\\/\\s*" + stack.last() + "[^>]*>", "i"), function(all, text) {
                        return text = text.replace(COMMENT_REGEXP, "$1").replace(CDATA_REGEXP, "$1"), handler.chars && handler.chars(decodeEntities(text)), ""
                    }), parseEndTag("", stack.last())) : (0 === html.indexOf("<!--") ? (index = html.indexOf("--", 4), index >= 0 && html.lastIndexOf("-->", index) === index && (handler.comment && handler.comment(html.substring(4, index)), html = html.substring(index + 3), chars = !1)) : DOCTYPE_REGEXP.test(html) ? (match = html.match(DOCTYPE_REGEXP), match && (html = html.replace(match[0], ""), chars = !1)) : BEGING_END_TAGE_REGEXP.test(html) ? (match = html.match(END_TAG_REGEXP), match && (html = html.substring(match[0].length), match[0].replace(END_TAG_REGEXP, parseEndTag), chars = !1)) : BEGIN_TAG_REGEXP.test(html) && (match = html.match(START_TAG_REGEXP), match ? (match[4] && (html = html.substring(match[0].length), match[0].replace(START_TAG_REGEXP, parseStartTag)), chars = !1) : (text += "<", html = html.substring(1))), chars && (index = html.indexOf("<"), text += 0 > index ? html : html.substring(0, index), html = 0 > index ? "" : html.substring(index), handler.chars && handler.chars(decodeEntities(text)))), html == last) throw $sanitizeMinErr("badparse", "The sanitizer was unable to parse the following block of html: {0}", html);
                last = html
            }
            parseEndTag()
        }

        function decodeEntities(value) {
            if (!value) return "";
            var parts = spaceRe.exec(value),
                spaceBefore = parts[1],
                spaceAfter = parts[3],
                content = parts[2];
            return content && (hiddenPre.innerHTML = content.replace(/</g, "&lt;"), content = "textContent" in hiddenPre ? hiddenPre.textContent : hiddenPre.innerText), spaceBefore + content + spaceAfter
        }

        function encodeEntities(value) {
            return value.replace(/&/g, "&amp;").replace(SURROGATE_PAIR_REGEXP, function(value) {
                var hi = value.charCodeAt(0),
                    low = value.charCodeAt(1);
                return "&#" + (1024 * (hi - 55296) + (low - 56320) + 65536) + ";"
            }).replace(NON_ALPHANUMERIC_REGEXP, function(value) {
                return "&#" + value.charCodeAt(0) + ";"
            }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }

        function htmlSanitizeWriter(buf, uriValidator) {
            var ignore = !1,
                out = angular.bind(buf, buf.push);
            return {
                start: function(tag, attrs, unary) {
                    tag = angular.lowercase(tag), !ignore && specialElements[tag] && (ignore = tag), ignore || validElements[tag] !== !0 || (out("<"), out(tag), angular.forEach(attrs, function(value, key) {
                        var lkey = angular.lowercase(key),
                            isImage = "img" === tag && "src" === lkey || "background" === lkey;
                        validAttrs[lkey] !== !0 || uriAttrs[lkey] === !0 && !uriValidator(value, isImage) || (out(" "), out(key), out('="'), out(encodeEntities(value)), out('"'))
                    }), out(unary ? "/>" : ">"))
                },
                end: function(tag) {
                    tag = angular.lowercase(tag), ignore || validElements[tag] !== !0 || (out("</"), out(tag), out(">")), tag == ignore && (ignore = !1)
                },
                chars: function(chars) {
                    ignore || out(encodeEntities(chars))
                }
            }
        }
        var $sanitizeMinErr = angular.$$minErr("$sanitize"),
            START_TAG_REGEXP = /^<((?:[a-zA-Z])[\w:-]*)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*(>?)/,
            END_TAG_REGEXP = /^<\/\s*([\w:-]+)[^>]*>/,
            ATTR_REGEXP = /([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g,
            BEGIN_TAG_REGEXP = /^</,
            BEGING_END_TAGE_REGEXP = /^<\//,
            COMMENT_REGEXP = /<!--(.*?)-->/g,
            DOCTYPE_REGEXP = /<!DOCTYPE([^>]*?)>/i,
            CDATA_REGEXP = /<!\[CDATA\[(.*?)]]>/g,
            SURROGATE_PAIR_REGEXP = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
            NON_ALPHANUMERIC_REGEXP = /([^\#-~| |!])/g,
            voidElements = makeMap("area,br,col,hr,img,wbr"),
            optionalEndTagBlockElements = makeMap("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
            optionalEndTagInlineElements = makeMap("rp,rt"),
            optionalEndTagElements = angular.extend({}, optionalEndTagInlineElements, optionalEndTagBlockElements),
            blockElements = angular.extend({}, optionalEndTagBlockElements, makeMap("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul")),
            inlineElements = angular.extend({}, optionalEndTagInlineElements, makeMap("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var")),
            specialElements = makeMap("script,style"),
            validElements = angular.extend({}, voidElements, blockElements, inlineElements, optionalEndTagElements),
            uriAttrs = makeMap("background,cite,href,longdesc,src,usemap"),
            validAttrs = angular.extend({}, uriAttrs, makeMap("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,target,title,type,valign,value,vspace,width")),
            hiddenPre = document.createElement("pre"),
            spaceRe = /^(\s*)([\s\S]*?)(\s*)$/;
        angular.module("ngSanitize", []).provider("$sanitize", $SanitizeProvider), angular.module("ngSanitize").filter("linky", ["$sanitize", function($sanitize) {
            var LINKY_URL_REGEXP = /((ftp|https?):\/\/|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"]/,
                MAILTO_REGEXP = /^mailto:/;
            return function(text, target) {
                function addText(text) {
                    text && html.push(sanitizeText(text))
                }

                function addLink(url, text) {
                    html.push("<a "), angular.isDefined(target) && (html.push('target="'), html.push(target), html.push('" ')), html.push('href="', url.replace('"', "&quot;"), '">'), addText(text), html.push("</a>")
                }
                if (!text) return text;
                for (var match, url, i, raw = text, html = []; match = raw.match(LINKY_URL_REGEXP);) url = match[0], match[2] == match[3] && (url = "mailto:" + url), i = match.index, addText(raw.substr(0, i)), addLink(url, match[0].replace(MAILTO_REGEXP, "")), raw = raw.substring(i + match[0].length);
                return addText(raw), $sanitize(html.join(""))
            }
        }])
    }(window, window.angular), ! function(window) {
        var getModule = function(angular) {
            return angular.module("seo", []).run(["$rootScope", function($rootScope) {
                $rootScope.htmlReady = function() {
                    $rootScope.$evalAsync(function() {
                        setTimeout(function() {
                            "function" == typeof window.callPhantom && window.callPhantom()
                        }, 0)
                    })
                }
            }])
        };
        "function" == typeof define && define.amd ? define(["angular"], getModule) : getModule(angular)
    }(window, document), angular.module("angular-carousel", ["ngTouch"]), angular.module("angular-carousel").directive("rnCarouselControls", [function() {
        return {
            restrict: "A",
            replace: !0,
            scope: {
                items: "=",
                index: "="
            },
            link: function(scope) {
                scope.prev = function() {
                    scope.index--
                }, scope.next = function() {
                    scope.index++
                }
            },
            template: '<div class="rn-carousel-controls"><span class="rn-carousel-control rn-carousel-control-prev" ng-click="prev()" ng-if="index > 0"></span><span class="rn-carousel-control rn-carousel-control-next" ng-click="next()" ng-if="index < items.length - 1"></span></div>'
        }
    }]), angular.module("angular-carousel").directive("rnCarouselIndicators", [function() {
        return {
            restrict: "A",
            replace: !0,
            scope: {
                items: "=",
                index: "="
            },
            template: '<div class="rn-carousel-indicator"><span ng-repeat="item in items" ng-click="$parent.index=$index" ng-class="{active: $index==$parent.index}"></span></div>'
        }
    }]),
    function() {
        "use strict";
        angular.module("angular-carousel").directive("rnCarousel", ["$swipe", "$window", "$document", "$parse", "$compile", "$rootScope", function($swipe, $window, $document, $parse, $compile, $rootScope) {
            var carouselId = 0,
                timeConstant = 75,
                moveTreshold = .05,
                rubberTreshold = 3,
                requestAnimationFrame = $window.requestAnimationFrame || $window.webkitRequestAnimationFrame || $window.mozRequestAnimationFrame;
            return {
                restrict: "A",
                scope: !0,
                compile: function(tElement, tAttributes) {
                    var repeatItem, repeatCollection, firstChildAttributes = tElement.children()[0].attributes,
                        isRepeatBased = !1,
                        isBuffered = !1,
                        isIndexBound = !1;
                    return tElement.addClass("rn-carousel-slides"), tElement.children().addClass("rn-carousel-slide"), ["ng-repeat", "data-ng-repeat", "x-ng-repeat"].every(function(attr) {
                            var repeatAttribute = firstChildAttributes[attr];
                            if (angular.isDefined(repeatAttribute)) {
                                var exprMatch = repeatAttribute.value.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?\s*$/),
                                    trackProperty = exprMatch[3];
                                if (repeatItem = exprMatch[1], repeatCollection = exprMatch[2], repeatItem) return angular.isDefined(tAttributes.rnCarouselBuffered) && (isBuffered = !0, repeatAttribute.value = repeatItem + " in " + repeatCollection + "|carouselSlice:carouselBufferIndex:carouselBufferSize", trackProperty && (repeatAttribute.value += " track by " + trackProperty)), isRepeatBased = !0, !1
                            }
                            return !0
                        }),
                        function(scope, iElement, iAttributes) {
                            function updateIndicatorArray() {
                                for (var items = [], i = 0; slidesCount > i; i++) items[i] = i;
                                scope.carouselIndicatorArray = items
                            }

                            function getCarouselWidth() {
                                var slides = carousel.children();
                                return containerWidth = 0 === slides.length ? carousel[0].getBoundingClientRect().width : slides[0].getBoundingClientRect().width
                            }

                            function updateContainerWidth() {
                                container.css("width", "100%");
                                var width = getCarouselWidth();
                                width && container.css("width", width + "px")
                            }

                            function scroll(x) {
                                isNaN(x) && (x = scope.carouselIndex * containerWidth), offset = x;
                                var move = -Math.round(offset);
                                move += scope.carouselBufferIndex * containerWidth, carousel[0].style[transformProperty] = is3dAvailable ? "translate3d(" + move + "px, 0, 0)" : "translate(" + move + "px, 0)"
                            }

                            function autoScroll() {
                                var elapsed, delta;
                                amplitude && (elapsed = Date.now() - timestamp, delta = amplitude * Math.exp(-elapsed / timeConstant), delta > rubberTreshold || -rubberTreshold > delta ? (scroll(destination - delta), requestAnimationFrame(autoScroll)) : goToSlide(destination / containerWidth))
                            }

                            function capIndex(idx) {
                                return idx >= slidesCount ? slidesCount : 0 >= idx ? 0 : idx
                            }

                            function updateBufferIndex() {
                                var bufferIndex = 0,
                                    bufferEdgeSize = (scope.carouselBufferSize - 1) / 2;
                                isBuffered && (bufferIndex = scope.carouselIndex <= bufferEdgeSize ? 0 : slidesCount < scope.carouselBufferSize ? 0 : scope.carouselIndex > slidesCount - scope.carouselBufferSize ? slidesCount - scope.carouselBufferSize : scope.carouselIndex - bufferEdgeSize), scope.carouselBufferIndex = bufferIndex
                            }

                            function goToSlide(i, animate) {
                                return isNaN(i) && (i = scope.carouselIndex), animate ? (offset = i * containerWidth, void swipeEnd(null, null, !0)) : (scope.carouselIndex = capIndex(i), updateBufferIndex(), "$apply" !== $rootScope.$$phase && "$digest" !== $rootScope.$$phase && (isIndexBound ? scope.$apply() : scope.$digest()), void scroll())
                            }

                            function getAbsMoveTreshold() {
                                return moveTreshold * containerWidth
                            }

                            function documentMouseUpEvent(event) {
                                swipeMoved = !0, swipeEnd({
                                    x: event.clientX,
                                    y: event.clientY
                                }, event)
                            }

                            function capPosition(x) {
                                var position = x;
                                return 0 === scope.carouselIndex ? position = Math.max(-getAbsMoveTreshold(), position) : scope.carouselIndex === slidesCount - 1 && (position = Math.min((slidesCount - 1) * containerWidth + getAbsMoveTreshold(), position)), position
                            }

                            function swipeStart(coords) {
                                return $document.bind("mouseup", documentMouseUpEvent), pressed = !0, startX = coords.x, amplitude = 0, timestamp = Date.now(), !1
                            }

                            function swipeMove(coords) {
                                var x, delta;
                                return pressed && (x = coords.x, delta = startX - x, (delta > 2 || -2 > delta) && (swipeMoved = !0, startX = x, requestAnimationFrame(function() {
                                    scroll(capPosition(offset + delta))
                                }))), !1
                            }

                            function swipeEnd(coords, event, forceAnimation) {
                                if (!event || swipeMoved) {
                                    $document.unbind("mouseup", documentMouseUpEvent), pressed = !1, swipeMoved = !1, destination = offset;
                                    var minMove = getAbsMoveTreshold(),
                                        currentOffset = scope.carouselIndex * containerWidth,
                                        absMove = currentOffset - destination,
                                        slidesMove = -Math[absMove >= 0 ? "ceil" : "floor"](absMove / containerWidth),
                                        shouldMove = Math.abs(absMove) > minMove;
                                    slidesMove + scope.carouselIndex >= slidesCount && (slidesMove = slidesCount - 1 - scope.carouselIndex), slidesMove + scope.carouselIndex < 0 && (slidesMove = -scope.carouselIndex);
                                    var moveOffset = shouldMove ? slidesMove : 0;
                                    return destination = (moveOffset + scope.carouselIndex) * containerWidth, amplitude = destination - offset, timestamp = Date.now(), forceAnimation && (amplitude = offset - currentOffset), requestAnimationFrame(autoScroll), !1
                                }
                            }

                            function detect3dSupport() {
                                var has3d, el = document.createElement("p"),
                                    transforms = {
                                        webkitTransform: "-webkit-transform",
                                        OTransform: "-o-transform",
                                        msTransform: "-ms-transform",
                                        MozTransform: "-moz-transform",
                                        transform: "transform"
                                    };
                                document.body.insertBefore(el, null);
                                for (var t in transforms) void 0 !== el.style[t] && (el.style[t] = "translate3d(1px,1px,1px)", has3d = window.getComputedStyle(el).getPropertyValue(transforms[t]));
                                return document.body.removeChild(el), void 0 !== has3d && has3d.length > 0 && "none" !== has3d
                            }

                            function onOrientationChange() {
                                updateContainerWidth(), goToSlide()
                            }
                            carouselId++;
                            var containerWidth, transformProperty, pressed, startX, amplitude, destination, timestamp, offset = 0,
                                slidesCount = 0,
                                swipeMoved = !1,
                                carousel = iElement.wrap("<div id='carousel-" + carouselId + "' class='rn-carousel-container'></div>"),
                                container = carousel.parent();
                            if ((angular.isDefined(iAttributes.rnCarouselIndicator) || angular.isDefined(iAttributes.rnCarouselControl)) && (updateIndicatorArray(), scope.$watch("carouselIndex", function(newValue) {
                                    scope.indicatorIndex = newValue
                                }), scope.$watch("indicatorIndex", function(newValue) {
                                    goToSlide(newValue, !0)
                                })), angular.isDefined(iAttributes.rnCarouselIndicator)) {
                                var indicator = $compile("<div id='carousel-" + carouselId + "-indicator' index='indicatorIndex' items='carouselIndicatorArray' rn-carousel-indicators class='rn-carousel-indicator'></div>")(scope);
                                container.append(indicator)
                            }
                            if (angular.isDefined(iAttributes.rnCarouselControl)) {
                                var controls = $compile("<div id='carousel-" + carouselId + "-controls' index='indicatorIndex' items='carouselIndicatorArray' rn-carousel-controls class='rn-carousel-controls'></div>")(scope);
                                container.append(controls)
                            }
                            if (scope.carouselBufferIndex = 0, scope.carouselBufferSize = 5, scope.carouselIndex = 0, iAttributes.rnCarouselIndex) {
                                var updateParentIndex = function(value) {
                                        indexModel.assign(scope.$parent, value)
                                    },
                                    indexModel = $parse(iAttributes.rnCarouselIndex);
                                angular.isFunction(indexModel.assign) ? (scope.$watch("carouselIndex", function(newValue) {
                                    updateParentIndex(newValue)
                                }), scope.carouselIndex = indexModel(scope), scope.$parent.$watch(indexModel, function(newValue) {
                                    void 0 !== newValue && (newValue >= slidesCount ? (newValue = slidesCount - 1, updateParentIndex(newValue)) : 0 > newValue && (newValue = 0, updateParentIndex(newValue)), goToSlide(newValue, !0))
                                }), isIndexBound = !0) : isNaN(iAttributes.rnCarouselIndex) || (scope.carouselIndex = parseInt(iAttributes.rnCarouselIndex, 10))
                            }
                            isRepeatBased ? scope.$watchCollection(repeatCollection, function(newValue) {
                                slidesCount = 0, angular.isArray(newValue) ? slidesCount = newValue.length : angular.isObject(newValue) && (slidesCount = Object.keys(newValue).length), updateIndicatorArray(), containerWidth || updateContainerWidth(), goToSlide(scope.carouselIndex)
                            }) : (slidesCount = iElement.children().length, updateIndicatorArray(), updateContainerWidth()), iAttributes.$observe("rnCarouselSwipe", function(newValue) {
                                "false" !== newValue && "off" !== newValue ? $swipe.bind(carousel, {
                                    start: swipeStart,
                                    move: swipeMove,
                                    end: swipeEnd,
                                    cancel: function(event) {
                                        swipeEnd({}, event)
                                    }
                                }) : carousel.unbind()
                            }), isIndexBound || goToSlide(scope.carouselIndex), transformProperty = "transform", ["webkit", "Moz", "O", "ms"].every(function(prefix) {
                                var e = prefix + "Transform";
                                return "undefined" != typeof document.body.style[e] ? (transformProperty = e, !1) : !0
                            });
                            var is3dAvailable = detect3dSupport(),
                                winEl = angular.element($window);
                            winEl.bind("orientationchange", onOrientationChange), winEl.bind("resize", onOrientationChange), scope.$on("$destroy", function() {
                                $document.unbind("mouseup", documentMouseUpEvent), winEl.unbind("orientationchange", onOrientationChange), winEl.unbind("resize", onOrientationChange)
                            })
                        }
                }
            }
        }])
    }(),
    function() {
        "use strict";
        angular.module("angular-carousel").filter("carouselSlice", function() {
            return function(collection, start, size) {
                return angular.isArray(collection) ? collection.slice(start, start + size) : angular.isObject(collection) ? collection : void 0
            }
        })
    }(),
    function(window, angular, undefined) {
        "use strict";
        angular.module("ngAnimate", ["ng"]).directive("ngAnimateChildren", function() {
            var NG_ANIMATE_CHILDREN = "$$ngAnimateChildren";
            return function(scope, element, attrs) {
                var val = attrs.ngAnimateChildren;
                angular.isString(val) && 0 === val.length ? element.data(NG_ANIMATE_CHILDREN, !0) : scope.$watch(val, function(value) {
                    element.data(NG_ANIMATE_CHILDREN, !!value)
                })
            }
        }).factory("$$animateReflow", ["$$rAF", "$document", function($$rAF, $document) {
            var bod = $document[0].body;
            return function(fn) {
                return $$rAF(function() {
                    bod.offsetWidth + 1;
                    fn()
                })
            }
        }]).config(["$provide", "$animateProvider", function($provide, $animateProvider) {
            function extractElementNode(element) {
                for (var i = 0; i < element.length; i++) {
                    var elm = element[i];
                    if (elm.nodeType == ELEMENT_NODE) return elm
                }
            }

            function prepareElement(element) {
                return element && angular.element(element)
            }

            function stripCommentsFromElement(element) {
                return angular.element(extractElementNode(element))
            }

            function isMatchingElement(elm1, elm2) {
                return extractElementNode(elm1) == extractElementNode(elm2)
            }
            var noop = angular.noop,
                forEach = angular.forEach,
                selectors = $animateProvider.$$selectors,
                ELEMENT_NODE = 1,
                NG_ANIMATE_STATE = "$$ngAnimateState",
                NG_ANIMATE_CHILDREN = "$$ngAnimateChildren",
                NG_ANIMATE_CLASS_NAME = "ng-animate",
                rootAnimateState = {
                    running: !0
                };
            $provide.decorator("$animate", ["$delegate", "$injector", "$sniffer", "$rootElement", "$$asyncCallback", "$rootScope", "$document", function($delegate, $injector, $sniffer, $rootElement, $$asyncCallback, $rootScope) {
                function blockElementAnimations(element) {
                    var data = element.data(NG_ANIMATE_STATE) || {};
                    data.running = !0, element.data(NG_ANIMATE_STATE, data)
                }

                function lookup(name) {
                    if (name) {
                        var matches = [],
                            flagMap = {},
                            classes = name.substr(1).split(".");
                        ($sniffer.transitions || $sniffer.animations) && matches.push($injector.get(selectors[""]));
                        for (var i = 0; i < classes.length; i++) {
                            var klass = classes[i],
                                selectorFactoryName = selectors[klass];
                            selectorFactoryName && !flagMap[klass] && (matches.push($injector.get(selectorFactoryName)), flagMap[klass] = !0)
                        }
                        return matches
                    }
                }

                function animationRunner(element, animationEvent, className) {
                    function registerAnimation(animationFactory, event) {
                        var afterFn = animationFactory[event],
                            beforeFn = animationFactory["before" + event.charAt(0).toUpperCase() + event.substr(1)];
                        return afterFn || beforeFn ? ("leave" == event && (beforeFn = afterFn, afterFn = null), after.push({
                            event: event,
                            fn: afterFn
                        }), before.push({
                            event: event,
                            fn: beforeFn
                        }), !0) : void 0
                    }

                    function run(fns, cancellations, allCompleteFn) {
                        function afterAnimationComplete(index) {
                            if (cancellations) {
                                if ((cancellations[index] || noop)(), ++count < animations.length) return;
                                cancellations = null
                            }
                            allCompleteFn()
                        }
                        var animations = [];
                        forEach(fns, function(animation) {
                            animation.fn && animations.push(animation)
                        });
                        var count = 0;
                        forEach(animations, function(animation, index) {
                            var progress = function() {
                                afterAnimationComplete(index)
                            };
                            switch (animation.event) {
                                case "setClass":
                                    cancellations.push(animation.fn(element, classNameAdd, classNameRemove, progress));
                                    break;
                                case "addClass":
                                    cancellations.push(animation.fn(element, classNameAdd || className, progress));
                                    break;
                                case "removeClass":
                                    cancellations.push(animation.fn(element, classNameRemove || className, progress));
                                    break;
                                default:
                                    cancellations.push(animation.fn(element, progress))
                            }
                        }), cancellations && 0 === cancellations.length && allCompleteFn()
                    }
                    var node = element[0];
                    if (node) {
                        var classNameAdd, classNameRemove, isSetClassOperation = "setClass" == animationEvent,
                            isClassBased = isSetClassOperation || "addClass" == animationEvent || "removeClass" == animationEvent;
                        angular.isArray(className) && (classNameAdd = className[0], classNameRemove = className[1], className = classNameAdd + " " + classNameRemove);
                        var currentClassName = element.attr("class"),
                            classes = currentClassName + " " + className;
                        if (isAnimatableClassName(classes)) {
                            var beforeComplete = noop,
                                beforeCancel = [],
                                before = [],
                                afterComplete = noop,
                                afterCancel = [],
                                after = [],
                                animationLookup = (" " + classes).replace(/\s+/g, ".");
                            return forEach(lookup(animationLookup), function(animationFactory) {
                                var created = registerAnimation(animationFactory, animationEvent);
                                !created && isSetClassOperation && (registerAnimation(animationFactory, "addClass"), registerAnimation(animationFactory, "removeClass"))
                            }), {
                                node: node,
                                event: animationEvent,
                                className: className,
                                isClassBased: isClassBased,
                                isSetClassOperation: isSetClassOperation,
                                before: function(allCompleteFn) {
                                    beforeComplete = allCompleteFn, run(before, beforeCancel, function() {
                                        beforeComplete = noop, allCompleteFn()
                                    })
                                },
                                after: function(allCompleteFn) {
                                    afterComplete = allCompleteFn, run(after, afterCancel, function() {
                                        afterComplete = noop, allCompleteFn()
                                    })
                                },
                                cancel: function() {
                                    beforeCancel && (forEach(beforeCancel, function(cancelFn) {
                                        (cancelFn || noop)(!0)
                                    }), beforeComplete(!0)), afterCancel && (forEach(afterCancel, function(cancelFn) {
                                        (cancelFn || noop)(!0)
                                    }), afterComplete(!0))
                                }
                            }
                        }
                    }
                }

                function performAnimation(animationEvent, className, element, parentElement, afterElement, domOperation, doneCallback) {
                    function fireDOMCallback(animationPhase) {
                        var eventName = "$animate:" + animationPhase;
                        elementEvents && elementEvents[eventName] && elementEvents[eventName].length > 0 && $$asyncCallback(function() {
                            element.triggerHandler(eventName, {
                                event: animationEvent,
                                className: className
                            })
                        })
                    }

                    function fireBeforeCallbackAsync() {
                        fireDOMCallback("before")
                    }

                    function fireAfterCallbackAsync() {
                        fireDOMCallback("after")
                    }

                    function fireDoneCallbackAsync() {
                        fireDOMCallback("close"), doneCallback && $$asyncCallback(function() {
                            doneCallback()
                        })
                    }

                    function fireDOMOperation() {
                        fireDOMOperation.hasBeenRun || (fireDOMOperation.hasBeenRun = !0, domOperation())
                    }

                    function closeAnimation() {
                        if (!closeAnimation.hasBeenRun) {
                            closeAnimation.hasBeenRun = !0;
                            var data = element.data(NG_ANIMATE_STATE);
                            data && (runner && runner.isClassBased ? cleanup(element, className) : ($$asyncCallback(function() {
                                var data = element.data(NG_ANIMATE_STATE) || {};
                                localAnimationCount == data.index && cleanup(element, className, animationEvent)
                            }), element.data(NG_ANIMATE_STATE, data))), fireDoneCallbackAsync()
                        }
                    }
                    var runner = animationRunner(element, animationEvent, className);
                    if (!runner) return fireDOMOperation(), fireBeforeCallbackAsync(), fireAfterCallbackAsync(), void closeAnimation();
                    className = runner.className;
                    var elementEvents = angular.element._data(runner.node);
                    elementEvents = elementEvents && elementEvents.events, parentElement || (parentElement = afterElement ? afterElement.parent() : element.parent());
                    var skipAnimations, ngAnimateState = element.data(NG_ANIMATE_STATE) || {},
                        runningAnimations = ngAnimateState.active || {},
                        totalActiveAnimations = ngAnimateState.totalActive || 0,
                        lastAnimation = ngAnimateState.last;
                    if (runner.isClassBased && (skipAnimations = ngAnimateState.running || ngAnimateState.disabled || lastAnimation && !lastAnimation.isClassBased), skipAnimations || animationsDisabled(element, parentElement)) return fireDOMOperation(), fireBeforeCallbackAsync(), fireAfterCallbackAsync(), void closeAnimation();
                    var skipAnimation = !1;
                    if (totalActiveAnimations > 0) {
                        var animationsToCancel = [];
                        if (runner.isClassBased) {
                            if ("setClass" == lastAnimation.event) animationsToCancel.push(lastAnimation), cleanup(element, className);
                            else if (runningAnimations[className]) {
                                var current = runningAnimations[className];
                                current.event == animationEvent ? skipAnimation = !0 : (animationsToCancel.push(current), cleanup(element, className))
                            }
                        } else if ("leave" == animationEvent && runningAnimations["ng-leave"]) skipAnimation = !0;
                        else {
                            for (var klass in runningAnimations) animationsToCancel.push(runningAnimations[klass]), cleanup(element, klass);
                            runningAnimations = {}, totalActiveAnimations = 0
                        }
                        animationsToCancel.length > 0 && forEach(animationsToCancel, function(operation) {
                            operation.cancel()
                        })
                    }
                    if (!runner.isClassBased || runner.isSetClassOperation || skipAnimation || (skipAnimation = "addClass" == animationEvent == element.hasClass(className)), skipAnimation) return fireDOMOperation(), fireBeforeCallbackAsync(), fireAfterCallbackAsync(), void fireDoneCallbackAsync();
                    "leave" == animationEvent && element.one("$destroy", function() {
                        var element = angular.element(this),
                            state = element.data(NG_ANIMATE_STATE);
                        if (state) {
                            var activeLeaveAnimation = state.active["ng-leave"];
                            activeLeaveAnimation && (activeLeaveAnimation.cancel(), cleanup(element, "ng-leave"))
                        }
                    }), element.addClass(NG_ANIMATE_CLASS_NAME);
                    var localAnimationCount = globalAnimationCounter++;
                    totalActiveAnimations++, runningAnimations[className] = runner, element.data(NG_ANIMATE_STATE, {
                        last: runner,
                        active: runningAnimations,
                        index: localAnimationCount,
                        totalActive: totalActiveAnimations
                    }), fireBeforeCallbackAsync(), runner.before(function(cancelled) {
                        var data = element.data(NG_ANIMATE_STATE);
                        cancelled = cancelled || !data || !data.active[className] || runner.isClassBased && data.active[className].event != animationEvent, fireDOMOperation(), cancelled === !0 ? closeAnimation() : (fireAfterCallbackAsync(), runner.after(closeAnimation))
                    })
                }

                function cancelChildAnimations(element) {
                    var node = extractElementNode(element);
                    if (node) {
                        var nodes = angular.isFunction(node.getElementsByClassName) ? node.getElementsByClassName(NG_ANIMATE_CLASS_NAME) : node.querySelectorAll("." + NG_ANIMATE_CLASS_NAME);
                        forEach(nodes, function(element) {
                            element = angular.element(element);
                            var data = element.data(NG_ANIMATE_STATE);
                            data && data.active && forEach(data.active, function(runner) {
                                runner.cancel()
                            })
                        })
                    }
                }

                function cleanup(element, className) {
                    if (isMatchingElement(element, $rootElement)) rootAnimateState.disabled || (rootAnimateState.running = !1, rootAnimateState.structural = !1);
                    else if (className) {
                        var data = element.data(NG_ANIMATE_STATE) || {},
                            removeAnimations = className === !0;
                        !removeAnimations && data.active && data.active[className] && (data.totalActive--, delete data.active[className]), (removeAnimations || !data.totalActive) && (element.removeClass(NG_ANIMATE_CLASS_NAME), element.removeData(NG_ANIMATE_STATE))
                    }
                }

                function animationsDisabled(element, parentElement) {
                    if (rootAnimateState.disabled) return !0;
                    if (isMatchingElement(element, $rootElement)) return rootAnimateState.running;
                    var allowChildAnimations, parentRunningAnimation, hasParent;
                    do {
                        if (0 === parentElement.length) break;
                        var isRoot = isMatchingElement(parentElement, $rootElement),
                            state = isRoot ? rootAnimateState : parentElement.data(NG_ANIMATE_STATE) || {};
                        if (state.disabled) return !0;
                        if (isRoot && (hasParent = !0), allowChildAnimations !== !1) {
                            var animateChildrenFlag = parentElement.data(NG_ANIMATE_CHILDREN);
                            angular.isDefined(animateChildrenFlag) && (allowChildAnimations = animateChildrenFlag)
                        }
                        parentRunningAnimation = parentRunningAnimation || state.running || state.last && !state.last.isClassBased
                    } while (parentElement = parentElement.parent());
                    return !hasParent || !allowChildAnimations && parentRunningAnimation
                }
                var globalAnimationCounter = 0;
                $rootElement.data(NG_ANIMATE_STATE, rootAnimateState), $rootScope.$$postDigest(function() {
                    $rootScope.$$postDigest(function() {
                        rootAnimateState.running = !1
                    })
                });
                var classNameFilter = $animateProvider.classNameFilter(),
                    isAnimatableClassName = classNameFilter ? function(className) {
                        return classNameFilter.test(className)
                    } : function() {
                        return !0
                    };
                return {
                    enter: function(element, parentElement, afterElement, doneCallback) {
                        element = angular.element(element), parentElement = prepareElement(parentElement), afterElement = prepareElement(afterElement), blockElementAnimations(element), $delegate.enter(element, parentElement, afterElement), $rootScope.$$postDigest(function() {
                            element = stripCommentsFromElement(element), performAnimation("enter", "ng-enter", element, parentElement, afterElement, noop, doneCallback)
                        })
                    },
                    leave: function(element, doneCallback) {
                        element = angular.element(element), cancelChildAnimations(element), blockElementAnimations(element), $rootScope.$$postDigest(function() {
                            performAnimation("leave", "ng-leave", stripCommentsFromElement(element), null, null, function() {
                                $delegate.leave(element)
                            }, doneCallback)
                        })
                    },
                    move: function(element, parentElement, afterElement, doneCallback) {
                        element = angular.element(element), parentElement = prepareElement(parentElement), afterElement = prepareElement(afterElement), cancelChildAnimations(element), blockElementAnimations(element), $delegate.move(element, parentElement, afterElement), $rootScope.$$postDigest(function() {
                            element = stripCommentsFromElement(element), performAnimation("move", "ng-move", element, parentElement, afterElement, noop, doneCallback)
                        })
                    },
                    addClass: function(element, className, doneCallback) {
                        element = angular.element(element), element = stripCommentsFromElement(element), performAnimation("addClass", className, element, null, null, function() {
                            $delegate.addClass(element, className)
                        }, doneCallback)
                    },
                    removeClass: function(element, className, doneCallback) {
                        element = angular.element(element), element = stripCommentsFromElement(element), performAnimation("removeClass", className, element, null, null, function() {
                            $delegate.removeClass(element, className)
                        }, doneCallback)
                    },
                    setClass: function(element, add, remove, doneCallback) {
                        element = angular.element(element), element = stripCommentsFromElement(element), performAnimation("setClass", [add, remove], element, null, null, function() {
                            $delegate.setClass(element, add, remove)
                        }, doneCallback)
                    },
                    enabled: function(value, element) {
                        switch (arguments.length) {
                            case 2:
                                if (value) cleanup(element);
                                else {
                                    var data = element.data(NG_ANIMATE_STATE) || {};
                                    data.disabled = !0, element.data(NG_ANIMATE_STATE, data)
                                }
                                break;
                            case 1:
                                rootAnimateState.disabled = !value;
                                break;
                            default:
                                value = !rootAnimateState.disabled
                        }
                        return !!value
                    }
                }
            }]), $animateProvider.register("", ["$window", "$sniffer", "$timeout", "$$animateReflow", function($window, $sniffer, $timeout, $$animateReflow) {
                function clearCacheAfterReflow() {
                    cancelAnimationReflow || (cancelAnimationReflow = $$animateReflow(function() {
                        animationReflowQueue = [], cancelAnimationReflow = null, lookupCache = {}
                    }))
                }

                function afterReflow(element, callback) {
                    cancelAnimationReflow && cancelAnimationReflow(), animationReflowQueue.push(callback), cancelAnimationReflow = $$animateReflow(function() {
                        forEach(animationReflowQueue, function(fn) {
                            fn()
                        }), animationReflowQueue = [], cancelAnimationReflow = null, lookupCache = {}
                    })
                }

                function animationCloseHandler(element, totalTime) {
                    var node = extractElementNode(element);
                    element = angular.element(node), animationElementQueue.push(element);
                    var futureTimestamp = Date.now() + totalTime;
                    closingTimestamp >= futureTimestamp || ($timeout.cancel(closingTimer), closingTimestamp = futureTimestamp, closingTimer = $timeout(function() {
                        closeAllAnimations(animationElementQueue), animationElementQueue = []
                    }, totalTime, !1))
                }

                function closeAllAnimations(elements) {
                    forEach(elements, function(element) {
                        var elementData = element.data(NG_ANIMATE_CSS_DATA_KEY);
                        elementData && (elementData.closeAnimationFn || noop)()
                    })
                }

                function getElementAnimationDetails(element, cacheKey) {
                    var data = cacheKey ? lookupCache[cacheKey] : null;
                    if (!data) {
                        var transitionDelayStyle, animationDelayStyle, transitionDurationStyle, transitionPropertyStyle, transitionDuration = 0,
                            transitionDelay = 0,
                            animationDuration = 0,
                            animationDelay = 0;
                        forEach(element, function(element) {
                            if (element.nodeType == ELEMENT_NODE) {
                                var elementStyles = $window.getComputedStyle(element) || {};
                                transitionDurationStyle = elementStyles[TRANSITION_PROP + DURATION_KEY], transitionDuration = Math.max(parseMaxTime(transitionDurationStyle), transitionDuration), transitionPropertyStyle = elementStyles[TRANSITION_PROP + PROPERTY_KEY], transitionDelayStyle = elementStyles[TRANSITION_PROP + DELAY_KEY], transitionDelay = Math.max(parseMaxTime(transitionDelayStyle), transitionDelay), animationDelayStyle = elementStyles[ANIMATION_PROP + DELAY_KEY], animationDelay = Math.max(parseMaxTime(animationDelayStyle), animationDelay);
                                var aDuration = parseMaxTime(elementStyles[ANIMATION_PROP + DURATION_KEY]);
                                aDuration > 0 && (aDuration *= parseInt(elementStyles[ANIMATION_PROP + ANIMATION_ITERATION_COUNT_KEY], 10) || 1), animationDuration = Math.max(aDuration, animationDuration)
                            }
                        }), data = {
                            total: 0,
                            transitionPropertyStyle: transitionPropertyStyle,
                            transitionDurationStyle: transitionDurationStyle,
                            transitionDelayStyle: transitionDelayStyle,
                            transitionDelay: transitionDelay,
                            transitionDuration: transitionDuration,
                            animationDelayStyle: animationDelayStyle,
                            animationDelay: animationDelay,
                            animationDuration: animationDuration
                        }, cacheKey && (lookupCache[cacheKey] = data)
                    }
                    return data
                }

                function parseMaxTime(str) {
                    var maxValue = 0,
                        values = angular.isString(str) ? str.split(/\s*,\s*/) : [];
                    return forEach(values, function(value) {
                        maxValue = Math.max(parseFloat(value) || 0, maxValue)
                    }), maxValue
                }

                function getCacheKey(element) {
                    var parentElement = element.parent(),
                        parentID = parentElement.data(NG_ANIMATE_PARENT_KEY);
                    return parentID || (parentElement.data(NG_ANIMATE_PARENT_KEY, ++parentCounter), parentID = parentCounter), parentID + "-" + extractElementNode(element).getAttribute("class")
                }

                function animateSetup(animationEvent, element, className, calculationDecorator) {
                    var cacheKey = getCacheKey(element),
                        eventCacheKey = cacheKey + " " + className,
                        itemIndex = lookupCache[eventCacheKey] ? ++lookupCache[eventCacheKey].total : 0,
                        stagger = {};
                    if (itemIndex > 0) {
                        var staggerClassName = className + "-stagger",
                            staggerCacheKey = cacheKey + " " + staggerClassName,
                            applyClasses = !lookupCache[staggerCacheKey];
                        applyClasses && element.addClass(staggerClassName), stagger = getElementAnimationDetails(element, staggerCacheKey), applyClasses && element.removeClass(staggerClassName)
                    }
                    calculationDecorator = calculationDecorator || function(fn) {
                        return fn()
                    }, element.addClass(className);
                    var formerData = element.data(NG_ANIMATE_CSS_DATA_KEY) || {},
                        timings = calculationDecorator(function() {
                            return getElementAnimationDetails(element, eventCacheKey)
                        }),
                        transitionDuration = timings.transitionDuration,
                        animationDuration = timings.animationDuration;
                    if (0 === transitionDuration && 0 === animationDuration) return element.removeClass(className), !1;
                    element.data(NG_ANIMATE_CSS_DATA_KEY, {
                        running: formerData.running || 0,
                        itemIndex: itemIndex,
                        stagger: stagger,
                        timings: timings,
                        closeAnimationFn: noop
                    });
                    var isCurrentlyAnimating = formerData.running > 0 || "setClass" == animationEvent;
                    return transitionDuration > 0 && blockTransitions(element, className, isCurrentlyAnimating), animationDuration > 0 && stagger.animationDelay > 0 && 0 === stagger.animationDuration && blockKeyframeAnimations(element), !0
                }

                function isStructuralAnimation(className) {
                    return "ng-enter" == className || "ng-move" == className || "ng-leave" == className
                }

                function blockTransitions(element, className, isAnimating) {
                    isStructuralAnimation(className) || !isAnimating ? extractElementNode(element).style[TRANSITION_PROP + PROPERTY_KEY] = "none" : element.addClass(NG_ANIMATE_BLOCK_CLASS_NAME)
                }

                function blockKeyframeAnimations(element) {
                    extractElementNode(element).style[ANIMATION_PROP] = "none 0s"
                }

                function unblockTransitions(element) {
                    var prop = TRANSITION_PROP + PROPERTY_KEY,
                        node = extractElementNode(element);
                    node.style[prop] && node.style[prop].length > 0 && (node.style[prop] = ""), element.removeClass(NG_ANIMATE_BLOCK_CLASS_NAME)
                }

                function unblockKeyframeAnimations(element) {
                    var prop = ANIMATION_PROP,
                        node = extractElementNode(element);
                    node.style[prop] && node.style[prop].length > 0 && (node.style[prop] = "")
                }

                function animateRun(animationEvent, element, className, activeAnimationComplete) {
                    function onEnd() {
                        element.off(css3AnimationEvents, onAnimationProgress), element.removeClass(activeClassName), animateClose(element, className);
                        var node = extractElementNode(element);
                        for (var i in appliedStyles) node.style.removeProperty(appliedStyles[i])
                    }

                    function onAnimationProgress(event) {
                        event.stopPropagation();
                        var ev = event.originalEvent || event,
                            timeStamp = ev.$manualTimeStamp || ev.timeStamp || Date.now(),
                            elapsedTime = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));
                        Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration && activeAnimationComplete()
                    }
                    var node = extractElementNode(element),
                        elementData = element.data(NG_ANIMATE_CSS_DATA_KEY);
                    if (-1 == node.getAttribute("class").indexOf(className) || !elementData) return void activeAnimationComplete();
                    var activeClassName = "";
                    forEach(className.split(" "), function(klass, i) {
                        activeClassName += (i > 0 ? " " : "") + klass + "-active"
                    });
                    var stagger = elementData.stagger,
                        timings = elementData.timings,
                        itemIndex = elementData.itemIndex,
                        maxDuration = Math.max(timings.transitionDuration, timings.animationDuration),
                        maxDelay = Math.max(timings.transitionDelay, timings.animationDelay),
                        maxDelayTime = maxDelay * ONE_SECOND,
                        startTime = Date.now(),
                        css3AnimationEvents = ANIMATIONEND_EVENT + " " + TRANSITIONEND_EVENT,
                        style = "",
                        appliedStyles = [];
                    if (timings.transitionDuration > 0) {
                        var propertyStyle = timings.transitionPropertyStyle; - 1 == propertyStyle.indexOf("all") && (style += CSS_PREFIX + "transition-property: " + propertyStyle + ";", style += CSS_PREFIX + "transition-duration: " + timings.transitionDurationStyle + ";", appliedStyles.push(CSS_PREFIX + "transition-property"), appliedStyles.push(CSS_PREFIX + "transition-duration"))
                    }
                    if (itemIndex > 0) {
                        if (stagger.transitionDelay > 0 && 0 === stagger.transitionDuration) {
                            var delayStyle = timings.transitionDelayStyle;
                            style += CSS_PREFIX + "transition-delay: " + prepareStaggerDelay(delayStyle, stagger.transitionDelay, itemIndex) + "; ", appliedStyles.push(CSS_PREFIX + "transition-delay")
                        }
                        stagger.animationDelay > 0 && 0 === stagger.animationDuration && (style += CSS_PREFIX + "animation-delay: " + prepareStaggerDelay(timings.animationDelayStyle, stagger.animationDelay, itemIndex) + "; ", appliedStyles.push(CSS_PREFIX + "animation-delay"))
                    }
                    if (appliedStyles.length > 0) {
                        var oldStyle = node.getAttribute("style") || "";
                        node.setAttribute("style", oldStyle + "; " + style)
                    }
                    element.on(css3AnimationEvents, onAnimationProgress), element.addClass(activeClassName), elementData.closeAnimationFn = function() {
                        onEnd(), activeAnimationComplete()
                    };
                    var staggerTime = itemIndex * (Math.max(stagger.animationDelay, stagger.transitionDelay) || 0),
                        animationTime = (maxDelay + maxDuration) * CLOSING_TIME_BUFFER,
                        totalTime = (staggerTime + animationTime) * ONE_SECOND;
                    return elementData.running++, animationCloseHandler(element, totalTime), onEnd
                }

                function prepareStaggerDelay(delayStyle, staggerDelay, index) {
                    var style = "";
                    return forEach(delayStyle.split(","), function(val, i) {
                        style += (i > 0 ? "," : "") + (index * staggerDelay + parseInt(val, 10)) + "s"
                    }), style
                }

                function animateBefore(animationEvent, element, className, calculationDecorator) {
                    return animateSetup(animationEvent, element, className, calculationDecorator) ? function(cancelled) {
                        cancelled && animateClose(element, className)
                    } : void 0
                }

                function animateAfter(animationEvent, element, className, afterAnimationComplete) {
                    return element.data(NG_ANIMATE_CSS_DATA_KEY) ? animateRun(animationEvent, element, className, afterAnimationComplete) : (animateClose(element, className), void afterAnimationComplete())
                }

                function animate(animationEvent, element, className, animationComplete) {
                    var preReflowCancellation = animateBefore(animationEvent, element, className);
                    if (!preReflowCancellation) return clearCacheAfterReflow(), void animationComplete();
                    var cancel = preReflowCancellation;
                    return afterReflow(element, function() {
                            unblockTransitions(element, className), unblockKeyframeAnimations(element), cancel = animateAfter(animationEvent, element, className, animationComplete)
                        }),
                        function(cancelled) {
                            (cancel || noop)(cancelled)
                        }
                }

                function animateClose(element, className) {
                    element.removeClass(className);
                    var data = element.data(NG_ANIMATE_CSS_DATA_KEY);
                    data && (data.running && data.running--, data.running && 0 !== data.running || element.removeData(NG_ANIMATE_CSS_DATA_KEY))
                }

                function suffixClasses(classes, suffix) {
                    var className = "";
                    return classes = angular.isArray(classes) ? classes : classes.split(/\s+/), forEach(classes, function(klass, i) {
                        klass && klass.length > 0 && (className += (i > 0 ? " " : "") + klass + suffix)
                    }), className
                }
                var TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT, CSS_PREFIX = "";
                window.ontransitionend === undefined && window.onwebkittransitionend !== undefined ? (CSS_PREFIX = "-webkit-", TRANSITION_PROP = "WebkitTransition", TRANSITIONEND_EVENT = "webkitTransitionEnd transitionend") : (TRANSITION_PROP = "transition", TRANSITIONEND_EVENT = "transitionend"), window.onanimationend === undefined && window.onwebkitanimationend !== undefined ? (CSS_PREFIX = "-webkit-", ANIMATION_PROP = "WebkitAnimation", ANIMATIONEND_EVENT = "webkitAnimationEnd animationend") : (ANIMATION_PROP = "animation", ANIMATIONEND_EVENT = "animationend");
                var cancelAnimationReflow, DURATION_KEY = "Duration",
                    PROPERTY_KEY = "Property",
                    DELAY_KEY = "Delay",
                    ANIMATION_ITERATION_COUNT_KEY = "IterationCount",
                    NG_ANIMATE_PARENT_KEY = "$$ngAnimateKey",
                    NG_ANIMATE_CSS_DATA_KEY = "$$ngAnimateCSS3Data",
                    NG_ANIMATE_BLOCK_CLASS_NAME = "ng-animate-block-transitions",
                    ELAPSED_TIME_MAX_DECIMAL_PLACES = 3,
                    CLOSING_TIME_BUFFER = 1.5,
                    ONE_SECOND = 1e3,
                    lookupCache = {},
                    parentCounter = 0,
                    animationReflowQueue = [],
                    closingTimer = null,
                    closingTimestamp = 0,
                    animationElementQueue = [];
                return {
                    enter: function(element, animationCompleted) {
                        return animate("enter", element, "ng-enter", animationCompleted)
                    },
                    leave: function(element, animationCompleted) {
                        return animate("leave", element, "ng-leave", animationCompleted)
                    },
                    move: function(element, animationCompleted) {
                        return animate("move", element, "ng-move", animationCompleted)
                    },
                    beforeSetClass: function(element, add, remove, animationCompleted) {
                        var className = suffixClasses(remove, "-remove") + " " + suffixClasses(add, "-add"),
                            cancellationMethod = animateBefore("setClass", element, className, function(fn) {
                                var klass = element.attr("class");
                                element.removeClass(remove), element.addClass(add);
                                var timings = fn();
                                return element.attr("class", klass), timings
                            });
                        return cancellationMethod ? (afterReflow(element, function() {
                            unblockTransitions(element, className), unblockKeyframeAnimations(element), animationCompleted()
                        }), cancellationMethod) : (clearCacheAfterReflow(), void animationCompleted())
                    },
                    beforeAddClass: function(element, className, animationCompleted) {
                        var cancellationMethod = animateBefore("addClass", element, suffixClasses(className, "-add"), function(fn) {
                            element.addClass(className);
                            var timings = fn();
                            return element.removeClass(className), timings
                        });
                        return cancellationMethod ? (afterReflow(element, function() {
                            unblockTransitions(element, className), unblockKeyframeAnimations(element), animationCompleted()
                        }), cancellationMethod) : (clearCacheAfterReflow(), void animationCompleted())
                    },
                    setClass: function(element, add, remove, animationCompleted) {
                        remove = suffixClasses(remove, "-remove"), add = suffixClasses(add, "-add");
                        var className = remove + " " + add;
                        return animateAfter("setClass", element, className, animationCompleted)
                    },
                    addClass: function(element, className, animationCompleted) {
                        return animateAfter("addClass", element, suffixClasses(className, "-add"), animationCompleted)
                    },
                    beforeRemoveClass: function(element, className, animationCompleted) {
                        var cancellationMethod = animateBefore("removeClass", element, suffixClasses(className, "-remove"), function(fn) {
                            var klass = element.attr("class");
                            element.removeClass(className);
                            var timings = fn();
                            return element.attr("class", klass), timings
                        });
                        return cancellationMethod ? (afterReflow(element, function() {
                            unblockTransitions(element, className), unblockKeyframeAnimations(element), animationCompleted()
                        }), cancellationMethod) : void animationCompleted()
                    },
                    removeClass: function(element, className, animationCompleted) {
                        return animateAfter("removeClass", element, suffixClasses(className, "-remove"), animationCompleted)
                    }
                }
            }])
        }])
    }(window, window.angular),
    function(window) {
        angular.module("ngCsv.config", []).value("ngCsv.config", {
            debug: !0
        }).config(["$compileProvider", function($compileProvider) {
            angular.isDefined($compileProvider.urlSanitizationWhitelist) ? $compileProvider.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/) : $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)
        }]), angular.module("ngCsv.directives", ["ngCsv.services"]), angular.module("ngCsv.services", []), angular.module("ngCsv", ["ngCsv.config", "ngCsv.services", "ngCsv.directives", "ngSanitize"]), angular.module("ngCsv.services").service("CSV", ["$q", function($q) {
            var EOL = "\r\n",
                BOM = "ï»¿";
            this.stringifyField = function(data, delimier, quoteText) {
                return "string" == typeof data ? (data = data.replace(/"/g, '""'), (quoteText || data.indexOf(",") > -1 || data.indexOf("\n") > -1 || data.indexOf("\r") > -1) && (data = delimier + data + delimier), data) : "boolean" == typeof data ? data ? "TRUE" : "FALSE" : data
            }, this.stringify = function(data, options) {
                var def = $q.defer(),
                    that = this,
                    csv = "",
                    csvContent = "",
                    dataPromise = $q.when(data).then(function(responseData) {
                        if (responseData = angular.copy(responseData), angular.isDefined(options.header) && options.header) {
                            var encodingArray, headerString;
                            encodingArray = [], angular.forEach(options.header, function(title) {
                                this.push(that.stringifyField(title, options.txtDelim, options.quoteStrings))
                            }, encodingArray), headerString = encodingArray.join(options.fieldSep ? options.fieldSep : ","), csvContent += headerString + EOL
                        }
                        var arrData = [];
                        angular.isArray(responseData) ? arrData = responseData : angular.isFunction(responseData) && (arrData = responseData()), angular.forEach(arrData, function(row, index) {
                            var dataString, infoArray;
                            infoArray = [], angular.forEach(row, function(field) {
                                this.push(that.stringifyField(field, options.txtDelim, options.quoteStrings))
                            }, infoArray), dataString = infoArray.join(options.fieldSep ? options.fieldSep : ","), csvContent += index < arrData.length ? dataString + EOL : dataString
                        }), options.addByteOrderMarker && (csv += BOM), csv += csvContent, def.resolve(csv)
                    });
                return "function" == typeof dataPromise["catch"] && dataPromise["catch"](function(err) {
                    def.reject(err)
                }), def.promise
            }
        }]), angular.module("ngCsv.directives").directive("ngCsv", ["$parse", "$q", "CSV", "$document", "$timeout", function($parse, $q, CSV, $document, $timeout) {
            return {
                restrict: "AC",
                scope: {
                    data: "&ngCsv",
                    filename: "@filename",
                    header: "&csvHeader",
                    txtDelim: "@textDelimiter",
                    quoteStrings: "@quoteStrings",
                    fieldSep: "@fieldSeparator",
                    lazyLoad: "@lazyLoad",
                    addByteOrderMarker: "@addBom",
                    ngClick: "&"
                },
                controller: ["$scope", "$element", "$attrs", "$transclude", function($scope, $element, $attrs) {
                    function getBuildCsvOptions() {
                        var options = {
                            txtDelim: $scope.txtDelim ? $scope.txtDelim : '"',
                            quoteStrings: $scope.quoteStrings,
                            addByteOrderMarker: $scope.addByteOrderMarker
                        };
                        return angular.isDefined($attrs.csvHeader) && (options.header = $scope.$eval($scope.header)), options.fieldSep = $scope.fieldSep ? $scope.fieldSep : ",", options
                    }
                    $scope.csv = "", angular.isDefined($scope.lazyLoad) && "true" == $scope.lazyLoad || angular.isArray($scope.data) && $scope.$watch("data", function() {
                        $scope.buildCSV()
                    }, !0), $scope.getFilename = function() {
                        return $scope.filename || "download.csv"
                    }, $scope.buildCSV = function() {
                        var deferred = $q.defer();
                        return $element.addClass($attrs.ngCsvLoadingClass || "ng-csv-loading"), CSV.stringify($scope.data(), getBuildCsvOptions()).then(function(csv) {
                            $scope.csv = csv, $element.removeClass($attrs.ngCsvLoadingClass || "ng-csv-loading"), deferred.resolve(csv)
                        }), $scope.$apply(), deferred.promise
                    }
                }],
                link: function(scope, element) {
                    function doClick() {
                        var blob = new Blob([scope.csv], {
                            type: "text/csv;charset=utf-8;"
                        });
                        if (window.navigator.msSaveOrOpenBlob) navigator.msSaveBlob(blob, scope.getFilename());
                        else {
                            var downloadLink = angular.element("<a></a>");
                            downloadLink.attr("href", window.URL.createObjectURL(blob)), downloadLink.attr("download", scope.getFilename()), $document.find("body").append(downloadLink), $timeout(function() {
                                downloadLink[0].click(), downloadLink.remove()
                            }, null)
                        }
                    }
                    element.bind("click", function() {
                        scope.buildCSV().then(function() {
                            doClick()
                        }), scope.$apply()
                    })
                }
            }
        }])
    }(window, document), angular.module("ezfb", []).provider("$FB", function() {
        function a(b, c) {
            0 !== c.length && (path = c.shift(), b[path] || (b[path] = {}), a(b, c))
        }

        function b(a, b) {
            return angular.isObject(b) ? void angular.extend(a, b) : angular.copy(a)
        }

        function c(a, b, c) {
            return function() {
                a.apply(b, c)
            }
        }
        var d = ["api", "ui", "getAuthResponse", "getLoginStatus", "login", "logout", "Event.subscribe", "Event.unsubscribe", "XFBML.parse", "Canvas.Prefetcher.addStaticResource", "Canvas.Prefetcher.setCollectionMode", "Canvas.hideFlashElement", "Canvas.scrollTo", "Canvas.setAutoGrow", "Canvas.setDoneLoading", "Canvas.setSize", "Canvas.setUrlHandler", "Canvas.showFlashElement", "Canvas.startTimer", "Canvas.stopTimer"],
            e = {
                status: !0,
                cookie: !0,
                xfbml: !0
            };
        return {
            setInitParams: function(a) {
                b(e, a)
            },
            getInitParams: function() {
                return b(e)
            },
            $get: ["$window", "$q", "$document", "$parse", "$rootScope", function(b, f, g, h, i) {
                var j, k;
                if (!e.appId) throw new Error("appId required.");
                return g[0].getElementById("fb-root") || g.find("body").append('<div id="fb-root"></div>'), j = f.defer(),
                    function(a) {
                        var b, c = "facebook-jssdk",
                            d = a.getElementsByTagName("script")[0];
                        a.getElementById(c) || (b = a.createElement("script"), b.id = c, b.async = !0, b.src = "//connect.facebook.net/en_US/all.js", d.parentNode.insertBefore(b, d))
                    }(g[0]), b.fbAsyncInit = function() {
                        b.FB.init(e), k.$$ready = !0, i.$apply(function() {
                            j.resolve()
                        })
                    }, k = {
                        $$ready: !1
                    }, angular.forEach(d, function(d) {
                        a(k, d.split(/\./));
                        var e = h(d),
                            f = e.assign;
                        f(k, function() {
                            var a = Array.prototype.slice.call(arguments),
                                f = c(function(a) {
                                    angular.forEach(a, function(b, c) {
                                        if (angular.isFunction(b)) {
                                            var d = b;
                                            a[c] = function() {
                                                var a = Array.prototype.slice.call(arguments);
                                                i.$$phase ? d.apply(null, a) : i.$apply(function() {
                                                    d.apply(null, a)
                                                })
                                            }
                                        }
                                    });
                                    var c = e(b.FB);
                                    if (!c) throw new Error("Facebook API `FB." + d + "` doesn't exist.");
                                    c.apply(b.FB, a)
                                }, null, [a]);
                            j.promise.then(f)
                        })
                    }), k
            }]
        }
    }).directive("ezfbXfbml", ["$FB", "$parse", "$compile", "$timeout", function(a, b, c, d) {
        return {
            restrict: "EAC",
            compile: function(e) {
                var f = e.html();
                return function(e, g, h) {
                    var i = !0,
                        j = h.onrender || "",
                        k = function() {
                            i && (e.$eval(j), i = !1)
                        },
                        l = "xfbml.render";
                    j && (a.Event.subscribe(l, k), g.bind("$destroy", function() {
                        a.Event.unsubscribe(l, k), g.unbind("$destroy")
                    })), a.XFBML.parse(g[0]);
                    var m = b(h.ezfbXfbml).assign;
                    e.$watch(h.ezfbXfbml, function(b) {
                        b && (i = !0, g.html(f), c(g.contents())(e), d(function() {
                            a.XFBML.parse(g[0])
                        }), (m || angular.noop)(e, !1))
                    }, !0)
                }
            }
        }
    }]),
    function(window) {
        var createModule = function(angular) {
            var module = angular.module("FBAngular", []);
            return module.factory("Fullscreen", ["$document", "$rootScope", function($document, $rootScope) {
                var document = $document[0],
                    isKeyboardAvailbleOnFullScreen = "undefined" != typeof Element && "ALLOW_KEYBOARD_INPUT" in Element && Element.ALLOW_KEYBOARD_INPUT,
                    emitter = $rootScope.$new();
                $document.on("fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange", function() {
                    emitter.$emit("FBFullscreen.change", serviceInstance.isEnabled())
                });
                var serviceInstance = {
                    $on: angular.bind(emitter, emitter.$on),
                    all: function() {
                        serviceInstance.enable(document.documentElement)
                    },
                    enable: function(element) {
                        element.requestFullScreen ? element.requestFullScreen() : element.mozRequestFullScreen ? element.mozRequestFullScreen() : element.webkitRequestFullscreen ? /Version\/[\d]{1,2}(\.[\d]{1,2}){1}(\.(\d){1,2}){0,1} Safari/.test(navigator.userAgent) ? element.webkitRequestFullscreen() : element.webkitRequestFullscreen(isKeyboardAvailbleOnFullScreen) : element.msRequestFullscreen && element.msRequestFullscreen()
                    },
                    cancel: function() {
                        document.cancelFullScreen ? document.cancelFullScreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen()
                    },
                    isEnabled: function() {
                        var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;
                        return fullscreenElement ? !0 : !1
                    },
                    toggleAll: function() {
                        serviceInstance.isEnabled() ? serviceInstance.cancel() : serviceInstance.all()
                    },
                    isSupported: function() {
                        var docElm = document.documentElement,
                            requestFullscreen = docElm.requestFullScreen || docElm.mozRequestFullScreen || docElm.webkitRequestFullscreen || docElm.msRequestFullscreen;
                        return requestFullscreen ? !0 : !1
                    }
                };
                return serviceInstance
            }]), module.directive("fullscreen", ["Fullscreen", function(Fullscreen) {
                return {
                    link: function($scope, $element, $attrs) {
                        if ($attrs.fullscreen) {
                            $scope.$watch($attrs.fullscreen, function(value) {
                                var isEnabled = Fullscreen.isEnabled();
                                value && !isEnabled ? (Fullscreen.enable($element[0]), $element.addClass("isInFullScreen")) : !value && isEnabled && (Fullscreen.cancel(), $element.removeClass("isInFullScreen"))
                            });
                            var removeFullscreenHandler = Fullscreen.$on("FBFullscreen.change", function(evt, isFullscreenEnabled) {
                                isFullscreenEnabled || $scope.$evalAsync(function() {
                                    $scope.$eval($attrs.fullscreen + "= false"), $element.removeClass("isInFullScreen")
                                })
                            });
                            $scope.$on("$destroy", function() {
                                removeFullscreenHandler()
                            })
                        } else {
                            if (void 0 !== $attrs.onlyWatchedProperty) return;
                            $element.on("click", function() {
                                Fullscreen.enable($element[0])
                            })
                        }
                    }
                }
            }]), module
        };
        "function" == typeof define && define.amd ? define("FBAngular", ["angular"], function(angular) {
            return createModule(angular)
        }) : createModule(window.angular)
    }(window),
    function(angular) {
        "use strict";

        function fakeNgModel(initValue) {
            return {
                $setViewValue: function(value) {
                    this.$viewValue = value
                },
                $viewValue: initValue
            }
        }
        angular.module("luegg.directives", []).directive("scrollGlue", function() {
            return {
                priority: 1,
                require: ["?ngModel"],
                restrict: "A",
                link: function(scope, $el, attrs, ctrls) {
                    function scrollToBottom() {
                        el.scrollTop = el.scrollHeight
                    }

                    function shouldActivateAutoScroll() {
                        return el.scrollTop + el.clientHeight + 1 >= el.scrollHeight
                    }
                    var el = $el[0],
                        ngModel = ctrls[0] || fakeNgModel(!0);
                    scope.$watch(function() {
                        ngModel.$viewValue && scrollToBottom()
                    }), $el.bind("scroll", function() {
                        var activate = shouldActivateAutoScroll();
                        activate !== ngModel.$viewValue && scope.$apply(ngModel.$setViewValue.bind(ngModel, activate))
                    })
                }
            }
        })
    }(angular), angular.module("ngUpload", []).directive("uploadSubmit", ["$parse", function() {
        return {
            restrict: "AC",
            link: function(n, t, i) {
                var f, r, o, u, s, e = {};
                if (e.enableControls = i.uploadOptionsEnableControls, f = ["ng-upload", "ng_upload", "x-ng-upload", "data-ng-upload"], r = null, angular.forEach(f, function(n) {
                        if (!r) {
                            var i = t.closest("form[" + n + "]");
                            i.length > 0 && (r = i.first())
                        }
                    }), null == r && angular.forEach(f, function(n) {
                        if (!r) {
                            var i = t.closest("form." + n);
                            i.length > 0 && (r = i.first())
                        }
                    }), null == r) throw "[uploadSubmit] Directive can only be used inside a form.";
                if (!i.uploadSubmit && r.attr("ng-upload") && (i.uploadSubmit = r.attr("ng-upload")), !i.uploadSubmit) throw "[uploadSubmit] A valid callback function must be supplied.";
                if (o = i.uploadSubmit.split("(")[0], u = n.$eval(o), !angular.isFunction(u)) throw s = "[uploadSubmit] Expression does not point to a valid function.", s + "\n";
                t.bind("click", function() {
                    var i, f;
                    r.attr("target", (new Date).getTime()), i = angular.element("<iframe id='" + r.attr("target") + "' name='" + r.attr("target") + "' border='0' width='0' height='0' style='width: 0px; height: 0px; border: none; display: none' />"), i.bind("load", function() {
                        var r = i.contents().find("body").text();
                        n.$apply(function() {
                            u(r, !0)
                        }), "" !== r && (setTimeout(function() {
                            i.remove()
                        }, 250), t.attr("disabled", null), t.attr("title", "Click to start upload."))
                    }), r.parent().append(i), n.$apply(function() {
                        u("Please wait...", !1)
                    }), f = !0, e.enableControls || (t.attr("disabled", "disabled"), f = !1), t.attr("title", (f ? "[ENABLED]: " : "[DISABLED]: ") + "Uploading, please wait..."), r.submit()
                }).attr("title", "Click to start upload.")
            }
        }
    }]).directive("ngUpload", ["$parse", function() {
        return {
            restrict: "AC",
            link: function(n, t) {
                t.attr("method", "post"), t.attr("enctype", "multipart/form-data"), t.attr("encoding", "multipart/form-data")
            }
        }
    }]),
    function(l, A, Fa) {
        function ma(g, k, cb) {
            function da() {
                var a = 0,
                    f = v.length;
                if (e.old = l.extend({}, e), y = I ? 0 : F[b.horizontal ? "width" : "height"](), S = K[b.horizontal ? "width" : "height"](), s = I ? g : t[b.horizontal ? "outerWidth" : "outerHeight"](), v.length = 0, e.start = 0, e.end = Ga(s - y, 0), B) {
                    a = p.length, G = t.children(b.itemSelector), p.length = 0;
                    var q, c = oa(t, b.horizontal ? "paddingLeft" : "paddingTop"),
                        va = oa(t, b.horizontal ? "paddingRight" : "paddingBottom"),
                        k = "border-box" === l(G).css("boxSizing"),
                        db = "none" !== G.css("float"),
                        r = 0,
                        m = G.length - 1;
                    s = 0, G.each(function(a, f) {
                        var d = l(f),
                            e = d[b.horizontal ? "outerWidth" : "outerHeight"](),
                            g = oa(d, b.horizontal ? "marginLeft" : "marginTop"),
                            d = oa(d, b.horizontal ? "marginRight" : "marginBottom"),
                            h = e + g + d,
                            n = !g || !d,
                            k = {};
                        k.el = f, k.size = n ? e : h, k.half = k.size / 2, k.start = s + (n ? g : 0), k.center = k.start - u(y / 2 - k.size / 2), k.end = k.start - y + k.size, a || (s += c), s += h, b.horizontal || db || d && g && a > 0 && (s -= Ha(g, d)), a === m && (k.end += va, s += va, r = n ? d : 0), p.push(k), q = k
                    }), t[0].style[b.horizontal ? "width" : "height"] = (k ? s : s - c - va) + "px", s -= r, p.length ? (e.start = p[0][T ? "center" : "start"], e.end = T ? q.center : s > y ? q.end : e.start) : e.start = e.end = 0
                }
                if (e.center = u(e.end / 2 + e.start / 2), l.extend(h, wa(void 0)), C.length && S > 0 && (b.dynamicHandle ? (N = e.start === e.end ? S : u(S * y / s), N = L(N, b.minHandleSize, S), C[0].style[b.horizontal ? "width" : "height"] = N + "px") : N = C[b.horizontal ? "outerWidth" : "outerHeight"](), w.end = S - N, U || Ia()), !I && y > 0) {
                    var n = e.start,
                        k = "";
                    if (B) l.each(p, function(a, f) {
                        T ? v.push(f.center) : f.start + f.size > n && n <= e.end && (n = f.start, v.push(n), n += y, n > e.end && n < e.end + y && v.push(e.end))
                    });
                    else
                        for (; n - y < e.end;) v.push(n), n += y;
                    if (V[0] && f !== v.length) {
                        for (f = 0; f < v.length; f++) k += b.pageBuilder.call(d, f);
                        ha = V.html(k).children(), ha.eq(h.activePage).addClass(b.activeClass)
                    }
                }
                h.slideeSize = s, h.frameSize = y, h.sbSize = S, h.handleSize = N, B ? (d.initialized ? (h.activeItem >= p.length || 0 === a && 0 < p.length) && pa(h.activeItem >= p.length ? p.length - 1 : 0, !a) : (pa(b.startAt), d[M ? "toCenter" : "toStart"](b.startAt)), a = p[h.activeItem], J(M && a ? a.center : L(e.dest, e.start, e.end))) : d.initialized ? J(L(e.dest, e.start, e.end)) : J(b.startAt, 1), z("load")
            }

            function J(a, f, ga) {
                if (B && c.released && !ga) {
                    ga = wa(a);
                    var g = a > e.start && a < e.end;
                    M ? (g && (a = p[ga.centerItem].center), T && b.activateMiddle && pa(ga.centerItem)) : g && (a = p[ga.firstItem].start)
                }
                c.init && c.slidee && b.elasticBounds ? a > e.end ? a = e.end + (a - e.end) / 6 : a < e.start && (a = e.start + (a - e.start) / 6) : a = L(a, e.start, e.end), ra = +new Date, E = 0, sa = e.cur, r = a, ta = a - e.cur, A = c.tweese || c.init && !c.slidee, ua = !A && (f || c.init && c.slidee || !b.speed), c.tweese = 0, a !== e.dest && (e.dest = a, z("change"), U || xa()), c.released && !d.isPaused && d.resume(), l.extend(h, wa(void 0)), Ja(), ha[0] && q.page !== h.activePage && (q.page = h.activePage, ha.removeClass(b.activeClass).eq(h.activePage).addClass(b.activeClass), z("activePage", q.page))
            }

            function xa() {
                U ? (ua ? e.cur = r : A ? (na = r - e.cur, .1 > W(na) ? e.cur = r : e.cur += na * (c.released ? b.swingSpeed : b.syncSpeed)) : (E = Ha(+new Date - ra, b.speed), e.cur = sa + ta * jQuery.easing[b.easing](E / b.speed, E, 0, 1, b.speed)), r === e.cur ? (e.cur = r, c.tweese = U = 0) : U = ia(xa), z("move"), I || (D ? t[0].style[D] = ja + (b.horizontal ? "translateX" : "translateY") + "(" + -e.cur + "px)" : t[0].style[b.horizontal ? "left" : "top"] = -u(e.cur) + "px"), !U && c.released && z("moveEnd"), Ia()) : (U = ia(xa), c.released && z("moveStart"))
            }

            function Ia() {
                C.length && (w.cur = e.start === e.end ? 0 : ((c.init && !c.slidee ? e.dest : e.cur) - e.start) / (e.end - e.start) * w.end, w.cur = L(u(w.cur), w.start, w.end), q.hPos !== w.cur && (q.hPos = w.cur, D ? C[0].style[D] = ja + (b.horizontal ? "translateX" : "translateY") + "(" + w.cur + "px)" : C[0].style[b.horizontal ? "left" : "top"] = w.cur + "px"))
            }

            function Ka() {
                x.speed && e.cur !== (0 < x.speed ? e.end : e.start) || d.stop(), La = c.init ? ia(Ka) : 0, x.now = +new Date, x.pos = e.cur + (x.now - x.lastTime) / 1e3 * x.speed, J(c.init ? x.pos : u(x.pos)), c.init || e.cur !== e.dest || z("moveEnd"), x.lastTime = x.now
            }

            function ya(a, f, b) {
                "boolean" === ka(f) && (b = f, f = Fa), f === Fa ? J(e[a], b) : M && "center" !== a || (f = d.getPos(f)) && J(f[a], b, !M)
            }

            function qa(a) {
                return null != a ? O(a) ? a >= 0 && a < p.length ? a : -1 : G.index(a) : -1
            }

            function za(a) {
                return qa(O(a) && 0 > a ? a + p.length : a)
            }

            function pa(a, f) {
                var c = qa(a);
                return !B || 0 > c ? !1 : ((q.active !== c || f) && (G.eq(h.activeItem).removeClass(b.activeClass), G.eq(c).addClass(b.activeClass), q.active = h.activeItem = c, Ja(), z("active", c)), c)
            }

            function wa(a) {
                a = L(O(a) ? a : e.dest, e.start, e.end);
                var f = {},
                    c = T ? 0 : y / 2;
                if (!I)
                    for (var b = 0, d = v.length; d > b; b++) {
                        if (a >= e.end || b === v.length - 1) {
                            f.activePage = v.length - 1;
                            break
                        }
                        if (a <= v[b] + c) {
                            f.activePage = b;
                            break
                        }
                    }
                if (B) {
                    for (var d = b = c = !1, g = 0, h = p.length; h > g; g++)
                        if (!1 === c && a <= p[g].start + p[g].half && (c = g), !1 === d && a <= p[g].center + p[g].half && (d = g), g === h - 1 || a <= p[g].end + p[g].half) {
                            b = g;
                            break
                        }
                    f.firstItem = O(c) ? c : 0, f.centerItem = O(d) ? d : f.firstItem, f.lastItem = O(b) ? b : f.centerItem
                }
                return f
            }

            function Ja() {
                var a = e.dest <= e.start,
                    f = e.dest >= e.end,
                    d = a ? 1 : f ? 2 : 3;
                q.slideePosState !== d && (q.slideePosState = d, X.is("button,input") && X.prop("disabled", a), Y.is("button,input") && Y.prop("disabled", f), X.add(ea)[a ? "addClass" : "removeClass"](b.disabledClass), Y.add(Z)[f ? "addClass" : "removeClass"](b.disabledClass)), q.fwdbwdState !== d && c.released && (q.fwdbwdState = d, ea.is("button,input") && ea.prop("disabled", a), Z.is("button,input") && Z.prop("disabled", f)), B && (a = 0 === h.activeItem, f = h.activeItem >= p.length - 1, d = a ? 1 : f ? 2 : 3, q.itemsButtonState !== d && (q.itemsButtonState = d, $.is("button,input") && $.prop("disabled", a), aa.is("button,input") && aa.prop("disabled", f), $[a ? "addClass" : "removeClass"](b.disabledClass), aa[f ? "addClass" : "removeClass"](b.disabledClass)))
            }

            function Ma(a, f, b) {
                if (a = za(a), f = za(f), a > -1 && f > -1 && a !== f && !(b && f === a - 1 || !b && f === a + 1)) {
                    G.eq(a)[b ? "insertAfter" : "insertBefore"](p[f].el);
                    var c = f > a ? a : b ? f : f - 1,
                        d = a > f ? a : b ? f + 1 : f,
                        e = a > f;
                    a === h.activeItem ? q.active = h.activeItem = b ? e ? f + 1 : f : e ? f : f - 1 : h.activeItem > c && h.activeItem < d && (q.active = h.activeItem += e ? 1 : -1), da()
                }
            }

            function Na(a, f) {
                for (var b = 0, c = H[a].length; c > b; b++)
                    if (H[a][b] === f) return b;
                return -1
            }

            function Oa(a) {
                return u(L(a, w.start, w.end) / w.end * (e.end - e.start)) + e.start
            }

            function eb() {
                c.history[0] = c.history[1], c.history[1] = c.history[2], c.history[2] = c.history[3], c.history[3] = c.delta
            }

            function Pa(a) {
                c.released = 0, c.source = a, c.slidee = "slidee" === a
            }

            function Qa(a) {
                var f = "touchstart" === a.type,
                    g = a.data.source,
                    h = "slidee" === g;
                !c.init && (f || !~l.inArray(a.target.nodeName, Ra) && !l(a.target).is(b.interactive)) && ("handle" !== g || b.dragHandle && w.start !== w.end) && (!h || (f ? b.touchDragging : b.mouseDragging && 2 > a.which)) && (f || P(a, 1), Pa(g), c.init = 0, c.$source = l(a.target), c.touch = f, c.pointer = f ? a.originalEvent.touches[0] : a, c.initX = c.pointer.pageX, c.initY = c.pointer.pageY, c.initPos = h ? e.cur : w.cur, c.start = +new Date, c.time = 0, c.path = 0, c.delta = 0, c.locked = 0, c.history = [0, 0, 0, 0], c.pathToLock = h ? f ? 30 : 10 : 0, ba.on(f ? Sa : Ta, Ua), d.pause(1), (h ? t : C).addClass(b.draggedClass), z("moveStart"), h && (Va = setInterval(eb, 10)))
            }

            function Ua(a) {
                if (c.released = "mouseup" === a.type || "touchend" === a.type, c.pointer = c.touch ? a.originalEvent[c.released ? "changedTouches" : "touches"][0] : a, c.pathX = c.pointer.pageX - c.initX, c.pathY = c.pointer.pageY - c.initY, c.path = fb(Wa(c.pathX, 2) + Wa(c.pathY, 2)), c.delta = b.horizontal ? c.pathX : c.pathY, !c.init) {
                    if (!(b.horizontal ? W(c.pathX) > W(c.pathY) : W(c.pathX) < W(c.pathY))) return Xa();
                    c.init = 1
                }
                P(a), !c.locked && c.path > c.pathToLock && c.slidee && (c.locked = 1, c.$source.on(ca, Aa)), c.released && (Xa(), b.releaseSwing && c.slidee && (c.swing = 300 * ((c.delta - c.history[0]) / 40), c.delta += c.swing, c.tweese = 10 < W(c.swing))), J(c.slidee ? u(c.initPos - c.delta) : Oa(c.initPos + c.delta))
            }

            function Xa() {
                clearInterval(Va), ba.off(c.touch ? Sa : Ta, Ua), (c.slidee ? t : C).removeClass(b.draggedClass), setTimeout(function() {
                    c.$source.off(ca, Aa)
                }), d.resume(1), e.cur === e.dest && c.init && z("moveEnd"), c.init = 0
            }

            function Ya() {
                d.stop(), ba.off("mouseup", Ya)
            }

            function fa(a) {
                switch (P(a), this) {
                    case Z[0]:
                    case ea[0]:
                        d.moveBy(Z.is(this) ? b.moveBy : -b.moveBy), ba.on("mouseup", Ya);
                        break;
                    case $[0]:
                        d.prev();
                        break;
                    case aa[0]:
                        d.next();
                        break;
                    case X[0]:
                        d.prevPage();
                        break;
                    case Y[0]:
                        d.nextPage()
                }
            }

            function gb(a) {
                return n.curDelta = (b.horizontal ? a.deltaY || a.deltaX : a.deltaY) || -a.wheelDelta, n.curDelta /= 1 === a.deltaMode ? 3 : 100, B ? (Ba = +new Date, n.last < Ba - n.resetTime && (n.delta = 0), n.last = Ba, n.delta += n.curDelta, 1 > W(n.delta) ? n.finalDelta = 0 : (n.finalDelta = u(n.delta / 1), n.delta %= 1), n.finalDelta) : n.curDelta
            }

            function hb(a) {
                var f = +new Date;
                Ca + 300 > f ? Ca = f : b.scrollBy && e.start !== e.end && (P(a, 1), d.slideBy(b.scrollBy * gb(a.originalEvent)))
            }

            function ib(a) {
                b.clickBar && a.target === K[0] && (P(a), J(Oa((b.horizontal ? a.pageX - K.offset().left : a.pageY - K.offset().top) - N / 2)))
            }

            function jb(a) {
                if (b.keyboardNavBy) switch (a.which) {
                    case b.horizontal ? 37:
                        38: P(a), d["pages" === b.keyboardNavBy ? "prevPage" : "prev"]();
                        break;
                    case b.horizontal ? 39:
                        40: P(a), d["pages" === b.keyboardNavBy ? "nextPage" : "next"]()
                }
            }

            function kb(a) {
                ~l.inArray(this.nodeName, Ra) || l(this).is(b.interactive) ? a.stopPropagation() : this.parentNode === t[0] && d.activate(this)
            }

            function lb() {
                this.parentNode === V[0] && d.activatePage(ha.index(this))
            }

            function mb(a) {
                b.pauseOnHover && d["mouseenter" === a.type ? "pause" : "resume"](2)
            }

            function z(a, b) {
                if (H[a]) {
                    for (Da = H[a].length, Q = Ea.length = 0; Da > Q; Q++) Ea.push(H[a][Q]);
                    for (Q = 0; Da > Q; Q++) Ea[Q].call(d, a, b)
                }
            }
            var ra, E, sa, r, ta, A, ua, na, b = l.extend({}, ma.defaults, k),
                d = this,
                I = O(g),
                F = l(g),
                t = F.children().eq(0),
                y = 0,
                s = 0,
                e = {
                    start: 0,
                    center: 0,
                    end: 0,
                    cur: 0,
                    dest: 0
                },
                K = l(b.scrollBar).eq(0),
                C = K.children().eq(0),
                S = 0,
                N = 0,
                w = {
                    start: 0,
                    end: 0,
                    cur: 0
                },
                V = l(b.pagesBar),
                ha = 0,
                v = [],
                G = 0,
                p = [],
                h = {
                    firstItem: 0,
                    lastItem: 0,
                    centerItem: 0,
                    activeItem: -1,
                    activePage: 0
                };
            k = "basic" === b.itemNav;
            var T = "forceCentered" === b.itemNav,
                M = "centered" === b.itemNav || T,
                B = !I && (k || M || T),
                Za = b.scrollSource ? l(b.scrollSource) : F,
                nb = b.dragSource ? l(b.dragSource) : F,
                Z = l(b.forward),
                ea = l(b.backward),
                $ = l(b.prev),
                aa = l(b.next),
                X = l(b.prevPage),
                Y = l(b.nextPage),
                H = {},
                q = {};
            na = ua = A = ta = r = sa = E = ra = void 0;
            var Q, Da, x = {},
                c = {
                    released: 1
                },
                n = {
                    last: 0,
                    delta: 0,
                    resetTime: 200
                },
                U = 0,
                Va = 0,
                R = 0,
                La = 0;
            I || (g = F[0]), d.initialized = 0, d.frame = g, d.slidee = t[0], d.pos = e, d.rel = h, d.items = p, d.pages = v, d.isPaused = 0, d.options = b, d.dragging = c, d.reload = da, d.getPos = function(a) {
                if (B) return a = qa(a), -1 !== a ? p[a] : !1;
                var f = t.find(a).eq(0);
                return f[0] ? (a = b.horizontal ? f.offset().left - t.offset().left : f.offset().top - t.offset().top, f = f[b.horizontal ? "outerWidth" : "outerHeight"](), {
                    start: a,
                    center: a - y / 2 + f / 2,
                    end: a - y + f,
                    size: f
                }) : !1
            }, d.moveBy = function(a) {
                x.speed = a, !c.init && x.speed && e.cur !== (0 < x.speed ? e.end : e.start) && (x.lastTime = +new Date, x.startPos = e.cur, Pa("button"), c.init = 1, z("moveStart"), la(La), Ka())
            }, d.stop = function() {
                "button" === c.source && (c.init = 0, c.released = 1)
            }, d.prev = function() {
                d.activate(h.activeItem - 1)
            }, d.next = function() {
                d.activate(h.activeItem + 1)
            }, d.prevPage = function() {
                d.activatePage(h.activePage - 1)
            }, d.nextPage = function() {
                d.activatePage(h.activePage + 1)
            }, d.slideBy = function(a, f) {
                a && (B ? d[M ? "toCenter" : "toStart"](L((M ? h.centerItem : h.firstItem) + b.scrollBy * a, 0, p.length)) : J(e.dest + a, f))
            }, d.slideTo = function(a, b) {
                J(a, b)
            }, d.toStart = function(a, b) {
                ya("start", a, b)
            }, d.toEnd = function(a, b) {
                ya("end", a, b)
            }, d.toCenter = function(a, b) {
                ya("center", a, b)
            }, d.getIndex = qa, d.activate = function(a, f) {
                var e = pa(a);
                b.smart && !1 !== e && (M ? d.toCenter(e, f) : e >= h.lastItem ? d.toStart(e, f) : e <= h.firstItem ? d.toEnd(e, f) : c.released && !d.isPaused && d.resume())
            }, d.activatePage = function(a, b) {
                O(a) && J(v[L(a, 0, v.length - 1)], b)
            }, d.resume = function(a) {
                !b.cycleBy || !b.cycleInterval || "items" === b.cycleBy && !p[0] || a < d.isPaused || (d.isPaused = 0, R ? R = clearTimeout(R) : z("resume"), R = setTimeout(function() {
                    switch (z("cycle"), b.cycleBy) {
                        case "items":
                            d.activate(h.activeItem >= p.length - 1 ? 0 : h.activeItem + 1);
                            break;
                        case "pages":
                            d.activatePage(h.activePage >= v.length - 1 ? 0 : h.activePage + 1)
                    }
                }, b.cycleInterval))
            }, d.pause = function(a) {
                a < d.isPaused || (d.isPaused = a || 100, R && (R = clearTimeout(R), z("pause")))
            }, d.toggle = function() {
                d[R ? "pause" : "resume"]()
            }, d.set = function(a, c) {
                l.isPlainObject(a) ? l.extend(b, a) : b.hasOwnProperty(a) && (b[a] = c)
            }, d.add = function(a, b) {
                var c = l(a);
                B ? (null == b || !p[0] || b >= p.length ? c.appendTo(t) : p.length && c.insertBefore(p[b].el), b <= h.activeItem && (q.active = h.activeItem += c.length)) : t.append(c), da()
            }, d.remove = function(a) {
                if (B) {
                    if (a = za(a), a > -1) {
                        G.eq(a).remove();
                        var b = a === h.activeItem;
                        a < h.activeItem && (q.active = --h.activeItem), da(), b && (q.active = null, d.activate(h.activeItem))
                    }
                } else l(a).remove(), da()
            }, d.moveAfter = function(a, b) {
                Ma(a, b, 1)
            }, d.moveBefore = function(a, b) {
                Ma(a, b)
            }, d.on = function(a, b) {
                if ("object" === ka(a))
                    for (var c in a) a.hasOwnProperty(c) && d.on(c, a[c]);
                else if ("function" === ka(b)) {
                    c = a.split(" ");
                    for (var e = 0, g = c.length; g > e; e++) H[c[e]] = H[c[e]] || [], -1 === Na(c[e], b) && H[c[e]].push(b)
                } else if ("array" === ka(b))
                    for (c = 0, e = b.length; e > c; c++) d.on(a, b[c])
            }, d.one = function(a, b) {
                function c() {
                    b.apply(d, arguments), d.off(a, c)
                }
                d.on(a, c)
            }, d.off = function(a, b) {
                if (b instanceof Array)
                    for (var c = 0, e = b.length; e > c; c++) d.off(a, b[c]);
                else
                    for (var c = a.split(" "), e = 0, g = c.length; g > e; e++)
                        if (H[c[e]] = H[c[e]] || [], null == b) H[c[e]].length = 0;
                        else {
                            var h = Na(c[e], b); - 1 !== h && H[c[e]].splice(h, 1)
                        }
            }, d.destroy = function() {
                return ba.add(Za).add(C).add(K).add(V).add(Z).add(ea).add($).add(aa).add(X).add(Y).unbind("." + m), $.add(aa).add(X).add(Y).removeClass(b.disabledClass), G && G.eq(h.activeItem).removeClass(b.activeClass), V.empty(), I || (F.unbind("." + m), t.add(C).css(D || (b.horizontal ? "left" : "top"), D ? "none" : 0), l.removeData(g, m)), p.length = v.length = 0, q = {}, d.initialized = 0, d
            }, d.init = function() {
                if (!d.initialized) {
                    d.on(cb);
                    var a = C;
                    return I || (a = a.add(t), F.css("overflow", "hidden"), D || "static" !== F.css("position") || F.css("position", "relative")), D ? ja && a.css(D, ja) : ("static" === K.css("position") && K.css("position", "relative"), a.css({
                        position: "absolute"
                    })), b.forward && Z.on($a, fa), b.backward && ea.on($a, fa), b.prev && $.on(ca, fa), b.next && aa.on(ca, fa), b.prevPage && X.on(ca, fa), b.nextPage && Y.on(ca, fa), Za.on(ab, hb), K[0] && K.on(ca, ib), B && b.activateOn && F.on(b.activateOn + "." + m, "*", kb), V[0] && b.activatePageOn && V.on(b.activatePageOn + "." + m, "*", lb), nb.on(bb, {
                        source: "slidee"
                    }, Qa), C && C.on(bb, {
                        source: "handle"
                    }, Qa), ba.bind("keydown." + m, jb), I || (F.on("mouseenter." + m + " mouseleave." + m, mb), F.on("scroll." + m, ob)), da(), b.cycleBy && !I && d[b.startPaused ? "pause" : "resume"](), d.initialized = 1, d
                }
            }
        }

        function ka(g) {
            return null == g ? String(g) : "object" == typeof g || "function" == typeof g ? Object.prototype.toString.call(g).match(/\s([a-z]+)/i)[1].toLowerCase() || "object" : typeof g
        }

        function P(g, k) {
            g.preventDefault(), k && g.stopPropagation()
        }

        function Aa(g) {
            P(g, 1), l(this).off(g.type, Aa)
        }

        function ob() {
            this.scrollTop = this.scrollLeft = 0
        }

        function O(g) {
            return !isNaN(parseFloat(g)) && isFinite(g)
        }

        function oa(g, k) {
            return 0 | u(String(g.css(k)).replace(/[^\-0-9.]/g, ""))
        }

        function L(g, k, l) {
            return k > g ? k : g > l ? l : g
        }
        var D, ja, Ba, m = "sly",
            la = A.cancelAnimationFrame || A.cancelRequestAnimationFrame,
            ia = A.requestAnimationFrame,
            ba = l(document),
            bb = "touchstart." + m + " mousedown." + m,
            Ta = "mousemove." + m + " mouseup." + m,
            Sa = "touchmove." + m + " touchend." + m,
            ab = (document.implementation.hasFeature("Event.wheel", "3.0") ? "wheel." : "mousewheel.") + m,
            ca = "click." + m,
            $a = "mousedown." + m,
            Ra = ["INPUT", "SELECT", "BUTTON", "TEXTAREA"],
            Ea = [],
            W = Math.abs,
            fb = Math.sqrt,
            Wa = Math.pow,
            u = Math.round,
            Ga = Math.max,
            Ha = Math.min,
            Ca = 0;
        ba.on(ab, function() {
                Ca = +new Date
            }),
            function(g) {
                for (var k = ["moz", "webkit", "o"], l = 0, m = 0, E = k.length; E > m && !la; ++m) ia = (la = g[k[m] + "CancelAnimationFrame"] || g[k[m] + "CancelRequestAnimationFrame"]) && g[k[m] + "RequestAnimationFrame"];
                la || (ia = function(k) {
                    var m = +new Date,
                        E = Ga(0, 16 - (m - l));
                    return l = m + E, g.setTimeout(function() {
                        k(m + E)
                    }, E)
                }, la = function(g) {
                    clearTimeout(g)
                })
            }(window),
            function() {
                function g(g) {
                    for (var m = 0, u = k.length; u > m; m++) {
                        var r = k[m] ? k[m] + g.charAt(0).toUpperCase() + g.slice(1) : g;
                        if (null != l.style[r]) return r
                    }
                }
                var k = ["", "webkit", "moz", "ms", "o"],
                    l = document.createElement("div");
                D = g("transform"), ja = g("perspective") ? "translateZ(0) " : ""
            }(), A.Sly = ma, l.fn.sly = function(g, k) {
                var u, D;
                return l.isPlainObject(g) || (("string" === ka(g) || !1 === g) && (u = !1 === g ? "destroy" : g, D = Array.prototype.slice.call(arguments, 1)), g = {}), this.each(function(E, A) {
                    var r = l.data(A, m);
                    r || u ? r && u && r[u] && r[u].apply(r, D) : l.data(A, m, new ma(A, g, k).init())
                })
            }, ma.defaults = {
                horizontal: 0,
                itemNav: null,
                itemSelector: null,
                smart: 0,
                activateOn: null,
                activateMiddle: 0,
                scrollSource: null,
                scrollBy: 0,
                scrollHijack: 300,
                dragSource: null,
                mouseDragging: 0,
                touchDragging: 0,
                releaseSwing: 0,
                swingSpeed: .2,
                elasticBounds: 0,
                interactive: null,
                scrollBar: null,
                dragHandle: 0,
                dynamicHandle: 0,
                minHandleSize: 50,
                clickBar: 0,
                syncSpeed: .5,
                pagesBar: null,
                activatePageOn: null,
                pageBuilder: function(g) {
                    return "<li>" + (g + 1) + "</li>"
                },
                forward: null,
                backward: null,
                prev: null,
                next: null,
                prevPage: null,
                nextPage: null,
                cycleBy: null,
                cycleInterval: 5e3,
                pauseOnHover: 0,
                startPaused: 0,
                moveBy: 300,
                speed: 0,
                easing: "swing",
                startAt: 0,
                keyboardNavBy: null,
                draggedClass: "dragged",
                activeClass: "active",
                disabledClass: "disabled"
            }
    }(jQuery, window), angular.module("angular-google-analytics", []).provider("Analytics", function() {
        var accountId, domainName, removeRegExp, experimentId, created = !1,
            trackRoutes = !0,
            trackPrefix = "",
            analyticsJS = !1,
            pageEvent = "$routeChangeSuccess",
            cookieConfig = "auto",
            ecommerce = !1,
            enhancedLinkAttribution = !1,
            ignoreFirstPageLoad = !1;
        this._logs = [], this.setAccount = function(id) {
            return accountId = id, !0
        }, this.trackPages = function(doTrack) {
            return trackRoutes = doTrack, !0
        }, this.trackPrefix = function(prefix) {
            return trackPrefix = prefix, !0
        }, this.setDomainName = function(domain) {
            return domainName = domain, !0
        }, this.useAnalytics = function(val) {
            return analyticsJS = !!val, !0
        }, this.useEnhancedLinkAttribution = function(val) {
            return enhancedLinkAttribution = !!val, !0
        }, this.setPageEvent = function(name) {
            return pageEvent = name, !0
        }, this.setCookieConfig = function(config) {
            return cookieConfig = config, !0
        }, this.useECommerce = function(val) {
            return ecommerce = !!val, !0
        }, this.setRemoveRegExp = function(regex) {
            return regex instanceof RegExp ? (removeRegExp = regex, !0) : !1
        }, this.setExperimentId = function(id) {
            return experimentId = id, !0
        }, this.ignoreFirstPageLoad = function(val) {
            ignoreFirstPageLoad = !!val
        }, this.$get = ["$document", "$rootScope", "$location", "$window", function($document, $rootScope, $location, $window) {
            function _createScriptTag() {
                accountId && ($window._gaq = [], $window._gaq.push(["_setAccount", accountId]), enhancedLinkAttribution && $window._gaq.push(["_require", "inpage_linkid", "//www.google-analytics.com/plugins/ga/inpage_linkid.js"]), trackRoutes && !ignoreFirstPageLoad && $window._gaq.push(removeRegExp ? ["_trackPageview", getUrl()] : ["_trackPageview"]), domainName && $window._gaq.push(["_setDomainName", domainName]), function() {
                    var document = $document[0],
                        ga = document.createElement("script");
                    ga.type = "text/javascript", ga.async = !0, ga.src = ("https:" === document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
                    var s = document.getElementsByTagName("script")[0];
                    s.parentNode.insertBefore(ga, s)
                }(), created = !0)
            }

            function _createAnalyticsScriptTag() {
                if (!accountId) return console.warn("No account id set for Analytics.js");
                if (function(i, s, o, g, r, a, m) {
                        i.GoogleAnalyticsObject = r, i[r] = i[r] || function() {
                            (i[r].q = i[r].q || []).push(arguments)
                        }, i[r].l = 1 * new Date, a = s.createElement(o), m = s.getElementsByTagName(o)[0], a.async = 1, a.src = g, m.parentNode.insertBefore(a, m)
                    }(window, document, "script", "//www.google-analytics.com/analytics.js", "ga"), $window.ga("create", accountId, cookieConfig), trackRoutes && !ignoreFirstPageLoad && $window.ga("send", "pageview", getUrl()), $window.ga && (ecommerce && $window.ga("require", "ecommerce", "ecommerce.js"), enhancedLinkAttribution && $window.ga("require", "linkid", "linkid.js"), experimentId)) {
                    var expScript = document.createElement("script"),
                        s = document.getElementsByTagName("script")[0];
                    expScript.src = "//www.google-analytics.com/cx/api.js?experiment=" + experimentId, s.parentNode.insertBefore(expScript, s)
                }
            }
            var getUrl = function() {
                var url = $location.path();
                return removeRegExp ? url.replace(removeRegExp, "") : url
            };
            this._log = function() {
                this._logs.push(arguments)
            }, this._trackPage = function(url, title) {
                title = title ? title : $document[0].title, trackRoutes && !analyticsJS && $window._gaq ? ($window._gaq.push(["_set", "title", title]), $window._gaq.push(["_trackPageview", trackPrefix + url]), this._log("_trackPageview", arguments)) : trackRoutes && analyticsJS && $window.ga && ($window.ga("send", "pageview", {
                    page: trackPrefix + url,
                    title: title
                }), this._log("pageview", arguments))
            }, this._trackEvent = function(category, action, label, value) {
                !analyticsJS && $window._gaq ? ($window._gaq.push(["_trackEvent", category, action, label, value]), this._log("trackEvent", arguments)) : $window.ga && ($window.ga("send", "event", category, action, label, value), this._log("event", arguments))
            }, this._addTrans = function(transactionId, affiliation, total, tax, shipping, city, state, country, currency) {
                !analyticsJS && $window._gaq ? ($window._gaq.push(["_addTrans", transactionId, affiliation, total, tax, shipping, city, state, country]), this._log("_addTrans", arguments)) : $window.ga && (ecommerce ? ($window.ga("ecommerce:addTransaction", {
                    id: transactionId,
                    affiliation: affiliation,
                    revenue: total,
                    tax: tax,
                    shipping: shipping,
                    currency: currency || "USD"
                }), this._log("ecommerce:addTransaction", arguments)) : console.warn("ecommerce no set. Use AnalyticsProvider.setECommerce(true);"))
            }, this._addItem = function(transactionId, sku, name, category, price, quantity) {
                !analyticsJS && $window._gaq ? ($window._gaq.push(["_addItem", transactionId, sku, name, category, price, quantity]), this._log("_addItem", arguments)) : $window.ga && ($window.ga("ecommerce:addItem", {
                    id: transactionId,
                    name: name,
                    sku: sku,
                    category: category,
                    price: price,
                    quantity: quantity
                }), this._log("ecommerce:addItem", arguments))
            }, this._trackTrans = function() {
                !analyticsJS && $window._gaq ? ($window._gaq.push(["_trackTrans"]), this._log("_trackTrans", arguments)) : $window.ga && ($window.ga("ecommerce:send"), this._log("ecommerce:send", arguments))
            }, this._clearTrans = function() {
                $window.ga && ($window.ga("ecommerce:clear"), this._log("ecommerce:clear", arguments))
            }, this._send = function(obj) {
                $window.ga && ($window.ga("send", obj), this._log("send", obj))
            }, analyticsJS ? _createAnalyticsScriptTag() : _createScriptTag();
            var me = this;
            return trackRoutes && $rootScope.$on(pageEvent, function() {
                me._trackPage(getUrl())
            }), {
                _logs: me._logs,
                cookieConfig: cookieConfig,
                ecommerce: ecommerce,
                enhancedLinkAttribution: enhancedLinkAttribution,
                getUrl: getUrl,
                experimentId: experimentId,
                ignoreFirstPageLoad: ignoreFirstPageLoad,
                trackPage: function(url, title) {
                    me._trackPage(url, title)
                },
                trackEvent: function(category, action, label, value) {
                    me._trackEvent(category, action, label, value)
                },
                addTrans: function(transactionId, affiliation, total, tax, shipping, city, state, country, currency) {
                    me._addTrans(transactionId, affiliation, total, tax, shipping, city, state, country, currency)
                },
                addItem: function(transactionId, sku, name, category, price, quantity) {
                    me._addItem(transactionId, sku, name, category, price, quantity)
                },
                trackTrans: function() {
                    me._trackTrans()
                },
                clearTrans: function() {
                    me._clearTrans()
                },
                send: function(obj) {
                    me._send(obj)
                }
            }
        }]
    }), angular.module("ui.slider", []).value("uiSliderConfig", {}).directive("uiSlider", ["uiSliderConfig", "$timeout", function(uiSliderConfig, $timeout) {
        return uiSliderConfig = uiSliderConfig || {}, {
            require: "ngModel",
            compile: function() {
                return function(scope, elm, attrs, ngModel) {
                    function parseNumber(n, decimals) {
                        return decimals ? parseFloat(n) : parseInt(n)
                    }

                    function destroy() {
                        elm.slider("destroy")
                    }
                    var options = angular.extend(scope.$eval(attrs.uiSlider) || {}, uiSliderConfig),
                        prevRangeValues = {
                            min: null,
                            max: null
                        },
                        init = function() {
                            angular.isArray(ngModel.$modelValue) && options.range !== !0 && (console.warn("Change your range option of ui-slider. When assigning ngModel an array of values then the range option should be set to true."), options.range = !0), elm.slider(options), init = angular.noop
                        },
                        properties = ["min", "max", "step"],
                        useDecimals = angular.isUndefined(attrs.useDecimals) ? !1 : !0;
                    angular.forEach(properties, function(property) {
                        attrs.$observe(property, function(newVal) {
                            newVal && (init(), elm.slider("option", property, parseNumber(newVal, useDecimals)))
                        })
                    }), attrs.$observe("disabled", function(newVal) {
                        init(), elm.slider("option", "disabled", !!newVal)
                    }), scope.$watch(attrs.uiSlider, function(newVal) {
                        init(), elm.slider("option", newVal)
                    }, !0), $timeout(init, 0, !0), elm.bind("slide", function(event, ui) {
                        ngModel.$setViewValue(ui.values || ui.value), scope.$apply()
                    }), ngModel.$render = function() {
                        init();
                        var method = options.range === !0 ? "values" : "value";
                        isNaN(ngModel.$viewValue) && (ngModel.$viewValue = 0), options.range === !0 && (angular.isDefined(options.min) && options.min > ngModel.$modelValue[0] && (ngModel.$modelValue[0] = options.min), angular.isDefined(options.max) && options.max < ngModel.$modelValue[1] && (ngModel.$modelValue[1] = options.max), ngModel.$modelValue[0] >= ngModel.$modelValue[1] && (prevRangeValues.min >= ngModel.$modelValue[1] && (ngModel.$modelValue[0] = prevRangeValues.min), prevRangeValues.max <= ngModel.$modelValue[0] && (ngModel.$modelValue[1] = prevRangeValues.max)), prevRangeValues.min = ngModel.$modelValue[0], prevRangeValues.max = ngModel.$modelValue[1]), elm.slider(method, ngModel.$modelValue)
                    }, scope.$watch(attrs.ngModel, function() {
                        options.range === !0 && ngModel.$render()
                    }, !0), elm.bind("$destroy", destroy)
                }
            }
        }
    }]),
    function(window, angular, undefined) {
        "use strict";
        angular.module("ngCookies", ["ng"]).factory("$cookies", ["$rootScope", "$browser", function($rootScope, $browser) {
            function push() {
                var name, value, browserCookies, updated;
                for (name in lastCookies) isUndefined(cookies[name]) && $browser.cookies(name, undefined);
                for (name in cookies) value = cookies[name], angular.isString(value) || (value = "" + value, cookies[name] = value), value !== lastCookies[name] && ($browser.cookies(name, value), updated = !0);
                if (updated) {
                    updated = !1, browserCookies = $browser.cookies();
                    for (name in cookies) cookies[name] !== browserCookies[name] && (isUndefined(browserCookies[name]) ? delete cookies[name] : cookies[name] = browserCookies[name], updated = !0)
                }
            }
            var lastBrowserCookies, cookies = {},
                lastCookies = {},
                runEval = !1,
                copy = angular.copy,
                isUndefined = angular.isUndefined;
            return $browser.addPollFn(function() {
                var currentCookies = $browser.cookies();
                lastBrowserCookies != currentCookies && (lastBrowserCookies = currentCookies, copy(currentCookies, lastCookies), copy(currentCookies, cookies), runEval && $rootScope.$apply())
            })(), runEval = !0, $rootScope.$watch(push), cookies
        }]).factory("$cookieStore", ["$cookies", function($cookies) {
            return {
                get: function(key) {
                    var value = $cookies[key];
                    return value ? angular.fromJson(value) : value
                },
                put: function(key, value) {
                    $cookies[key] = angular.toJson(value)
                },
                remove: function(key) {
                    delete $cookies[key]
                }
            }
        }])
    }(window, window.angular), angular.module("ui.config", []).value("ui.config", {}), angular.module("ui.filters", ["ui.config"]), angular.module("ui.directives", ["ui.config"]), angular.module("ui", ["ui.filters", "ui.directives", "ui.config"]), angular.module("ui.directives").directive("uiAnimate", ["ui.config", "$timeout", function(uiConfig, $timeout) {
        var options = {};
        return angular.isString(uiConfig.animate) ? options["class"] = uiConfig.animate : uiConfig.animate && (options = uiConfig.animate), {
            restrict: "A",
            link: function($scope, element, attrs) {
                var opts = {};
                attrs.uiAnimate && (opts = $scope.$eval(attrs.uiAnimate), angular.isString(opts) && (opts = {
                    "class": opts
                })), opts = angular.extend({
                    "class": "ui-animate"
                }, options, opts), element.addClass(opts["class"]), $timeout(function() {
                    element.removeClass(opts["class"])
                }, 20, !1)
            }
        }
    }]), angular.module("ui.directives").directive("uiCalendar", ["ui.config", "$parse", function(uiConfig) {
        return uiConfig.uiCalendar = uiConfig.uiCalendar || {}, {
            require: "ngModel",
            restrict: "A",
            link: function(scope, elm, attrs) {
                function update() {
                    scope.calendar = elm.html("");
                    var view = scope.calendar.fullCalendar("getView");
                    view && (view = view.name);
                    var expression, options = {
                        defaultView: view,
                        eventSources: sources
                    };
                    expression = attrs.uiCalendar ? scope.$eval(attrs.uiCalendar) : {}, angular.extend(options, uiConfig.uiCalendar, expression), scope.calendar.fullCalendar(options)
                }
                var sources = scope.$eval(attrs.ngModel),
                    tracker = 0,
                    getSources = function() {
                        var equalsTracker = scope.$eval(attrs.equalsTracker);
                        return tracker = 0, angular.forEach(sources, function(value) {
                            angular.isArray(value) && (tracker += value.length)
                        }), angular.isNumber(equalsTracker) ? tracker + sources.length + equalsTracker : tracker + sources.length
                    };
                update(), scope.$watch(getSources, function() {
                    update()
                })
            }
        }
    }]), angular.module("ui.directives").directive("uiCodemirror", ["ui.config", "$timeout", function(uiConfig, $timeout) {
        "use strict";
        var events = ["cursorActivity", "viewportChange", "gutterClick", "focus", "blur", "scroll", "update"];
        return {
            restrict: "A",
            require: "ngModel",
            link: function(scope, elm, attrs, ngModel) {
                var options, opts, onChange, deferCodeMirror, codeMirror;
                if ("textarea" !== elm[0].type) throw new Error("uiCodemirror3 can only be applied to a textarea element");
                options = uiConfig.codemirror || {}, opts = angular.extend({}, options, scope.$eval(attrs.uiCodemirror)), onChange = function(aEvent) {
                    return function(instance, changeObj) {
                        var newValue = instance.getValue();
                        newValue !== ngModel.$viewValue && (ngModel.$setViewValue(newValue), scope.$apply()), "function" == typeof aEvent && aEvent(instance, changeObj)
                    }
                }, deferCodeMirror = function() {
                    codeMirror = CodeMirror.fromTextArea(elm[0], opts), codeMirror.on("change", onChange(opts.onChange));
                    for (var aEvent, i = 0, n = events.length; n > i; ++i) aEvent = opts["on" + events[i].charAt(0).toUpperCase() + events[i].slice(1)], void 0 !== aEvent && "function" == typeof aEvent && codeMirror.on(events[i], aEvent);
                    ngModel.$formatters.push(function(value) {
                        if (angular.isUndefined(value) || null === value) return "";
                        if (angular.isObject(value) || angular.isArray(value)) throw new Error("ui-codemirror cannot use an object or an array as a model");
                        return value
                    }), ngModel.$render = function() {
                        codeMirror.setValue(ngModel.$viewValue)
                    }, attrs.uiRefresh && scope.$watch(attrs.uiRefresh, function(newVal, oldVal) {
                        newVal !== oldVal && $timeout(codeMirror.refresh)
                    })
                }, $timeout(deferCodeMirror)
            }
        }
    }]), angular.module("ui.directives").directive("uiCurrency", ["ui.config", "currencyFilter", function(uiConfig, currencyFilter) {
        var options = {
            pos: "ui-currency-pos",
            neg: "ui-currency-neg",
            zero: "ui-currency-zero"
        };
        return uiConfig.currency && angular.extend(options, uiConfig.currency), {
            restrict: "EAC",
            require: "ngModel",
            link: function(scope, element, attrs, controller) {
                var opts, renderview, value;
                opts = angular.extend({}, options, scope.$eval(attrs.uiCurrency)), renderview = function(viewvalue) {
                    var num;
                    return num = 1 * viewvalue, element.toggleClass(opts.pos, num > 0), element.toggleClass(opts.neg, 0 > num), element.toggleClass(opts.zero, 0 === num), element.text("" === viewvalue ? "" : currencyFilter(num, opts.symbol)), !0
                }, controller.$render = function() {
                    value = controller.$viewValue, element.val(value), renderview(value)
                }
            }
        }
    }]), angular.module("ui.directives").directive("uiDate", ["ui.config", function(uiConfig) {
        "use strict";
        var options;
        return options = {}, angular.isObject(uiConfig.date) && angular.extend(options, uiConfig.date), {
            require: "?ngModel",
            link: function(scope, element, attrs, controller) {
                var getOptions = function() {
                        return angular.extend({}, uiConfig.date, scope.$eval(attrs.uiDate))
                    },
                    initDateWidget = function() {
                        var opts = getOptions();
                        if (controller) {
                            var updateModel = function() {
                                scope.$apply(function() {
                                    var date = element.datepicker("getDate");
                                    element.datepicker("setDate", element.val()), controller.$setViewValue(date), element.blur()
                                })
                            };
                            if (opts.onSelect) {
                                var userHandler = opts.onSelect;
                                opts.onSelect = function(value, picker) {
                                    updateModel(), scope.$apply(function() {
                                        userHandler(value, picker)
                                    })
                                }
                            } else opts.onSelect = updateModel;
                            element.bind("change", updateModel), controller.$render = function() {
                                var date = controller.$viewValue;
                                if (angular.isDefined(date) && null !== date && !angular.isDate(date)) throw new Error("ng-Model value must be a Date object - currently it is a " + typeof date + " - use ui-date-format to convert it from a string");
                                element.datepicker("setDate", date)
                            }
                        }
                        element.datepicker("destroy"), element.datepicker(opts), controller && controller.$render()
                    };
                scope.$watch(getOptions, initDateWidget, !0)
            }
        }
    }]).directive("uiDateFormat", ["ui.config", function(uiConfig) {
        var directive = {
            require: "ngModel",
            link: function(scope, element, attrs, modelCtrl) {
                var dateFormat = attrs.uiDateFormat || uiConfig.dateFormat;
                dateFormat ? (modelCtrl.$formatters.push(function(value) {
                    return angular.isString(value) ? $.datepicker.parseDate(dateFormat, value) : void 0
                }), modelCtrl.$parsers.push(function(value) {
                    return value ? $.datepicker.formatDate(dateFormat, value) : void 0
                })) : (modelCtrl.$formatters.push(function(value) {
                    return angular.isString(value) ? new Date(value) : void 0
                }), modelCtrl.$parsers.push(function(value) {
                    return value ? value.toISOString() : void 0
                }))
            }
        };
        return directive
    }]), angular.module("ui.directives").directive("uiEvent", ["$parse", function($parse) {
        return function(scope, elm, attrs) {
            var events = scope.$eval(attrs.uiEvent);
            angular.forEach(events, function(uiEvent, eventName) {
                var fn = $parse(uiEvent);
                elm.bind(eventName, function(evt) {
                    var params = Array.prototype.slice.call(arguments);
                    params = params.splice(1), scope.$apply(function() {
                        fn(scope, {
                            $event: evt,
                            $params: params
                        })
                    })
                })
            })
        }
    }]), angular.module("ui.directives").directive("uiIf", [function() {
        return {
            transclude: "element",
            priority: 1e3,
            terminal: !0,
            restrict: "A",
            compile: function(element, attr, transclude) {
                return function(scope, element, attr) {
                    var childElement, childScope;
                    scope.$watch(attr.uiIf, function(newValue) {
                        childElement && (childElement.remove(), childElement = void 0), childScope && (childScope.$destroy(), childScope = void 0), newValue && (childScope = scope.$new(), transclude(childScope, function(clone) {
                            childElement = clone, element.after(clone)
                        }))
                    })
                }
            }
        }
    }]), angular.module("ui.directives").directive("uiJq", ["ui.config", "$timeout", function(uiConfig, $timeout) {
        return {
            restrict: "A",
            compile: function(tElm, tAttrs) {
                if (!angular.isFunction(tElm[tAttrs.uiJq])) throw new Error('ui-jq: The "' + tAttrs.uiJq + '" function does not exist');
                var options = uiConfig.jq && uiConfig.jq[tAttrs.uiJq];
                return function(scope, elm, attrs) {
                    function callPlugin() {
                        $timeout(function() {
                            elm[attrs.uiJq].apply(elm, linkOptions)
                        }, 0, !1)
                    }
                    var linkOptions = [];
                    attrs.uiOptions ? (linkOptions = scope.$eval("[" + attrs.uiOptions + "]"), angular.isObject(options) && angular.isObject(linkOptions[0]) && (linkOptions[0] = angular.extend({}, options, linkOptions[0]))) : options && (linkOptions = [options]), attrs.ngModel && elm.is("select,input,textarea") && elm.on("change", function() {
                        elm.trigger("input")
                    }), attrs.uiRefresh && scope.$watch(attrs.uiRefresh, function() {
                        callPlugin()
                    }), callPlugin()
                }
            }
        }
    }]), angular.module("ui.directives").factory("keypressHelper", ["$parse", function($parse) {
        var keysByCode = {
                8: "backspace",
                9: "tab",
                13: "enter",
                27: "esc",
                32: "space",
                33: "pageup",
                34: "pagedown",
                35: "end",
                36: "home",
                37: "left",
                38: "up",
                39: "right",
                40: "down",
                45: "insert",
                46: "delete"
            },
            capitaliseFirstLetter = function(string) {
                return string.charAt(0).toUpperCase() + string.slice(1)
            };
        return function(mode, scope, elm, attrs) {
            var params, combinations = [];
            params = scope.$eval(attrs["ui" + capitaliseFirstLetter(mode)]), angular.forEach(params, function(v, k) {
                var combination, expression;
                expression = $parse(v), angular.forEach(k.split(" "), function(variation) {
                    combination = {
                        expression: expression,
                        keys: {}
                    }, angular.forEach(variation.split("-"), function(value) {
                        combination.keys[value] = !0
                    }), combinations.push(combination)
                })
            }), elm.bind(mode, function(event) {
                var altPressed = event.metaKey || event.altKey,
                    ctrlPressed = event.ctrlKey,
                    shiftPressed = event.shiftKey,
                    keyCode = event.keyCode;
                "keypress" === mode && !shiftPressed && keyCode >= 97 && 122 >= keyCode && (keyCode -= 32), angular.forEach(combinations, function(combination) {
                    var mainKeyPressed = combination.keys[keysByCode[event.keyCode]] || combination.keys[event.keyCode.toString()] || !1,
                        altRequired = combination.keys.alt || !1,
                        ctrlRequired = combination.keys.ctrl || !1,
                        shiftRequired = combination.keys.shift || !1;
                    mainKeyPressed && altRequired == altPressed && ctrlRequired == ctrlPressed && shiftRequired == shiftPressed && scope.$apply(function() {
                        combination.expression(scope, {
                            $event: event
                        })
                    })
                })
            })
        }
    }]), angular.module("ui.directives").directive("uiKeydown", ["keypressHelper", function(keypressHelper) {
        return {
            link: function(scope, elm, attrs) {
                keypressHelper("keydown", scope, elm, attrs)
            }
        }
    }]), angular.module("ui.directives").directive("uiKeypress", ["keypressHelper", function(keypressHelper) {
        return {
            link: function(scope, elm, attrs) {
                keypressHelper("keypress", scope, elm, attrs)
            }
        }
    }]), angular.module("ui.directives").directive("uiKeyup", ["keypressHelper", function(keypressHelper) {
        return {
            link: function(scope, elm, attrs) {
                keypressHelper("keyup", scope, elm, attrs)
            }
        }
    }]),
    function() {
        function bindMapEvents(scope, eventsStr, googleObject, element) {
            angular.forEach(eventsStr.split(" "), function(eventName) {
                var $event = {
                    type: "map-" + eventName
                };
                google.maps.event.addListener(googleObject, eventName, function(evt) {
                    element.triggerHandler(angular.extend({}, $event, evt)), scope.$$phase || scope.$apply()
                })
            })
        }

        function mapOverlayDirective(directiveName, events) {
            app.directive(directiveName, [function() {
                return {
                    restrict: "A",
                    link: function(scope, elm, attrs) {
                        scope.$watch(attrs[directiveName], function(newObject) {
                            bindMapEvents(scope, events, newObject, elm)
                        })
                    }
                }
            }])
        }
        var app = angular.module("ui.directives");
        app.directive("uiMap", ["ui.config", "$parse", function(uiConfig, $parse) {
            var mapEvents = "bounds_changed center_changed click dblclick drag dragend dragstart heading_changed idle maptypeid_changed mousemove mouseout mouseover projection_changed resize rightclick tilesloaded tilt_changed zoom_changed",
                options = uiConfig.map || {};
            return {
                restrict: "A",
                link: function(scope, elm, attrs) {
                    var opts = angular.extend({}, options, scope.$eval(attrs.uiOptions)),
                        map = new google.maps.Map(elm[0], opts),
                        model = $parse(attrs.uiMap);
                    model.assign(scope, map), bindMapEvents(scope, mapEvents, map, elm)
                }
            }
        }]), app.directive("uiMapInfoWindow", ["ui.config", "$parse", "$compile", function(uiConfig, $parse, $compile) {
            var infoWindowEvents = "closeclick content_change domready position_changed zindex_changed",
                options = uiConfig.mapInfoWindow || {};
            return {
                link: function(scope, elm, attrs) {
                    var opts = angular.extend({}, options, scope.$eval(attrs.uiOptions));
                    opts.content = elm[0];
                    var model = $parse(attrs.uiMapInfoWindow),
                        infoWindow = model(scope);
                    infoWindow || (infoWindow = new google.maps.InfoWindow(opts), model.assign(scope, infoWindow)), bindMapEvents(scope, infoWindowEvents, infoWindow, elm), elm.replaceWith("<div></div>");
                    var _open = infoWindow.open;
                    infoWindow.open = function(a1, a2, a3, a4, a5, a6) {
                        $compile(elm.contents())(scope), _open.call(infoWindow, a1, a2, a3, a4, a5, a6)
                    }
                }
            }
        }]), mapOverlayDirective("uiMapMarker", "animation_changed click clickable_changed cursor_changed dblclick drag dragend draggable_changed dragstart flat_changed icon_changed mousedown mouseout mouseover mouseup position_changed rightclick shadow_changed shape_changed title_changed visible_changed zindex_changed"), mapOverlayDirective("uiMapPolyline", "click dblclick mousedown mousemove mouseout mouseover mouseup rightclick"), mapOverlayDirective("uiMapPolygon", "click dblclick mousedown mousemove mouseout mouseover mouseup rightclick"), mapOverlayDirective("uiMapRectangle", "bounds_changed click dblclick mousedown mousemove mouseout mouseover mouseup rightclick"), mapOverlayDirective("uiMapCircle", "center_changed click dblclick mousedown mousemove mouseout mouseover mouseup radius_changed rightclick"), mapOverlayDirective("uiMapGroundOverlay", "click dblclick")
    }(), angular.module("ui.directives").directive("uiMask", [function() {
        return {
            require: "ngModel",
            link: function($scope, element, attrs, controller) {
                controller.$render = function() {
                    var value = controller.$viewValue || "";
                    element.val(value), element.mask($scope.$eval(attrs.uiMask))
                }, controller.$parsers.push(function(value) {
                    var isValid = element.isMaskValid() || angular.isUndefined(element.isMaskValid()) && element.val().length > 0;
                    return controller.$setValidity("mask", isValid), isValid ? value : void 0
                }), element.bind("keyup", function() {
                    $scope.$apply(function() {
                        controller.$setViewValue(element.mask())
                    })
                })
            }
        }
    }]), angular.module("ui.directives").directive("uiReset", ["ui.config", function(uiConfig) {
        var resetValue = null;
        return void 0 !== uiConfig.reset && (resetValue = uiConfig.reset), {
            require: "ngModel",
            link: function(scope, elm, attrs, ctrl) {
                var aElement;
                aElement = angular.element('<a class="ui-reset" />'), elm.wrap('<span class="ui-resetwrap" />').after(aElement), aElement.bind("click", function(e) {
                    e.preventDefault(), scope.$apply(function() {
                        ctrl.$setViewValue(attrs.uiReset ? scope.$eval(attrs.uiReset) : resetValue), ctrl.$render()
                    })
                })
            }
        }
    }]), angular.module("ui.directives").directive("uiRoute", ["$location", "$parse", function($location, $parse) {
        return {
            restrict: "AC",
            compile: function(tElement, tAttrs) {
                var useProperty;
                if (tAttrs.uiRoute) useProperty = "uiRoute";
                else if (tAttrs.ngHref) useProperty = "ngHref";
                else {
                    if (!tAttrs.href) throw new Error("uiRoute missing a route or href property on " + tElement[0]);
                    useProperty = "href"
                }
                return function($scope, elm, attrs) {
                    function staticWatcher(newVal) {
                        (hash = newVal.indexOf("#")) > -1 && (newVal = newVal.substr(hash + 1)), (watcher = function() {
                            modelSetter($scope, $location.path().indexOf(newVal) > -1)
                        })()
                    }

                    function regexWatcher(newVal) {
                        (hash = newVal.indexOf("#")) > -1 && (newVal = newVal.substr(hash + 1)), (watcher = function() {
                            var regexp = new RegExp("^" + newVal + "$", ["i"]);
                            modelSetter($scope, regexp.test($location.path()))
                        })()
                    }
                    var modelSetter = $parse(attrs.ngModel || attrs.routeModel || "$uiRoute").assign,
                        watcher = angular.noop;
                    switch (useProperty) {
                        case "uiRoute":
                            attrs.uiRoute ? regexWatcher(attrs.uiRoute) : attrs.$observe("uiRoute", regexWatcher);
                            break;
                        case "ngHref":
                            attrs.ngHref ? staticWatcher(attrs.ngHref) : attrs.$observe("ngHref", staticWatcher);
                            break;
                        case "href":
                            staticWatcher(attrs.href)
                    }
                    $scope.$on("$routeChangeSuccess", function() {
                        watcher()
                    })
                }
            }
        }
    }]), angular.module("ui.directives").directive("uiScrollfix", ["$window", function($window) {
        "use strict";
        return {
            link: function(scope, elm, attrs) {
                var top = elm.offset().top;
                attrs.uiScrollfix ? "-" === attrs.uiScrollfix.charAt(0) ? attrs.uiScrollfix = top - attrs.uiScrollfix.substr(1) : "+" === attrs.uiScrollfix.charAt(0) && (attrs.uiScrollfix = top + parseFloat(attrs.uiScrollfix.substr(1))) : attrs.uiScrollfix = top, angular.element($window).on("scroll.ui-scrollfix", function() {
                    var offset;
                    if (angular.isDefined($window.pageYOffset)) offset = $window.pageYOffset;
                    else {
                        var iebody = document.compatMode && "BackCompat" !== document.compatMode ? document.documentElement : document.body;
                        offset = iebody.scrollTop
                    }!elm.hasClass("ui-scrollfix") && offset > attrs.uiScrollfix ? elm.addClass("ui-scrollfix") : elm.hasClass("ui-scrollfix") && offset < attrs.uiScrollfix && elm.removeClass("ui-scrollfix")
                })
            }
        }
    }]), angular.module("ui.directives").directive("uiSelect2", ["ui.config", "$timeout", function(uiConfig, $timeout) {
        var options = {};
        uiConfig.select2 && angular.extend(options, uiConfig.select2);
        return {
            require: "?ngModel",
            restrict: "A",
            compile: function(tElm, tAttrs) {
                var watch, repeatOption, repeatAttr, isSelect = tElm.is("select"),
                    isMultiple = void 0 !== tAttrs.multiple;
                return tElm.is("select") && (repeatOption = tElm.find("option[ng-repeat], option[data-ng-repeat]"), repeatOption.length && (repeatAttr = repeatOption.attr("ng-repeat") || repeatOption.attr("data-ng-repeat"), watch = jQuery.trim(repeatAttr.split("|")[0]).split(" ").pop())),
                    function(scope, elm, attrs, controller) {
                        var opts = angular.extend({}, options, scope.$eval(attrs.uiSelect2));
                        if (isSelect ? (delete opts.multiple, delete opts.initSelection) : isMultiple && (opts.multiple = !0), controller && (controller.$render = function() {
                                isSelect ? elm.select2("val", controller.$modelValue) : isMultiple ? controller.$modelValue ? angular.isArray(controller.$modelValue) ? elm.select2("data", controller.$modelValue) : elm.select2("val", controller.$modelValue) : elm.select2("data", []) : angular.isObject(controller.$modelValue) ? elm.select2("data", controller.$modelValue) : elm.select2("val", controller.$modelValue)
                            }, watch && scope.$watch(watch, function(newVal) {
                                newVal && $timeout(function() {
                                    elm.select2("val", controller.$viewValue), elm.trigger("change")
                                })
                            }), !isSelect && (elm.bind("change", function() {
                                scope.$apply(function() {
                                    controller.$setViewValue(elm.select2("data"))
                                })
                            }), opts.initSelection))) {
                            var initSelection = opts.initSelection;
                            opts.initSelection = function(element, callback) {
                                initSelection(element, function(value) {
                                    controller.$setViewValue(value), callback(value)
                                })
                            }
                        }
                        attrs.$observe("disabled", function(value) {
                            elm.select2(value && "disable" || "enable")
                        }), attrs.ngMultiple && scope.$watch(attrs.ngMultiple, function() {
                            elm.select2(opts)
                        }), elm.val(scope.$eval(attrs.ngModel)), $timeout(function() {
                            elm.select2(opts), opts.initSelection || isSelect || controller.$setViewValue(elm.select2("data"))
                        })
                    }
            }
        }
    }]), angular.module("ui.directives").directive("uiShow", [function() {
        return function(scope, elm, attrs) {
            scope.$watch(attrs.uiShow, function(newVal) {
                newVal ? elm.addClass("ui-show") : elm.removeClass("ui-show")
            })
        }
    }]).directive("uiHide", [function() {
        return function(scope, elm, attrs) {
            scope.$watch(attrs.uiHide, function(newVal) {
                newVal ? elm.addClass("ui-hide") : elm.removeClass("ui-hide")
            })
        }
    }]).directive("uiToggle", [function() {
        return function(scope, elm, attrs) {
            scope.$watch(attrs.uiToggle, function(newVal) {
                newVal ? elm.removeClass("ui-hide").addClass("ui-show") : elm.removeClass("ui-show").addClass("ui-hide")
            })
        }
    }]), angular.module("ui.directives").directive("uiSortable", ["ui.config", function(uiConfig) {
        return {
            require: "?ngModel",
            link: function(scope, element, attrs, ngModel) {
                var onReceive, onRemove, onStart, onUpdate, opts, _receive, _remove, _start, _update;
                opts = angular.extend({}, uiConfig.sortable, scope.$eval(attrs.uiSortable)), ngModel && (ngModel.$render = function() {
                    element.sortable("refresh")
                }, onStart = function(e, ui) {
                    ui.item.sortable = {
                        index: ui.item.index()
                    }
                }, onUpdate = function(e, ui) {
                    ui.item.sortable.resort = ngModel
                }, onReceive = function(e, ui) {
                    ui.item.sortable.relocate = !0, ngModel.$modelValue.splice(ui.item.index(), 0, ui.item.sortable.moved)
                }, onRemove = function(e, ui) {
                    ui.item.sortable.moved = 1 === ngModel.$modelValue.length ? ngModel.$modelValue.splice(0, 1)[0] : ngModel.$modelValue.splice(ui.item.sortable.index, 1)[0]
                }, onStop = function(e, ui) {
                    if (ui.item.sortable.resort && !ui.item.sortable.relocate) {
                        var end, start;
                        start = ui.item.sortable.index, end = ui.item.index(), end > start && end--, ui.item.sortable.resort.$modelValue.splice(end, 0, ui.item.sortable.resort.$modelValue.splice(start, 1)[0])
                    }(ui.item.sortable.resort || ui.item.sortable.relocate) && scope.$apply()
                }, _start = opts.start, opts.start = function(e, ui) {
                    onStart(e, ui), "function" == typeof _start && _start(e, ui)
                }, _stop = opts.stop, opts.stop = function(e, ui) {
                    onStop(e, ui), "function" == typeof _stop && _stop(e, ui)
                }, _update = opts.update, opts.update = function(e, ui) {
                    onUpdate(e, ui), "function" == typeof _update && _update(e, ui)
                }, _receive = opts.receive, opts.receive = function(e, ui) {
                    onReceive(e, ui), "function" == typeof _receive && _receive(e, ui)
                }, _remove = opts.remove, opts.remove = function(e, ui) {
                    onRemove(e, ui), "function" == typeof _remove && _remove(e, ui)
                }), element.sortable(opts)
            }
        }
    }]), angular.module("ui.directives").directive("uiTinymce", ["ui.config", function(uiConfig) {
        return uiConfig.tinymce = uiConfig.tinymce || {}, {
            require: "ngModel",
            link: function(scope, elm, attrs, ngModel) {
                var expression, options = {
                    onchange_callback: function(inst) {
                        inst.isDirty() && (inst.save(), ngModel.$setViewValue(elm.val()), scope.$$phase || scope.$apply())
                    },
                    handle_event_callback: function() {
                        return this.isDirty() && (this.save(), ngModel.$setViewValue(elm.val()), scope.$$phase || scope.$apply()), !0
                    },
                    setup: function(ed) {
                        ed.onSetContent.add(function(ed) {
                            ed.isDirty() && (ed.save(), ngModel.$setViewValue(elm.val()), scope.$$phase || scope.$apply())
                        })
                    }
                };
                expression = attrs.uiTinymce ? scope.$eval(attrs.uiTinymce) : {}, angular.extend(options, uiConfig.tinymce, expression), setTimeout(function() {
                    elm.tinymce(options)
                })
            }
        }
    }]), angular.module("ui.directives").directive("uiValidate", function() {
        return {
            restrict: "A",
            require: "ngModel",
            link: function(scope, elm, attrs, ctrl) {
                var validateFn, watch, validators = {},
                    validateExpr = scope.$eval(attrs.uiValidate);
                validateExpr && (angular.isString(validateExpr) && (validateExpr = {
                    validator: validateExpr
                }), angular.forEach(validateExpr, function(expression, key) {
                    validateFn = function(valueToValidate) {
                        return scope.$eval(expression, {
                            $value: valueToValidate
                        }) ? (ctrl.$setValidity(key, !0), valueToValidate) : void ctrl.$setValidity(key, !1)
                    }, validators[key] = validateFn, ctrl.$formatters.push(validateFn), ctrl.$parsers.push(validateFn)
                }), attrs.uiValidateWatch && (watch = scope.$eval(attrs.uiValidateWatch), angular.isString(watch) ? scope.$watch(watch, function() {
                    angular.forEach(validators, function(validatorFn) {
                        validatorFn(ctrl.$modelValue)
                    })
                }) : angular.forEach(watch, function(expression, key) {
                    scope.$watch(expression, function() {
                        validators[key](ctrl.$modelValue)
                    })
                })))
            }
        }
    }), angular.module("ui.filters").filter("format", function() {
        return function(value, replace) {
            if (!value) return value;
            var token, target = value.toString();
            return void 0 === replace ? target : angular.isArray(replace) || angular.isObject(replace) ? (token = angular.isArray(replace) && "$" || ":", angular.forEach(replace, function(value, key) {
                target = target.split(token + key).join(value)
            }), target) : target.split("$0").join(replace)
        }
    }), angular.module("ui.filters").filter("highlight", function() {
        return function(text, search, caseSensitive) {
            return search || angular.isNumber(search) ? (text = text.toString(), search = search.toString(), caseSensitive ? text.split(search).join('<span class="ui-match">' + search + "</span>") : text.replace(new RegExp(search, "gi"), '<span class="ui-match">$&</span>')) : text
        }
    }), angular.module("ui.filters").filter("inflector", function() {
        function ucwords(text) {
            return text.replace(/^([a-z])|\s+([a-z])/g, function($1) {
                return $1.toUpperCase()
            })
        }

        function breakup(text, separator) {
            return text.replace(/[A-Z]/g, function(match) {
                return separator + match
            })
        }
        var inflectors = {
            humanize: function(value) {
                return ucwords(breakup(value, " ").split("_").join(" "))
            },
            underscore: function(value) {
                return value.substr(0, 1).toLowerCase() + breakup(value.substr(1), "_").toLowerCase().split(" ").join("_")
            },
            variable: function(value) {
                return value = value.substr(0, 1).toLowerCase() + ucwords(value.split("_").join(" ")).substr(1).split(" ").join("")
            }
        };
        return function(text, inflector) {
            return inflector !== !1 && angular.isString(text) ? (inflector = inflector || "humanize", inflectors[inflector](text)) : text
        }
    }), angular.module("ui.filters").filter("unique", function() {
        return function(items, filterOn) {
            if (filterOn === !1) return items;
            if ((filterOn || angular.isUndefined(filterOn)) && angular.isArray(items)) {
                var newItems = [],
                    extractValueToCompare = function(item) {
                        return angular.isObject(item) && angular.isString(filterOn) ? item[filterOn] : item
                    };
                angular.forEach(items, function(item) {
                    for (var isDuplicate = !1, i = 0; i < newItems.length; i++)
                        if (angular.equals(extractValueToCompare(newItems[i]), extractValueToCompare(item))) {
                            isDuplicate = !0;
                            break
                        }
                    isDuplicate || newItems.push(item)
                }), items = newItems
            }
            return items
        }
    }), angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.transition", "ui.bootstrap.collapse", "ui.bootstrap.accordion", "ui.bootstrap.alert", "ui.bootstrap.buttons", "ui.bootstrap.carousel", "ui.bootstrap.position", "ui.bootstrap.datepicker", "ui.bootstrap.dialog", "ui.bootstrap.dropdownToggle", "ui.bootstrap.modal", "ui.bootstrap.pagination", "ui.bootstrap.tooltip", "ui.bootstrap.popover", "ui.bootstrap.progressbar", "ui.bootstrap.rating", "ui.bootstrap.tabs", "ui.bootstrap.timepicker", "ui.bootstrap.typeahead"]), angular.module("ui.bootstrap.tpls", ["template/accordion/accordion-group.html", "template/accordion/accordion.html", "template/alert/alert.html", "template/carousel/carousel.html", "template/carousel/slide.html", "template/datepicker/datepicker.html", "template/datepicker/popup.html", "template/dialog/message.html", "template/pagination/pager.html", "template/pagination/pagination.html", "template/tooltip/tooltip-html-unsafe-popup.html", "template/tooltip/tooltip-popup.html", "template/popover/popover.html", "template/progressbar/bar.html", "template/progressbar/progress.html", "template/rating/rating.html", "template/tabs/tab.html", "template/tabs/tabset-titles.html", "template/tabs/tabset.html", "template/timepicker/timepicker.html", "template/typeahead/typeahead-match.html", "template/typeahead/typeahead-popup.html"]), angular.module("ui.bootstrap.transition", []).factory("$transition", ["$q", "$timeout", "$rootScope", function($q, $timeout, $rootScope) {
        function findEndEventName(endEventNames) {
            for (var name in endEventNames)
                if (void 0 !== transElement.style[name]) return endEventNames[name]
        }
        var $transition = function(element, trigger, options) {
                options = options || {};
                var deferred = $q.defer(),
                    endEventName = $transition[options.animation ? "animationEndEventName" : "transitionEndEventName"],
                    transitionEndHandler = function() {
                        $rootScope.$apply(function() {
                            element.unbind(endEventName, transitionEndHandler), deferred.resolve(element)
                        })
                    };
                return endEventName && element.bind(endEventName, transitionEndHandler), $timeout(function() {
                    angular.isString(trigger) ? element.addClass(trigger) : angular.isFunction(trigger) ? trigger(element) : angular.isObject(trigger) && element.css(trigger), endEventName || deferred.resolve(element)
                }), deferred.promise.cancel = function() {
                    endEventName && element.unbind(endEventName, transitionEndHandler), deferred.reject("Transition cancelled")
                }, deferred.promise
            },
            transElement = document.createElement("trans"),
            transitionEndEventNames = {
                WebkitTransition: "webkitTransitionEnd",
                MozTransition: "transitionend",
                OTransition: "oTransitionEnd",
                transition: "transitionend"
            },
            animationEndEventNames = {
                WebkitTransition: "webkitAnimationEnd",
                MozTransition: "animationend",
                OTransition: "oAnimationEnd",
                transition: "animationend"
            };
        return $transition.transitionEndEventName = findEndEventName(transitionEndEventNames), $transition.animationEndEventName = findEndEventName(animationEndEventNames), $transition
    }]), angular.module("ui.bootstrap.collapse", ["ui.bootstrap.transition"]).directive("collapse", ["$transition", function($transition) {
        var fixUpHeight = function(scope, element, height) {
            element.removeClass("collapse"), element.css({
                height: height
            });
            element[0].offsetWidth;
            element.addClass("collapse")
        };
        return {
            link: function(scope, element, attrs) {
                var isCollapsed, initialAnimSkip = !0;
                scope.$watch(function() {
                    return element[0].scrollHeight
                }, function() {
                    0 !== element[0].scrollHeight && (isCollapsed || (initialAnimSkip ? fixUpHeight(scope, element, element[0].scrollHeight + "px") : fixUpHeight(scope, element, "auto")))
                }), scope.$watch(attrs.collapse, function(value) {
                    value ? collapse() : expand()
                });
                var currentTransition, doTransition = function(change) {
                        return currentTransition && currentTransition.cancel(), currentTransition = $transition(element, change), currentTransition.then(function() {
                            currentTransition = void 0
                        }, function() {
                            currentTransition = void 0
                        }), currentTransition
                    },
                    expand = function() {
                        initialAnimSkip ? (initialAnimSkip = !1, isCollapsed || fixUpHeight(scope, element, "auto")) : doTransition({
                            height: element[0].scrollHeight + "px"
                        }).then(function() {
                            isCollapsed || fixUpHeight(scope, element, "auto")
                        }), isCollapsed = !1
                    },
                    collapse = function() {
                        isCollapsed = !0, initialAnimSkip ? (initialAnimSkip = !1, fixUpHeight(scope, element, 0)) : (fixUpHeight(scope, element, element[0].scrollHeight + "px"), doTransition({
                            height: "0"
                        }))
                    }
            }
        }
    }]), angular.module("ui.bootstrap.accordion", ["ui.bootstrap.collapse"]).constant("accordionConfig", {
        closeOthers: !0
    }).controller("AccordionController", ["$scope", "$attrs", "accordionConfig", function($scope, $attrs, accordionConfig) {
        this.groups = [], this.closeOthers = function(openGroup) {
            var closeOthers = angular.isDefined($attrs.closeOthers) ? $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;
            closeOthers && angular.forEach(this.groups, function(group) {
                group !== openGroup && (group.isOpen = !1)
            })
        }, this.addGroup = function(groupScope) {
            var that = this;
            this.groups.push(groupScope), groupScope.$on("$destroy", function() {
                that.removeGroup(groupScope)
            })
        }, this.removeGroup = function(group) {
            var index = this.groups.indexOf(group); - 1 !== index && this.groups.splice(this.groups.indexOf(group), 1)
        }
    }]).directive("accordion", function() {
        return {
            restrict: "EA",
            controller: "AccordionController",
            transclude: !0,
            replace: !1,
            templateUrl: "template/accordion/accordion.html"
        }
    }).directive("accordionGroup", ["$parse", "$transition", "$timeout", function($parse) {
        return {
            require: "^accordion",
            restrict: "EA",
            transclude: !0,
            replace: !0,
            templateUrl: "template/accordion/accordion-group.html",
            scope: {
                heading: "@"
            },
            controller: ["$scope", function() {
                this.setHeading = function(element) {
                    this.heading = element
                }
            }],
            link: function(scope, element, attrs, accordionCtrl) {
                var getIsOpen, setIsOpen;
                accordionCtrl.addGroup(scope), scope.isOpen = !1, attrs.isOpen && (getIsOpen = $parse(attrs.isOpen), setIsOpen = getIsOpen.assign, scope.$watch(function() {
                    return getIsOpen(scope.$parent)
                }, function(value) {
                    scope.isOpen = value
                }), scope.isOpen = getIsOpen ? getIsOpen(scope.$parent) : !1), scope.$watch("isOpen", function(value) {
                    value && accordionCtrl.closeOthers(scope), setIsOpen && setIsOpen(scope.$parent, value)
                })
            }
        }
    }]).directive("accordionHeading", function() {
        return {
            restrict: "EA",
            transclude: !0,
            template: "",
            replace: !0,
            require: "^accordionGroup",
            compile: function(element, attr, transclude) {
                return function(scope, element, attr, accordionGroupCtrl) {
                    accordionGroupCtrl.setHeading(transclude(scope, function() {}))
                }
            }
        }
    }).directive("accordionTransclude", function() {
        return {
            require: "^accordionGroup",
            link: function(scope, element, attr, controller) {
                scope.$watch(function() {
                    return controller[attr.accordionTransclude]
                }, function(heading) {
                    heading && (element.html(""), element.append(heading))
                })
            }
        }
    }), angular.module("ui.bootstrap.alert", []).directive("alert", function() {
        return {
            restrict: "EA",
            templateUrl: "template/alert/alert.html",
            transclude: !0,
            replace: !0,
            scope: {
                type: "=",
                close: "&"
            },
            link: function(scope, iElement, iAttrs) {
                scope.closeable = "close" in iAttrs
            }
        }
    }), angular.module("ui.bootstrap.buttons", []).constant("buttonConfig", {
        activeClass: "active",
        toggleEvent: "click"
    }).directive("btnRadio", ["buttonConfig", function(buttonConfig) {
        var activeClass = buttonConfig.activeClass || "active",
            toggleEvent = buttonConfig.toggleEvent || "click";
        return {
            require: "ngModel",
            link: function(scope, element, attrs, ngModelCtrl) {
                ngModelCtrl.$render = function() {
                    element.toggleClass(activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)))
                }, element.bind(toggleEvent, function() {
                    element.hasClass(activeClass) || scope.$apply(function() {
                        ngModelCtrl.$setViewValue(scope.$eval(attrs.btnRadio)), ngModelCtrl.$render()
                    })
                })
            }
        }
    }]).directive("btnCheckbox", ["buttonConfig", function(buttonConfig) {
        var activeClass = buttonConfig.activeClass || "active",
            toggleEvent = buttonConfig.toggleEvent || "click";
        return {
            require: "ngModel",
            link: function(scope, element, attrs, ngModelCtrl) {
                function getTrueValue() {
                    var trueValue = scope.$eval(attrs.btnCheckboxTrue);
                    return angular.isDefined(trueValue) ? trueValue : !0
                }

                function getFalseValue() {
                    var falseValue = scope.$eval(attrs.btnCheckboxFalse);
                    return angular.isDefined(falseValue) ? falseValue : !1
                }
                ngModelCtrl.$render = function() {
                    element.toggleClass(activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()))
                }, element.bind(toggleEvent, function() {
                    scope.$apply(function() {
                        ngModelCtrl.$setViewValue(element.hasClass(activeClass) ? getFalseValue() : getTrueValue()), ngModelCtrl.$render()
                    })
                })
            }
        }
    }]), angular.module("ui.bootstrap.carousel", ["ui.bootstrap.transition"]).controller("CarouselController", ["$scope", "$timeout", "$transition", "$q", function($scope, $timeout, $transition) {
        function restartTimer() {
            function go() {
                isPlaying ? ($scope.next(), restartTimer()) : $scope.pause()
            }
            currentTimeout && $timeout.cancel(currentTimeout);
            var interval = +$scope.interval;
            !isNaN(interval) && interval >= 0 && (currentTimeout = $timeout(go, interval))
        }
        var currentTimeout, isPlaying, self = this,
            slides = self.slides = [],
            currentIndex = -1;
        self.currentSlide = null, self.select = function(nextSlide, direction) {
            function goNext() {
                self.currentSlide && angular.isString(direction) && !$scope.noTransition && nextSlide.$element ? (nextSlide.$element.addClass(direction), nextSlide.$element[0].offsetWidth = nextSlide.$element[0].offsetWidth, angular.forEach(slides, function(slide) {
                    angular.extend(slide, {
                        direction: "",
                        entering: !1,
                        leaving: !1,
                        active: !1
                    })
                }), angular.extend(nextSlide, {
                    direction: direction,
                    active: !0,
                    entering: !0
                }), angular.extend(self.currentSlide || {}, {
                    direction: direction,
                    leaving: !0
                }), $scope.$currentTransition = $transition(nextSlide.$element, {}), function(next, current) {
                    $scope.$currentTransition.then(function() {
                        transitionDone(next, current)
                    }, function() {
                        transitionDone(next, current)
                    })
                }(nextSlide, self.currentSlide)) : transitionDone(nextSlide, self.currentSlide), self.currentSlide = nextSlide, currentIndex = nextIndex, restartTimer()
            }

            function transitionDone(next, current) {
                angular.extend(next, {
                    direction: "",
                    active: !0,
                    leaving: !1,
                    entering: !1
                }), angular.extend(current || {}, {
                    direction: "",
                    active: !1,
                    leaving: !1,
                    entering: !1
                }), $scope.$currentTransition = null
            }
            var nextIndex = slides.indexOf(nextSlide);
            void 0 === direction && (direction = nextIndex > currentIndex ? "next" : "prev"), nextSlide && nextSlide !== self.currentSlide && ($scope.$currentTransition ? ($scope.$currentTransition.cancel(), $timeout(goNext)) : goNext())
        }, self.indexOfSlide = function(slide) {
            return slides.indexOf(slide)
        }, $scope.next = function() {
            var newIndex = (currentIndex + 1) % slides.length;
            return $scope.$currentTransition ? void 0 : self.select(slides[newIndex], "next")
        }, $scope.prev = function() {
            var newIndex = 0 > currentIndex - 1 ? slides.length - 1 : currentIndex - 1;
            return $scope.$currentTransition ? void 0 : self.select(slides[newIndex], "prev")
        }, $scope.select = function(slide) {
            self.select(slide)
        }, $scope.isActive = function(slide) {
            return self.currentSlide === slide
        }, $scope.slides = function() {
            return slides
        }, $scope.$watch("interval", restartTimer), $scope.play = function() {
            isPlaying || (isPlaying = !0, restartTimer())
        }, $scope.pause = function() {
            $scope.noPause || (isPlaying = !1, currentTimeout && $timeout.cancel(currentTimeout))
        }, self.addSlide = function(slide, element) {
            slide.$element = element, slides.push(slide), 1 === slides.length || slide.active ? (self.select(slides[slides.length - 1]), 1 == slides.length && $scope.play()) : slide.active = !1
        }, self.removeSlide = function(slide) {
            var index = slides.indexOf(slide);
            slides.splice(index, 1), slides.length > 0 && slide.active ? self.select(index >= slides.length ? slides[index - 1] : slides[index]) : currentIndex > index && currentIndex--
        }
    }]).directive("carousel", [function() {
        return {
            restrict: "EA",
            transclude: !0,
            replace: !0,
            controller: "CarouselController",
            require: "carousel",
            templateUrl: "template/carousel/carousel.html",
            scope: {
                interval: "=",
                noTransition: "=",
                noPause: "="
            }
        }
    }]).directive("slide", ["$parse", function($parse) {
        return {
            require: "^carousel",
            restrict: "EA",
            transclude: !0,
            replace: !0,
            templateUrl: "template/carousel/slide.html",
            scope: {},
            link: function(scope, element, attrs, carouselCtrl) {
                if (attrs.active) {
                    var getActive = $parse(attrs.active),
                        setActive = getActive.assign,
                        lastValue = scope.active = getActive(scope.$parent);
                    scope.$watch(function() {
                        var parentActive = getActive(scope.$parent);
                        return parentActive !== scope.active && (parentActive !== lastValue ? lastValue = scope.active = parentActive : setActive(scope.$parent, parentActive = lastValue = scope.active)), parentActive
                    })
                }
                carouselCtrl.addSlide(scope, element), scope.$on("$destroy", function() {
                    carouselCtrl.removeSlide(scope)
                }), scope.$watch("active", function(active) {
                    active && carouselCtrl.select(scope)
                })
            }
        }
    }]), angular.module("ui.bootstrap.position", []).factory("$position", ["$document", "$window", function($document, $window) {
        function getStyle(el, cssprop) {
            return el.currentStyle ? el.currentStyle[cssprop] : $window.getComputedStyle ? $window.getComputedStyle(el)[cssprop] : el.style[cssprop]
        }

        function isStaticPositioned(element) {
            return "static" === (getStyle(element, "position") || "static")
        }
        var mouseX, mouseY;
        $document.bind("mousemove", function(event) {
            mouseX = event.pageX, mouseY = event.pageY
        });
        var parentOffsetEl = function(element) {
            for (var docDomEl = $document[0], offsetParent = element.offsetParent || docDomEl; offsetParent && offsetParent !== docDomEl && isStaticPositioned(offsetParent);) offsetParent = offsetParent.offsetParent;
            return offsetParent || docDomEl
        };
        return {
            position: function(element) {
                var elBCR = this.offset(element),
                    offsetParentBCR = {
                        top: 0,
                        left: 0
                    },
                    offsetParentEl = parentOffsetEl(element[0]);
                return offsetParentEl != $document[0] && (offsetParentBCR = this.offset(angular.element(offsetParentEl)), offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop, offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft), {
                    width: element.prop("offsetWidth"),
                    height: element.prop("offsetHeight"),
                    top: elBCR.top - offsetParentBCR.top,
                    left: elBCR.left - offsetParentBCR.left
                }
            },
            offset: function(element) {
                var boundingClientRect = element[0].getBoundingClientRect();
                return {
                    width: element.prop("offsetWidth"),
                    height: element.prop("offsetHeight"),
                    top: boundingClientRect.top + ($window.pageYOffset || $document[0].body.scrollTop),
                    left: boundingClientRect.left + ($window.pageXOffset || $document[0].body.scrollLeft)
                }
            },
            mouse: function() {
                return {
                    x: mouseX,
                    y: mouseY
                }
            }
        }
    }]), angular.module("ui.bootstrap.datepicker", ["ui.bootstrap.position"]).constant("datepickerConfig", {
        dayFormat: "dd",
        monthFormat: "MMMM",
        yearFormat: "yyyy",
        dayHeaderFormat: "EEE",
        dayTitleFormat: "MMMM yyyy",
        monthTitleFormat: "yyyy",
        showWeeks: !0,
        startingDay: 0,
        yearRange: 20,
        minDate: null,
        maxDate: null
    }).controller("DatepickerController", ["$scope", "$attrs", "dateFilter", "datepickerConfig", function($scope, $attrs, dateFilter, dtConfig) {
        function getValue(value, defaultValue) {
            return angular.isDefined(value) ? $scope.$parent.$eval(value) : defaultValue
        }

        function getDaysInMonth(year, month) {
            return new Date(year, month, 0).getDate()
        }

        function getDates(startDate, n) {
            for (var dates = new Array(n), current = startDate, i = 0; n > i;) dates[i++] = new Date(current), current.setDate(current.getDate() + 1);
            return dates
        }

        function makeDate(date, format, isSelected, isSecondary) {
            return {
                date: date,
                label: dateFilter(date, format),
                selected: !!isSelected,
                secondary: !!isSecondary
            }
        }
        var format = {
                day: getValue($attrs.dayFormat, dtConfig.dayFormat),
                month: getValue($attrs.monthFormat, dtConfig.monthFormat),
                year: getValue($attrs.yearFormat, dtConfig.yearFormat),
                dayHeader: getValue($attrs.dayHeaderFormat, dtConfig.dayHeaderFormat),
                dayTitle: getValue($attrs.dayTitleFormat, dtConfig.dayTitleFormat),
                monthTitle: getValue($attrs.monthTitleFormat, dtConfig.monthTitleFormat)
            },
            startingDay = getValue($attrs.startingDay, dtConfig.startingDay),
            yearRange = getValue($attrs.yearRange, dtConfig.yearRange);
        this.minDate = dtConfig.minDate ? new Date(dtConfig.minDate) : null, this.maxDate = dtConfig.maxDate ? new Date(dtConfig.maxDate) : null, this.modes = [{
            name: "day",
            getVisibleDates: function(date, selected) {
                var year = date.getFullYear(),
                    month = date.getMonth(),
                    firstDayOfMonth = new Date(year, month, 1),
                    difference = startingDay - firstDayOfMonth.getDay(),
                    numDisplayedFromPreviousMonth = difference > 0 ? 7 - difference : -difference,
                    firstDate = new Date(firstDayOfMonth),
                    numDates = 0;
                numDisplayedFromPreviousMonth > 0 && (firstDate.setDate(-numDisplayedFromPreviousMonth + 1), numDates += numDisplayedFromPreviousMonth), numDates += getDaysInMonth(year, month + 1), numDates += (7 - numDates % 7) % 7;
                for (var days = getDates(firstDate, numDates), labels = new Array(7), i = 0; numDates > i; i++) {
                    var dt = new Date(days[i]);
                    days[i] = makeDate(dt, format.day, selected && selected.getDate() === dt.getDate() && selected.getMonth() === dt.getMonth() && selected.getFullYear() === dt.getFullYear(), dt.getMonth() !== month)
                }
                for (var j = 0; 7 > j; j++) labels[j] = dateFilter(days[j].date, format.dayHeader);
                return {
                    objects: days,
                    title: dateFilter(date, format.dayTitle),
                    labels: labels
                }
            },
            compare: function(date1, date2) {
                return new Date(date1.getFullYear(), date1.getMonth(), date1.getDate()) - new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())
            },
            split: 7,
            step: {
                months: 1
            }
        }, {
            name: "month",
            getVisibleDates: function(date, selected) {
                for (var months = new Array(12), year = date.getFullYear(), i = 0; 12 > i; i++) {
                    var dt = new Date(year, i, 1);
                    months[i] = makeDate(dt, format.month, selected && selected.getMonth() === i && selected.getFullYear() === year)
                }
                return {
                    objects: months,
                    title: dateFilter(date, format.monthTitle)
                }
            },
            compare: function(date1, date2) {
                return new Date(date1.getFullYear(), date1.getMonth()) - new Date(date2.getFullYear(), date2.getMonth())
            },
            split: 3,
            step: {
                years: 1
            }
        }, {
            name: "year",
            getVisibleDates: function(date, selected) {
                for (var years = new Array(yearRange), year = date.getFullYear(), startYear = parseInt((year - 1) / yearRange, 10) * yearRange + 1, i = 0; yearRange > i; i++) {
                    var dt = new Date(startYear + i, 0, 1);
                    years[i] = makeDate(dt, format.year, selected && selected.getFullYear() === dt.getFullYear())
                }
                return {
                    objects: years,
                    title: [years[0].label, years[yearRange - 1].label].join(" - ")
                }
            },
            compare: function(date1, date2) {
                return date1.getFullYear() - date2.getFullYear()
            },
            split: 5,
            step: {
                years: yearRange
            }
        }], this.isDisabled = function(date, mode) {
            var currentMode = this.modes[mode || 0];
            return this.minDate && currentMode.compare(date, this.minDate) < 0 || this.maxDate && currentMode.compare(date, this.maxDate) > 0 || $scope.dateDisabled && $scope.dateDisabled({
                date: date,
                mode: currentMode.name
            })
        }
    }]).directive("datepicker", ["dateFilter", "$parse", "datepickerConfig", "$log", function(dateFilter, $parse, datepickerConfig, $log) {
        return {
            restrict: "EA",
            replace: !0,
            templateUrl: "template/datepicker/datepicker.html",
            scope: {
                dateDisabled: "&"
            },
            require: ["datepicker", "?^ngModel"],
            controller: "DatepickerController",
            link: function(scope, element, attrs, ctrls) {
                function updateShowWeekNumbers() {
                    scope.showWeekNumbers = 0 === mode && showWeeks
                }

                function split(arr, size) {
                    for (var arrays = []; arr.length > 0;) arrays.push(arr.splice(0, size));
                    return arrays
                }

                function refill(updateSelected) {
                    var date = null,
                        valid = !0;
                    ngModel.$modelValue && (date = new Date(ngModel.$modelValue), isNaN(date) ? (valid = !1, $log.error('Datepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.')) : updateSelected && (selected = date)), ngModel.$setValidity("date", valid);
                    var currentMode = datepickerCtrl.modes[mode],
                        data = currentMode.getVisibleDates(selected, date);
                    angular.forEach(data.objects, function(obj) {
                        obj.disabled = datepickerCtrl.isDisabled(obj.date, mode)
                    }), ngModel.$setValidity("date-disabled", !date || !datepickerCtrl.isDisabled(date)), scope.rows = split(data.objects, currentMode.split), scope.labels = data.labels || [], scope.title = data.title
                }

                function setMode(value) {
                    mode = value, updateShowWeekNumbers(), refill()
                }

                function getISO8601WeekNumber(date) {
                    var checkDate = new Date(date);
                    checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
                    var time = checkDate.getTime();
                    return checkDate.setMonth(0), checkDate.setDate(1), Math.floor(Math.round((time - checkDate) / 864e5) / 7) + 1
                }
                var datepickerCtrl = ctrls[0],
                    ngModel = ctrls[1];
                if (ngModel) {
                    var mode = 0,
                        selected = new Date,
                        showWeeks = datepickerConfig.showWeeks;
                    attrs.showWeeks ? scope.$parent.$watch($parse(attrs.showWeeks), function(value) {
                        showWeeks = !!value, updateShowWeekNumbers()
                    }) : updateShowWeekNumbers(), attrs.min && scope.$parent.$watch($parse(attrs.min), function(value) {
                        datepickerCtrl.minDate = value ? new Date(value) : null, refill()
                    }), attrs.max && scope.$parent.$watch($parse(attrs.max), function(value) {
                        datepickerCtrl.maxDate = value ? new Date(value) : null, refill()
                    }), ngModel.$render = function() {
                        refill(!0)
                    }, scope.select = function(date) {
                        if (0 === mode) {
                            var dt = new Date(ngModel.$modelValue);
                            dt.setFullYear(date.getFullYear(), date.getMonth(), date.getDate()), ngModel.$setViewValue(dt), refill(!0)
                        } else selected = date, setMode(mode - 1)
                    }, scope.move = function(direction) {
                        var step = datepickerCtrl.modes[mode].step;
                        selected.setMonth(selected.getMonth() + direction * (step.months || 0)), selected.setFullYear(selected.getFullYear() + direction * (step.years || 0)), refill()
                    }, scope.toggleMode = function() {
                        setMode((mode + 1) % datepickerCtrl.modes.length)
                    }, scope.getWeekNumber = function(row) {
                        return 0 === mode && scope.showWeekNumbers && 7 === row.length ? getISO8601WeekNumber(row[0].date) : null
                    }
                }
            }
        }
    }]).constant("datepickerPopupConfig", {
        dateFormat: "yyyy-MM-dd",
        closeOnDateSelection: !0
    }).directive("datepickerPopup", ["$compile", "$parse", "$document", "$position", "dateFilter", "datepickerPopupConfig", function($compile, $parse, $document, $position, dateFilter, datepickerPopupConfig) {
        return {
            restrict: "EA",
            require: "ngModel",
            link: function(originalScope, element, attrs, ngModel) {
                function formatDate(value) {
                    return value ? dateFilter(value, dateFormat) : null
                }

                function parseDate(value) {
                    if (value) {
                        var date = new Date(value);
                        if (!isNaN(date)) return date
                    }
                    return value
                }

                function setOpen(value) {
                    setIsOpen ? setIsOpen(originalScope, !!value) : scope.isOpen = !!value
                }

                function addWatchableAttribute(attribute, scopeProperty, datepickerAttribute) {
                    attribute && (originalScope.$watch($parse(attribute), function(value) {
                        scope[scopeProperty] = value
                    }), datepickerEl.attr(datepickerAttribute || scopeProperty, scopeProperty))
                }

                function updatePosition() {
                    scope.position = $position.position(element), scope.position.top = scope.position.top + element.prop("offsetHeight")
                }
                var closeOnDateSelection = angular.isDefined(attrs.closeOnDateSelection) ? scope.$eval(attrs.closeOnDateSelection) : datepickerPopupConfig.closeOnDateSelection,
                    dateFormat = attrs.datepickerPopup || datepickerPopupConfig.dateFormat,
                    scope = originalScope.$new();
                originalScope.$on("$destroy", function() {
                    scope.$destroy()
                }), ngModel.$formatters.push(formatDate), ngModel.$parsers.push(parseDate);
                var getIsOpen, setIsOpen;
                attrs.open && (getIsOpen = $parse(attrs.open), setIsOpen = getIsOpen.assign, originalScope.$watch(getIsOpen, function(value) {
                    scope.isOpen = !!value
                })), scope.isOpen = getIsOpen ? getIsOpen(originalScope) : !1;
                var documentClickBind = function(event) {
                        scope.isOpen && event.target !== element[0] && scope.$apply(function() {
                            setOpen(!1)
                        })
                    },
                    elementFocusBind = function() {
                        scope.$apply(function() {
                            setOpen(!0)
                        })
                    },
                    popupEl = angular.element("<datepicker-popup-wrap><datepicker></datepicker></datepicker-popup-wrap>");
                popupEl.attr({
                    "ng-model": "date",
                    "ng-change": "dateSelection()"
                });
                var datepickerEl = popupEl.find("datepicker");
                attrs.datepickerOptions && datepickerEl.attr(angular.extend({}, originalScope.$eval(attrs.datepickerOptions)));
                var $setModelValue = $parse(attrs.ngModel).assign;
                scope.dateSelection = function() {
                    $setModelValue(originalScope, scope.date), closeOnDateSelection && setOpen(!1)
                }, scope.$watch(function() {
                    return ngModel.$modelValue
                }, function(value) {
                    if (angular.isString(value)) {
                        var date = parseDate(value);
                        if (value && !date) throw $setModelValue(originalScope, null), new Error(value + " cannot be parsed to a date object.");
                        value = date
                    }
                    scope.date = value, updatePosition()
                }), addWatchableAttribute(attrs.min, "min"), addWatchableAttribute(attrs.max, "max"), attrs.showWeeks ? addWatchableAttribute(attrs.showWeeks, "showWeeks", "show-weeks") : (scope.showWeeks = !0, datepickerEl.attr("show-weeks", "showWeeks")), attrs.dateDisabled && datepickerEl.attr("date-disabled", attrs.dateDisabled), scope.$watch("isOpen", function(value) {
                    value ? (updatePosition(), $document.bind("click", documentClickBind), element.unbind("focus", elementFocusBind), element.focus()) : ($document.unbind("click", documentClickBind), element.bind("focus", elementFocusBind)), setIsOpen && setIsOpen(originalScope, value)
                }), scope.today = function() {
                    $setModelValue(originalScope, new Date)
                }, scope.clear = function() {
                    $setModelValue(originalScope, null)
                }, element.after($compile(popupEl)(scope))
            }
        }
    }]).directive("datepickerPopupWrap", [function() {
        return {
            restrict: "E",
            replace: !0,
            transclude: !0,
            templateUrl: "template/datepicker/popup.html",
            link: function(scope, element) {
                element.bind("click", function(event) {
                    event.preventDefault(), event.stopPropagation()
                })
            }
        }
    }]);
var dialogModule = angular.module("ui.bootstrap.dialog", ["ui.bootstrap.transition"]);
dialogModule.controller("MessageBoxController", ["$scope", "dialog", "model", function($scope, dialog, model) {
        $scope.title = model.title, $scope.message = model.message, $scope.buttons = model.buttons, $scope.close = function(res) {
            dialog.close(res)
        }
    }]), dialogModule.provider("$dialog", function() {
        var defaults = {
                backdrop: !0,
                dialogClass: "modal",
                backdropClass: "modal-backdrop",
                transitionClass: "fade",
                triggerClass: "in",
                resolve: {},
                backdropFade: !1,
                dialogFade: !1,
                keyboard: !0,
                backdropClick: !0
            },
            globalOptions = {},
            activeBackdrops = {
                value: 0
            };
        this.options = function(value) {
            globalOptions = value
        }, this.$get = ["$http", "$document", "$compile", "$rootScope", "$controller", "$templateCache", "$q", "$transition", "$injector", function($http, $document, $compile, $rootScope, $controller, $templateCache, $q, $transition, $injector) {
            function createElement(clazz) {
                var el = angular.element("<div>");
                return el.addClass(clazz), el
            }

            function Dialog(opts) {
                var self = this,
                    options = this.options = angular.extend({}, defaults, globalOptions, opts);
                this._open = !1, this.backdropEl = createElement(options.backdropClass), options.backdropFade && (this.backdropEl.addClass(options.transitionClass), this.backdropEl.removeClass(options.triggerClass)), this.modalEl = createElement(options.dialogClass), options.dialogFade && (this.modalEl.addClass(options.transitionClass), this.modalEl.removeClass(options.triggerClass)), this.handledEscapeKey = function(e) {
                    27 === e.which && (self.close(), e.preventDefault(), self.$scope.$apply())
                }, this.handleBackDropClick = function(e) {
                    self.close(), e.preventDefault(), self.$scope.$apply()
                }
            }
            var body = $document.find("body");
            return Dialog.prototype.isOpen = function() {
                return this._open
            }, Dialog.prototype.open = function(templateUrl, controller) {
                var self = this,
                    options = this.options;
                if (templateUrl && (options.templateUrl = templateUrl), controller && (options.controller = controller), !options.template && !options.templateUrl) throw new Error("Dialog.open expected template or templateUrl, neither found. Use options or open method to specify them.");
                return this._loadResolves().then(function(locals) {
                    var $scope = locals.$scope = self.$scope = locals.$scope ? locals.$scope : $rootScope.$new();
                    if (self.modalEl.html(locals.$template), self.options.controller) {
                        var ctrl = $controller(self.options.controller, locals);
                        self.modalEl.children().data("ngControllerController", ctrl)
                    }
                    $compile(self.modalEl)($scope), self._addElementsToDom(), setTimeout(function() {
                        self.options.dialogFade && self.modalEl.addClass(self.options.triggerClass), self.options.backdropFade && self.backdropEl.addClass(self.options.triggerClass)
                    }), self._bindEvents()
                }), this.deferred = $q.defer(), this.deferred.promise
            }, Dialog.prototype.close = function(result) {
                function removeTriggerClass(el) {
                    el.removeClass(self.options.triggerClass)
                }

                function onCloseComplete() {
                    self._open && self._onCloseComplete(result)
                }
                var self = this,
                    fadingElements = this._getFadingElements();
                if (fadingElements.length > 0)
                    for (var i = fadingElements.length - 1; i >= 0; i--) $transition(fadingElements[i], removeTriggerClass).then(onCloseComplete);
                else this._onCloseComplete(result)
            }, Dialog.prototype._getFadingElements = function() {
                var elements = [];
                return this.options.dialogFade && elements.push(this.modalEl), this.options.backdropFade && elements.push(this.backdropEl), elements
            }, Dialog.prototype._bindEvents = function() {
                this.options.keyboard && body.bind("keydown", this.handledEscapeKey), this.options.backdrop && this.options.backdropClick && this.backdropEl.bind("click", this.handleBackDropClick)
            }, Dialog.prototype._unbindEvents = function() {
                this.options.keyboard && body.unbind("keydown", this.handledEscapeKey), this.options.backdrop && this.options.backdropClick && this.backdropEl.unbind("click", this.handleBackDropClick)
            }, Dialog.prototype._onCloseComplete = function(result) {
                this._removeElementsFromDom(), this._unbindEvents(), this.deferred.resolve(result)
            }, Dialog.prototype._addElementsToDom = function() {
                body.append(this.modalEl), this.options.backdrop && (0 === activeBackdrops.value && body.append(this.backdropEl), activeBackdrops.value++), this._open = !0
            }, Dialog.prototype._removeElementsFromDom = function() {
                this.modalEl.remove(), this.options.backdrop && (activeBackdrops.value--, 0 === activeBackdrops.value && this.backdropEl.remove()), this._open = !1
            }, Dialog.prototype._loadResolves = function() {
                var templatePromise, values = [],
                    keys = [],
                    self = this;
                return this.options.template ? templatePromise = $q.when(this.options.template) : this.options.templateUrl && (templatePromise = $http.get(this.options.templateUrl, {
                    cache: $templateCache
                }).then(function(response) {
                    return response.data
                })), angular.forEach(this.options.resolve || [], function(value, key) {
                    keys.push(key), values.push(angular.isString(value) ? $injector.get(value) : $injector.invoke(value))
                }), keys.push("$template"), values.push(templatePromise), $q.all(values).then(function(values) {
                    var locals = {};
                    return angular.forEach(values, function(value, index) {
                        locals[keys[index]] = value
                    }), locals.dialog = self, locals
                })
            }, {
                dialog: function(opts) {
                    return new Dialog(opts)
                },
                messageBox: function(title, message, buttons) {
                    return new Dialog({
                        templateUrl: "template/dialog/message.html",
                        controller: "MessageBoxController",
                        resolve: {
                            model: function() {
                                return {
                                    title: title,
                                    message: message,
                                    buttons: buttons
                                }
                            }
                        }
                    })
                }
            }
        }]
    }), angular.module("ui.bootstrap.dropdownToggle", []).directive("dropdownToggle", ["$document", "$location", function($document) {
        var openElement = null,
            closeMenu = angular.noop;
        return {
            restrict: "CA",
            link: function(scope, element) {
                scope.$watch("$location.path", function() {
                    closeMenu()
                }), element.parent().bind("click", function() {
                    closeMenu()
                }), element.bind("click", function(event) {
                    var elementWasOpen = element === openElement;
                    event.preventDefault(), event.stopPropagation(), openElement && closeMenu(), elementWasOpen || (element.parent().addClass("open"), openElement = element, closeMenu = function(event) {
                        event && (event.preventDefault(), event.stopPropagation()), $document.unbind("click", closeMenu), element.parent().removeClass("open"), closeMenu = angular.noop, openElement = null
                    }, $document.bind("click", closeMenu))
                })
            }
        }
    }]), angular.module("ui.bootstrap.modal", ["ui.bootstrap.dialog"]).directive("modal", ["$parse", "$dialog", function($parse, $dialog) {
        return {
            restrict: "EA",
            terminal: !0,
            link: function(scope, elm, attrs) {
                var setClosed, opts = angular.extend({}, scope.$eval(attrs.uiOptions || attrs.bsOptions || attrs.options)),
                    shownExpr = attrs.modal || attrs.show;
                opts = angular.extend(opts, {
                    template: elm.html(),
                    resolve: {
                        $scope: function() {
                            return scope
                        }
                    }
                });
                var dialog = $dialog.dialog(opts);
                elm.remove(), setClosed = attrs.close ? function() {
                    $parse(attrs.close)(scope)
                } : function() {
                    angular.isFunction($parse(shownExpr).assign) && $parse(shownExpr).assign(scope, !1)
                }, scope.$watch(shownExpr, function(isShown) {
                    isShown ? dialog.open().then(function() {
                        setClosed()
                    }) : dialog.isOpen() && dialog.close()
                })
            }
        }
    }]), angular.module("ui.bootstrap.pagination", []).controller("PaginationController", ["$scope", "$interpolate", function($scope, $interpolate) {
        this.currentPage = 1, this.noPrevious = function() {
            return 1 === this.currentPage
        }, this.noNext = function() {
            return this.currentPage === $scope.numPages
        }, this.isActive = function(page) {
            return this.currentPage === page
        }, this.reset = function() {
            $scope.pages = [], this.currentPage = parseInt($scope.currentPage, 10), this.currentPage > $scope.numPages && $scope.selectPage($scope.numPages)
        };
        var self = this;
        $scope.selectPage = function(page) {
            !self.isActive(page) && page > 0 && page <= $scope.numPages && ($scope.currentPage = page, $scope.onSelectPage({
                page: page
            }))
        }, this.getAttributeValue = function(attribute, defaultValue, interpolate) {
            return angular.isDefined(attribute) ? interpolate ? $interpolate(attribute)($scope.$parent) : $scope.$parent.$eval(attribute) : defaultValue
        }
    }]).constant("paginationConfig", {
        boundaryLinks: !1,
        directionLinks: !0,
        firstText: "First",
        previousText: "Previous",
        nextText: "Next",
        lastText: "Last",
        rotate: !0
    }).directive("pagination", ["paginationConfig", function(config) {
        return {
            restrict: "EA",
            scope: {
                numPages: "=",
                currentPage: "=",
                maxSize: "=",
                onSelectPage: "&"
            },
            controller: "PaginationController",
            templateUrl: "template/pagination/pagination.html",
            replace: !0,
            link: function(scope, element, attrs, paginationCtrl) {
                function makePage(number, text, isActive, isDisabled) {
                    return {
                        number: number,
                        text: text,
                        active: isActive,
                        disabled: isDisabled
                    }
                }
                var boundaryLinks = paginationCtrl.getAttributeValue(attrs.boundaryLinks, config.boundaryLinks),
                    directionLinks = paginationCtrl.getAttributeValue(attrs.directionLinks, config.directionLinks),
                    firstText = paginationCtrl.getAttributeValue(attrs.firstText, config.firstText, !0),
                    previousText = paginationCtrl.getAttributeValue(attrs.previousText, config.previousText, !0),
                    nextText = paginationCtrl.getAttributeValue(attrs.nextText, config.nextText, !0),
                    lastText = paginationCtrl.getAttributeValue(attrs.lastText, config.lastText, !0),
                    rotate = paginationCtrl.getAttributeValue(attrs.rotate, config.rotate);
                scope.$watch("numPages + currentPage + maxSize", function() {
                    paginationCtrl.reset();
                    var startPage = 1,
                        endPage = scope.numPages,
                        isMaxSized = angular.isDefined(scope.maxSize) && scope.maxSize < scope.numPages;
                    isMaxSized && (rotate ? (startPage = Math.max(paginationCtrl.currentPage - Math.floor(scope.maxSize / 2), 1), endPage = startPage + scope.maxSize - 1, endPage > scope.numPages && (endPage = scope.numPages, startPage = endPage - scope.maxSize + 1)) : (startPage = (Math.ceil(paginationCtrl.currentPage / scope.maxSize) - 1) * scope.maxSize + 1, endPage = Math.min(startPage + scope.maxSize - 1, scope.numPages)));
                    for (var number = startPage; endPage >= number; number++) {
                        var page = makePage(number, number, paginationCtrl.isActive(number), !1);
                        scope.pages.push(page)
                    }
                    if (isMaxSized && !rotate) {
                        if (startPage > 1) {
                            var previousPageSet = makePage(startPage - 1, "...", !1, !1);
                            scope.pages.unshift(previousPageSet)
                        }
                        if (endPage < scope.numPages) {
                            var nextPageSet = makePage(endPage + 1, "...", !1, !1);
                            scope.pages.push(nextPageSet)
                        }
                    }
                    if (directionLinks) {
                        var previousPage = makePage(paginationCtrl.currentPage - 1, previousText, !1, paginationCtrl.noPrevious());
                        scope.pages.unshift(previousPage);
                        var nextPage = makePage(paginationCtrl.currentPage + 1, nextText, !1, paginationCtrl.noNext());
                        scope.pages.push(nextPage)
                    }
                    if (boundaryLinks) {
                        var firstPage = makePage(1, firstText, !1, paginationCtrl.noPrevious());
                        scope.pages.unshift(firstPage);
                        var lastPage = makePage(scope.numPages, lastText, !1, paginationCtrl.noNext());
                        scope.pages.push(lastPage)
                    }
                })
            }
        }
    }]).constant("pagerConfig", {
        previousText: "Â« Previous",
        nextText: "Next Â»",
        align: !0
    }).directive("pager", ["pagerConfig", function(config) {
        return {
            restrict: "EA",
            scope: {
                numPages: "=",
                currentPage: "=",
                onSelectPage: "&"
            },
            controller: "PaginationController",
            templateUrl: "template/pagination/pager.html",
            replace: !0,
            link: function(scope, element, attrs, paginationCtrl) {
                function makePage(number, text, isDisabled, isPrevious, isNext) {
                    return {
                        number: number,
                        text: text,
                        disabled: isDisabled,
                        previous: align && isPrevious,
                        next: align && isNext
                    }
                }
                var previousText = paginationCtrl.getAttributeValue(attrs.previousText, config.previousText, !0),
                    nextText = paginationCtrl.getAttributeValue(attrs.nextText, config.nextText, !0),
                    align = paginationCtrl.getAttributeValue(attrs.align, config.align);
                scope.$watch("numPages + currentPage", function() {
                    paginationCtrl.reset();
                    var previousPage = makePage(paginationCtrl.currentPage - 1, previousText, paginationCtrl.noPrevious(), !0, !1);
                    scope.pages.unshift(previousPage);
                    var nextPage = makePage(paginationCtrl.currentPage + 1, nextText, paginationCtrl.noNext(), !1, !0);
                    scope.pages.push(nextPage)
                })
            }
        }
    }]), angular.module("ui.bootstrap.tooltip", ["ui.bootstrap.position"]).provider("$tooltip", function() {
        function snake_case(name) {
            var regexp = /[A-Z]/g,
                separator = "-";
            return name.replace(regexp, function(letter, pos) {
                return (pos ? separator : "") + letter.toLowerCase()
            })
        }
        var defaultOptions = {
                placement: "top",
                animation: !0,
                popupDelay: 0
            },
            triggerMap = {
                mouseenter: "mouseleave",
                click: "click",
                focus: "blur"
            },
            globalOptions = {};
        this.options = function(value) {
            angular.extend(globalOptions, value)
        }, this.setTriggers = function(triggers) {
            angular.extend(triggerMap, triggers)
        }, this.$get = ["$window", "$compile", "$timeout", "$parse", "$document", "$position", "$interpolate", function($window, $compile, $timeout, $parse, $document, $position, $interpolate) {
            return function(type, prefix, defaultTriggerShow) {
                function getTriggers(trigger) {
                    var show = trigger || options.trigger || defaultTriggerShow,
                        hide = triggerMap[show] || show;
                    return {
                        show: show,
                        hide: hide
                    }
                }
                var options = angular.extend({}, defaultOptions, globalOptions),
                    directiveName = snake_case(type),
                    startSym = $interpolate.startSymbol(),
                    endSym = $interpolate.endSymbol(),
                    template = "<" + directiveName + '-popup title="' + startSym + "tt_title" + endSym + '" content="' + startSym + "tt_content" + endSym + '" placement="' + startSym + "tt_placement" + endSym + '" animation="tt_animation()" is-open="tt_isOpen"></' + directiveName + "-popup>";
                return {
                    restrict: "EA",
                    scope: !0,
                    link: function(scope, element, attrs) {
                        function toggleTooltipBind() {
                            scope.tt_isOpen ? hideTooltipBind() : showTooltipBind()
                        }

                        function showTooltipBind() {
                            scope.tt_popupDelay ? popupTimeout = $timeout(show, scope.tt_popupDelay) : scope.$apply(show)
                        }

                        function hideTooltipBind() {
                            scope.$apply(function() {
                                hide()
                            })
                        }

                        function show() {
                            var position, ttWidth, ttHeight, ttPosition;
                            if (scope.tt_content) {
                                switch (transitionTimeout && $timeout.cancel(transitionTimeout), tooltip.css({
                                    top: 0,
                                    left: 0,
                                    display: "block"
                                }), appendToBody ? ($body = $body || $document.find("body"), $body.append(tooltip)) : element.after(tooltip), position = appendToBody ? $position.offset(element) : $position.position(element), ttWidth = tooltip.prop("offsetWidth"), ttHeight = tooltip.prop("offsetHeight"), scope.tt_placement) {
                                    case "mouse":
                                        var mousePos = $position.mouse();
                                        ttPosition = {
                                            top: mousePos.y,
                                            left: mousePos.x
                                        };
                                        break;
                                    case "right":
                                        ttPosition = {
                                            top: position.top + position.height / 2 - ttHeight / 2,
                                            left: position.left + position.width
                                        };
                                        break;
                                    case "bottom":
                                        ttPosition = {
                                            top: position.top + position.height,
                                            left: position.left + position.width / 2 - ttWidth / 2
                                        };
                                        break;
                                    case "left":
                                        ttPosition = {
                                            top: position.top + position.height / 2 - ttHeight / 2,
                                            left: position.left - ttWidth
                                        };
                                        break;
                                    default:
                                        ttPosition = {
                                            top: position.top - ttHeight,
                                            left: position.left + position.width / 2 - ttWidth / 2
                                        }
                                }
                                ttPosition.top += "px", ttPosition.left += "px", tooltip.css(ttPosition), scope.tt_isOpen = !0
                            }
                        }

                        function hide() {
                            scope.tt_isOpen = !1, $timeout.cancel(popupTimeout), angular.isDefined(scope.tt_animation) && scope.tt_animation() ? transitionTimeout = $timeout(function() {
                                tooltip.remove()
                            }, 500) : tooltip.remove()
                        }
                        var transitionTimeout, popupTimeout, $body, tooltip = $compile(template)(scope),
                            appendToBody = angular.isDefined(options.appendToBody) ? options.appendToBody : !1,
                            triggers = getTriggers(void 0),
                            hasRegisteredTriggers = !1;
                        scope.tt_isOpen = !1, attrs.$observe(type, function(val) {
                            scope.tt_content = val
                        }), attrs.$observe(prefix + "Title", function(val) {
                            scope.tt_title = val
                        }), attrs.$observe(prefix + "Placement", function(val) {
                            scope.tt_placement = angular.isDefined(val) ? val : options.placement
                        }), attrs.$observe(prefix + "Animation", function(val) {
                            scope.tt_animation = angular.isDefined(val) ? $parse(val) : function() {
                                return options.animation
                            }
                        }), attrs.$observe(prefix + "PopupDelay", function(val) {
                            var delay = parseInt(val, 10);
                            scope.tt_popupDelay = isNaN(delay) ? options.popupDelay : delay
                        }), attrs.$observe(prefix + "Trigger", function(val) {
                            hasRegisteredTriggers && (element.unbind(triggers.show, showTooltipBind), element.unbind(triggers.hide, hideTooltipBind)), triggers = getTriggers(val), triggers.show === triggers.hide ? element.bind(triggers.show, toggleTooltipBind) : (element.bind(triggers.show, showTooltipBind), element.bind(triggers.hide, hideTooltipBind)), hasRegisteredTriggers = !0
                        }), attrs.$observe(prefix + "AppendToBody", function(val) {
                            appendToBody = angular.isDefined(val) ? $parse(val)(scope) : appendToBody
                        }), appendToBody && scope.$on("$locationChangeSuccess", function() {
                            scope.tt_isOpen && hide()
                        }), scope.$on("$destroy", function() {
                            scope.tt_isOpen ? hide() : tooltip.remove()
                        })
                    }
                }
            }
        }]
    }).directive("tooltipPopup", function() {
        return {
            restrict: "E",
            replace: !0,
            scope: {
                content: "@",
                placement: "@",
                animation: "&",
                isOpen: "&"
            },
            templateUrl: "template/tooltip/tooltip-popup.html"
        }
    }).directive("tooltip", ["$tooltip", function($tooltip) {
        return $tooltip("tooltip", "tooltip", "mouseenter")
    }]).directive("tooltipHtmlUnsafePopup", function() {
        return {
            restrict: "E",
            replace: !0,
            scope: {
                content: "@",
                placement: "@",
                animation: "&",
                isOpen: "&"
            },
            templateUrl: "template/tooltip/tooltip-html-unsafe-popup.html"
        }
    }).directive("tooltipHtmlUnsafe", ["$tooltip", function($tooltip) {
        return $tooltip("tooltipHtmlUnsafe", "tooltip", "mouseenter")
    }]), angular.module("ui.bootstrap.popover", ["ui.bootstrap.tooltip"]).directive("popoverPopup", function() {
        return {
            restrict: "EA",
            replace: !0,
            scope: {
                title: "@",
                content: "@",
                placement: "@",
                animation: "&",
                isOpen: "&"
            },
            templateUrl: "template/popover/popover.html"
        }
    }).directive("popover", ["$compile", "$timeout", "$parse", "$window", "$tooltip", function($compile, $timeout, $parse, $window, $tooltip) {
        return $tooltip("popover", "popover", "click")
    }]), angular.module("ui.bootstrap.progressbar", ["ui.bootstrap.transition"]).constant("progressConfig", {
        animate: !0,
        autoType: !1,
        stackedTypes: ["success", "info", "warning", "danger"]
    }).controller("ProgressBarController", ["$scope", "$attrs", "progressConfig", function($scope, $attrs, progressConfig) {
        function getStackedType(index) {
            return stackedTypes[index]
        }
        var animate = angular.isDefined($attrs.animate) ? $scope.$eval($attrs.animate) : progressConfig.animate,
            autoType = angular.isDefined($attrs.autoType) ? $scope.$eval($attrs.autoType) : progressConfig.autoType,
            stackedTypes = angular.isDefined($attrs.stackedTypes) ? $scope.$eval("[" + $attrs.stackedTypes + "]") : progressConfig.stackedTypes;
        this.makeBar = function(newBar, oldBar, index) {
            var newValue = angular.isObject(newBar) ? newBar.value : newBar || 0,
                oldValue = angular.isObject(oldBar) ? oldBar.value : oldBar || 0,
                type = angular.isObject(newBar) && angular.isDefined(newBar.type) ? newBar.type : autoType ? getStackedType(index || 0) : null;
            return {
                from: oldValue,
                to: newValue,
                type: type,
                animate: animate
            }
        }, this.addBar = function(bar) {
            $scope.bars.push(bar), $scope.totalPercent += bar.to
        }, this.clearBars = function() {
            $scope.bars = [], $scope.totalPercent = 0
        }, this.clearBars()
    }]).directive("progress", function() {
        return {
            restrict: "EA",
            replace: !0,
            controller: "ProgressBarController",
            scope: {
                value: "=percent",
                onFull: "&",
                onEmpty: "&"
            },
            templateUrl: "template/progressbar/progress.html",
            link: function(scope, element, attrs, controller) {
                scope.$watch("value", function(newValue, oldValue) {
                    if (controller.clearBars(), angular.isArray(newValue))
                        for (var i = 0, n = newValue.length; n > i; i++) controller.addBar(controller.makeBar(newValue[i], oldValue[i], i));
                    else controller.addBar(controller.makeBar(newValue, oldValue))
                }, !0), scope.$watch("totalPercent", function(value) {
                    value >= 100 ? scope.onFull() : 0 >= value && scope.onEmpty()
                }, !0)
            }
        }
    }).directive("progressbar", ["$transition", function($transition) {
        return {
            restrict: "EA",
            replace: !0,
            scope: {
                width: "=",
                old: "=",
                type: "=",
                animate: "="
            },
            templateUrl: "template/progressbar/bar.html",
            link: function(scope, element) {
                scope.$watch("width", function(value) {
                    scope.animate ? (element.css("width", scope.old + "%"), $transition(element, {
                        width: value + "%"
                    })) : element.css("width", value + "%")
                })
            }
        }
    }]), angular.module("ui.bootstrap.rating", []).constant("ratingConfig", {
        max: 5
    }).directive("rating", ["ratingConfig", "$parse", function(ratingConfig, $parse) {
        return {
            restrict: "EA",
            scope: {
                value: "=",
                onHover: "&",
                onLeave: "&"
            },
            templateUrl: "template/rating/rating.html",
            replace: !0,
            link: function(scope, element, attrs) {
                var maxRange = angular.isDefined(attrs.max) ? scope.$parent.$eval(attrs.max) : ratingConfig.max;
                scope.range = [];
                for (var i = 1; maxRange >= i; i++) scope.range.push(i);
                scope.rate = function(value) {
                    scope.readonly || (scope.value = value)
                }, scope.enter = function(value) {
                    scope.readonly || (scope.val = value), scope.onHover({
                        value: value
                    })
                }, scope.reset = function() {
                    scope.val = angular.copy(scope.value), scope.onLeave()
                }, scope.reset(), scope.$watch("value", function(value) {
                    scope.val = value
                }), scope.readonly = !1, attrs.readonly && scope.$parent.$watch($parse(attrs.readonly), function(value) {
                    scope.readonly = !!value
                })
            }
        }
    }]), angular.module("ui.bootstrap.tabs", []).directive("tabs", function() {
        return function() {
            throw new Error("The `tabs` directive is deprecated, please migrate to `tabset`. Instructions can be found at http://github.com/angular-ui/bootstrap/tree/master/CHANGELOG.md")
        }
    }).controller("TabsetController", ["$scope", "$element", function($scope) {
        var ctrl = this,
            tabs = ctrl.tabs = $scope.tabs = [];
        ctrl.select = function(tab) {
            angular.forEach(tabs, function(tab) {
                tab.active = !1
            }), tab.active = !0
        }, ctrl.addTab = function(tab) {
            tabs.push(tab), (1 === tabs.length || tab.active) && ctrl.select(tab)
        }, ctrl.removeTab = function(tab) {
            var index = tabs.indexOf(tab);
            if (tab.active && tabs.length > 1) {
                var newActiveIndex = index == tabs.length - 1 ? index - 1 : index + 1;
                ctrl.select(tabs[newActiveIndex])
            }
            tabs.splice(index, 1)
        }
    }]).directive("tabset", function() {
        return {
            restrict: "EA",
            transclude: !0,
            replace: !0,
            require: "^tabset",
            scope: {},
            controller: "TabsetController",
            templateUrl: "template/tabs/tabset.html",
            compile: function(elm, attrs, transclude) {
                return function(scope, element, attrs, tabsetCtrl) {
                    scope.vertical = angular.isDefined(attrs.vertical) ? scope.$eval(attrs.vertical) : !1, scope.type = angular.isDefined(attrs.type) ? scope.$parent.$eval(attrs.type) : "tabs", scope.direction = angular.isDefined(attrs.direction) ? scope.$parent.$eval(attrs.direction) : "top", scope.tabsAbove = "below" != scope.direction, tabsetCtrl.$scope = scope, tabsetCtrl.$transcludeFn = transclude
                }
            }
        }
    }).directive("tab", ["$parse", "$http", "$templateCache", "$compile", function($parse) {
        return {
            require: "^tabset",
            restrict: "EA",
            replace: !0,
            templateUrl: "template/tabs/tab.html",
            transclude: !0,
            scope: {
                heading: "@",
                onSelect: "&select",
                onDeselect: "&deselect"
            },
            controller: function() {},
            compile: function(elm, attrs, transclude) {
                return function(scope, elm, attrs, tabsetCtrl) {
                    var getActive, setActive;
                    attrs.active ? (getActive = $parse(attrs.active), setActive = getActive.assign, scope.$parent.$watch(getActive, function(value) {
                        scope.active = !!value
                    }), scope.active = getActive(scope.$parent)) : setActive = getActive = angular.noop, scope.$watch("active", function(active) {
                        setActive(scope.$parent, active), active ? (tabsetCtrl.select(scope), scope.onSelect()) : scope.onDeselect()
                    }), scope.disabled = !1, attrs.disabled && scope.$parent.$watch($parse(attrs.disabled), function(value) {
                        scope.disabled = !!value
                    }), scope.select = function() {
                        scope.disabled || (scope.active = !0)
                    }, tabsetCtrl.addTab(scope), scope.$on("$destroy", function() {
                        tabsetCtrl.removeTab(scope)
                    }), scope.active && setActive(scope.$parent, !0), scope.$transcludeFn = transclude
                }
            }
        }
    }]).directive("tabHeadingTransclude", [function() {
        return {
            restrict: "A",
            require: "^tab",
            link: function(scope, elm) {
                scope.$watch("headingElement", function(heading) {
                    heading && (elm.html(""), elm.append(heading))
                })
            }
        }
    }]).directive("tabContentTransclude", ["$compile", "$parse", function() {
        function isTabHeading(node) {
            return node.tagName && (node.hasAttribute("tab-heading") || node.hasAttribute("data-tab-heading") || "tab-heading" === node.tagName.toLowerCase() || "data-tab-heading" === node.tagName.toLowerCase())
        }
        return {
            restrict: "A",
            require: "^tabset",
            link: function(scope, elm, attrs) {
                var tab = scope.$eval(attrs.tabContentTransclude);
                tab.$transcludeFn(tab.$parent, function(contents) {
                    angular.forEach(contents, function(node) {
                        isTabHeading(node) ? tab.headingElement = node : elm.append(node)
                    })
                })
            }
        }
    }]).directive("tabsetTitles", function() {
        return {
            restrict: "A",
            require: "^tabset",
            templateUrl: "template/tabs/tabset-titles.html",
            replace: !0,
            link: function(scope, elm, attrs, tabsetCtrl) {
                scope.$eval(attrs.tabsetTitles) ? tabsetCtrl.$transcludeFn(tabsetCtrl.$scope.$parent, function(node) {
                    elm.append(node)
                }) : elm.remove()
            }
        }
    }), angular.module("ui.bootstrap.timepicker", []).filter("pad", function() {
        return function(input) {
            return angular.isDefined(input) && input.toString().length < 2 && (input = "0" + input), input
        }
    }).constant("timepickerConfig", {
        hourStep: 1,
        minuteStep: 1,
        showMeridian: !0,
        meridians: ["AM", "PM"],
        readonlyInput: !1,
        mousewheel: !0
    }).directive("timepicker", ["padFilter", "$parse", "timepickerConfig", function(padFilter, $parse, timepickerConfig) {
        return {
            restrict: "EA",
            require: "ngModel",
            replace: !0,
            templateUrl: "template/timepicker/timepicker.html",
            scope: {
                model: "=ngModel"
            },
            link: function(scope, element, attrs) {
                function getScopeHours() {
                    var hours = parseInt(scope.hours, 10),
                        valid = scope.showMeridian ? hours > 0 && 13 > hours : hours >= 0 && 24 > hours;
                    return valid ? (scope.showMeridian && (12 === hours && (hours = 0), scope.meridian === meridians[1] && (hours += 12)), hours) : void 0
                }

                function refreshTemplate() {
                    var hours = selected.getHours();
                    scope.showMeridian && (hours = 0 === hours || 12 === hours ? 12 : hours % 12), scope.hours = "h" === keyboardChange ? hours : padFilter(hours), scope.validHours = !0;
                    var minutes = selected.getMinutes();
                    scope.minutes = "m" === keyboardChange ? minutes : padFilter(minutes), scope.validMinutes = !0, scope.meridian = scope.showMeridian ? selected.getHours() < 12 ? meridians[0] : meridians[1] : "", keyboardChange = !1
                }

                function addMinutes(minutes) {
                    var dt = new Date(selected.getTime() + 6e4 * minutes);
                    selected.setHours(dt.getHours()), selected.setMinutes(dt.getMinutes()), scope.model = new Date(selected)
                }
                var selected = new Date,
                    meridians = timepickerConfig.meridians,
                    hourStep = timepickerConfig.hourStep;
                attrs.hourStep && scope.$parent.$watch($parse(attrs.hourStep), function(value) {
                    hourStep = parseInt(value, 10)
                });
                var minuteStep = timepickerConfig.minuteStep;
                attrs.minuteStep && scope.$parent.$watch($parse(attrs.minuteStep), function(value) {
                    minuteStep = parseInt(value, 10)
                }), scope.showMeridian = timepickerConfig.showMeridian, attrs.showMeridian && scope.$parent.$watch($parse(attrs.showMeridian), function(value) {
                    if (scope.showMeridian = !!value, scope.model) refreshTemplate();
                    else {
                        var dt = new Date(selected),
                            hours = getScopeHours();
                        angular.isDefined(hours) && dt.setHours(hours), scope.model = new Date(dt)
                    }
                });
                var inputs = element.find("input"),
                    hoursInputEl = inputs.eq(0),
                    minutesInputEl = inputs.eq(1),
                    mousewheel = angular.isDefined(attrs.mousewheel) ? scope.$eval(attrs.mousewheel) : timepickerConfig.mousewheel;
                if (mousewheel) {
                    var isScrollingUp = function(e) {
                        e.originalEvent && (e = e.originalEvent);
                        var delta = e.wheelDelta ? e.wheelDelta : -e.deltaY;
                        return e.detail || delta > 0
                    };
                    hoursInputEl.bind("mousewheel wheel", function(e) {
                        scope.$apply(isScrollingUp(e) ? scope.incrementHours() : scope.decrementHours()), e.preventDefault()
                    }), minutesInputEl.bind("mousewheel wheel", function(e) {
                        scope.$apply(isScrollingUp(e) ? scope.incrementMinutes() : scope.decrementMinutes()), e.preventDefault()
                    })
                }
                var keyboardChange = !1;
                scope.readonlyInput = angular.isDefined(attrs.readonlyInput) ? scope.$eval(attrs.readonlyInput) : timepickerConfig.readonlyInput, scope.readonlyInput ? (scope.updateHours = angular.noop, scope.updateMinutes = angular.noop) : (scope.updateHours = function() {
                    var hours = getScopeHours();
                    angular.isDefined(hours) ? (keyboardChange = "h", null === scope.model && (scope.model = new Date(selected)), scope.model.setHours(hours)) : (scope.model = null, scope.validHours = !1)
                }, hoursInputEl.bind("blur", function() {
                    scope.validHours && scope.hours < 10 && scope.$apply(function() {
                        scope.hours = padFilter(scope.hours)
                    })
                }), scope.updateMinutes = function() {
                    var minutes = parseInt(scope.minutes, 10);
                    minutes >= 0 && 60 > minutes ? (keyboardChange = "m", null === scope.model && (scope.model = new Date(selected)), scope.model.setMinutes(minutes)) : (scope.model = null, scope.validMinutes = !1)
                }, minutesInputEl.bind("blur", function() {
                    scope.validMinutes && scope.minutes < 10 && scope.$apply(function() {
                        scope.minutes = padFilter(scope.minutes)
                    })
                })), scope.$watch(function() {
                    return +scope.model
                }, function(timestamp) {
                    !isNaN(timestamp) && timestamp > 0 && (selected = new Date(timestamp), refreshTemplate())
                }), scope.incrementHours = function() {
                    addMinutes(60 * hourStep)
                }, scope.decrementHours = function() {
                    addMinutes(60 * -hourStep)
                }, scope.incrementMinutes = function() {
                    addMinutes(minuteStep)
                }, scope.decrementMinutes = function() {
                    addMinutes(-minuteStep)
                }, scope.toggleMeridian = function() {
                    addMinutes(720 * (selected.getHours() < 12 ? 1 : -1))
                }
            }
        }
    }]), angular.module("ui.bootstrap.typeahead", ["ui.bootstrap.position"]).factory("typeaheadParser", ["$parse", function($parse) {
        var TYPEAHEAD_REGEXP = /^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/;
        return {
            parse: function(input) {
                var match = input.match(TYPEAHEAD_REGEXP);
                if (!match) throw new Error("Expected typeahead specification in form of '_modelValue_ (as _label_)? for _item_ in _collection_' but got '" + input + "'.");
                return {
                    itemName: match[3],
                    source: $parse(match[4]),
                    viewMapper: $parse(match[2] || match[1]),
                    modelMapper: $parse(match[1])
                }
            }
        }
    }]).directive("typeahead", ["$compile", "$parse", "$q", "$timeout", "$document", "$position", "typeaheadParser", function($compile, $parse, $q, $timeout, $document, $position, typeaheadParser) {
        var HOT_KEYS = [9, 13, 27, 38, 40];
        return {
            require: "ngModel",
            link: function(originalScope, element, attrs, modelCtrl) {
                var minSearch = originalScope.$eval(attrs.typeaheadMinLength) || 1,
                    waitTime = originalScope.$eval(attrs.typeaheadWaitMs) || 0,
                    isEditable = originalScope.$eval(attrs.typeaheadEditable) !== !1,
                    isLoadingSetter = $parse(attrs.typeaheadLoading).assign || angular.noop,
                    onSelectCallback = $parse(attrs.typeaheadOnSelect),
                    inputFormatter = attrs.typeaheadInputFormatter ? $parse(attrs.typeaheadInputFormatter) : void 0,
                    $setModelValue = $parse(attrs.ngModel).assign,
                    parserResult = typeaheadParser.parse(attrs.typeahead),
                    popUpEl = angular.element("<typeahead-popup></typeahead-popup>");
                popUpEl.attr({
                    matches: "matches",
                    active: "activeIdx",
                    select: "select(activeIdx)",
                    query: "query",
                    position: "position"
                }), angular.isDefined(attrs.typeaheadTemplateUrl) && popUpEl.attr("template-url", attrs.typeaheadTemplateUrl);
                var scope = originalScope.$new();
                originalScope.$on("$destroy", function() {
                    scope.$destroy()
                });
                var resetMatches = function() {
                        scope.matches = [], scope.activeIdx = -1
                    },
                    getMatchesAsync = function(inputValue) {
                        var locals = {
                            $viewValue: inputValue
                        };
                        isLoadingSetter(originalScope, !0), $q.when(parserResult.source(scope, locals)).then(function(matches) {
                            if (inputValue === modelCtrl.$viewValue) {
                                if (matches.length > 0) {
                                    scope.activeIdx = 0, scope.matches.length = 0;
                                    for (var i = 0; i < matches.length; i++) locals[parserResult.itemName] = matches[i], scope.matches.push({
                                        label: parserResult.viewMapper(scope, locals),
                                        model: matches[i]
                                    });
                                    scope.query = inputValue, scope.position = $position.position(element), scope.position.top = scope.position.top + element.prop("offsetHeight")
                                } else resetMatches();
                                isLoadingSetter(originalScope, !1)
                            }
                        }, function() {
                            resetMatches(), isLoadingSetter(originalScope, !1)
                        })
                    };
                resetMatches(), scope.query = void 0;
                var timeoutPromise;
                modelCtrl.$parsers.push(function(inputValue) {
                    return resetMatches(), inputValue && inputValue.length >= minSearch && (waitTime > 0 ? (timeoutPromise && $timeout.cancel(timeoutPromise), timeoutPromise = $timeout(function() {
                        getMatchesAsync(inputValue)
                    }, waitTime)) : getMatchesAsync(inputValue)), isEditable ? inputValue : void 0
                }), modelCtrl.$formatters.push(function(modelValue) {
                    var candidateViewValue, emptyViewValue, locals = {};
                    return inputFormatter ? (locals.$model = modelValue, inputFormatter(originalScope, locals)) : (locals[parserResult.itemName] = modelValue, candidateViewValue = parserResult.viewMapper(originalScope, locals), emptyViewValue = parserResult.viewMapper(originalScope, {}), candidateViewValue !== emptyViewValue ? candidateViewValue : modelValue)
                }), scope.select = function(activeIdx) {
                    var model, item, locals = {};
                    locals[parserResult.itemName] = item = scope.matches[activeIdx].model, model = parserResult.modelMapper(originalScope, locals), $setModelValue(originalScope, model), onSelectCallback(originalScope, {
                        $item: item,
                        $model: model,
                        $label: parserResult.viewMapper(originalScope, locals)
                    }), resetMatches(), element[0].focus()
                }, element.bind("keydown", function(evt) {
                    0 !== scope.matches.length && -1 !== HOT_KEYS.indexOf(evt.which) && (evt.preventDefault(), 40 === evt.which ? (scope.activeIdx = (scope.activeIdx + 1) % scope.matches.length, scope.$digest()) : 38 === evt.which ? (scope.activeIdx = (scope.activeIdx ? scope.activeIdx : scope.matches.length) - 1, scope.$digest()) : 13 === evt.which || 9 === evt.which ? scope.$apply(function() {
                        scope.select(scope.activeIdx)
                    }) : 27 === evt.which && (evt.stopPropagation(), resetMatches(), scope.$digest()))
                }), $document.bind("click", function() {
                    resetMatches(), scope.$digest()
                }), element.after($compile(popUpEl)(scope))
            }
        }
    }]).directive("typeaheadPopup", function() {
        return {
            restrict: "E",
            scope: {
                matches: "=",
                query: "=",
                active: "=",
                position: "=",
                select: "&"
            },
            replace: !0,
            templateUrl: "template/typeahead/typeahead-popup.html",
            link: function(scope, element, attrs) {
                scope.templateUrl = attrs.templateUrl, scope.isOpen = function() {
                    return scope.matches.length > 0
                }, scope.isActive = function(matchIdx) {
                    return scope.active == matchIdx
                }, scope.selectActive = function(matchIdx) {
                    scope.active = matchIdx
                }, scope.selectMatch = function(activeIdx) {
                    scope.select({
                        activeIdx: activeIdx
                    })
                }
            }
        }
    }).directive("typeaheadMatch", ["$http", "$templateCache", "$compile", "$parse", function($http, $templateCache, $compile, $parse) {
        return {
            restrict: "E",
            scope: {
                index: "=",
                match: "=",
                query: "="
            },
            link: function(scope, element, attrs) {
                var tplUrl = $parse(attrs.templateUrl)(scope.$parent) || "template/typeahead/typeahead-match.html";
                $http.get(tplUrl, {
                    cache: $templateCache
                }).success(function(tplContent) {
                    element.replaceWith($compile(tplContent.trim())(scope))
                })
            }
        }
    }]).filter("typeaheadHighlight", function() {
        function escapeRegexp(queryToEscape) {
            return queryToEscape.replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1")
        }
        return function(matchItem, query) {
            return query ? matchItem.replace(new RegExp(escapeRegexp(query), "gi"), "<strong>$&</strong>") : query
        }
    }), angular.module("template/accordion/accordion-group.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/accordion/accordion-group.html", '<div class="accordion-group">\n  <div class="accordion-heading" ><a class="accordion-toggle" ng-click="isOpen = !isOpen" accordion-transclude="heading">{{heading}}</a></div>\n  <div class="accordion-body" collapse="!isOpen">\n    <div class="accordion-inner" ng-transclude></div>  </div>\n</div>')
    }]), angular.module("template/accordion/accordion.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/accordion/accordion.html", '<div class="accordion" ng-transclude></div>')
    }]), angular.module("template/alert/alert.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/alert/alert.html", "<div class='alert' ng-class='type && \"alert-\" + type'>\n    <button ng-show='closeable' type='button' class='close' ng-click='close()'>&times;</button>\n    <div ng-transclude></div>\n</div>\n")
    }]), angular.module("template/carousel/carousel.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/carousel/carousel.html", '<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel">\n    <ol class="carousel-indicators" ng-show="slides().length > 1">\n        <li ng-repeat="slide in slides()" ng-class="{active: isActive(slide)}" ng-click="select(slide)"></li>\n    </ol>\n    <div class="carousel-inner" ng-transclude></div>\n    <a ng-click="prev()" class="carousel-control left" ng-show="slides().length > 1">&lsaquo;</a>\n    <a ng-click="next()" class="carousel-control right" ng-show="slides().length > 1">&rsaquo;</a>\n</div>\n')
    }]), angular.module("template/carousel/slide.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/carousel/slide.html", "<div ng-class=\"{\n    'active': leaving || (active && !entering),\n    'prev': (next || active) && direction=='prev',\n    'next': (next || active) && direction=='next',\n    'right': direction=='prev',\n    'left': direction=='next'\n  }\" class=\"item\" ng-transclude></div>\n")
    }]), angular.module("template/datepicker/datepicker.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/datepicker/datepicker.html", '<table>\n  <thead>\n    <tr class="text-center">\n      <th><button type="button" class="btn pull-left" ng-click="move(-1)"><i class="icon-chevron-left"></i></button></th>\n      <th colspan="{{rows[0].length - 2 + showWeekNumbers}}"><button type="button" class="btn btn-block" ng-click="toggleMode()"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn pull-right" ng-click="move(1)"><i class="icon-chevron-right"></i></button></th>\n    </tr>\n    <tr class="text-center" ng-show="labels.length > 0">\n      <th ng-show="showWeekNumbers">#</th>\n      <th ng-repeat="label in labels">{{label}}</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows">\n      <td ng-show="showWeekNumbers" class="text-center"><em>{{ getWeekNumber(row) }}</em></td>\n      <td ng-repeat="dt in row" class="text-center">\n        <button type="button" style="width:100%;" class="btn" ng-class="{\'btn-info\': dt.selected}" ng-click="select(dt.date)" ng-disabled="dt.disabled"><span ng-class="{muted: dt.secondary}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')
    }]), angular.module("template/datepicker/popup.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/datepicker/popup.html", '<ul class="dropdown-menu" ng-style="{display: (isOpen && \'block\') || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" class="dropdown-menu">\n	<li ng-transclude></li>\n	<li class="divider"></li>\n	<li style="padding: 9px;">\n		<span class="btn-group">\n			<button class="btn btn-small btn-inverse" ng-click="today()">Today</button>\n			<button class="btn btn-small btn-info" ng-click="showWeeks = ! showWeeks" ng-class="{active: showWeeks}">Weeks</button>\n			<button class="btn btn-small btn-danger" ng-click="clear()">Clear</button>\n		</span>\n		<button class="btn btn-small btn-success pull-right" ng-click="isOpen = false">Close</button>\n	</li>\n</ul>')
    }]), angular.module("template/dialog/message.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/dialog/message.html", '<div class="modal-header">\n	<h3>{{ title }}</h3>\n</div>\n<div class="modal-body">\n	<p>{{ message }}</p>\n</div>\n<div class="modal-footer">\n	<button ng-repeat="btn in buttons" ng-click="close(btn.result)" class="btn" ng-class="btn.cssClass">{{ btn.label }}</button>\n</div>\n')
    }]), angular.module("template/modal/backdrop.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/modal/backdrop.html", '<div class="modal-backdrop fade in"></div>')
    }]), angular.module("template/modal/window.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/modal/window.html", '<div class="modal in" ng-transclude></div>')
    }]), angular.module("template/pagination/pager.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/pagination/pager.html", '<div class="pager">\n  <ul>\n    <li ng-repeat="page in pages" ng-class="{disabled: page.disabled, previous: page.previous, next: page.next}"><a ng-click="selectPage(page.number)">{{page.text}}</a></li>\n  </ul>\n</div>\n')
    }]), angular.module("template/pagination/pagination.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/pagination/pagination.html", '<div class="pagination"><ul>\n  <li ng-repeat="page in pages" ng-class="{active: page.active, disabled: page.disabled}"><a ng-click="selectPage(page.number)">{{page.text}}</a></li>\n  </ul>\n</div>\n')
    }]), angular.module("template/tooltip/tooltip-html-unsafe-popup.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/tooltip/tooltip-html-unsafe-popup.html", '<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind-html-unsafe="content"></div>\n</div>\n')
    }]), angular.module("template/tooltip/tooltip-popup.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/tooltip/tooltip-popup.html", '<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n')
    }]), angular.module("template/popover/popover.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/popover/popover.html", '<div class="popover {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="title" ng-show="title"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n')
    }]), angular.module("template/progressbar/bar.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/progressbar/bar.html", '<div class="bar" ng-class=\'type && "bar-" + type\'></div>')
    }]), angular.module("template/progressbar/progress.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/progressbar/progress.html", '<div class="progress"><progressbar ng-repeat="bar in bars" width="bar.to" old="bar.from" animate="bar.animate" type="bar.type"></progressbar></div>')
    }]), angular.module("template/rating/rating.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/rating/rating.html", '<span ng-mouseleave="reset()">\n	<i ng-repeat="number in range" ng-mouseenter="enter(number)" ng-click="rate(number)" ng-class="{\'icon-star\': number <= val, \'icon-star-empty\': number > val}"></i>\n</span>')
    }]), angular.module("template/tabs/pane.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/tabs/pane.html", '<div class="tab-pane" ng-class="{active: selected}" ng-show="selected" ng-transclude></div>\n')
    }]), angular.module("template/tabs/tab.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/tabs/tab.html", '<li ng-class="{active: active, disabled: disabled}">\n  <a ng-click="select()" tab-heading-transclude>{{heading}}</a>\n</li>\n')
    }]), angular.module("template/tabs/tabs.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/tabs/tabs.html", '<div class="tabbable">\n  <ul class="nav nav-tabs">\n    <li ng-repeat="pane in panes" ng-class="{active:pane.selected}">\n      <a ng-click="select(pane)">{{pane.heading}}</a>\n    </li>\n  </ul>\n  <div class="tab-content" ng-transclude></div>\n</div>\n')
    }]), angular.module("template/tabs/tabset-titles.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/tabs/tabset-titles.html", "<ul class=\"nav {{type && 'nav-' + type}}\" ng-class=\"{'nav-stacked': vertical}\">\n</ul>\n")
    }]), angular.module("template/tabs/tabset.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/tabs/tabset.html", '\n<div class="tabbable" ng-class="{\'tabs-right\': direction == \'right\', \'tabs-left\': direction == \'left\', \'tabs-below\': direction == \'below\'}">\n  <div tabset-titles="tabsAbove"></div>\n  <div class="tab-content">\n    <div class="tab-pane" \n         ng-repeat="tab in tabs" \n         ng-class="{active: tab.active}"\n         tab-content-transclude="tab">\n    </div>\n  </div>\n  <div tabset-titles="!tabsAbove"></div>\n</div>\n')
    }]), angular.module("template/timepicker/timepicker.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/timepicker/timepicker.html", '<table class="form-inline">\n	<tr class="text-center">\n		<td><a ng-click="incrementHours()" class="btn btn-link"><i class="icon-chevron-up"></i></a></td>\n		<td>&nbsp;</td>\n		<td><a ng-click="incrementMinutes()" class="btn btn-link"><i class="icon-chevron-up"></i></a></td>\n		<td ng-show="showMeridian"></td>\n	</tr>\n	<tr>\n		<td class="control-group" ng-class="{\'error\': !validHours}"><input type="text" ng-model="hours" ng-change="updateHours()" class="span1 text-center" ng-mousewheel="incrementHours()" ng-readonly="readonlyInput" maxlength="2" /></td>\n		<td>:</td>\n		<td class="control-group" ng-class="{\'error\': !validMinutes}"><input type="text" ng-model="minutes" ng-change="updateMinutes()" class="span1 text-center" ng-readonly="readonlyInput" maxlength="2"></td>\n		<td ng-show="showMeridian"><button ng-click="toggleMeridian()" class="btn text-center">{{meridian}}</button></td>\n	</tr>\n	<tr class="text-center">\n		<td><a ng-click="decrementHours()" class="btn btn-link"><i class="icon-chevron-down"></i></a></td>\n		<td>&nbsp;</td>\n		<td><a ng-click="decrementMinutes()" class="btn btn-link"><i class="icon-chevron-down"></i></a></td>\n		<td ng-show="showMeridian"></td>\n	</tr>\n</table>')
    }]), angular.module("template/typeahead/typeahead-match.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/typeahead/typeahead-match.html", '<a tabindex="-1" ng-bind-html-unsafe="match.label | typeaheadHighlight:query"></a>')
    }]), angular.module("template/typeahead/typeahead-popup.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/typeahead/typeahead-popup.html", "<ul class=\"typeahead dropdown-menu\" ng-style=\"{display: isOpen()&&'block' || 'none', top: position.top+'px', left: position.left+'px'}\">\n" + '    <li ng-repeat="match in matches" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)">\n        <typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></typeahead-match>\n    </li>\n</ul>')
    }]), angular.module("template/typeahead/typeahead.html", []).run(["$templateCache", function($templateCache) {
        $templateCache.put("template/typeahead/typeahead.html", "<ul class=\"typeahead dropdown-menu\" ng-style=\"{display: isOpen()&&'block' || 'none', top: position.top+'px', left: position.left+'px'}\">\n" + '    <li ng-repeat="match in matches" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)">\n        <a tabindex="-1" ng-click="selectMatch($index)" ng-bind-html-unsafe="match.label | typeaheadHighlight:query"></a>\n    </li>\n</ul>')
    }]),
    function($) {
        "undefined" == typeof $.fn.each2 && $.extend($.fn, {
            each2: function(c) {
                for (var j = $([0]), i = -1, l = this.length; ++i < l && (j.context = j[0] = this[i]) && c.call(j[0], i, j) !== !1;);
                return this
            }
        })
    }(jQuery),
    function($, undefined) {
        "use strict";

        function reinsertElement(element) {
            var placeholder = $(document.createTextNode(""));
            element.before(placeholder), placeholder.before(element), placeholder.remove()
        }

        function stripDiacritics(str) {
            function match(a) {
                return DIACRITICS[a] || a
            }
            return str.replace(/[^\u0000-\u007E]/g, match)
        }

        function indexOf(value, array) {
            for (var i = 0, l = array.length; l > i; i += 1)
                if (equal(value, array[i])) return i;
            return -1
        }

        function measureScrollbar() {
            var $template = $(MEASURE_SCROLLBAR_TEMPLATE);
            $template.appendTo("body");
            var dim = {
                width: $template.width() - $template[0].clientWidth,
                height: $template.height() - $template[0].clientHeight
            };
            return $template.remove(), dim
        }

        function equal(a, b) {
            return a === b ? !0 : a === undefined || b === undefined ? !1 : null === a || null === b ? !1 : a.constructor === String ? a + "" == b + "" : b.constructor === String ? b + "" == a + "" : !1
        }

        function splitVal(string, separator) {
            var val, i, l;
            if (null === string || string.length < 1) return [];
            for (val = string.split(separator), i = 0, l = val.length; l > i; i += 1) val[i] = $.trim(val[i]);
            return val
        }

        function getSideBorderPadding(element) {
            return element.outerWidth(!1) - element.width()
        }

        function installKeyUpChangeEvent(element) {
            var key = "keyup-change-value";
            element.on("keydown", function() {
                $.data(element, key) === undefined && $.data(element, key, element.val())
            }), element.on("keyup", function() {
                var val = $.data(element, key);
                val !== undefined && element.val() !== val && ($.removeData(element, key), element.trigger("keyup-change"))
            })
        }

        function installFilteredMouseMove(element) {
            element.on("mousemove", function(e) {
                var lastpos = lastMousePosition;
                (lastpos === undefined || lastpos.x !== e.pageX || lastpos.y !== e.pageY) && $(e.target).trigger("mousemove-filtered", e)
            })
        }

        function debounce(quietMillis, fn, ctx) {
            ctx = ctx || undefined;
            var timeout;
            return function() {
                var args = arguments;
                window.clearTimeout(timeout), timeout = window.setTimeout(function() {
                    fn.apply(ctx, args)
                }, quietMillis)
            }
        }

        function installDebouncedScroll(threshold, element) {
            var notify = debounce(threshold, function(e) {
                element.trigger("scroll-debounced", e)
            });
            element.on("scroll", function(e) {
                indexOf(e.target, element.get()) >= 0 && notify(e)
            })
        }

        function focus($el) {
            $el[0] !== document.activeElement && window.setTimeout(function() {
                var range, el = $el[0],
                    pos = $el.val().length;
                $el.focus();
                var isVisible = el.offsetWidth > 0 || el.offsetHeight > 0;
                isVisible && el === document.activeElement && (el.setSelectionRange ? el.setSelectionRange(pos, pos) : el.createTextRange && (range = el.createTextRange(), range.collapse(!1), range.select()))
            }, 0)
        }

        function getCursorInfo(el) {
            el = $(el)[0];
            var offset = 0,
                length = 0;
            if ("selectionStart" in el) offset = el.selectionStart, length = el.selectionEnd - offset;
            else if ("selection" in document) {
                el.focus();
                var sel = document.selection.createRange();
                length = document.selection.createRange().text.length, sel.moveStart("character", -el.value.length), offset = sel.text.length - length
            }
            return {
                offset: offset,
                length: length
            }
        }

        function killEvent(event) {
            event.preventDefault(), event.stopPropagation()
        }

        function killEventImmediately(event) {
            event.preventDefault(), event.stopImmediatePropagation()
        }

        function measureTextWidth(e) {
            if (!sizer) {
                var style = e[0].currentStyle || window.getComputedStyle(e[0], null);
                sizer = $(document.createElement("div")).css({
                    position: "absolute",
                    left: "-10000px",
                    top: "-10000px",
                    display: "none",
                    fontSize: style.fontSize,
                    fontFamily: style.fontFamily,
                    fontStyle: style.fontStyle,
                    fontWeight: style.fontWeight,
                    letterSpacing: style.letterSpacing,
                    textTransform: style.textTransform,
                    whiteSpace: "nowrap"
                }), sizer.attr("class", "select2-sizer"), $("body").append(sizer)
            }
            return sizer.text(e.val()), sizer.width()
        }

        function syncCssClasses(dest, src, adapter) {
            var classes, adapted, replacements = [];
            classes = $.trim(dest.attr("class")), classes && (classes = "" + classes, $(classes.split(/\s+/)).each2(function() {
                0 === this.indexOf("select2-") && replacements.push(this)
            })), classes = $.trim(src.attr("class")), classes && (classes = "" + classes, $(classes.split(/\s+/)).each2(function() {
                0 !== this.indexOf("select2-") && (adapted = adapter(this), adapted && replacements.push(adapted))
            })), dest.attr("class", replacements.join(" "))
        }

        function markMatch(text, term, markup, escapeMarkup) {
            var match = stripDiacritics(text.toUpperCase()).indexOf(stripDiacritics(term.toUpperCase())),
                tl = term.length;
            return 0 > match ? void markup.push(escapeMarkup(text)) : (markup.push(escapeMarkup(text.substring(0, match))), markup.push("<span class='select2-match'>"), markup.push(escapeMarkup(text.substring(match, match + tl))), markup.push("</span>"), void markup.push(escapeMarkup(text.substring(match + tl, text.length))))
        }

        function defaultEscapeMarkup(markup) {
            var replace_map = {
                "\\": "&#92;",
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#39;",
                "/": "&#47;"
            };
            return String(markup).replace(/[&<>"'\/\\]/g, function(match) {
                return replace_map[match]
            })
        }

        function ajax(options) {
            var timeout, handler = null,
                quietMillis = options.quietMillis || 100,
                ajaxUrl = options.url,
                self = this;
            return function(query) {
                window.clearTimeout(timeout), timeout = window.setTimeout(function() {
                    var data = options.data,
                        url = ajaxUrl,
                        transport = options.transport || $.fn.select2.ajaxDefaults.transport,
                        deprecated = {
                            type: options.type || "GET",
                            cache: options.cache || !1,
                            jsonpCallback: options.jsonpCallback || undefined,
                            dataType: options.dataType || "json"
                        },
                        params = $.extend({}, $.fn.select2.ajaxDefaults.params, deprecated);
                    data = data ? data.call(self, query.term, query.page, query.context) : null, url = "function" == typeof url ? url.call(self, query.term, query.page, query.context) : url, handler && "function" == typeof handler.abort && handler.abort(), options.params && ($.isFunction(options.params) ? $.extend(params, options.params.call(self)) : $.extend(params, options.params)), $.extend(params, {
                        url: url,
                        dataType: options.dataType,
                        data: data,
                        success: function(data) {
                            var results = options.results(data, query.page, query);
                            query.callback(results)
                        },
                        error: function(jqXHR, textStatus, errorThrown) {
                            var results = {
                                hasError: !0,
                                jqXHR: jqXHR,
                                textStatus: textStatus,
                                errorThrown: errorThrown
                            };
                            query.callback(results)
                        }
                    }), handler = transport.call(self, params)
                }, quietMillis)
            }
        }

        function local(options) {
            var dataText, tmp, data = options,
                text = function(item) {
                    return "" + item.text
                };
            $.isArray(data) && (tmp = data, data = {
                results: tmp
            }), $.isFunction(data) === !1 && (tmp = data, data = function() {
                return tmp
            });
            var dataItem = data();
            return dataItem.text && (text = dataItem.text, $.isFunction(text) || (dataText = dataItem.text, text = function(item) {
                    return item[dataText]
                })),
                function(query) {
                    var process, t = query.term,
                        filtered = {
                            results: []
                        };
                    return "" === t ? void query.callback(data()) : (process = function(datum, collection) {
                        var group, attr;
                        if (datum = datum[0], datum.children) {
                            group = {};
                            for (attr in datum) datum.hasOwnProperty(attr) && (group[attr] = datum[attr]);
                            group.children = [], $(datum.children).each2(function(i, childDatum) {
                                process(childDatum, group.children)
                            }), (group.children.length || query.matcher(t, text(group), datum)) && collection.push(group)
                        } else query.matcher(t, text(datum), datum) && collection.push(datum)
                    }, $(data().results).each2(function(i, datum) {
                        process(datum, filtered.results)
                    }), void query.callback(filtered))
                }
        }

        function tags(data) {
            var isFunc = $.isFunction(data);
            return function(query) {
                var t = query.term,
                    filtered = {
                        results: []
                    },
                    result = isFunc ? data(query) : data;
                $.isArray(result) && ($(result).each(function() {
                    var isObject = this.text !== undefined,
                        text = isObject ? this.text : this;
                    ("" === t || query.matcher(t, text)) && filtered.results.push(isObject ? this : {
                        id: this,
                        text: this
                    })
                }), query.callback(filtered))
            }
        }

        function checkFormatter(formatter, formatterName) {
            if ($.isFunction(formatter)) return !0;
            if (!formatter) return !1;
            if ("string" == typeof formatter) return !0;
            throw new Error(formatterName + " must be a string, function, or falsy value")
        }

        function evaluate(val, context) {
            if ($.isFunction(val)) {
                var args = Array.prototype.slice.call(arguments, 2);
                return val.apply(context, args)
            }
            return val
        }

        function countResults(results) {
            var count = 0;
            return $.each(results, function(i, item) {
                item.children ? count += countResults(item.children) : count++
            }), count
        }

        function defaultTokenizer(input, selection, selectCallback, opts) {
            var token, index, i, l, separator, original = input,
                dupe = !1;
            if (!opts.createSearchChoice || !opts.tokenSeparators || opts.tokenSeparators.length < 1) return undefined;
            for (;;) {
                for (index = -1, i = 0, l = opts.tokenSeparators.length; l > i && (separator = opts.tokenSeparators[i], index = input.indexOf(separator), !(index >= 0)); i++);
                if (0 > index) break;
                if (token = input.substring(0, index), input = input.substring(index + separator.length), token.length > 0 && (token = opts.createSearchChoice.call(this, token, selection), token !== undefined && null !== token && opts.id(token) !== undefined && null !== opts.id(token))) {
                    for (dupe = !1, i = 0, l = selection.length; l > i; i++)
                        if (equal(opts.id(token), opts.id(selection[i]))) {
                            dupe = !0;
                            break
                        }
                    dupe || selectCallback(token)
                }
            }
            return original !== input ? input : void 0
        }

        function cleanupJQueryElements() {
            var self = this;
            $.each(arguments, function(i, element) {
                self[element].remove(), self[element] = null
            })
        }

        function clazz(SuperClass, methods) {
            var constructor = function() {};
            return constructor.prototype = new SuperClass, constructor.prototype.constructor = constructor, constructor.prototype.parent = SuperClass.prototype, constructor.prototype = $.extend(constructor.prototype, methods), constructor
        }
        if (window.Select2 === undefined) {
            var KEY, AbstractSelect2, SingleSelect2, MultiSelect2, nextUid, sizer, $document, scrollBarDimensions, lastMousePosition = {
                    x: 0,
                    y: 0
                },
                KEY = {
                    TAB: 9,
                    ENTER: 13,
                    ESC: 27,
                    SPACE: 32,
                    LEFT: 37,
                    UP: 38,
                    RIGHT: 39,
                    DOWN: 40,
                    SHIFT: 16,
                    CTRL: 17,
                    ALT: 18,
                    PAGE_UP: 33,
                    PAGE_DOWN: 34,
                    HOME: 36,
                    END: 35,
                    BACKSPACE: 8,
                    DELETE: 46,
                    isArrow: function(k) {
                        switch (k = k.which ? k.which : k) {
                            case KEY.LEFT:
                            case KEY.RIGHT:
                            case KEY.UP:
                            case KEY.DOWN:
                                return !0
                        }
                        return !1
                    },
                    isControl: function(e) {
                        var k = e.which;
                        switch (k) {
                            case KEY.SHIFT:
                            case KEY.CTRL:
                            case KEY.ALT:
                                return !0
                        }
                        return e.metaKey ? !0 : !1
                    },
                    isFunctionKey: function(k) {
                        return k = k.which ? k.which : k, k >= 112 && 123 >= k
                    }
                },
                MEASURE_SCROLLBAR_TEMPLATE = "<div class='select2-measure-scrollbar'></div>",
                DIACRITICS = {
                    "â’¶": "A",
                    "ï¼¡": "A",
                    "Ã€": "A",
                    "Ã": "A",
                    "Ã‚": "A",
                    "áº¦": "A",
                    "áº¤": "A",
                    "áºª": "A",
                    "áº¨": "A",
                    "Ãƒ": "A",
                    "Ä€": "A",
                    "Ä‚": "A",
                    "áº°": "A",
                    "áº®": "A",
                    "áº´": "A",
                    "áº²": "A",
                    "È¦": "A",
                    "Ç ": "A",
                    "Ã„": "A",
                    "Çž": "A",
                    "áº¢": "A",
                    "Ã…": "A",
                    "Çº": "A",
                    "Ç": "A",
                    "È€": "A",
                    "È‚": "A",
                    "áº ": "A",
                    "áº¬": "A",
                    "áº¶": "A",
                    "á¸€": "A",
                    "Ä„": "A",
                    "Èº": "A",
                    "â±¯": "A",
                    "êœ²": "AA",
                    "Ã†": "AE",
                    "Ç¼": "AE",
                    "Ç¢": "AE",
                    "êœ´": "AO",
                    "êœ¶": "AU",
                    "êœ¸": "AV",
                    "êœº": "AV",
                    "êœ¼": "AY",
                    "â’·": "B",
                    "ï¼¢": "B",
                    "á¸‚": "B",
                    "á¸„": "B",
                    "á¸†": "B",
                    "Éƒ": "B",
                    "Æ‚": "B",
                    "Æ": "B",
                    "â’¸": "C",
                    "ï¼£": "C",
                    "Ä†": "C",
                    "Äˆ": "C",
                    "ÄŠ": "C",
                    "ÄŒ": "C",
                    "Ã‡": "C",
                    "á¸ˆ": "C",
                    "Æ‡": "C",
                    "È»": "C",
                    "êœ¾": "C",
                    "â’¹": "D",
                    "ï¼¤": "D",
                    "á¸Š": "D",
                    "ÄŽ": "D",
                    "á¸Œ": "D",
                    "á¸": "D",
                    "á¸’": "D",
                    "á¸Ž": "D",
                    "Ä": "D",
                    "Æ‹": "D",
                    "ÆŠ": "D",
                    "Æ‰": "D",
                    "ê¹": "D",
                    "Ç±": "DZ",
                    "Ç„": "DZ",
                    "Ç²": "Dz",
                    "Ç…": "Dz",
                    "â’º": "E",
                    "ï¼¥": "E",
                    "Ãˆ": "E",
                    "Ã‰": "E",
                    "ÃŠ": "E",
                    "á»€": "E",
                    "áº¾": "E",
                    "á»„": "E",
                    "á»‚": "E",
                    "áº¼": "E",
                    "Ä’": "E",
                    "á¸”": "E",
                    "á¸–": "E",
                    "Ä”": "E",
                    "Ä–": "E",
                    "Ã‹": "E",
                    "áºº": "E",
                    "Äš": "E",
                    "È„": "E",
                    "È†": "E",
                    "áº¸": "E",
                    "á»†": "E",
                    "È¨": "E",
                    "á¸œ": "E",
                    "Ä˜": "E",
                    "á¸˜": "E",
                    "á¸š": "E",
                    "Æ": "E",
                    "ÆŽ": "E",
                    "â’»": "F",
                    "ï¼¦": "F",
                    "á¸ž": "F",
                    "Æ‘": "F",
                    "ê»": "F",
                    "â’¼": "G",
                    "ï¼§": "G",
                    "Ç´": "G",
                    "Äœ": "G",
                    "á¸ ": "G",
                    "Äž": "G",
                    "Ä ": "G",
                    "Ç¦": "G",
                    "Ä¢": "G",
                    "Ç¤": "G",
                    "Æ“": "G",
                    "êž ": "G",
                    "ê½": "G",
                    "ê¾": "G",
                    "â’½": "H",
                    "ï¼¨": "H",
                    "Ä¤": "H",
                    "á¸¢": "H",
                    "á¸¦": "H",
                    "Èž": "H",
                    "á¸¤": "H",
                    "á¸¨": "H",
                    "á¸ª": "H",
                    "Ä¦": "H",
                    "â±§": "H",
                    "â±µ": "H",
                    "êž": "H",
                    "â’¾": "I",
                    "ï¼©": "I",
                    "ÃŒ": "I",
                    "Ã": "I",
                    "ÃŽ": "I",
                    "Ä¨": "I",
                    "Äª": "I",
                    "Ä¬": "I",
                    "Ä°": "I",
                    "Ã": "I",
                    "á¸®": "I",
                    "á»ˆ": "I",
                    "Ç": "I",
                    "Èˆ": "I",
                    "ÈŠ": "I",
                    "á»Š": "I",
                    "Ä®": "I",
                    "á¸¬": "I",
                    "Æ—": "I",
                    "â’¿": "J",
                    "ï¼ª": "J",
                    "Ä´": "J",
                    "Éˆ": "J",
                    "â“€": "K",
                    "ï¼«": "K",
                    "á¸°": "K",
                    "Ç¨": "K",
                    "á¸²": "K",
                    "Ä¶": "K",
                    "á¸´": "K",
                    "Æ˜": "K",
                    "â±©": "K",
                    "ê€": "K",
                    "ê‚": "K",
                    "ê„": "K",
                    "êž¢": "K",
                    "â“": "L",
                    "ï¼¬": "L",
                    "Ä¿": "L",
                    "Ä¹": "L",
                    "Ä½": "L",
                    "á¸¶": "L",
                    "á¸¸": "L",
                    "Ä»": "L",
                    "á¸¼": "L",
                    "á¸º": "L",
                    "Å": "L",
                    "È½": "L",
                    "â±¢": "L",
                    "â± ": "L",
                    "êˆ": "L",
                    "ê†": "L",
                    "êž€": "L",
                    "Ç‡": "LJ",
                    "Çˆ": "Lj",
                    "â“‚": "M",
                    "ï¼­": "M",
                    "á¸¾": "M",
                    "á¹€": "M",
                    "á¹‚": "M",
                    "â±®": "M",
                    "Æœ": "M",
                    "â“ƒ": "N",
                    "ï¼®": "N",
                    "Ç¸": "N",
                    "Åƒ": "N",
                    "Ã‘": "N",
                    "á¹„": "N",
                    "Å‡": "N",
                    "á¹†": "N",
                    "Å…": "N",
                    "á¹Š": "N",
                    "á¹ˆ": "N",
                    "È ": "N",
                    "Æ": "N",
                    "êž": "N",
                    "êž¤": "N",
                    "ÇŠ": "NJ",
                    "Ç‹": "Nj",
                    "â“„": "O",
                    "ï¼¯": "O",
                    "Ã’": "O",
                    "Ã“": "O",
                    "Ã”": "O",
                    "á»’": "O",
                    "á»": "O",
                    "á»–": "O",
                    "á»”": "O",
                    "Ã•": "O",
                    "á¹Œ": "O",
                    "È¬": "O",
                    "á¹Ž": "O",
                    "ÅŒ": "O",
                    "á¹": "O",
                    "á¹’": "O",
                    "ÅŽ": "O",
                    "È®": "O",
                    "È°": "O",
                    "Ã–": "O",
                    "Èª": "O",
                    "á»Ž": "O",
                    "Å": "O",
                    "Ç‘": "O",
                    "ÈŒ": "O",
                    "ÈŽ": "O",
                    "Æ ": "O",
                    "á»œ": "O",
                    "á»š": "O",
                    "á» ": "O",
                    "á»ž": "O",
                    "á»¢": "O",
                    "á»Œ": "O",
                    "á»˜": "O",
                    "Çª": "O",
                    "Ç¬": "O",
                    "Ã˜": "O",
                    "Ç¾": "O",
                    "Æ†": "O",
                    "ÆŸ": "O",
                    "êŠ": "O",
                    "êŒ": "O",
                    "Æ¢": "OI",
                    "êŽ": "OO",
                    "È¢": "OU",
                    "â“…": "P",
                    "ï¼°": "P",
                    "á¹”": "P",
                    "á¹–": "P",
                    "Æ¤": "P",
                    "â±£": "P",
                    "ê": "P",
                    "ê’": "P",
                    "ê”": "P",
                    "â“†": "Q",
                    "ï¼±": "Q",
                    "ê–": "Q",
                    "ê˜": "Q",
                    "ÉŠ": "Q",
                    "â“‡": "R",
                    "ï¼²": "R",
                    "Å”": "R",
                    "á¹˜": "R",
                    "Å˜": "R",
                    "È": "R",
                    "È’": "R",
                    "á¹š": "R",
                    "á¹œ": "R",
                    "Å–": "R",
                    "á¹ž": "R",
                    "ÉŒ": "R",
                    "â±¤": "R",
                    "êš": "R",
                    "êž¦": "R",
                    "êž‚": "R",
                    "â“ˆ": "S",
                    "ï¼³": "S",
                    "áºž": "S",
                    "Åš": "S",
                    "á¹¤": "S",
                    "Åœ": "S",
                    "á¹ ": "S",
                    "Å ": "S",
                    "á¹¦": "S",
                    "á¹¢": "S",
                    "á¹¨": "S",
                    "È˜": "S",
                    "Åž": "S",
                    "â±¾": "S",
                    "êž¨": "S",
                    "êž„": "S",
                    "â“‰": "T",
                    "ï¼´": "T",
                    "á¹ª": "T",
                    "Å¤": "T",
                    "á¹¬": "T",
                    "Èš": "T",
                    "Å¢": "T",
                    "á¹°": "T",
                    "á¹®": "T",
                    "Å¦": "T",
                    "Æ¬": "T",
                    "Æ®": "T",
                    "È¾": "T",
                    "êž†": "T",
                    "êœ¨": "TZ",
                    "â“Š": "U",
                    "ï¼µ": "U",
                    "Ã™": "U",
                    "Ãš": "U",
                    "Ã›": "U",
                    "Å¨": "U",
                    "á¹¸": "U",
                    "Åª": "U",
                    "á¹º": "U",
                    "Å¬": "U",
                    "Ãœ": "U",
                    "Ç›": "U",
                    "Ç—": "U",
                    "Ç•": "U",
                    "Ç™": "U",
                    "á»¦": "U",
                    "Å®": "U",
                    "Å°": "U",
                    "Ç“": "U",
                    "È”": "U",
                    "È–": "U",
                    "Æ¯": "U",
                    "á»ª": "U",
                    "á»¨": "U",
                    "á»®": "U",
                    "á»¬": "U",
                    "á»°": "U",
                    "á»¤": "U",
                    "á¹²": "U",
                    "Å²": "U",
                    "á¹¶": "U",
                    "á¹´": "U",
                    "É„": "U",
                    "â“‹": "V",
                    "ï¼¶": "V",
                    "á¹¼": "V",
                    "á¹¾": "V",
                    "Æ²": "V",
                    "êž": "V",
                    "É…": "V",
                    "ê ": "VY",
                    "â“Œ": "W",
                    "ï¼·": "W",
                    "áº€": "W",
                    "áº‚": "W",
                    "Å´": "W",
                    "áº†": "W",
                    "áº„": "W",
                    "áºˆ": "W",
                    "â±²": "W",
                    "â“": "X",
                    "ï¼¸": "X",
                    "áºŠ": "X",
                    "áºŒ": "X",
                    "â“Ž": "Y",
                    "ï¼¹": "Y",
                    "á»²": "Y",
                    "Ã": "Y",
                    "Å¶": "Y",
                    "á»¸": "Y",
                    "È²": "Y",
                    "áºŽ": "Y",
                    "Å¸": "Y",
                    "á»¶": "Y",
                    "á»´": "Y",
                    "Æ³": "Y",
                    "ÉŽ": "Y",
                    "á»¾": "Y",
                    "â“": "Z",
                    "ï¼º": "Z",
                    "Å¹": "Z",
                    "áº": "Z",
                    "Å»": "Z",
                    "Å½": "Z",
                    "áº’": "Z",
                    "áº”": "Z",
                    "Æµ": "Z",
                    "È¤": "Z",
                    "â±¿": "Z",
                    "â±«": "Z",
                    "ê¢": "Z",
                    "â“": "a",
                    "ï½": "a",
                    "áºš": "a",
                    "Ã ": "a",
                    "Ã¡": "a",
                    "Ã¢": "a",
                    "áº§": "a",
                    "áº¥": "a",
                    "áº«": "a",
                    "áº©": "a",
                    "Ã£": "a",
                    "Ä": "a",
                    "Äƒ": "a",
                    "áº±": "a",
                    "áº¯": "a",
                    "áºµ": "a",
                    "áº³": "a",
                    "È§": "a",
                    "Ç¡": "a",
                    "Ã¤": "a",
                    "ÇŸ": "a",
                    "áº£": "a",
                    "Ã¥": "a",
                    "Ç»": "a",
                    "ÇŽ": "a",
                    "È": "a",
                    "Èƒ": "a",
                    "áº¡": "a",
                    "áº­": "a",
                    "áº·": "a",
                    "á¸": "a",
                    "Ä…": "a",
                    "â±¥": "a",
                    "É": "a",
                    "êœ³": "aa",
                    "Ã¦": "ae",
                    "Ç½": "ae",
                    "Ç£": "ae",
                    "êœµ": "ao",
                    "êœ·": "au",
                    "êœ¹": "av",
                    "êœ»": "av",
                    "êœ½": "ay",
                    "â“‘": "b",
                    "ï½‚": "b",
                    "á¸ƒ": "b",
                    "á¸…": "b",
                    "á¸‡": "b",
                    "Æ€": "b",
                    "Æƒ": "b",
                    "É“": "b",
                    "â“’": "c",
                    "ï½ƒ": "c",
                    "Ä‡": "c",
                    "Ä‰": "c",
                    "Ä‹": "c",
                    "Ä": "c",
                    "Ã§": "c",
                    "á¸‰": "c",
                    "Æˆ": "c",
                    "È¼": "c",
                    "êœ¿": "c",
                    "â†„": "c",
                    "â““": "d",
                    "ï½„": "d",
                    "á¸‹": "d",
                    "Ä": "d",
                    "á¸": "d",
                    "á¸‘": "d",
                    "á¸“": "d",
                    "á¸": "d",
                    "Ä‘": "d",
                    "ÆŒ": "d",
                    "É–": "d",
                    "É—": "d",
                    "êº": "d",
                    "Ç³": "dz",
                    "Ç†": "dz",
                    "â“”": "e",
                    "ï½…": "e",
                    "Ã¨": "e",
                    "Ã©": "e",
                    "Ãª": "e",
                    "á»": "e",
                    "áº¿": "e",
                    "á»…": "e",
                    "á»ƒ": "e",
                    "áº½": "e",
                    "Ä“": "e",
                    "á¸•": "e",
                    "á¸—": "e",
                    "Ä•": "e",
                    "Ä—": "e",
                    "Ã«": "e",
                    "áº»": "e",
                    "Ä›": "e",
                    "È…": "e",
                    "È‡": "e",
                    "áº¹": "e",
                    "á»‡": "e",
                    "È©": "e",
                    "á¸": "e",
                    "Ä™": "e",
                    "á¸™": "e",
                    "á¸›": "e",
                    "É‡": "e",
                    "É›": "e",
                    "Ç": "e",
                    "â“•": "f",
                    "ï½†": "f",
                    "á¸Ÿ": "f",
                    "Æ’": "f",
                    "ê¼": "f",
                    "â“–": "g",
                    "ï½‡": "g",
                    "Çµ": "g",
                    "Ä": "g",
                    "á¸¡": "g",
                    "ÄŸ": "g",
                    "Ä¡": "g",
                    "Ç§": "g",
                    "Ä£": "g",
                    "Ç¥": "g",
                    "É ": "g",
                    "êž¡": "g",
                    "áµ¹": "g",
                    "ê¿": "g",
                    "â“—": "h",
                    "ï½ˆ": "h",
                    "Ä¥": "h",
                    "á¸£": "h",
                    "á¸§": "h",
                    "ÈŸ": "h",
                    "á¸¥": "h",
                    "á¸©": "h",
                    "á¸«": "h",
                    "áº–": "h",
                    "Ä§": "h",
                    "â±¨": "h",
                    "â±¶": "h",
                    "É¥": "h",
                    "Æ•": "hv",
                    "â“˜": "i",
                    "ï½‰": "i",
                    "Ã¬": "i",
                    "Ã­": "i",
                    "Ã®": "i",
                    "Ä©": "i",
                    "Ä«": "i",
                    "Ä­": "i",
                    "Ã¯": "i",
                    "á¸¯": "i",
                    "á»‰": "i",
                    "Ç": "i",
                    "È‰": "i",
                    "È‹": "i",
                    "á»‹": "i",
                    "Ä¯": "i",
                    "á¸­": "i",
                    "É¨": "i",
                    "Ä±": "i",
                    "â“™": "j",
                    "ï½Š": "j",
                    "Äµ": "j",
                    "Ç°": "j",
                    "É‰": "j",
                    "â“š": "k",
                    "ï½‹": "k",
                    "á¸±": "k",
                    "Ç©": "k",
                    "á¸³": "k",
                    "Ä·": "k",
                    "á¸µ": "k",
                    "Æ™": "k",
                    "â±ª": "k",
                    "ê": "k",
                    "êƒ": "k",
                    "ê…": "k",
                    "êž£": "k",
                    "â“›": "l",
                    "ï½Œ": "l",
                    "Å€": "l",
                    "Äº": "l",
                    "Ä¾": "l",
                    "á¸·": "l",
                    "á¸¹": "l",
                    "Ä¼": "l",
                    "á¸½": "l",
                    "á¸»": "l",
                    "Å¿": "l",
                    "Å‚": "l",
                    "Æš": "l",
                    "É«": "l",
                    "â±¡": "l",
                    "ê‰": "l",
                    "êž": "l",
                    "ê‡": "l",
                    "Ç‰": "lj",
                    "â“œ": "m",
                    "ï½": "m",
                    "á¸¿": "m",
                    "á¹": "m",
                    "á¹ƒ": "m",
                    "É±": "m",
                    "É¯": "m",
                    "â“": "n",
                    "ï½Ž": "n",
                    "Ç¹": "n",
                    "Å„": "n",
                    "Ã±": "n",
                    "á¹…": "n",
                    "Åˆ": "n",
                    "á¹‡": "n",
                    "Å†": "n",
                    "á¹‹": "n",
                    "á¹‰": "n",
                    "Æž": "n",
                    "É²": "n",
                    "Å‰": "n",
                    "êž‘": "n",
                    "êž¥": "n",
                    "ÇŒ": "nj",
                    "â“ž": "o",
                    "ï½": "o",
                    "Ã²": "o",
                    "Ã³": "o",
                    "Ã´": "o",
                    "á»“": "o",
                    "á»‘": "o",
                    "á»—": "o",
                    "á»•": "o",
                    "Ãµ": "o",
                    "á¹": "o",
                    "È­": "o",
                    "á¹": "o",
                    "Å": "o",
                    "á¹‘": "o",
                    "á¹“": "o",
                    "Å": "o",
                    "È¯": "o",
                    "È±": "o",
                    "Ã¶": "o",
                    "È«": "o",
                    "á»": "o",
                    "Å‘": "o",
                    "Ç’": "o",
                    "È": "o",
                    "È": "o",
                    "Æ¡": "o",
                    "á»": "o",
                    "á»›": "o",
                    "á»¡": "o",
                    "á»Ÿ": "o",
                    "á»£": "o",
                    "á»": "o",
                    "á»™": "o",
                    "Ç«": "o",
                    "Ç­": "o",
                    "Ã¸": "o",
                    "Ç¿": "o",
                    "É”": "o",
                    "ê‹": "o",
                    "ê": "o",
                    "Éµ": "o",
                    "Æ£": "oi",
                    "È£": "ou",
                    "ê": "oo",
                    "â“Ÿ": "p",
                    "ï½": "p",
                    "á¹•": "p",
                    "á¹—": "p",
                    "Æ¥": "p",
                    "áµ½": "p",
                    "ê‘": "p",
                    "ê“": "p",
                    "ê•": "p",
                    "â“ ": "q",
                    "ï½‘": "q",
                    "É‹": "q",
                    "ê—": "q",
                    "ê™": "q",
                    "â“¡": "r",
                    "ï½’": "r",
                    "Å•": "r",
                    "á¹™": "r",
                    "Å™": "r",
                    "È‘": "r",
                    "È“": "r",
                    "á¹›": "r",
                    "á¹": "r",
                    "Å—": "r",
                    "á¹Ÿ": "r",
                    "É": "r",
                    "É½": "r",
                    "ê›": "r",
                    "êž§": "r",
                    "êžƒ": "r",
                    "â“¢": "s",
                    "ï½“": "s",
                    "ÃŸ": "s",
                    "Å›": "s",
                    "á¹¥": "s",
                    "Å": "s",
                    "á¹¡": "s",
                    "Å¡": "s",
                    "á¹§": "s",
                    "á¹£": "s",
                    "á¹©": "s",
                    "È™": "s",
                    "ÅŸ": "s",
                    "È¿": "s",
                    "êž©": "s",
                    "êž…": "s",
                    "áº›": "s",
                    "â“£": "t",
                    "ï½”": "t",
                    "á¹«": "t",
                    "áº—": "t",
                    "Å¥": "t",
                    "á¹­": "t",
                    "È›": "t",
                    "Å£": "t",
                    "á¹±": "t",
                    "á¹¯": "t",
                    "Å§": "t",
                    "Æ­": "t",
                    "Êˆ": "t",
                    "â±¦": "t",
                    "êž‡": "t",
                    "êœ©": "tz",
                    "â“¤": "u",
                    "ï½•": "u",
                    "Ã¹": "u",
                    "Ãº": "u",
                    "Ã»": "u",
                    "Å©": "u",
                    "á¹¹": "u",
                    "Å«": "u",
                    "á¹»": "u",
                    "Å­": "u",
                    "Ã¼": "u",
                    "Çœ": "u",
                    "Ç˜": "u",
                    "Ç–": "u",
                    "Çš": "u",
                    "á»§": "u",
                    "Å¯": "u",
                    "Å±": "u",
                    "Ç”": "u",
                    "È•": "u",
                    "È—": "u",
                    "Æ°": "u",
                    "á»«": "u",
                    "á»©": "u",
                    "á»¯": "u",
                    "á»­": "u",
                    "á»±": "u",
                    "á»¥": "u",
                    "á¹³": "u",
                    "Å³": "u",
                    "á¹·": "u",
                    "á¹µ": "u",
                    "Ê‰": "u",
                    "â“¥": "v",
                    "ï½–": "v",
                    "á¹½": "v",
                    "á¹¿": "v",
                    "Ê‹": "v",
                    "êŸ": "v",
                    "ÊŒ": "v",
                    "ê¡": "vy",
                    "â“¦": "w",
                    "ï½—": "w",
                    "áº": "w",
                    "áºƒ": "w",
                    "Åµ": "w",
                    "áº‡": "w",
                    "áº…": "w",
                    "áº˜": "w",
                    "áº‰": "w",
                    "â±³": "w",
                    "â“§": "x",
                    "ï½˜": "x",
                    "áº‹": "x",
                    "áº": "x",
                    "â“¨": "y",
                    "ï½™": "y",
                    "á»³": "y",
                    "Ã½": "y",
                    "Å·": "y",
                    "á»¹": "y",
                    "È³": "y",
                    "áº": "y",
                    "Ã¿": "y",
                    "á»·": "y",
                    "áº™": "y",
                    "á»µ": "y",
                    "Æ´": "y",
                    "É": "y",
                    "á»¿": "y",
                    "â“©": "z",
                    "ï½š": "z",
                    "Åº": "z",
                    "áº‘": "z",
                    "Å¼": "z",
                    "Å¾": "z",
                    "áº“": "z",
                    "áº•": "z",
                    "Æ¶": "z",
                    "È¥": "z",
                    "É€": "z",
                    "â±¬": "z",
                    "ê£": "z",
                    "Î†": "Î‘",
                    "Îˆ": "Î•",
                    "Î‰": "Î—",
                    "ÎŠ": "Î™",
                    "Îª": "Î™",
                    "ÎŒ": "ÎŸ",
                    "ÎŽ": "Î¥",
                    "Î«": "Î¥",
                    "Î": "Î©",
                    "Î¬": "Î±",
                    "Î­": "Îµ",
                    "Î®": "Î·",
                    "Î¯": "Î¹",
                    "ÏŠ": "Î¹",
                    "Î": "Î¹",
                    "ÏŒ": "Î¿",
                    "Ï": "Ï…",
                    "Ï‹": "Ï…",
                    "Î°": "Ï…",
                    "Ï‰": "Ï‰",
                    "Ï‚": "Ïƒ"
                };
            $document = $(document), nextUid = function() {
                var counter = 1;
                return function() {
                    return counter++
                }
            }(), AbstractSelect2 = clazz(Object, {
                bind: function(func) {
                    var self = this;
                    return function() {
                        func.apply(self, arguments)
                    }
                },
                init: function(opts) {
                    var results, search, resultsSelector = ".select2-results";
                    this.opts = opts = this.prepareOpts(opts), this.id = opts.id, opts.element.data("select2") !== undefined && null !== opts.element.data("select2") && opts.element.data("select2").destroy(), this.container = this.createContainer(), this.liveRegion = $("<span>", {
                        role: "status",
                        "aria-live": "polite"
                    }).addClass("select2-hidden-accessible").appendTo(document.body), this.containerId = "s2id_" + (opts.element.attr("id") || "autogen" + nextUid()), this.containerEventName = this.containerId.replace(/([.])/g, "_").replace(/([;&,\-\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g, "\\$1"), this.container.attr("id", this.containerId), this.container.attr("title", opts.element.attr("title")), this.body = $("body"), syncCssClasses(this.container, this.opts.element, this.opts.adaptContainerCssClass), this.container.attr("style", opts.element.attr("style")), this.container.css(evaluate(opts.containerCss, this.opts.element)), this.container.addClass(evaluate(opts.containerCssClass, this.opts.element)), this.elementTabIndex = this.opts.element.attr("tabindex"), this.opts.element.data("select2", this).attr("tabindex", "-1").before(this.container).on("click.select2", killEvent), this.container.data("select2", this), this.dropdown = this.container.find(".select2-drop"), syncCssClasses(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass), this.dropdown.addClass(evaluate(opts.dropdownCssClass, this.opts.element)), this.dropdown.data("select2", this), this.dropdown.on("click", killEvent), this.results = results = this.container.find(resultsSelector), this.search = search = this.container.find("input.select2-input"), this.queryCount = 0, this.resultsPage = 0, this.context = null, this.initContainer(), this.container.on("click", killEvent), installFilteredMouseMove(this.results), this.dropdown.on("mousemove-filtered", resultsSelector, this.bind(this.highlightUnderEvent)), this.dropdown.on("touchstart touchmove touchend", resultsSelector, this.bind(function(event) {
                        this._touchEvent = !0, this.highlightUnderEvent(event)
                    })), this.dropdown.on("touchmove", resultsSelector, this.bind(this.touchMoved)), this.dropdown.on("touchstart touchend", resultsSelector, this.bind(this.clearTouchMoved)), this.dropdown.on("click", this.bind(function() {
                        this._touchEvent && (this._touchEvent = !1, this.selectHighlighted())
                    })), installDebouncedScroll(80, this.results), this.dropdown.on("scroll-debounced", resultsSelector, this.bind(this.loadMoreIfNeeded)), $(this.container).on("change", ".select2-input", function(e) {
                        e.stopPropagation()
                    }), $(this.dropdown).on("change", ".select2-input", function(e) {
                        e.stopPropagation()
                    }), $.fn.mousewheel && results.mousewheel(function(e, delta, deltaX, deltaY) {
                        var top = results.scrollTop();
                        deltaY > 0 && 0 >= top - deltaY ? (results.scrollTop(0), killEvent(e)) : 0 > deltaY && results.get(0).scrollHeight - results.scrollTop() + deltaY <= results.height() && (results.scrollTop(results.get(0).scrollHeight - results.height()), killEvent(e))
                    }), installKeyUpChangeEvent(search), search.on("keyup-change input paste", this.bind(this.updateResults)), search.on("focus", function() {
                        search.addClass("select2-focused")
                    }), search.on("blur", function() {
                        search.removeClass("select2-focused")
                    }), this.dropdown.on("mouseup", resultsSelector, this.bind(function(e) {
                        $(e.target).closest(".select2-result-selectable").length > 0 && (this.highlightUnderEvent(e), this.selectHighlighted(e))
                    })), this.dropdown.on("click mouseup mousedown touchstart touchend focusin", function(e) {
                        e.stopPropagation()
                    }), this.nextSearchTerm = undefined, $.isFunction(this.opts.initSelection) && (this.initSelection(), this.monitorSource()), null !== opts.maximumInputLength && this.search.attr("maxlength", opts.maximumInputLength);
                    var disabled = opts.element.prop("disabled");
                    disabled === undefined && (disabled = !1), this.enable(!disabled);
                    var readonly = opts.element.prop("readonly");
                    readonly === undefined && (readonly = !1), this.readonly(readonly), scrollBarDimensions = scrollBarDimensions || measureScrollbar(), this.autofocus = opts.element.prop("autofocus"), opts.element.prop("autofocus", !1), this.autofocus && this.focus(), this.search.attr("placeholder", opts.searchInputPlaceholder)
                },
                destroy: function() {
                    var element = this.opts.element,
                        select2 = element.data("select2"),
                        self = this;
                    this.close(), element.length && element[0].detachEvent && self._sync && element.each(function() {
                        this.detachEvent("onpropertychange", self._sync)
                    }), this.propertyObserver && (this.propertyObserver.disconnect(), this.propertyObserver = null), this._sync = null, select2 !== undefined && (select2.container.remove(), select2.liveRegion.remove(), select2.dropdown.remove(), element.removeClass("select2-offscreen").removeData("select2").off(".select2").prop("autofocus", this.autofocus || !1), this.elementTabIndex ? element.attr({
                        tabindex: this.elementTabIndex
                    }) : element.removeAttr("tabindex"), element.show()), cleanupJQueryElements.call(this, "container", "liveRegion", "dropdown", "results", "search")
                },
                optionToData: function(element) {
                    return element.is("option") ? {
                        id: element.prop("value"),
                        text: element.text(),
                        element: element.get(),
                        css: element.attr("class"),
                        disabled: element.prop("disabled"),
                        locked: equal(element.attr("locked"), "locked") || equal(element.data("locked"), !0)
                    } : element.is("optgroup") ? {
                        text: element.attr("label"),
                        children: [],
                        element: element.get(),
                        css: element.attr("class")
                    } : void 0
                },
                prepareOpts: function(opts) {
                    var element, select, idKey, ajaxUrl, self = this;
                    if (element = opts.element, "select" === element.get(0).tagName.toLowerCase() && (this.select = select = opts.element), select && $.each(["id", "multiple", "ajax", "query", "createSearchChoice", "initSelection", "data", "tags"], function() {
                            if (this in opts) throw new Error("Option '" + this + "' is not allowed for Select2 when attached to a <select> element.")
                        }), opts = $.extend({}, {
                            populateResults: function(container, results, query) {
                                var populate, id = this.opts.id,
                                    liveRegion = this.liveRegion;
                                (populate = function(results, container, depth) {
                                    var i, l, result, selectable, disabled, compound, node, label, innerContainer, formatted;
                                    results = opts.sortResults(results, container, query);
                                    var nodes = [];
                                    for (i = 0, l = results.length; l > i; i += 1) result = results[i], disabled = result.disabled === !0, selectable = !disabled && id(result) !== undefined, compound = result.children && result.children.length > 0, node = $("<li></li>"), node.addClass("select2-results-dept-" + depth), node.addClass("select2-result"), node.addClass(selectable ? "select2-result-selectable" : "select2-result-unselectable"), disabled && node.addClass("select2-disabled"), compound && node.addClass("select2-result-with-children"), node.addClass(self.opts.formatResultCssClass(result)), node.attr("role", "presentation"), label = $(document.createElement("div")), label.addClass("select2-result-label"), label.attr("id", "select2-result-label-" + nextUid()), label.attr("role", "option"), formatted = opts.formatResult(result, label, query, self.opts.escapeMarkup), formatted !== undefined && (label.html(formatted), node.append(label)), compound && (innerContainer = $("<ul></ul>"), innerContainer.addClass("select2-result-sub"), populate(result.children, innerContainer, depth + 1), node.append(innerContainer)), node.data("select2-data", result), nodes.push(node[0]);
                                    container.append(nodes), liveRegion.text(opts.formatMatches(results.length))
                                })(results, container, 0)
                            }
                        }, $.fn.select2.defaults, opts), "function" != typeof opts.id && (idKey = opts.id, opts.id = function(e) {
                            return e[idKey]
                        }), $.isArray(opts.element.data("select2Tags"))) {
                        if ("tags" in opts) throw "tags specified as both an attribute 'data-select2-tags' and in options of Select2 " + opts.element.attr("id");
                        opts.tags = opts.element.data("select2Tags")
                    }
                    if (select ? (opts.query = this.bind(function(query) {
                            var children, placeholderOption, process, data = {
                                    results: [],
                                    more: !1
                                },
                                term = query.term;
                            process = function(element, collection) {
                                var group;
                                element.is("option") ? query.matcher(term, element.text(), element) && collection.push(self.optionToData(element)) : element.is("optgroup") && (group = self.optionToData(element), element.children().each2(function(i, elm) {
                                    process(elm, group.children)
                                }), group.children.length > 0 && collection.push(group))
                            }, children = element.children(), this.getPlaceholder() !== undefined && children.length > 0 && (placeholderOption = this.getPlaceholderOption(), placeholderOption && (children = children.not(placeholderOption))), children.each2(function(i, elm) {
                                process(elm, data.results)
                            }), query.callback(data)
                        }), opts.id = function(e) {
                            return e.id
                        }) : "query" in opts || ("ajax" in opts ? (ajaxUrl = opts.element.data("ajax-url"), ajaxUrl && ajaxUrl.length > 0 && (opts.ajax.url = ajaxUrl), opts.query = ajax.call(opts.element, opts.ajax)) : "data" in opts ? opts.query = local(opts.data) : "tags" in opts && (opts.query = tags(opts.tags), opts.createSearchChoice === undefined && (opts.createSearchChoice = function(term) {
                            return {
                                id: $.trim(term),
                                text: $.trim(term)
                            }
                        }), opts.initSelection === undefined && (opts.initSelection = function(element, callback) {
                            var data = [];
                            $(splitVal(element.val(), opts.separator)).each(function() {
                                var obj = {
                                        id: this,
                                        text: this
                                    },
                                    tags = opts.tags;
                                $.isFunction(tags) && (tags = tags()), $(tags).each(function() {
                                    return equal(this.id, obj.id) ? (obj = this, !1) : void 0
                                }), data.push(obj)
                            }), callback(data)
                        }))), "function" != typeof opts.query) throw "query function not defined for Select2 " + opts.element.attr("id");
                    if ("top" === opts.createSearchChoicePosition) opts.createSearchChoicePosition = function(list, item) {
                        list.unshift(item)
                    };
                    else if ("bottom" === opts.createSearchChoicePosition) opts.createSearchChoicePosition = function(list, item) {
                        list.push(item)
                    };
                    else if ("function" != typeof opts.createSearchChoicePosition) throw "invalid createSearchChoicePosition option must be 'top', 'bottom' or a custom function";
                    return opts
                },
                monitorSource: function() {
                    var observer, el = this.opts.element,
                        self = this;
                    el.on("change.select2", this.bind(function() {
                        this.opts.element.data("select2-change-triggered") !== !0 && this.initSelection()
                    })), this._sync = this.bind(function() {
                        var disabled = el.prop("disabled");
                        disabled === undefined && (disabled = !1), this.enable(!disabled);
                        var readonly = el.prop("readonly");
                        readonly === undefined && (readonly = !1), this.readonly(readonly), syncCssClasses(this.container, this.opts.element, this.opts.adaptContainerCssClass), this.container.addClass(evaluate(this.opts.containerCssClass, this.opts.element)), syncCssClasses(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass), this.dropdown.addClass(evaluate(this.opts.dropdownCssClass, this.opts.element))
                    }), el.length && el[0].attachEvent && el.each(function() {
                        this.attachEvent("onpropertychange", self._sync)
                    }), observer = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver, observer !== undefined && (this.propertyObserver && (delete this.propertyObserver, this.propertyObserver = null), this.propertyObserver = new observer(function(mutations) {
                        $.each(mutations, self._sync)
                    }), this.propertyObserver.observe(el.get(0), {
                        attributes: !0,
                        subtree: !1
                    }))
                },
                triggerSelect: function(data) {
                    var evt = $.Event("select2-selecting", {
                        val: this.id(data),
                        object: data,
                        choice: data
                    });
                    return this.opts.element.trigger(evt), !evt.isDefaultPrevented()
                },
                triggerChange: function(details) {
                    details = details || {}, details = $.extend({}, details, {
                        type: "change",
                        val: this.val()
                    }), this.opts.element.data("select2-change-triggered", !0), this.opts.element.trigger(details), this.opts.element.data("select2-change-triggered", !1), this.opts.element.click(), this.opts.blurOnChange && this.opts.element.blur()
                },
                isInterfaceEnabled: function() {
                    return this.enabledInterface === !0
                },
                enableInterface: function() {
                    var enabled = this._enabled && !this._readonly,
                        disabled = !enabled;
                    return enabled === this.enabledInterface ? !1 : (this.container.toggleClass("select2-container-disabled", disabled), this.close(), this.enabledInterface = enabled, !0)
                },
                enable: function(enabled) {
                    enabled === undefined && (enabled = !0), this._enabled !== enabled && (this._enabled = enabled, this.opts.element.prop("disabled", !enabled), this.enableInterface())
                },
                disable: function() {
                    this.enable(!1)
                },
                readonly: function(enabled) {
                    enabled === undefined && (enabled = !1), this._readonly !== enabled && (this._readonly = enabled, this.opts.element.prop("readonly", enabled), this.enableInterface())
                },
                opened: function() {
                    return this.container ? this.container.hasClass("select2-dropdown-open") : !1
                },
                positionDropdown: function() {
                    var bodyOffset, above, changeDirection, css, resultsListNode, $dropdown = this.dropdown,
                        offset = this.container.offset(),
                        height = this.container.outerHeight(!1),
                        width = this.container.outerWidth(!1),
                        dropHeight = $dropdown.outerHeight(!1),
                        $window = $(window),
                        windowWidth = $window.width(),
                        windowHeight = $window.height(),
                        viewPortRight = $window.scrollLeft() + windowWidth,
                        viewportBottom = $window.scrollTop() + windowHeight,
                        dropTop = offset.top + height,
                        dropLeft = offset.left,
                        enoughRoomBelow = viewportBottom >= dropTop + dropHeight,
                        enoughRoomAbove = offset.top - dropHeight >= $window.scrollTop(),
                        dropWidth = $dropdown.outerWidth(!1),
                        enoughRoomOnRight = viewPortRight >= dropLeft + dropWidth,
                        aboveNow = $dropdown.hasClass("select2-drop-above");
                    aboveNow ? (above = !0, !enoughRoomAbove && enoughRoomBelow && (changeDirection = !0, above = !1)) : (above = !1, !enoughRoomBelow && enoughRoomAbove && (changeDirection = !0, above = !0)), changeDirection && ($dropdown.hide(), offset = this.container.offset(), height = this.container.outerHeight(!1), width = this.container.outerWidth(!1), dropHeight = $dropdown.outerHeight(!1), viewPortRight = $window.scrollLeft() + windowWidth, viewportBottom = $window.scrollTop() + windowHeight, dropTop = offset.top + height, dropLeft = offset.left, dropWidth = $dropdown.outerWidth(!1), enoughRoomOnRight = viewPortRight >= dropLeft + dropWidth, $dropdown.show(), this.focusSearch()), this.opts.dropdownAutoWidth ? (resultsListNode = $(".select2-results", $dropdown)[0], $dropdown.addClass("select2-drop-auto-width"), $dropdown.css("width", ""), dropWidth = $dropdown.outerWidth(!1) + (resultsListNode.scrollHeight === resultsListNode.clientHeight ? 0 : scrollBarDimensions.width), dropWidth > width ? width = dropWidth : dropWidth = width, dropHeight = $dropdown.outerHeight(!1), enoughRoomOnRight = viewPortRight >= dropLeft + dropWidth) : this.container.removeClass("select2-drop-auto-width"), "static" !== this.body.css("position") && (bodyOffset = this.body.offset(), dropTop -= bodyOffset.top, dropLeft -= bodyOffset.left), enoughRoomOnRight || (dropLeft = offset.left + this.container.outerWidth(!1) - dropWidth), css = {
                        left: dropLeft,
                        width: width
                    }, above ? (css.top = offset.top - dropHeight, css.bottom = "auto", this.container.addClass("select2-drop-above"), $dropdown.addClass("select2-drop-above")) : (css.top = dropTop, css.bottom = "auto", this.container.removeClass("select2-drop-above"), $dropdown.removeClass("select2-drop-above")), css = $.extend(css, evaluate(this.opts.dropdownCss, this.opts.element)), $dropdown.css(css)
                },
                shouldOpen: function() {
                    var event;
                    return this.opened() ? !1 : this._enabled === !1 || this._readonly === !0 ? !1 : (event = $.Event("select2-opening"), this.opts.element.trigger(event), !event.isDefaultPrevented())
                },
                clearDropdownAlignmentPreference: function() {
                    this.container.removeClass("select2-drop-above"), this.dropdown.removeClass("select2-drop-above")
                },
                open: function() {
                    return this.shouldOpen() ? (this.opening(), $document.on("mousemove.select2Event", function(e) {
                        lastMousePosition.x = e.pageX, lastMousePosition.y = e.pageY
                    }), !0) : !1
                },
                opening: function() {
                    var mask, cid = this.containerEventName,
                        scroll = "scroll." + cid,
                        resize = "resize." + cid,
                        orient = "orientationchange." + cid;
                    this.container.addClass("select2-dropdown-open").addClass("select2-container-active"), this.clearDropdownAlignmentPreference(), this.dropdown[0] !== this.body.children().last()[0] && this.dropdown.detach().appendTo(this.body), mask = $("#select2-drop-mask"), 0 == mask.length && (mask = $(document.createElement("div")), mask.attr("id", "select2-drop-mask").attr("class", "select2-drop-mask"), mask.hide(), mask.appendTo(this.body), mask.on("mousedown touchstart click", function(e) {
                        reinsertElement(mask);
                        var self, dropdown = $("#select2-drop");
                        dropdown.length > 0 && (self = dropdown.data("select2"), self.opts.selectOnBlur && self.selectHighlighted({
                            noFocus: !0
                        }), self.close(), e.preventDefault(), e.stopPropagation())
                    })), this.dropdown.prev()[0] !== mask[0] && this.dropdown.before(mask), $("#select2-drop").removeAttr("id"), this.dropdown.attr("id", "select2-drop"), mask.show(), this.positionDropdown(), this.dropdown.show(), this.positionDropdown(), this.dropdown.addClass("select2-drop-active");
                    var that = this;
                    this.container.parents().add(window).each(function() {
                        $(this).on(resize + " " + scroll + " " + orient, function() {
                            that.opened() && that.positionDropdown()
                        })
                    })
                },
                close: function() {
                    if (this.opened()) {
                        var cid = this.containerEventName,
                            scroll = "scroll." + cid,
                            resize = "resize." + cid,
                            orient = "orientationchange." + cid;
                        this.container.parents().add(window).each(function() {
                            $(this).off(scroll).off(resize).off(orient)
                        }), this.clearDropdownAlignmentPreference(), $("#select2-drop-mask").hide(), this.dropdown.removeAttr("id"), this.dropdown.hide(), this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active"), this.results.empty(), $document.off("mousemove.select2Event"), this.clearSearch(), this.search.removeClass("select2-active"), this.opts.element.trigger($.Event("select2-close"))
                    }
                },
                externalSearch: function(term) {
                    this.open(), this.search.val(term), this.updateResults(!1)
                },
                clearSearch: function() {},
                getMaximumSelectionSize: function() {
                    return evaluate(this.opts.maximumSelectionSize, this.opts.element)
                },
                ensureHighlightVisible: function() {
                    var children, index, child, hb, rb, y, more, topOffset, results = this.results;
                    if (index = this.highlight(), !(0 > index)) {
                        if (0 == index) return void results.scrollTop(0);
                        children = this.findHighlightableChoices().find(".select2-result-label"), child = $(children[index]), topOffset = (child.offset() || {}).top || 0, hb = topOffset + child.outerHeight(!0), index === children.length - 1 && (more = results.find("li.select2-more-results"), more.length > 0 && (hb = more.offset().top + more.outerHeight(!0))), rb = results.offset().top + results.outerHeight(!0), hb > rb && results.scrollTop(results.scrollTop() + (hb - rb)), y = topOffset - results.offset().top, 0 > y && "none" != child.css("display") && results.scrollTop(results.scrollTop() + y)
                    }
                },
                findHighlightableChoices: function() {
                    return this.results.find(".select2-result-selectable:not(.select2-disabled):not(.select2-selected)")
                },
                moveHighlight: function(delta) {
                    for (var choices = this.findHighlightableChoices(), index = this.highlight(); index > -1 && index < choices.length;) {
                        index += delta;
                        var choice = $(choices[index]);
                        if (choice.hasClass("select2-result-selectable") && !choice.hasClass("select2-disabled") && !choice.hasClass("select2-selected")) {
                            this.highlight(index);
                            break
                        }
                    }
                },
                highlight: function(index) {
                    var choice, data, choices = this.findHighlightableChoices();
                    return 0 === arguments.length ? indexOf(choices.filter(".select2-highlighted")[0], choices.get()) : (index >= choices.length && (index = choices.length - 1), 0 > index && (index = 0), this.removeHighlight(), choice = $(choices[index]), choice.addClass("select2-highlighted"), this.search.attr("aria-activedescendant", choice.find(".select2-result-label").attr("id")), this.ensureHighlightVisible(), this.liveRegion.text(choice.text()), data = choice.data("select2-data"), void(data && this.opts.element.trigger({
                        type: "select2-highlight",
                        val: this.id(data),
                        choice: data
                    })))
                },
                removeHighlight: function() {
                    this.results.find(".select2-highlighted").removeClass("select2-highlighted")
                },
                touchMoved: function() {
                    this._touchMoved = !0
                },
                clearTouchMoved: function() {
                    this._touchMoved = !1
                },
                countSelectableResults: function() {
                    return this.findHighlightableChoices().length
                },
                highlightUnderEvent: function(event) {
                    var el = $(event.target).closest(".select2-result-selectable");
                    if (el.length > 0 && !el.is(".select2-highlighted")) {
                        var choices = this.findHighlightableChoices();
                        this.highlight(choices.index(el))
                    } else 0 == el.length && this.removeHighlight()
                },
                loadMoreIfNeeded: function() {
                    var below, results = this.results,
                        more = results.find("li.select2-more-results"),
                        page = this.resultsPage + 1,
                        self = this,
                        term = this.search.val(),
                        context = this.context;
                    0 !== more.length && (below = more.offset().top - results.offset().top - results.height(), below <= this.opts.loadMorePadding && (more.addClass("select2-active"), this.opts.query({
                        element: this.opts.element,
                        term: term,
                        page: page,
                        context: context,
                        matcher: this.opts.matcher,
                        callback: this.bind(function(data) {
                            self.opened() && (self.opts.populateResults.call(this, results, data.results, {
                                term: term,
                                page: page,
                                context: context
                            }), self.postprocessResults(data, !1, !1), data.more === !0 ? (more.detach().appendTo(results).text(evaluate(self.opts.formatLoadMore, self.opts.element, page + 1)), window.setTimeout(function() {
                                self.loadMoreIfNeeded()
                            }, 10)) : more.remove(), self.positionDropdown(), self.resultsPage = page, self.context = data.context, this.opts.element.trigger({
                                type: "select2-loaded",
                                items: data
                            }))
                        })
                    })))
                },
                tokenize: function() {},
                updateResults: function(initial) {
                    function postRender() {
                        search.removeClass("select2-active"), self.positionDropdown(), self.liveRegion.text(results.find(".select2-no-results,.select2-selection-limit,.select2-searching").length ? results.text() : self.opts.formatMatches(results.find(".select2-result-selectable").length))
                    }

                    function render(html) {
                        results.html(html), postRender()
                    }
                    var data, input, queryNumber, search = this.search,
                        results = this.results,
                        opts = this.opts,
                        self = this,
                        term = search.val(),
                        lastTerm = $.data(this.container, "select2-last-term");
                    if ((initial === !0 || !lastTerm || !equal(term, lastTerm)) && ($.data(this.container, "select2-last-term", term), initial === !0 || this.showSearchInput !== !1 && this.opened())) {
                        queryNumber = ++this.queryCount;
                        var maxSelSize = this.getMaximumSelectionSize();
                        if (maxSelSize >= 1 && (data = this.data(), $.isArray(data) && data.length >= maxSelSize && checkFormatter(opts.formatSelectionTooBig, "formatSelectionTooBig"))) return void render("<li class='select2-selection-limit'>" + evaluate(opts.formatSelectionTooBig, opts.element, maxSelSize) + "</li>");
                        if (search.val().length < opts.minimumInputLength) return checkFormatter(opts.formatInputTooShort, "formatInputTooShort") || render(""), void(initial && this.showSearch && this.showSearch(!0));
                        if (opts.maximumInputLength && search.val().length > opts.maximumInputLength) return void(checkFormatter(opts.formatInputTooLong, "formatInputTooLong") || render(""));
                        opts.formatSearching && 0 === this.findHighlightableChoices().length && render("<li class='select2-searching'>" + evaluate(opts.formatSearching, opts.element) + "</li>"), search.addClass("select2-active"), this.removeHighlight(), input = this.tokenize(), input != undefined && null != input && search.val(input), this.resultsPage = 1, opts.query({
                            element: opts.element,
                            term: search.val(),
                            page: this.resultsPage,
                            context: null,
                            matcher: opts.matcher,
                            callback: this.bind(function(data) {
                                var def;
                                if (queryNumber == this.queryCount) {
                                    if (!this.opened()) return void this.search.removeClass("select2-active");
                                    if (data.hasError !== undefined && checkFormatter(opts.formatAjaxError, "formatAjaxError")) return void render("<li class='select2-ajax-error'>" + evaluate(opts.formatAjaxError, opts.element, data.jqXHR, data.textStatus, data.errorThrown) + "</li>");
                                    this.context = data.context === undefined ? null : data.context, this.opts.createSearchChoice && "" !== search.val() && (def = this.opts.createSearchChoice.call(self, search.val(), data.results), def !== undefined && null !== def && self.id(def) !== undefined && null !== self.id(def) && 0 === $(data.results).filter(function() {
                                        return equal(self.id(this), self.id(def))
                                    }).length && this.opts.createSearchChoicePosition(data.results, def)), 0 === data.results.length && checkFormatter(opts.formatNoMatches, "formatNoMatches") || (results.empty(), self.opts.populateResults.call(this, results, data.results, {
                                        term: search.val(),
                                        page: this.resultsPage,
                                        context: null
                                    }), data.more === !0 && checkFormatter(opts.formatLoadMore, "formatLoadMore") && (results.append("<li class='select2-more-results'>" + opts.escapeMarkup(evaluate(opts.formatLoadMore, opts.element, this.resultsPage)) + "</li>"), window.setTimeout(function() {
                                        self.loadMoreIfNeeded()
                                    }, 10)), this.postprocessResults(data, initial), postRender(), this.opts.element.trigger({
                                        type: "select2-loaded",
                                        items: data
                                    }))
                                }
                            })
                        })
                    }
                },
                cancel: function() {
                    this.close()
                },
                blur: function() {
                    this.opts.selectOnBlur && this.selectHighlighted({
                        noFocus: !0
                    }), this.close(), this.container.removeClass("select2-container-active"), this.search[0] === document.activeElement && this.search.blur(), this.clearSearch(), this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus")
                },
                focusSearch: function() {
                    focus(this.search)
                },
                selectHighlighted: function(options) {
                    if (this._touchMoved) return void this.clearTouchMoved();
                    var index = this.highlight(),
                        highlighted = this.results.find(".select2-highlighted"),
                        data = highlighted.closest(".select2-result").data("select2-data");
                    data ? (this.highlight(index), this.onSelect(data, options)) : options && options.noFocus && this.close()
                },
                getPlaceholder: function() {
                    var placeholderOption;
                    return this.opts.element.attr("placeholder") || this.opts.element.attr("data-placeholder") || this.opts.element.data("placeholder") || this.opts.placeholder || ((placeholderOption = this.getPlaceholderOption()) !== undefined ? placeholderOption.text() : undefined)
                },
                getPlaceholderOption: function() {
                    if (this.select) {
                        var firstOption = this.select.children("option").first();
                        if (this.opts.placeholderOption !== undefined) return "first" === this.opts.placeholderOption && firstOption || "function" == typeof this.opts.placeholderOption && this.opts.placeholderOption(this.select);
                        if ("" === $.trim(firstOption.text()) && "" === firstOption.val()) return firstOption
                    }
                },
                initContainerWidth: function() {
                    function resolveContainerWidth() {
                        var style, attrs, matches, i, l, attr;
                        if ("off" === this.opts.width) return null;
                        if ("element" === this.opts.width) return 0 === this.opts.element.outerWidth(!1) ? "auto" : this.opts.element.outerWidth(!1) + "px";
                        if ("copy" === this.opts.width || "resolve" === this.opts.width) {
                            if (style = this.opts.element.attr("style"), style !== undefined)
                                for (attrs = style.split(";"), i = 0, l = attrs.length; l > i; i += 1)
                                    if (attr = attrs[i].replace(/\s/g, ""), matches = attr.match(/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i), null !== matches && matches.length >= 1) return matches[1];
                            return "resolve" === this.opts.width ? (style = this.opts.element.css("width"), style.indexOf("%") > 0 ? style : 0 === this.opts.element.outerWidth(!1) ? "auto" : this.opts.element.outerWidth(!1) + "px") : null
                        }
                        return $.isFunction(this.opts.width) ? this.opts.width() : this.opts.width
                    }
                    var width = resolveContainerWidth.call(this);
                    null !== width && this.container.css("width", width)
                }
            }), SingleSelect2 = clazz(AbstractSelect2, {
                createContainer: function() {
                    var container = $(document.createElement("div")).attr({
                        "class": "select2-container"
                    }).html(["<a href='javascript:void(0)' class='select2-choice' tabindex='-1'>", "   <span class='select2-chosen'>&#160;</span><abbr class='select2-search-choice-close'></abbr>", "   <span class='select2-arrow' role='presentation'><b role='presentation'></b></span>", "</a>", "<label for='' class='select2-offscreen'></label>", "<input class='select2-focusser select2-offscreen' type='text' aria-haspopup='true' role='button' />", "<div class='select2-drop select2-display-none'>", "   <div class='select2-search'>", "       <label for='' class='select2-offscreen'></label>", "       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input' role='combobox' aria-expanded='true'", "       aria-autocomplete='list' />", "   </div>", "   <ul class='select2-results' role='listbox'>", "   </ul>", "</div>"].join(""));
                    return container
                },
                enableInterface: function() {
                    this.parent.enableInterface.apply(this, arguments) && this.focusser.prop("disabled", !this.isInterfaceEnabled())
                },
                opening: function() {
                    var el, range, len;
                    this.opts.minimumResultsForSearch >= 0 && this.showSearch(!0), this.parent.opening.apply(this, arguments), this.showSearchInput !== !1 && this.search.val(this.focusser.val()), this.opts.shouldFocusInput(this) && (this.search.focus(), el = this.search.get(0), el.createTextRange ? (range = el.createTextRange(), range.collapse(!1), range.select()) : el.setSelectionRange && (len = this.search.val().length, el.setSelectionRange(len, len))), "" === this.search.val() && this.nextSearchTerm != undefined && (this.search.val(this.nextSearchTerm), this.search.select()), this.focusser.prop("disabled", !0).val(""), this.updateResults(!0), this.opts.element.trigger($.Event("select2-open"))
                },
                close: function() {
                    this.opened() && (this.parent.close.apply(this, arguments), this.focusser.prop("disabled", !1), this.opts.shouldFocusInput(this) && this.focusser.focus())
                },
                focus: function() {
                    this.opened() ? this.close() : (this.focusser.prop("disabled", !1), this.opts.shouldFocusInput(this) && this.focusser.focus())
                },
                isFocused: function() {
                    return this.container.hasClass("select2-container-active")
                },
                cancel: function() {
                    this.parent.cancel.apply(this, arguments), this.focusser.prop("disabled", !1), this.opts.shouldFocusInput(this) && this.focusser.focus()
                },
                destroy: function() {
                    $("label[for='" + this.focusser.attr("id") + "']").attr("for", this.opts.element.attr("id")), this.parent.destroy.apply(this, arguments), cleanupJQueryElements.call(this, "selection", "focusser")
                },
                initContainer: function() {
                    var selection, elementLabel, container = this.container,
                        dropdown = this.dropdown,
                        idSuffix = nextUid();
                    this.showSearch(this.opts.minimumResultsForSearch < 0 ? !1 : !0), this.selection = selection = container.find(".select2-choice"), this.focusser = container.find(".select2-focusser"), selection.find(".select2-chosen").attr("id", "select2-chosen-" + idSuffix), this.focusser.attr("aria-labelledby", "select2-chosen-" + idSuffix), this.results.attr("id", "select2-results-" + idSuffix), this.search.attr("aria-owns", "select2-results-" + idSuffix), this.focusser.attr("id", "s2id_autogen" + idSuffix), elementLabel = $("label[for='" + this.opts.element.attr("id") + "']"), this.focusser.prev().text(elementLabel.text()).attr("for", this.focusser.attr("id"));
                    var originalTitle = this.opts.element.attr("title");
                    this.opts.element.attr("title", originalTitle || elementLabel.text()), this.focusser.attr("tabindex", this.elementTabIndex), this.search.attr("id", this.focusser.attr("id") + "_search"), this.search.prev().text($("label[for='" + this.focusser.attr("id") + "']").text()).attr("for", this.search.attr("id")), this.search.on("keydown", this.bind(function(e) {
                        if (this.isInterfaceEnabled() && 229 != e.keyCode) {
                            if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) return void killEvent(e);
                            switch (e.which) {
                                case KEY.UP:
                                case KEY.DOWN:
                                    return this.moveHighlight(e.which === KEY.UP ? -1 : 1), void killEvent(e);
                                case KEY.ENTER:
                                    return this.selectHighlighted(), void killEvent(e);
                                case KEY.TAB:
                                    return void this.selectHighlighted({
                                        noFocus: !0
                                    });
                                case KEY.ESC:
                                    return this.cancel(e), void killEvent(e)
                            }
                        }
                    })), this.search.on("blur", this.bind(function() {
                        document.activeElement === this.body.get(0) && window.setTimeout(this.bind(function() {
                            this.opened() && this.search.focus()
                        }), 0)
                    })), this.focusser.on("keydown", this.bind(function(e) {
                        if (this.isInterfaceEnabled() && e.which !== KEY.TAB && !KEY.isControl(e) && !KEY.isFunctionKey(e) && e.which !== KEY.ESC) {
                            if (this.opts.openOnEnter === !1 && e.which === KEY.ENTER) return void killEvent(e);
                            if (e.which == KEY.DOWN || e.which == KEY.UP || e.which == KEY.ENTER && this.opts.openOnEnter) {
                                if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) return;
                                return this.open(), void killEvent(e)
                            }
                            return e.which == KEY.DELETE || e.which == KEY.BACKSPACE ? (this.opts.allowClear && this.clear(), void killEvent(e)) : void 0
                        }
                    })), installKeyUpChangeEvent(this.focusser), this.focusser.on("keyup-change input", this.bind(function(e) {
                        if (this.opts.minimumResultsForSearch >= 0) {
                            if (e.stopPropagation(), this.opened()) return;
                            this.open()
                        }
                    })), selection.on("mousedown touchstart", "abbr", this.bind(function(e) {
                        this.isInterfaceEnabled() && (this.clear(), killEventImmediately(e), this.close(), this.selection.focus())
                    })), selection.on("mousedown touchstart", this.bind(function(e) {
                        reinsertElement(selection), this.container.hasClass("select2-container-active") || this.opts.element.trigger($.Event("select2-focus")), this.opened() ? this.close() : this.isInterfaceEnabled() && this.open(), killEvent(e)
                    })), dropdown.on("mousedown touchstart", this.bind(function() {
                        this.opts.shouldFocusInput(this) && this.search.focus()
                    })), selection.on("focus", this.bind(function(e) {
                        killEvent(e)
                    })), this.focusser.on("focus", this.bind(function() {
                        this.container.hasClass("select2-container-active") || this.opts.element.trigger($.Event("select2-focus")), this.container.addClass("select2-container-active")
                    })).on("blur", this.bind(function() {
                        this.opened() || (this.container.removeClass("select2-container-active"), this.opts.element.trigger($.Event("select2-blur")))
                    })), this.search.on("focus", this.bind(function() {
                        this.container.hasClass("select2-container-active") || this.opts.element.trigger($.Event("select2-focus")), this.container.addClass("select2-container-active")
                    })), this.initContainerWidth(), this.opts.element.addClass("select2-offscreen"), this.setPlaceholder()
                },
                clear: function(triggerChange) {
                    var data = this.selection.data("select2-data");
                    if (data) {
                        var evt = $.Event("select2-clearing");
                        if (this.opts.element.trigger(evt), evt.isDefaultPrevented()) return;
                        var placeholderOption = this.getPlaceholderOption();
                        this.opts.element.val(placeholderOption ? placeholderOption.val() : ""), this.selection.find(".select2-chosen").empty(), this.selection.removeData("select2-data"), this.setPlaceholder(), triggerChange !== !1 && (this.opts.element.trigger({
                            type: "select2-removed",
                            val: this.id(data),
                            choice: data
                        }), this.triggerChange({
                            removed: data
                        }))
                    }
                },
                initSelection: function() {
                    if (this.isPlaceholderOptionSelected()) this.updateSelection(null), this.close(), this.setPlaceholder();
                    else {
                        var self = this;
                        this.opts.initSelection.call(null, this.opts.element, function(selected) {
                            selected !== undefined && null !== selected && (self.updateSelection(selected), self.close(), self.setPlaceholder(), self.nextSearchTerm = self.opts.nextSearchTerm(selected, self.search.val()))
                        })
                    }
                },
                isPlaceholderOptionSelected: function() {
                    var placeholderOption;
                    return this.getPlaceholder() === undefined ? !1 : (placeholderOption = this.getPlaceholderOption()) !== undefined && placeholderOption.prop("selected") || "" === this.opts.element.val() || this.opts.element.val() === undefined || null === this.opts.element.val()
                },
                prepareOpts: function() {
                    var opts = this.parent.prepareOpts.apply(this, arguments),
                        self = this;
                    return "select" === opts.element.get(0).tagName.toLowerCase() ? opts.initSelection = function(element, callback) {
                        var selected = element.find("option").filter(function() {
                            return this.selected && !this.disabled
                        });
                        callback(self.optionToData(selected))
                    } : "data" in opts && (opts.initSelection = opts.initSelection || function(element, callback) {
                        var id = element.val(),
                            match = null;
                        opts.query({
                            matcher: function(term, text, el) {
                                var is_match = equal(id, opts.id(el));
                                return is_match && (match = el), is_match
                            },
                            callback: $.isFunction(callback) ? function() {
                                callback(match)
                            } : $.noop
                        })
                    }), opts
                },
                getPlaceholder: function() {
                    return this.select && this.getPlaceholderOption() === undefined ? undefined : this.parent.getPlaceholder.apply(this, arguments)
                },
                setPlaceholder: function() {
                    var placeholder = this.getPlaceholder();
                    if (this.isPlaceholderOptionSelected() && placeholder !== undefined) {
                        if (this.select && this.getPlaceholderOption() === undefined) return;
                        this.selection.find(".select2-chosen").html(this.opts.escapeMarkup(placeholder)), this.selection.addClass("select2-default"), this.container.removeClass("select2-allowclear")
                    }
                },
                postprocessResults: function(data, initial, noHighlightUpdate) {
                    var selected = 0,
                        self = this;
                    if (this.findHighlightableChoices().each2(function(i, elm) {
                            return equal(self.id(elm.data("select2-data")), self.opts.element.val()) ? (selected = i, !1) : void 0
                        }), noHighlightUpdate !== !1 && this.highlight(initial === !0 && selected >= 0 ? selected : 0), initial === !0) {
                        var min = this.opts.minimumResultsForSearch;
                        min >= 0 && this.showSearch(countResults(data.results) >= min)
                    }
                },
                showSearch: function(showSearchInput) {
                    this.showSearchInput !== showSearchInput && (this.showSearchInput = showSearchInput, this.dropdown.find(".select2-search").toggleClass("select2-search-hidden", !showSearchInput), this.dropdown.find(".select2-search").toggleClass("select2-offscreen", !showSearchInput), $(this.dropdown, this.container).toggleClass("select2-with-searchbox", showSearchInput))
                },
                onSelect: function(data, options) {
                    if (this.triggerSelect(data)) {
                        var old = this.opts.element.val(),
                            oldData = this.data();
                        this.opts.element.val(this.id(data)), this.updateSelection(data), this.opts.element.trigger({
                            type: "select2-selected",
                            val: this.id(data),
                            choice: data
                        }), this.nextSearchTerm = this.opts.nextSearchTerm(data, this.search.val()), this.close(), options && options.noFocus || !this.opts.shouldFocusInput(this) || this.focusser.focus(), equal(old, this.id(data)) || this.triggerChange({
                            added: data,
                            removed: oldData
                        })
                    }
                },
                updateSelection: function(data) {
                    var formatted, cssClass, container = this.selection.find(".select2-chosen");
                    this.selection.data("select2-data", data), container.empty(), null !== data && (formatted = this.opts.formatSelection(data, container, this.opts.escapeMarkup)), formatted !== undefined && container.append(formatted), cssClass = this.opts.formatSelectionCssClass(data, container), cssClass !== undefined && container.addClass(cssClass), this.selection.removeClass("select2-default"), this.opts.allowClear && this.getPlaceholder() !== undefined && this.container.addClass("select2-allowclear")
                },
                val: function() {
                    var val, triggerChange = !1,
                        data = null,
                        self = this,
                        oldData = this.data();
                    if (0 === arguments.length) return this.opts.element.val();
                    if (val = arguments[0], arguments.length > 1 && (triggerChange = arguments[1]), this.select) this.select.val(val).find("option").filter(function() {
                        return this.selected
                    }).each2(function(i, elm) {
                        return data = self.optionToData(elm), !1
                    }), this.updateSelection(data), this.setPlaceholder(), triggerChange && this.triggerChange({
                        added: data,
                        removed: oldData
                    });
                    else {
                        if (!val && 0 !== val) return void this.clear(triggerChange);
                        if (this.opts.initSelection === undefined) throw new Error("cannot call val() if initSelection() is not defined");
                        this.opts.element.val(val), this.opts.initSelection(this.opts.element, function(data) {
                            self.opts.element.val(data ? self.id(data) : ""), self.updateSelection(data), self.setPlaceholder(), triggerChange && self.triggerChange({
                                added: data,
                                removed: oldData
                            })
                        })
                    }
                },
                clearSearch: function() {
                    this.search.val(""), this.focusser.val("")
                },
                data: function(value) {
                    var data, triggerChange = !1;
                    return 0 === arguments.length ? (data = this.selection.data("select2-data"), data == undefined && (data = null), data) : (arguments.length > 1 && (triggerChange = arguments[1]), void(value ? (data = this.data(), this.opts.element.val(value ? this.id(value) : ""), this.updateSelection(value), triggerChange && this.triggerChange({
                        added: value,
                        removed: data
                    })) : this.clear(triggerChange)))
                }
            }), MultiSelect2 = clazz(AbstractSelect2, {
                createContainer: function() {
                    var container = $(document.createElement("div")).attr({
                        "class": "select2-container select2-container-multi"
                    }).html(["<ul class='select2-choices'>", "  <li class='select2-search-field'>", "    <label for='' class='select2-offscreen'></label>", "    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>", "  </li>", "</ul>", "<div class='select2-drop select2-drop-multi select2-display-none'>", "   <ul class='select2-results'>", "   </ul>", "</div>"].join(""));
                    return container
                },
                prepareOpts: function() {
                    var opts = this.parent.prepareOpts.apply(this, arguments),
                        self = this;
                    return "select" === opts.element.get(0).tagName.toLowerCase() ? opts.initSelection = function(element, callback) {
                        var data = [];
                        element.find("option").filter(function() {
                            return this.selected && !this.disabled
                        }).each2(function(i, elm) {
                            data.push(self.optionToData(elm))
                        }), callback(data)
                    } : "data" in opts && (opts.initSelection = opts.initSelection || function(element, callback) {
                        var ids = splitVal(element.val(), opts.separator),
                            matches = [];
                        opts.query({
                            matcher: function(term, text, el) {
                                var is_match = $.grep(ids, function(id) {
                                    return equal(id, opts.id(el))
                                }).length;
                                return is_match && matches.push(el), is_match
                            },
                            callback: $.isFunction(callback) ? function() {
                                for (var ordered = [], i = 0; i < ids.length; i++)
                                    for (var id = ids[i], j = 0; j < matches.length; j++) {
                                        var match = matches[j];
                                        if (equal(id, opts.id(match))) {
                                            ordered.push(match), matches.splice(j, 1);
                                            break
                                        }
                                    }
                                callback(ordered)
                            } : $.noop
                        })
                    }), opts
                },
                selectChoice: function(choice) {
                    var selected = this.container.find(".select2-search-choice-focus");
                    selected.length && choice && choice[0] == selected[0] || (selected.length && this.opts.element.trigger("choice-deselected", selected), selected.removeClass("select2-search-choice-focus"), choice && choice.length && (this.close(), choice.addClass("select2-search-choice-focus"), this.opts.element.trigger("choice-selected", choice)))
                },
                destroy: function() {
                    $("label[for='" + this.search.attr("id") + "']").attr("for", this.opts.element.attr("id")), this.parent.destroy.apply(this, arguments), cleanupJQueryElements.call(this, "searchContainer", "selection")
                },
                initContainer: function() {
                    var selection, selector = ".select2-choices";
                    this.searchContainer = this.container.find(".select2-search-field"), this.selection = selection = this.container.find(selector);
                    var _this = this;
                    this.selection.on("click", ".select2-search-choice:not(.select2-locked)", function() {
                        _this.search[0].focus(), _this.selectChoice($(this))
                    }), this.search.attr("id", "s2id_autogen" + nextUid()), this.search.prev().text($("label[for='" + this.opts.element.attr("id") + "']").text()).attr("for", this.search.attr("id")), this.search.on("input paste", this.bind(function() {
                        this.search.attr("placeholder") && 0 == this.search.val().length || this.isInterfaceEnabled() && (this.opened() || this.open())
                    })), this.search.attr("tabindex", this.elementTabIndex), this.keydowns = 0, this.search.on("keydown", this.bind(function(e) {
                        if (this.isInterfaceEnabled()) {
                            ++this.keydowns;
                            var selected = selection.find(".select2-search-choice-focus"),
                                prev = selected.prev(".select2-search-choice:not(.select2-locked)"),
                                next = selected.next(".select2-search-choice:not(.select2-locked)"),
                                pos = getCursorInfo(this.search);
                            if (selected.length && (e.which == KEY.LEFT || e.which == KEY.RIGHT || e.which == KEY.BACKSPACE || e.which == KEY.DELETE || e.which == KEY.ENTER)) {
                                var selectedChoice = selected;
                                return e.which == KEY.LEFT && prev.length ? selectedChoice = prev : e.which == KEY.RIGHT ? selectedChoice = next.length ? next : null : e.which === KEY.BACKSPACE ? this.unselect(selected.first()) && (this.search.width(10), selectedChoice = prev.length ? prev : next) : e.which == KEY.DELETE ? this.unselect(selected.first()) && (this.search.width(10), selectedChoice = next.length ? next : null) : e.which == KEY.ENTER && (selectedChoice = null), this.selectChoice(selectedChoice), killEvent(e), void(selectedChoice && selectedChoice.length || this.open())
                            }
                            if ((e.which === KEY.BACKSPACE && 1 == this.keydowns || e.which == KEY.LEFT) && 0 == pos.offset && !pos.length) return this.selectChoice(selection.find(".select2-search-choice:not(.select2-locked)").last()), void killEvent(e);
                            if (this.selectChoice(null), this.opened()) switch (e.which) {
                                case KEY.UP:
                                case KEY.DOWN:
                                    return this.moveHighlight(e.which === KEY.UP ? -1 : 1), void killEvent(e);
                                case KEY.ENTER:
                                    return this.selectHighlighted(), void killEvent(e);
                                case KEY.TAB:
                                    return this.selectHighlighted({
                                        noFocus: !0
                                    }), void this.close();
                                case KEY.ESC:
                                    return this.cancel(e), void killEvent(e)
                            }
                            if (e.which !== KEY.TAB && !KEY.isControl(e) && !KEY.isFunctionKey(e) && e.which !== KEY.BACKSPACE && e.which !== KEY.ESC) {
                                if (e.which === KEY.ENTER) {
                                    if (this.opts.openOnEnter === !1) return;
                                    if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) return
                                }
                                this.open(), (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) && killEvent(e), e.which === KEY.ENTER && killEvent(e)
                            }
                        }
                    })), this.search.on("keyup", this.bind(function() {
                        this.keydowns = 0, this.resizeSearch()
                    })), this.search.on("blur", this.bind(function(e) {
                        this.container.removeClass("select2-container-active"), this.search.removeClass("select2-focused"), this.selectChoice(null), this.opened() || this.clearSearch(), e.stopImmediatePropagation(), this.opts.element.trigger($.Event("select2-blur"))
                    })), this.container.on("click", selector, this.bind(function(e) {
                        this.isInterfaceEnabled() && ($(e.target).closest(".select2-search-choice").length > 0 || (this.selectChoice(null), this.clearPlaceholder(), this.container.hasClass("select2-container-active") || this.opts.element.trigger($.Event("select2-focus")), this.open(), this.focusSearch(), e.preventDefault()))
                    })), this.container.on("focus", selector, this.bind(function() {
                        this.isInterfaceEnabled() && (this.container.hasClass("select2-container-active") || this.opts.element.trigger($.Event("select2-focus")), this.container.addClass("select2-container-active"), this.dropdown.addClass("select2-drop-active"), this.clearPlaceholder())
                    })), this.initContainerWidth(), this.opts.element.addClass("select2-offscreen"), this.clearSearch()
                },
                enableInterface: function() {
                    this.parent.enableInterface.apply(this, arguments) && this.search.prop("disabled", !this.isInterfaceEnabled())
                },
                initSelection: function() {
                    if ("" === this.opts.element.val() && "" === this.opts.element.text() && (this.updateSelection([]), this.close(), this.clearSearch()), this.select || "" !== this.opts.element.val()) {
                        var self = this;
                        this.opts.initSelection.call(null, this.opts.element, function(data) {
                            data !== undefined && null !== data && (self.updateSelection(data), self.close(), self.clearSearch())
                        })
                    }
                },
                clearSearch: function() {
                    var placeholder = this.getPlaceholder(),
                        maxWidth = this.getMaxSearchWidth();
                    placeholder !== undefined && 0 === this.getVal().length && this.search.hasClass("select2-focused") === !1 ? (this.search.val(placeholder).addClass("select2-default"), this.search.width(maxWidth > 0 ? maxWidth : this.container.css("width"))) : this.search.val("").width(10)
                },
                clearPlaceholder: function() {
                    this.search.hasClass("select2-default") && this.search.val("").removeClass("select2-default")
                },
                opening: function() {
                    this.clearPlaceholder(), this.resizeSearch(), this.parent.opening.apply(this, arguments), this.focusSearch(), "" === this.search.val() && this.nextSearchTerm != undefined && (this.search.val(this.nextSearchTerm), this.search.select()), this.updateResults(!0), this.opts.shouldFocusInput(this) && this.search.focus(), this.opts.element.trigger($.Event("select2-open"))
                },
                close: function() {
                    this.opened() && this.parent.close.apply(this, arguments)
                },
                focus: function() {
                    this.close(), this.search.focus()
                },
                isFocused: function() {
                    return this.search.hasClass("select2-focused")
                },
                updateSelection: function(data) {
                    var ids = [],
                        filtered = [],
                        self = this;
                    $(data).each(function() {
                        indexOf(self.id(this), ids) < 0 && (ids.push(self.id(this)), filtered.push(this))
                    }), data = filtered, this.selection.find(".select2-search-choice").remove(), $(data).each(function() {
                        self.addSelectedChoice(this)
                    }), self.postprocessResults()
                },
                tokenize: function() {
                    var input = this.search.val();
                    input = this.opts.tokenizer.call(this, input, this.data(), this.bind(this.onSelect), this.opts), null != input && input != undefined && (this.search.val(input), input.length > 0 && this.open())
                },
                onSelect: function(data, options) {
                    this.triggerSelect(data) && "" !== data.text && (this.addSelectedChoice(data), this.opts.element.trigger({
                        type: "selected",
                        val: this.id(data),
                        choice: data
                    }), this.nextSearchTerm = this.opts.nextSearchTerm(data, this.search.val()), this.clearSearch(), this.updateResults(), (this.select || !this.opts.closeOnSelect) && this.postprocessResults(data, !1, this.opts.closeOnSelect === !0), this.opts.closeOnSelect ? (this.close(), this.search.width(10)) : this.countSelectableResults() > 0 ? (this.search.width(10), this.resizeSearch(), this.getMaximumSelectionSize() > 0 && this.val().length >= this.getMaximumSelectionSize() ? this.updateResults(!0) : this.nextSearchTerm != undefined && (this.search.val(this.nextSearchTerm), this.updateResults(), this.search.select()), this.positionDropdown()) : (this.close(), this.search.width(10)), this.triggerChange({
                        added: data
                    }), options && options.noFocus || this.focusSearch())
                },
                cancel: function() {
                    this.close(), this.focusSearch()
                },
                addSelectedChoice: function(data) {
                    var formatted, cssClass, enableChoice = !data.locked,
                        enabledItem = $("<li class='select2-search-choice'>    <div></div>    <a href='#' class='select2-search-choice-close' tabindex='-1'></a></li>"),
                        disabledItem = $("<li class='select2-search-choice select2-locked'><div></div></li>"),
                        choice = enableChoice ? enabledItem : disabledItem,
                        id = this.id(data),
                        val = this.getVal();
                    formatted = this.opts.formatSelection(data, choice.find("div"), this.opts.escapeMarkup), formatted != undefined && choice.find("div").replaceWith("<div>" + formatted + "</div>"), cssClass = this.opts.formatSelectionCssClass(data, choice.find("div")), cssClass != undefined && choice.addClass(cssClass), enableChoice && choice.find(".select2-search-choice-close").on("mousedown", killEvent).on("click dblclick", this.bind(function(e) {
                        this.isInterfaceEnabled() && (this.unselect($(e.target)), this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus"), killEvent(e), this.close(), this.focusSearch())
                    })).on("focus", this.bind(function() {
                        this.isInterfaceEnabled() && (this.container.addClass("select2-container-active"), this.dropdown.addClass("select2-drop-active"))
                    })), choice.data("select2-data", data), choice.insertBefore(this.searchContainer), val.push(id), this.setVal(val)
                },
                unselect: function(selected) {
                    var data, index, val = this.getVal();
                    if (selected = selected.closest(".select2-search-choice"), 0 === selected.length) throw "Invalid argument: " + selected + ". Must be .select2-search-choice";
                    if (data = selected.data("select2-data")) {
                        var evt = $.Event("select2-removing");
                        if (evt.val = this.id(data), evt.choice = data, this.opts.element.trigger(evt), evt.isDefaultPrevented()) return !1;
                        for (;
                            (index = indexOf(this.id(data), val)) >= 0;) val.splice(index, 1), this.setVal(val), this.select && this.postprocessResults();
                        return selected.remove(), this.opts.element.trigger({
                            type: "select2-removed",
                            val: this.id(data),
                            choice: data
                        }), this.triggerChange({
                            removed: data
                        }), !0
                    }
                },
                postprocessResults: function(data, initial, noHighlightUpdate) {
                    var val = this.getVal(),
                        choices = this.results.find(".select2-result"),
                        compound = this.results.find(".select2-result-with-children"),
                        self = this;
                    choices.each2(function(i, choice) {
                        var id = self.id(choice.data("select2-data"));
                        indexOf(id, val) >= 0 && (choice.addClass("select2-selected"), choice.find(".select2-result-selectable").addClass("select2-selected"))
                    }), compound.each2(function(i, choice) {
                        choice.is(".select2-result-selectable") || 0 !== choice.find(".select2-result-selectable:not(.select2-selected)").length || choice.addClass("select2-selected")
                    }), -1 == this.highlight() && noHighlightUpdate !== !1 && self.highlight(0), !this.opts.createSearchChoice && !choices.filter(".select2-result:not(.select2-selected)").length > 0 && (!data || data && !data.more && 0 === this.results.find(".select2-no-results").length) && checkFormatter(self.opts.formatNoMatches, "formatNoMatches")
                },
                getMaxSearchWidth: function() {
                    return this.selection.width() - getSideBorderPadding(this.search)
                },
                resizeSearch: function() {
                    var minimumWidth, left, maxWidth, containerLeft, searchWidth, sideBorderPadding = getSideBorderPadding(this.search);
                    minimumWidth = measureTextWidth(this.search) + 10, left = this.search.offset().left, maxWidth = this.selection.width(), containerLeft = this.selection.offset().left, searchWidth = maxWidth - (left - containerLeft) - sideBorderPadding, minimumWidth > searchWidth && (searchWidth = maxWidth - sideBorderPadding), 40 > searchWidth && (searchWidth = maxWidth - sideBorderPadding), 0 >= searchWidth && (searchWidth = minimumWidth), this.search.width(Math.floor(searchWidth))
                },
                getVal: function() {
                    var val;
                    return this.select ? (val = this.select.val(), null === val ? [] : val) : (val = this.opts.element.val(), splitVal(val, this.opts.separator))
                },
                setVal: function(val) {
                    var unique;
                    this.select ? this.select.val(val) : (unique = [], $(val).each(function() {
                        indexOf(this, unique) < 0 && unique.push(this)
                    }), this.opts.element.val(0 === unique.length ? "" : unique.join(this.opts.separator)))
                },
                buildChangeDetails: function(old, current) {
                    for (var current = current.slice(0), old = old.slice(0), i = 0; i < current.length; i++)
                        for (var j = 0; j < old.length; j++) equal(this.opts.id(current[i]), this.opts.id(old[j])) && (current.splice(i, 1), i > 0 && i--, old.splice(j, 1), j--);
                    return {
                        added: current,
                        removed: old
                    }
                },
                val: function(val, triggerChange) {
                    var oldData, self = this;
                    if (0 === arguments.length) return this.getVal();
                    if (oldData = this.data(), oldData.length || (oldData = []), !val && 0 !== val) return this.opts.element.val(""), this.updateSelection([]), this.clearSearch(), void(triggerChange && this.triggerChange({
                        added: this.data(),
                        removed: oldData
                    }));
                    if (this.setVal(val), this.select) this.opts.initSelection(this.select, this.bind(this.updateSelection)), triggerChange && this.triggerChange(this.buildChangeDetails(oldData, this.data()));
                    else {
                        if (this.opts.initSelection === undefined) throw new Error("val() cannot be called if initSelection() is not defined");
                        this.opts.initSelection(this.opts.element, function(data) {
                            var ids = $.map(data, self.id);
                            self.setVal(ids), self.updateSelection(data), self.clearSearch(), triggerChange && self.triggerChange(self.buildChangeDetails(oldData, self.data()))
                        })
                    }
                    this.clearSearch()
                },
                onSortStart: function() {
                    if (this.select) throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.");
                    this.search.width(0), this.searchContainer.hide()
                },
                onSortEnd: function() {
                    var val = [],
                        self = this;
                    this.searchContainer.show(), this.searchContainer.appendTo(this.searchContainer.parent()), this.resizeSearch(), this.selection.find(".select2-search-choice").each(function() {
                        val.push(self.opts.id($(this).data("select2-data")))
                    }), this.setVal(val), this.triggerChange()
                },
                data: function(values, triggerChange) {
                    var ids, old, self = this;
                    return 0 === arguments.length ? this.selection.children(".select2-search-choice").map(function() {
                        return $(this).data("select2-data")
                    }).get() : (old = this.data(), values || (values = []), ids = $.map(values, function(e) {
                        return self.opts.id(e)
                    }), this.setVal(ids), this.updateSelection(values), this.clearSearch(), triggerChange && this.triggerChange(this.buildChangeDetails(old, this.data())), void 0)
                }
            }), $.fn.select2 = function() {
                var opts, select2, method, value, multiple, args = Array.prototype.slice.call(arguments, 0),
                    allowedMethods = ["val", "destroy", "opened", "open", "close", "focus", "isFocused", "container", "dropdown", "onSortStart", "onSortEnd", "enable", "disable", "readonly", "positionDropdown", "data", "search"],
                    valueMethods = ["opened", "isFocused", "container", "dropdown"],
                    propertyMethods = ["val", "data"],
                    methodsMap = {
                        search: "externalSearch"
                    };
                return this.each(function() {
                    if (0 === args.length || "object" == typeof args[0]) opts = 0 === args.length ? {} : $.extend({}, args[0]), opts.element = $(this), "select" === opts.element.get(0).tagName.toLowerCase() ? multiple = opts.element.prop("multiple") : (multiple = opts.multiple || !1, "tags" in opts && (opts.multiple = multiple = !0)), select2 = multiple ? new window.Select2["class"].multi : new window.Select2["class"].single, select2.init(opts);
                    else {
                        if ("string" != typeof args[0]) throw "Invalid arguments to select2 plugin: " + args;
                        if (indexOf(args[0], allowedMethods) < 0) throw "Unknown method: " + args[0];
                        if (value = undefined, select2 = $(this).data("select2"), select2 === undefined) return;
                        if (method = args[0], "container" === method ? value = select2.container : "dropdown" === method ? value = select2.dropdown : (methodsMap[method] && (method = methodsMap[method]), value = select2[method].apply(select2, args.slice(1))), indexOf(args[0], valueMethods) >= 0 || indexOf(args[0], propertyMethods) >= 0 && 1 == args.length) return !1
                    }
                }), value === undefined ? this : value
            }, $.fn.select2.defaults = {
                width: "copy",
                loadMorePadding: 0,
                closeOnSelect: !0,
                openOnEnter: !0,
                containerCss: {},
                dropdownCss: {},
                containerCssClass: "",
                dropdownCssClass: "",
                formatResult: function(result, container, query, escapeMarkup) {
                    var markup = [];
                    return markMatch(result.text, query.term, markup, escapeMarkup), markup.join("")
                },
                formatSelection: function(data, container, escapeMarkup) {
                    return data ? escapeMarkup(data.text) : undefined
                },
                sortResults: function(results) {
                    return results
                },
                formatResultCssClass: function(data) {
                    return data.css
                },
                formatSelectionCssClass: function() {
                    return undefined
                },
                minimumResultsForSearch: 0,
                minimumInputLength: 0,
                maximumInputLength: null,
                maximumSelectionSize: 0,
                id: function(e) {
                    return e == undefined ? null : e.id
                },
                matcher: function(term, text) {
                    return stripDiacritics("" + text).toUpperCase().indexOf(stripDiacritics("" + term).toUpperCase()) >= 0
                },
                separator: ",",
                tokenSeparators: [],
                tokenizer: defaultTokenizer,
                escapeMarkup: defaultEscapeMarkup,
                blurOnChange: !1,
                selectOnBlur: !1,
                adaptContainerCssClass: function(c) {
                    return c
                },
                adaptDropdownCssClass: function() {
                    return null
                },
                nextSearchTerm: function() {
                    return undefined
                },
                searchInputPlaceholder: "",
                createSearchChoicePosition: "top",
                shouldFocusInput: function(instance) {
                    var supportsTouchEvents = "ontouchstart" in window || navigator.msMaxTouchPoints > 0;
                    return supportsTouchEvents && instance.opts.minimumResultsForSearch < 0 ? !1 : !0
                }
            }, $.fn.select2.locales = [], $.fn.select2.locales.en = {
                formatMatches: function(matches) {
                    return 1 === matches ? "One result is available, press enter to select it." : matches + " results are available, use up and down arrow keys to navigate."
                },
                formatNoMatches: function() {
                    return "No matches found"
                },
                formatAjaxError: function() {
                    return "Loading failed"
                },
                formatInputTooShort: function(input, min) {
                    var n = min - input.length;
                    return "Please enter " + n + " or more character" + (1 == n ? "" : "s")
                },
                formatInputTooLong: function(input, max) {
                    var n = input.length - max;
                    return "Please delete " + n + " character" + (1 == n ? "" : "s")
                },
                formatSelectionTooBig: function(limit) {
                    return "You can only select " + limit + " item" + (1 == limit ? "" : "s")
                },
                formatLoadMore: function() {
                    return "Loading more resultsâ€¦"
                },
                formatSearching: function() {
                    return "Searchingâ€¦"
                }
            }, $.extend($.fn.select2.defaults, $.fn.select2.locales.en), $.fn.select2.ajaxDefaults = {
                transport: $.ajax,
                params: {
                    type: "GET",
                    cache: !1,
                    dataType: "json"
                }
            }, window.Select2 = {
                query: {
                    ajax: ajax,
                    local: local,
                    tags: tags
                },
                util: {
                    debounce: debounce,
                    markMatch: markMatch,
                    escapeMarkup: defaultEscapeMarkup,
                    stripDiacritics: stripDiacritics
                },
                "class": {
                    "abstract": AbstractSelect2,
                    single: SingleSelect2,
                    multi: MultiSelect2
                }
            }
        }
    }(jQuery), ! function() {
        function h(p) {
            console.log("$f.fireEvent", [].slice.call(p))
        }

        function l(r) {
            if (!r || "object" != typeof r) return r;
            var p = new r.constructor;
            for (var q in r) r.hasOwnProperty(q) && (p[q] = l(r[q]));
            return p
        }

        function n(u, r) {
            if (u) {
                var p, q = 0,
                    s = u.length;
                if (void 0 === s) {
                    for (p in u)
                        if (r.call(u[p], p, u[p]) === !1) break
                } else
                    for (var t = u[0]; s > q && r.call(t, q, t) !== !1; t = u[++q]);
                return u
            }
        }

        function c(p) {
            return document.getElementById(p)
        }

        function j(r, q, p) {
            return "object" != typeof q ? r : (r && q && n(q, function(s, t) {
                p && "function" == typeof t || (r[s] = t)
            }), r)
        }

        function o(t) {
            var r = t.indexOf(".");
            if (-1 != r) {
                var q = t.slice(0, r) || "*",
                    p = t.slice(r + 1, t.length),
                    s = [];
                return n(document.getElementsByTagName(q), function() {
                    this.className && -1 != this.className.indexOf(p) && s.push(this)
                }), s
            }
        }

        function g(p) {
            return p = p || window.event, p.preventDefault ? (p.stopPropagation(), p.preventDefault()) : (p.returnValue = !1, p.cancelBubble = !0), !1
        }

        function k(r, p, q) {
            r[p] = r[p] || [], r[p].push(q)
        }

        function e(p) {
            return p.replace(/&amp;/g, "%26").replace(/&/g, "%26").replace(/=/g, "%3D")
        }

        function f() {
            return "_" + ("" + Math.random()).slice(2, 10)
        }

        function b(r, H, u) {
            function C() {
                function L(M) {
                    return !/iPad|iPhone|iPod/i.test(navigator.userAgent) || /.flv$/i.test(G[0].url) || K() ? (x.isLoaded() || x._fireEvent("onBeforeClick") === !1 || x.load(), g(M)) : !0
                }

                function K() {
                    return x.hasiPadSupport && x.hasiPadSupport()
                }

                function I() {
                    "" !== v.replace(/\s/g, "") ? r.addEventListener ? r.addEventListener("click", L, !1) : r.attachEvent && r.attachEvent("onclick", L) : (r.addEventListener && !K() && r.addEventListener("click", g, !1), x.load())
                }
                $f(r) ? ($f(r).getParent().innerHTML = "", q = $f(r).getIndex(), a[q] = x) : (a.push(x), q = a.length - 1), B = parseInt(r.style.height, 10) || r.clientHeight, F = r.id || "fp" + f(), s = H.id || F + "_api", H.id = s, v = r.innerHTML, "string" == typeof u && (u = {
                    clip: {
                        url: u
                    }
                }), u.playerId = F, u.clip = u.clip || {}, r.getAttribute("href", 2) && !u.clip.url && (u.clip.url = r.getAttribute("href", 2)), u.clip.url && (u.clip.url = e(u.clip.url)), t = new i(u.clip, -1, x), u.playlist = u.playlist || [u.clip];
                var J = 0;
                n(u.playlist, function() {
                    var M = this;
                    "object" == typeof M && M.length && (M = {
                        url: "" + M
                    }), M.url && (M.url = e(M.url)), n(u.clip, function(N, O) {
                        void 0 !== O && void 0 === M[N] && "function" != typeof O && (M[N] = O)
                    }), u.playlist[J] = M, M = new i(M, J, x), G.push(M), J++
                }), n(u, function(M, N) {
                    "function" == typeof N && (t[M] ? t[M](N) : k(y, M, N), delete u[M])
                }), n(u.plugins, function(M, N) {
                    N && (z[M] = new m(M, N, x))
                }), u.plugins && void 0 !== u.plugins.controls || (z.controls = new m("controls", null, x)), z.canvas = new m("canvas", null, x), v = r.innerHTML, setTimeout(I, 0)
            }
            var v, t, F, s, q, D, p, B, x = this,
                w = null,
                E = !1,
                G = [],
                z = {},
                y = {};
            if (j(x, {
                    id: function() {
                        return F
                    },
                    isLoaded: function() {
                        return null !== w && void 0 !== w.fp_play && !E
                    },
                    getParent: function() {
                        return r
                    },
                    hide: function(I) {
                        return I && (r.style.height = "0px"), x.isLoaded() && (w.style.height = "0px"), x
                    },
                    show: function() {
                        return r.style.height = B + "px", x.isLoaded() && (w.style.height = p + "px"), x
                    },
                    isHidden: function() {
                        return x.isLoaded() && 0 === parseInt(w.style.height, 10)
                    },
                    load: function(K) {
                        if (!x.isLoaded() && x._fireEvent("onBeforeLoad") !== !1) {
                            var I = function() {
                                    v && !flashembed.isSupported(H.version) && (r.innerHTML = ""), K && (K.cached = !0, k(y, "onLoad", K)), flashembed(r, H, {
                                        config: u
                                    })
                                },
                                J = 0;
                            n(a, function() {
                                this.unload(function() {
                                    ++J == a.length && I()
                                })
                            })
                        }
                        return x
                    },
                    unload: function(K) {
                        if ("" !== v.replace(/\s/g, "")) {
                            if (x._fireEvent("onBeforeUnload") === !1) return K && K(!1), x;
                            E = !0;
                            try {
                                w && (w.fp_isFullscreen() && w.fp_toggleFullscreen(), w.fp_close(), x._fireEvent("onUnload"))
                            } catch (I) {}
                            var J = function() {
                                w = null, r.innerHTML = v, E = !1, K && K(!0)
                            };
                            /WebKit/i.test(navigator.userAgent) && !/Chrome/i.test(navigator.userAgent) ? setTimeout(J, 0) : J()
                        } else K && K(!1);
                        return x
                    },
                    getClip: function(I) {
                        return void 0 === I && (I = D), G[I]
                    },
                    getCommonClip: function() {
                        return t
                    },
                    getPlaylist: function() {
                        return G
                    },
                    getPlugin: function(I) {
                        var K = z[I];
                        if (!K && x.isLoaded()) {
                            var J = x._api().fp_getPlugin(I);
                            J && (K = new m(I, J, x), z[I] = K)
                        }
                        return K
                    },
                    getScreen: function() {
                        return x.getPlugin("screen")
                    },
                    getControls: function() {
                        return x.getPlugin("controls")._fireEvent("onUpdate")
                    },
                    getLogo: function() {
                        try {
                            return x.getPlugin("logo")._fireEvent("onUpdate")
                        } catch (I) {}
                    },
                    getPlay: function() {
                        return x.getPlugin("play")._fireEvent("onUpdate")
                    },
                    getConfig: function(I) {
                        return I ? l(u) : u
                    },
                    getFlashParams: function() {
                        return H
                    },
                    loadPlugin: function(L, K, N, M) {
                        "function" == typeof N && (M = N, N = {});
                        var J = M ? f() : "_";
                        x._api().fp_loadPlugin(L, K, N, J);
                        var I = {};
                        I[J] = M;
                        var O = new m(L, null, x, I);
                        return z[L] = O, O
                    },
                    getState: function() {
                        return x.isLoaded() ? w.fp_getState() : -1
                    },
                    play: function(J, I) {
                        var K = function() {
                            void 0 !== J ? x._api().fp_play(J, I) : x._api().fp_play()
                        };
                        return x.isLoaded() ? K() : E ? setTimeout(function() {
                            x.play(J, I)
                        }, 50) : x.load(function() {
                            K()
                        }), x
                    },
                    getVersion: function() {
                        var J = "flowplayer.js 3.2.12";
                        if (x.isLoaded()) {
                            var I = w.fp_getVersion();
                            return I.push(J), I
                        }
                        return J
                    },
                    _api: function() {
                        if (!x.isLoaded()) throw "Flowplayer " + x.id() + " not loaded when calling an API method";
                        return w
                    },
                    setClip: function(I) {
                        return n(I, function(J, K) {
                            "function" == typeof K ? (k(y, J, K), delete I[J]) : "onCuepoint" == J && $f(r).getCommonClip().onCuepoint(I[J][0], I[J][1])
                        }), x.setPlaylist([I]), x
                    },
                    getIndex: function() {
                        return q
                    },
                    bufferAnimate: function(I) {
                        return w.fp_bufferAnimate(void 0 === I || I), x
                    },
                    _swfHeight: function() {
                        return w.clientHeight
                    }
                }), n("Click*,Load*,Unload*,Keypress*,Volume*,Mute*,Unmute*,PlaylistReplace,ClipAdd,Fullscreen*,FullscreenExit,Error,MouseOver,MouseOut".split(","), function() {
                    var I = "on" + this;
                    if (-1 != I.indexOf("*")) {
                        I = I.slice(0, I.length - 1);
                        var J = "onBefore" + I.slice(2);
                        x[J] = function(K) {
                            return k(y, J, K), x
                        }
                    }
                    x[I] = function(K) {
                        return k(y, I, K), x
                    }
                }), n("pause,resume,mute,unmute,stop,toggle,seek,getStatus,getVolume,setVolume,getTime,isPaused,isPlaying,startBuffering,stopBuffering,isFullscreen,toggleFullscreen,reset,close,setPlaylist,addClip,playFeed,setKeyboardShortcutsEnabled,isKeyboardShortcutsEnabled".split(","), function() {
                    var I = this;
                    x[I] = function(K, J) {
                        if (!x.isLoaded()) return x;
                        var L = null;
                        return L = void 0 !== K && void 0 !== J ? w["fp_" + I](K, J) : void 0 === K ? w["fp_" + I]() : w["fp_" + I](K), "undefined" === L || void 0 === L ? x : L
                    }
                }), x._fireEvent = function(R) {
                    "string" == typeof R && (R = [R]);
                    var S = R[0],
                        P = R[1],
                        N = R[2],
                        M = R[3],
                        L = 0;
                    if (u.debug && h(R), x.isLoaded() || "onLoad" != S || "player" != P || (w = w || c(s), p = x._swfHeight(), n(G, function() {
                            this._fireEvent("onLoad")
                        }), n(z, function(T, U) {
                            U._fireEvent("onUpdate")
                        }), t._fireEvent("onLoad")), "onLoad" != S || "player" == P) {
                        if ("onError" == S && ("string" == typeof P || "number" == typeof P && "number" == typeof N) && (P = N, N = M), "onContextMenu" == S) return void n(u.contextMenu[P], function(T, U) {
                            U.call(x)
                        });
                        if ("onPluginEvent" != S && "onBeforePluginEvent" != S) {
                            if ("onPlaylistReplace" == S) {
                                G = [];
                                var O = 0;
                                n(P, function() {
                                    G.push(new i(this, O++, x))
                                })
                            }
                            if ("onClipAdd" == S) {
                                if (P.isInStream) return;
                                for (P = new i(P, N, x), G.splice(N, 0, P), L = N + 1; L < G.length; L++) G[L].index++
                            }
                            var Q = !0;
                            if ("number" == typeof P && P < G.length) {
                                D = P;
                                var K = G[P];
                                K && (Q = K._fireEvent(S, N, M)), K && Q === !1 || (Q = t._fireEvent(S, N, M, K))
                            }
                            return n(y[S], function() {
                                return Q = this.call(x, P, N), this.cached && y[S].splice(L, 1), Q === !1 ? !1 : void L++
                            }), Q
                        }
                        var I = P.name || P,
                            J = z[I];
                        if (J) return J._fireEvent("onUpdate", P), J._fireEvent(N, R.slice(3))
                    }
                }, "string" == typeof r) {
                var A = c(r);
                if (!A) throw "Flowplayer cannot access element: " + r;
                r = A, C()
            } else C()
        }

        function d(p) {
            this.length = p.length, this.each = function(r) {
                n(p, r)
            }, this.size = function() {
                return p.length
            };
            var q = this;
            for (name in b.prototype) q[name] = function() {
                var r = arguments;
                q.each(function() {
                    this[name].apply(this, r)
                })
            }
        }
        var i = function(u, s, t) {
                var r = this,
                    q = {},
                    v = {};
                if (r.index = s, "string" == typeof u && (u = {
                        url: u
                    }), j(this, u, !0), n("Begin*,Start,Pause*,Resume*,Seek*,Stop*,Finish*,LastSecond,Update,BufferFull,BufferEmpty,BufferStop".split(","), function() {
                        var w = "on" + this;
                        if (-1 != w.indexOf("*")) {
                            w = w.slice(0, w.length - 1);
                            var x = "onBefore" + w.slice(2);
                            r[x] = function(y) {
                                return k(v, x, y), r
                            }
                        }
                        r[w] = function(y) {
                            return k(v, w, y), r
                        }, -1 == s && (r[x] && (t[x] = r[x]), r[w] && (t[w] = r[w]))
                    }), j(this, {
                        onCuepoint: function(y, x) {
                            if (1 == arguments.length) return q.embedded = [null, y], r;
                            "number" == typeof y && (y = [y]);
                            var w = f();
                            return q[w] = [y, x], t.isLoaded() && t._api().fp_addCuepoints(y, s, w), r
                        },
                        update: function(x) {
                            j(r, x), t.isLoaded() && t._api().fp_updateClip(x, s);
                            var w = t.getConfig(),
                                y = -1 == s ? w.clip : w.playlist[s];
                            j(y, x, !0)
                        },
                        _fireEvent: function(w, z, x, B) {
                            if ("onLoad" == w) return n(q, function(C, D) {
                                D[0] && t._api().fp_addCuepoints(D[0], s, C)
                            }), !1;
                            if (B = B || r, "onCuepoint" == w) {
                                var A = q[z];
                                if (A) return A[1].call(t, B, x)
                            }
                            z && -1 != "onBeforeBegin,onMetaData,onStart,onUpdate,onResume".indexOf(w) && (j(B, z), z.metaData && (B.duration ? B.fullDuration = z.metaData.duration : B.duration = z.metaData.duration));
                            var y = !0;
                            return n(v[w], function() {
                                y = this.call(t, B, z, x)
                            }), y
                        }
                    }), u.onCuepoint) {
                    var p = u.onCuepoint;
                    r.onCuepoint.apply(r, "function" == typeof p ? [p] : p), delete u.onCuepoint
                }
                n(u, function(w, x) {
                    "function" == typeof x && (k(v, w, x), delete u[w])
                }), -1 == s && (t.onCuepoint = this.onCuepoint)
            },
            m = function(q, s, r, u) {
                var p = this,
                    t = {},
                    v = !1;
                u && j(t, u), n(s, function(w, x) {
                    "function" == typeof x && (t[w] = x, delete s[w])
                }), j(this, {
                    animate: function(z, A, y) {
                        if (!z) return p;
                        if ("function" == typeof A && (y = A, A = 500), "string" == typeof z) {
                            var x = z;
                            z = {}, z[x] = A, A = 500
                        }
                        if (y) {
                            var w = f();
                            t[w] = y
                        }
                        return void 0 === A && (A = 500), s = r._api().fp_animate(q, z, A, w), p
                    },
                    css: function(x, y) {
                        if (void 0 !== y) {
                            var w = {};
                            w[x] = y, x = w
                        }
                        return s = r._api().fp_css(q, x), j(p, s), p
                    },
                    show: function() {
                        return this.display = "block", r._api().fp_showPlugin(q), p
                    },
                    hide: function() {
                        return this.display = "none", r._api().fp_hidePlugin(q), p
                    },
                    toggle: function() {
                        return this.display = r._api().fp_togglePlugin(q), p
                    },
                    fadeTo: function(z, y, x) {
                        if ("function" == typeof y && (x = y, y = 500), x) {
                            var w = f();
                            t[w] = x
                        }
                        return this.display = r._api().fp_fadeTo(q, z, y, w), this.opacity = z, p
                    },
                    fadeIn: function(x, w) {
                        return p.fadeTo(1, x, w)
                    },
                    fadeOut: function(x, w) {
                        return p.fadeTo(0, x, w)
                    },
                    getName: function() {
                        return q
                    },
                    getPlayer: function() {
                        return r
                    },
                    _fireEvent: function(x, w) {
                        if ("onUpdate" == x) {
                            var A = r._api().fp_getPlugin(q);
                            if (!A) return;
                            j(p, A), delete p.methods, v || (n(A.methods, function() {
                                var C = "" + this;
                                p[C] = function() {
                                    var D = [].slice.call(arguments),
                                        E = r._api().fp_invoke(q, C, D);
                                    return "undefined" === E || void 0 === E ? p : E
                                }
                            }), v = !0)
                        }
                        var B = t[x];
                        if (B) {
                            var z = B.apply(p, w);
                            return "_" == x.slice(0, 1) && delete t[x], z
                        }
                        return p
                    }
                })
            },
            a = [];
        window.flowplayer = window.$f = function() {
            var q = null,
                p = arguments[0];
            if (!arguments.length) return n(a, function() {
                return this.isLoaded() ? (q = this, !1) : void 0
            }), q || a[0];
            if (1 == arguments.length) return "number" == typeof p ? a[p] : "*" == p ? new d(a) : (n(a, function() {
                return this.id() == p.id || this.id() == p || this.getParent() == p ? (q = this, !1) : void 0
            }), q);
            if (arguments.length > 1) {
                var u = arguments[1],
                    r = 3 == arguments.length ? arguments[2] : {};
                if ("string" == typeof u && (u = {
                        src: u
                    }), u = j({
                        bgcolor: "#000000",
                        version: [10, 1],
                        expressInstall: "http://releases.flowplayer.org/swf/expressinstall.swf",
                        cachebusting: !1
                    }, u), "string" == typeof p) {
                    if (-1 != p.indexOf(".")) {
                        var t = [];
                        return n(o(p), function() {
                            t.push(new b(this, l(u), l(r)))
                        }), new d(t)
                    }
                    var s = c(p);
                    return new b(null !== s ? s : l(p), l(u), l(r))
                }
                if (p) return new b(p, l(u), l(r))
            }
            return null
        }, j(window.$f, {
            fireEvent: function() {
                var q = [].slice.call(arguments),
                    r = $f(q[0]);
                return r ? r._fireEvent(q.slice(1)) : null
            },
            addPlugin: function(p, q) {
                return b.prototype[p] = q, $f
            },
            each: n,
            extend: j
        }), "function" == typeof jQuery && (jQuery.fn.flowplayer = function(r, q) {
            if (!arguments.length || "number" == typeof arguments[0]) {
                var p = [];
                return this.each(function() {
                    var s = $f(this);
                    s && p.push(s)
                }), arguments.length ? p[arguments[0]] : new d(p)
            }
            return this.each(function() {
                $f(this, l(r), q ? l(q) : {})
            })
        })
    }(), ! function() {
        function i(m, l) {
            if (l)
                for (var f in l) l.hasOwnProperty(f) && (m[f] = l[f]);
            return m
        }

        function a(f, n) {
            var m = [];
            for (var l in f) f.hasOwnProperty(l) && (m[l] = n(f[l]));
            return m
        }

        function d(f, n, m) {
            if (g.isSupported(n.version)) f.innerHTML = g.getHTML(n, m);
            else if (n.expressInstall && g.isSupported([6, 65])) f.innerHTML = g.getHTML(i(n, {
                src: n.expressInstall
            }), {
                MMredirectURL: encodeURIComponent(location.href),
                MMplayerType: "PlugIn",
                MMdoctitle: document.title
            });
            else if (f.innerHTML.replace(/\s/g, "") || (f.innerHTML = "<h2>Flash version " + n.version + " or greater is required</h2><h3>" + (k[0] > 0 ? "Your version is " + k : "You have no flash plugin installed") + "</h3>" + ("A" == f.tagName ? "<p>Click here to download latest version</p>" : "<p>Download latest version from <a href='" + j + "'>here</a></p>"), ("A" == f.tagName || "DIV" == f.tagName) && (f.onclick = function() {
                    location.href = j
                })), n.onFail) {
                var l = n.onFail.call(this);
                "string" == typeof l && (f.innerHTML = l)
            }
            h && (window[n.id] = document.getElementById(n.id)), i(this, {
                getRoot: function() {
                    return f
                },
                getOptions: function() {
                    return n
                },
                getConf: function() {
                    return m
                },
                getApi: function() {
                    return f.firstChild
                }
            })
        }
        var h = document.all,
            j = "http://get.adobe.com/flashplayer",
            c = "function" == typeof jQuery,
            e = /(\d+)[^\d]+(\d+)[^\d]*(\d*)/,
            b = {
                width: "100%",
                height: "100%",
                id: "_" + ("" + Math.random()).slice(9),
                allowfullscreen: !0,
                allowscriptaccess: "always",
                quality: "high",
                version: [3, 0],
                onFail: null,
                expressInstall: null,
                w3c: !1,
                cachebusting: !1
            };
        window.attachEvent && window.attachEvent("onbeforeunload", function() {
            __flash_unloadHandler = function() {}, __flash_savedUnloadHandler = function() {}
        }), window.flashembed = function(f, m, l) {
            return "string" == typeof f && (f = document.getElementById(f.replace("#", ""))), f ? ("string" == typeof m && (m = {
                src: m
            }), new d(f, i(i({}, b), m), l)) : void 0
        };
        var g = i(window.flashembed, {
                conf: b,
                getVersion: function() {
                    var m, f;
                    try {
                        f = navigator.plugins["Shockwave Flash"].description.slice(16)
                    } catch (o) {
                        try {
                            m = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7"), f = m && m.GetVariable("$version")
                        } catch (n) {
                            try {
                                m = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6"), f = m && m.GetVariable("$version")
                            } catch (l) {}
                        }
                    }
                    return f = e.exec(f), f ? [1 * f[1], 1 * f[1 * f[1] > 9 ? 2 : 3] * 1] : [0, 0]
                },
                asString: function(l) {
                    if (null === l || void 0 === l) return null;
                    var f = typeof l;
                    switch ("object" == f && l.push && (f = "array"), f) {
                        case "string":
                            return l = l.replace(new RegExp('(["\\\\])', "g"), "\\$1"), l = l.replace(/^\s?(\d+\.?\d*)%/, "$1pct"), '"' + l + '"';
                        case "array":
                            return "[" + a(l, function(o) {
                                return g.asString(o)
                            }).join(",") + "]";
                        case "function":
                            return '"function()"';
                        case "object":
                            var m = [];
                            for (var n in l) l.hasOwnProperty(n) && m.push('"' + n + '":' + g.asString(l[n]));
                            return "{" + m.join(",") + "}"
                    }
                    return String(l).replace(/\s/g, " ").replace(/\'/g, '"')
                },
                getHTML: function(o, l) {
                    o = i({}, o);
                    var n = '<object width="' + o.width + '" height="' + o.height + '" id="' + o.id + '" name="' + o.id + '"';
                    o.cachebusting && (o.src += (-1 != o.src.indexOf("?") ? "&" : "?") + Math.random()), n += o.w3c || !h ? ' data="' + o.src + '" type="application/x-shockwave-flash"' : ' classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"', n += ">", (o.w3c || h) && (n += '<param name="movie" value="' + o.src + '" />'), o.width = o.height = o.id = o.w3c = o.src = null, o.onFail = o.version = o.expressInstall = null;
                    for (var m in o) o[m] && (n += '<param name="' + m + '" value="' + o[m] + '" />');
                    var p = "";
                    if (l) {
                        for (var f in l)
                            if (l[f]) {
                                var q = l[f];
                                p += f + "=" + (/function|object/.test(typeof q) ? g.asString(q) : q) + "&"
                            }
                        p = p.slice(0, -1), n += '<param name="flashvars" value=\'' + p + "' />"
                    }
                    return n += "</object>"
                },
                isSupported: function(f) {
                    return k[0] > f[0] || k[0] == f[0] && k[1] >= f[1]
                }
            }),
            k = g.getVersion();
        c && (jQuery.tools = jQuery.tools || {
            version: "3.2.12"
        }, jQuery.tools.flashembed = {
            conf: b
        }, jQuery.fn.flashembed = function(l, f) {
            return this.each(function() {
                $(this).data("flashembed", flashembed(this, l, f))
            })
        })
    }(), $f.addPlugin("controls", function(wrap, options) {
        function fixE(e) {
            return "undefined" == typeof e && (e = window.event), "undefined" == typeof e.layerX && (e.layerX = e.offsetX), "undefined" == typeof e.layerY && (e.layerY = e.offsetY), e
        }

        function w(e) {
            return e.clientWidth
        }

        function offset(e) {
            return e.offsetLeft
        }

        function Draggable(o, min, max, offset) {
            function foo() {}

            function move(x) {
                var ret = !0;
                return x > max && (x = max, ret = !1), min > x && (x = min, ret = !1), o.style.left = x + "px", ret
            }

            function end() {
                document.onmousemove = o.ontouchmove = null, document.onmouseup = o.ontouchend = null, o.onDragEnd(parseInt(o.style.left, 10)), dragging = !1
            }

            function drag(e) {
                return !1
            }
            var dragging = !1;
            return o.onDragStart = o.onDragStart || foo, o.onDragEnd = o.onDragEnd || foo, o.onDrag = o.onDrag || foo, o.onmousedown = o.ontouchstart = function(e) {
                return e = fixE(e), o.onDragStart(parseInt(o.style.left, 10)), document.onmousemove = o.ontouchmove = drag, document.onmouseup = o.ontouchend = end, !1
            }, this.dragTo = function(x) {
                move(x) && o.onDragEnd(x)
            }, this.setMax = function(val) {
                max = val
            }, this.isDragging = function() {
                return dragging
            }, this
        }

        function extend(to, from) {
            if (from)
                for (key in from) key && (to[key] = from[key])
        }

        function byClass(name) {
            for (var els = wrap.getElementsByTagName("*"), re = new RegExp("(^|\\s)" + name + "(\\s|$)"), i = 0; i < els.length; i++)
                if (re.test(els[i].className)) return els[i]
        }

        function pad(val) {
            return val = parseInt(val, 10), val >= 10 ? val : "0" + val
        }

        function toTime(sec) {
            var h = Math.floor(sec / 3600),
                min = Math.floor(sec / 60);
            return sec -= 60 * min, h >= 1 ? (min -= 60 * h, pad(h) + ":" + pad(min) + ":" + pad(sec)) : pad(min) + ":" + pad(sec)
        }

        function getTime(time) {
            return "<span>" + toTime(time) + "</span>"
        }

        function getMax(len, total) {
            return parseInt(Math.min(len / total * trackWidth, trackWidth - ballWidth / 2), 10)
        }
        var self = this,
            opts = {
                playHeadClass: "playhead",
                trackClass: "track",
                playClass: "play",
                pauseClass: "pause",
                bufferClass: "buffer",
                progressClass: "progress",
                timeClass: "time",
                settingsClass: "settings",
                playerPopoutClass: "playericonicon-newtab",
                chatPopoutClass: "chatPopout",
                muteClass: "mute",
                unmuteClass: "unmute",
                fullscreenClass: "fullscreen",
                duration: 0,
                template: '<div class="play"></div><div class="mute"></div><div class="track" style="display:none"><div class="buffer"></div><div class="progress"></div><div class="playhead"></div></div><div class="time"></div>'
            };
        if (extend(opts, options), "string" == typeof wrap && (wrap = document.getElementById(wrap)), wrap) {
            wrap.innerHTML.replace(/\s/g, "") || (wrap.innerHTML = opts.template, $("#playerControls").show());
            var ball = byClass(opts.playHeadClass),
                bufferBar = byClass(opts.bufferClass),
                progressBar = byClass(opts.progressClass),
                track = byClass(opts.trackClass),
                time = byClass(opts.timeClass);
            mute = byClass(byClass(opts.muteClass) ? opts.muteClass : opts.unmuteClass);
            var live = !1;
            time.innerHTML = getTime(0, opts.duration);
            var trackWidth = $("#playerControls").width(),
                ballWidth = w(ball),
                head = new Draggable(ball, 0, 0, offset(wrap) + offset(track) + ballWidth / 2);
            track.onclick = function(e) {
                if (e = fixE(e), e.target == ball) return !1;
                var layerx = void 0 == e.offsetX ? e.layerX : e.offsetX;
                head.dragTo(layerx - ballWidth / 2), console.log(e)
            };
            var play = byClass(opts.playClass);
            play = byClass(byClass(opts.playClass) ? opts.playClass : opts.pauseClass), play.onclick = function() {
                self.isLoaded() && self.isPlaying() && !self.isPaused() ? live ? (self.pause(), self.stop()) : self.pause() : self.play()
            }, mute.onclick = function() {
                self.getStatus().muted ? self.unmute() : self.mute()
            };
            var timer = null;
            return self.duration = 0, self.onStart(function(clip) {
                "video" == options.media_type && $(".track").show();
                var duration = clip.duration || 0;
                live = clip.live, clearInterval(timer), timer = setInterval(function() {
                    trackWidth = $("#playerControls").width();
                    var status = self.getStatus();
                    if (live && (time.innerHTML = "Live"), void 0 === status.time || live) return void clearInterval(timer);
                    live || (time.innerHTML = getTime(status.time, clip.duration)), live && 0 == self.duration && (duration = status.time, self.duration = duration);
                    var x = getMax("video" == options.media_type ? status.bufferEnd : duration, duration);
                    bufferBar.style.width = x + "px", head.setMax(trackWidth), self.isPaused() || head.isDragging() || (x = getMax(status.time, duration), progressBar.style.width = x + "px", ball.style.left = x - ballWidth / 2 + "px")
                }, 1e3)
            }), self.onBegin(function() {
                play.className = opts.pauseClass
            }), self.onPause(function() {
                play.className = opts.playClass
            }), self.onStop(function() {
                play.className = opts.playClass
            }), self.onResume(function() {
                play.className = opts.pauseClass
            }), self.onMute(function() {
                mute.className = opts.unmuteClass
            }), self.onUnmute(function() {
                mute.className = opts.muteClass
            }), self.onFinish(function() {
                play.className = opts.playClass, clearInterval(timer)
            }), self.onUnload(function() {
                time.innerHTML = getTime(0, opts.duration)
            }), self.onUnload(function() {
                time.innerHTML = getTime(0, opts.duration)
            }), ball.onDragEnd = function(x) {
                self.seeked = !0;
                var to = parseInt(x / trackWidth * 100, 10) + "%";
                progressBar.style.width = x + "px", self.isLoaded() && self.seek(to)
            }, ball.onDrag = function(x) {
                progressBar.style.width = x + "px"
            }, self
        }
    }), ! function($) {
        $f.addPlugin("bitrateselect", function(container, options) {
            function parseTemplate(values) {
                var el = template;
                return $.each(values, function(key, val) {
                    ("bitrate" == key || "label" == key && !values.label) && (el = el.replace("{label}", values.bitrate + " k").replace("%7B" + key + "%7D", values.bitrate + " k")), el = el.replace("{" + key + "}", val).replace("%7B" + key + "%7D", val)
                }), el
            }

            function play(bitrate) {
                return plugin ? (plugin.setBitrate(bitrate), !1) : !1
            }

            function setActiveOption(el) {
                wrap.children().removeClass(opts.selectedBitrateClass), el.addClass(opts.selectedBitrateClass)
            }

            function buildBitrateList() {
                wrap.fadeOut(opts.fadeTime).empty(); {
                    var index = ($("#" + self.id()).width(), 0);
                    self.getClip()
                }
                $.each(bitrateItems, function() {
                    var el = parseTemplate(this);
                    el = $(el), el.attr("index", this.bitrate), el.show(), el.click(function() {
                        return setActiveOption(el), play($(this).attr("index")), $(this).is("a") ? !1 : void 0
                    }), wrap.prepend(el), index < bitrateItems.length - 1 && wrap.append(opts.seperator), index++
                }), "none" == wrap.parent().css("display") ? (wrap.show(), wrap.parent("div").fadeIn(opts.fadeTime)) : wrap.fadeIn(opts.fadeTime)
            }

            function showBitrateList() {
                bitrateItems = self.getClip().bitrateItems ? self.getClip().bitrateItems : self.getClip().bitrates, bitrateItems.length > 0 && (wrap.empty(), buildBitrateList())
            }
            var self = this,
                opts = {
                    selectedBitrateClass: "bitrate-selected",
                    pluginName: "bitrateselect",
                    templateId: null,
                    fadeTime: 500,
                    seperator: " "
                };
            $.extend(opts, options);
            var wrap = $(container),
                template = opts.templateId ? $("<ul>").append($(opts.templateId).clone()).remove().html() : wrap.html(),
                plugin = self.getPlugin(opts.pluginName) || null,
                bitrateItems = null;
            return self.onStart(function(clip) {
                showBitrateList(), setActiveOption($('[index = "' + clip.bitrate + '"]', $(wrap)))
            }), self
        })
    }(jQuery), window.emotify = function() {
        var a, b, c = {},
            d = [];
        return a = function(e, f) {
            return f = f || function(h, j, g) {
                return j = (j + ", " + g).replace(/"/g, "&quot;").replace(/</g, "&lt;"), '<img src="' + h + '" title="' + j + '" alt="" class="smiley"/>'
            }, e.replace(b, function(j, g, m) {
                var k = 0,
                    h = m,
                    l = c[m];
                if (!l) {
                    for (; k < d.length && !d[k].regexp.test(m);) k++;
                    h = d[k].name, l = c[h]
                }
                return l ? g + f(l[0], l[1], h, m) : j
            })
        }, a.emoticons = function() {
            var k, m, h, o, l = Array.prototype.slice.call(arguments),
                n = "string" == typeof l[0] ? l.shift() : "",
                f = "boolean" == typeof l[0] ? l.shift() : !1,
                g = l[0],
                j = [];
            if (g) {
                f && (c = {}, d = []);
                for (k in g) c[k] = g[k], c[k][0] = n + c[k][0];
                for (k in c) {
                    if (c[k].length > 2) {
                        for (m = c[k].slice(2).concat(k), h = m.length; h--;) m[h] = m[h].replace(/(\W)/g, "\\$1");
                        o = m.join("|"), d.push({
                            name: k,
                            regexp: new RegExp("^" + o + "$")
                        })
                    } else o = k.replace(/(\W)/g, "\\$1");
                    j.push(o)
                }
                b = new RegExp("(^|\\s)(" + j.join("|") + ")(?=(?:$|\\s))", "g")
            }
            return c
        }, a
    }(), angular.module("rw.translate", ["ng"]).run(["$translate", function($translate) {
        var key = $translate.storageKey(),
            storage = $translate.storage();
        storage ? storage.get(key) ? $translate.uses(storage.get(key)) : angular.isString($translate.preferredLanguage()) ? $translate.uses($translate.preferredLanguage()) : storage.set(key, $translate.uses()) : angular.isString($translate.preferredLanguage()) && $translate.uses($translate.preferredLanguage())
    }]), angular.module("rw.translate").constant("$STORAGE_KEY", "NG_TRANSLATE_LANG_KEY"), angular.module("rw.translate").provider("$translate", ["$STORAGE_KEY", function($STORAGE_KEY) {
        var $preferredLanguage, $fallbackLanguage, $uses, $storageFactory, $storagePrefix, $missingTranslationHandlerFactory, $loaderFactory, $loaderOptions, $translationTable = {},
            $storageKey = $STORAGE_KEY,
            NESTED_OBJECT_DELIMITER = ".",
            translations = function(langKey, translationTable) {
                if (!langKey && !translationTable) return $translationTable;
                if (langKey && !translationTable) {
                    if (angular.isString(langKey)) return $translationTable[langKey];
                    angular.extend($translationTable, flatObject(langKey))
                } else angular.isObject($translationTable[langKey]) || ($translationTable[langKey] = {}), angular.extend($translationTable[langKey], flatObject(translationTable))
            },
            flatObject = function(data, path, result) {
                var key, keyWithPath, val;
                path || (path = []), result || (result = {});
                for (key in data) data.hasOwnProperty(key) && (val = data[key], angular.isObject(val) ? flatObject(val, path.concat(key), result) : (keyWithPath = path.length ? "" + path.join(NESTED_OBJECT_DELIMITER) + NESTED_OBJECT_DELIMITER + key : key, result[keyWithPath] = val));
                return result
            };
        this.translations = translations, this.preferredLanguage = function(langKey) {
            return langKey ? void($preferredLanguage = langKey) : $preferredLanguage
        }, this.fallbackLanguage = function(langKey) {
            return langKey ? void($fallbackLanguage = langKey) : $fallbackLanguage
        }, this.uses = function(langKey) {
            if (!langKey) return $uses;
            if (!$translationTable[langKey] && !$loaderFactory) throw new Error("$translateProvider couldn't find translationTable for langKey: '" + langKey + "'");
            $uses = langKey
        };
        var storageKey = function(key) {
            return key ? void($storageKey = key) : $storagePrefix ? $storagePrefix + $storageKey : $storageKey
        };
        this.storageKey = storageKey, this.useUrlLoader = function(url) {
            this.useLoader("$translateUrlLoader", {
                url: url
            })
        }, this.useStaticFilesLoader = function(options) {
            this.useLoader("$translateStaticFilesLoader", options)
        }, this.useLoader = function(loaderFactory, options) {
            $loaderFactory = loaderFactory, $loaderOptions = options
        }, this.useLocalStorage = function() {
            this.useStorage("$translateLocalStorage")
        }, this.useCookieStorage = function() {
            this.useStorage("$translateCookieStorage")
        }, this.useStorage = function(storageFactory) {
            $storageFactory = storageFactory
        }, this.storagePrefix = function(prefix) {
            return prefix ? void($storagePrefix = prefix) : prefix
        }, this.useMissingTranslationHandlerLog = function() {
            this.useMissingTranslationHandler("$translateMissingTranslationHandlerLog")
        }, this.useMissingTranslationHandler = function(factory) {
            $missingTranslationHandlerFactory = factory
        }, this.$get = ["$interpolate", "$log", "$injector", "$rootScope", "$q", function($interpolate, $log, $injector, $rootScope, $q) {
            var Storage;
            if ($storageFactory && (Storage = $injector.get($storageFactory), !Storage.get || !Storage.set)) throw new Error("Couldn't use storage '" + $storageFactory + "', missing get() or set() method!");
            var $translate = function(translationId, interpolateParams) {
                var table = $uses ? $translationTable[$uses] : $translationTable;
                if (table && table.hasOwnProperty(translationId)) return $interpolate(table[translationId])(interpolateParams);
                if ($missingTranslationHandlerFactory && $injector.get($missingTranslationHandlerFactory)(translationId), $uses && $fallbackLanguage && $uses !== $fallbackLanguage) {
                    var translation = $translationTable[$fallbackLanguage][translationId];
                    if (translation) return $interpolate(translation)(interpolateParams)
                }
                return translationId
            };
            return $translate.preferredLanguage = function() {
                return $preferredLanguage
            }, $translate.fallbackLanguage = function() {
                return $fallbackLanguage
            }, $translate.storage = function() {
                return Storage
            }, $translate.uses = function(key) {
                if (!key) return $uses;
                var deferred = $q.defer();
                return $translationTable[key] ? ($uses = key, $storageFactory && Storage.set($translate.storageKey(), $uses), deferred.resolve($uses), $rootScope.$broadcast("translationChangeSuccess"), deferred.promise) : ($injector.get($loaderFactory)(angular.extend($loaderOptions, {
                    key: key
                })).then(function(data) {
                    $uses = key, translations(key, data), $storageFactory && Storage.set($translate.storageKey(), $uses), $rootScope.$broadcast("translationChangeSuccess"), deferred.resolve($uses)
                }, function(key) {
                    $rootScope.$broadcast("translationChangeError"), deferred.reject(key)
                }), deferred.promise)
            }, $translate.storageKey = function() {
                return storageKey()
            }, $loaderFactory && angular.equals($translationTable, {}) && $translate.uses($translate.uses()), $translate
        }]
    }]), angular.module("rw.translate").directive("translate", ["$filter", "$interpolate", function($filter, $interpolate) {
        var translate = $filter("translate");
        return {
            restrict: "A",
            scope: !0,
            link: function(scope, element, attr) {
                attr.$observe("translate", function(translationId) {
                    scope.translationId = angular.equals(translationId, "") ? $interpolate(element.text().replace(/^\s+|\s+$/g, ""))(scope.$parent) : translationId
                }), attr.$observe("values", function(interpolateParams) {
                    scope.interpolateParams = interpolateParams
                }), scope.$on("translationChangeSuccess", function() {
                    element.html(translate(scope.translationId, scope.interpolateParams))
                }), scope.$watch("translationId + interpolateParams", function(nValue) {
                    nValue && element.html(translate(scope.translationId, scope.interpolateParams))
                })
            }
        }
    }]), angular.module("rw.translate").filter("translate", ["$parse", "$translate", function($parse, $translate) {
        return function(translationId, interpolateParams) {
            return angular.isObject(interpolateParams) || (interpolateParams = $parse(interpolateParams)()), $translate(translationId, interpolateParams)
        }
    }]), angular.module("rw.translate").factory("$translateCookieStorage", ["$cookieStore", function($cookieStore) {
        var $translateCookieStorage = {
            get: function(name) {
                return $cookieStore.get(name)
            },
            set: function(name, value) {
                $cookieStore.put(name, value)
            }
        };
        return $translateCookieStorage
    }]),
    function($) {
        function Plugin(element, options) {
            function init() {
                $el.hasClass("horizontal") && (scrollDirection = "horiz", scrollOffsetAttr = "scrollLeft", sizeAttr = "width", offsetAttr = "left"), $el.prepend('<div class="tse-scrollbar"><div class="drag-handle"></div></div>'), $scrollbarEl = $el.find(".tse-scrollbar"), $dragHandleEl = $el.find(".drag-handle"), options.wrapContent && $contentEl.wrap('<div class="tse-scroll-content" />'), $scrollContentEl = $el.find(".tse-scroll-content"), resizeScrollContent(), options.autoHide && $el.on("mouseenter", flashScrollbar), $dragHandleEl.on("mousedown", startDrag), $scrollbarEl.on("mousedown", jumpScroll), $scrollContentEl.on("scroll", onScrolled), resizeScrollbar(), $(window).on("resize", function() {
                    recalculate()
                }), options.autoHide || showScrollbar()
            }

            function startDrag(e) {
                e.preventDefault();
                var eventOffset = e.pageY;
                "horiz" === scrollDirection && (eventOffset = e.pageX), dragOffset = eventOffset - $dragHandleEl.offset()[offsetAttr], $(document).on("mousemove", drag), $(document).on("mouseup", endDrag)
            }

            function drag(e) {
                e.preventDefault();
                var eventOffset = e.pageY;
                "horiz" === scrollDirection && (eventOffset = e.pageX);
                var dragPos = eventOffset - $scrollbarEl.offset()[offsetAttr] - dragOffset,
                    dragPerc = dragPos / $scrollbarEl[sizeAttr](),
                    scrollPos = dragPerc * $contentEl[sizeAttr]();
                $scrollContentEl[scrollOffsetAttr](scrollPos)
            }

            function endDrag() {
                $(document).off("mousemove", drag), $(document).off("mouseup", endDrag)
            }

            function jumpScroll(e) {
                if (e.target !== $dragHandleEl[0]) {
                    var jumpAmt = pageJumpMultp * $scrollContentEl[sizeAttr](),
                        eventOffset = "vert" === scrollDirection ? e.originalEvent.layerY : e.originalEvent.layerX,
                        dragHandleOffset = $dragHandleEl.position()[offsetAttr],
                        scrollPos = dragHandleOffset > eventOffset ? $scrollContentEl[scrollOffsetAttr]() - jumpAmt : $scrollContentEl[scrollOffsetAttr]() + jumpAmt;
                    $scrollContentEl[scrollOffsetAttr](scrollPos)
                }
            }

            function onScrolled() {
                flashScrollbar()
            }

            function resizeScrollbar() {
                var contentSize = $contentEl[sizeAttr](),
                    scrollOffset = $scrollContentEl[scrollOffsetAttr](),
                    scrollbarSize = $scrollbarEl[sizeAttr](),
                    scrollbarRatio = scrollbarSize / contentSize,
                    handleOffset = Math.round(scrollbarRatio * scrollOffset) + 2,
                    handleSize = Math.floor(scrollbarRatio * (scrollbarSize - 2)) - 2;
                contentSize > scrollbarSize ? ($dragHandleEl.css("vert" === scrollDirection ? {
                    top: handleOffset,
                    height: handleSize
                } : {
                    left: handleOffset,
                    width: handleSize
                }), $scrollbarEl.show()) : $scrollbarEl.hide()
            }

            function flashScrollbar() {
                resizeScrollbar(), showScrollbar()
            }

            function showScrollbar() {
                $dragHandleEl.addClass("visible"), options.autoHide && ("number" == typeof flashTimeout && window.clearTimeout(flashTimeout), flashTimeout = window.setTimeout(function() {
                    hideScrollbar()
                }, 1e3))
            }

            function hideScrollbar() {
                $dragHandleEl.removeClass("visible"), "number" == typeof flashTimeout && window.clearTimeout(flashTimeout)
            }

            function resizeScrollContent() {
                "vert" === scrollDirection ? ($scrollContentEl.width($el.width() + scrollbarWidth()), $scrollContentEl.height($el.height())) : ($scrollContentEl.width($el.width()), $scrollContentEl.height($el.height() + scrollbarWidth()), $contentEl.height($el.height()))
            }

            function scrollbarWidth() {
                var tempEl = $('<div class="scrollbar-width-tester" style="width:50px;height:50px;overflow-y:scroll;position:absolute;top:-200px;left:-200px;"><div style="height:100px;"></div>');
                $("body").append(tempEl);
                var width = $(tempEl).innerWidth(),
                    widthMinusScrollbars = $("div", tempEl).innerWidth();
                return tempEl.remove(), width === widthMinusScrollbars && navigator.userAgent.toLowerCase().indexOf("firefox") > -1 ? 17 : width - widthMinusScrollbars
            }

            function recalculate() {
                resizeScrollContent(), resizeScrollbar()
            }

            function option(key, val) {
                return val ? void(options[key] = val) : options[key]
            }

            function destroy() {
                $scrollbarEl.remove(), hook("onDestroy"), $el.removeData("plugin_" + pluginName)
            }

            function hook(hookName) {
                void 0 !== options[hookName] && options[hookName].call(el)
            }
            var $scrollContentEl, $scrollbarEl, $dragHandleEl, dragOffset, flashTimeout, el = element,
                $el = $(element),
                $contentEl = $el.find(".tse-content"),
                pageJumpMultp = 7 / 8,
                scrollDirection = "vert",
                scrollOffsetAttr = "scrollTop",
                sizeAttr = "height",
                offsetAttr = "top";
            return options = $.extend({}, $.fn[pluginName].defaults, options), init(), {
                option: option,
                destroy: destroy,
                recalculate: recalculate
            }
        }
        var pluginName = "TrackpadScrollEmulator";
        $.fn[pluginName] = function(options) {
            if ("string" == typeof arguments[0]) {
                var returnVal, methodName = arguments[0],
                    args = Array.prototype.slice.call(arguments, 1);
                return this.each(function() {
                    if (!$.data(this, "plugin_" + pluginName) || "function" != typeof $.data(this, "plugin_" + pluginName)[methodName]) throw new Error("Method " + methodName + " does not exist on jQuery." + pluginName);
                    returnVal = $.data(this, "plugin_" + pluginName)[methodName].apply(this, args)
                }), void 0 !== returnVal ? returnVal : this
            }
            return "object" != typeof options && options ? void 0 : this.each(function() {
                $.data(this, "plugin_" + pluginName) || $.data(this, "plugin_" + pluginName, new Plugin(this, options))
            })
        }, $.fn[pluginName].defaults = {
            onInit: function() {},
            onDestroy: function() {},
            wrapContent: !0,
            autoHide: !0
        }
    }(jQuery);
var dateFormat = function() {
    var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,
        timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
        timezoneClip = /[^-+\dA-Z]/g,
        pad = function(val, len) {
            for (val = String(val), len = len || 2; val.length < len;) val = "0" + val;
            return val
        };
    return function(date, mask, utc) {
        var dF = dateFormat;
        if (1 != arguments.length || "[object String]" != Object.prototype.toString.call(date) || /\d/.test(date) || (mask = date, date = void 0), date = date ? new Date(date) : new Date, isNaN(date)) throw SyntaxError("invalid date");
        mask = String(dF.masks[mask] || mask || dF.masks["default"]), "UTC:" == mask.slice(0, 4) && (mask = mask.slice(4), utc = !0);
        var _ = utc ? "getUTC" : "get",
            d = date[_ + "Date"](),
            D = date[_ + "Day"](),
            m = date[_ + "Month"](),
            y = date[_ + "FullYear"](),
            H = date[_ + "Hours"](),
            M = date[_ + "Minutes"](),
            s = date[_ + "Seconds"](),
            L = date[_ + "Milliseconds"](),
            o = utc ? 0 : date.getTimezoneOffset(),
            flags = {
                d: d,
                dd: pad(d),
                ddd: dF.i18n.dayNames[D],
                dddd: dF.i18n.dayNames[D + 7],
                m: m + 1,
                mm: pad(m + 1),
                mmm: dF.i18n.monthNames[m],
                mmmm: dF.i18n.monthNames[m + 12],
                yy: String(y).slice(2),
                yyyy: y,
                h: H % 12 || 12,
                hh: pad(H % 12 || 12),
                H: H,
                HH: pad(H),
                M: M,
                MM: pad(M),
                s: s,
                ss: pad(s),
                l: pad(L, 3),
                L: pad(L > 99 ? Math.round(L / 10) : L),
                t: 12 > H ? "a" : "p",
                tt: 12 > H ? "am" : "pm",
                T: 12 > H ? "A" : "P",
                TT: 12 > H ? "AM" : "PM",
                Z: utc ? "UTC" : (String(date).match(timezone) || [""]).pop().replace(timezoneClip, ""),
                o: (o > 0 ? "-" : "+") + pad(100 * Math.floor(Math.abs(o) / 60) + Math.abs(o) % 60, 4),
                S: ["th", "st", "nd", "rd"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]
            };
        return mask.replace(token, function($0) {
            return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1)
        })
    }
}();
dateFormat.masks = {
        "default": "ddd mmm dd yyyy HH:MM:ss",
        shortDate: "m/d/yy",
        mediumDate: "mmm d, yyyy",
        longDate: "mmmm d, yyyy",
        fullDate: "dddd, mmmm d, yyyy",
        shortTime: "h:MM TT",
        mediumTime: "h:MM:ss TT",
        longTime: "h:MM:ss TT Z",
        isoDate: "yyyy-mm-dd",
        isoTime: "HH:MM:ss",
        isoDateTime: "yyyy-mm-dd'T'HH:MM:ss",
        isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
    }, dateFormat.i18n = {
        dayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    }, Date.prototype.format = function(mask, utc) {
        return dateFormat(this, mask, utc)
    }, ! function(e) {
        "use strict";
        e(function() {
            e.support.transition = function() {
                var e = function() {
                    var n, e = document.createElement("bootstrap"),
                        t = {
                            WebkitTransition: "webkitTransitionEnd",
                            MozTransition: "transitionend",
                            OTransition: "oTransitionEnd otransitionend",
                            transition: "transitionend"
                        };
                    for (n in t)
                        if (void 0 !== e.style[n]) return t[n]
                }();
                return e && {
                    end: e
                }
            }()
        })
    }(window.jQuery), ! function(e) {
        "use strict";
        var t = '[data-dismiss="alert"]',
            n = function(n) {
                e(n).on("click", t, this.close)
            };
        n.prototype.close = function(t) {
            function s() {
                i.trigger("closed").remove()
            }
            var i, n = e(this),
                r = n.attr("data-target");
            r || (r = n.attr("href"), r = r && r.replace(/.*(?=#[^\s]*$)/, "")), i = e(r), t && t.preventDefault(), i.length || (i = n.hasClass("alert") ? n : n.parent()), i.trigger(t = e.Event("close")), t.isDefaultPrevented() || (i.removeClass("in"), e.support.transition && i.hasClass("fade") ? i.on(e.support.transition.end, s) : s())
        };
        var r = e.fn.alert;
        e.fn.alert = function(t) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("alert");
                i || r.data("alert", i = new n(this)), "string" == typeof t && i[t].call(r)
            })
        }, e.fn.alert.Constructor = n, e.fn.alert.noConflict = function() {
            return e.fn.alert = r, this
        }, e(document).on("click.alert.data-api", t, n.prototype.close)
    }(window.jQuery), ! function(e) {
        "use strict";
        var t = function(t, n) {
            this.$element = e(t), this.options = e.extend({}, e.fn.button.defaults, n)
        };
        t.prototype.setState = function(e) {
            var t = "disabled",
                n = this.$element,
                r = n.data(),
                i = n.is("input") ? "val" : "html";
            e += "Text", r.resetText || n.data("resetText", n[i]()), n[i](r[e] || this.options[e]), setTimeout(function() {
                "loadingText" == e ? n.addClass(t).attr(t, t) : n.removeClass(t).removeAttr(t)
            }, 0)
        }, t.prototype.toggle = function() {
            var e = this.$element.closest('[data-toggle="buttons-radio"]');
            e && e.find(".active").removeClass("active"), this.$element.toggleClass("active")
        };
        var n = e.fn.button;
        e.fn.button = function(n) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("button"),
                    s = "object" == typeof n && n;
                i || r.data("button", i = new t(this, s)), "toggle" == n ? i.toggle() : n && i.setState(n)
            })
        }, e.fn.button.defaults = {
            loadingText: "loading..."
        }, e.fn.button.Constructor = t, e.fn.button.noConflict = function() {
            return e.fn.button = n, this
        }, e(document).on("click.button.data-api", "[data-toggle^=button]", function(t) {
            var n = e(t.target);
            n.hasClass("btn") || (n = n.closest(".btn")), n.button("toggle")
        })
    }(window.jQuery), ! function(e) {
        "use strict";
        var t = function(t, n) {
            this.$element = e(t), this.$indicators = this.$element.find(".carousel-indicators"), this.options = n, "hover" == this.options.pause && this.$element.on("mouseenter", e.proxy(this.pause, this)).on("mouseleave", e.proxy(this.cycle, this))
        };
        t.prototype = {
            cycle: function(t) {
                return t || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(e.proxy(this.next, this), this.options.interval)), this
            },
            getActiveIndex: function() {
                return this.$active = this.$element.find(".item.active"), this.$items = this.$active.parent().children(), this.$items.index(this.$active)
            },
            to: function(t) {
                var n = this.getActiveIndex(),
                    r = this;
                if (!(t > this.$items.length - 1 || 0 > t)) return this.sliding ? this.$element.one("slid", function() {
                    r.to(t)
                }) : n == t ? this.pause().cycle() : this.slide(t > n ? "next" : "prev", e(this.$items[t]))
            },
            pause: function(t) {
                return t || (this.paused = !0), this.$element.find(".next, .prev").length && e.support.transition.end && (this.$element.trigger(e.support.transition.end), this.cycle(!0)), clearInterval(this.interval), this.interval = null, this
            },
            next: function() {
                return this.sliding ? void 0 : this.slide("next")
            },
            prev: function() {
                return this.sliding ? void 0 : this.slide("prev")
            },
            slide: function(t, n) {
                var f, r = this.$element.find(".item.active"),
                    i = n || r[t](),
                    s = this.interval,
                    o = "next" == t ? "left" : "right",
                    u = "next" == t ? "first" : "last",
                    a = this;
                if (this.sliding = !0, s && this.pause(), i = i.length ? i : this.$element.find(".item")[u](), f = e.Event("slide", {
                        relatedTarget: i[0],
                        direction: o
                    }), !i.hasClass("active")) {
                    if (this.$indicators.length && (this.$indicators.find(".active").removeClass("active"), this.$element.one("slid", function() {
                            var t = e(a.$indicators.children()[a.getActiveIndex()]);
                            t && t.addClass("active")
                        })), e.support.transition && this.$element.hasClass("slide")) {
                        if (this.$element.trigger(f), f.isDefaultPrevented()) return;
                        i.addClass(t), i[0].offsetWidth, r.addClass(o), i.addClass(o), this.$element.one(e.support.transition.end, function() {
                            i.removeClass([t, o].join(" ")).addClass("active"), r.removeClass(["active", o].join(" ")), a.sliding = !1, setTimeout(function() {
                                a.$element.trigger("slid")
                            }, 0)
                        })
                    } else {
                        if (this.$element.trigger(f), f.isDefaultPrevented()) return;
                        r.removeClass("active"), i.addClass("active"), this.sliding = !1, this.$element.trigger("slid")
                    }
                    return s && this.cycle(), this
                }
            }
        };
        var n = e.fn.carousel;
        e.fn.carousel = function(n) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("carousel"),
                    s = e.extend({}, e.fn.carousel.defaults, "object" == typeof n && n),
                    o = "string" == typeof n ? n : s.slide;
                i || r.data("carousel", i = new t(this, s)), "number" == typeof n ? i.to(n) : o ? i[o]() : s.interval && i.pause().cycle()
            })
        }, e.fn.carousel.defaults = {
            interval: 5e3,
            pause: "hover"
        }, e.fn.carousel.Constructor = t, e.fn.carousel.noConflict = function() {
            return e.fn.carousel = n, this
        }, e(document).on("click.carousel.data-api", "[data-slide], [data-slide-to]", function(t) {
            var r, o, n = e(this),
                i = e(n.attr("data-target") || (r = n.attr("href")) && r.replace(/.*(?=#[^\s]+$)/, "")),
                s = e.extend({}, i.data(), n.data());
            i.carousel(s), (o = n.attr("data-slide-to")) && i.data("carousel").pause().to(o).cycle(), t.preventDefault()
        })
    }(window.jQuery), ! function(e) {
        "use strict";
        var t = function(t, n) {
            this.$element = e(t), this.options = e.extend({}, e.fn.collapse.defaults, n), this.options.parent && (this.$parent = e(this.options.parent)), this.options.toggle && this.toggle()
        };
        t.prototype = {
            constructor: t,
            dimension: function() {
                var e = this.$element.hasClass("width");
                return e ? "width" : "height"
            },
            show: function() {
                var t, n, r, i;
                if (!this.transitioning && !this.$element.hasClass("in")) {
                    if (t = this.dimension(), n = e.camelCase(["scroll", t].join("-")), r = this.$parent && this.$parent.find("> .accordion-group > .in"), r && r.length) {
                        if (i = r.data("collapse"), i && i.transitioning) return;
                        r.collapse("hide"), i || r.data("collapse", null)
                    }
                    this.$element[t](0), this.transition("addClass", e.Event("show"), "shown"), e.support.transition && this.$element[t](this.$element[0][n])
                }
            },
            hide: function() {
                var t;
                !this.transitioning && this.$element.hasClass("in") && (t = this.dimension(), this.reset(this.$element[t]()), this.transition("removeClass", e.Event("hide"), "hidden"), this.$element[t](0))
            },
            reset: function(e) {
                var t = this.dimension();
                return this.$element.removeClass("collapse")[t](e || "auto")[0].offsetWidth, this.$element[null !== e ? "addClass" : "removeClass"]("collapse"), this
            },
            transition: function(t, n, r) {
                var i = this,
                    s = function() {
                        "show" == n.type && i.reset(), i.transitioning = 0, i.$element.trigger(r)
                    };
                this.$element.trigger(n), n.isDefaultPrevented() || (this.transitioning = 1, this.$element[t]("in"), e.support.transition && this.$element.hasClass("collapse") ? this.$element.one(e.support.transition.end, s) : s())
            },
            toggle: function() {
                this[this.$element.hasClass("in") ? "hide" : "show"]()
            }
        };
        var n = e.fn.collapse;
        e.fn.collapse = function(n) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("collapse"),
                    s = e.extend({}, e.fn.collapse.defaults, r.data(), "object" == typeof n && n);
                i || r.data("collapse", i = new t(this, s)), "string" == typeof n && i[n]()
            })
        }, e.fn.collapse.defaults = {
            toggle: !0
        }, e.fn.collapse.Constructor = t, e.fn.collapse.noConflict = function() {
            return e.fn.collapse = n, this
        }, e(document).on("click.collapse.data-api", "[data-toggle=collapse]", function(t) {
            var r, n = e(this),
                i = n.attr("data-target") || t.preventDefault() || (r = n.attr("href")) && r.replace(/.*(?=#[^\s]+$)/, ""),
                s = e(i).data("collapse") ? "toggle" : n.data();
            n[e(i).hasClass("in") ? "addClass" : "removeClass"]("collapsed"), e(i).collapse(s)
        })
    }(window.jQuery), ! function(e) {
        "use strict";

        function r() {
            e(".dropdown-backdrop").remove(), e(t).each(function() {
                i(e(this)).removeClass("open")
            })
        }

        function i(t) {
            var r, n = t.attr("data-target");
            return n || (n = t.attr("href"), n = n && /#/.test(n) && n.replace(/.*(?=#[^\s]*$)/, "")), r = n && e(n), r && r.length || (r = t.parent()), r
        }
        var t = "[data-toggle=dropdown]",
            n = function(t) {
                var n = e(t).on("click.dropdown.data-api", this.toggle);
                e("html").on("click.dropdown.data-api", function() {
                    n.parent().removeClass("open")
                })
            };
        n.prototype = {
            constructor: n,
            toggle: function() {
                var s, o, n = e(this);
                if (!n.is(".disabled, :disabled")) return s = i(n), o = s.hasClass("open"), r(), o || ("ontouchstart" in document.documentElement && e('<div class="dropdown-backdrop"/>').insertBefore(e(this)).on("click", r), s.toggleClass("open")), n.focus(), !1
            },
            keydown: function(n) {
                var r, s, u, a, f;
                if (/(38|40|27)/.test(n.keyCode) && (r = e(this), n.preventDefault(), n.stopPropagation(), !r.is(".disabled, :disabled"))) {
                    if (u = i(r), a = u.hasClass("open"), !a || a && 27 == n.keyCode) return 27 == n.which && u.find(t).focus(), r.click();
                    s = e("[role=menu] li:not(.divider):visible a", u), s.length && (f = s.index(s.filter(":focus")), 38 == n.keyCode && f > 0 && f--, 40 == n.keyCode && f < s.length - 1 && f++, ~f || (f = 0), s.eq(f).focus())
                }
            }
        };
        var s = e.fn.dropdown;
        e.fn.dropdown = function(t) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("dropdown");
                i || r.data("dropdown", i = new n(this)), "string" == typeof t && i[t].call(r)
            })
        }, e.fn.dropdown.Constructor = n, e.fn.dropdown.noConflict = function() {
            return e.fn.dropdown = s, this
        }, e(document).on("click.dropdown.data-api", r).on("click.dropdown.data-api", ".dropdown form", function(e) {
            e.stopPropagation()
        }).on("click.dropdown.data-api", t, n.prototype.toggle).on("keydown.dropdown.data-api", t + ", [role=menu]", n.prototype.keydown)
    }(window.jQuery), ! function(e) {
        "use strict";
        var t = function(t, n) {
            this.options = n, this.$element = e(t).delegate('[data-dismiss="modal"]', "click.dismiss.modal", e.proxy(this.hide, this)), this.options.remote && this.$element.find(".modal-body").load(this.options.remote)
        };
        t.prototype = {
            constructor: t,
            toggle: function() {
                return this[this.isShown ? "hide" : "show"]()
            },
            show: function() {
                var t = this,
                    n = e.Event("show");
                this.$element.trigger(n), this.isShown || n.isDefaultPrevented() || (this.isShown = !0, this.escape(), this.backdrop(function() {
                    var n = e.support.transition && t.$element.hasClass("fade");
                    t.$element.parent().length || t.$element.appendTo(document.body), t.$element.show(), n && t.$element[0].offsetWidth, t.$element.addClass("in").attr("aria-hidden", !1), t.enforceFocus(), n ? t.$element.one(e.support.transition.end, function() {
                        t.$element.focus().trigger("shown")
                    }) : t.$element.focus().trigger("shown")
                }))
            },
            hide: function(t) {
                t && t.preventDefault();
                t = e.Event("hide"), this.$element.trigger(t), this.isShown && !t.isDefaultPrevented() && (this.isShown = !1, this.escape(), e(document).off("focusin.modal"), this.$element.removeClass("in").attr("aria-hidden", !0), e.support.transition && this.$element.hasClass("fade") ? this.hideWithTransition() : this.hideModal())
            },
            enforceFocus: function() {
                var t = this;
                e(document).on("focusin.modal", function(e) {
                    t.$element[0] !== e.target && !t.$element.has(e.target).length && t.$element.focus()
                })
            },
            escape: function() {
                var e = this;
                this.isShown && this.options.keyboard ? this.$element.on("keyup.dismiss.modal", function(t) {
                    27 == t.which && e.hide()
                }) : this.isShown || this.$element.off("keyup.dismiss.modal")
            },
            hideWithTransition: function() {
                var t = this,
                    n = setTimeout(function() {
                        t.$element.off(e.support.transition.end), t.hideModal()
                    }, 500);
                this.$element.one(e.support.transition.end, function() {
                    clearTimeout(n), t.hideModal()
                })
            },
            hideModal: function() {
                var e = this;
                this.$element.hide(), this.backdrop(function() {
                    e.removeBackdrop(), e.$element.trigger("hidden")
                })
            },
            removeBackdrop: function() {
                this.$backdrop && this.$backdrop.remove(), this.$backdrop = null
            },
            backdrop: function(t) {
                var r = this.$element.hasClass("fade") ? "fade" : "";
                if (this.isShown && this.options.backdrop) {
                    var i = e.support.transition && r;
                    if (this.$backdrop = e('<div class="modal-backdrop ' + r + '" />').appendTo(document.body), this.$backdrop.click("static" == this.options.backdrop ? e.proxy(this.$element[0].focus, this.$element[0]) : e.proxy(this.hide, this)), i && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !t) return;
                    i ? this.$backdrop.one(e.support.transition.end, t) : t()
                } else !this.isShown && this.$backdrop ? (this.$backdrop.removeClass("in"), e.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one(e.support.transition.end, t) : t()) : t && t()
            }
        };
        var n = e.fn.modal;
        e.fn.modal = function(n) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("modal"),
                    s = e.extend({}, e.fn.modal.defaults, r.data(), "object" == typeof n && n);
                i || r.data("modal", i = new t(this, s)), "string" == typeof n ? i[n]() : s.show && i.show()
            })
        }, e.fn.modal.defaults = {
            backdrop: !0,
            keyboard: !0,
            show: !0
        }, e.fn.modal.Constructor = t, e.fn.modal.noConflict = function() {
            return e.fn.modal = n, this
        }, e(document).on("click.modal.data-api", '[data-toggle="modal"]', function(t) {
            var n = e(this),
                r = n.attr("href"),
                i = e(n.attr("data-target") || r && r.replace(/.*(?=#[^\s]+$)/, "")),
                s = i.data("modal") ? "toggle" : e.extend({
                    remote: !/#/.test(r) && r
                }, i.data(), n.data());
            t.preventDefault(), i.modal(s).one("hide", function() {
                n.focus()
            })
        })
    }(window.jQuery), ! function(e) {
        "use strict";
        var t = function(e, t) {
            this.init("tooltip", e, t)
        };
        t.prototype = {
            constructor: t,
            init: function(t, n, r) {
                var i, s, o, u, a;
                for (this.type = t, this.$element = e(n), this.options = this.getOptions(r), this.enabled = !0, o = this.options.trigger.split(" "), a = o.length; a--;) u = o[a], "click" == u ? this.$element.on("click." + this.type, this.options.selector, e.proxy(this.toggle, this)) : "manual" != u && (i = "hover" == u ? "mouseenter" : "focus", s = "hover" == u ? "mouseleave" : "blur", this.$element.on(i + "." + this.type, this.options.selector, e.proxy(this.enter, this)), this.$element.on(s + "." + this.type, this.options.selector, e.proxy(this.leave, this)));
                this.options.selector ? this._options = e.extend({}, this.options, {
                    trigger: "manual",
                    selector: ""
                }) : this.fixTitle()
            },
            getOptions: function(t) {
                return t = e.extend({}, e.fn[this.type].defaults, this.$element.data(), t), t.delay && "number" == typeof t.delay && (t.delay = {
                    show: t.delay,
                    hide: t.delay
                }), t
            },
            enter: function(t) {
                var i, n = e.fn[this.type].defaults,
                    r = {};
                return this._options && e.each(this._options, function(e, t) {
                    n[e] != t && (r[e] = t)
                }, this), i = e(t.currentTarget)[this.type](r).data(this.type), i.options.delay && i.options.delay.show ? (clearTimeout(this.timeout), i.hoverState = "in", this.timeout = setTimeout(function() {
                    "in" == i.hoverState && i.show()
                }, i.options.delay.show), void 0) : i.show()
            },
            leave: function(t) {
                var n = e(t.currentTarget)[this.type](this._options).data(this.type);
                return this.timeout && clearTimeout(this.timeout), n.options.delay && n.options.delay.hide ? (n.hoverState = "out", void(this.timeout = setTimeout(function() {
                    "out" == n.hoverState && n.hide()
                }, n.options.delay.hide))) : n.hide()
            },
            show: function() {
                var t, n, r, i, s, o, u = e.Event("show");
                if (this.hasContent() && this.enabled) {
                    if (this.$element.trigger(u), u.isDefaultPrevented()) return;
                    switch (t = this.tip(), this.setContent(), this.options.animation && t.addClass("fade"), s = "function" == typeof this.options.placement ? this.options.placement.call(this, t[0], this.$element[0]) : this.options.placement, t.detach().css({
                        top: 0,
                        left: 0,
                        display: "block"
                    }), this.options.container ? t.appendTo(this.options.container) : t.insertAfter(this.$element), n = this.getPosition(), r = t[0].offsetWidth, i = t[0].offsetHeight, s) {
                        case "bottom":
                            o = {
                                top: n.top + n.height,
                                left: n.left + n.width / 2 - r / 2
                            };
                            break;
                        case "top":
                            o = {
                                top: n.top - i,
                                left: n.left + n.width / 2 - r / 2
                            };
                            break;
                        case "left":
                            o = {
                                top: n.top + n.height / 2 - i / 2,
                                left: n.left - r
                            };
                            break;
                        case "right":
                            o = {
                                top: n.top + n.height / 2 - i / 2,
                                left: n.left + n.width
                            }
                    }
                    this.applyPlacement(o, s), this.$element.trigger("shown")
                }
            },
            applyPlacement: function(e, t) {
                var s, o, u, a, n = this.tip(),
                    r = n[0].offsetWidth,
                    i = n[0].offsetHeight;
                n.offset(e).addClass(t).addClass("in"), s = n[0].offsetWidth, o = n[0].offsetHeight, "top" == t && o != i && (e.top = e.top + i - o, a = !0), "bottom" == t || "top" == t ? (u = 0, e.left < 0 && (u = -2 * e.left, e.left = 0, n.offset(e), s = n[0].offsetWidth, o = n[0].offsetHeight), this.replaceArrow(u - r + s, s, "left")) : this.replaceArrow(o - i, o, "top"), a && n.offset(e)
            },
            replaceArrow: function(e, t, n) {
                this.arrow().css(n, e ? 50 * (1 - e / t) + "%" : "")
            },
            setContent: function() {
                var e = this.tip(),
                    t = this.getTitle();
                e.find(".tooltip-inner")[this.options.html ? "html" : "text"](t), e.removeClass("fade in top bottom left right")
            },
            hide: function() {
                function i() {
                    var t = setTimeout(function() {
                        n.off(e.support.transition.end).detach()
                    }, 500);
                    n.one(e.support.transition.end, function() {
                        clearTimeout(t), n.detach()
                    })
                }
                var n = this.tip(),
                    r = e.Event("hide");
                return this.$element.trigger(r), r.isDefaultPrevented() ? void 0 : (n.removeClass("in"), e.support.transition && this.$tip.hasClass("fade") ? i() : n.detach(), this.$element.trigger("hidden"), this)
            },
            fixTitle: function() {
                var e = this.$element;
                (e.attr("title") || "string" != typeof e.attr("data-original-title")) && e.attr("data-original-title", e.attr("title") || "").attr("title", "")
            },
            hasContent: function() {
                return this.getTitle()
            },
            getPosition: function() {
                var t = this.$element[0];
                return e.extend({}, "function" == typeof t.getBoundingClientRect ? t.getBoundingClientRect() : {
                    width: t.offsetWidth,
                    height: t.offsetHeight
                }, this.$element.offset())
            },
            getTitle: function() {
                var e, t = this.$element,
                    n = this.options;
                return e = t.attr("data-original-title") || ("function" == typeof n.title ? n.title.call(t[0]) : n.title)
            },
            tip: function() {
                return this.$tip = this.$tip || e(this.options.template)
            },
            arrow: function() {
                return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
            },
            validate: function() {
                this.$element[0].parentNode || (this.hide(), this.$element = null, this.options = null)
            },
            enable: function() {
                this.enabled = !0
            },
            disable: function() {
                this.enabled = !1
            },
            toggleEnabled: function() {
                this.enabled = !this.enabled
            },
            toggle: function(t) {
                var n = t ? e(t.currentTarget)[this.type](this._options).data(this.type) : this;
                n.tip().hasClass("in") ? n.hide() : n.show()
            },
            destroy: function() {
                this.hide().$element.off("." + this.type).removeData(this.type)
            }
        };
        var n = e.fn.tooltip;
        e.fn.tooltip = function(n) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("tooltip"),
                    s = "object" == typeof n && n;
                i || r.data("tooltip", i = new t(this, s)), "string" == typeof n && i[n]()
            })
        }, e.fn.tooltip.Constructor = t, e.fn.tooltip.defaults = {
            animation: !0,
            placement: "top",
            selector: !1,
            template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
            trigger: "hover focus",
            title: "",
            delay: 0,
            html: !1,
            container: !1
        }, e.fn.tooltip.noConflict = function() {
            return e.fn.tooltip = n, this
        }
    }(window.jQuery), ! function(e) {
        "use strict";
        var t = function(e, t) {
            this.init("popover", e, t)
        };
        t.prototype = e.extend({}, e.fn.tooltip.Constructor.prototype, {
            constructor: t,
            setContent: function() {
                var e = this.tip(),
                    t = this.getTitle(),
                    n = this.getContent();
                e.find(".popover-title")[this.options.html ? "html" : "text"](t), e.find(".popover-content")[this.options.html ? "html" : "text"](n), e.removeClass("fade top bottom left right in")
            },
            hasContent: function() {
                return this.getTitle() || this.getContent()
            },
            getContent: function() {
                var e, t = this.$element,
                    n = this.options;
                return e = ("function" == typeof n.content ? n.content.call(t[0]) : n.content) || t.attr("data-content")
            },
            tip: function() {
                return this.$tip || (this.$tip = e(this.options.template)), this.$tip
            },
            destroy: function() {
                this.hide().$element.off("." + this.type).removeData(this.type)
            }
        });
        var n = e.fn.popover;
        e.fn.popover = function(n) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("popover"),
                    s = "object" == typeof n && n;
                i || r.data("popover", i = new t(this, s)), "string" == typeof n && i[n]()
            })
        }, e.fn.popover.Constructor = t, e.fn.popover.defaults = e.extend({}, e.fn.tooltip.defaults, {
            placement: "right",
            trigger: "click",
            content: "",
            template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
        }), e.fn.popover.noConflict = function() {
            return e.fn.popover = n, this
        }
    }(window.jQuery), ! function(e) {
        "use strict";

        function t(t, n) {
            var s, r = e.proxy(this.process, this),
                i = e(e(t).is("body") ? window : t);
            this.options = e.extend({}, e.fn.scrollspy.defaults, n), this.$scrollElement = i.on("scroll.scroll-spy.data-api", r), this.selector = (this.options.target || (s = e(t).attr("href")) && s.replace(/.*(?=#[^\s]+$)/, "") || "") + " .nav li > a", this.$body = e("body"), this.refresh(), this.process()
        }
        t.prototype = {
            constructor: t,
            refresh: function() {
                var n, t = this;
                this.offsets = e([]), this.targets = e([]), n = this.$body.find(this.selector).map(function() {
                    var n = e(this),
                        r = n.data("target") || n.attr("href"),
                        i = /^#\w/.test(r) && e(r);
                    return i && i.length && [
                        [i.position().top + (!e.isWindow(t.$scrollElement.get(0)) && t.$scrollElement.scrollTop()), r]
                    ] || null
                }).sort(function(e, t) {
                    return e[0] - t[0]
                }).each(function() {
                    t.offsets.push(this[0]), t.targets.push(this[1])
                })
            },
            process: function() {
                var o, e = this.$scrollElement.scrollTop() + this.options.offset,
                    t = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight,
                    n = t - this.$scrollElement.height(),
                    r = this.offsets,
                    i = this.targets,
                    s = this.activeTarget;
                if (e >= n) return s != (o = i.last()[0]) && this.activate(o);
                for (o = r.length; o--;) s != i[o] && e >= r[o] && (!r[o + 1] || e <= r[o + 1]) && this.activate(i[o])
            },
            activate: function(t) {
                var n, r;
                this.activeTarget = t, e(this.selector).parent(".active").removeClass("active"), r = this.selector + '[data-target="' + t + '"],' + this.selector + '[href="' + t + '"]', n = e(r).parent("li").addClass("active"), n.parent(".dropdown-menu").length && (n = n.closest("li.dropdown").addClass("active")), n.trigger("activate")
            }
        };
        var n = e.fn.scrollspy;
        e.fn.scrollspy = function(n) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("scrollspy"),
                    s = "object" == typeof n && n;
                i || r.data("scrollspy", i = new t(this, s)), "string" == typeof n && i[n]()
            })
        }, e.fn.scrollspy.Constructor = t, e.fn.scrollspy.defaults = {
            offset: 10
        }, e.fn.scrollspy.noConflict = function() {
            return e.fn.scrollspy = n, this
        }, e(window).on("load", function() {
            e('[data-spy="scroll"]').each(function() {
                var t = e(this);
                t.scrollspy(t.data())
            })
        })
    }(window.jQuery), ! function(e) {
        "use strict";
        var t = function(t) {
            this.element = e(t)
        };
        t.prototype = {
            constructor: t,
            show: function() {
                var i, s, o, t = this.element,
                    n = t.closest("ul:not(.dropdown-menu)"),
                    r = t.attr("data-target");
                r || (r = t.attr("href"), r = r && r.replace(/.*(?=#[^\s]*$)/, "")), t.parent("li").hasClass("active") || (i = n.find(".active:last a")[0], o = e.Event("show", {
                    relatedTarget: i
                }), t.trigger(o), o.isDefaultPrevented() || (s = e(r), this.activate(t.parent("li"), n), this.activate(s, s.parent(), function() {
                    t.trigger({
                        type: "shown",
                        relatedTarget: i
                    })
                })))
            },
            activate: function(t, n, r) {
                function o() {
                    i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"), t.addClass("active"), s ? (t[0].offsetWidth, t.addClass("in")) : t.removeClass("fade"), t.parent(".dropdown-menu") && t.closest("li.dropdown").addClass("active"), r && r()
                }
                var i = n.find("> .active"),
                    s = r && e.support.transition && i.hasClass("fade");
                s ? i.one(e.support.transition.end, o) : o(), i.removeClass("in")
            }
        };
        var n = e.fn.tab;
        e.fn.tab = function(n) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("tab");
                i || r.data("tab", i = new t(this)), "string" == typeof n && i[n]()
            })
        }, e.fn.tab.Constructor = t, e.fn.tab.noConflict = function() {
            return e.fn.tab = n, this
        }, e(document).on("click.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"]', function(t) {
            t.preventDefault(), e(this).tab("show")
        })
    }(window.jQuery), ! function(e) {
        "use strict";
        var t = function(t, n) {
            this.$element = e(t), this.options = e.extend({}, e.fn.typeahead.defaults, n), this.matcher = this.options.matcher || this.matcher, this.sorter = this.options.sorter || this.sorter, this.highlighter = this.options.highlighter || this.highlighter, this.updater = this.options.updater || this.updater, this.source = this.options.source, this.$menu = e(this.options.menu), this.shown = !1, this.listen()
        };
        t.prototype = {
            constructor: t,
            select: function() {
                var e = this.$menu.find(".active").attr("data-value");
                return this.$element.val(this.updater(e)).change(), this.hide()
            },
            updater: function(e) {
                return e
            },
            show: function() {
                var t = e.extend({}, this.$element.position(), {
                    height: this.$element[0].offsetHeight
                });
                return this.$menu.insertAfter(this.$element).css({
                    top: t.top + t.height,
                    left: t.left
                }).show(), this.shown = !0, this
            },
            hide: function() {
                return this.$menu.hide(), this.shown = !1, this
            },
            lookup: function() {
                var n;
                return this.query = this.$element.val(), !this.query || this.query.length < this.options.minLength ? this.shown ? this.hide() : this : (n = e.isFunction(this.source) ? this.source(this.query, e.proxy(this.process, this)) : this.source, n ? this.process(n) : this)
            },
            process: function(t) {
                var n = this;
                return t = e.grep(t, function(e) {
                    return n.matcher(e)
                }), t = this.sorter(t), t.length ? this.render(t.slice(0, this.options.items)).show() : this.shown ? this.hide() : this
            },
            matcher: function(e) {
                return ~e.toLowerCase().indexOf(this.query.toLowerCase())
            },
            sorter: function(e) {
                for (var i, t = [], n = [], r = []; i = e.shift();) i.toLowerCase().indexOf(this.query.toLowerCase()) ? ~i.indexOf(this.query) ? n.push(i) : r.push(i) : t.push(i);
                return t.concat(n, r)
            },
            highlighter: function(e) {
                var t = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
                return e.replace(new RegExp("(" + t + ")", "ig"), function(e, t) {
                    return "<strong>" + t + "</strong>"
                })
            },
            render: function(t) {
                var n = this;
                return t = e(t).map(function(t, r) {
                    return t = e(n.options.item).attr("data-value", r), t.find("a").html(n.highlighter(r)), t[0]
                }), t.first().addClass("active"), this.$menu.html(t), this
            },
            next: function() {
                var n = this.$menu.find(".active").removeClass("active"),
                    r = n.next();
                r.length || (r = e(this.$menu.find("li")[0])), r.addClass("active")
            },
            prev: function() {
                var t = this.$menu.find(".active").removeClass("active"),
                    n = t.prev();
                n.length || (n = this.$menu.find("li").last()), n.addClass("active")
            },
            listen: function() {
                this.$element.on("focus", e.proxy(this.focus, this)).on("blur", e.proxy(this.blur, this)).on("keypress", e.proxy(this.keypress, this)).on("keyup", e.proxy(this.keyup, this)), this.eventSupported("keydown") && this.$element.on("keydown", e.proxy(this.keydown, this)), this.$menu.on("click", e.proxy(this.click, this)).on("mouseenter", "li", e.proxy(this.mouseenter, this)).on("mouseleave", "li", e.proxy(this.mouseleave, this))
            },
            eventSupported: function(e) {
                var t = e in this.$element;
                return t || (this.$element.setAttribute(e, "return;"), t = "function" == typeof this.$element[e]), t
            },
            move: function(e) {
                if (this.shown) {
                    switch (e.keyCode) {
                        case 9:
                        case 13:
                        case 27:
                            e.preventDefault();
                            break;
                        case 38:
                            e.preventDefault(), this.prev();
                            break;
                        case 40:
                            e.preventDefault(), this.next()
                    }
                    e.stopPropagation()
                }
            },
            keydown: function(t) {
                this.suppressKeyPressRepeat = ~e.inArray(t.keyCode, [40, 38, 9, 13, 27]), this.move(t)
            },
            keypress: function(e) {
                this.suppressKeyPressRepeat || this.move(e)
            },
            keyup: function(e) {
                switch (e.keyCode) {
                    case 40:
                    case 38:
                    case 16:
                    case 17:
                    case 18:
                        break;
                    case 9:
                    case 13:
                        if (!this.shown) return;
                        this.select();
                        break;
                    case 27:
                        if (!this.shown) return;
                        this.hide();
                        break;
                    default:
                        this.lookup()
                }
                e.stopPropagation(), e.preventDefault()
            },
            focus: function() {
                this.focused = !0
            },
            blur: function() {
                this.focused = !1, !this.mousedover && this.shown && this.hide()
            },
            click: function(e) {
                e.stopPropagation(), e.preventDefault(), this.select(), this.$element.focus()
            },
            mouseenter: function(t) {
                this.mousedover = !0, this.$menu.find(".active").removeClass("active"), e(t.currentTarget).addClass("active")
            },
            mouseleave: function() {
                this.mousedover = !1, !this.focused && this.shown && this.hide()
            }
        };
        var n = e.fn.typeahead;
        e.fn.typeahead = function(n) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("typeahead"),
                    s = "object" == typeof n && n;
                i || r.data("typeahead", i = new t(this, s)), "string" == typeof n && i[n]()
            })
        }, e.fn.typeahead.defaults = {
            source: [],
            items: 8,
            menu: '<ul class="typeahead dropdown-menu"></ul>',
            item: '<li><a href="#"></a></li>',
            minLength: 1
        }, e.fn.typeahead.Constructor = t, e.fn.typeahead.noConflict = function() {
            return e.fn.typeahead = n, this
        }, e(document).on("focus.typeahead.data-api", '[data-provide="typeahead"]', function() {
            var n = e(this);
            n.data("typeahead") || n.typeahead(n.data())
        })
    }(window.jQuery), ! function(e) {
        "use strict";
        var t = function(t, n) {
            this.options = e.extend({}, e.fn.affix.defaults, n), this.$window = e(window).on("scroll.affix.data-api", e.proxy(this.checkPosition, this)).on("click.affix.data-api", e.proxy(function() {
                setTimeout(e.proxy(this.checkPosition, this), 1)
            }, this)), this.$element = e(t), this.checkPosition()
        };
        t.prototype.checkPosition = function() {
            if (this.$element.is(":visible")) {
                var a, t = e(document).height(),
                    n = this.$window.scrollTop(),
                    r = this.$element.offset(),
                    i = this.options.offset,
                    s = i.bottom,
                    o = i.top,
                    u = "affix affix-top affix-bottom";
                "object" != typeof i && (s = o = i), "function" == typeof o && (o = i.top()), "function" == typeof s && (s = i.bottom()), a = null != this.unpin && n + this.unpin <= r.top ? !1 : null != s && r.top + this.$element.height() >= t - s ? "bottom" : null != o && o >= n ? "top" : !1, this.affixed !== a && (this.affixed = a, this.unpin = "bottom" == a ? r.top - n : null, this.$element.removeClass(u).addClass("affix" + (a ? "-" + a : "")))
            }
        };
        var n = e.fn.affix;
        e.fn.affix = function(n) {
            return this.each(function() {
                var r = e(this),
                    i = r.data("affix"),
                    s = "object" == typeof n && n;
                i || r.data("affix", i = new t(this, s)), "string" == typeof n && i[n]()
            })
        }, e.fn.affix.Constructor = t, e.fn.affix.defaults = {
            offset: 0
        }, e.fn.affix.noConflict = function() {
            return e.fn.affix = n, this
        }, e(window).on("load", function() {
            e('[data-spy="affix"]').each(function() {
                var t = e(this),
                    n = t.data();
                n.offset = n.offset || {}, n.offsetBottom && (n.offset.bottom = n.offsetBottom), n.offsetTop && (n.offset.top = n.offsetTop), t.affix(n)
            })
        })
    }(window.jQuery), angular.module("$strap.config", []).value("$strapConfig", {}), angular.module("$strap.filters", ["$strap.config"]), angular.module("$strap.directives", ["$strap.config"]), angular.module("$strap", ["$strap.filters", "$strap.directives", "$strap.config"]), angular.module("$strap.directives").directive("bsAlert", ["$parse", "$timeout", "$compile", function(t, e, n) {
        return {
            restrict: "A",
            link: function(a, i, o) {
                var r = t(o.bsAlert),
                    s = (r.assign, r(a)),
                    l = function(t) {
                        e(function() {
                            i.alert("close")
                        }, 1 * t)
                    };
                o.bsAlert ? a.$watch(o.bsAlert, function(t, e) {
                    s = t, i.html((t.title ? "<strong>" + t.title + "</strong>&nbsp;" : "") + t.content || ""), t.closed && i.hide(), n(i.contents())(a), (t.type || e.type) && (e.type && i.removeClass("alert-" + e.type), t.type && i.addClass("alert-" + t.type)), angular.isDefined(t.closeAfter) ? l(t.closeAfter) : o.closeAfter && l(o.closeAfter), (angular.isUndefined(o.closeButton) || "0" !== o.closeButton && "false" !== o.closeButton) && i.prepend('<button type="button" class="close" data-dismiss="alert">&times;</button>')
                }, !0) : ((angular.isUndefined(o.closeButton) || "0" !== o.closeButton && "false" !== o.closeButton) && i.prepend('<button type="button" class="close" data-dismiss="alert">&times;</button>'), o.closeAfter && l(o.closeAfter)), i.addClass("alert").alert(), i.hasClass("fade") && (i.removeClass("in"), setTimeout(function() {
                    i.addClass("in")
                }));
                var u = o.ngRepeat && o.ngRepeat.split(" in ").pop();
                i.on("close", function(t) {
                    var e;
                    u ? (t.preventDefault(), i.removeClass("in"), e = function() {
                        i.trigger("closed"), a.$parent && a.$parent.$apply(function() {
                            for (var t = u.split("."), e = a.$parent, n = 0; t.length > n; ++n) e && (e = e[t[n]]);
                            e && e.splice(a.$index, 1)
                        })
                    }, $.support.transition && i.hasClass("fade") ? i.on($.support.transition.end, e) : e()) : s && (t.preventDefault(), i.removeClass("in"), e = function() {
                        i.trigger("closed"), a.$apply(function() {
                            s.closed = !0
                        })
                    }, $.support.transition && i.hasClass("fade") ? i.on($.support.transition.end, e) : e())
                })
            }
        }
    }]), angular.module("$strap.directives").directive("bsButton", ["$parse", "$timeout", function(t) {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(e, n, a, i) {
                if (i) {
                    n.parent('[data-toggle="buttons-checkbox"], [data-toggle="buttons-radio"]').length || n.attr("data-toggle", "button");
                    var o = !!e.$eval(a.ngModel);
                    o && n.addClass("active"), e.$watch(a.ngModel, function(t, e) {
                        var a = !!t,
                            i = !!e;
                        a !== i ? $.fn.button.Constructor.prototype.toggle.call(r) : a && !o && n.addClass("active")
                    })
                }
                n.hasClass("btn") || n.on("click.button.data-api", function() {
                    n.button("toggle")
                }), n.button();
                var r = n.data("button");
                r.toggle = function() {
                    if (!i) return $.fn.button.Constructor.prototype.toggle.call(this);
                    var a = n.parent('[data-toggle="buttons-radio"]');
                    a.length ? (n.siblings("[ng-model]").each(function(n, a) {
                        t($(a).attr("ng-model")).assign(e, !1)
                    }), e.$digest(), i.$modelValue || (i.$setViewValue(!i.$modelValue), e.$digest())) : e.$apply(function() {
                        i.$setViewValue(!i.$modelValue)
                    })
                }
            }
        }
    }]).directive("bsButtonsCheckbox", ["$parse", function() {
        return {
            restrict: "A",
            require: "?ngModel",
            compile: function(t) {
                t.attr("data-toggle", "buttons-checkbox").find("a, button").each(function(t, e) {
                    $(e).attr("bs-button", "")
                })
            }
        }
    }]).directive("bsButtonsRadio", ["$timeout", function(t) {
        return {
            restrict: "A",
            require: "?ngModel",
            compile: function(e, n) {
                return e.attr("data-toggle", "buttons-radio"), n.ngModel || e.find("a, button").each(function(t, e) {
                        $(e).attr("bs-button", "")
                    }),
                    function(e, n, a, i) {
                        i && (t(function() {
                            n.find("[value]").button().filter('[value="' + i.$viewValue + '"]').addClass("active")
                        }), n.on("click.button.data-api", function(t) {
                            e.$apply(function() {
                                i.$setViewValue($(t.target).closest("button").attr("value"))
                            })
                        }), e.$watch(a.ngModel, function(t, i) {
                            if (t !== i) {
                                var o = n.find('[value="' + e.$eval(a.ngModel) + '"]');
                                o.length && o.button("toggle")
                            }
                        }))
                    }
            }
        }
    }]), angular.module("$strap.directives").directive("bsButtonSelect", ["$parse", "$timeout", function(t) {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(e, n, a, i) {
                var o = t(a.bsButtonSelect);
                o.assign, i && (n.text(e.$eval(a.ngModel)), e.$watch(a.ngModel, function(t) {
                    n.text(t)
                }));
                var r, s, l, u;
                n.bind("click", function() {
                    r = o(e), s = i ? e.$eval(a.ngModel) : n.text(), l = r.indexOf(s), u = l > r.length - 2 ? r[0] : r[l + 1], e.$apply(function() {
                        n.text(u), i && i.$setViewValue(u)
                    })
                })
            }
        }
    }]), angular.module("$strap.directives").directive("bsDatepicker", ["$timeout", "$strapConfig", function(t, e) {
        var n = /(iP(a|o)d|iPhone)/g.test(navigator.userAgent),
            a = function(t) {
                return t = t || "en", {
                    "/": "[\\/]",
                    "-": "[-]",
                    ".": "[.]",
                    " ": "[\\s]",
                    dd: "(?:(?:[0-2]?[0-9]{1})|(?:[3][01]{1}))",
                    d: "(?:(?:[0-2]?[0-9]{1})|(?:[3][01]{1}))",
                    mm: "(?:[0]?[1-9]|[1][012])",
                    m: "(?:[0]?[1-9]|[1][012])",
                    DD: "(?:" + $.fn.datepicker.dates[t].days.join("|") + ")",
                    D: "(?:" + $.fn.datepicker.dates[t].daysShort.join("|") + ")",
                    MM: "(?:" + $.fn.datepicker.dates[t].months.join("|") + ")",
                    M: "(?:" + $.fn.datepicker.dates[t].monthsShort.join("|") + ")",
                    yyyy: "(?:(?:[1]{1}[0-9]{1}[0-9]{1}[0-9]{1})|(?:[2]{1}[0-9]{3}))(?![[0-9]])",
                    yy: "(?:(?:[0-9]{1}[0-9]{1}))(?![[0-9]])"
                }
            },
            i = function i(t, e) {
                var n, i = t,
                    o = a(e);
                return n = 0, angular.forEach(o, function(t, e) {
                    i = i.split(e).join("${" + n + "}"), n++
                }), n = 0, angular.forEach(o, function(t) {
                    i = i.split("${" + n + "}").join(t), n++
                }), RegExp("^" + i + "$", ["i"])
            };
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(t, a, o, r) {
                var s = angular.extend({
                        autoclose: !0
                    }, e.datepicker || {}),
                    l = o.dateType || s.type || "date";
                angular.forEach(["format", "weekStart", "calendarWeeks", "startDate", "endDate", "daysOfWeekDisabled", "autoclose", "startView", "minViewMode", "todayBtn", "todayHighlight", "keyboardNavigation", "language", "forceParse"], function(t) {
                    angular.isDefined(o[t]) && (s[t] = o[t])
                });
                var u = s.language || "en",
                    c = o.dateFormat || s.format || $.fn.datepicker.dates[u] && $.fn.datepicker.dates[u].format || "mm/dd/yyyy",
                    d = n ? "yyyy-mm-dd" : c,
                    p = i(d, u);
                r && (r.$formatters.unshift(function(t) {
                    return "date" === l && angular.isString(t) && t ? $.fn.datepicker.DPGlobal.parseDate(t, $.fn.datepicker.DPGlobal.parseFormat(c), u) : t
                }), r.$parsers.unshift(function(t) {
                    return t ? "date" === l && angular.isDate(t) ? (r.$setValidity("date", !0), t) : angular.isString(t) && p.test(t) ? (r.$setValidity("date", !0), n ? new Date(t) : "string" === l ? t : $.fn.datepicker.DPGlobal.parseDate(t, $.fn.datepicker.DPGlobal.parseFormat(d), u)) : void r.$setValidity("date", !1) : (r.$setValidity("date", !0), null)
                }), r.$render = function() {
                    if (n) {
                        var t = r.$viewValue ? $.fn.datepicker.DPGlobal.formatDate(r.$viewValue, $.fn.datepicker.DPGlobal.parseFormat(d), u) : "";
                        return a.val(t), t
                    }
                    return r.$viewValue || a.val(""), a.datepicker("update", r.$viewValue)
                }), n ? a.prop("type", "date").css("-webkit-appearance", "textfield") : (r && a.on("changeDate", function(e) {
                    t.$apply(function() {
                        r.$setViewValue("string" === l ? a.val() : e.date)
                    })
                }), a.datepicker(angular.extend(s, {
                    format: d,
                    language: u
                })), t.$on("$destroy", function() {
                    var t = a.data("datepicker");
                    t && (t.picker.remove(), a.data("datepicker", null))
                }), o.$observe("startDate", function(t) {
                    a.datepicker("setStartDate", t)
                }), o.$observe("endDate", function(t) {
                    a.datepicker("setEndDate", t)
                }));
                var f = a.siblings('[data-toggle="datepicker"]');
                f.length && f.on("click", function() {
                    a.prop("disabled") || a.trigger("focus")
                })
            }
        }
    }]), angular.module("$strap.directives").directive("bsDropdown", ["$parse", "$compile", "$timeout", function(t, e, n) {
        var a = function(t, e) {
            return e || (e = ['<ul class="dropdown-menu" role="menu" aria-labelledby="drop1">', "</ul>"]), angular.forEach(t, function(t, n) {
                if (t.divider) return e.splice(n + 1, 0, '<li class="divider"></li>');
                var i = "<li" + (t.submenu && t.submenu.length ? ' class="dropdown-submenu"' : "") + '><a tabindex="-1" ng-href="' + (t.href || "") + '"' + (t.click ? '" ng-click="' + t.click + '"' : "") + (t.target ? '" target="' + t.target + '"' : "") + (t.method ? '" data-method="' + t.method + '"' : "") + ">" + (t.text || "") + "</a>";
                t.submenu && t.submenu.length && (i += a(t.submenu).join("\n")), i += "</li>", e.splice(n + 1, 0, i)
            }), e
        };
        return {
            restrict: "EA",
            scope: !0,
            link: function(i, o, r) {
                var s = t(r.bsDropdown),
                    l = s(i);
                n(function() {
                    !angular.isArray(l);
                    var t = angular.element(a(l).join(""));
                    t.insertAfter(o), e(o.next("ul.dropdown-menu"))(i)
                }), o.addClass("dropdown-toggle").attr("data-toggle", "dropdown")
            }
        }
    }]), angular.module("$strap.directives").factory("$modal", ["$rootScope", "$compile", "$http", "$timeout", "$q", "$templateCache", "$strapConfig", function(t, e, n, a, i, o, r) {
        var s = function s(s) {
            function l(s) {
                var l = angular.extend({
                        show: !0
                    }, r.modal, s),
                    u = l.scope ? l.scope : t.$new(),
                    c = l.template;
                return i.when(o.get(c) || n.get(c, {
                    cache: !0
                }).then(function(t) {
                    return t.data
                })).then(function(t) {
                    var n = c.replace(".html", "").replace(/[\/|\.|:]/g, "-") + "-" + u.$id,
                        i = $('<div class="modal hide" tabindex="-1"></div>').attr("id", n).addClass("fade").html(t);
                    return l.modalClass && i.addClass(l.modalClass), $("body").append(i), a(function() {
                        e(i)(u)
                    }), u.$modal = function(t) {
                        i.modal(t)
                    }, angular.forEach(["show", "hide"], function(t) {
                        u[t] = function() {
                            i.modal(t)
                        }
                    }), u.dismiss = u.hide, angular.forEach(["show", "shown", "hide", "hidden"], function(t) {
                        i.on(t, function(e) {
                            u.$emit("modal-" + t, e)
                        })
                    }), i.on("shown", function() {
                        $("input[autofocus], textarea[autofocus]", i).first().trigger("focus")
                    }), i.on("hidden", function() {
                        l.persist || u.$destroy()
                    }), u.$on("$destroy", function() {
                        i.remove()
                    }), i.modal(l), i
                })
            }
            return new l(s)
        };
        return s
    }]).directive("bsModal", ["$q", "$modal", function(t, e) {
        return {
            restrict: "A",
            scope: !0,
            link: function(n, a, i) {
                var o = {
                    template: n.$eval(i.bsModal),
                    persist: !0,
                    show: !1,
                    scope: n
                };
                angular.forEach(["modalClass", "backdrop", "keyboard"], function(t) {
                    angular.isDefined(i[t]) && (o[t] = i[t])
                }), t.when(e(o)).then(function(t) {
                    a.attr("data-target", "#" + t.attr("id")).attr("data-toggle", "modal")
                })
            }
        }
    }]), angular.module("$strap.directives").directive("bsNavbar", ["$location", function(t) {
        return {
            restrict: "A",
            link: function(e, n) {
                e.$watch(function() {
                    return t.path()
                }, function(t) {
                    $("li[data-match-route]", n).each(function(e, n) {
                        var a = angular.element(n),
                            i = a.attr("data-match-route"),
                            o = RegExp("^" + i + "$", ["i"]);
                        o.test(t) ? a.addClass("active").find(".collapse.in").collapse("hide") : a.removeClass("active")
                    })
                })
            }
        }
    }]), angular.module("$strap.directives").directive("bsPopover", ["$parse", "$compile", "$http", "$timeout", "$q", "$templateCache", function(t, e, n, a, i, o) {
        return $("body").on("keyup", function(t) {
            27 === t.keyCode && $(".popover.in").each(function() {
                $(this).popover("hide")
            })
        }), {
            restrict: "A",
            scope: !0,
            link: function(r, s, l) {
                var u = t(l.bsPopover),
                    c = (u.assign, u(r)),
                    d = {};
                angular.isObject(c) && (d = c), i.when(d.content || o.get(c) || n.get(c, {
                    cache: !0
                })).then(function(t) {
                    angular.isObject(t) && (t = t.data), l.unique && s.on("show", function() {
                        $(".popover.in").each(function() {
                            var t = $(this),
                                e = t.data("popover");
                            e && !e.$element.is(s) && t.popover("hide")
                        })
                    }), l.hide && r.$watch(l.hide, function(t, e) {
                        t ? n.hide() : t !== e && n.show()
                    }), l.show && r.$watch(l.show, function(t, e) {
                        t ? a(function() {
                            n.show()
                        }) : t !== e && n.hide()
                    }), s.popover(angular.extend({}, d, {
                        content: t,
                        html: !0
                    }));
                    var n = s.data("popover");
                    n.hasContent = function() {
                        return this.getTitle() || t
                    }, n.getPosition = function() {
                        var t = $.fn.popover.Constructor.prototype.getPosition.apply(this, arguments);
                        return e(this.$tip)(r), r.$digest(), this.$tip.data("popover", this), t
                    }, r.$popover = function(t) {
                        n(t)
                    }, angular.forEach(["show", "hide"], function(t) {
                        r[t] = function() {
                            n[t]()
                        }
                    }), r.dismiss = r.hide, angular.forEach(["show", "shown", "hide", "hidden"], function(t) {
                        s.on(t, function(e) {
                            r.$emit("popover-" + t, e)
                        })
                    })
                })
            }
        }
    }]), angular.module("$strap.directives").directive("bsSelect", ["$timeout", function(t) {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(e, n, a, i) {
                var o = e.$eval(a.bsSelect) || {};
                t(function() {
                    n.selectpicker(o), n.next().removeClass("ng-scope")
                }), i && e.$watch(a.ngModel, function(t, e) {
                    angular.equals(t, e) || n.selectpicker("refresh")
                })
            }
        }
    }]), angular.module("$strap.directives").directive("bsTabs", ["$parse", "$compile", "$timeout", function(t, e, n) {
        var a = '<div class="tabs"><ul class="nav nav-tabs"><li ng-repeat="pane in panes" ng-class="{active:pane.active}"><a data-target="#{{pane.id}}" data-index="{{$index}}" data-toggle="tab">{{pane.title}}</a></li></ul><div class="tab-content" ng-transclude></div>';
        return {
            restrict: "A",
            require: "?ngModel",
            priority: 0,
            scope: !0,
            template: a,
            replace: !0,
            transclude: !0,
            compile: function() {
                return function(e, a, i, o) {
                    var r = t(i.bsTabs);
                    r.assign, r(e), e.panes = [];
                    var s, l, u, c = a.find("ul.nav-tabs"),
                        d = a.find("div.tab-content"),
                        p = 0;
                    n(function() {
                        d.find("[data-title], [data-tab]").each(function(t) {
                            var n = angular.element(this);
                            s = "tab-" + e.$id + "-" + t, l = n.data("title") || n.data("tab"), u = !u && n.hasClass("active"), n.attr("id", s).addClass("tab-pane"), i.fade && n.addClass("fade"), e.panes.push({
                                id: s,
                                title: l,
                                content: this.innerHTML,
                                active: u
                            })
                        }), e.panes.length && !u && (d.find(".tab-pane:first-child").addClass("active" + (i.fade ? " in" : "")), e.panes[0].active = !0)
                    }), o && (a.on("show", function(t) {
                        var n = $(t.target);
                        e.$apply(function() {
                            o.$setViewValue(n.data("index"))
                        })
                    }), e.$watch(i.ngModel, function(t) {
                        angular.isUndefined(t) || (p = t, setTimeout(function() {
                            var e = $(c[0].querySelectorAll("li")[1 * t]);
                            e.hasClass("active") || e.children("a").tab("show")
                        }))
                    }))
                }
            }
        }
    }]), angular.module("$strap.directives").directive("bsTimepicker", ["$timeout", "$strapConfig", function(t, e) {
        var n = "((?:(?:[0-1][0-9])|(?:[2][0-3])|(?:[0-9])):(?:[0-5][0-9])(?::[0-5][0-9])?(?:\\s?(?:am|AM|pm|PM))?)";
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, i, o, r) {
                if (r) {
                    i.on("changeTime.timepicker", function() {
                        t(function() {
                            r.$setViewValue(i.val())
                        })
                    });
                    var s = RegExp("^" + n + "$", ["i"]);
                    r.$parsers.unshift(function(t) {
                        return !t || s.test(t) ? (r.$setValidity("time", !0), t) : void r.$setValidity("time", !1)
                    })
                }
                i.attr("data-toggle", "timepicker"), i.parent().addClass("bootstrap-timepicker"), i.timepicker(e.timepicker || {});
                var l = i.data("timepicker"),
                    u = i.siblings('[data-toggle="timepicker"]');
                u.length && u.on("click", $.proxy(l.showWidget, l))
            }
        }
    }]), angular.module("$strap.directives").directive("bsTooltip", ["$parse", "$compile", function(t) {
        return {
            restrict: "A",
            scope: !0,
            link: function(e, n, a) {
                var i = t(a.bsTooltip),
                    o = (i.assign, i(e));
                e.$watch(a.bsTooltip, function(t, e) {
                    t !== e && (o = t)
                }), a.unique && n.on("show", function() {
                    $(".tooltip.in").each(function() {
                        var t = $(this),
                            e = t.data("tooltip");
                        e && !e.$element.is(n) && t.tooltip("hide")
                    })
                }), n.tooltip({
                    title: function() {
                        return angular.isFunction(o) ? o.apply(null, arguments) : o
                    },
                    html: !0
                });
                var r = n.data("tooltip");
                r.show = function() {
                    var t = $.fn.tooltip.Constructor.prototype.show.apply(this, arguments);
                    return this.tip().data("tooltip", this), t
                }, e._tooltip = function(t) {
                    n.tooltip(t)
                }, e.hide = function() {
                    n.tooltip("hide")
                }, e.show = function() {
                    n.tooltip("show")
                }, e.dismiss = e.hide
            }
        }
    }]), angular.module("$strap.directives").directive("bsTypeahead", ["$parse", function(t) {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(e, n, a, i) {
                var o = t(a.bsTypeahead),
                    r = (o.assign, o(e));
                e.$watch(a.bsTypeahead, function(t, e) {
                    t !== e && (r = t)
                }), n.attr("data-provide", "typeahead"), n.typeahead({
                    source: function() {
                        return angular.isFunction(r) ? r.apply(null, arguments) : r
                    },
                    minLength: a.minLength || 1,
                    items: a.items,
                    updater: function(t) {
                        return i && e.$apply(function() {
                            i.$setViewValue(t)
                        }), e.$emit("typeahead-updated", t), t
                    }
                });
                var s = n.data("typeahead");
                s.lookup = function() {
                    var t;
                    return this.query = this.$element.val() || "", this.query.length < this.options.minLength ? this.shown ? this.hide() : this : (t = $.isFunction(this.source) ? this.source(this.query, $.proxy(this.process, this)) : this.source, t ? this.process(t) : this)
                }, a.matchAll && (s.matcher = function() {
                    return !0
                }), "0" === a.minLength && setTimeout(function() {
                    n.on("focus", function() {
                        0 === n.val().length && setTimeout(n.typeahead.bind(n, "lookup"), 200)
                    })
                })
            }
        }
    }]),
    function(a) {
        function b(a, b) {
            return function(c) {
                return i(a.call(this, c), b)
            }
        }

        function c(a, b) {
            return function(c) {
                return this.lang().ordinal(a.call(this, c), b)
            }
        }

        function d() {}

        function e(a) {
            u(a), g(this, a)
        }

        function f(a) {
            var b = o(a),
                c = b.year || 0,
                d = b.month || 0,
                e = b.week || 0,
                f = b.day || 0,
                g = b.hour || 0,
                h = b.minute || 0,
                i = b.second || 0,
                j = b.millisecond || 0;
            this._input = a, this._milliseconds = +j + 1e3 * i + 6e4 * h + 36e5 * g, this._days = +f + 7 * e, this._months = +d + 12 * c, this._data = {}, this._bubble()
        }

        function g(a, b) {
            for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]);
            return b.hasOwnProperty("toString") && (a.toString = b.toString), b.hasOwnProperty("valueOf") && (a.valueOf = b.valueOf), a
        }

        function h(a) {
            return 0 > a ? Math.ceil(a) : Math.floor(a)
        }

        function i(a, b) {
            for (var c = a + ""; c.length < b;) c = "0" + c;
            return c
        }

        function j(a, b, c, d) {
            var e, f, g = b._milliseconds,
                h = b._days,
                i = b._months;
            g && a._d.setTime(+a._d + g * c), (h || i) && (e = a.minute(), f = a.hour()), h && a.date(a.date() + h * c), i && a.month(a.month() + i * c), g && !d && bb.updateOffset(a), (h || i) && (a.minute(e), a.hour(f))
        }

        function k(a) {
            return "[object Array]" === Object.prototype.toString.call(a)
        }

        function l(a) {
            return "[object Date]" === Object.prototype.toString.call(a)
        }

        function m(a, b, c) {
            var d, e = Math.min(a.length, b.length),
                f = Math.abs(a.length - b.length),
                g = 0;
            for (d = 0; e > d; d++)(c && a[d] !== b[d] || !c && q(a[d]) !== q(b[d])) && g++;
            return g + f
        }

        function n(a) {
            if (a) {
                var b = a.toLowerCase().replace(/(.)s$/, "$1");
                a = Jb[a] || Kb[b] || b
            }
            return a
        }

        function o(a) {
            var b, c, d = {};
            for (c in a) a.hasOwnProperty(c) && (b = n(c), b && (d[b] = a[c]));
            return d
        }

        function p(b) {
            var c, d;
            if (0 === b.indexOf("week")) c = 7, d = "day";
            else {
                if (0 !== b.indexOf("month")) return;
                c = 12, d = "month"
            }
            bb[b] = function(e, f) {
                var g, h, i = bb.fn._lang[b],
                    j = [];
                if ("number" == typeof e && (f = e, e = a), h = function(a) {
                        var b = bb().utc().set(d, a);
                        return i.call(bb.fn._lang, b, e || "")
                    }, null != f) return h(f);
                for (g = 0; c > g; g++) j.push(h(g));
                return j
            }
        }

        function q(a) {
            var b = +a,
                c = 0;
            return 0 !== b && isFinite(b) && (c = b >= 0 ? Math.floor(b) : Math.ceil(b)), c
        }

        function r(a, b) {
            return new Date(Date.UTC(a, b + 1, 0)).getUTCDate()
        }

        function s(a) {
            return t(a) ? 366 : 365
        }

        function t(a) {
            return 0 === a % 4 && 0 !== a % 100 || 0 === a % 400
        }

        function u(a) {
            var b;
            a._a && -2 === a._pf.overflow && (b = a._a[gb] < 0 || a._a[gb] > 11 ? gb : a._a[hb] < 1 || a._a[hb] > r(a._a[fb], a._a[gb]) ? hb : a._a[ib] < 0 || a._a[ib] > 23 ? ib : a._a[jb] < 0 || a._a[jb] > 59 ? jb : a._a[kb] < 0 || a._a[kb] > 59 ? kb : a._a[lb] < 0 || a._a[lb] > 999 ? lb : -1, a._pf._overflowDayOfYear && (fb > b || b > hb) && (b = hb), a._pf.overflow = b)
        }

        function v(a) {
            a._pf = {
                empty: !1,
                unusedTokens: [],
                unusedInput: [],
                overflow: -2,
                charsLeftOver: 0,
                nullInput: !1,
                invalidMonth: null,
                invalidFormat: !1,
                userInvalidated: !1
            }
        }

        function w(a) {
            return null == a._isValid && (a._isValid = !isNaN(a._d.getTime()) && a._pf.overflow < 0 && !a._pf.empty && !a._pf.invalidMonth && !a._pf.nullInput && !a._pf.invalidFormat && !a._pf.userInvalidated, a._strict && (a._isValid = a._isValid && 0 === a._pf.charsLeftOver && 0 === a._pf.unusedTokens.length)), a._isValid
        }

        function x(a) {
            return a ? a.toLowerCase().replace("_", "-") : a
        }

        function y(a, b) {
            return b.abbr = a, mb[a] || (mb[a] = new d), mb[a].set(b), mb[a]
        }

        function z(a) {
            delete mb[a]
        }

        function A(a) {
            var b, c, d, e, f = 0,
                g = function(a) {
                    if (!mb[a] && nb) try {
                        require("./lang/" + a)
                    } catch (b) {}
                    return mb[a]
                };
            if (!a) return bb.fn._lang;
            if (!k(a)) {
                if (c = g(a)) return c;
                a = [a]
            }
            for (; f < a.length;) {
                for (e = x(a[f]).split("-"), b = e.length, d = x(a[f + 1]), d = d ? d.split("-") : null; b > 0;) {
                    if (c = g(e.slice(0, b).join("-"))) return c;
                    if (d && d.length >= b && m(e, d, !0) >= b - 1) break;
                    b--
                }
                f++
            }
            return bb.fn._lang
        }

        function B(a) {
            return a.match(/\[[\s\S]/) ? a.replace(/^\[|\]$/g, "") : a.replace(/\\/g, "")
        }

        function C(a) {
            var b, c, d = a.match(rb);
            for (b = 0, c = d.length; c > b; b++) d[b] = Ob[d[b]] ? Ob[d[b]] : B(d[b]);
            return function(e) {
                var f = "";
                for (b = 0; c > b; b++) f += d[b] instanceof Function ? d[b].call(e, a) : d[b];
                return f
            }
        }

        function D(a, b) {
            return a.isValid() ? (b = E(b, a.lang()), Lb[b] || (Lb[b] = C(b)), Lb[b](a)) : a.lang().invalidDate()
        }

        function E(a, b) {
            function c(a) {
                return b.longDateFormat(a) || a
            }
            var d = 5;
            for (sb.lastIndex = 0; d >= 0 && sb.test(a);) a = a.replace(sb, c), sb.lastIndex = 0, d -= 1;
            return a
        }

        function F(a, b) {
            var c;
            switch (a) {
                case "DDDD":
                    return vb;
                case "YYYY":
                case "GGGG":
                case "gggg":
                    return wb;
                case "YYYYY":
                case "GGGGG":
                case "ggggg":
                    return xb;
                case "S":
                case "SS":
                case "SSS":
                case "DDD":
                    return ub;
                case "MMM":
                case "MMMM":
                case "dd":
                case "ddd":
                case "dddd":
                    return yb;
                case "a":
                case "A":
                    return A(b._l)._meridiemParse;
                case "X":
                    return Bb;
                case "Z":
                case "ZZ":
                    return zb;
                case "T":
                    return Ab;
                case "MM":
                case "DD":
                case "YY":
                case "GG":
                case "gg":
                case "HH":
                case "hh":
                case "mm":
                case "ss":
                case "M":
                case "D":
                case "d":
                case "H":
                case "h":
                case "m":
                case "s":
                case "w":
                case "ww":
                case "W":
                case "WW":
                case "e":
                case "E":
                    return tb;
                default:
                    return c = new RegExp(N(M(a.replace("\\", "")), "i"))
            }
        }

        function G(a) {
            var b = (zb.exec(a) || [])[0],
                c = (b + "").match(Gb) || ["-", 0, 0],
                d = +(60 * c[1]) + q(c[2]);
            return "+" === c[0] ? -d : d
        }

        function H(a, b, c) {
            var d, e = c._a;
            switch (a) {
                case "M":
                case "MM":
                    null != b && (e[gb] = q(b) - 1);
                    break;
                case "MMM":
                case "MMMM":
                    d = A(c._l).monthsParse(b), null != d ? e[gb] = d : c._pf.invalidMonth = b;
                    break;
                case "D":
                case "DD":
                    null != b && (e[hb] = q(b));
                    break;
                case "DDD":
                case "DDDD":
                    null != b && (c._dayOfYear = q(b));
                    break;
                case "YY":
                    e[fb] = q(b) + (q(b) > 68 ? 1900 : 2e3);
                    break;
                case "YYYY":
                case "YYYYY":
                    e[fb] = q(b);
                    break;
                case "a":
                case "A":
                    c._isPm = A(c._l).isPM(b);
                    break;
                case "H":
                case "HH":
                case "h":
                case "hh":
                    e[ib] = q(b);
                    break;
                case "m":
                case "mm":
                    e[jb] = q(b);
                    break;
                case "s":
                case "ss":
                    e[kb] = q(b);
                    break;
                case "S":
                case "SS":
                case "SSS":
                    e[lb] = q(1e3 * ("0." + b));
                    break;
                case "X":
                    c._d = new Date(1e3 * parseFloat(b));
                    break;
                case "Z":
                case "ZZ":
                    c._useUTC = !0, c._tzm = G(b);
                    break;
                case "w":
                case "ww":
                case "W":
                case "WW":
                case "d":
                case "dd":
                case "ddd":
                case "dddd":
                case "e":
                case "E":
                    a = a.substr(0, 1);
                case "gg":
                case "gggg":
                case "GG":
                case "GGGG":
                case "GGGGG":
                    a = a.substr(0, 2), b && (c._w = c._w || {}, c._w[a] = b)
            }
        }

        function I(a) {
            var b, c, d, e, f, g, h, i, j, k, l = [];
            if (!a._d) {
                for (d = K(a), a._w && null == a._a[hb] && null == a._a[gb] && (f = function(b) {
                        return b ? b.length < 3 ? parseInt(b, 10) > 68 ? "19" + b : "20" + b : b : null == a._a[fb] ? bb().weekYear() : a._a[fb]
                    }, g = a._w, null != g.GG || null != g.W || null != g.E ? h = X(f(g.GG), g.W || 1, g.E, 4, 1) : (i = A(a._l), j = null != g.d ? T(g.d, i) : null != g.e ? parseInt(g.e, 10) + i._week.dow : 0, k = parseInt(g.w, 10) || 1, null != g.d && j < i._week.dow && k++, h = X(f(g.gg), k, j, i._week.doy, i._week.dow)), a._a[fb] = h.year, a._dayOfYear = h.dayOfYear), a._dayOfYear && (e = null == a._a[fb] ? d[fb] : a._a[fb], a._dayOfYear > s(e) && (a._pf._overflowDayOfYear = !0), c = S(e, 0, a._dayOfYear), a._a[gb] = c.getUTCMonth(), a._a[hb] = c.getUTCDate()), b = 0; 3 > b && null == a._a[b]; ++b) a._a[b] = l[b] = d[b];
                for (; 7 > b; b++) a._a[b] = l[b] = null == a._a[b] ? 2 === b ? 1 : 0 : a._a[b];
                l[ib] += q((a._tzm || 0) / 60), l[jb] += q((a._tzm || 0) % 60), a._d = (a._useUTC ? S : R).apply(null, l)
            }
        }

        function J(a) {
            var b;
            a._d || (b = o(a._i), a._a = [b.year, b.month, b.day, b.hour, b.minute, b.second, b.millisecond], I(a))
        }

        function K(a) {
            var b = new Date;
            return a._useUTC ? [b.getUTCFullYear(), b.getUTCMonth(), b.getUTCDate()] : [b.getFullYear(), b.getMonth(), b.getDate()]
        }

        function L(a) {
            a._a = [], a._pf.empty = !0;
            var b, c, d, e, f, g = A(a._l),
                h = "" + a._i,
                i = h.length,
                j = 0;
            for (d = E(a._f, g).match(rb) || [], b = 0; b < d.length; b++) e = d[b], c = (F(e, a).exec(h) || [])[0], c && (f = h.substr(0, h.indexOf(c)), f.length > 0 && a._pf.unusedInput.push(f), h = h.slice(h.indexOf(c) + c.length), j += c.length), Ob[e] ? (c ? a._pf.empty = !1 : a._pf.unusedTokens.push(e), H(e, c, a)) : a._strict && !c && a._pf.unusedTokens.push(e);
            a._pf.charsLeftOver = i - j, h.length > 0 && a._pf.unusedInput.push(h), a._isPm && a._a[ib] < 12 && (a._a[ib] += 12), a._isPm === !1 && 12 === a._a[ib] && (a._a[ib] = 0), I(a), u(a)
        }

        function M(a) {
            return a.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(a, b, c, d, e) {
                return b || c || d || e
            })
        }

        function N(a) {
            return a.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
        }

        function O(a) {
            var b, c, d, e, f;
            if (0 === a._f.length) return a._pf.invalidFormat = !0, void(a._d = new Date(0 / 0));
            for (e = 0; e < a._f.length; e++) f = 0, b = g({}, a), v(b), b._f = a._f[e], L(b), w(b) && (f += b._pf.charsLeftOver, f += 10 * b._pf.unusedTokens.length, b._pf.score = f, (null == d || d > f) && (d = f, c = b));
            g(a, c || b)
        }

        function P(a) {
            var b, c = a._i,
                d = Cb.exec(c);
            if (d) {
                for (b = 4; b > 0; b--)
                    if (d[b]) {
                        a._f = Eb[b - 1] + (d[6] || " ");
                        break
                    }
                for (b = 0; 4 > b; b++)
                    if (Fb[b][1].exec(c)) {
                        a._f += Fb[b][0];
                        break
                    }
                zb.exec(c) && (a._f += " Z"), L(a)
            } else a._d = new Date(c)
        }

        function Q(b) {
            var c = b._i,
                d = ob.exec(c);
            c === a ? b._d = new Date : d ? b._d = new Date(+d[1]) : "string" == typeof c ? P(b) : k(c) ? (b._a = c.slice(0), I(b)) : l(c) ? b._d = new Date(+c) : "object" == typeof c ? J(b) : b._d = new Date(c)
        }

        function R(a, b, c, d, e, f, g) {
            var h = new Date(a, b, c, d, e, f, g);
            return 1970 > a && h.setFullYear(a), h
        }

        function S(a) {
            var b = new Date(Date.UTC.apply(null, arguments));
            return 1970 > a && b.setUTCFullYear(a), b
        }

        function T(a, b) {
            if ("string" == typeof a)
                if (isNaN(a)) {
                    if (a = b.weekdaysParse(a), "number" != typeof a) return null
                } else a = parseInt(a, 10);
            return a
        }

        function U(a, b, c, d, e) {
            return e.relativeTime(b || 1, !!c, a, d)
        }

        function V(a, b, c) {
            var d = eb(Math.abs(a) / 1e3),
                e = eb(d / 60),
                f = eb(e / 60),
                g = eb(f / 24),
                h = eb(g / 365),
                i = 45 > d && ["s", d] || 1 === e && ["m"] || 45 > e && ["mm", e] || 1 === f && ["h"] || 22 > f && ["hh", f] || 1 === g && ["d"] || 25 >= g && ["dd", g] || 45 >= g && ["M"] || 345 > g && ["MM", eb(g / 30)] || 1 === h && ["y"] || ["yy", h];
            return i[2] = b, i[3] = a > 0, i[4] = c, U.apply({}, i)
        }

        function W(a, b, c) {
            var d, e = c - b,
                f = c - a.day();
            return f > e && (f -= 7), e - 7 > f && (f += 7), d = bb(a).add("d", f), {
                week: Math.ceil(d.dayOfYear() / 7),
                year: d.year()
            }
        }

        function X(a, b, c, d, e) {
            var f, g, h = new Date(Date.UTC(a, 0)).getUTCDay();
            return c = null != c ? c : e, f = e - h + (h > d ? 7 : 0), g = 7 * (b - 1) + (c - e) + f + 1, {
                year: g > 0 ? a : a - 1,
                dayOfYear: g > 0 ? g : s(a - 1) + g
            }
        }

        function Y(a) {
            var b = a._i,
                c = a._f;
            return "undefined" == typeof a._pf && v(a), null === b ? bb.invalid({
                nullInput: !0
            }) : ("string" == typeof b && (a._i = b = A().preparse(b)), bb.isMoment(b) ? (a = g({}, b), a._d = new Date(+b._d)) : c ? k(c) ? O(a) : L(a) : Q(a), new e(a))
        }

        function Z(a, b) {
            bb.fn[a] = bb.fn[a + "s"] = function(a) {
                var c = this._isUTC ? "UTC" : "";
                return null != a ? (this._d["set" + c + b](a), bb.updateOffset(this), this) : this._d["get" + c + b]()
            }
        }

        function $(a) {
            bb.duration.fn[a] = function() {
                return this._data[a]
            }
        }

        function _(a, b) {
            bb.duration.fn["as" + a] = function() {
                return +this / b
            }
        }

        function ab() {
            "undefined" == typeof ender && (this.moment = bb)
        }
        for (var bb, cb, db = "2.3.1", eb = Math.round, fb = 0, gb = 1, hb = 2, ib = 3, jb = 4, kb = 5, lb = 6, mb = {}, nb = "undefined" != typeof module && module.exports, ob = /^\/?Date\((\-?\d+)/i, pb = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/, qb = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/, rb = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)/g, sb = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g, tb = /\d\d?/, ub = /\d{1,3}/, vb = /\d{3}/, wb = /\d{1,4}/, xb = /[+\-]?\d{1,6}/, yb = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i, zb = /Z|[\+\-]\d\d:?\d\d/i, Ab = /T/i, Bb = /[\+\-]?\d+(\.\d{1,3})?/, Cb = /^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d\d?\d?)?)?)?)?([\+\-]\d\d:?\d\d)?)?$/, Db = "YYYY-MM-DDTHH:mm:ssZ", Eb = ["YYYY-MM-DD", "GGGG-[W]WW", "GGGG-[W]WW-E", "YYYY-DDD"], Fb = [
                ["HH:mm:ss.S", /(T| )\d\d:\d\d:\d\d\.\d{1,3}/],
                ["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/],
                ["HH:mm", /(T| )\d\d:\d\d/],
                ["HH", /(T| )\d\d/]
            ], Gb = /([\+\-]|\d\d)/gi, Hb = "Date|Hours|Minutes|Seconds|Milliseconds".split("|"), Ib = {
                Milliseconds: 1,
                Seconds: 1e3,
                Minutes: 6e4,
                Hours: 36e5,
                Days: 864e5,
                Months: 2592e6,
                Years: 31536e6
            }, Jb = {
                ms: "millisecond",
                s: "second",
                m: "minute",
                h: "hour",
                d: "day",
                D: "date",
                w: "week",
                W: "isoWeek",
                M: "month",
                y: "year",
                DDD: "dayOfYear",
                e: "weekday",
                E: "isoWeekday",
                gg: "weekYear",
                GG: "isoWeekYear"
            }, Kb = {
                dayofyear: "dayOfYear",
                isoweekday: "isoWeekday",
                isoweek: "isoWeek",
                weekyear: "weekYear",
                isoweekyear: "isoWeekYear"
            }, Lb = {}, Mb = "DDD w W M D d".split(" "), Nb = "M D H h m s w W".split(" "), Ob = {
                M: function() {
                    return this.month() + 1
                },
                MMM: function(a) {
                    return this.lang().monthsShort(this, a)
                },
                MMMM: function(a) {
                    return this.lang().months(this, a)
                },
                D: function() {
                    return this.date()
                },
                DDD: function() {
                    return this.dayOfYear()
                },
                d: function() {
                    return this.day()
                },
                dd: function(a) {
                    return this.lang().weekdaysMin(this, a)
                },
                ddd: function(a) {
                    return this.lang().weekdaysShort(this, a)
                },
                dddd: function(a) {
                    return this.lang().weekdays(this, a)
                },
                w: function() {
                    return this.week()
                },
                W: function() {
                    return this.isoWeek()
                },
                YY: function() {
                    return i(this.year() % 100, 2)
                },
                YYYY: function() {
                    return i(this.year(), 4)
                },
                YYYYY: function() {
                    return i(this.year(), 5)
                },
                gg: function() {
                    return i(this.weekYear() % 100, 2)
                },
                gggg: function() {
                    return this.weekYear()
                },
                ggggg: function() {
                    return i(this.weekYear(), 5)
                },
                GG: function() {
                    return i(this.isoWeekYear() % 100, 2)
                },
                GGGG: function() {
                    return this.isoWeekYear()
                },
                GGGGG: function() {
                    return i(this.isoWeekYear(), 5)
                },
                e: function() {
                    return this.weekday()
                },
                E: function() {
                    return this.isoWeekday()
                },
                a: function() {
                    return this.lang().meridiem(this.hours(), this.minutes(), !0)
                },
                A: function() {
                    return this.lang().meridiem(this.hours(), this.minutes(), !1)
                },
                H: function() {
                    return this.hours()
                },
                h: function() {
                    return this.hours() % 12 || 12
                },
                m: function() {
                    return this.minutes()
                },
                s: function() {
                    return this.seconds()
                },
                S: function() {
                    return q(this.milliseconds() / 100)
                },
                SS: function() {
                    return i(q(this.milliseconds() / 10), 2)
                },
                SSS: function() {
                    return i(this.milliseconds(), 3)
                },
                Z: function() {
                    var a = -this.zone(),
                        b = "+";
                    return 0 > a && (a = -a, b = "-"), b + i(q(a / 60), 2) + ":" + i(q(a) % 60, 2)
                },
                ZZ: function() {
                    var a = -this.zone(),
                        b = "+";
                    return 0 > a && (a = -a, b = "-"), b + i(q(10 * a / 6), 4)
                },
                z: function() {
                    return this.zoneAbbr()
                },
                zz: function() {
                    return this.zoneName()
                },
                X: function() {
                    return this.unix()
                }
            }, Pb = ["months", "monthsShort", "weekdays", "weekdaysShort", "weekdaysMin"]; Mb.length;) cb = Mb.pop(), Ob[cb + "o"] = c(Ob[cb], cb);
        for (; Nb.length;) cb = Nb.pop(), Ob[cb + cb] = b(Ob[cb], 2);
        for (Ob.DDDD = b(Ob.DDD, 3), g(d.prototype, {
                set: function(a) {
                    var b, c;
                    for (c in a) b = a[c], "function" == typeof b ? this[c] = b : this["_" + c] = b
                },
                _months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                months: function(a) {
                    return this._months[a.month()]
                },
                _monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                monthsShort: function(a) {
                    return this._monthsShort[a.month()]
                },
                monthsParse: function(a) {
                    var b, c, d;
                    for (this._monthsParse || (this._monthsParse = []), b = 0; 12 > b; b++)
                        if (this._monthsParse[b] || (c = bb.utc([2e3, b]), d = "^" + this.months(c, "") + "|^" + this.monthsShort(c, ""), this._monthsParse[b] = new RegExp(d.replace(".", ""), "i")), this._monthsParse[b].test(a)) return b
                },
                _weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                weekdays: function(a) {
                    return this._weekdays[a.day()]
                },
                _weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                weekdaysShort: function(a) {
                    return this._weekdaysShort[a.day()]
                },
                _weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                weekdaysMin: function(a) {
                    return this._weekdaysMin[a.day()]
                },
                weekdaysParse: function(a) {
                    var b, c, d;
                    for (this._weekdaysParse || (this._weekdaysParse = []), b = 0; 7 > b; b++)
                        if (this._weekdaysParse[b] || (c = bb([2e3, 1]).day(b), d = "^" + this.weekdays(c, "") + "|^" + this.weekdaysShort(c, "") + "|^" + this.weekdaysMin(c, ""), this._weekdaysParse[b] = new RegExp(d.replace(".", ""), "i")), this._weekdaysParse[b].test(a)) return b
                },
                _longDateFormat: {
                    LT: "h:mm A",
                    L: "MM/DD/YYYY",
                    LL: "MMMM D YYYY",
                    LLL: "MMMM D YYYY LT",
                    LLLL: "dddd, MMMM D YYYY LT"
                },
                longDateFormat: function(a) {
                    var b = this._longDateFormat[a];
                    return !b && this._longDateFormat[a.toUpperCase()] && (b = this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function(a) {
                        return a.slice(1)
                    }), this._longDateFormat[a] = b), b
                },
                isPM: function(a) {
                    return "p" === (a + "").toLowerCase().charAt(0)
                },
                _meridiemParse: /[ap]\.?m?\.?/i,
                meridiem: function(a, b, c) {
                    return a > 11 ? c ? "pm" : "PM" : c ? "am" : "AM"
                },
                _calendar: {
                    sameDay: "[Today at] LT",
                    nextDay: "[Tomorrow at] LT",
                    nextWeek: "dddd [at] LT",
                    lastDay: "[Yesterday at] LT",
                    lastWeek: "[Last] dddd [at] LT",
                    sameElse: "L"
                },
                calendar: function(a, b) {
                    var c = this._calendar[a];
                    return "function" == typeof c ? c.apply(b) : c
                },
                _relativeTime: {
                    future: "in %s",
                    past: "%s ago",
                    s: "a few seconds",
                    m: "a minute",
                    mm: "%d minutes",
                    h: "an hour",
                    hh: "%d hours",
                    d: "a day",
                    dd: "%d days",
                    M: "a month",
                    MM: "%d months",
                    y: "a year",
                    yy: "%d years"
                },
                relativeTime: function(a, b, c, d) {
                    var e = this._relativeTime[c];
                    return "function" == typeof e ? e(a, b, c, d) : e.replace(/%d/i, a)
                },
                pastFuture: function(a, b) {
                    var c = this._relativeTime[a > 0 ? "future" : "past"];
                    return "function" == typeof c ? c(b) : c.replace(/%s/i, b)
                },
                ordinal: function(a) {
                    return this._ordinal.replace("%d", a)
                },
                _ordinal: "%d",
                preparse: function(a) {
                    return a
                },
                postformat: function(a) {
                    return a
                },
                week: function(a) {
                    return W(a, this._week.dow, this._week.doy).week
                },
                _week: {
                    dow: 0,
                    doy: 6
                },
                _invalidDate: "Invalid date",
                invalidDate: function() {
                    return this._invalidDate
                }
            }), bb = function(b, c, d, e) {
                return "boolean" == typeof d && (e = d, d = a), Y({
                    _i: b,
                    _f: c,
                    _l: d,
                    _strict: e,
                    _isUTC: !1
                })
            }, bb.utc = function(b, c, d, e) {
                var f;
                return "boolean" == typeof d && (e = d, d = a), f = Y({
                    _useUTC: !0,
                    _isUTC: !0,
                    _l: d,
                    _i: b,
                    _f: c,
                    _strict: e
                }).utc()
            }, bb.unix = function(a) {
                return bb(1e3 * a)
            }, bb.duration = function(a, b) {
                var c, d, e, g = bb.isDuration(a),
                    h = "number" == typeof a,
                    i = g ? a._input : h ? {} : a,
                    j = null;
                return h ? b ? i[b] = a : i.milliseconds = a : (j = pb.exec(a)) ? (c = "-" === j[1] ? -1 : 1, i = {
                    y: 0,
                    d: q(j[hb]) * c,
                    h: q(j[ib]) * c,
                    m: q(j[jb]) * c,
                    s: q(j[kb]) * c,
                    ms: q(j[lb]) * c
                }) : (j = qb.exec(a)) && (c = "-" === j[1] ? -1 : 1, e = function(a) {
                    var b = a && parseFloat(a.replace(",", "."));
                    return (isNaN(b) ? 0 : b) * c
                }, i = {
                    y: e(j[2]),
                    M: e(j[3]),
                    d: e(j[4]),
                    h: e(j[5]),
                    m: e(j[6]),
                    s: e(j[7]),
                    w: e(j[8])
                }), d = new f(i), g && a.hasOwnProperty("_lang") && (d._lang = a._lang), d
            }, bb.version = db, bb.defaultFormat = Db, bb.updateOffset = function() {}, bb.lang = function(a, b) {
                var c;
                return a ? (b ? y(x(a), b) : null === b ? (z(a), a = "en") : mb[a] || A(a), c = bb.duration.fn._lang = bb.fn._lang = A(a), c._abbr) : bb.fn._lang._abbr
            }, bb.langData = function(a) {
                return a && a._lang && a._lang._abbr && (a = a._lang._abbr), A(a)
            }, bb.isMoment = function(a) {
                return a instanceof e
            }, bb.isDuration = function(a) {
                return a instanceof f
            }, cb = Pb.length - 1; cb >= 0; --cb) p(Pb[cb]);
        for (bb.normalizeUnits = function(a) {
                return n(a)
            }, bb.invalid = function(a) {
                var b = bb.utc(0 / 0);
                return null != a ? g(b._pf, a) : b._pf.userInvalidated = !0, b
            }, bb.parseZone = function(a) {
                return bb(a).parseZone()
            }, g(bb.fn = e.prototype, {
                clone: function() {
                    return bb(this)
                },
                valueOf: function() {
                    return +this._d + 6e4 * (this._offset || 0)
                },
                unix: function() {
                    return Math.floor(+this / 1e3)
                },
                toString: function() {
                    return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
                },
                toDate: function() {
                    return this._offset ? new Date(+this) : this._d
                },
                toISOString: function() {
                    return D(bb(this).utc(), "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
                },
                toArray: function() {
                    var a = this;
                    return [a.year(), a.month(), a.date(), a.hours(), a.minutes(), a.seconds(), a.milliseconds()]
                },
                isValid: function() {
                    return w(this)
                },
                isDSTShifted: function() {
                    return this._a ? this.isValid() && m(this._a, (this._isUTC ? bb.utc(this._a) : bb(this._a)).toArray()) > 0 : !1
                },
                parsingFlags: function() {
                    return g({}, this._pf)
                },
                invalidAt: function() {
                    return this._pf.overflow
                },
                utc: function() {
                    return this.zone(0)
                },
                local: function() {
                    return this.zone(0), this._isUTC = !1, this
                },
                format: function(a) {
                    var b = D(this, a || bb.defaultFormat);
                    return this.lang().postformat(b)
                },
                add: function(a, b) {
                    var c;
                    return c = "string" == typeof a ? bb.duration(+b, a) : bb.duration(a, b), j(this, c, 1), this
                },
                subtract: function(a, b) {
                    var c;
                    return c = "string" == typeof a ? bb.duration(+b, a) : bb.duration(a, b), j(this, c, -1), this
                },
                diff: function(a, b, c) {
                    var d, e, f = this._isUTC ? bb(a).zone(this._offset || 0) : bb(a).local(),
                        g = 6e4 * (this.zone() - f.zone());
                    return b = n(b), "year" === b || "month" === b ? (d = 432e5 * (this.daysInMonth() + f.daysInMonth()), e = 12 * (this.year() - f.year()) + (this.month() - f.month()), e += (this - bb(this).startOf("month") - (f - bb(f).startOf("month"))) / d, e -= 6e4 * (this.zone() - bb(this).startOf("month").zone() - (f.zone() - bb(f).startOf("month").zone())) / d, "year" === b && (e /= 12)) : (d = this - f, e = "second" === b ? d / 1e3 : "minute" === b ? d / 6e4 : "hour" === b ? d / 36e5 : "day" === b ? (d - g) / 864e5 : "week" === b ? (d - g) / 6048e5 : d), c ? e : h(e)
                },
                from: function(a, b) {
                    return bb.duration(this.diff(a)).lang(this.lang()._abbr).humanize(!b)
                },
                fromNow: function(a) {
                    return this.from(bb(), a)
                },
                calendar: function() {
                    var a = this.diff(bb().zone(this.zone()).startOf("day"), "days", !0),
                        b = -6 > a ? "sameElse" : -1 > a ? "lastWeek" : 0 > a ? "lastDay" : 1 > a ? "sameDay" : 2 > a ? "nextDay" : 7 > a ? "nextWeek" : "sameElse";
                    return this.format(this.lang().calendar(b, this))
                },
                isLeapYear: function() {
                    return t(this.year())
                },
                isDST: function() {
                    return this.zone() < this.clone().month(0).zone() || this.zone() < this.clone().month(5).zone()
                },
                day: function(a) {
                    var b = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
                    return null != a ? (a = T(a, this.lang()), this.add({
                        d: a - b
                    })) : b
                },
                month: function(a) {
                    var b, c = this._isUTC ? "UTC" : "";
                    return null != a ? "string" == typeof a && (a = this.lang().monthsParse(a), "number" != typeof a) ? this : (b = this.date(), this.date(1), this._d["set" + c + "Month"](a), this.date(Math.min(b, this.daysInMonth())), bb.updateOffset(this), this) : this._d["get" + c + "Month"]()
                },
                startOf: function(a) {
                    switch (a = n(a)) {
                        case "year":
                            this.month(0);
                        case "month":
                            this.date(1);
                        case "week":
                        case "isoWeek":
                        case "day":
                            this.hours(0);
                        case "hour":
                            this.minutes(0);
                        case "minute":
                            this.seconds(0);
                        case "second":
                            this.milliseconds(0)
                    }
                    return "week" === a ? this.weekday(0) : "isoWeek" === a && this.isoWeekday(1), this
                },
                endOf: function(a) {
                    return a = n(a), this.startOf(a).add("isoWeek" === a ? "week" : a, 1).subtract("ms", 1)
                },
                isAfter: function(a, b) {
                    return b = "undefined" != typeof b ? b : "millisecond", +this.clone().startOf(b) > +bb(a).startOf(b)
                },
                isBefore: function(a, b) {
                    return b = "undefined" != typeof b ? b : "millisecond", +this.clone().startOf(b) < +bb(a).startOf(b)
                },
                isSame: function(a, b) {
                    return b = "undefined" != typeof b ? b : "millisecond", +this.clone().startOf(b) === +bb(a).startOf(b)
                },
                min: function(a) {
                    return a = bb.apply(null, arguments), this > a ? this : a
                },
                max: function(a) {
                    return a = bb.apply(null, arguments), a > this ? this : a
                },
                zone: function(a) {
                    var b = this._offset || 0;
                    return null == a ? this._isUTC ? b : this._d.getTimezoneOffset() : ("string" == typeof a && (a = G(a)), Math.abs(a) < 16 && (a = 60 * a), this._offset = a, this._isUTC = !0, b !== a && j(this, bb.duration(b - a, "m"), 1, !0), this)
                },
                zoneAbbr: function() {
                    return this._isUTC ? "UTC" : ""
                },
                zoneName: function() {
                    return this._isUTC ? "Coordinated Universal Time" : ""
                },
                parseZone: function() {
                    return "string" == typeof this._i && this.zone(this._i), this
                },
                hasAlignedHourOffset: function(a) {
                    return a = a ? bb(a).zone() : 0, 0 === (this.zone() - a) % 60
                },
                daysInMonth: function() {
                    return r(this.year(), this.month())
                },
                dayOfYear: function(a) {
                    var b = eb((bb(this).startOf("day") - bb(this).startOf("year")) / 864e5) + 1;
                    return null == a ? b : this.add("d", a - b)
                },
                weekYear: function(a) {
                    var b = W(this, this.lang()._week.dow, this.lang()._week.doy).year;
                    return null == a ? b : this.add("y", a - b)
                },
                isoWeekYear: function(a) {
                    var b = W(this, 1, 4).year;
                    return null == a ? b : this.add("y", a - b)
                },
                week: function(a) {
                    var b = this.lang().week(this);
                    return null == a ? b : this.add("d", 7 * (a - b))
                },
                isoWeek: function(a) {
                    var b = W(this, 1, 4).week;
                    return null == a ? b : this.add("d", 7 * (a - b))
                },
                weekday: function(a) {
                    var b = (this.day() + 7 - this.lang()._week.dow) % 7;
                    return null == a ? b : this.add("d", a - b)
                },
                isoWeekday: function(a) {
                    return null == a ? this.day() || 7 : this.day(this.day() % 7 ? a : a - 7)
                },
                get: function(a) {
                    return a = n(a), this[a]()
                },
                set: function(a, b) {
                    return a = n(a), "function" == typeof this[a] && this[a](b), this
                },
                lang: function(b) {
                    return b === a ? this._lang : (this._lang = A(b), this)
                }
            }), cb = 0; cb < Hb.length; cb++) Z(Hb[cb].toLowerCase().replace(/s$/, ""), Hb[cb]);
        Z("year", "FullYear"), bb.fn.days = bb.fn.day, bb.fn.months = bb.fn.month, bb.fn.weeks = bb.fn.week, bb.fn.isoWeeks = bb.fn.isoWeek, bb.fn.toJSON = bb.fn.toISOString, g(bb.duration.fn = f.prototype, {
            _bubble: function() {
                var a, b, c, d, e = this._milliseconds,
                    f = this._days,
                    g = this._months,
                    i = this._data;
                i.milliseconds = e % 1e3, a = h(e / 1e3), i.seconds = a % 60, b = h(a / 60), i.minutes = b % 60, c = h(b / 60), i.hours = c % 24, f += h(c / 24), i.days = f % 30, g += h(f / 30), i.months = g % 12, d = h(g / 12), i.years = d
            },
            weeks: function() {
                return h(this.days() / 7)
            },
            valueOf: function() {
                return this._milliseconds + 864e5 * this._days + 2592e6 * (this._months % 12) + 31536e6 * q(this._months / 12)
            },
            humanize: function(a) {
                var b = +this,
                    c = V(b, !a, this.lang());
                return a && (c = this.lang().pastFuture(b, c)), this.lang().postformat(c)
            },
            add: function(a, b) {
                var c = bb.duration(a, b);
                return this._milliseconds += c._milliseconds, this._days += c._days, this._months += c._months, this._bubble(), this
            },
            subtract: function(a, b) {
                var c = bb.duration(a, b);
                return this._milliseconds -= c._milliseconds, this._days -= c._days, this._months -= c._months, this._bubble(), this
            },
            get: function(a) {
                return a = n(a), this[a.toLowerCase() + "s"]()
            },
            as: function(a) {
                return a = n(a), this["as" + a.charAt(0).toUpperCase() + a.slice(1) + "s"]()
            },
            lang: bb.fn.lang,
            toIsoString: function() {
                var a = Math.abs(this.years()),
                    b = Math.abs(this.months()),
                    c = Math.abs(this.days()),
                    d = Math.abs(this.hours()),
                    e = Math.abs(this.minutes()),
                    f = Math.abs(this.seconds() + this.milliseconds() / 1e3);
                return this.asSeconds() ? (this.asSeconds() < 0 ? "-" : "") + "P" + (a ? a + "Y" : "") + (b ? b + "M" : "") + (c ? c + "D" : "") + (d || e || f ? "T" : "") + (d ? d + "H" : "") + (e ? e + "M" : "") + (f ? f + "S" : "") : "P0D"
            }
        });
        for (cb in Ib) Ib.hasOwnProperty(cb) && (_(cb, Ib[cb]), $(cb.toLowerCase()));
        _("Weeks", 6048e5), bb.duration.fn.asMonths = function() {
            return (+this - 31536e6 * this.years()) / 2592e6 + 12 * this.years()
        }, bb.lang("en", {
            ordinal: function(a) {
                var b = a % 10,
                    c = 1 === q(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th";
                return a + c
            }
        }), nb ? (module.exports = bb, ab()) : "function" == typeof define && define.amd ? define("moment", function(a, b, c) {
            return c.config().noGlobal !== !0 && ab(), bb
        }) : ab()
    }.call(this), ! function() {
        var a = angular.module("angularFileUpload", []);
        a.service("$upload", ["$http", "$rootScope", "$timeout", function(a, b, c) {
            function d(b) {
                b.method = b.method || "POST", b.headers = b.headers || {}, b.transformRequest = b.transformRequest || function(b) {
                    return window.ArrayBuffer && b instanceof ArrayBuffer ? b : a.defaults.transformRequest[0](b)
                }, window.XMLHttpRequest.__isShim && (b.headers.__setXHR_ = function() {
                    return function(a) {
                        b.__XHR = a, a.upload.addEventListener("progress", function(a) {
                            b.progress && c(function() {
                                b.progress && b.progress(a)
                            })
                        }, !1), a.upload.addEventListener("load", function(a) {
                            a.lengthComputable && c(function() {
                                b.progress && b.progress(a)
                            })
                        }, !1)
                    }
                });
                var d = a(b);
                return d.progress = function(a) {
                    return b.progress = a, d
                }, d.abort = function() {
                    return b.__XHR && c(function() {
                        b.__XHR.abort()
                    }), d
                }, d.then = function(a, c) {
                    return function(d, e, f) {
                        return b.progress = f || b.progress, c.apply(a, [d, e, f]), a
                    }
                }(d, d.then), d
            }
            this.upload = function(b) {
                b.headers = b.headers || {}, b.headers["Content-Type"] = void 0, b.transformRequest = b.transformRequest || a.defaults.transformRequest;
                var c = new FormData;
                if (b.data)
                    for (var e in b.data) {
                        var f = b.data[e];
                        if (b.formDataAppender) b.formDataAppender(c, e, f);
                        else {
                            if ("function" == typeof b.transformRequest) f = b.transformRequest(f);
                            else
                                for (var g = 0; g < b.transformRequest.length; g++) {
                                    var h = b.transformRequest[g];
                                    "function" == typeof h && (f = h(f))
                                }
                            c.append(e, f)
                        }
                    }
                b.transformRequest = angular.identity;
                var i = b.fileFormDataName || "file";
                if ("[object Array]" === Object.prototype.toString.call(b.file))
                    for (var j = "[object String]" === Object.prototype.toString.call(i), g = 0; g < b.file.length; g++) c.append(j ? i + g : i[g], b.file[g], b.file[g].name);
                else c.append(i, b.file, b.file.name);
                return b.data = c, d(b)
            }, this.http = function(a) {
                return d(a)
            }
        }]), a.directive("ngFileSelect", ["$parse", "$http", "$timeout", function(a, b, c) {
            return function(b, d, e) {
                var f = a(e.ngFileSelect);
                d.bind("change", function(a) {
                    var d, e, g = [];
                    if (d = a.target.files, null != d)
                        for (e = 0; e < d.length; e++) g.push(d.item(e));
                    c(function() {
                        f(b, {
                            $files: g,
                            $event: a
                        })
                    })
                }), d.bind("click", function() {
                    this.value = null
                })
            }
        }]), a.directive("ngFileDropAvailable", ["$parse", "$http", "$timeout", function(a, b, c) {
            return function(b, d, e) {
                if ("draggable" in document.createElement("span")) {
                    var f = a(e.ngFileDropAvailable);
                    c(function() {
                        f(b)
                    })
                }
            }
        }]), a.directive("ngFileDrop", ["$parse", "$http", "$timeout", function(a, b, c) {
            return function(b, d, e) {
                if ("draggable" in document.createElement("span")) {
                    var f = a(e.ngFileDrop);
                    d[0].addEventListener("dragover", function(a) {
                        a.stopPropagation(), a.preventDefault(), d.addClass(e.ngFileDragOverClass || "dragover")
                    }, !1), d[0].addEventListener("dragleave", function() {
                        d.removeClass(e.ngFileDragOverClass || "dragover")
                    }, !1), d[0].addEventListener("drop", function(a) {
                        a.stopPropagation(), a.preventDefault(), d.removeClass(e.ngFileDragOverClass || "dragover");
                        var g, h = [],
                            i = a.dataTransfer.files;
                        if (null != i)
                            for (g = 0; g < i.length; g++) h.push(i.item(g));
                        c(function() {
                            f(b, {
                                $files: h,
                                $event: a
                            })
                        })
                    }, !1)
                }
            }
        }])
    }(), angular.module("xeditable", []).value("editableOptions", {
        theme: "default",
        buttons: "right",
        blurElem: "cancel",
        blurForm: "ignore",
        activate: "focus"
    }), angular.module("xeditable").directive("editableBsdate", ["editableDirectiveFactory", function(editableDirectiveFactory) {
        return editableDirectiveFactory({
            directiveName: "editableBsdate",
            inputTpl: '<input type="text">'
        })
    }]), angular.module("xeditable").directive("editableBstime", ["editableDirectiveFactory", function(editableDirectiveFactory) {
        return editableDirectiveFactory({
            directiveName: "editableBstime",
            inputTpl: "<timepicker></timepicker>",
            render: function() {
                this.parent.render.call(this);
                var div = angular.element('<div class="well well-small" style="display:inline-block;"></div>');
                div.attr("ng-model", this.inputEl.attr("ng-model")), this.inputEl.removeAttr("ng-model"), this.attrs.eNgChange && (div.attr("ng-change", this.inputEl.attr("ng-change")), this.inputEl.removeAttr("ng-change")), this.inputEl.wrap(div)
            }
        })
    }]), angular.module("xeditable").directive("editableCheckbox", ["editableDirectiveFactory", function(editableDirectiveFactory) {
        return editableDirectiveFactory({
            directiveName: "editableCheckbox",
            inputTpl: '<input type="checkbox">',
            render: function() {
                this.parent.render.call(this), this.attrs.eTitle && (this.inputEl.wrap("<label></label>"), this.inputEl.after(angular.element("<span></span>").text(this.attrs.eTitle)))
            },
            autosubmit: function() {
                var self = this;
                self.inputEl.bind("change", function() {
                    setTimeout(function() {
                        self.scope.$apply(function() {
                            self.scope.$form.$submit()
                        })
                    }, 500)
                })
            }
        })
    }]), angular.module("xeditable").directive("editableChecklist", ["editableDirectiveFactory", "editableNgOptionsParser", function(editableDirectiveFactory, editableNgOptionsParser) {
        return editableDirectiveFactory({
            directiveName: "editableChecklist",
            inputTpl: "<span></span>",
            useCopy: !0,
            render: function() {
                this.parent.render.call(this);
                var parsed = editableNgOptionsParser(this.attrs.eNgOptions),
                    html = '<label ng-repeat="' + parsed.ngRepeat + '"><input type="checkbox" checklist-model="$parent.$data" checklist-value="' + parsed.locals.valueFn + '"><span ng-bind="' + parsed.locals.displayFn + '"></span></label>';
                this.inputEl.removeAttr("ng-model"), this.inputEl.removeAttr("ng-options"), this.inputEl.html(html)
            }
        })
    }]),
    function() {
        var types = "text|email|tel|number|url|search|color|date|datetime|time|month|week".split("|");
        angular.forEach(types, function(type) {
            var directiveName = "editable" + type.charAt(0).toUpperCase() + type.slice(1);
            angular.module("xeditable").directive(directiveName, ["editableDirectiveFactory", function(editableDirectiveFactory) {
                return editableDirectiveFactory({
                    directiveName: directiveName,
                    inputTpl: '<input type="' + type + '">'
                })
            }])
        }), angular.module("xeditable").directive("editableRange", ["editableDirectiveFactory", function(editableDirectiveFactory) {
            return editableDirectiveFactory({
                directiveName: "editableRange",
                inputTpl: '<input type="range" id="range" name="range">',
                render: function() {
                    this.parent.render.call(this), this.inputEl.after("<output>{{$data}}</output>")
                }
            })
        }])
    }(), angular.module("xeditable").directive("editableRadiolist", ["editableDirectiveFactory", "editableNgOptionsParser", function(editableDirectiveFactory, editableNgOptionsParser) {
        return editableDirectiveFactory({
            directiveName: "editableRadiolist",
            inputTpl: "<span></span>",
            render: function() {
                this.parent.render.call(this);
                var parsed = editableNgOptionsParser(this.attrs.eNgOptions),
                    html = '<label ng-repeat="' + parsed.ngRepeat + '"><input type="radio" ng-model="$parent.$data" value="{{' + parsed.locals.valueFn + '}}"><span ng-bind="' + parsed.locals.displayFn + '"></span></label>';
                this.inputEl.removeAttr("ng-model"), this.inputEl.removeAttr("ng-options"), this.inputEl.html(html)
            },
            autosubmit: function() {
                var self = this;
                self.inputEl.bind("change", function() {
                    setTimeout(function() {
                        self.scope.$apply(function() {
                            self.scope.$form.$submit()
                        })
                    }, 500)
                })
            }
        })
    }]), angular.module("xeditable").directive("editableSelect", ["editableDirectiveFactory", function(editableDirectiveFactory) {
        return editableDirectiveFactory({
            directiveName: "editableSelect",
            inputTpl: "<select></select>",
            autosubmit: function() {
                var self = this;
                self.inputEl.bind("change", function() {
                    self.scope.$apply(function() {
                        self.scope.$form.$submit()
                    })
                })
            }
        })
    }]), angular.module("xeditable").directive("editableTextarea", ["editableDirectiveFactory", function(editableDirectiveFactory) {
        return editableDirectiveFactory({
            directiveName: "editableTextarea",
            inputTpl: "<textarea></textarea>",
            addListeners: function() {
                var self = this;
                self.parent.addListeners.call(self), self.single && "no" !== self.buttons && self.autosubmit()
            },
            autosubmit: function() {
                var self = this;
                self.inputEl.bind("keydown", function(e) {
                    (e.ctrlKey || e.metaKey) && 13 === e.keyCode && self.scope.$apply(function() {
                        self.scope.$form.$submit()
                    })
                })
            }
        })
    }]), angular.module("xeditable").factory("editableController", ["$q", "editableUtils", function($q, editableUtils) {
        function EditableController($scope, $attrs, $element, $parse, editableThemes, editableOptions, $rootScope, $compile, $q) {
            var valueGetter, inWaiting, self = this;
            self.scope = $scope, self.elem = $element, self.attrs = $attrs, self.inputEl = null, self.editorEl = null, self.single = !0, self.error = "", self.theme = editableThemes[editableOptions.theme] || editableThemes["default"], self.parent = {}, self.inputTpl = "", self.directiveName = "", self.useCopy = !1, self.single = null, self.buttons = "right", self.init = function(single) {
                if (self.single = single, self.name = $attrs.eName || $attrs[self.directiveName], !$attrs[self.directiveName]) throw "You should provide value for `" + self.directiveName + "` in editable element!";
                valueGetter = $parse($attrs[self.directiveName]), self.buttons = self.single ? self.attrs.buttons || editableOptions.buttons : "no", $attrs.eName && self.scope.$watch("$data", function(newVal) {
                    self.scope.$form.$data[$attrs.eName] = newVal
                }), $attrs.onshow && (self.onshow = function() {
                    return self.catchError($parse($attrs.onshow)($scope))
                }), $attrs.onhide && (self.onhide = function() {
                    return $parse($attrs.onhide)($scope)
                }), $attrs.oncancel && (self.oncancel = function() {
                    return $parse($attrs.oncancel)($scope)
                }), $attrs.onbeforesave && (self.onbeforesave = function() {
                    return self.catchError($parse($attrs.onbeforesave)($scope))
                }), $attrs.onaftersave && (self.onaftersave = function() {
                    return self.catchError($parse($attrs.onaftersave)($scope))
                }), $scope.$parent.$watch($attrs[self.directiveName], function() {
                    self.handleEmpty()
                })
            }, self.render = function() {
                var theme = self.theme;
                self.inputEl = angular.element(self.inputTpl), self.controlsEl = angular.element(theme.controlsTpl), self.controlsEl.append(self.inputEl), "no" !== self.buttons && (self.buttonsEl = angular.element(theme.buttonsTpl), self.submitEl = angular.element(theme.submitTpl), self.cancelEl = angular.element(theme.cancelTpl), self.buttonsEl.append(self.submitEl).append(self.cancelEl), self.controlsEl.append(self.buttonsEl), self.inputEl.addClass("editable-has-buttons")), self.errorEl = angular.element(theme.errorTpl), self.controlsEl.prepend(self.errorEl), self.editorEl = angular.element(self.single ? theme.formTpl : theme.noformTpl), self.editorEl.append(self.controlsEl);
                for (var k in $attrs.$attr)
                    if (!(k.length <= 1)) {
                        var transferAttr = !1,
                            nextLetter = k.substring(1, 2);
                        if ("e" === k.substring(0, 1) && nextLetter === nextLetter.toUpperCase() && (transferAttr = k.substring(1), "Form" !== transferAttr && "NgSubmit" !== transferAttr)) {
                            transferAttr = transferAttr.substring(0, 1).toLowerCase() + editableUtils.camelToDash(transferAttr.substring(1));
                            var attrValue = "" === $attrs[k] ? transferAttr : $attrs[k];
                            self.inputEl.attr(transferAttr, attrValue)
                        }
                    }
                self.inputEl.addClass("editable-input"), self.inputEl.attr("ng-model", "$data"), self.editorEl.addClass(editableUtils.camelToDash(self.directiveName)), self.single && (self.editorEl.attr("editable-form", "$form"), self.editorEl.attr("blur", self.attrs.blur || ("no" === self.buttons ? "cancel" : editableOptions.blurElem))), angular.isFunction(theme.postrender) && theme.postrender.call(self)
            }, self.setLocalValue = function() {
                self.scope.$data = self.useCopy ? angular.copy(valueGetter($scope.$parent)) : valueGetter($scope.$parent)
            }, self.show = function() {
                return self.setLocalValue(), self.render(), $element.after(self.editorEl), $compile(self.editorEl)($scope), self.addListeners(), $element.addClass("editable-hide"), self.onshow()
            }, self.hide = function() {
                return self.editorEl.remove(), $element.removeClass("editable-hide"), self.onhide()
            }, self.cancel = function() {
                self.oncancel()
            }, self.addListeners = function() {
                self.inputEl.bind("keyup", function(e) {
                    if (self.single) switch (e.keyCode) {
                        case 27:
                            self.scope.$apply(function() {
                                self.scope.$form.$cancel()
                            })
                    }
                }), self.single && "no" === self.buttons && self.autosubmit(), self.editorEl.bind("click", function(e) {
                    1 === e.which && self.scope.$form.$visible && (self.scope.$form._clicked = !0)
                })
            }, self.setWaiting = function(value) {
                value ? (inWaiting = !self.inputEl.attr("disabled") && !self.inputEl.attr("ng-disabled") && !self.inputEl.attr("ng-enabled"), inWaiting && (self.inputEl.attr("disabled", "disabled"), self.buttonsEl && self.buttonsEl.find("button").attr("disabled", "disabled"))) : inWaiting && (self.inputEl.removeAttr("disabled"), self.buttonsEl && self.buttonsEl.find("button").removeAttr("disabled"))
            }, self.activate = function() {
                setTimeout(function() {
                    var el = self.inputEl[0];
                    "focus" === editableOptions.activate && el.focus && el.focus(), "select" === editableOptions.activate && el.select && el.select()
                }, 0)
            }, self.setError = function(msg) {
                angular.isObject(msg) || ($scope.$error = msg, self.error = msg)
            }, self.catchError = function(result, noPromise) {
                return angular.isObject(result) && noPromise !== !0 ? $q.when(result).then(angular.bind(this, function(r) {
                    this.catchError(r, !0)
                }), angular.bind(this, function(r) {
                    this.catchError(r, !0)
                })) : noPromise && angular.isObject(result) && result.status && 200 !== result.status && result.data && angular.isString(result.data) ? (this.setError(result.data), result = result.data) : angular.isString(result) && this.setError(result), result
            }, self.save = function() {
                valueGetter.assign($scope.$parent, angular.copy(self.scope.$data))
            }, self.handleEmpty = function() {
                var val = valueGetter($scope.$parent),
                    isEmpty = null === val || void 0 === val || "" === val || angular.isArray(val) && 0 === val.length;
                $element.toggleClass("editable-empty", isEmpty)
            }, self.autosubmit = angular.noop, self.onshow = angular.noop, self.onhide = angular.noop, self.oncancel = angular.noop, self.onbeforesave = angular.noop, self.onaftersave = angular.noop
        }
        return EditableController.$inject = ["$scope", "$attrs", "$element", "$parse", "editableThemes", "editableOptions", "$rootScope", "$compile", "$q"], EditableController
    }]), angular.module("xeditable").factory("editableDirectiveFactory", ["$parse", "$compile", "editableThemes", "$rootScope", "$document", "editableController", "editableFormController", function($parse, $compile, editableThemes, $rootScope, $document, editableController, editableFormController) {
        return function(overwrites) {
            return {
                restrict: "A",
                scope: !0,
                require: [overwrites.directiveName, "?^form"],
                controller: editableController,
                link: function(scope, elem, attrs, ctrl) {
                    var eFormCtrl, eCtrl = ctrl[0],
                        hasForm = !1;
                    if (ctrl[1]) eFormCtrl = ctrl[1], hasForm = !0;
                    else if (attrs.eForm) {
                        var getter = $parse(attrs.eForm)(scope);
                        if (getter) eFormCtrl = getter, hasForm = !0;
                        else
                            for (var i = 0; i < $document[0].forms.length; i++)
                                if ($document[0].forms[i].name === attrs.eForm) {
                                    eFormCtrl = null, hasForm = !0;
                                    break
                                }
                    }
                    if (angular.forEach(overwrites, function(v, k) {
                            void 0 !== eCtrl[k] && (eCtrl.parent[k] = eCtrl[k])
                        }), angular.extend(eCtrl, overwrites), eCtrl.init(!hasForm), scope.$editable = eCtrl, elem.addClass("editable"), hasForm)
                        if (eFormCtrl) {
                            if (scope.$form = eFormCtrl, !scope.$form.$addEditable) throw "Form with editable elements should have `editable-form` attribute.";
                            scope.$form.$addEditable(eCtrl)
                        } else $rootScope.$$editableBuffer = $rootScope.$$editableBuffer || {}, $rootScope.$$editableBuffer[attrs.eForm] = $rootScope.$$editableBuffer[attrs.eForm] || [], $rootScope.$$editableBuffer[attrs.eForm].push(eCtrl), scope.$form = null;
                    else scope.$form = editableFormController(), scope.$form.$addEditable(eCtrl), attrs.eForm && (scope.$parent[attrs.eForm] = scope.$form), attrs.eForm || (elem.addClass("editable-click"), elem.bind("click", function(e) {
                        e.preventDefault(), e.editable = eCtrl, scope.$apply(function() {
                            scope.$form.$show()
                        })
                    }))
                }
            }
        }
    }]), angular.module("xeditable").factory("editableFormController", ["$parse", "$document", "$rootScope", "editablePromiseCollection", "editableUtils", function($parse, $document, $rootScope, editablePromiseCollection, editableUtils) {
        var shown = [];
        $document.bind("click", function(e) {
            if (1 === e.which) {
                for (var toCancel = [], toSubmit = [], i = 0; i < shown.length; i++) shown[i]._clicked ? shown[i]._clicked = !1 : shown[i].$waiting || ("cancel" === shown[i]._blur && toCancel.push(shown[i]), "submit" === shown[i]._blur && toSubmit.push(shown[i]));
                (toCancel.length || toSubmit.length) && $rootScope.$apply(function() {
                    angular.forEach(toCancel, function(v) {
                        v.$cancel()
                    }), angular.forEach(toSubmit, function(v) {
                        v.$submit()
                    })
                })
            }
        });
        var base = {
            $addEditable: function(editable) {
                this.$editables.push(editable), editable.elem.bind("$destroy", angular.bind(this, this.$removeEditable, editable)), editable.scope.$form || (editable.scope.$form = this), this.$visible && editable.catchError(editable.show())
            },
            $removeEditable: function(editable) {
                for (var i = 0; i < this.$editables.length; i++)
                    if (this.$editables[i] === editable) return void this.$editables.splice(i, 1)
            },
            $show: function() {
                if (!this.$visible) {
                    this.$visible = !0;
                    var pc = editablePromiseCollection();
                    pc.when(this.$onshow()), this.$setError(null, ""), angular.forEach(this.$editables, function(editable) {
                        pc.when(editable.show())
                    }), pc.then({
                        onWait: angular.bind(this, this.$setWaiting),
                        onTrue: angular.bind(this, this.$activate),
                        onFalse: angular.bind(this, this.$activate),
                        onString: angular.bind(this, this.$activate)
                    }), setTimeout(angular.bind(this, function() {
                        this._clicked = !1, -1 === editableUtils.indexOf(shown, this) && shown.push(this)
                    }), 0)
                }
            },
            $activate: function(name) {
                var i;
                if (this.$editables.length) {
                    if (angular.isString(name))
                        for (i = 0; i < this.$editables.length; i++)
                            if (this.$editables[i].name === name) return void this.$editables[i].activate();
                    for (i = 0; i < this.$editables.length; i++)
                        if (this.$editables[i].error) return void this.$editables[i].activate();
                    this.$editables[0].activate()
                }
            },
            $hide: function() {
                this.$visible && (this.$visible = !1, this.$onhide(), angular.forEach(this.$editables, function(editable) {
                    editable.hide()
                }), editableUtils.arrayRemove(shown, this))
            },
            $cancel: function() {
                this.$visible && (this.$oncancel(), angular.forEach(this.$editables, function(editable) {
                    editable.cancel()
                }), this.$hide())
            },
            $setWaiting: function(value) {
                this.$waiting = !!value, angular.forEach(this.$editables, function(editable) {
                    editable.setWaiting(!!value)
                })
            },
            $setError: function(name, msg) {
                angular.forEach(this.$editables, function(editable) {
                    name && editable.name !== name || editable.setError(msg)
                })
            },
            $submit: function() {
                function checkSelf(childrenTrue) {
                    var pc = editablePromiseCollection();
                    pc.when(this.$onbeforesave()), pc.then({
                        onWait: angular.bind(this, this.$setWaiting),
                        onTrue: childrenTrue ? angular.bind(this, this.$save) : angular.bind(this, this.$hide),
                        onFalse: angular.bind(this, this.$hide),
                        onString: angular.bind(this, this.$activate)
                    })
                }
                if (!this.$waiting) {
                    this.$setError(null, "");
                    var pc = editablePromiseCollection();
                    angular.forEach(this.$editables, function(editable) {
                        pc.when(editable.onbeforesave())
                    }), pc.then({
                        onWait: angular.bind(this, this.$setWaiting),
                        onTrue: angular.bind(this, checkSelf, !0),
                        onFalse: angular.bind(this, checkSelf, !1),
                        onString: angular.bind(this, this.$activate)
                    })
                }
            },
            $save: function() {
                angular.forEach(this.$editables, function(editable) {
                    editable.save()
                });
                var pc = editablePromiseCollection();
                pc.when(this.$onaftersave()), angular.forEach(this.$editables, function(editable) {
                    pc.when(editable.onaftersave())
                }), pc.then({
                    onWait: angular.bind(this, this.$setWaiting),
                    onTrue: angular.bind(this, this.$hide),
                    onFalse: angular.bind(this, this.$hide),
                    onString: angular.bind(this, this.$activate)
                })
            },
            $onshow: angular.noop,
            $oncancel: angular.noop,
            $onhide: angular.noop,
            $onbeforesave: angular.noop,
            $onaftersave: angular.noop
        };
        return function() {
            return angular.extend({
                $editables: [],
                $visible: !1,
                $waiting: !1,
                $data: {},
                _clicked: !1,
                _blur: null
            }, base)
        }
    }]), angular.module("xeditable").directive("editableForm", ["$rootScope", "$parse", "editableFormController", "editableOptions", function($rootScope, $parse, editableFormController, editableOptions) {
        return {
            restrict: "A",
            require: ["form"],
            compile: function() {
                return {
                    pre: function(scope, elem, attrs, ctrl) {
                        var eForm, form = ctrl[0];
                        attrs.editableForm ? scope[attrs.editableForm] && scope[attrs.editableForm].$show ? (eForm = scope[attrs.editableForm], angular.extend(form, eForm)) : (eForm = editableFormController(), scope[attrs.editableForm] = eForm, angular.extend(eForm, form)) : (eForm = editableFormController(), angular.extend(form, eForm));
                        var buf = $rootScope.$$editableBuffer,
                            name = form.$name;
                        name && buf && buf[name] && (angular.forEach(buf[name], function(editable) {
                            eForm.$addEditable(editable)
                        }), delete buf[name])
                    },
                    post: function(scope, elem, attrs, ctrl) {
                        var eForm;
                        eForm = attrs.editableForm && scope[attrs.editableForm] && scope[attrs.editableForm].$show ? scope[attrs.editableForm] : ctrl[0], attrs.onshow && (eForm.$onshow = angular.bind(eForm, $parse(attrs.onshow), scope)), attrs.onhide && (eForm.$onhide = angular.bind(eForm, $parse(attrs.onhide), scope)), attrs.oncancel && (eForm.$oncancel = angular.bind(eForm, $parse(attrs.oncancel), scope)), attrs.shown && $parse(attrs.shown)(scope) && eForm.$show(), eForm._blur = attrs.blur || editableOptions.blurForm, attrs.ngSubmit || attrs.submit || (attrs.onbeforesave && (eForm.$onbeforesave = function() {
                            return $parse(attrs.onbeforesave)(scope, {
                                $data: eForm.$data
                            })
                        }), attrs.onaftersave && (eForm.$onaftersave = function() {
                            return $parse(attrs.onaftersave)(scope, {
                                $data: eForm.$data
                            })
                        }), elem.bind("submit", function(event) {
                            event.preventDefault(), scope.$apply(function() {
                                eForm.$submit()
                            })
                        })), elem.bind("click", function(e) {
                            1 === e.which && eForm.$visible && (eForm._clicked = !0)
                        })
                    }
                }
            }
        }
    }]), angular.module("xeditable").factory("editablePromiseCollection", ["$q", function($q) {
        function promiseCollection() {
            return {
                promises: [],
                hasFalse: !1,
                hasString: !1,
                when: function(result, noPromise) {
                    if (result === !1) this.hasFalse = !0;
                    else if (!noPromise && angular.isObject(result)) this.promises.push($q.when(result));
                    else {
                        if (!angular.isString(result)) return;
                        this.hasString = !0
                    }
                },
                then: function(callbacks) {
                    function applyCallback() {
                        self.hasString || self.hasFalse ? !self.hasString && self.hasFalse ? onFalse() : onString() : onTrue()
                    }
                    callbacks = callbacks || {};
                    var onTrue = callbacks.onTrue || angular.noop,
                        onFalse = callbacks.onFalse || angular.noop,
                        onString = callbacks.onString || angular.noop,
                        onWait = callbacks.onWait || angular.noop,
                        self = this;
                    this.promises.length ? (onWait(!0), $q.all(this.promises).then(function(results) {
                        onWait(!1), angular.forEach(results, function(result) {
                            self.when(result, !0)
                        }), applyCallback()
                    }, function() {
                        onWait(!1), onString()
                    })) : applyCallback()
                }
            }
        }
        return promiseCollection
    }]), angular.module("xeditable").factory("editableUtils", [function() {
        return {
            indexOf: function(array, obj) {
                if (array.indexOf) return array.indexOf(obj);
                for (var i = 0; i < array.length; i++)
                    if (obj === array[i]) return i;
                return -1
            },
            arrayRemove: function(array, value) {
                var index = this.indexOf(array, value);
                return index >= 0 && array.splice(index, 1), value
            },
            camelToDash: function(str) {
                var SNAKE_CASE_REGEXP = /[A-Z]/g;
                return str.replace(SNAKE_CASE_REGEXP, function(letter, pos) {
                    return (pos ? "-" : "") + letter.toLowerCase()
                })
            },
            dashToCamel: function(str) {
                var SPECIAL_CHARS_REGEXP = /([\:\-\_]+(.))/g,
                    MOZ_HACK_REGEXP = /^moz([A-Z])/;
                return str.replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {
                    return offset ? letter.toUpperCase() : letter
                }).replace(MOZ_HACK_REGEXP, "Moz$1")
            }
        }
    }]), angular.module("xeditable").factory("editableNgOptionsParser", [function() {
        function parser(optionsExp) {
            var match;
            if (!(match = optionsExp.match(NG_OPTIONS_REGEXP))) throw "ng-options parse error";
            var ngRepeat, displayFn = match[2] || match[1],
                valueName = match[4] || match[6],
                keyName = match[5],
                valueFn = (match[3] || "", match[2] ? match[1] : valueName),
                valuesFn = match[7],
                track = match[8],
                trackFn = track ? match[8] : null;
            return void 0 === keyName ? (ngRepeat = valueName + " in " + valuesFn, void 0 !== track && (ngRepeat += " track by " + trackFn)) : ngRepeat = "(" + keyName + ", " + valueName + ") in " + valuesFn, {
                ngRepeat: ngRepeat,
                locals: {
                    valueName: valueName,
                    keyName: keyName,
                    valueFn: valueFn,
                    displayFn: displayFn
                }
            }
        }
        var NG_OPTIONS_REGEXP = /^\s*(.*?)(?:\s+as\s+(.*?))?(?:\s+group\s+by\s+(.*))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+(.*?)(?:\s+track\s+by\s+(.*?))?$/;
        return parser
    }]), angular.module("xeditable").factory("editableThemes", function() {
        var themes = {
            "default": {
                formTpl: '<form class="editable-wrap"></form>',
                noformTpl: '<span class="editable-wrap"></span>',
                controlsTpl: '<span class="editable-controls"></span>',
                inputTpl: "",
                errorTpl: '<div class="editable-error" ng-show="$error" ng-bind="$error"></div>',
                buttonsTpl: '<span class="editable-buttons"></span>',
                submitTpl: '<button type="submit" class="btn-none icon-only icon-ok"></button>',
                cancelTpl: '<button type="button" class="btn-none icon-only icon-cancel" ng-click="$form.$cancel()"></button>'
            },
            bs2: {
                formTpl: '<form class="form-inline editable-wrap" role="form"></form>',
                noformTpl: '<span class="editable-wrap"></span>',
                controlsTpl: '<div class="editable-controls controls control-group" ng-class="{\'error\': $error}"></div>',
                inputTpl: "",
                errorTpl: '<div class="editable-error help-block" ng-show="$error" ng-bind="$error"></div>',
                buttonsTpl: '<span class="editable-buttons"></span>',
                submitTpl: '<button type="submit" class="btn btn-primary"><span class="icon-ok icon-white"></span></button>',
                cancelTpl: '<button type="button" class="btn" ng-click="$form.$cancel()"><span class="icon-remove"></span></button>'
            },
            bs3: {
                formTpl: '<form class="form-inline editable-wrap" role="form"></form>',
                noformTpl: '<span class="editable-wrap"></span>',
                controlsTpl: '<div class="editable-controls form-group" ng-class="{\'has-error\': $error}"></div>',
                inputTpl: "",
                errorTpl: '<div class="editable-error help-block" ng-show="$error" ng-bind="$error"></div>',
                buttonsTpl: '<span class="editable-buttons"></span>',
                submitTpl: '<button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-ok"></span></button>',
                cancelTpl: '<button type="button" class="btn btn-default" ng-click="$form.$cancel()"><span class="glyphicon glyphicon-remove"></span></button>',
                buttonsClass: "",
                inputClass: "",
                postrender: function() {
                    switch (this.directiveName) {
                        case "editableText":
                        case "editableSelect":
                        case "editableTextarea":
                        case "editableEmail":
                        case "editableTel":
                        case "editableNumber":
                        case "editableUrl":
                        case "editableSearch":
                        case "editableDate":
                        case "editableDatetime":
                        case "editableTime":
                        case "editableMonth":
                        case "editableWeek":
                            if (this.inputEl.addClass("form-control"), this.theme.inputClass) {
                                if (this.inputEl.attr("multiple") && ("input-sm" === this.theme.inputClass || "input-lg" === this.theme.inputClass)) break;
                                this.inputEl.addClass(this.theme.inputClass)
                            }
                    }
                    this.buttonsEl && this.theme.buttonsClass && this.buttonsEl.find("button").addClass(this.theme.buttonsClass)
                }
            }
        };
        return themes
    });
var io = "undefined" == typeof module ? {} : module.exports;
! function() {
    if (function(a, b) {
            var c = a;
            c.version = "0.9.16", c.protocol = 1, c.transports = [], c.j = [], c.sockets = {}, c.connect = function(a, d) {
                var f, g, e = c.util.parseUri(a);
                b && b.location && (e.protocol = e.protocol || b.location.protocol.slice(0, -1), e.host = e.host || (b.document ? b.document.domain : b.location.hostname), e.port = e.port || b.location.port), f = c.util.uniqueUri(e);
                var h = {
                    host: e.host,
                    secure: "https" == e.protocol,
                    port: e.port || ("https" == e.protocol ? 443 : 80),
                    query: e.query || ""
                };
                return c.util.merge(h, d), (h["force new connection"] || !c.sockets[f]) && (g = new c.Socket(h)), !h["force new connection"] && g && (c.sockets[f] = g), g = g || c.sockets[f], g.of(e.path.length > 1 ? e.path : "")
            }
        }("object" == typeof module ? module.exports : this.io = {}, this), function(a, b) {
            var c = a.util = {},
                d = /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
                e = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
            c.parseUri = function(a) {
                for (var b = d.exec(a || ""), c = {}, f = 14; f--;) c[e[f]] = b[f] || "";
                return c
            }, c.uniqueUri = function(a) {
                var c = a.protocol,
                    d = a.host,
                    e = a.port;
                return "document" in b ? (d = d || document.domain, e = e || ("https" == c && "https:" !== document.location.protocol ? 443 : document.location.port)) : (d = d || "localhost", !e && "https" == c && (e = 443)), (c || "http") + "://" + d + ":" + (e || 80)
            }, c.query = function(a, b) {
                var d = c.chunkQuery(a || ""),
                    e = [];
                c.merge(d, c.chunkQuery(b || ""));
                for (var f in d) d.hasOwnProperty(f) && e.push(f + "=" + d[f]);
                return e.length ? "?" + e.join("&") : ""
            }, c.chunkQuery = function(a) {
                for (var f, b = {}, c = a.split("&"), d = 0, e = c.length; e > d; ++d) f = c[d].split("="), f[0] && (b[f[0]] = f[1]);
                return b
            };
            var f = !1;
            c.load = function(a) {
                return "document" in b && "complete" === document.readyState || f ? a() : void c.on(b, "load", a, !1)
            }, c.on = function(a, b, c, d) {
                a.attachEvent ? a.attachEvent("on" + b, c) : a.addEventListener && a.addEventListener(b, c, d)
            }, c.request = function(a) {
                if (a && "undefined" != typeof XDomainRequest && !c.ua.hasCORS) return new XDomainRequest;
                if ("undefined" != typeof XMLHttpRequest && (!a || c.ua.hasCORS)) return new XMLHttpRequest;
                if (!a) try {
                    return new(window[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")
                } catch (b) {}
                return null
            }, "undefined" != typeof window && c.load(function() {
                f = !0
            }), c.defer = function(a) {
                return c.ua.webkit && "undefined" == typeof importScripts ? void c.load(function() {
                    setTimeout(a, 100)
                }) : a()
            }, c.merge = function(b, d, e, f) {
                var i, g = f || [],
                    h = "undefined" == typeof e ? 2 : e;
                for (i in d) d.hasOwnProperty(i) && c.indexOf(g, i) < 0 && ("object" == typeof b[i] && h ? c.merge(b[i], d[i], h - 1, g) : (b[i] = d[i], g.push(d[i])));
                return b
            }, c.mixin = function(a, b) {
                c.merge(a.prototype, b.prototype)
            }, c.inherit = function(a, b) {
                function c() {}
                c.prototype = b.prototype, a.prototype = new c
            }, c.isArray = Array.isArray || function(a) {
                return "[object Array]" === Object.prototype.toString.call(a)
            }, c.intersect = function(a, b) {
                for (var d = [], e = a.length > b.length ? a : b, f = a.length > b.length ? b : a, g = 0, h = f.length; h > g; g++) ~c.indexOf(e, f[g]) && d.push(f[g]);
                return d
            }, c.indexOf = function(a, b, c) {
                for (var d = a.length, c = 0 > c ? 0 > c + d ? 0 : c + d : c || 0; d > c && a[c] !== b; c++);
                return c >= d ? -1 : c
            }, c.toArray = function(a) {
                for (var b = [], c = 0, d = a.length; d > c; c++) b.push(a[c]);
                return b
            }, c.ua = {}, c.ua.hasCORS = "undefined" != typeof XMLHttpRequest && function() {
                try {
                    var a = new XMLHttpRequest
                } catch (b) {
                    return !1
                }
                return void 0 != a.withCredentials
            }(), c.ua.webkit = "undefined" != typeof navigator && /webkit/i.test(navigator.userAgent), c.ua.iDevice = "undefined" != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent)
        }("undefined" != typeof io ? io : module.exports, this), function(a, b) {
            function c() {}
            a.EventEmitter = c, c.prototype.on = function(a, c) {
                return this.$events || (this.$events = {}), this.$events[a] ? b.util.isArray(this.$events[a]) ? this.$events[a].push(c) : this.$events[a] = [this.$events[a], c] : this.$events[a] = c, this
            }, c.prototype.addListener = c.prototype.on, c.prototype.once = function(a, b) {
                function d() {
                    c.removeListener(a, d), b.apply(this, arguments)
                }
                var c = this;
                return d.listener = b, this.on(a, d), this
            }, c.prototype.removeListener = function(a, c) {
                if (this.$events && this.$events[a]) {
                    var d = this.$events[a];
                    if (b.util.isArray(d)) {
                        for (var e = -1, f = 0, g = d.length; g > f; f++)
                            if (d[f] === c || d[f].listener && d[f].listener === c) {
                                e = f;
                                break
                            }
                        if (0 > e) return this;
                        d.splice(e, 1), d.length || delete this.$events[a]
                    } else(d === c || d.listener && d.listener === c) && delete this.$events[a]
                }
                return this
            }, c.prototype.removeAllListeners = function(a) {
                return void 0 === a ? (this.$events = {}, this) : (this.$events && this.$events[a] && (this.$events[a] = null), this)
            }, c.prototype.listeners = function(a) {
                return this.$events || (this.$events = {}), this.$events[a] || (this.$events[a] = []), b.util.isArray(this.$events[a]) || (this.$events[a] = [this.$events[a]]), this.$events[a]
            }, c.prototype.emit = function(a) {
                if (!this.$events) return !1;
                var c = this.$events[a];
                if (!c) return !1;
                var d = Array.prototype.slice.call(arguments, 1);
                if ("function" == typeof c) c.apply(this, d);
                else {
                    if (!b.util.isArray(c)) return !1;
                    for (var e = c.slice(), f = 0, g = e.length; g > f; f++) e[f].apply(this, d)
                }
                return !0
            }
        }("undefined" != typeof io ? io : module.exports, "undefined" != typeof io ? io : module.parent.exports), function(exports, nativeJSON) {
            function f(a) {
                return 10 > a ? "0" + a : a
            }

            function date(a) {
                return isFinite(a.valueOf()) ? a.getUTCFullYear() + "-" + f(a.getUTCMonth() + 1) + "-" + f(a.getUTCDate()) + "T" + f(a.getUTCHours()) + ":" + f(a.getUTCMinutes()) + ":" + f(a.getUTCSeconds()) + "Z" : null
            }

            function quote(a) {
                return escapable.lastIndex = 0, escapable.test(a) ? '"' + a.replace(escapable, function(a) {
                    var b = meta[a];
                    return "string" == typeof b ? b : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                }) + '"' : '"' + a + '"'
            }

            function str(a, b) {
                var c, d, e, f, h, g = gap,
                    i = b[a];
                switch (i instanceof Date && (i = date(a)), "function" == typeof rep && (i = rep.call(b, a, i)), typeof i) {
                    case "string":
                        return quote(i);
                    case "number":
                        return isFinite(i) ? String(i) : "null";
                    case "boolean":
                    case "null":
                        return String(i);
                    case "object":
                        if (!i) return "null";
                        if (gap += indent, h = [], "[object Array]" === Object.prototype.toString.apply(i)) {
                            for (f = i.length, c = 0; f > c; c += 1) h[c] = str(c, i) || "null";
                            return e = 0 === h.length ? "[]" : gap ? "[\n" + gap + h.join(",\n" + gap) + "\n" + g + "]" : "[" + h.join(",") + "]", gap = g, e
                        }
                        if (rep && "object" == typeof rep)
                            for (f = rep.length, c = 0; f > c; c += 1) "string" == typeof rep[c] && (d = rep[c], e = str(d, i), e && h.push(quote(d) + (gap ? ": " : ":") + e));
                        else
                            for (d in i) Object.prototype.hasOwnProperty.call(i, d) && (e = str(d, i), e && h.push(quote(d) + (gap ? ": " : ":") + e));
                        return e = 0 === h.length ? "{}" : gap ? "{\n" + gap + h.join(",\n" + gap) + "\n" + g + "}" : "{" + h.join(",") + "}", gap = g, e
                }
            }
            if (nativeJSON && nativeJSON.parse) return exports.JSON = {
                parse: nativeJSON.parse,
                stringify: nativeJSON.stringify
            };
            var JSON = exports.JSON = {},
                cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
                escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
                gap, indent, meta = {
                    "\b": "\\b",
                    "	": "\\t",
                    "\n": "\\n",
                    "\f": "\\f",
                    "\r": "\\r",
                    '"': '\\"',
                    "\\": "\\\\"
                },
                rep;
            JSON.stringify = function(a, b, c) {
                var d;
                if (gap = "", indent = "", "number" == typeof c)
                    for (d = 0; c > d; d += 1) indent += " ";
                else "string" == typeof c && (indent = c);
                if (rep = b, !b || "function" == typeof b || "object" == typeof b && "number" == typeof b.length) return str("", {
                    "": a
                });
                throw new Error("JSON.stringify")
            }, JSON.parse = function(text, reviver) {
                function walk(a, b) {
                    var c, d, e = a[b];
                    if (e && "object" == typeof e)
                        for (c in e) Object.prototype.hasOwnProperty.call(e, c) && (d = walk(e, c), void 0 !== d ? e[c] = d : delete e[c]);
                    return reviver.call(a, b, e)
                }
                var j;
                if (text = String(text), cx.lastIndex = 0, cx.test(text) && (text = text.replace(cx, function(a) {
                        return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                    })), /^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return j = eval("(" + text + ")"), "function" == typeof reviver ? walk({
                    "": j
                }, "") : j;
                throw new SyntaxError("JSON.parse")
            }
        }("undefined" != typeof io ? io : module.exports, "undefined" != typeof JSON ? JSON : void 0), function(a, b) {
            var c = a.parser = {},
                d = c.packets = ["disconnect", "connect", "heartbeat", "message", "json", "event", "ack", "error", "noop"],
                e = c.reasons = ["transport not supported", "client not handshaken", "unauthorized"],
                f = c.advice = ["reconnect"],
                g = b.JSON,
                h = b.util.indexOf;
            c.encodePacket = function(a) {
                var b = h(d, a.type),
                    c = a.id || "",
                    i = a.endpoint || "",
                    j = a.ack,
                    k = null;
                switch (a.type) {
                    case "error":
                        var l = a.reason ? h(e, a.reason) : "",
                            m = a.advice ? h(f, a.advice) : "";
                        ("" !== l || "" !== m) && (k = l + ("" !== m ? "+" + m : ""));
                        break;
                    case "message":
                        "" !== a.data && (k = a.data);
                        break;
                    case "event":
                        var n = {
                            name: a.name
                        };
                        a.args && a.args.length && (n.args = a.args), k = g.stringify(n);
                        break;
                    case "json":
                        k = g.stringify(a.data);
                        break;
                    case "connect":
                        a.qs && (k = a.qs);
                        break;
                    case "ack":
                        k = a.ackId + (a.args && a.args.length ? "+" + g.stringify(a.args) : "")
                }
                var o = [b, c + ("data" == j ? "+" : ""), i];
                return null !== k && void 0 !== k && o.push(k), o.join(":")
            }, c.encodePayload = function(a) {
                var b = "";
                if (1 == a.length) return a[0];
                for (var c = 0, d = a.length; d > c; c++) {
                    var e = a[c];
                    b += "ï¿½" + e.length + "ï¿½" + a[c]
                }
                return b
            };
            var i = /([^:]+):([0-9]+)?(\+)?:([^:]+)?:?([\s\S]*)?/;
            c.decodePacket = function(a) {
                var b = a.match(i);
                if (!b) return {};
                var c = b[2] || "",
                    a = b[5] || "",
                    h = {
                        type: d[b[1]],
                        endpoint: b[4] || ""
                    };
                switch (c && (h.id = c, h.ack = b[3] ? "data" : !0), h.type) {
                    case "error":
                        var b = a.split("+");
                        h.reason = e[b[0]] || "", h.advice = f[b[1]] || "";
                        break;
                    case "message":
                        h.data = a || "";
                        break;
                    case "event":
                        try {
                            var j = g.parse(a);
                            h.name = j.name, h.args = j.args
                        } catch (k) {}
                        h.args = h.args || [];
                        break;
                    case "json":
                        try {
                            h.data = g.parse(a)
                        } catch (k) {}
                        break;
                    case "connect":
                        h.qs = a || "";
                        break;
                    case "ack":
                        var b = a.match(/^([0-9]+)(\+)?(.*)/);
                        if (b && (h.ackId = b[1], h.args = [], b[3])) try {
                            h.args = b[3] ? g.parse(b[3]) : []
                        } catch (k) {}
                        break;
                    case "disconnect":
                    case "heartbeat":
                }
                return h
            }, c.decodePayload = function(a) {
                if ("ï¿½" == a.charAt(0)) {
                    for (var b = [], d = 1, e = ""; d < a.length; d++) "ï¿½" == a.charAt(d) ? (b.push(c.decodePacket(a.substr(d + 1).substr(0, e))), d += Number(e) + 1, e = "") : e += a.charAt(d);
                    return b
                }
                return [c.decodePacket(a)]
            }
        }("undefined" != typeof io ? io : module.exports, "undefined" != typeof io ? io : module.parent.exports), function(a, b) {
            function c(a, b) {
                this.socket = a, this.sessid = b
            }
            a.Transport = c, b.util.mixin(c, b.EventEmitter), c.prototype.heartbeats = function() {
                return !0
            }, c.prototype.onData = function(a) {
                if (this.clearCloseTimeout(), (this.socket.connected || this.socket.connecting || this.socket.reconnecting) && this.setCloseTimeout(), "" !== a) {
                    var c = b.parser.decodePayload(a);
                    if (c && c.length)
                        for (var d = 0, e = c.length; e > d; d++) this.onPacket(c[d])
                }
                return this
            }, c.prototype.onPacket = function(a) {
                return this.socket.setHeartbeatTimeout(), "heartbeat" == a.type ? this.onHeartbeat() : ("connect" == a.type && "" == a.endpoint && this.onConnect(), "error" == a.type && "reconnect" == a.advice && (this.isOpen = !1), this.socket.onPacket(a), this)
            }, c.prototype.setCloseTimeout = function() {
                if (!this.closeTimeout) {
                    var a = this;
                    this.closeTimeout = setTimeout(function() {
                        a.onDisconnect()
                    }, this.socket.closeTimeout)
                }
            }, c.prototype.onDisconnect = function() {
                return this.isOpen && this.close(), this.clearTimeouts(), this.socket.onDisconnect(), this
            }, c.prototype.onConnect = function() {
                return this.socket.onConnect(), this
            }, c.prototype.clearCloseTimeout = function() {
                this.closeTimeout && (clearTimeout(this.closeTimeout), this.closeTimeout = null)
            }, c.prototype.clearTimeouts = function() {
                this.clearCloseTimeout(), this.reopenTimeout && clearTimeout(this.reopenTimeout)
            }, c.prototype.packet = function(a) {
                this.send(b.parser.encodePacket(a))
            }, c.prototype.onHeartbeat = function() {
                this.packet({
                    type: "heartbeat"
                })
            }, c.prototype.onOpen = function() {
                this.isOpen = !0, this.clearCloseTimeout(), this.socket.onOpen()
            }, c.prototype.onClose = function() {
                this.isOpen = !1, this.socket.onClose(), this.onDisconnect()
            }, c.prototype.prepareUrl = function() {
                var a = this.socket.options;
                return this.scheme() + "://" + a.host + ":" + a.port + "/" + a.resource + "/" + b.protocol + "/" + this.name + "/" + this.sessid
            }, c.prototype.ready = function(a, b) {
                b.call(this)
            }
        }("undefined" != typeof io ? io : module.exports, "undefined" != typeof io ? io : module.parent.exports), function(a, b, c) {
            function d(a) {
                if (this.options = {
                        port: 80,
                        secure: !1,
                        document: "document" in c ? document : !1,
                        resource: "socket.io",
                        transports: b.transports,
                        "connect timeout": 1e4,
                        "try multiple transports": !0,
                        reconnect: !0,
                        "reconnection delay": 500,
                        "reconnection limit": 1 / 0,
                        "reopen delay": 3e3,
                        "max reconnection attempts": 10,
                        "sync disconnect on unload": !1,
                        "auto connect": !0,
                        "flash policy port": 10843,
                        manualFlush: !1
                    }, b.util.merge(this.options, a), this.connected = !1, this.open = !1, this.connecting = !1, this.reconnecting = !1, this.namespaces = {}, this.buffer = [], this.doBuffer = !1, this.options["sync disconnect on unload"] && (!this.isXDomain() || b.util.ua.hasCORS)) {
                    var d = this;
                    b.util.on(c, "beforeunload", function() {
                        d.disconnectSync()
                    }, !1)
                }
                this.options["auto connect"] && this.connect()
            }

            function e() {}
            a.Socket = d, b.util.mixin(d, b.EventEmitter), d.prototype.of = function(a) {
                return this.namespaces[a] || (this.namespaces[a] = new b.SocketNamespace(this, a), "" !== a && this.namespaces[a].packet({
                    type: "connect"
                })), this.namespaces[a]
            }, d.prototype.publish = function() {
                this.emit.apply(this, arguments);
                var a;
                for (var b in this.namespaces) this.namespaces.hasOwnProperty(b) && (a = this.of(b), a.$emit.apply(a, arguments))
            }, d.prototype.handshake = function(a) {
                function f(b) {
                    b instanceof Error ? (c.connecting = !1, c.onError(b.message)) : a.apply(null, b.split(":"))
                }
                var c = this,
                    d = this.options,
                    g = ["http" + (d.secure ? "s" : "") + ":/", d.host + ":" + d.port, d.resource, b.protocol, b.util.query(this.options.query, "t=" + +new Date)].join("/");
                if (this.isXDomain() && !b.util.ua.hasCORS) {
                    var h = document.getElementsByTagName("script")[0],
                        i = document.createElement("script");
                    i.src = g + "&jsonp=" + b.j.length, h.parentNode.insertBefore(i, h), b.j.push(function(a) {
                        f(a), i.parentNode.removeChild(i)
                    })
                } else {
                    var j = b.util.request();
                    j.open("GET", g, !0), this.isXDomain() && (j.withCredentials = !0), j.onreadystatechange = function() {
                        4 == j.readyState && (j.onreadystatechange = e, 200 == j.status ? f(j.responseText) : 403 == j.status ? c.onError(j.responseText) : (c.connecting = !1, !c.reconnecting && c.onError(j.responseText)))
                    }, j.send(null)
                }
            }, d.prototype.getTransport = function(a) {
                for (var f, c = a || this.transports, e = 0; f = c[e]; e++)
                    if (b.Transport[f] && b.Transport[f].check(this) && (!this.isXDomain() || b.Transport[f].xdomainCheck(this))) return new b.Transport[f](this, this.sessionid);
                return null
            }, d.prototype.connect = function(a) {
                if (this.connecting) return this;
                var c = this;
                return c.connecting = !0, this.handshake(function(d, e, f, g) {
                    function h(a) {
                        return c.transport && c.transport.clearTimeouts(), c.transport = c.getTransport(a), c.transport ? void c.transport.ready(c, function() {
                            c.connecting = !0, c.publish("connecting", c.transport.name), c.transport.open(), c.options["connect timeout"] && (c.connectTimeoutTimer = setTimeout(function() {
                                if (!c.connected && (c.connecting = !1, c.options["try multiple transports"])) {
                                    for (var a = c.transports; a.length > 0 && a.splice(0, 1)[0] != c.transport.name;);
                                    a.length ? h(a) : c.publish("connect_failed")
                                }
                            }, c.options["connect timeout"]))
                        }) : c.publish("connect_failed")
                    }
                    c.sessionid = d, c.closeTimeout = 1e3 * f, c.heartbeatTimeout = 1e3 * e, c.transports || (c.transports = c.origTransports = g ? b.util.intersect(g.split(","), c.options.transports) : c.options.transports), c.setHeartbeatTimeout(), h(c.transports), c.once("connect", function() {
                        clearTimeout(c.connectTimeoutTimer), a && "function" == typeof a && a()
                    })
                }), this
            }, d.prototype.setHeartbeatTimeout = function() {
                if (clearTimeout(this.heartbeatTimeoutTimer), !this.transport || this.transport.heartbeats()) {
                    var a = this;
                    this.heartbeatTimeoutTimer = setTimeout(function() {
                        a.transport.onClose()
                    }, this.heartbeatTimeout)
                }
            }, d.prototype.packet = function(a) {
                return this.connected && !this.doBuffer ? this.transport.packet(a) : this.buffer.push(a), this
            }, d.prototype.setBuffer = function(a) {
                this.doBuffer = a, !a && this.connected && this.buffer.length && (this.options.manualFlush || this.flushBuffer())
            }, d.prototype.flushBuffer = function() {
                this.transport.payload(this.buffer), this.buffer = []
            }, d.prototype.disconnect = function() {
                return (this.connected || this.connecting) && (this.open && this.of("").packet({
                    type: "disconnect"
                }), this.onDisconnect("booted")), this
            }, d.prototype.disconnectSync = function() {
                var a = b.util.request(),
                    c = ["http" + (this.options.secure ? "s" : "") + ":/", this.options.host + ":" + this.options.port, this.options.resource, b.protocol, "", this.sessionid].join("/") + "/?disconnect=1";
                a.open("GET", c, !1), a.send(null), this.onDisconnect("booted")
            }, d.prototype.isXDomain = function() {
                var a = c.location.port || ("https:" == c.location.protocol ? 443 : 80);
                return this.options.host !== c.location.hostname || this.options.port != a
            }, d.prototype.onConnect = function() {
                this.connected || (this.connected = !0, this.connecting = !1, this.doBuffer || this.setBuffer(!1), this.emit("connect"))
            }, d.prototype.onOpen = function() {
                this.open = !0
            }, d.prototype.onClose = function() {
                this.open = !1, clearTimeout(this.heartbeatTimeoutTimer)
            }, d.prototype.onPacket = function(a) {
                this.of(a.endpoint).onPacket(a)
            }, d.prototype.onError = function(a) {
                a && a.advice && "reconnect" === a.advice && (this.connected || this.connecting) && (this.disconnect(), this.options.reconnect && this.reconnect()), this.publish("error", a && a.reason ? a.reason : a)
            }, d.prototype.onDisconnect = function(a) {
                var b = this.connected,
                    c = this.connecting;
                this.connected = !1, this.connecting = !1, this.open = !1, (b || c) && (this.transport.close(), this.transport.clearTimeouts(), b && (this.publish("disconnect", a), "booted" != a && this.options.reconnect && !this.reconnecting && this.reconnect()))
            }, d.prototype.reconnect = function() {
                function e() {
                    if (a.connected) {
                        for (var b in a.namespaces) a.namespaces.hasOwnProperty(b) && "" !== b && a.namespaces[b].packet({
                            type: "connect"
                        });
                        a.publish("reconnect", a.transport.name, a.reconnectionAttempts)
                    }
                    clearTimeout(a.reconnectionTimer), a.removeListener("connect_failed", f), a.removeListener("connect", f), a.reconnecting = !1, delete a.reconnectionAttempts, delete a.reconnectionDelay, delete a.reconnectionTimer, delete a.redoTransports, a.options["try multiple transports"] = c
                }

                function f() {
                    return a.reconnecting ? a.connected ? e() : a.connecting && a.reconnecting ? a.reconnectionTimer = setTimeout(f, 1e3) : void(a.reconnectionAttempts++ >= b ? a.redoTransports ? (a.publish("reconnect_failed"), e()) : (a.on("connect_failed", f), a.options["try multiple transports"] = !0, a.transports = a.origTransports, a.transport = a.getTransport(), a.redoTransports = !0, a.connect()) : (a.reconnectionDelay < d && (a.reconnectionDelay *= 2), a.connect(), a.publish("reconnecting", a.reconnectionDelay, a.reconnectionAttempts), a.reconnectionTimer = setTimeout(f, a.reconnectionDelay))) : void 0
                }
                this.reconnecting = !0, this.reconnectionAttempts = 0, this.reconnectionDelay = this.options["reconnection delay"];
                var a = this,
                    b = this.options["max reconnection attempts"],
                    c = this.options["try multiple transports"],
                    d = this.options["reconnection limit"];
                this.options["try multiple transports"] = !1, this.reconnectionTimer = setTimeout(f, this.reconnectionDelay), this.on("connect", f)
            }
        }("undefined" != typeof io ? io : module.exports, "undefined" != typeof io ? io : module.parent.exports, this), function(a, b) {
            function c(a, b) {
                this.socket = a, this.name = b || "", this.flags = {}, this.json = new d(this, "json"), this.ackPackets = 0, this.acks = {}
            }

            function d(a, b) {
                this.namespace = a, this.name = b
            }
            a.SocketNamespace = c, b.util.mixin(c, b.EventEmitter), c.prototype.$emit = b.EventEmitter.prototype.emit, c.prototype.of = function() {
                return this.socket.of.apply(this.socket, arguments)
            }, c.prototype.packet = function(a) {
                return a.endpoint = this.name, this.socket.packet(a), this.flags = {}, this
            }, c.prototype.send = function(a, b) {
                var c = {
                    type: this.flags.json ? "json" : "message",
                    data: a
                };
                return "function" == typeof b && (c.id = ++this.ackPackets, c.ack = !0, this.acks[c.id] = b), this.packet(c)
            }, c.prototype.emit = function(a) {
                var b = Array.prototype.slice.call(arguments, 1),
                    c = b[b.length - 1],
                    d = {
                        type: "event",
                        name: a
                    };
                return "function" == typeof c && (d.id = ++this.ackPackets, d.ack = "data", this.acks[d.id] = c, b = b.slice(0, b.length - 1)), d.args = b, this.packet(d)
            }, c.prototype.disconnect = function() {
                return "" === this.name ? this.socket.disconnect() : (this.packet({
                    type: "disconnect"
                }), this.$emit("disconnect")), this
            }, c.prototype.onPacket = function(a) {
                function d() {
                    c.packet({
                        type: "ack",
                        args: b.util.toArray(arguments),
                        ackId: a.id
                    })
                }
                var c = this;
                switch (a.type) {
                    case "connect":
                        this.$emit("connect");
                        break;
                    case "disconnect":
                        "" === this.name ? this.socket.onDisconnect(a.reason || "booted") : this.$emit("disconnect", a.reason);
                        break;
                    case "message":
                    case "json":
                        var e = ["message", a.data];
                        "data" == a.ack ? e.push(d) : a.ack && this.packet({
                            type: "ack",
                            ackId: a.id
                        }), this.$emit.apply(this, e);
                        break;
                    case "event":
                        var e = [a.name].concat(a.args);
                        "data" == a.ack && e.push(d), this.$emit.apply(this, e);
                        break;
                    case "ack":
                        this.acks[a.ackId] && (this.acks[a.ackId].apply(this, a.args), delete this.acks[a.ackId]);
                        break;
                    case "error":
                        a.advice ? this.socket.onError(a) : "unauthorized" == a.reason ? this.$emit("connect_failed", a.reason) : this.$emit("error", a.reason)
                }
            }, d.prototype.send = function() {
                this.namespace.flags[this.name] = !0, this.namespace.send.apply(this.namespace, arguments)
            }, d.prototype.emit = function() {
                this.namespace.flags[this.name] = !0, this.namespace.emit.apply(this.namespace, arguments)
            }
        }("undefined" != typeof io ? io : module.exports, "undefined" != typeof io ? io : module.parent.exports), function(a, b, c) {
            function d() {
                b.Transport.apply(this, arguments)
            }
            a.websocket = d, b.util.inherit(d, b.Transport), d.prototype.name = "websocket", d.prototype.open = function() {
                var e, a = b.util.query(this.socket.options.query),
                    d = this;
                return e || (e = c.MozWebSocket || c.WebSocket), this.websocket = new e(this.prepareUrl() + a), this.websocket.onopen = function() {
                    d.onOpen(), d.socket.setBuffer(!1)
                }, this.websocket.onmessage = function(a) {
                    d.onData(a.data)
                }, this.websocket.onclose = function() {
                    d.onClose(), d.socket.setBuffer(!0)
                }, this.websocket.onerror = function(a) {
                    d.onError(a)
                }, this
            }, d.prototype.send = b.util.ua.iDevice ? function(a) {
                var b = this;
                return setTimeout(function() {
                    b.websocket.send(a)
                }, 0), this
            } : function(a) {
                return this.websocket.send(a), this
            }, d.prototype.payload = function(a) {
                for (var b = 0, c = a.length; c > b; b++) this.packet(a[b]);
                return this
            }, d.prototype.close = function() {
                return this.websocket.close(), this
            }, d.prototype.onError = function(a) {
                this.socket.onError(a)
            }, d.prototype.scheme = function() {
                return this.socket.options.secure ? "wss" : "ws"
            }, d.check = function() {
                return "WebSocket" in c && !("__addTask" in WebSocket) || "MozWebSocket" in c
            }, d.xdomainCheck = function() {
                return !0
            }, b.transports.push("websocket")
        }("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports, this), function(a, b) {
            function c() {
                b.Transport.websocket.apply(this, arguments)
            }
            a.flashsocket = c, b.util.inherit(c, b.Transport.websocket), c.prototype.name = "flashsocket", c.prototype.open = function() {
                var a = this,
                    c = arguments;
                return WebSocket.__addTask(function() {
                    b.Transport.websocket.prototype.open.apply(a, c)
                }), this
            }, c.prototype.send = function() {
                var a = this,
                    c = arguments;
                return WebSocket.__addTask(function() {
                    b.Transport.websocket.prototype.send.apply(a, c)
                }), this
            }, c.prototype.close = function() {
                return WebSocket.__tasks.length = 0, b.Transport.websocket.prototype.close.call(this), this
            }, c.prototype.ready = function(a, d) {
                function e() {
                    var b = a.options,
                        e = b["flash policy port"],
                        g = ["http" + (b.secure ? "s" : "") + ":/", b.host + ":" + b.port, b.resource, "static/flashsocket", "WebSocketMain" + (a.isXDomain() ? "Insecure" : "") + ".swf"];
                    c.loaded || ("undefined" == typeof WEB_SOCKET_SWF_LOCATION && (WEB_SOCKET_SWF_LOCATION = g.join("/")), 843 !== e && WebSocket.loadFlashPolicyFile("xmlsocket://" + b.host + ":" + e), WebSocket.__initialize(), c.loaded = !0), d.call(f)
                }
                var f = this;
                return document.body ? e() : void b.util.load(e)
            }, c.check = function() {
                return "undefined" != typeof WebSocket && "__initialize" in WebSocket && swfobject ? swfobject.getFlashPlayerVersion().major >= 10 : !1
            }, c.xdomainCheck = function() {
                return !0
            }, "undefined" != typeof window && (WEB_SOCKET_DISABLE_AUTO_INITIALIZATION = !0), b.transports.push("flashsocket")
        }("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports), "undefined" != typeof window) var swfobject = function() {
        function A() {
            if (!t) {
                try {
                    var a = i.getElementsByTagName("body")[0].appendChild(Q("span"));
                    a.parentNode.removeChild(a)
                } catch (b) {
                    return
                }
                t = !0;
                for (var c = l.length, d = 0; c > d; d++) l[d]()
            }
        }

        function B(a) {
            t ? a() : l[l.length] = a
        }

        function C(b) {
            if (typeof h.addEventListener != a) h.addEventListener("load", b, !1);
            else if (typeof i.addEventListener != a) i.addEventListener("load", b, !1);
            else if (typeof h.attachEvent != a) R(h, "onload", b);
            else if ("function" == typeof h.onload) {
                var c = h.onload;
                h.onload = function() {
                    c(), b()
                }
            } else h.onload = b
        }

        function D() {
            k ? E() : F()
        }

        function E() {
            var c = i.getElementsByTagName("body")[0],
                d = Q(b);
            d.setAttribute("type", e);
            var f = c.appendChild(d);
            if (f) {
                var g = 0;
                ! function() {
                    if (typeof f.GetVariable != a) {
                        var b = f.GetVariable("$version");
                        b && (b = b.split(" ")[1].split(","), y.pv = [parseInt(b[0], 10), parseInt(b[1], 10), parseInt(b[2], 10)])
                    } else if (10 > g) return g++, void setTimeout(arguments.callee, 10);
                    c.removeChild(d), f = null, F()
                }()
            } else F()
        }

        function F() {
            var b = m.length;
            if (b > 0)
                for (var c = 0; b > c; c++) {
                    var d = m[c].id,
                        e = m[c].callbackFn,
                        f = {
                            success: !1,
                            id: d
                        };
                    if (y.pv[0] > 0) {
                        var g = P(d);
                        if (g)
                            if (!S(m[c].swfVersion) || y.wk && y.wk < 312)
                                if (m[c].expressInstall && H()) {
                                    var h = {};
                                    h.data = m[c].expressInstall, h.width = g.getAttribute("width") || "0", h.height = g.getAttribute("height") || "0", g.getAttribute("class") && (h.styleclass = g.getAttribute("class")), g.getAttribute("align") && (h.align = g.getAttribute("align"));
                                    for (var i = {}, j = g.getElementsByTagName("param"), k = j.length, l = 0; k > l; l++) "movie" != j[l].getAttribute("name").toLowerCase() && (i[j[l].getAttribute("name")] = j[l].getAttribute("value"));
                                    I(h, i, d, e)
                                } else J(g), e && e(f);
                        else U(d, !0), e && (f.success = !0, f.ref = G(d), e(f))
                    } else if (U(d, !0), e) {
                        var n = G(d);
                        n && typeof n.SetVariable != a && (f.success = !0, f.ref = n), e(f)
                    }
                }
        }

        function G(c) {
            var d = null,
                e = P(c);
            if (e && "OBJECT" == e.nodeName)
                if (typeof e.SetVariable != a) d = e;
                else {
                    var f = e.getElementsByTagName(b)[0];
                    f && (d = f)
                }
            return d
        }

        function H() {
            return !u && S("6.0.65") && (y.win || y.mac) && !(y.wk && y.wk < 312)
        }

        function I(b, c, d, e) {
            u = !0, r = e || null, s = {
                success: !1,
                id: d
            };
            var g = P(d);
            if (g) {
                "OBJECT" == g.nodeName ? (p = K(g), q = null) : (p = g, q = d), b.id = f, (typeof b.width == a || !/%$/.test(b.width) && parseInt(b.width, 10) < 310) && (b.width = "310"), (typeof b.height == a || !/%$/.test(b.height) && parseInt(b.height, 10) < 137) && (b.height = "137"), i.title = i.title.slice(0, 47) + " - Flash Player Installation";
                var j = y.ie && y.win ? ["Active"].concat("").join("X") : "PlugIn",
                    k = "MMredirectURL=" + h.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + j + "&MMdoctitle=" + i.title;
                if (typeof c.flashvars != a ? c.flashvars += "&" + k : c.flashvars = k, y.ie && y.win && 4 != g.readyState) {
                    var l = Q("div");
                    d += "SWFObjectNew", l.setAttribute("id", d), g.parentNode.insertBefore(l, g), g.style.display = "none",
                        function() {
                            4 == g.readyState ? g.parentNode.removeChild(g) : setTimeout(arguments.callee, 10)
                        }()
                }
                L(b, c, d)
            }
        }

        function J(a) {
            if (y.ie && y.win && 4 != a.readyState) {
                var b = Q("div");
                a.parentNode.insertBefore(b, a), b.parentNode.replaceChild(K(a), b), a.style.display = "none",
                    function() {
                        4 == a.readyState ? a.parentNode.removeChild(a) : setTimeout(arguments.callee, 10)
                    }()
            } else a.parentNode.replaceChild(K(a), a)
        }

        function K(a) {
            var c = Q("div");
            if (y.win && y.ie) c.innerHTML = a.innerHTML;
            else {
                var d = a.getElementsByTagName(b)[0];
                if (d) {
                    var e = d.childNodes;
                    if (e)
                        for (var f = e.length, g = 0; f > g; g++)(1 != e[g].nodeType || "PARAM" != e[g].nodeName) && 8 != e[g].nodeType && c.appendChild(e[g].cloneNode(!0))
                }
            }
            return c
        }

        function L(c, d, f) {
            var g, h = P(f);
            if (y.wk && y.wk < 312) return g;
            if (h)
                if (typeof c.id == a && (c.id = f), y.ie && y.win) {
                    var i = "";
                    for (var j in c) c[j] != Object.prototype[j] && ("data" == j.toLowerCase() ? d.movie = c[j] : "styleclass" == j.toLowerCase() ? i += ' class="' + c[j] + '"' : "classid" != j.toLowerCase() && (i += " " + j + '="' + c[j] + '"'));
                    var k = "";
                    for (var l in d) d[l] != Object.prototype[l] && (k += '<param name="' + l + '" value="' + d[l] + '" />');
                    h.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + i + ">" + k + "</object>", n[n.length] = c.id, g = P(c.id)
                } else {
                    var m = Q(b);
                    m.setAttribute("type", e);
                    for (var o in c) c[o] != Object.prototype[o] && ("styleclass" == o.toLowerCase() ? m.setAttribute("class", c[o]) : "classid" != o.toLowerCase() && m.setAttribute(o, c[o]));
                    for (var p in d) d[p] != Object.prototype[p] && "movie" != p.toLowerCase() && M(m, p, d[p]);
                    h.parentNode.replaceChild(m, h), g = m
                }
            return g
        }

        function M(a, b, c) {
            var d = Q("param");
            d.setAttribute("name", b), d.setAttribute("value", c), a.appendChild(d)
        }

        function N(a) {
            var b = P(a);
            b && "OBJECT" == b.nodeName && (y.ie && y.win ? (b.style.display = "none", function() {
                4 == b.readyState ? O(a) : setTimeout(arguments.callee, 10)
            }()) : b.parentNode.removeChild(b))
        }

        function O(a) {
            var b = P(a);
            if (b) {
                for (var c in b) "function" == typeof b[c] && (b[c] = null);
                b.parentNode.removeChild(b)
            }
        }

        function P(a) {
            var b = null;
            try {
                b = i.getElementById(a)
            } catch (c) {}
            return b
        }

        function Q(a) {
            return i.createElement(a)
        }

        function R(a, b, c) {
            a.attachEvent(b, c), o[o.length] = [a, b, c]
        }

        function S(a) {
            var b = y.pv,
                c = a.split(".");
            return c[0] = parseInt(c[0], 10), c[1] = parseInt(c[1], 10) || 0, c[2] = parseInt(c[2], 10) || 0, b[0] > c[0] || b[0] == c[0] && b[1] > c[1] || b[0] == c[0] && b[1] == c[1] && b[2] >= c[2] ? !0 : !1
        }

        function T(c, d, e, f) {
            if (!y.ie || !y.mac) {
                var g = i.getElementsByTagName("head")[0];
                if (g) {
                    var h = e && "string" == typeof e ? e : "screen";
                    if (f && (v = null, w = null), !v || w != h) {
                        var j = Q("style");
                        j.setAttribute("type", "text/css"), j.setAttribute("media", h), v = g.appendChild(j), y.ie && y.win && typeof i.styleSheets != a && i.styleSheets.length > 0 && (v = i.styleSheets[i.styleSheets.length - 1]), w = h
                    }
                    y.ie && y.win ? v && typeof v.addRule == b && v.addRule(c, d) : v && typeof i.createTextNode != a && v.appendChild(i.createTextNode(c + " {" + d + "}"))
                }
            }
        }

        function U(a, b) {
            if (x) {
                var c = b ? "visible" : "hidden";
                t && P(a) ? P(a).style.visibility = c : T("#" + a, "visibility:" + c)
            }
        }

        function V(b) {
            var c = /[\\\"<>\.;]/,
                d = null != c.exec(b);
            return d && typeof encodeURIComponent != a ? encodeURIComponent(b) : b
        } {
            var p, q, r, s, v, w, a = "undefined",
                b = "object",
                c = "Shockwave Flash",
                d = "ShockwaveFlash.ShockwaveFlash",
                e = "application/x-shockwave-flash",
                f = "SWFObjectExprInst",
                g = "onreadystatechange",
                h = window,
                i = document,
                j = navigator,
                k = !1,
                l = [D],
                m = [],
                n = [],
                o = [],
                t = !1,
                u = !1,
                x = !0,
                y = function() {
                    var f = typeof i.getElementById != a && typeof i.getElementsByTagName != a && typeof i.createElement != a,
                        g = j.userAgent.toLowerCase(),
                        l = j.platform.toLowerCase(),
                        m = /win/.test(l ? l : g),
                        n = /mac/.test(l ? l : g),
                        o = /webkit/.test(g) ? parseFloat(g.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : !1,
                        p = !1,
                        q = [0, 0, 0],
                        r = null;
                    if (typeof j.plugins != a && typeof j.plugins[c] == b) r = j.plugins[c].description, r && (typeof j.mimeTypes == a || !j.mimeTypes[e] || !!j.mimeTypes[e].enabledPlugin) && (k = !0, p = !1, r = r.replace(/^.*\s+(\S+\s+\S+$)/, "$1"), q[0] = parseInt(r.replace(/^(.*)\..*$/, "$1"), 10), q[1] = parseInt(r.replace(/^.*\.(.*)\s.*$/, "$1"), 10), q[2] = /[a-zA-Z]/.test(r) ? parseInt(r.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0);
                    else if (typeof h[["Active"].concat("Object").join("X")] != a) try {
                        var s = new(window[["Active"].concat("Object").join("X")])(d);
                        s && (r = s.GetVariable("$version"), r && (p = !0, r = r.split(" ")[1].split(","), q = [parseInt(r[0], 10), parseInt(r[1], 10), parseInt(r[2], 10)]))
                    } catch (t) {}
                    return {
                        w3: f,
                        pv: q,
                        wk: o,
                        ie: p,
                        win: m,
                        mac: n
                    }
                }();
            ! function() {
                y.w3 && ((typeof i.readyState != a && "complete" == i.readyState || typeof i.readyState == a && (i.getElementsByTagName("body")[0] || i.body)) && A(), t || (typeof i.addEventListener != a && i.addEventListener("DOMContentLoaded", A, !1), y.ie && y.win && (i.attachEvent(g, function() {
                    "complete" == i.readyState && (i.detachEvent(g, arguments.callee), A())
                }), h == top && function() {
                    if (!t) {
                        try {
                            i.documentElement.doScroll("left")
                        } catch (a) {
                            return void setTimeout(arguments.callee, 0)
                        }
                        A()
                    }
                }()), y.wk && function() {
                    return t ? void 0 : /loaded|complete/.test(i.readyState) ? void A() : void setTimeout(arguments.callee, 0)
                }(), C(A)))
            }(),
            function() {
                y.ie && y.win && window.attachEvent("onunload", function() {
                    for (var a = o.length, b = 0; a > b; b++) o[b][0].detachEvent(o[b][1], o[b][2]);
                    for (var c = n.length, d = 0; c > d; d++) N(n[d]);
                    for (var e in y) y[e] = null;
                    y = null;
                    for (var f in swfobject) swfobject[f] = null;
                    swfobject = null
                })
            }()
        }
        return {
            registerObject: function(a, b, c, d) {
                if (y.w3 && a && b) {
                    var e = {};
                    e.id = a, e.swfVersion = b, e.expressInstall = c, e.callbackFn = d, m[m.length] = e, U(a, !1)
                } else d && d({
                    success: !1,
                    id: a
                })
            },
            getObjectById: function(a) {
                return y.w3 ? G(a) : void 0
            },
            embedSWF: function(c, d, e, f, g, h, i, j, k, l) {
                var m = {
                    success: !1,
                    id: d
                };
                y.w3 && !(y.wk && y.wk < 312) && c && d && e && f && g ? (U(d, !1), B(function() {
                    e += "", f += "";
                    var n = {};
                    if (k && typeof k === b)
                        for (var o in k) n[o] = k[o];
                    n.data = c, n.width = e, n.height = f;
                    var p = {};
                    if (j && typeof j === b)
                        for (var q in j) p[q] = j[q];
                    if (i && typeof i === b)
                        for (var r in i) typeof p.flashvars != a ? p.flashvars += "&" + r + "=" + i[r] : p.flashvars = r + "=" + i[r];
                    if (S(g)) {
                        var s = L(n, p, d);
                        n.id == d && U(d, !0), m.success = !0, m.ref = s
                    } else {
                        if (h && H()) return n.data = h, void I(n, p, d, l);
                        U(d, !0)
                    }
                    l && l(m)
                })) : l && l(m)
            },
            switchOffAutoHideShow: function() {
                x = !1
            },
            ua: y,
            getFlashPlayerVersion: function() {
                return {
                    major: y.pv[0],
                    minor: y.pv[1],
                    release: y.pv[2]
                }
            },
            hasFlashPlayerVersion: S,
            createSWF: function(a, b, c) {
                return y.w3 ? L(a, b, c) : void 0
            },
            showExpressInstall: function(a, b, c, d) {
                y.w3 && H() && I(a, b, c, d)
            },
            removeSWF: function(a) {
                y.w3 && N(a)
            },
            createCSS: function(a, b, c, d) {
                y.w3 && T(a, b, c, d)
            },
            addDomLoadEvent: B,
            addLoadEvent: C,
            getQueryParamValue: function(a) {
                var b = i.location.search || i.location.hash;
                if (b) {
                    if (/\?/.test(b) && (b = b.split("?")[1]), null == a) return V(b);
                    for (var c = b.split("&"), d = 0; d < c.length; d++)
                        if (c[d].substring(0, c[d].indexOf("=")) == a) return V(c[d].substring(c[d].indexOf("=") + 1))
                }
                return ""
            },
            expressInstallCallback: function() {
                if (u) {
                    var a = P(f);
                    a && p && (a.parentNode.replaceChild(p, a), q && (U(q, !0), y.ie && y.win && (p.style.display = "block")), r && r(s)), u = !1
                }
            }
        }
    }();
    ! function() {
        if ("undefined" != typeof window && !window.WebSocket) {
            var a = window.console;
            return a && a.log && a.error || (a = {
                log: function() {},
                error: function() {}
            }), swfobject.hasFlashPlayerVersion("10.0.0") ? ("file:" == location.protocol && a.error("WARNING: web-socket-js doesn't work in file:///... URL unless you set Flash Security Settings properly. Open the page via Web server i.e. http://..."), WebSocket = function(a, b, c, d, e) {
                var f = this;
                f.__id = WebSocket.__nextId++, WebSocket.__instances[f.__id] = f, f.readyState = WebSocket.CONNECTING, f.bufferedAmount = 0, f.__events = {}, b ? "string" == typeof b && (b = [b]) : b = [], setTimeout(function() {
                    WebSocket.__addTask(function() {
                        WebSocket.__flash.create(f.__id, a, b, c || null, d || 0, e || null)
                    })
                }, 0)
            }, WebSocket.prototype.send = function(a) {
                if (this.readyState == WebSocket.CONNECTING) throw "INVALID_STATE_ERR: Web Socket connection has not been established";
                var b = WebSocket.__flash.send(this.__id, encodeURIComponent(a));
                return 0 > b ? !0 : (this.bufferedAmount += b, !1)
            }, WebSocket.prototype.close = function() {
                this.readyState != WebSocket.CLOSED && this.readyState != WebSocket.CLOSING && (this.readyState = WebSocket.CLOSING, WebSocket.__flash.close(this.__id))
            }, WebSocket.prototype.addEventListener = function(a, b) {
                a in this.__events || (this.__events[a] = []), this.__events[a].push(b)
            }, WebSocket.prototype.removeEventListener = function(a, b) {
                if (a in this.__events)
                    for (var d = this.__events[a], e = d.length - 1; e >= 0; --e)
                        if (d[e] === b) {
                            d.splice(e, 1);
                            break
                        }
            }, WebSocket.prototype.dispatchEvent = function(a) {
                for (var b = this.__events[a.type] || [], c = 0; c < b.length; ++c) b[c](a);
                var d = this["on" + a.type];
                d && d(a)
            }, WebSocket.prototype.__handleEvent = function(a) {
                "readyState" in a && (this.readyState = a.readyState), "protocol" in a && (this.protocol = a.protocol);
                var b;
                if ("open" == a.type || "error" == a.type) b = this.__createSimpleEvent(a.type);
                else if ("close" == a.type) b = this.__createSimpleEvent("close");
                else {
                    if ("message" != a.type) throw "unknown event type: " + a.type;
                    var c = decodeURIComponent(a.message);
                    b = this.__createMessageEvent("message", c)
                }
                this.dispatchEvent(b)
            }, WebSocket.prototype.__createSimpleEvent = function(a) {
                if (document.createEvent && window.Event) {
                    var b = document.createEvent("Event");
                    return b.initEvent(a, !1, !1), b
                }
                return {
                    type: a,
                    bubbles: !1,
                    cancelable: !1
                }
            }, WebSocket.prototype.__createMessageEvent = function(a, b) {
                if (document.createEvent && window.MessageEvent && !window.opera) {
                    var c = document.createEvent("MessageEvent");
                    return c.initMessageEvent("message", !1, !1, b, null, null, window, null), c
                }
                return {
                    type: a,
                    data: b,
                    bubbles: !1,
                    cancelable: !1
                }
            }, WebSocket.CONNECTING = 0, WebSocket.OPEN = 1, WebSocket.CLOSING = 2, WebSocket.CLOSED = 3, WebSocket.__flash = null, WebSocket.__instances = {}, WebSocket.__tasks = [], WebSocket.__nextId = 0, WebSocket.loadFlashPolicyFile = function(a) {
                WebSocket.__addTask(function() {
                    WebSocket.__flash.loadManualPolicyFile(a)
                })
            }, WebSocket.__initialize = function() {
                if (!WebSocket.__flash) {
                    if (WebSocket.__swfLocation && (window.WEB_SOCKET_SWF_LOCATION = WebSocket.__swfLocation), !window.WEB_SOCKET_SWF_LOCATION) return void a.error("[WebSocket] set WEB_SOCKET_SWF_LOCATION to location of WebSocketMain.swf");
                    var b = document.createElement("div");
                    b.id = "webSocketContainer", b.style.position = "absolute", WebSocket.__isFlashLite() ? (b.style.left = "0px", b.style.top = "0px") : (b.style.left = "-100px", b.style.top = "-100px");
                    var c = document.createElement("div");
                    c.id = "webSocketFlash", b.appendChild(c), document.body.appendChild(b), swfobject.embedSWF(WEB_SOCKET_SWF_LOCATION, "webSocketFlash", "1", "1", "10.0.0", null, null, {
                        hasPriority: !0,
                        swliveconnect: !0,
                        allowScriptAccess: "always"
                    }, null, function(b) {
                        b.success || a.error("[WebSocket] swfobject.embedSWF failed")
                    })
                }
            }, WebSocket.__onFlashInitialized = function() {
                setTimeout(function() {
                    WebSocket.__flash = document.getElementById("webSocketFlash"), WebSocket.__flash.setCallerUrl(location.href), WebSocket.__flash.setDebug(!!window.WEB_SOCKET_DEBUG);
                    for (var a = 0; a < WebSocket.__tasks.length; ++a) WebSocket.__tasks[a]();
                    WebSocket.__tasks = []
                }, 0)
            }, WebSocket.__onFlashEvent = function() {
                return setTimeout(function() {
                    try {
                        for (var b = WebSocket.__flash.receiveEvents(), c = 0; c < b.length; ++c) WebSocket.__instances[b[c].webSocketId].__handleEvent(b[c])
                    } catch (d) {
                        a.error(d)
                    }
                }, 0), !0
            }, WebSocket.__log = function(b) {
                a.log(decodeURIComponent(b))
            }, WebSocket.__error = function(b) {
                a.error(decodeURIComponent(b))
            }, WebSocket.__addTask = function(a) {
                WebSocket.__flash ? a() : WebSocket.__tasks.push(a)
            }, WebSocket.__isFlashLite = function() {
                if (!window.navigator || !window.navigator.mimeTypes) return !1;
                var a = window.navigator.mimeTypes["application/x-shockwave-flash"];
                return a && a.enabledPlugin && a.enabledPlugin.filename && a.enabledPlugin.filename.match(/flashlite/i) ? !0 : !1
            }, window.WEB_SOCKET_DISABLE_AUTO_INITIALIZATION || (window.addEventListener ? window.addEventListener("load", function() {
                WebSocket.__initialize()
            }, !1) : window.attachEvent("onload", function() {
                WebSocket.__initialize()
            })), void 0) : void a.error("Flash Player >= 10.0.0 is required.")
        }
    }(),
    function(a, b, c) {
        function d(a) {
            a && (b.Transport.apply(this, arguments), this.sendBuffer = [])
        }

        function e() {}
        a.XHR = d, b.util.inherit(d, b.Transport), d.prototype.open = function() {
            return this.socket.setBuffer(!1), this.onOpen(), this.get(), this.setCloseTimeout(), this
        }, d.prototype.payload = function(a) {
            for (var c = [], d = 0, e = a.length; e > d; d++) c.push(b.parser.encodePacket(a[d]));
            this.send(b.parser.encodePayload(c))
        }, d.prototype.send = function(a) {
            return this.post(a), this
        }, d.prototype.post = function(a) {
            function d() {
                4 == this.readyState && (this.onreadystatechange = e, b.posting = !1, 200 == this.status ? b.socket.setBuffer(!1) : b.onClose())
            }

            function f() {
                this.onload = e, b.socket.setBuffer(!1)
            }
            var b = this;
            this.socket.setBuffer(!0), this.sendXHR = this.request("POST"), c.XDomainRequest && this.sendXHR instanceof XDomainRequest ? this.sendXHR.onload = this.sendXHR.onerror = f : this.sendXHR.onreadystatechange = d, this.sendXHR.send(a)
        }, d.prototype.close = function() {
            return this.onClose(), this
        }, d.prototype.request = function(a) {
            var c = b.util.request(this.socket.isXDomain()),
                d = b.util.query(this.socket.options.query, "t=" + +new Date);
            if (c.open(a || "GET", this.prepareUrl() + d, !0), "POST" == a) try {
                c.setRequestHeader ? c.setRequestHeader("Content-type", "text/plain;charset=UTF-8") : c.contentType = "text/plain"
            } catch (e) {}
            return c
        }, d.prototype.scheme = function() {
            return this.socket.options.secure ? "https" : "http"
        }, d.check = function(a, d) {
            try {
                var e = b.util.request(d),
                    f = c.XDomainRequest && e instanceof XDomainRequest,
                    g = a && a.options && a.options.secure ? "https:" : "http:",
                    h = c.location && g != c.location.protocol;
                if (e && (!f || !h)) return !0
            } catch (i) {}
            return !1
        }, d.xdomainCheck = function(a) {
            return d.check(a, !0)
        }
    }("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports, this),
    function(a, b) {
        function c() {
            b.Transport.XHR.apply(this, arguments)
        }
        a.htmlfile = c, b.util.inherit(c, b.Transport.XHR), c.prototype.name = "htmlfile", c.prototype.get = function() {
            this.doc = new(window[["Active"].concat("Object").join("X")])("htmlfile"), this.doc.open(), this.doc.write("<html></html>"), this.doc.close(), this.doc.parentWindow.s = this;
            var a = this.doc.createElement("div");
            a.className = "socketio", this.doc.body.appendChild(a), this.iframe = this.doc.createElement("iframe"), a.appendChild(this.iframe);
            var c = this,
                d = b.util.query(this.socket.options.query, "t=" + +new Date);
            this.iframe.src = this.prepareUrl() + d, b.util.on(window, "unload", function() {
                c.destroy()
            })
        }, c.prototype._ = function(a, b) {
            a = a.replace(/\\\//g, "/"), this.onData(a);
            try {
                var c = b.getElementsByTagName("script")[0];
                c.parentNode.removeChild(c)
            } catch (d) {}
        }, c.prototype.destroy = function() {
            if (this.iframe) {
                try {
                    this.iframe.src = "about:blank"
                } catch (a) {}
                this.doc = null, this.iframe.parentNode.removeChild(this.iframe), this.iframe = null, CollectGarbage()
            }
        }, c.prototype.close = function() {
            return this.destroy(), b.Transport.XHR.prototype.close.call(this)
        }, c.check = function(a) {
            if ("undefined" != typeof window && ["Active"].concat("Object").join("X") in window) try {
                var c = new(window[["Active"].concat("Object").join("X")])("htmlfile");
                return c && b.Transport.XHR.check(a)
            } catch (d) {}
            return !1
        }, c.xdomainCheck = function() {
            return !1
        }, b.transports.push("htmlfile")
    }("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports),
    function(a, b, c) {
        function d() {
            b.Transport.XHR.apply(this, arguments)
        }

        function e() {}
        a["xhr-polling"] = d, b.util.inherit(d, b.Transport.XHR), b.util.merge(d, b.Transport.XHR), d.prototype.name = "xhr-polling", d.prototype.heartbeats = function() {
            return !1
        }, d.prototype.open = function() {
            var a = this;
            return b.Transport.XHR.prototype.open.call(a), !1
        }, d.prototype.get = function() {
            function b() {
                4 == this.readyState && (this.onreadystatechange = e, 200 == this.status ? (a.onData(this.responseText), a.get()) : a.onClose())
            }

            function d() {
                this.onload = e, this.onerror = e, a.retryCounter = 1, a.onData(this.responseText), a.get()
            }

            function f() {
                a.retryCounter++, !a.retryCounter || a.retryCounter > 3 ? a.onClose() : a.get()
            }
            if (this.isOpen) {
                var a = this;
                this.xhr = this.request(), c.XDomainRequest && this.xhr instanceof XDomainRequest ? (this.xhr.onload = d, this.xhr.onerror = f) : this.xhr.onreadystatechange = b, this.xhr.send(null)
            }
        }, d.prototype.onClose = function() {
            if (b.Transport.XHR.prototype.onClose.call(this), this.xhr) {
                this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = e;
                try {
                    this.xhr.abort()
                } catch (a) {}
                this.xhr = null
            }
        }, d.prototype.ready = function(a, c) {
            var d = this;
            b.util.defer(function() {
                c.call(d)
            })
        }, b.transports.push("xhr-polling")
    }("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports, this),
    function(a, b, c) {
        function e() {
            b.Transport["xhr-polling"].apply(this, arguments), this.index = b.j.length;
            var c = this;
            b.j.push(function(a) {
                c._(a)
            })
        }
        var d = c.document && "MozAppearance" in c.document.documentElement.style;
        a["jsonp-polling"] = e, b.util.inherit(e, b.Transport["xhr-polling"]), e.prototype.name = "jsonp-polling", e.prototype.post = function(a) {
            function i() {
                j(), c.socket.setBuffer(!1)
            }

            function j() {
                c.iframe && c.form.removeChild(c.iframe);
                try {
                    h = document.createElement('<iframe name="' + c.iframeId + '">')
                } catch (a) {
                    h = document.createElement("iframe"), h.name = c.iframeId
                }
                h.id = c.iframeId, c.form.appendChild(h), c.iframe = h
            }
            var c = this,
                d = b.util.query(this.socket.options.query, "t=" + +new Date + "&i=" + this.index);
            if (!this.form) {
                var h, e = document.createElement("form"),
                    f = document.createElement("textarea"),
                    g = this.iframeId = "socketio_iframe_" + this.index;
                e.className = "socketio", e.style.position = "absolute", e.style.top = "0px", e.style.left = "0px", e.style.display = "none", e.target = g, e.method = "POST", e.setAttribute("accept-charset", "utf-8"), f.name = "d", e.appendChild(f), document.body.appendChild(e), this.form = e, this.area = f
            }
            this.form.action = this.prepareUrl() + d, j(), this.area.value = b.JSON.stringify(a);
            try {
                this.form.submit()
            } catch (k) {}
            this.iframe.attachEvent ? h.onreadystatechange = function() {
                "complete" == c.iframe.readyState && i()
            } : this.iframe.onload = i, this.socket.setBuffer(!0)
        }, e.prototype.get = function() {
            var a = this,
                c = document.createElement("script"),
                e = b.util.query(this.socket.options.query, "t=" + +new Date + "&i=" + this.index);
            this.script && (this.script.parentNode.removeChild(this.script), this.script = null), c.async = !0, c.src = this.prepareUrl() + e, c.onerror = function() {
                a.onClose()
            };
            var f = document.getElementsByTagName("script")[0];
            f.parentNode.insertBefore(c, f), this.script = c, d && setTimeout(function() {
                var a = document.createElement("iframe");
                document.body.appendChild(a), document.body.removeChild(a)
            }, 100)
        }, e.prototype._ = function(a) {
            return this.onData(a), this.isOpen && this.get(), this
        }, e.prototype.ready = function(a, c) {
            var e = this;
            return d ? void b.util.load(function() {
                c.call(e)
            }) : c.call(this)
        }, e.check = function() {
            return "document" in c
        }, e.xdomainCheck = function() {
            return !0
        }, b.transports.push("jsonp-polling")
    }("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports, this), "function" == typeof define && define.amd && define([], function() {
        return io
    })
}(), angular.module("monospaced.elastic", []).constant("msdElasticConfig", {
        append: ""
    }).directive("msdElastic", ["$timeout", "$window", "msdElasticConfig", function($timeout, $window, config) {
        "use strict";
        return {
            require: "ngModel",
            restrict: "A, C",
            link: function(scope, element, attrs, ngModel) {
                function initMirror() {
                    var mirrorStyle = mirrorInitStyle;
                    mirrored = ta, taStyle = getComputedStyle(ta), angular.forEach(copyStyle, function(val) {
                        mirrorStyle += val + ":" + taStyle.getPropertyValue(val) + ";"
                    }), mirror.setAttribute("style", mirrorStyle)
                }

                function adjust() {
                    var taHeight, taComputedStyleWidth, mirrorHeight, width, overflow;
                    mirrored !== ta && initMirror(), active || (active = !0, mirror.value = ta.value + append, mirror.style.overflowY = ta.style.overflowY, taHeight = "" === ta.style.height ? "auto" : parseInt(ta.style.height, 10), taComputedStyleWidth = getComputedStyle(ta).getPropertyValue("width"), "px" === taComputedStyleWidth.substr(taComputedStyleWidth.length - 2, 2) && (width = parseInt(taComputedStyleWidth, 10) - boxOuter.width, mirror.style.width = width + "px"), mirrorHeight = mirror.scrollHeight, mirrorHeight > maxHeight ? (mirrorHeight = maxHeight, overflow = "scroll") : minHeight > mirrorHeight && (mirrorHeight = minHeight), mirrorHeight += boxOuter.height, ta.style.overflowY = overflow || "hidden", taHeight !== mirrorHeight && (ta.style.height = mirrorHeight + "px", scope.$emit("elastic:resize", $ta)), $timeout(function() {
                        active = !1
                    }, 1))
                }

                function forceAdjust() {
                    active = !1, adjust()
                }
                var ta = element[0],
                    $ta = element;
                if ("TEXTAREA" === ta.nodeName && $window.getComputedStyle) {
                    $ta.css({
                        overflow: "hidden",
                        "overflow-y": "hidden",
                        "word-wrap": "break-word"
                    });
                    var text = ta.value;
                    ta.value = "", ta.value = text;
                    var mirrored, active, append = attrs.msdElastic ? attrs.msdElastic.replace(/\\n/g, "\n") : config.append,
                        $win = angular.element($window),
                        mirrorInitStyle = "position: absolute; top: -999px; right: auto; bottom: auto;left: 0; overflow: hidden; -webkit-box-sizing: content-box;-moz-box-sizing: content-box; box-sizing: content-box;min-height: 0 !important; height: 0 !important; padding: 0;word-wrap: break-word; border: 0;",
                        $mirror = angular.element('<textarea tabindex="-1" style="' + mirrorInitStyle + '"/>').data("elastic", !0),
                        mirror = $mirror[0],
                        taStyle = getComputedStyle(ta),
                        resize = taStyle.getPropertyValue("resize"),
                        borderBox = "border-box" === taStyle.getPropertyValue("box-sizing") || "border-box" === taStyle.getPropertyValue("-moz-box-sizing") || "border-box" === taStyle.getPropertyValue("-webkit-box-sizing"),
                        boxOuter = borderBox ? {
                            width: parseInt(taStyle.getPropertyValue("border-right-width"), 10) + parseInt(taStyle.getPropertyValue("padding-right"), 10) + parseInt(taStyle.getPropertyValue("padding-left"), 10) + parseInt(taStyle.getPropertyValue("border-left-width"), 10),
                            height: parseInt(taStyle.getPropertyValue("border-top-width"), 10) + parseInt(taStyle.getPropertyValue("padding-top"), 10) + parseInt(taStyle.getPropertyValue("padding-bottom"), 10) + parseInt(taStyle.getPropertyValue("border-bottom-width"), 10)
                        } : {
                            width: 0,
                            height: 0
                        },
                        minHeightValue = parseInt(taStyle.getPropertyValue("min-height"), 10),
                        heightValue = parseInt(taStyle.getPropertyValue("height"), 10),
                        minHeight = Math.max(minHeightValue, heightValue) - boxOuter.height,
                        maxHeight = parseInt(taStyle.getPropertyValue("max-height"), 10),
                        copyStyle = ["font-family", "font-size", "font-weight", "font-style", "letter-spacing", "line-height", "text-transform", "word-spacing", "text-indent"];
                    $ta.data("elastic") || (maxHeight = maxHeight && maxHeight > 0 ? maxHeight : 9e4, mirror.parentNode !== document.body && angular.element(document.body).append(mirror), $ta.css({
                        resize: "none" === resize || "vertical" === resize ? "none" : "horizontal"
                    }).data("elastic", !0), ta.oninput = "onpropertychange" in ta && "oninput" in ta ? ta.onkeyup = adjust : adjust, $win.bind("resize", forceAdjust), scope.$watch(function() {
                        return ngModel.$modelValue
                    }, function() {
                        forceAdjust()
                    }), scope.$on("elastic:adjust", function() {
                        initMirror(), forceAdjust()
                    }), $timeout(adjust), scope.$on("$destroy", function() {
                        $mirror.remove(), $win.unbind("resize", forceAdjust)
                    }))
                }
            }
        }
    }]),
    function(e) {
        var t = {
            set: {
                colors: 1,
                values: 1,
                backgroundColor: 1,
                scaleColors: 1,
                normalizeFunction: 1,
                focus: 1
            },
            get: {
                selectedRegions: 1,
                selectedMarkers: 1,
                mapObject: 1,
                regionName: 1
            }
        };
        e.fn.vectorMap = function(e) {
            var n, r, n = this.children(".jvectormap-container").data("mapObject");
            if ("addMap" === e) jvm.WorldMap.maps[arguments[1]] = arguments[2];
            else {
                if (("set" === e || "get" === e) && t[e][arguments[1]]) return r = arguments[1].charAt(0).toUpperCase() + arguments[1].substr(1), n[e + r].apply(n, Array.prototype.slice.call(arguments, 2));
                e = e || {}, e.container = this, n = new jvm.WorldMap(e)
            }
            return this
        }
    }(jQuery),
    function(e) {
        function r(t) {
            var n = t || window.event,
                r = [].slice.call(arguments, 1),
                i = 0,
                o = 0,
                u = 0;
            return t = e.event.fix(n), t.type = "mousewheel", n.wheelDelta && (i = n.wheelDelta / 120), n.detail && (i = -n.detail / 3), u = i, void 0 !== n.axis && n.axis === n.HORIZONTAL_AXIS && (u = 0, o = -1 * i), void 0 !== n.wheelDeltaY && (u = n.wheelDeltaY / 120), void 0 !== n.wheelDeltaX && (o = -1 * n.wheelDeltaX / 120), r.unshift(t, i, o, u), (e.event.dispatch || e.event.handle).apply(this, r)
        }
        var t = ["DOMMouseScroll", "mousewheel"];
        if (e.event.fixHooks)
            for (var n = t.length; n;) e.event.fixHooks[t[--n]] = e.event.mouseHooks;
        e.event.special.mousewheel = {
            setup: function() {
                if (this.addEventListener)
                    for (var e = t.length; e;) this.addEventListener(t[--e], r, !1);
                else this.onmousewheel = r
            },
            teardown: function() {
                if (this.removeEventListener)
                    for (var e = t.length; e;) this.removeEventListener(t[--e], r, !1);
                else this.onmousewheel = null
            }
        }, e.fn.extend({
            mousewheel: function(e) {
                return e ? this.bind("mousewheel", e) : this.trigger("mousewheel")
            },
            unmousewheel: function(e) {
                return this.unbind("mousewheel", e)
            }
        })
    }(jQuery);
var jvm = {
    inherits: function(e, t) {
        function n() {}
        n.prototype = t.prototype, e.prototype = new n, e.prototype.constructor = e, e.parentClass = t
    },
    mixin: function(e, t) {
        var n;
        for (n in t.prototype) t.prototype.hasOwnProperty(n) && (e.prototype[n] = t.prototype[n])
    },
    min: function(e) {
        var n, t = Number.MAX_VALUE;
        if (e instanceof Array)
            for (n = 0; n < e.length; n++) e[n] < t && (t = e[n]);
        else
            for (n in e) e[n] < t && (t = e[n]);
        return t
    },
    max: function(e) {
        var n, t = Number.MIN_VALUE;
        if (e instanceof Array)
            for (n = 0; n < e.length; n++) e[n] > t && (t = e[n]);
        else
            for (n in e) e[n] > t && (t = e[n]);
        return t
    },
    keys: function(e) {
        var n, t = [];
        for (n in e) t.push(n);
        return t
    },
    values: function(e) {
        var n, r, t = [];
        for (r = 0; r < arguments.length; r++) {
            e = arguments[r];
            for (n in e) t.push(e[n])
        }
        return t
    }
};
jvm.$ = jQuery, jvm.AbstractElement = function(e, t) {
        this.node = this.createElement(e), this.name = e, this.properties = {}, t && this.set(t)
    }, jvm.AbstractElement.prototype.set = function(e, t) {
        var n;
        if ("object" == typeof e)
            for (n in e) this.properties[n] = e[n], this.applyAttr(n, e[n]);
        else this.properties[e] = t, this.applyAttr(e, t)
    }, jvm.AbstractElement.prototype.get = function(e) {
        return this.properties[e]
    }, jvm.AbstractElement.prototype.applyAttr = function(e, t) {
        this.node.setAttribute(e, t)
    }, jvm.AbstractElement.prototype.remove = function() {
        jvm.$(this.node).remove()
    }, jvm.AbstractCanvasElement = function(e, t, n) {
        this.container = e, this.setSize(t, n), this.rootElement = new jvm[this.classPrefix + "GroupElement"], this.node.appendChild(this.rootElement.node), this.container.appendChild(this.node)
    }, jvm.AbstractCanvasElement.prototype.add = function(e, t) {
        t = t || this.rootElement, t.add(e), e.canvas = this
    }, jvm.AbstractCanvasElement.prototype.addPath = function(e, t, n) {
        var r = new jvm[this.classPrefix + "PathElement"](e, t);
        return this.add(r, n), r
    }, jvm.AbstractCanvasElement.prototype.addCircle = function(e, t, n) {
        var r = new jvm[this.classPrefix + "CircleElement"](e, t);
        return this.add(r, n), r
    }, jvm.AbstractCanvasElement.prototype.addGroup = function(e) {
        var t = new jvm[this.classPrefix + "GroupElement"];
        return e ? e.node.appendChild(t.node) : this.node.appendChild(t.node), t.canvas = this, t
    }, jvm.AbstractShapeElement = function(e, t, n) {
        this.style = n || {}, this.style.current = {}, this.isHovered = !1, this.isSelected = !1, this.updateStyle()
    }, jvm.AbstractShapeElement.prototype.setHovered = function(e) {
        this.isHovered !== e && (this.isHovered = e, this.updateStyle())
    }, jvm.AbstractShapeElement.prototype.setSelected = function(e) {
        this.isSelected !== e && (this.isSelected = e, this.updateStyle(), jvm.$(this.node).trigger("selected", [e]))
    }, jvm.AbstractShapeElement.prototype.setStyle = function(e, t) {
        var n = {};
        "object" == typeof e ? n = e : n[e] = t, jvm.$.extend(this.style.current, n), this.updateStyle()
    }, jvm.AbstractShapeElement.prototype.updateStyle = function() {
        var e = {};
        jvm.AbstractShapeElement.mergeStyles(e, this.style.initial), jvm.AbstractShapeElement.mergeStyles(e, this.style.current), this.isHovered && jvm.AbstractShapeElement.mergeStyles(e, this.style.hover), this.isSelected && (jvm.AbstractShapeElement.mergeStyles(e, this.style.selected), this.isHovered && jvm.AbstractShapeElement.mergeStyles(e, this.style.selectedHover)), this.set(e)
    }, jvm.AbstractShapeElement.mergeStyles = function(e, t) {
        var n;
        t = t || {};
        for (n in t) null === t[n] ? delete e[n] : e[n] = t[n]
    }, jvm.SVGElement = function() {
        jvm.SVGElement.parentClass.apply(this, arguments)
    }, jvm.inherits(jvm.SVGElement, jvm.AbstractElement), jvm.SVGElement.svgns = "http://www.w3.org/2000/svg", jvm.SVGElement.prototype.createElement = function(e) {
        return document.createElementNS(jvm.SVGElement.svgns, e)
    }, jvm.SVGElement.prototype.addClass = function(e) {
        this.node.setAttribute("class", e)
    }, jvm.SVGElement.prototype.getElementCtr = function(e) {
        return jvm["SVG" + e]
    }, jvm.SVGElement.prototype.getBBox = function() {
        return this.node.getBBox()
    }, jvm.SVGGroupElement = function() {
        jvm.SVGGroupElement.parentClass.call(this, "g")
    }, jvm.inherits(jvm.SVGGroupElement, jvm.SVGElement), jvm.SVGGroupElement.prototype.add = function(e) {
        this.node.appendChild(e.node)
    }, jvm.SVGCanvasElement = function() {
        this.classPrefix = "SVG", jvm.SVGCanvasElement.parentClass.call(this, "svg"), jvm.AbstractCanvasElement.apply(this, arguments)
    }, jvm.inherits(jvm.SVGCanvasElement, jvm.SVGElement), jvm.mixin(jvm.SVGCanvasElement, jvm.AbstractCanvasElement), jvm.SVGCanvasElement.prototype.setSize = function(e, t) {
        this.width = e, this.height = t, this.node.setAttribute("width", e), this.node.setAttribute("height", t)
    }, jvm.SVGCanvasElement.prototype.applyTransformParams = function(e, t, n) {
        this.scale = e, this.transX = t, this.transY = n, this.rootElement.node.setAttribute("transform", "scale(" + e + ") translate(" + t + ", " + n + ")")
    }, jvm.SVGShapeElement = function(e, t) {
        jvm.SVGShapeElement.parentClass.call(this, e, t), jvm.AbstractShapeElement.apply(this, arguments)
    }, jvm.inherits(jvm.SVGShapeElement, jvm.SVGElement), jvm.mixin(jvm.SVGShapeElement, jvm.AbstractShapeElement), jvm.SVGPathElement = function(e, t) {
        jvm.SVGPathElement.parentClass.call(this, "path", e, t), this.node.setAttribute("fill-rule", "evenodd")
    }, jvm.inherits(jvm.SVGPathElement, jvm.SVGShapeElement), jvm.SVGCircleElement = function(e, t) {
        jvm.SVGCircleElement.parentClass.call(this, "circle", e, t)
    }, jvm.inherits(jvm.SVGCircleElement, jvm.SVGShapeElement), jvm.VMLElement = function() {
        jvm.VMLElement.VMLInitialized || jvm.VMLElement.initializeVML(), jvm.VMLElement.parentClass.apply(this, arguments)
    }, jvm.inherits(jvm.VMLElement, jvm.AbstractElement), jvm.VMLElement.VMLInitialized = !1, jvm.VMLElement.initializeVML = function() {
        try {
            document.namespaces.rvml || document.namespaces.add("rvml", "urn:schemas-microsoft-com:vml"), jvm.VMLElement.prototype.createElement = function(e) {
                return document.createElement("<rvml:" + e + ' class="rvml">')
            }
        } catch (e) {
            jvm.VMLElement.prototype.createElement = function(e) {
                return document.createElement("<" + e + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')
            }
        }
        document.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)"), jvm.VMLElement.VMLInitialized = !0
    }, jvm.VMLElement.prototype.getElementCtr = function(e) {
        return jvm["VML" + e]
    }, jvm.VMLElement.prototype.addClass = function(e) {
        jvm.$(this.node).addClass(e)
    }, jvm.VMLElement.prototype.applyAttr = function(e, t) {
        this.node[e] = t
    }, jvm.VMLElement.prototype.getBBox = function() {
        var e = jvm.$(this.node);
        return {
            x: e.position().left / this.canvas.scale,
            y: e.position().top / this.canvas.scale,
            width: e.width() / this.canvas.scale,
            height: e.height() / this.canvas.scale
        }
    }, jvm.VMLGroupElement = function() {
        jvm.VMLGroupElement.parentClass.call(this, "group"), this.node.style.left = "0px", this.node.style.top = "0px", this.node.coordorigin = "0 0"
    }, jvm.inherits(jvm.VMLGroupElement, jvm.VMLElement), jvm.VMLGroupElement.prototype.add = function(e) {
        this.node.appendChild(e.node)
    }, jvm.VMLCanvasElement = function() {
        this.classPrefix = "VML", jvm.VMLCanvasElement.parentClass.call(this, "group"), jvm.AbstractCanvasElement.apply(this, arguments), this.node.style.position = "absolute"
    }, jvm.inherits(jvm.VMLCanvasElement, jvm.VMLElement), jvm.mixin(jvm.VMLCanvasElement, jvm.AbstractCanvasElement), jvm.VMLCanvasElement.prototype.setSize = function(e, t) {
        var n, r, i, s;
        if (this.width = e, this.height = t, this.node.style.width = e + "px", this.node.style.height = t + "px", this.node.coordsize = e + " " + t, this.node.coordorigin = "0 0", this.rootElement) {
            for (n = this.rootElement.node.getElementsByTagName("shape"), i = 0, s = n.length; s > i; i++) n[i].coordsize = e + " " + t, n[i].style.width = e + "px", n[i].style.height = t + "px";
            for (r = this.node.getElementsByTagName("group"), i = 0, s = r.length; s > i; i++) r[i].coordsize = e + " " + t, r[i].style.width = e + "px", r[i].style.height = t + "px"
        }
    }, jvm.VMLCanvasElement.prototype.applyTransformParams = function(e, t, n) {
        this.scale = e, this.transX = t, this.transY = n, this.rootElement.node.coordorigin = this.width - t - this.width / 100 + "," + (this.height - n - this.height / 100), this.rootElement.node.coordsize = this.width / e + "," + this.height / e
    }, jvm.VMLShapeElement = function(e, t) {
        jvm.VMLShapeElement.parentClass.call(this, e, t), this.fillElement = new jvm.VMLElement("fill"), this.strokeElement = new jvm.VMLElement("stroke"), this.node.appendChild(this.fillElement.node), this.node.appendChild(this.strokeElement.node), this.node.stroked = !1, jvm.AbstractShapeElement.apply(this, arguments)
    }, jvm.inherits(jvm.VMLShapeElement, jvm.VMLElement), jvm.mixin(jvm.VMLShapeElement, jvm.AbstractShapeElement), jvm.VMLShapeElement.prototype.applyAttr = function(e, t) {
        switch (e) {
            case "fill":
                this.node.fillcolor = t;
                break;
            case "fill-opacity":
                this.fillElement.node.opacity = Math.round(100 * t) + "%";
                break;
            case "stroke":
                this.node.stroked = "none" === t ? !1 : !0, this.node.strokecolor = t;
                break;
            case "stroke-opacity":
                this.strokeElement.node.opacity = Math.round(100 * t) + "%";
                break;
            case "stroke-width":
                this.node.stroked = 0 === parseInt(t, 10) ? !1 : !0, this.node.strokeweight = t;
                break;
            case "d":
                this.node.path = jvm.VMLPathElement.pathSvgToVml(t);
                break;
            default:
                jvm.VMLShapeElement.parentClass.prototype.applyAttr.apply(this, arguments)
        }
    }, jvm.VMLPathElement = function(e, t) {
        var n = new jvm.VMLElement("skew");
        jvm.VMLPathElement.parentClass.call(this, "shape", e, t), this.node.coordorigin = "0 0", n.node.on = !0, n.node.matrix = "0.01,0,0,0.01,0,0", n.node.offset = "0,0", this.node.appendChild(n.node)
    }, jvm.inherits(jvm.VMLPathElement, jvm.VMLShapeElement), jvm.VMLPathElement.prototype.applyAttr = function(e, t) {
        "d" === e ? this.node.path = jvm.VMLPathElement.pathSvgToVml(t) : jvm.VMLShapeElement.prototype.applyAttr.call(this, e, t)
    }, jvm.VMLPathElement.pathSvgToVml = function(e) {
        var i, s, n = 0,
            r = 0;
        return e = e.replace(/(-?\d+)e(-?\d+)/g, "0"), e.replace(/([MmLlHhVvCcSs])\s*((?:-?\d*(?:\.\d+)?\s*,?\s*)+)/g, function(e, t, o) {
            o = o.replace(/(\d)-/g, "$1,-").replace(/^\s+/g, "").replace(/\s+$/g, "").replace(/\s+/g, ",").split(","), o[0] || o.shift();
            for (var a = 0, f = o.length; f > a; a++) o[a] = Math.round(100 * o[a]);
            switch (t) {
                case "m":
                    return n += o[0], r += o[1], "t" + o.join(",");
                case "M":
                    return n = o[0], r = o[1], "m" + o.join(",");
                case "l":
                    return n += o[0], r += o[1], "r" + o.join(",");
                case "L":
                    return n = o[0], r = o[1], "l" + o.join(",");
                case "h":
                    return n += o[0], "r" + o[0] + ",0";
                case "H":
                    return n = o[0], "l" + n + "," + r;
                case "v":
                    return r += o[0], "r0," + o[0];
                case "V":
                    return r = o[0], "l" + n + "," + r;
                case "c":
                    return i = n + o[o.length - 4], s = r + o[o.length - 3], n += o[o.length - 2], r += o[o.length - 1], "v" + o.join(",");
                case "C":
                    return i = o[o.length - 4], s = o[o.length - 3], n = o[o.length - 2], r = o[o.length - 1], "c" + o.join(",");
                case "s":
                    return o.unshift(r - s), o.unshift(n - i), i = n + o[o.length - 4], s = r + o[o.length - 3], n += o[o.length - 2], r += o[o.length - 1], "v" + o.join(",");
                case "S":
                    return o.unshift(r + r - s), o.unshift(n + n - i), i = o[o.length - 4], s = o[o.length - 3], n = o[o.length - 2], r = o[o.length - 1], "c" + o.join(",")
            }
            return ""
        }).replace(/z/g, "e")
    }, jvm.VMLCircleElement = function(e, t) {
        jvm.VMLCircleElement.parentClass.call(this, "oval", e, t)
    }, jvm.inherits(jvm.VMLCircleElement, jvm.VMLShapeElement), jvm.VMLCircleElement.prototype.applyAttr = function(e, t) {
        switch (e) {
            case "r":
                this.node.style.width = 2 * t + "px", this.node.style.height = 2 * t + "px", this.applyAttr("cx", this.get("cx") || 0), this.applyAttr("cy", this.get("cy") || 0);
                break;
            case "cx":
                if (!t) return;
                this.node.style.left = t - (this.get("r") || 0) + "px";
                break;
            case "cy":
                if (!t) return;
                this.node.style.top = t - (this.get("r") || 0) + "px";
                break;
            default:
                jvm.VMLCircleElement.parentClass.prototype.applyAttr.call(this, e, t)
        }
    }, jvm.VectorCanvas = function(e, t, n) {
        return this.mode = window.SVGAngle ? "svg" : "vml", this.impl = "svg" == this.mode ? new jvm.SVGCanvasElement(e, t, n) : new jvm.VMLCanvasElement(e, t, n), this.impl
    }, jvm.SimpleScale = function(e) {
        this.scale = e
    }, jvm.SimpleScale.prototype.getValue = function(e) {
        return e
    }, jvm.OrdinalScale = function(e) {
        this.scale = e
    }, jvm.OrdinalScale.prototype.getValue = function(e) {
        return this.scale[e]
    }, jvm.NumericScale = function(e, t, n, r) {
        this.scale = [], t = t || "linear", e && this.setScale(e), t && this.setNormalizeFunction(t), n && this.setMin(n), r && this.setMax(r)
    }, jvm.NumericScale.prototype = {
        setMin: function(e) {
            this.clearMinValue = e, this.minValue = "function" == typeof this.normalize ? this.normalize(e) : e
        },
        setMax: function(e) {
            this.clearMaxValue = e, this.maxValue = "function" == typeof this.normalize ? this.normalize(e) : e
        },
        setScale: function(e) {
            var t;
            for (t = 0; t < e.length; t++) this.scale[t] = [e[t]]
        },
        setNormalizeFunction: function(e) {
            "polynomial" === e ? this.normalize = function(e) {
                return Math.pow(e, .2)
            } : "linear" === e ? delete this.normalize : this.normalize = e, this.setMin(this.clearMinValue), this.setMax(this.clearMaxValue)
        },
        getValue: function(e) {
            var r, s, t = [],
                n = 0,
                i = 0;
            for ("function" == typeof this.normalize && (e = this.normalize(e)), i = 0; i < this.scale.length - 1; i++) r = this.vectorLength(this.vectorSubtract(this.scale[i + 1], this.scale[i])), t.push(r), n += r;
            for (s = (this.maxValue - this.minValue) / n, i = 0; i < t.length; i++) t[i] *= s;
            for (i = 0, e -= this.minValue; e - t[i] >= 0;) e -= t[i], i++;
            return e = this.vectorToNum(i == this.scale.length - 1 ? this.scale[i] : this.vectorAdd(this.scale[i], this.vectorMult(this.vectorSubtract(this.scale[i + 1], this.scale[i]), e / t[i])))
        },
        vectorToNum: function(e) {
            var n, t = 0;
            for (n = 0; n < e.length; n++) t += Math.round(e[n]) * Math.pow(256, e.length - n - 1);
            return t
        },
        vectorSubtract: function(e, t) {
            var r, n = [];
            for (r = 0; r < e.length; r++) n[r] = e[r] - t[r];
            return n
        },
        vectorAdd: function(e, t) {
            var r, n = [];
            for (r = 0; r < e.length; r++) n[r] = e[r] + t[r];
            return n
        },
        vectorMult: function(e, t) {
            var r, n = [];
            for (r = 0; r < e.length; r++) n[r] = e[r] * t;
            return n
        },
        vectorLength: function(e) {
            var n, t = 0;
            for (n = 0; n < e.length; n++) t += e[n] * e[n];
            return Math.sqrt(t)
        }
    }, jvm.ColorScale = function() {
        jvm.ColorScale.parentClass.apply(this, arguments)
    }, jvm.inherits(jvm.ColorScale, jvm.NumericScale), jvm.ColorScale.prototype.setScale = function(e) {
        var t;
        for (t = 0; t < e.length; t++) this.scale[t] = jvm.ColorScale.rgbToArray(e[t])
    }, jvm.ColorScale.prototype.getValue = function(e) {
        return jvm.ColorScale.numToRgb(jvm.ColorScale.parentClass.prototype.getValue.call(this, e))
    }, jvm.ColorScale.arrayToRgb = function(e) {
        var n, r, t = "#";
        for (r = 0; r < e.length; r++) n = e[r].toString(16), t += 1 == n.length ? "0" + n : n;
        return t
    }, jvm.ColorScale.numToRgb = function(e) {
        for (e = e.toString(16); e.length < 6;) e = "0" + e;
        return "#" + e
    }, jvm.ColorScale.rgbToArray = function(e) {
        return e = e.substr(1), [parseInt(e.substr(0, 2), 16), parseInt(e.substr(2, 2), 16), parseInt(e.substr(4, 2), 16)]
    }, jvm.DataSeries = function(e, t) {
        var n;
        e = e || {}, e.attribute = e.attribute || "fill", this.elements = t, this.params = e, e.attributes && this.setAttributes(e.attributes), jvm.$.isArray(e.scale) ? (n = "fill" === e.attribute || "stroke" === e.attribute ? jvm.ColorScale : jvm.NumericScale, this.scale = new n(e.scale, e.normalizeFunction, e.min, e.max)) : this.scale = e.scale ? new jvm.OrdinalScale(e.scale) : new jvm.SimpleScale(e.scale), this.values = e.values || {}, this.setValues(this.values)
    }, jvm.DataSeries.prototype = {
        setAttributes: function(e, t) {
            var r, n = e;
            if ("string" == typeof e) this.elements[e] && this.elements[e].setStyle(this.params.attribute, t);
            else
                for (r in n) this.elements[r] && this.elements[r].element.setStyle(this.params.attribute, n[r])
        },
        setValues: function(e) {
            var r, i, t = Number.MIN_VALUE,
                n = Number.MAX_VALUE,
                s = {};
            if (this.scale instanceof jvm.OrdinalScale || this.scale instanceof jvm.SimpleScale)
                for (i in e) s[i] = e[i] ? this.scale.getValue(e[i]) : this.elements[i].element.style.initial[this.params.attribute];
            else {
                if (!this.params.min || !this.params.max) {
                    for (i in e) r = parseFloat(e[i]), r > t && (t = e[i]), n > r && (n = r);
                    this.params.min || this.scale.setMin(n), this.params.max || this.scale.setMax(t), this.params.min = n, this.params.max = t
                }
                for (i in e) r = parseFloat(e[i]), s[i] = isNaN(r) ? this.elements[i].element.style.initial[this.params.attribute] : this.scale.getValue(r)
            }
            this.setAttributes(s), jvm.$.extend(this.values, e)
        },
        clear: function() {
            var e, t = {};
            for (e in this.values) this.elements[e] && (t[e] = this.elements[e].element.style.initial[this.params.attribute]);
            this.setAttributes(t), this.values = {}
        },
        setScale: function(e) {
            this.scale.setScale(e), this.values && this.setValues(this.values)
        },
        setNormalizeFunction: function(e) {
            this.scale.setNormalizeFunction(e), this.values && this.setValues(this.values)
        }
    }, jvm.Proj = {
        degRad: 180 / Math.PI,
        radDeg: Math.PI / 180,
        radius: 6381372,
        sgn: function(e) {
            return e > 0 ? 1 : 0 > e ? -1 : e
        },
        mill: function(e, t, n) {
            return {
                x: this.radius * (t - n) * this.radDeg,
                y: -this.radius * Math.log(Math.tan((45 + .4 * e) * this.radDeg)) / .8
            }
        },
        mill_inv: function(e, t, n) {
            return {
                lat: (2.5 * Math.atan(Math.exp(.8 * t / this.radius)) - 5 * Math.PI / 8) * this.degRad,
                lng: (n * this.radDeg + e / this.radius) * this.degRad
            }
        },
        merc: function(e, t, n) {
            return {
                x: this.radius * (t - n) * this.radDeg,
                y: -this.radius * Math.log(Math.tan(Math.PI / 4 + e * Math.PI / 360))
            }
        },
        merc_inv: function(e, t, n) {
            return {
                lat: (2 * Math.atan(Math.exp(t / this.radius)) - Math.PI / 2) * this.degRad,
                lng: (n * this.radDeg + e / this.radius) * this.degRad
            }
        },
        aea: function(e, t, n) {
            var r = 0,
                i = n * this.radDeg,
                s = 29.5 * this.radDeg,
                o = 45.5 * this.radDeg,
                u = e * this.radDeg,
                a = t * this.radDeg,
                f = (Math.sin(s) + Math.sin(o)) / 2,
                l = Math.cos(s) * Math.cos(s) + 2 * f * Math.sin(s),
                c = f * (a - i),
                h = Math.sqrt(l - 2 * f * Math.sin(u)) / f,
                p = Math.sqrt(l - 2 * f * Math.sin(r)) / f;
            return {
                x: h * Math.sin(c) * this.radius,
                y: -(p - h * Math.cos(c)) * this.radius
            }
        },
        aea_inv: function(e, t, n) {
            var r = e / this.radius,
                i = t / this.radius,
                s = 0,
                o = n * this.radDeg,
                u = 29.5 * this.radDeg,
                a = 45.5 * this.radDeg,
                f = (Math.sin(u) + Math.sin(a)) / 2,
                l = Math.cos(u) * Math.cos(u) + 2 * f * Math.sin(u),
                c = Math.sqrt(l - 2 * f * Math.sin(s)) / f,
                h = Math.sqrt(r * r + (c - i) * (c - i)),
                p = Math.atan(r / (c - i));
            return {
                lat: Math.asin((l - h * h * f * f) / (2 * f)) * this.degRad,
                lng: (o + p / f) * this.degRad
            }
        },
        lcc: function(e, t, n) {
            var r = 0,
                i = n * this.radDeg,
                s = t * this.radDeg,
                o = 33 * this.radDeg,
                u = 45 * this.radDeg,
                a = e * this.radDeg,
                f = Math.log(Math.cos(o) * (1 / Math.cos(u))) / Math.log(Math.tan(Math.PI / 4 + u / 2) * (1 / Math.tan(Math.PI / 4 + o / 2))),
                l = Math.cos(o) * Math.pow(Math.tan(Math.PI / 4 + o / 2), f) / f,
                c = l * Math.pow(1 / Math.tan(Math.PI / 4 + a / 2), f),
                h = l * Math.pow(1 / Math.tan(Math.PI / 4 + r / 2), f);
            return {
                x: c * Math.sin(f * (s - i)) * this.radius,
                y: -(h - c * Math.cos(f * (s - i))) * this.radius
            }
        },
        lcc_inv: function(e, t, n) {
            var r = e / this.radius,
                i = t / this.radius,
                s = 0,
                o = n * this.radDeg,
                u = 33 * this.radDeg,
                a = 45 * this.radDeg,
                f = Math.log(Math.cos(u) * (1 / Math.cos(a))) / Math.log(Math.tan(Math.PI / 4 + a / 2) * (1 / Math.tan(Math.PI / 4 + u / 2))),
                l = Math.cos(u) * Math.pow(Math.tan(Math.PI / 4 + u / 2), f) / f,
                c = l * Math.pow(1 / Math.tan(Math.PI / 4 + s / 2), f),
                h = this.sgn(f) * Math.sqrt(r * r + (c - i) * (c - i)),
                p = Math.atan(r / (c - i));
            return {
                lat: (2 * Math.atan(Math.pow(l / h, 1 / f)) - Math.PI / 2) * this.degRad,
                lng: (o + p / f) * this.degRad
            }
        }
    }, jvm.WorldMap = function(e) {
        var n, t = this;
        if (this.params = jvm.$.extend(!0, {}, jvm.WorldMap.defaultParams, e), !jvm.WorldMap.maps[this.params.map]) throw new Error("Attempt to use map which was not loaded: " + this.params.map);
        this.mapData = jvm.WorldMap.maps[this.params.map], this.markers = {}, this.regions = {}, this.regionsColors = {}, this.regionsData = {}, this.container = jvm.$("<div>").css({
            width: "100%",
            height: "100%"
        }).addClass("jvectormap-container"), this.params.container.append(this.container), this.container.data("mapObject", this), this.container.css({
            position: "relative",
            overflow: "hidden"
        }), this.defaultWidth = this.mapData.width, this.defaultHeight = this.mapData.height, this.setBackgroundColor(this.params.backgroundColor), this.onResize = function() {
            t.setSize()
        }, jvm.$(window).resize(this.onResize);
        for (n in jvm.WorldMap.apiEvents) this.params[n] && this.container.bind(jvm.WorldMap.apiEvents[n] + ".jvectormap", this.params[n]);
        this.canvas = new jvm.VectorCanvas(this.container[0], this.width, this.height), "ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch ? this.params.bindTouchEvents && this.bindContainerTouchEvents() : this.bindContainerEvents(), this.bindElementEvents(), this.createLabel(), this.params.zoomButtons && this.bindZoomButtons(), this.createRegions(), this.createMarkers(this.params.markers || {}), this.setSize(), this.params.focusOn && ("object" == typeof this.params.focusOn ? this.setFocus.call(this, this.params.focusOn.scale, this.params.focusOn.x, this.params.focusOn.y) : this.setFocus.call(this, this.params.focusOn)), this.params.selectedRegions && this.setSelectedRegions(this.params.selectedRegions), this.params.selectedMarkers && this.setSelectedMarkers(this.params.selectedMarkers), this.params.series && this.createSeries()
    }, jvm.WorldMap.prototype = {
        transX: 0,
        transY: 0,
        scale: 1,
        baseTransX: 0,
        baseTransY: 0,
        baseScale: 1,
        width: 0,
        height: 0,
        setBackgroundColor: function(e) {
            this.container.css("background-color", e)
        },
        resize: function() {
            var e = this.baseScale;
            this.width / this.height > this.defaultWidth / this.defaultHeight ? (this.baseScale = this.height / this.defaultHeight, this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale)) : (this.baseScale = this.width / this.defaultWidth, this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale)), this.scale *= this.baseScale / e, this.transX *= this.baseScale / e, this.transY *= this.baseScale / e
        },
        setSize: function() {
            this.width = this.container.width(), this.height = this.container.height(), this.resize(), this.canvas.setSize(this.width, this.height), this.applyTransform()
        },
        reset: function() {
            var e, t;
            for (e in this.series)
                for (t = 0; t < this.series[e].length; t++) this.series[e][t].clear();
            this.scale = this.baseScale, this.transX = this.baseTransX, this.transY = this.baseTransY, this.applyTransform()
        },
        applyTransform: function() {
            var e, t, n, r;
            this.defaultWidth * this.scale <= this.width ? (e = (this.width - this.defaultWidth * this.scale) / (2 * this.scale), n = (this.width - this.defaultWidth * this.scale) / (2 * this.scale)) : (e = 0, n = (this.width - this.defaultWidth * this.scale) / this.scale), this.defaultHeight * this.scale <= this.height ? (t = (this.height - this.defaultHeight * this.scale) / (2 * this.scale), r = (this.height - this.defaultHeight * this.scale) / (2 * this.scale)) : (t = 0, r = (this.height - this.defaultHeight * this.scale) / this.scale), this.transY > t ? this.transY = t : this.transY < r && (this.transY = r), this.transX > e ? this.transX = e : this.transX < n && (this.transX = n), this.canvas.applyTransformParams(this.scale, this.transX, this.transY), this.markers && this.repositionMarkers(), this.container.trigger("viewportChange", [this.scale / this.baseScale, this.transX, this.transY])
        },
        bindContainerEvents: function() {
            var t, n, e = !1,
                r = this;
            this.container.mousemove(function(i) {
                return e && (r.transX -= (t - i.pageX) / r.scale, r.transY -= (n - i.pageY) / r.scale, r.applyTransform(), t = i.pageX, n = i.pageY), !1
            }).mousedown(function(r) {
                return e = !0, t = r.pageX, n = r.pageY, !1
            }), jvm.$("body").mouseup(function() {
                e = !1
            }), this.params.zoomOnScroll && this.container.mousewheel(function(e, t, n, i) {
                var s = jvm.$(r.container).offset(),
                    o = e.pageX - s.left,
                    u = e.pageY - s.top,
                    a = Math.pow(1.3, i);
                r.label.hide(), r.setScale(r.scale * a, o, u), e.preventDefault()
            })
        },
        bindContainerTouchEvents: function() {
            var e, t, r, i, s, o, u, n = this,
                a = function(a) {
                    var l, c, h, p, f = a.originalEvent.touches;
                    "touchstart" == a.type && (u = 0), 1 == f.length ? (1 == u && (h = n.transX, p = n.transY, n.transX -= (r - f[0].pageX) / n.scale, n.transY -= (i - f[0].pageY) / n.scale, n.applyTransform(), n.label.hide(), (h != n.transX || p != n.transY) && a.preventDefault()), r = f[0].pageX, i = f[0].pageY) : 2 == f.length && (2 == u ? (c = Math.sqrt(Math.pow(f[0].pageX - f[1].pageX, 2) + Math.pow(f[0].pageY - f[1].pageY, 2)) / t, n.setScale(e * c, s, o), n.label.hide(), a.preventDefault()) : (l = jvm.$(n.container).offset(), s = f[0].pageX > f[1].pageX ? f[1].pageX + (f[0].pageX - f[1].pageX) / 2 : f[0].pageX + (f[1].pageX - f[0].pageX) / 2, o = f[0].pageY > f[1].pageY ? f[1].pageY + (f[0].pageY - f[1].pageY) / 2 : f[0].pageY + (f[1].pageY - f[0].pageY) / 2, s -= l.left, o -= l.top, e = n.scale, t = Math.sqrt(Math.pow(f[0].pageX - f[1].pageX, 2) + Math.pow(f[0].pageY - f[1].pageY, 2)))), u = f.length
                };
            jvm.$(this.container).bind("touchstart", a), jvm.$(this.container).bind("touchmove", a)
        },
        bindElementEvents: function() {
            var t, e = this;
            this.container.mousemove(function() {
                t = !0
            }), this.container.delegate("[class~='jvectormap-element']", "mouseover mouseout", function(t) {
                var r = jvm.$(this).attr("class").baseVal ? jvm.$(this).attr("class").baseVal : jvm.$(this).attr("class"),
                    i = -1 === r.indexOf("jvectormap-region") ? "marker" : "region",
                    s = jvm.$(this).attr("region" == i ? "data-code" : "data-index"),
                    o = "region" == i ? e.regions[s].element : e.markers[s].element,
                    u = "region" == i ? e.mapData.paths[s].name : e.markers[s].config.name || "",
                    a = jvm.$.Event(i + "LabelShow.jvectormap"),
                    f = jvm.$.Event(i + "Over.jvectormap");
                "mouseover" == t.type ? (e.container.trigger(f, [s]), f.isDefaultPrevented() || o.setHovered(!0), e.label.text(u), e.container.trigger(a, [e.label, s]), a.isDefaultPrevented() || (e.label.show(), e.labelWidth = e.label.width(), e.labelHeight = e.label.height())) : (o.setHovered(!1), e.label.hide(), e.container.trigger(i + "Out.jvectormap", [s]))
            }), this.container.delegate("[class~='jvectormap-element']", "mousedown", function() {
                t = !1
            }), this.container.delegate("[class~='jvectormap-element']", "mouseup", function() {
                var i = jvm.$(this).attr("class").baseVal ? jvm.$(this).attr("class").baseVal : jvm.$(this).attr("class"),
                    s = -1 === i.indexOf("jvectormap-region") ? "marker" : "region",
                    o = jvm.$(this).attr("region" == s ? "data-code" : "data-index"),
                    u = jvm.$.Event(s + "Click.jvectormap"),
                    a = "region" == s ? e.regions[o].element : e.markers[o].element;
                t || (e.container.trigger(u, [o]), ("region" === s && e.params.regionsSelectable || "marker" === s && e.params.markersSelectable) && (u.isDefaultPrevented() || (e.params[s + "sSelectableOne"] && e.clearSelected(s + "s"), a.setSelected(!a.isSelected))))
            })
        },
        bindZoomButtons: function() {
            var e = this;
            jvm.$("<div/>").addClass("jvectormap-zoomin").text("+").appendTo(this.container), jvm.$("<div/>").addClass("jvectormap-zoomout").html("&#x2212;").appendTo(this.container), this.container.find(".jvectormap-zoomin").click(function() {
                e.setScale(e.scale * e.params.zoomStep, e.width / 2, e.height / 2)
            }), this.container.find(".jvectormap-zoomout").click(function() {
                e.setScale(e.scale / e.params.zoomStep, e.width / 2, e.height / 2)
            })
        },
        createLabel: function() {
            var e = this;
            this.label = jvm.$("<div/>").addClass("jvectormap-label").appendTo(jvm.$("body")), this.container.mousemove(function(t) {
                var n = t.pageX - 15 - e.labelWidth,
                    r = t.pageY - 15 - e.labelHeight;
                5 > n && (n = t.pageX + 15), 5 > r && (r = t.pageY + 15), e.label.is(":visible") && e.label.css({
                    left: n,
                    top: r
                })
            })
        },
        setScale: function(e, t, n, r) {
            var i, s = jvm.$.Event("zoom.jvectormap");
            e > this.params.zoomMax * this.baseScale ? e = this.params.zoomMax * this.baseScale : e < this.params.zoomMin * this.baseScale && (e = this.params.zoomMin * this.baseScale), "undefined" != typeof t && "undefined" != typeof n && (i = e / this.scale, r ? (this.transX = t + this.defaultWidth * (this.width / (this.defaultWidth * e)) / 2, this.transY = n + this.defaultHeight * (this.height / (this.defaultHeight * e)) / 2) : (this.transX -= (i - 1) / e * t, this.transY -= (i - 1) / e * n)), this.scale = e, this.applyTransform(), this.container.trigger(s, [e / this.baseScale])
        },
        setFocus: function(e, t, n) {
            var r, i, s, o, u;
            if (jvm.$.isArray(e) || this.regions[e]) {
                for (o = jvm.$.isArray(e) ? e : [e], u = 0; u < o.length; u++) this.regions[o[u]] && (i = this.regions[o[u]].element.getBBox(), i && ("undefined" == typeof r ? r = i : (s = {
                    x: Math.min(r.x, i.x),
                    y: Math.min(r.y, i.y),
                    width: Math.max(r.x + r.width, i.x + i.width) - Math.min(r.x, i.x),
                    height: Math.max(r.y + r.height, i.y + i.height) - Math.min(r.y, i.y)
                }, r = s)));
                this.setScale(Math.min(this.width / r.width, this.height / r.height), -(r.x + r.width / 2), -(r.y + r.height / 2), !0)
            } else e *= this.baseScale, this.setScale(e, -t * this.defaultWidth, -n * this.defaultHeight, !0)
        },
        getSelected: function(e) {
            var t, n = [];
            for (t in this[e]) this[e][t].element.isSelected && n.push(t);
            return n
        },
        getSelectedRegions: function() {
            return this.getSelected("regions")
        },
        getSelectedMarkers: function() {
            return this.getSelected("markers")
        },
        setSelected: function(e, t) {
            var n;
            if ("object" != typeof t && (t = [t]), jvm.$.isArray(t))
                for (n = 0; n < t.length; n++) this[e][t[n]].element.setSelected(!0);
            else
                for (n in t) this[e][n].element.setSelected(!!t[n])
        },
        setSelectedRegions: function(e) {
            this.setSelected("regions", e)
        },
        setSelectedMarkers: function(e) {
            this.setSelected("markers", e)
        },
        clearSelected: function(e) {
            var r, t = {},
                n = this.getSelected(e);
            for (r = 0; r < n.length; r++) t[n[r]] = !1;
            this.setSelected(e, t)
        },
        clearSelectedRegions: function() {
            this.clearSelected("regions")
        },
        clearSelectedMarkers: function() {
            this.clearSelected("markers")
        },
        getMapObject: function() {
            return this
        },
        getRegionName: function(e) {
            return this.mapData.paths[e].name
        },
        createRegions: function() {
            var e, t, n = this;
            for (e in this.mapData.paths) t = this.canvas.addPath({
                d: this.mapData.paths[e].path,
                "data-code": e
            }, jvm.$.extend(!0, {}, this.params.regionStyle)), jvm.$(t.node).bind("selected", function(e, t) {
                n.container.trigger("regionSelected.jvectormap", [jvm.$(this).attr("data-code"), t, n.getSelectedRegions()])
            }), t.addClass("jvectormap-region jvectormap-element"), this.regions[e] = {
                element: t,
                config: this.mapData.paths[e]
            }
        },
        createMarkers: function(e) {
            var t, n, r, i, s, o = this;
            if (this.markersGroup = this.markersGroup || this.canvas.addGroup(), jvm.$.isArray(e))
                for (s = e.slice(), e = {}, t = 0; t < s.length; t++) e[t] = s[t];
            for (t in e) i = e[t] instanceof Array ? {
                latLng: e[t]
            } : e[t], r = this.getMarkerPosition(i), r !== !1 && (n = this.canvas.addCircle({
                "data-index": t,
                cx: r.x,
                cy: r.y
            }, jvm.$.extend(!0, {}, this.params.markerStyle, {
                initial: i.style || {}
            }), this.markersGroup), n.addClass("jvectormap-marker jvectormap-element"), jvm.$(n.node).bind("selected", function(e, t) {
                o.container.trigger("markerSelected.jvectormap", [jvm.$(this).attr("data-index"), t, o.getSelectedMarkers()])
            }), this.markers[t] && this.removeMarkers([t]), this.markers[t] = {
                element: n,
                config: i
            })
        },
        repositionMarkers: function() {
            var e, t;
            for (e in this.markers) t = this.getMarkerPosition(this.markers[e].config), t !== !1 && this.markers[e].element.setStyle({
                cx: t.x,
                cy: t.y
            })
        },
        getMarkerPosition: function(e) {
            return jvm.WorldMap.maps[this.params.map].projection ? this.latLngToPoint.apply(this, e.latLng || [0, 0]) : {
                x: e.coords[0] * this.scale + this.transX * this.scale,
                y: e.coords[1] * this.scale + this.transY * this.scale
            }
        },
        addMarker: function(e, t, n) {
            var s, o, r = {},
                i = [],
                n = n || [];
            for (r[e] = t, o = 0; o < n.length; o++) s = {}, s[e] = n[o], i.push(s);
            this.addMarkers(r, i)
        },
        addMarkers: function(e, t) {
            var n;
            for (t = t || [], this.createMarkers(e), n = 0; n < t.length; n++) this.series.markers[n].setValues(t[n] || {})
        },
        removeMarkers: function(e) {
            var t;
            for (t = 0; t < e.length; t++) this.markers[e[t]].element.remove(), delete this.markers[e[t]]
        },
        removeAllMarkers: function() {
            var e, t = [];
            for (e in this.markers) t.push(e);
            this.removeMarkers(t)
        },
        latLngToPoint: function(e, t) {
            {
                var n, u, a, r = jvm.WorldMap.maps[this.params.map].projection,
                    i = r.centralMeridian;
                this.width - 2 * this.baseTransX * this.baseScale, this.height - 2 * this.baseTransY * this.baseScale, this.scale / this.baseScale
            }
            return -180 + i > t && (t += 360), n = jvm.Proj[r.type](e, t, i), u = this.getInsetForPoint(n.x, n.y), u ? (a = u.bbox, n.x = (n.x - a[0].x) / (a[1].x - a[0].x) * u.width * this.scale, n.y = (n.y - a[0].y) / (a[1].y - a[0].y) * u.height * this.scale, {
                x: n.x + this.transX * this.scale + u.left * this.scale,
                y: n.y + this.transY * this.scale + u.top * this.scale
            }) : !1
        },
        pointToLatLng: function(e, t) {
            var s, o, u, a, f, n = jvm.WorldMap.maps[this.params.map].projection,
                r = n.centralMeridian,
                i = jvm.WorldMap.maps[this.params.map].insets;
            for (s = 0; s < i.length; s++)
                if (o = i[s], u = o.bbox, a = e - (this.transX * this.scale + o.left * this.scale), f = t - (this.transY * this.scale + o.top * this.scale), a = a / (o.width * this.scale) * (u[1].x - u[0].x) + u[0].x, f = f / (o.height * this.scale) * (u[1].y - u[0].y) + u[0].y, a > u[0].x && a < u[1].x && f > u[0].y && f < u[1].y) return jvm.Proj[n.type + "_inv"](a, -f, r);
            return !1
        },
        getInsetForPoint: function(e, t) {
            var r, i, n = jvm.WorldMap.maps[this.params.map].insets;
            for (r = 0; r < n.length; r++)
                if (i = n[r].bbox, e > i[0].x && e < i[1].x && t > i[0].y && t < i[1].y) return n[r]
        },
        createSeries: function() {
            var e, t;
            this.series = {
                markers: [],
                regions: []
            };
            for (t in this.params.series)
                for (e = 0; e < this.params.series[t].length; e++) this.series[t][e] = new jvm.DataSeries(this.params.series[t][e], this[t])
        },
        remove: function() {
            this.label.remove(), this.container.remove(), jvm.$(window).unbind("resize", this.onResize)
        }
    }, jvm.WorldMap.maps = {}, jvm.WorldMap.defaultParams = {
        map: "world_mill_en",
        backgroundColor: "#505050",
        zoomButtons: !0,
        zoomOnScroll: !0,
        zoomMax: 8,
        zoomMin: 1,
        zoomStep: 1.6,
        regionsSelectable: !1,
        markersSelectable: !1,
        bindTouchEvents: !0,
        regionStyle: {
            initial: {
                fill: "white",
                "fill-opacity": 1,
                stroke: "none",
                "stroke-width": 0,
                "stroke-opacity": 1
            },
            hover: {
                "fill-opacity": .8
            },
            selected: {
                fill: "yellow"
            },
            selectedHover: {}
        },
        markerStyle: {
            initial: {
                fill: "grey",
                stroke: "#505050",
                "fill-opacity": 1,
                "stroke-width": 1,
                "stroke-opacity": 1,
                r: 5
            },
            hover: {
                stroke: "black",
                "stroke-width": 2
            },
            selected: {
                fill: "blue"
            },
            selectedHover: {}
        }
    }, jvm.WorldMap.apiEvents = {
        onRegionLabelShow: "regionLabelShow",
        onRegionOver: "regionOver",
        onRegionOut: "regionOut",
        onRegionClick: "regionClick",
        onRegionSelected: "regionSelected",
        onMarkerLabelShow: "markerLabelShow",
        onMarkerOver: "markerOver",
        onMarkerOut: "markerOut",
        onMarkerClick: "markerClick",
        onMarkerSelected: "markerSelected",
        onViewportChange: "viewportChange"
    }, $.fn.vectorMap("addMap", "world_mill_en", {
        insets: [{
            width: 900,
            top: 0,
            height: 440.7063107441331,
            bbox: [{
                y: -12671671.123330014,
                x: -20004297.151525836
            }, {
                y: 6930392.02513512,
                x: 20026572.394749384
            }],
            left: 0
        }],
        paths: {
            BD: {
                path: "M652.71,228.85l-0.04,1.38l-0.46,-0.21l-0.42,0.3l0.05,0.65l-0.17,-1.37l-0.48,-1.26l-1.08,-1.6l-0.23,-0.13l-2.31,-0.11l-0.31,0.36l0.21,0.98l-0.6,1.11l-0.8,-0.4l-0.37,0.09l-0.23,0.3l-0.54,-0.21l-0.78,-0.19l-0.38,-2.04l-0.83,-1.89l0.4,-1.5l-0.16,-0.35l-1.24,-0.57l0.36,-0.62l1.5,-0.95l0.02,-0.49l-1.62,-1.26l0.64,-1.31l1.7,1.0l0.12,0.04l0.96,0.11l0.19,1.62l0.25,0.26l2.38,0.37l2.32,-0.04l1.06,0.33l-0.92,1.79l-0.97,0.13l-0.23,0.16l-0.77,1.51l0.05,0.35l1.37,1.37l0.5,-0.14l0.35,-1.46l0.24,-0.0l1.24,3.92Z",
                name: "Bangladesh"
            },
            BE: {
                path: "M429.28,143.95l1.76,0.25l0.13,-0.01l2.16,-0.64l1.46,1.34l1.26,0.71l-0.23,1.8l-0.44,0.08l-0.24,0.25l-0.2,1.36l-1.8,-1.22l-0.23,-0.05l-1.14,0.23l-1.62,-1.43l-1.15,-1.31l-0.21,-0.1l-0.95,-0.04l-0.21,-0.68l1.66,-0.54Z",
                name: "Belgium"
            },
            BF: {
                path: "M413.48,260.21l-1.22,-0.46l-0.13,-0.02l-1.17,0.1l-0.15,0.06l-0.73,0.53l-0.87,-0.41l-0.39,-0.75l-0.13,-0.13l-0.98,-0.48l-0.14,-1.2l0.63,-0.99l0.05,-0.18l-0.05,-0.73l1.9,-2.01l0.08,-0.14l0.35,-1.65l0.49,-0.44l1.05,0.3l0.21,-0.02l1.05,-0.52l0.13,-0.13l0.3,-0.58l1.87,-1.1l0.11,-0.1l0.43,-0.72l2.23,-1.01l1.21,-0.32l0.51,0.4l0.19,0.06l1.25,-0.01l-0.14,0.89l0.01,0.13l0.34,1.16l0.06,0.11l1.35,1.59l0.07,1.13l0.24,0.28l2.64,0.53l-0.05,1.39l-0.42,0.59l-1.11,0.21l-0.22,0.17l-0.46,0.99l-0.69,0.23l-2.12,-0.05l-1.14,-0.2l-0.19,0.03l-0.72,0.36l-1.07,-0.17l-4.35,0.12l-0.29,0.29l-0.06,1.44l0.25,1.45Z",
                name: "Burkina Faso"
            },
            BG: {
                path: "M477.63,166.84l0.51,0.9l0.33,0.14l0.9,-0.21l1.91,0.47l3.68,0.16l0.17,-0.05l1.2,-0.75l2.78,-0.67l1.72,1.05l1.02,0.24l-0.97,0.97l-0.91,2.17l0.0,0.24l0.56,1.19l-1.58,-0.3l-0.16,0.01l-2.55,0.95l-0.2,0.28l-0.02,1.23l-1.92,0.24l-1.68,-0.99l-0.27,-0.02l-1.94,0.8l-1.52,-0.07l-0.15,-1.72l-0.12,-0.21l-0.99,-0.76l0.18,-0.18l0.02,-0.39l-0.17,-0.22l0.33,-0.75l0.91,-0.91l0.01,-0.42l-1.16,-1.25l-0.18,-0.89l0.24,-0.27Z",
                name: "Bulgaria"
            },
            BA: {
                path: "M468.39,164.66l0.16,0.04l0.43,-0.0l-0.43,0.93l0.06,0.34l1.08,1.06l-0.28,1.09l-0.5,0.13l-0.47,0.28l-0.86,0.74l-0.1,0.16l-0.28,1.29l-1.81,-0.94l-0.9,-1.22l-1.0,-0.73l-1.1,-1.1l-0.55,-0.96l-1.11,-1.3l0.3,-0.75l0.59,0.46l0.42,-0.04l0.46,-0.54l1.0,-0.06l2.11,0.5l1.72,-0.03l1.06,0.64Z",
                name: "Bosnia and Herzegovina"
            },
            BN: {
                path: "M707.34,273.57l0.76,-0.72l1.59,-1.03l-0.18,1.93l-0.9,-0.06l-0.28,0.14l-0.31,0.51l-0.68,-0.78Z",
                name: "Brunei"
            },
            BO: {
                path: "M263.83,340.79l-0.23,-0.12l-2.86,-0.11l-0.28,0.17l-0.77,1.67l-1.17,-1.51l-0.18,-0.11l-3.28,-0.64l-0.28,0.1l-2.02,2.3l-1.43,0.29l-0.91,-3.35l-1.31,-2.88l0.75,-2.41l-0.09,-0.32l-1.23,-1.03l-0.31,-1.76l-0.05,-0.12l-1.12,-1.6l1.49,-2.62l0.01,-0.28l-1.0,-2.0l0.48,-0.72l0.02,-0.29l-0.37,-0.78l0.87,-1.13l0.06,-0.18l0.05,-2.17l0.12,-1.71l0.5,-0.8l0.01,-0.3l-1.9,-3.58l1.3,0.15l1.34,-0.05l0.23,-0.12l0.51,-0.7l2.12,-0.99l1.31,-0.93l2.81,-0.37l-0.21,1.51l0.01,0.13l0.29,0.91l-0.19,1.64l0.11,0.27l2.72,2.27l0.15,0.07l2.71,0.41l0.92,0.88l0.12,0.07l1.64,0.49l1.0,0.71l0.18,0.06l1.5,-0.02l1.24,0.64l0.1,1.31l0.05,0.14l0.44,0.68l0.02,0.73l-0.44,0.03l-0.27,0.39l0.96,2.99l0.28,0.21l4.43,0.1l-0.28,1.12l0.0,0.15l0.27,1.02l0.15,0.19l1.27,0.67l0.52,1.42l-0.42,1.91l-0.66,1.1l-0.04,0.2l0.21,1.3l-0.19,0.13l-0.01,-0.27l-0.15,-0.24l-2.33,-1.33l-0.14,-0.04l-2.38,-0.03l-4.36,0.76l-0.21,0.16l-1.2,2.29l-0.03,0.13l-0.06,1.37l-0.79,2.53l-0.05,-0.08Z",
                name: "Bolivia"
            },
            JP: {
                path: "M781.17,166.78l1.8,0.67l0.28,-0.04l1.38,-1.01l0.43,2.67l-3.44,0.77l-0.18,0.12l-2.04,2.79l-3.71,-1.94l-0.42,0.15l-1.29,3.11l-2.32,0.04l-0.3,-2.63l1.12,-2.1l2.51,-0.16l0.28,-0.25l0.73,-4.22l0.58,-1.9l2.59,2.84l2.0,1.1ZM773.66,187.36l-0.92,2.24l-0.01,0.2l0.4,1.3l-1.18,1.81l-3.06,1.28l-4.35,0.17l-0.19,0.08l-3.4,3.06l-1.36,-0.87l-0.1,-1.95l-0.34,-0.28l-4.35,0.62l-2.99,1.33l-2.87,0.05l-0.28,0.2l0.09,0.33l2.37,1.93l-1.57,4.44l-1.35,0.97l-0.9,-0.79l0.57,-2.32l-0.15,-0.34l-1.5,-0.77l-0.81,-1.53l2.04,-0.75l0.14,-0.1l1.28,-1.72l2.47,-1.43l1.84,-1.92l4.83,-0.82l2.62,0.57l0.33,-0.16l2.45,-4.77l1.38,1.14l0.38,0.0l5.1,-4.02l0.09,-0.11l1.57,-3.57l0.02,-0.16l-0.42,-3.22l0.94,-1.67l2.27,-0.47l1.26,3.82l-0.07,2.23l-2.26,2.86l-0.06,0.19l0.04,2.93ZM757.85,196.18l0.22,0.66l-1.11,1.33l-0.8,-0.7l-0.33,-0.04l-1.28,0.65l-0.14,0.15l-0.54,1.34l-1.17,-0.57l0.02,-1.03l1.2,-1.45l1.24,0.28l0.29,-0.1l0.9,-1.03l1.51,0.5Z",
                name: "Japan"
            },
            BI: {
                path: "M494.7,295.83l-0.14,-2.71l-0.04,-0.13l-0.34,-0.62l0.93,0.12l0.3,-0.16l0.67,-1.25l0.9,0.11l0.11,0.76l0.08,0.16l0.46,0.48l0.02,0.56l-0.55,0.48l-0.96,1.29l-0.82,0.82l-0.61,0.07Z",
                name: "Burundi"
            },
            BJ: {
                path: "M427.4,268.94l-1.58,0.22l-0.52,-1.45l0.11,-5.73l-0.08,-0.21l-0.43,-0.44l-0.09,-1.13l-0.09,-0.19l-1.52,-1.52l0.24,-1.01l0.7,-0.23l0.18,-0.16l0.45,-0.97l1.07,-0.21l0.19,-0.12l0.53,-0.73l0.73,-0.65l0.68,-0.0l1.69,1.3l-0.08,0.67l0.02,0.14l0.52,1.38l-0.44,0.9l-0.01,0.24l0.2,0.52l-1.1,1.42l-0.76,0.76l-0.08,0.13l-0.47,1.59l0.05,1.69l-0.13,3.79Z",
                name: "Benin"
            },
            BT: {
                path: "M650.38,213.78l0.88,0.75l-0.13,1.24l-1.77,0.07l-2.1,-0.18l-1.57,0.4l-2.02,-0.91l-0.02,-0.24l1.54,-1.87l1.18,-0.6l1.67,0.59l1.32,0.08l1.01,0.67Z",
                name: "Bhutan"
            },
            JM: {
                path: "M226.67,238.37l1.64,0.23l1.2,0.56l0.11,0.19l-1.25,0.03l-0.14,0.04l-0.65,0.37l-1.24,-0.37l-1.17,-0.77l0.11,-0.22l0.86,-0.15l0.52,0.08Z",
                name: "Jamaica"
            },
            BW: {
                path: "M484.91,331.96l0.53,0.52l0.82,1.53l2.83,2.86l0.14,0.08l0.85,0.22l0.03,0.81l0.74,1.66l0.21,0.17l1.87,0.39l1.17,0.87l-3.13,1.71l-2.3,2.01l-0.07,0.1l-0.82,1.74l-0.66,0.88l-1.24,0.19l-0.24,0.2l-0.65,1.98l-1.4,0.55l-1.9,-0.12l-1.2,-0.74l-1.06,-0.32l-0.22,0.02l-1.22,0.62l-0.14,0.14l-0.58,1.21l-1.16,0.79l-1.18,1.13l-1.5,0.23l-0.4,-0.68l0.22,-1.53l-0.04,-0.19l-1.48,-2.54l-0.11,-0.11l-0.53,-0.31l-0.0,-7.25l2.18,-0.08l0.29,-0.3l0.07,-9.0l1.63,-0.08l3.69,-0.86l0.84,0.93l0.38,0.05l1.53,-0.97l0.79,-0.03l1.3,-0.53l0.23,0.1l0.92,1.96Z",
                name: "Botswana"
            },
            BR: {
                path: "M259.49,274.87l1.42,0.25l1.97,0.62l0.28,-0.05l0.67,-0.55l1.76,-0.38l2.8,-0.94l0.12,-0.08l0.92,-0.96l0.05,-0.33l-0.15,-0.32l0.73,-0.06l0.36,0.35l-0.27,0.93l0.17,0.36l0.76,0.34l0.44,0.9l-0.58,0.73l-0.06,0.13l-0.4,2.13l0.03,0.19l0.62,1.22l0.17,1.11l0.11,0.19l1.54,1.18l0.15,0.06l1.23,0.12l0.29,-0.15l0.2,-0.36l0.71,-0.11l1.13,-0.44l0.79,-0.63l1.25,0.19l0.65,-0.08l1.32,0.2l0.32,-0.18l0.23,-0.51l-0.05,-0.31l-0.31,-0.37l0.11,-0.31l0.75,0.17l0.13,0.0l1.1,-0.24l1.34,0.5l1.08,0.51l0.33,-0.05l0.67,-0.58l0.27,0.05l0.28,0.57l0.31,0.17l1.2,-0.18l0.17,-0.08l1.03,-1.05l0.76,-1.82l1.39,-2.16l0.49,-0.07l0.52,1.17l1.4,4.37l0.2,0.2l1.14,0.35l0.05,1.39l-1.8,1.97l0.01,0.42l0.78,0.75l0.18,0.08l4.16,0.37l0.08,2.25l0.5,0.22l1.78,-1.54l2.98,0.85l4.07,1.5l1.07,1.28l-0.37,1.23l0.36,0.38l2.83,-0.75l4.8,1.3l3.75,-0.09l3.6,2.02l3.27,2.84l1.93,0.72l2.13,0.11l0.76,0.66l1.22,4.56l-0.96,4.03l-1.22,1.58l-3.52,3.51l-1.63,2.91l-1.75,2.09l-0.5,0.04l-0.26,0.19l-0.72,1.99l0.18,4.76l-0.95,5.56l-0.74,0.96l-0.06,0.15l-0.43,3.39l-2.49,3.34l-0.06,0.13l-0.4,2.56l-1.9,1.07l-0.13,0.16l-0.51,1.38l-2.59,0.0l-3.94,1.01l-1.82,1.19l-2.85,0.81l-3.01,2.17l-2.12,2.65l-0.06,0.13l-0.36,2.0l0.01,0.13l0.4,1.42l-0.45,2.63l-0.53,1.23l-1.76,1.53l-2.76,4.79l-2.16,2.15l-1.69,1.29l-0.09,0.12l-1.12,2.6l-1.3,1.26l-0.45,-1.02l0.99,-1.18l0.01,-0.37l-1.5,-1.95l-1.98,-1.54l-2.58,-1.77l-0.2,-0.05l-0.81,0.07l-2.42,-2.05l-0.25,-0.07l-0.77,0.14l2.75,-3.07l2.8,-2.61l1.67,-1.09l2.11,-1.49l0.13,-0.24l0.05,-2.15l-0.07,-0.2l-1.26,-1.54l-0.35,-0.09l-0.64,0.27l0.3,-0.95l0.34,-1.57l0.01,-1.52l-0.16,-0.26l-0.9,-0.48l-0.27,-0.01l-0.86,0.39l-0.65,-0.08l-0.23,-0.8l-0.23,-2.39l-0.04,-0.12l-0.47,-0.79l-0.14,-0.12l-1.69,-0.71l-0.25,0.01l-0.93,0.47l-2.29,-0.44l0.15,-3.3l-0.03,-0.15l-0.62,-1.22l0.57,-0.39l0.13,-0.3l-0.22,-1.37l0.67,-1.13l0.44,-2.04l-0.01,-0.17l-0.59,-1.61l-0.14,-0.16l-1.25,-0.66l-0.22,-0.82l0.35,-1.41l-0.28,-0.37l-4.59,-0.1l-0.78,-2.41l0.34,-0.02l0.28,-0.31l-0.03,-1.1l-0.05,-0.16l-0.45,-0.68l-0.1,-1.4l-0.16,-0.24l-1.45,-0.76l-0.14,-0.03l-1.48,0.02l-1.04,-0.73l-1.62,-0.48l-0.93,-0.9l-0.16,-0.08l-2.72,-0.41l-2.53,-2.12l0.18,-1.54l-0.01,-0.13l-0.29,-0.91l0.26,-1.83l-0.34,-0.34l-3.28,0.43l-0.14,0.05l-1.3,0.93l-2.16,1.01l-0.12,0.09l-0.47,0.65l-1.12,0.05l-1.84,-0.21l-0.12,0.01l-1.33,0.41l-0.82,-0.21l0.16,-3.6l-0.48,-0.26l-1.97,1.43l-1.96,-0.06l-0.86,-1.23l-0.22,-0.13l-1.23,-0.11l0.34,-0.69l-0.05,-0.33l-1.36,-1.5l-0.92,-2.0l0.45,-0.32l0.13,-0.25l-0.0,-0.87l1.34,-0.64l0.17,-0.32l-0.23,-1.23l0.56,-0.77l0.05,-0.13l0.16,-1.03l2.7,-1.61l2.01,-0.47l0.16,-0.09l0.24,-0.27l2.11,0.11l0.31,-0.25l1.13,-6.87l0.06,-1.12l-0.4,-1.53l-0.1,-0.15l-1.0,-0.82l0.01,-1.45l1.08,-0.32l0.39,0.2l0.44,-0.24l0.08,-0.96l-0.25,-0.32l-1.22,-0.22l-0.02,-1.01l4.57,0.05l0.22,-0.09l0.6,-0.63l0.44,0.5l0.47,1.42l0.45,0.16l0.27,-0.18l1.21,1.16l0.23,0.08l1.95,-0.16l0.23,-0.14l0.43,-0.67l1.76,-0.55l1.05,-0.42l0.18,-0.2l0.25,-0.92l1.65,-0.66l0.18,-0.35l-0.14,-0.53l-0.26,-0.22l-1.91,-0.19l-0.29,-1.33l0.1,-1.64l-0.15,-0.28l-0.44,-0.25Z",
                name: "Brazil"
            },
            BS: {
                path: "M227.51,216.69l0.3,0.18l-0.24,1.07l0.03,-1.04l-0.09,-0.21ZM226.5,224.03l-0.13,0.03l-0.54,-1.3l-0.09,-0.12l-0.78,-0.64l0.4,-1.26l0.33,0.05l0.79,2.0l0.01,1.24ZM225.76,216.5l-2.16,0.34l-0.07,-0.41l0.85,-0.16l1.36,0.07l0.02,0.16Z",
                name: "The Bahamas"
            },
            BY: {
                path: "M480.08,135.28l2.09,0.02l0.13,-0.03l2.72,-1.3l0.16,-0.19l0.55,-1.83l1.94,-1.06l0.15,-0.31l-0.2,-1.33l1.33,-0.52l2.58,-1.3l2.39,0.8l0.3,0.75l0.37,0.17l1.22,-0.39l2.18,0.75l0.2,1.36l-0.48,0.85l0.01,0.32l1.57,2.26l0.92,0.6l-0.1,0.41l0.19,0.35l1.61,0.57l0.48,0.6l-0.64,0.49l-1.91,-0.11l-0.18,0.05l-0.48,0.32l-0.1,0.39l0.57,1.1l0.51,1.78l-1.79,0.17l-0.18,0.08l-0.77,0.73l-0.09,0.19l-0.13,1.31l-0.75,-0.22l-2.11,0.15l-0.56,-0.66l-0.39,-0.06l-0.8,0.49l-0.79,-0.4l-0.13,-0.03l-1.94,-0.07l-2.76,-0.79l-2.58,-0.27l-1.98,0.07l-0.15,0.05l-1.31,0.86l-0.8,0.09l-0.04,-1.16l-0.03,-0.12l-0.63,-1.28l1.22,-0.56l0.17,-0.27l0.01,-1.35l-0.04,-0.15l-0.66,-1.24l-0.08,-1.12Z",
                name: "Belarus"
            },
            BZ: {
                path: "M198.03,239.7l0.28,0.19l0.43,-0.1l0.82,-1.42l0.0,0.07l0.29,0.29l0.16,0.0l-0.02,0.35l-0.39,1.08l0.02,0.25l0.16,0.29l-0.23,0.8l0.04,0.24l0.09,0.14l-0.25,1.12l-0.38,0.53l-0.33,0.06l-0.21,0.15l-0.41,0.74l-0.25,0.0l0.17,-2.58l0.01,-2.2Z",
                name: "Belize"
            },
            RU: {
                path: "M688.57,38.85l0.63,2.39l0.44,0.19l2.22,-1.23l7.18,0.07l5.54,2.49l1.85,1.77l-0.55,2.34l-2.64,1.42l-6.57,2.76l-1.95,1.5l0.12,0.53l3.09,0.68l3.69,1.23l0.21,-0.01l1.98,-0.81l1.16,2.84l0.5,0.08l1.03,-1.18l3.86,-0.74l7.79,0.78l0.56,2.05l0.27,0.22l10.47,0.71l0.32,-0.29l0.13,-3.34l4.98,0.8l3.96,-0.02l3.88,2.43l1.06,2.79l-1.38,1.83l0.01,0.38l3.15,3.64l0.1,0.08l3.94,1.86l0.4,-0.14l2.28,-4.56l3.75,1.94l0.22,0.02l4.18,-1.22l4.76,1.4l0.26,-0.04l1.74,-1.23l3.98,0.63l0.32,-0.41l-1.71,-4.1l3.0,-1.86l22.39,3.04l2.06,2.67l0.1,0.08l6.55,3.51l0.17,0.03l10.08,-0.86l4.86,0.73l1.91,1.72l-0.29,3.13l0.18,0.31l3.08,1.26l0.19,0.01l3.32,-0.9l4.37,-0.11l4.78,0.87l4.61,-0.48l4.26,3.82l0.32,0.05l3.1,-1.4l0.12,-0.45l-1.91,-2.67l0.92,-1.64l7.78,1.22l5.22,-0.26l7.12,2.1l9.6,5.22l6.4,4.15l-0.2,2.44l0.14,0.28l1.69,1.04l0.45,-0.31l-0.51,-2.66l6.31,0.58l4.52,3.61l-2.1,1.52l-4.02,0.42l-0.27,0.29l-0.06,3.83l-0.81,0.67l-2.14,-0.11l-1.91,-1.39l-3.19,-1.13l-0.51,-1.63l-0.21,-0.2l-2.54,-0.67l-0.13,-0.0l-2.69,0.5l-1.12,-1.19l0.48,-1.36l-0.38,-0.39l-3.0,0.98l-0.17,0.44l1.02,1.76l-1.27,1.55l-3.09,1.71l-3.15,-0.29l-0.3,0.18l0.07,0.34l2.22,2.1l1.47,3.22l1.15,1.09l0.25,1.41l-0.48,0.76l-4.47,-0.81l-0.17,0.02l-6.97,2.9l-2.2,0.44l-0.11,0.05l-3.83,2.68l-3.63,2.32l-0.1,0.11l-0.76,1.4l-3.3,-2.4l-0.3,-0.03l-6.31,2.85l-0.99,-1.21l-0.4,-0.06l-2.32,1.54l-3.23,-0.49l-0.33,0.2l-0.79,2.39l-2.97,3.51l-0.07,0.21l0.09,1.47l0.22,0.27l2.62,0.74l-0.3,4.7l-2.06,0.12l-0.26,0.2l-1.07,2.94l0.04,0.27l0.83,1.19l-4.03,1.63l-0.18,0.21l-0.83,3.72l-3.55,0.79l-0.23,0.23l-0.73,3.32l-3.22,2.76l-0.76,-1.88l-1.07,-4.88l-1.39,-7.59l1.17,-4.76l2.05,-2.08l0.09,-0.19l0.11,-1.46l3.67,-0.77l0.15,-0.08l4.47,-4.61l4.29,-3.82l4.48,-3.01l0.11,-0.14l2.01,-5.43l-0.31,-0.4l-3.04,0.33l-0.24,0.17l-1.47,3.11l-5.98,3.94l-1.91,-4.36l-0.33,-0.17l-6.46,1.3l-0.15,0.08l-6.27,6.33l-0.01,0.41l1.7,1.87l-5.04,0.87l-3.51,0.34l0.16,-2.32l-0.26,-0.32l-3.89,-0.56l-0.19,0.04l-3.02,1.77l-7.63,-0.63l-8.24,1.1l-0.16,0.07l-8.11,7.09l-9.6,8.31l0.16,0.52l3.79,0.42l1.16,2.03l0.17,0.14l2.43,0.76l0.31,-0.08l1.5,-1.61l2.49,0.2l3.46,3.6l0.08,2.67l-1.91,3.26l-0.04,0.14l-0.21,3.91l-1.11,5.09l-3.73,4.55l-0.87,2.21l-6.73,7.14l-1.59,1.77l-3.23,1.72l-1.38,0.03l-1.48,-1.39l-0.37,-0.03l-3.36,2.22l-0.11,0.14l-0.16,0.42l-0.01,-1.09l1.0,-0.06l0.28,-0.27l0.36,-3.6l-0.61,-2.51l1.85,-0.94l2.94,0.53l0.32,-0.15l1.71,-3.1l0.84,-3.38l0.97,-1.18l1.32,-2.88l-0.34,-0.42l-4.14,0.95l-2.18,1.25l-3.51,-0.0l-0.95,-2.81l-0.1,-0.14l-2.97,-2.3l-0.11,-0.05l-4.19,-1.0l-0.89,-3.08l-0.87,-2.03l-0.95,-1.46l-1.54,-3.37l-0.12,-0.14l-2.27,-1.28l-3.83,-1.02l-3.37,0.1l-3.11,0.61l-0.13,0.06l-2.07,1.69l0.04,0.49l1.23,0.72l0.03,1.53l-1.34,1.05l-2.26,3.51l-0.05,0.17l0.02,1.27l-3.25,1.9l-2.87,-1.17l-0.14,-0.02l-2.86,0.26l-1.22,-1.02l-0.12,-0.06l-1.5,-0.35l-0.23,0.04l-3.62,2.27l-3.24,0.53l-2.28,0.79l-3.08,-0.51l-2.24,0.03l-1.49,-1.61l-2.45,-1.57l-0.11,-0.04l-2.6,-0.43l-3.17,0.43l-2.31,0.59l-3.31,-1.28l-0.45,-2.31l-0.21,-0.23l-2.94,-0.85l-2.26,-0.39l-2.77,-1.36l-0.37,0.09l-2.59,3.45l-0.03,0.32l0.91,1.74l-2.15,2.01l-3.47,-0.79l-2.44,-0.12l-1.59,-1.46l-0.2,-0.08l-2.55,-0.05l-2.12,-0.98l-0.24,-0.01l-3.85,1.57l-4.74,2.79l-2.59,0.55l-0.79,0.21l-1.21,-1.81l-0.29,-0.13l-3.05,0.41l-0.96,-1.25l-0.14,-0.1l-1.65,-0.6l-1.15,-1.82l-0.13,-0.12l-1.38,-0.6l-0.19,-0.02l-3.49,0.82l-3.35,-1.85l-0.38,0.08l-1.08,1.4l-5.36,-8.17l-3.02,-2.52l0.72,-0.85l0.01,-0.38l-0.37,-0.08l-6.22,3.21l-1.98,0.16l0.17,-1.51l-0.2,-0.31l-3.22,-1.17l-0.19,-0.0l-2.3,0.74l-0.72,-3.27l-0.24,-0.23l-4.5,-0.75l-0.21,0.04l-2.2,1.42l-6.21,1.27l-0.11,0.05l-1.16,0.81l-9.3,1.19l-0.18,0.09l-1.15,1.17l-0.02,0.39l1.56,2.01l-2.02,0.74l-0.16,0.42l0.35,0.68l-2.18,1.49l0.02,0.51l3.83,2.16l-0.45,1.13l-3.31,-0.13l-0.25,0.12l-0.57,0.77l-2.97,-1.59l-0.15,-0.04l-3.97,0.07l-0.13,0.03l-2.53,1.32l-2.84,-1.28l-5.52,-2.3l-0.12,-0.02l-3.91,0.09l-0.16,0.05l-5.17,3.6l-0.13,0.21l-0.25,1.89l-2.17,-1.6l-0.44,0.1l-2.0,3.59l0.06,0.37l0.55,0.5l-1.32,2.23l0.04,0.36l2.13,2.17l0.23,0.09l1.7,-0.08l1.42,1.89l-0.23,1.5l0.19,0.32l0.94,0.38l-0.89,1.44l-2.3,0.49l-0.17,0.11l-2.49,3.2l0.0,0.37l2.2,2.81l-0.23,1.93l0.06,0.22l2.56,3.32l-1.27,1.02l-0.4,0.66l-0.8,-0.15l-1.65,-1.75l-0.18,-0.09l-0.66,-0.09l-1.45,-0.64l-0.72,-1.16l-0.18,-0.13l-2.34,-0.63l-0.17,0.0l-1.32,0.41l-0.31,-0.4l-0.12,-0.09l-3.49,-1.48l-3.67,-0.49l-2.1,-0.52l-0.3,0.1l-0.12,0.14l-2.96,-2.4l-2.89,-1.19l-1.69,-1.42l1.27,-0.35l0.16,-0.1l2.08,-2.61l-0.04,-0.41l-1.02,-0.9l3.21,-1.12l0.2,-0.31l-0.07,-0.69l-0.37,-0.26l-1.86,0.42l0.05,-0.86l1.11,-0.76l2.35,-0.23l0.25,-0.19l0.39,-1.07l0.0,-0.19l-0.51,-1.64l0.95,-1.58l0.04,-0.16l-0.03,-0.95l-0.22,-0.28l-3.69,-1.06l-1.43,0.02l-1.45,-1.44l-0.29,-0.08l-1.83,0.49l-2.88,-1.04l0.04,-0.42l-0.04,-0.18l-0.89,-1.43l-0.23,-0.14l-1.77,-0.14l-0.13,-0.66l0.52,-0.56l0.01,-0.4l-1.6,-1.9l-0.27,-0.1l-2.55,0.32l-0.71,-0.16l-0.3,0.1l-0.53,0.63l-0.58,-0.08l-0.56,-1.97l-0.48,-0.94l0.17,-0.11l1.92,0.11l0.2,-0.06l0.97,-0.74l0.05,-0.42l-0.72,-0.91l-0.13,-0.1l-1.43,-0.51l0.09,-0.36l-0.13,-0.33l-0.97,-0.59l-1.43,-2.06l0.44,-0.77l0.04,-0.19l-0.25,-1.64l-0.2,-0.24l-2.45,-0.84l-0.19,-0.0l-1.05,0.34l-0.25,-0.62l-0.18,-0.17l-2.5,-0.84l-0.74,-1.93l-0.21,-1.7l-0.13,-0.21l-0.92,-0.63l0.83,-0.89l0.07,-0.27l-0.71,-3.26l1.69,-2.01l0.03,-0.34l-0.24,-0.41l2.63,-1.9l-0.01,-0.49l-2.31,-1.57l5.08,-4.61l2.33,-2.24l1.01,-2.08l-0.09,-0.37l-3.52,-2.56l0.94,-2.38l-0.04,-0.29l-2.14,-2.86l1.61,-3.35l-0.01,-0.29l-2.81,-4.58l2.19,-3.04l-0.06,-0.42l-3.7,-2.76l0.32,-2.67l1.87,-0.38l4.26,-1.77l2.46,-1.47l3.96,2.58l0.12,0.05l6.81,1.04l9.37,4.87l1.81,1.92l0.15,2.55l-2.61,2.06l-3.95,1.07l-11.1,-3.15l-0.17,0.0l-1.84,0.53l-0.1,0.53l3.97,2.97l0.15,1.77l0.16,4.14l0.19,0.27l3.21,1.22l1.94,1.03l0.44,-0.22l0.32,-1.94l-0.07,-0.25l-1.32,-1.52l1.25,-1.2l5.87,2.45l0.24,-0.01l2.11,-0.98l0.13,-0.42l-1.55,-2.75l5.52,-3.84l2.13,0.22l2.28,1.42l0.43,-0.12l1.46,-2.87l-0.04,-0.33l-1.97,-2.37l1.14,-2.38l-0.02,-0.3l-1.42,-2.07l6.15,1.22l1.14,1.92l-2.74,0.46l-0.25,0.3l0.02,2.36l0.12,0.24l1.97,1.44l0.25,0.05l3.87,-0.91l0.22,-0.23l0.58,-2.55l5.09,-1.98l8.67,-3.69l1.22,0.14l-2.06,2.2l0.18,0.5l3.11,0.45l0.23,-0.07l1.71,-1.41l4.59,-0.12l0.12,-0.03l3.53,-1.72l2.7,2.48l0.42,-0.01l2.85,-2.88l-0.0,-0.43l-2.42,-2.35l1.0,-1.13l7.2,1.31l3.42,1.36l9.06,4.97l0.39,-0.08l1.67,-2.27l-0.04,-0.4l-2.46,-2.23l-0.06,-0.82l-0.26,-0.27l-2.64,-0.38l0.69,-1.76l0.0,-0.22l-1.32,-3.47l-0.07,-1.27l4.52,-4.09l0.08,-0.11l1.6,-4.18l1.67,-0.84l6.33,1.2l0.46,2.31l-2.31,3.67l0.05,0.38l1.49,1.41l0.77,3.04l-0.56,6.05l0.09,0.24l2.62,2.54l-0.99,2.65l-4.87,5.96l0.17,0.48l2.86,0.61l0.31,-0.13l0.94,-1.42l2.67,-1.04l0.18,-0.19l0.64,-2.01l2.11,-1.98l0.05,-0.37l-1.38,-2.32l1.11,-2.74l-0.24,-0.41l-2.53,-0.33l-0.53,-2.16l1.96,-4.42l-0.05,-0.32l-3.03,-3.48l4.21,-2.94l0.12,-0.3l-0.52,-3.04l0.72,-0.06l1.18,2.35l-0.97,4.39l0.2,0.35l2.68,0.84l0.37,-0.38l-1.05,-3.07l3.89,-1.71l5.05,-0.24l4.55,2.62l0.36,-0.05l0.05,-0.36l-2.19,-3.84l-0.23,-4.78l4.07,-0.92l5.98,0.21l5.47,-0.64l0.2,-0.48l-1.88,-2.37l2.65,-2.99l2.75,-0.13l0.12,-0.03l4.82,-2.48l6.56,-0.67l0.23,-0.14l0.76,-1.27l6.33,-0.46l1.97,1.11l0.28,0.01l5.55,-2.71l4.53,0.08l0.29,-0.21l0.67,-2.18l2.29,-2.15l5.75,-2.13l3.48,1.4l-2.7,1.03l-0.19,0.31l0.26,0.26l5.47,0.78ZM871.83,65.73l0.25,-0.15l1.99,0.01l3.3,1.2l-0.08,0.22l-2.41,1.03l-5.73,0.49l-0.31,-1.0l2.99,-1.8ZM797.64,48.44l-2.22,1.51l-3.85,-0.43l-4.35,-1.85l0.42,-1.13l4.42,0.72l5.59,1.17ZM783.82,46.06l-1.71,3.25l-9.05,-0.14l-4.11,1.15l-4.64,-3.04l1.21,-3.13l3.11,-0.91l6.53,0.22l8.66,2.59ZM780.37,145.71l2.28,5.23l-3.09,-0.89l-0.37,0.19l-1.54,4.65l0.04,0.27l2.38,3.17l-0.05,1.4l-1.41,-1.41l-0.46,0.04l-1.23,1.81l-0.33,-1.86l0.28,-3.1l-0.28,-3.41l0.58,-2.46l0.11,-4.39l-0.03,-0.13l-1.44,-3.2l0.21,-4.39l2.19,-1.49l0.09,-0.41l-0.81,-1.3l0.48,-0.21l0.56,1.94l0.86,3.23l-0.05,3.36l1.03,3.35ZM780.16,57.18l-3.4,0.03l-5.06,-0.53l1.97,-1.59l2.95,-0.42l3.35,1.75l0.18,0.77ZM683.84,31.18l-13.29,1.97l4.16,-6.56l1.88,-0.58l1.77,0.34l6.08,3.02l-0.6,1.8ZM670.94,28.02l-5.18,0.65l-6.89,-1.58l-4.03,-2.07l-1.88,-3.98l-0.18,-0.16l-2.8,-0.93l5.91,-3.62l5.25,-1.29l4.73,2.88l5.63,5.44l-0.57,4.66ZM564.37,68.98l-0.85,0.23l-7.93,-0.57l-0.6,-1.84l-0.21,-0.2l-4.34,-1.18l-0.3,-2.08l2.34,-0.92l0.19,-0.29l-0.08,-2.43l4.85,-4.0l-0.12,-0.52l-1.68,-0.43l5.47,-3.94l0.11,-0.33l-0.6,-2.02l5.36,-2.55l8.22,-3.27l8.29,-0.96l4.34,-1.94l4.67,-0.65l1.45,1.72l-1.43,1.37l-8.8,2.52l-7.65,2.42l-7.92,4.84l-3.73,4.75l-3.92,4.58l-0.07,0.23l0.51,3.88l0.11,0.2l4.32,3.39ZM548.86,18.57l-3.28,0.75l-2.25,0.44l-0.22,0.19l-0.3,0.81l-2.67,0.86l-2.27,-1.14l1.2,-1.51l-0.23,-0.49l-3.14,-0.1l2.48,-0.54l3.55,-0.07l0.44,1.36l0.49,0.12l1.4,-1.35l2.2,-0.9l3.13,1.08l-0.54,0.49ZM477.5,133.25l-4.21,0.05l-2.69,-0.34l0.39,-1.03l3.24,-1.06l2.51,0.58l0.85,0.43l-0.2,0.71l-0.0,0.15l0.12,0.52Z",
                name: "Russia"
            },
            RW: {
                path: "M497.03,288.12l0.78,1.11l-0.12,1.19l-0.49,0.21l-1.25,-0.15l-0.3,0.16l-0.67,1.24l-1.01,-0.13l0.16,-0.92l0.22,-0.12l0.15,-0.24l0.09,-1.37l0.49,-0.48l0.42,0.18l0.25,-0.01l1.26,-0.65Z",
                name: "Rwanda"
            },
            RS: {
                path: "M469.75,168.65l0.21,-0.21l0.36,-1.44l-0.08,-0.29l-1.06,-1.03l0.54,-1.16l-0.28,-0.43l-0.26,0.0l0.55,-0.67l-0.01,-0.39l-0.77,-0.86l-0.45,-0.89l1.56,-0.67l1.39,0.12l1.22,1.1l0.26,0.91l0.16,0.19l1.38,0.66l0.17,1.12l0.14,0.21l1.46,0.9l0.35,-0.03l0.62,-0.54l0.09,0.06l-0.28,0.25l-0.03,0.42l0.29,0.34l-0.44,0.5l-0.07,0.26l0.22,1.12l0.07,0.14l1.02,1.1l-0.81,0.84l-0.42,0.96l0.04,0.3l0.12,0.15l-0.15,0.16l-1.04,0.04l-0.39,0.08l0.33,-0.81l-0.29,-0.41l-0.21,0.01l-0.39,-0.45l-0.13,-0.09l-0.32,-0.11l-0.27,-0.4l-0.14,-0.11l-0.4,-0.16l-0.31,-0.37l-0.34,-0.09l-0.45,0.17l-0.18,0.18l-0.29,0.84l-0.96,-0.65l-0.81,-0.33l-0.32,-0.37l-0.22,-0.18Z",
                name: "Republic of Serbia"
            },
            LT: {
                path: "M478.13,133.31l-0.14,-0.63l0.25,-0.88l-0.15,-0.35l-1.17,-0.58l-2.43,-0.57l-0.45,-2.51l2.58,-0.97l4.14,0.22l2.3,-0.32l0.26,0.54l0.22,0.17l1.26,0.22l2.25,1.6l0.19,1.23l-1.87,1.01l-0.14,0.18l-0.54,1.83l-2.54,1.21l-2.18,-0.02l-0.52,-0.91l-0.18,-0.14l-1.11,-0.32Z",
                name: "Lithuania"
            },
            LU: {
                path: "M435.95,147.99l0.33,0.49l-0.11,1.07l-0.39,0.04l-0.29,-0.15l0.21,-1.4l0.25,-0.05Z",
                name: "Luxembourg"
            },
            LR: {
                path: "M401.37,273.67l-0.32,0.01l-2.48,-1.15l-2.24,-1.89l-2.14,-1.38l-1.47,-1.42l0.44,-0.59l0.05,-0.13l0.12,-0.65l1.07,-1.3l1.08,-1.09l0.52,-0.07l0.43,-0.18l0.84,1.24l-0.15,0.89l0.07,0.25l0.49,0.54l0.22,0.1l0.71,0.01l0.27,-0.16l0.42,-0.83l0.19,0.02l-0.06,0.52l0.23,1.12l-0.5,1.03l0.06,0.35l0.73,0.69l0.14,0.08l0.71,0.15l0.92,0.91l0.06,0.76l-0.17,0.22l-0.06,0.15l-0.17,1.8Z",
                name: "Liberia"
            },
            RO: {
                path: "M477.94,155.19l1.02,-0.64l1.49,0.33l1.52,0.01l1.09,0.73l0.32,0.01l0.81,-0.46l1.8,-0.3l0.18,-0.1l0.54,-0.64l0.86,0.0l0.64,0.26l0.71,0.87l0.8,1.35l1.39,1.81l0.07,1.25l-0.26,1.3l0.01,0.15l0.45,1.42l0.15,0.18l1.12,0.57l0.25,0.01l1.05,-0.45l0.86,0.4l0.03,0.43l-0.92,0.51l-0.63,-0.24l-0.4,0.22l-0.64,3.41l-1.12,-0.24l-1.78,-1.09l-0.23,-0.04l-2.95,0.71l-1.25,0.77l-3.55,-0.16l-1.89,-0.47l-0.14,-0.0l-0.75,0.17l-0.61,-1.07l-0.3,-0.36l0.36,-0.32l-0.04,-0.48l-0.62,-0.38l-0.36,0.03l-0.62,0.54l-1.15,-0.71l-0.18,-1.14l-0.17,-0.22l-1.4,-0.67l-0.24,-0.86l-0.09,-0.14l-0.96,-0.87l1.49,-0.44l0.16,-0.11l1.51,-2.14l1.15,-2.09l1.44,-0.63Z",
                name: "Romania"
            },
            GW: {
                path: "M383.03,256.73l-1.12,-0.88l-0.14,-0.06l-0.94,-0.15l-0.43,-0.54l0.01,-0.27l-0.13,-0.26l-0.68,-0.48l-0.05,-0.16l0.99,-0.31l0.77,0.08l0.15,-0.02l0.61,-0.26l4.25,0.1l-0.02,0.44l-0.19,0.18l-0.08,0.29l0.17,0.66l-0.17,0.14l-0.44,0.0l-0.16,0.05l-0.57,0.37l-0.66,-0.04l-0.24,0.1l-0.92,1.03Z",
                name: "Guinea Bissau"
            },
            GT: {
                path: "M195.13,249.89l-1.05,-0.35l-1.5,-0.04l-1.06,-0.47l-1.19,-0.93l0.04,-0.53l0.27,-0.55l-0.03,-0.31l-0.24,-0.32l1.02,-1.77l3.04,-0.01l0.3,-0.28l0.06,-0.88l-0.19,-0.3l-0.3,-0.11l-0.23,-0.45l-0.11,-0.12l-0.9,-0.58l-0.35,-0.33l0.37,-0.0l0.3,-0.3l0.0,-1.15l4.05,0.02l-0.02,1.74l-0.2,2.89l0.3,0.32l0.67,-0.0l0.75,0.42l0.4,-0.11l-0.62,0.53l-1.17,0.7l-0.13,0.16l-0.18,0.49l0.0,0.21l0.14,0.34l-0.35,0.44l-0.49,0.13l-0.2,0.41l0.03,0.06l-0.27,0.16l-0.86,0.64l-0.12,0.22ZM199.35,245.38l0.07,-0.13l0.05,0.02l-0.13,0.11Z",
                name: "Guatemala"
            },
            GR: {
                path: "M487.2,174.55l-0.64,1.54l-0.43,0.24l-1.41,-0.08l-1.28,-0.28l-0.14,0.0l-3.03,0.77l-0.13,0.51l1.39,1.34l-0.78,0.29l-1.2,0.0l-1.23,-1.42l-0.47,0.02l-0.47,0.65l-0.04,0.27l0.56,1.76l0.06,0.11l1.02,1.12l-0.66,0.45l-0.04,0.46l1.39,1.35l1.15,0.79l0.02,1.06l-1.91,-0.63l-0.36,0.42l0.56,1.12l-1.2,0.23l-0.22,0.4l0.8,2.14l-1.15,0.02l-1.89,-1.15l-0.89,-2.19l-0.43,-1.91l-0.05,-0.11l-0.98,-1.35l-1.24,-1.62l-0.13,-0.63l1.07,-1.32l0.06,-0.14l0.13,-0.81l0.68,-0.36l0.16,-0.25l0.03,-0.54l1.4,-0.23l0.12,-0.05l0.87,-0.6l1.26,0.05l0.25,-0.11l0.34,-0.43l0.33,-0.07l1.81,0.08l0.13,-0.02l1.87,-0.77l1.64,0.97l0.19,0.04l2.28,-0.28l0.26,-0.29l0.02,-0.95l0.56,0.36ZM480.44,192.0l1.05,0.74l0.01,0.0l-1.26,-0.23l0.2,-0.51ZM481.76,192.79l1.86,-0.15l1.53,0.17l-0.02,0.19l0.34,0.3l-2.28,0.15l0.01,-0.13l-0.25,-0.31l-1.19,-0.22ZM485.65,193.28l0.65,-0.16l-0.05,0.12l-0.6,0.04Z",
                name: "Greece"
            },
            GQ: {
                path: "M444.81,282.04l-0.21,-0.17l0.74,-2.4l3.56,0.05l0.02,2.42l-3.34,-0.02l-0.76,0.13Z",
                name: "Equatorial Guinea"
            },
            GY: {
                path: "M271.34,264.25l1.43,0.81l1.44,1.53l0.06,1.19l0.28,0.28l0.84,0.05l2.13,1.92l-0.34,1.93l-1.37,0.59l-0.17,0.34l0.12,0.51l-0.43,1.21l0.03,0.26l1.11,1.82l0.26,0.14l0.56,0.0l0.32,1.29l1.25,1.78l-0.08,0.01l-1.34,-0.21l-0.24,0.06l-0.78,0.64l-1.06,0.41l-0.76,0.1l-0.22,0.15l-0.18,0.32l-0.95,-0.1l-1.38,-1.05l-0.19,-1.13l-0.6,-1.18l0.37,-1.96l0.65,-0.83l0.03,-0.32l-0.57,-1.17l-0.15,-0.14l-0.62,-0.27l0.25,-0.85l-0.08,-0.3l-0.58,-0.58l-0.24,-0.09l-1.15,0.1l-1.41,-1.58l0.48,-0.49l0.09,-0.22l-0.04,-0.92l1.31,-0.34l0.73,-0.52l0.04,-0.44l-0.75,-0.82l0.16,-0.66l1.74,-1.3Z",
                name: "Guyana"
            },
            GE: {
                path: "M525.41,174.19l0.26,-0.88l-0.0,-0.17l-0.63,-2.06l-0.1,-0.15l-1.45,-1.12l-0.11,-0.05l-1.31,-0.33l-0.66,-0.69l1.97,0.48l3.65,0.49l3.3,1.41l0.39,0.5l0.33,0.1l1.43,-0.45l2.14,0.58l0.7,1.14l0.13,0.12l1.06,0.47l-0.18,0.11l-0.08,0.43l1.08,1.41l-0.06,0.06l-1.16,-0.15l-1.82,-0.84l-0.31,0.04l-0.55,0.44l-3.29,0.44l-2.32,-1.41l-0.17,-0.04l-2.25,0.12Z",
                name: "Georgia"
            },
            GB: {
                path: "M412.82,118.6l-2.31,3.4l-0.0,0.33l0.31,0.13l2.52,-0.49l2.34,0.02l-0.56,2.51l-2.22,3.13l0.22,0.47l2.43,0.21l2.35,4.35l0.17,0.14l1.58,0.51l1.49,3.78l0.73,1.37l0.2,0.15l2.76,0.59l-0.25,1.75l-1.18,0.91l-0.08,0.39l0.87,1.49l-1.96,1.51l-3.31,-0.02l-4.15,0.88l-1.07,-0.59l-0.35,0.04l-1.55,1.44l-2.17,-0.35l-0.22,0.05l-1.61,1.15l-0.78,-0.38l3.31,-3.12l2.18,-0.7l0.21,-0.31l-0.26,-0.27l-3.78,-0.54l-0.48,-0.9l2.3,-0.92l0.13,-0.46l-1.29,-1.71l0.39,-1.83l3.46,0.29l0.32,-0.24l0.37,-1.99l-0.06,-0.24l-1.71,-2.17l-0.18,-0.11l-2.91,-0.58l-0.43,-0.68l0.82,-1.4l-0.03,-0.35l-0.82,-0.97l-0.46,0.01l-0.85,1.05l-0.11,-2.6l-0.05,-0.16l-1.19,-1.7l0.86,-3.53l1.81,-2.75l1.88,0.26l2.38,-0.24ZM406.39,132.84l-1.09,1.92l-1.65,-0.62l-1.26,0.02l0.41,-1.46l0.0,-0.16l-0.42,-1.51l1.62,-0.11l2.39,1.92Z",
                name: "United Kingdom"
            },
            GA: {
                path: "M448.76,294.47l-2.38,-2.34l-1.63,-2.04l-1.46,-2.48l0.06,-0.66l0.54,-0.81l0.61,-1.82l0.46,-1.69l0.63,-0.11l3.62,0.03l0.3,-0.3l-0.02,-2.75l0.88,-0.12l1.47,0.32l0.13,0.0l1.39,-0.3l-0.13,0.87l0.03,0.19l0.7,1.29l0.3,0.16l1.74,-0.19l0.36,0.29l-1.01,2.7l0.05,0.29l1.13,1.42l0.25,1.82l-0.3,1.56l-0.64,0.99l-1.93,-0.09l-1.26,-1.13l-0.5,0.17l-0.16,0.91l-1.48,0.27l-0.12,0.05l-0.86,0.63l-0.08,0.39l0.81,1.42l-1.48,1.08Z",
                name: "Gabon"
            },
            GN: {
                path: "M399.83,265.31l-0.69,-0.06l-0.3,0.16l-0.43,0.85l-0.39,-0.01l-0.3,-0.33l0.14,-0.87l-0.05,-0.22l-1.05,-1.54l-0.37,-0.11l-0.61,0.27l-0.84,0.12l0.02,-0.54l-0.04,-0.17l-0.35,-0.57l0.07,-0.63l-0.03,-0.17l-0.57,-1.11l-0.7,-0.9l-0.24,-0.12l-2.0,-0.0l-0.19,0.07l-0.51,0.42l-0.6,0.05l-0.21,0.11l-0.43,0.55l-0.3,0.7l-1.04,0.86l-0.91,-1.24l-1.0,-1.02l-0.69,-0.37l-0.52,-0.42l-0.3,-1.11l-0.37,-0.56l-0.1,-0.1l-0.4,-0.23l0.77,-0.85l0.62,0.04l0.18,-0.05l0.58,-0.38l0.46,-0.0l0.19,-0.07l0.39,-0.34l0.1,-0.3l-0.17,-0.67l0.15,-0.14l0.09,-0.2l0.03,-0.57l0.87,0.02l1.76,0.6l0.13,0.01l0.55,-0.06l0.22,-0.13l0.08,-0.12l1.18,0.17l0.17,-0.02l0.09,0.56l0.3,0.25l0.4,-0.0l0.14,-0.03l0.56,-0.29l0.23,0.05l0.63,0.59l0.15,0.07l1.07,0.2l0.24,-0.06l0.65,-0.52l0.77,-0.32l0.55,-0.32l0.3,0.04l0.44,0.45l0.34,0.74l0.84,0.87l-0.35,0.45l-0.06,0.15l-0.1,0.82l0.42,0.31l0.35,-0.16l0.05,0.04l-0.1,0.59l0.09,0.27l0.42,0.4l-0.06,0.02l-0.18,0.21l-0.2,0.86l0.03,0.21l0.56,1.02l0.52,1.71l-0.65,0.21l-0.15,0.12l-0.24,0.35l-0.03,0.28l0.16,0.41l-0.1,0.76l-0.12,0.0Z",
                name: "Guinea"
            },
            GM: {
                path: "M379.18,251.48l0.15,-0.55l2.51,-0.07l0.21,-0.09l0.48,-0.52l0.58,-0.03l0.91,0.58l0.16,0.05l0.78,0.01l0.14,-0.03l0.59,-0.31l0.16,0.24l-0.71,0.38l-0.94,-0.04l-1.02,-0.51l-0.3,0.01l-0.86,0.55l-0.37,0.02l-0.14,0.04l-0.53,0.31l-1.81,-0.04Z",
                name: "Gambia"
            },
            GL: {
                path: "M304.13,6.6l8.19,-3.63l8.72,0.28l0.19,-0.06l3.12,-2.28l8.75,-0.61l19.94,0.8l14.93,4.75l-3.92,2.01l-9.52,0.27l-13.48,0.6l-0.27,0.2l0.09,0.33l1.26,1.09l0.22,0.07l8.81,-0.67l7.49,2.07l0.19,-0.01l4.68,-1.78l1.76,1.84l-2.59,3.26l-0.01,0.36l0.34,0.11l6.35,-2.2l12.09,-2.32l7.31,1.14l1.17,2.13l-9.9,4.05l-1.43,1.32l-7.91,0.98l-0.26,0.31l0.29,0.29l5.25,0.25l-2.63,3.72l-2.02,3.61l-0.04,0.15l0.08,6.05l0.07,0.19l2.61,3.0l-3.4,0.2l-4.12,1.66l-0.04,0.54l4.5,2.67l0.53,3.9l-2.39,0.42l-0.19,0.48l2.91,3.83l-5.0,0.32l-0.27,0.22l0.12,0.33l2.69,1.84l-0.65,1.35l-3.36,0.71l-3.46,0.01l-0.21,0.51l3.05,3.15l0.02,1.53l-4.54,-1.79l-0.32,0.06l-1.29,1.26l0.11,0.5l3.33,1.15l3.17,2.74l0.85,3.29l-4.0,0.78l-1.83,-1.66l-3.1,-2.64l-0.36,-0.02l-0.13,0.33l0.8,2.92l-2.76,2.26l-0.09,0.33l0.28,0.2l6.59,0.19l2.47,0.18l-5.86,3.38l-6.76,3.43l-7.26,1.48l-2.73,0.02l-0.16,0.05l-2.67,1.72l-3.44,4.42l-5.28,2.86l-1.73,0.18l-3.33,1.01l-3.59,0.96l-0.15,0.1l-2.15,2.52l-0.07,0.19l-0.03,2.76l-1.21,2.49l-4.03,3.1l-0.1,0.33l0.98,2.94l-2.31,6.57l-3.21,0.21l-3.6,-3.0l-0.19,-0.07l-4.9,-0.02l-2.29,-1.97l-1.69,-3.78l-4.31,-4.86l-1.23,-2.52l-0.34,-3.58l-0.08,-0.17l-3.35,-3.67l0.85,-2.92l-0.09,-0.31l-1.5,-1.34l2.33,-4.7l3.67,-1.57l0.15,-0.13l1.02,-1.93l0.52,-3.47l-0.44,-0.31l-2.85,1.57l-1.33,0.64l-2.12,0.59l-2.81,-1.32l-0.15,-2.79l0.88,-2.17l2.09,-0.06l5.07,1.2l0.34,-0.17l-0.11,-0.37l-4.3,-2.9l-2.24,-1.58l-0.25,-0.05l-2.38,0.62l-1.7,-0.93l2.62,-4.1l-0.03,-0.36l-1.51,-1.75l-1.97,-3.3l-3.01,-5.21l-0.1,-0.11l-3.04,-1.85l0.03,-1.94l-0.18,-0.28l-6.82,-3.01l-5.35,-0.38l-6.69,0.21l-6.03,0.37l-2.81,-1.59l-3.84,-2.9l5.94,-1.5l5.01,-0.28l0.28,-0.29l-0.26,-0.31l-10.68,-1.38l-5.38,-2.1l0.27,-1.68l9.3,-2.6l9.18,-2.68l0.19,-0.16l0.97,-2.05l-0.18,-0.42l-6.29,-1.91l1.81,-1.9l8.58,-4.05l3.6,-0.63l0.23,-0.4l-0.92,-2.37l5.59,-1.5l7.66,-0.95l7.58,-0.05l2.65,1.84l0.31,0.02l6.52,-3.29l5.85,2.24l3.55,0.49l5.17,1.95l0.38,-0.16l-0.13,-0.39l-5.77,-3.16l0.29,-2.26Z",
                name: "Greenland"
            },
            KW: {
                path: "M540.87,207.81l0.41,0.94l-0.18,0.51l0.0,0.21l0.65,1.66l-1.15,0.05l-0.54,-1.12l-0.24,-0.17l-1.73,-0.2l1.44,-2.06l1.33,0.18Z",
                name: "Kuwait"
            },
            GH: {
                path: "M423.16,269.88l-3.58,1.34l-1.41,0.87l-2.13,0.69l-1.91,-0.61l0.09,-0.75l-0.03,-0.17l-1.04,-2.07l0.62,-2.7l1.04,-2.08l0.03,-0.19l-1.0,-5.46l0.05,-1.12l4.04,-0.11l1.08,0.18l0.18,-0.03l0.72,-0.36l0.75,0.13l-0.11,0.48l0.06,0.26l0.98,1.22l-0.0,1.77l0.24,1.99l0.05,0.13l0.55,0.81l-0.52,2.14l0.19,1.37l0.69,1.66l0.38,0.62Z",
                name: "Ghana"
            },
            OM: {
                path: "M568.16,231.0l-0.08,0.1l-0.84,1.61l-0.93,-0.11l-0.27,0.11l-0.58,0.73l-0.4,1.32l-0.01,0.14l0.29,1.61l-0.07,0.09l-1.0,-0.01l-0.16,0.04l-1.56,0.97l-0.14,0.2l-0.23,1.17l-0.41,0.4l-1.44,-0.02l-0.17,0.05l-0.98,0.65l-0.13,0.25l0.01,0.87l-0.97,0.57l-1.27,-0.22l-0.19,0.03l-1.63,0.84l-0.88,0.11l-2.55,-5.57l7.2,-2.49l0.19,-0.19l1.67,-5.23l-0.03,-0.25l-1.1,-1.78l0.05,-0.89l0.68,-1.03l0.05,-0.16l0.01,-0.89l0.96,-0.44l0.07,-0.5l-0.32,-0.26l0.16,-1.31l0.85,-0.01l1.03,1.67l0.09,0.09l1.4,0.96l0.11,0.05l1.82,0.34l1.37,0.45l1.75,2.32l0.13,0.1l0.7,0.26l-0.0,0.3l-1.25,2.19l-1.01,0.8ZM561.88,218.47l-0.01,0.02l-0.15,-0.29l0.3,-0.38l-0.14,0.65Z",
                name: "Oman"
            },
            _3: {
                path: "M543.2,261.06l-1.07,1.46l-1.65,1.99l-1.91,0.01l-8.08,-2.95l-0.89,-0.84l-0.9,-1.19l-0.81,-1.23l0.44,-0.73l0.76,-1.12l0.49,0.28l0.52,1.05l1.13,1.06l0.2,0.08l1.24,0.01l2.42,-0.65l2.77,-0.31l2.17,-0.78l1.31,-0.19l0.84,-0.43l1.03,-0.06l-0.01,4.54Z",
                name: "Somaliland"
            },
            _2: {
                path: "M384.23,230.37l0.07,-0.06l0.28,-0.89l0.99,-1.13l0.07,-0.13l0.8,-3.54l3.4,-2.8l0.09,-0.13l0.76,-2.17l0.07,5.5l-2.07,0.21l-0.24,0.17l-0.61,1.36l-0.02,0.16l0.43,3.46l-4.01,-0.01ZM391.82,218.2l0.07,-0.06l0.75,-1.93l1.86,-0.25l0.94,0.34l1.14,0.0l0.18,-0.06l0.73,-0.56l1.41,-0.08l-0.0,2.72l-7.08,-0.12Z",
                name: "Western Sahara"
            },
            _1: {
                path: "M472.71,172.84l-0.07,-0.43l-0.16,-0.22l-0.53,-0.27l-0.38,-0.58l0.3,-0.43l0.51,-0.19l0.18,-0.18l0.3,-0.87l0.12,-0.04l0.22,0.26l0.12,0.09l0.38,0.15l0.28,0.41l0.15,0.12l0.34,0.12l0.43,0.5l0.15,0.07l-0.12,0.3l-0.27,0.32l-0.03,0.18l-0.31,0.06l-1.48,0.47l-0.15,0.17Z",
                name: "Kosovo"
            },
            _0: {
                path: "M503.54,192.92l0.09,-0.17l0.41,0.01l-0.08,0.01l-0.42,0.15ZM504.23,192.76l1.02,0.02l0.4,-0.13l-0.09,0.29l0.03,0.08l-0.35,0.16l-0.24,-0.04l-0.06,-0.1l-0.18,-0.17l-0.19,-0.08l-0.33,-0.02Z",
                name: "Northern Cyprus"
            },
            JO: {
                path: "M510.26,200.93l0.28,-0.57l2.53,1.0l0.27,-0.02l4.57,-2.77l0.84,2.84l-0.28,0.25l-4.95,1.37l-0.14,0.49l2.24,2.48l-0.5,0.28l-0.13,0.14l-0.35,0.78l-1.76,0.35l-0.2,0.14l-0.57,0.94l-0.94,0.73l-2.45,-0.38l-0.03,-0.12l1.23,-4.32l-0.04,-1.1l0.34,-0.75l0.03,-0.12l0.0,-1.63Z",
                name: "Jordan"
            },
            HR: {
                path: "M455.49,162.73l1.53,0.09l0.24,-0.1l0.29,-0.34l0.64,0.38l0.14,0.04l0.98,0.06l0.32,-0.3l-0.01,-0.66l0.67,-0.25l0.19,-0.22l0.21,-1.11l1.72,-0.72l0.65,0.32l1.94,1.37l2.07,0.6l0.22,-0.02l0.67,-0.33l0.47,0.94l0.67,0.76l-0.63,0.77l-0.91,-0.55l-0.16,-0.04l-1.69,0.04l-2.2,-0.51l-1.17,0.07l-0.21,0.11l-0.36,0.42l-0.67,-0.53l-0.46,0.12l-0.52,1.29l0.05,0.31l1.21,1.42l0.58,0.99l1.15,1.14l0.95,0.68l0.92,1.23l0.1,0.09l1.75,0.91l-1.87,-0.89l-1.5,-1.11l-2.23,-0.88l-1.77,-1.9l0.12,-0.06l0.1,-0.47l-1.07,-1.22l-0.04,-0.94l-0.21,-0.27l-1.61,-0.49l-0.35,0.14l-0.53,0.93l-0.41,-0.57l0.04,-0.73Z",
                name: "Croatia"
            },
            HT: {
                path: "M237.82,234.68l1.35,0.1l1.95,0.37l0.18,1.15l-0.16,0.83l-0.51,0.37l-0.06,0.44l0.57,0.68l-0.02,0.22l-1.31,-0.35l-1.26,0.17l-1.49,-0.18l-0.15,0.02l-1.03,0.43l-1.02,-0.61l0.09,-0.36l2.04,0.32l1.9,0.21l0.19,-0.05l0.9,-0.58l0.05,-0.47l-1.05,-1.03l0.02,-0.86l-0.23,-0.3l-1.13,-0.29l0.18,-0.23Z",
                name: "Haiti"
            },
            HU: {
                path: "M461.96,157.92l0.68,-1.66l-0.03,-0.29l-0.15,-0.22l0.84,-0.0l0.3,-0.26l0.12,-0.84l0.88,0.57l0.98,0.38l0.16,0.01l2.1,-0.39l0.23,-0.21l0.14,-0.45l0.88,-0.1l1.06,-0.43l0.13,0.1l0.28,0.04l1.18,-0.4l0.14,-0.1l0.52,-0.67l0.63,-0.15l2.6,0.95l0.26,-0.03l0.38,-0.23l1.12,0.7l0.1,0.49l-1.31,0.57l-0.14,0.13l-1.18,2.14l-1.44,2.04l-1.85,0.55l-1.51,-0.13l-0.14,0.02l-1.92,0.82l-0.85,0.42l-1.91,-0.55l-1.83,-1.31l-0.74,-0.37l-0.44,-0.97l-0.26,-0.18Z",
                name: "Hungary"
            },
            HN: {
                path: "M202.48,251.87l-0.33,-0.62l-0.18,-0.14l-0.5,-0.15l0.13,-0.76l-0.11,-0.28l-0.34,-0.28l-0.6,-0.23l-0.18,-0.01l-0.81,0.22l-0.16,-0.24l-0.72,-0.39l-0.51,-0.48l-0.12,-0.07l-0.31,-0.09l0.24,-0.3l0.04,-0.3l-0.16,-0.4l0.1,-0.28l1.14,-0.69l1.0,-0.86l0.09,0.04l0.3,-0.05l0.47,-0.39l0.49,-0.03l0.14,0.13l0.29,0.06l0.31,-0.1l1.16,0.22l1.24,-0.08l0.81,-0.28l0.29,-0.25l0.63,0.1l0.69,0.18l0.65,-0.06l0.49,-0.2l1.04,0.32l0.38,0.06l0.7,0.44l0.71,0.56l0.92,0.41l0.1,0.11l-0.11,-0.01l-0.23,0.09l-0.3,0.3l-0.76,0.29l-0.58,0.0l-0.15,0.04l-0.45,0.26l-0.31,-0.07l-0.37,-0.34l-0.28,-0.07l-0.26,0.07l-0.18,0.15l-0.23,0.43l-0.04,-0.0l-0.33,0.28l-0.03,0.4l-0.76,0.61l-0.45,0.3l-0.15,0.16l-0.51,-0.36l-0.41,0.06l-0.45,0.56l-0.41,-0.01l-0.59,0.06l-0.27,0.31l0.04,0.96l-0.07,0.0l-0.25,0.16l-0.24,0.45l-0.42,0.06Z",
                name: "Honduras"
            },
            PR: {
                path: "M254.95,238.31l1.15,0.21l0.2,0.23l-0.36,0.36l-1.76,-0.01l-1.2,0.07l-0.09,-0.69l0.17,-0.18l1.89,0.01Z",
                name: "Puerto Rico"
            },
            PS: {
                path: "M509.66,201.06l-0.0,1.44l-0.29,0.63l-0.59,0.19l0.02,-0.11l0.52,-0.31l-0.02,-0.53l-0.41,-0.2l0.36,-1.28l0.41,0.17Z",
                name: "West Bank"
            },
            PT: {
                path: "M398.65,173.6l0.75,-0.63l0.7,-0.3l0.51,1.2l0.28,0.18l1.48,-0.0l0.2,-0.08l0.33,-0.3l1.16,0.08l0.52,1.11l-0.95,0.66l-0.13,0.24l-0.03,2.2l-0.33,0.35l-0.08,0.18l-0.08,1.17l-0.86,0.19l-0.2,0.44l0.93,1.64l-0.64,1.79l0.07,0.31l0.72,0.72l-0.24,0.56l-0.9,1.05l-0.07,0.26l0.17,0.77l-0.73,0.54l-1.18,-0.36l-0.16,-0.0l-0.85,0.21l0.31,-1.81l-0.23,-1.87l-0.23,-0.25l-0.99,-0.24l-0.49,-0.91l0.18,-1.72l0.93,-0.99l0.08,-0.16l0.17,-1.17l0.52,-1.76l-0.04,-1.36l-0.51,-1.14l-0.09,-0.8Z",
                name: "Portugal"
            },
            PY: {
                path: "M264.33,341.43l0.93,-2.96l0.07,-1.42l1.1,-2.1l4.19,-0.73l2.22,0.04l2.12,1.21l0.07,0.76l0.7,1.38l-0.16,3.48l0.24,0.31l2.64,0.5l0.19,-0.03l0.9,-0.45l1.47,0.62l0.38,0.64l0.23,2.35l0.3,1.07l0.25,0.21l0.93,0.12l0.16,-0.02l0.8,-0.37l0.61,0.33l-0.0,1.25l-0.33,1.53l-0.5,1.57l-0.39,2.26l-2.14,1.94l-1.85,0.4l-2.74,-0.4l-2.13,-0.62l2.26,-3.75l0.03,-0.24l-0.36,-1.18l-0.17,-0.19l-2.55,-1.03l-3.04,-1.95l-2.07,-0.43l-4.4,-4.12Z",
                name: "Paraguay"
            },
            PA: {
                path: "M213.65,263.79l0.18,-0.43l0.02,-0.18l-0.06,-0.28l0.23,-0.18l-0.01,-0.48l-0.4,-0.29l-0.01,-0.62l0.57,-0.13l0.68,0.69l-0.04,0.39l0.26,0.33l1.0,0.11l0.27,-0.1l0.49,0.44l0.24,0.07l1.34,-0.22l1.04,-0.62l1.49,-0.5l0.86,-0.73l0.99,0.11l0.18,0.28l1.35,0.08l1.02,0.4l0.78,0.72l0.71,0.53l-0.1,0.12l-0.05,0.3l0.53,1.34l-0.28,0.44l-0.6,-0.13l-0.36,0.22l-0.2,0.76l-0.41,-0.36l-0.44,-1.12l0.49,-0.53l-0.14,-0.49l-0.51,-0.14l-0.41,-0.72l-0.11,-0.11l-1.25,-0.7l-0.19,-0.04l-1.1,0.16l-0.22,0.15l-0.47,0.81l-0.9,0.56l-0.49,0.08l-0.22,0.17l-0.25,0.52l0.05,0.32l0.93,1.07l-0.41,0.21l-0.29,0.3l-0.81,0.09l-0.36,-1.26l-0.53,-0.1l-0.21,0.28l-0.5,-0.09l-0.44,-0.88l-0.22,-0.16l-0.99,-0.16l-0.61,-0.28l-0.13,-0.03l-1.0,0.0Z",
                name: "Panama"
            },
            PG: {
                path: "M808.4,298.6l0.62,0.46l1.19,1.56l1.04,0.77l-0.18,0.37l-0.42,0.15l-0.92,-0.82l-1.05,-1.53l-0.27,-0.96ZM804.09,296.06l-0.3,0.26l-0.36,-1.11l-0.66,-1.06l-2.55,-1.89l-1.42,-0.59l0.17,-0.15l1.16,0.6l0.85,0.55l1.01,0.58l0.97,1.02l0.9,0.76l0.24,1.03ZM796.71,297.99l0.15,0.82l0.34,0.24l1.43,-0.19l0.19,-0.11l0.68,-0.82l1.36,-0.87l0.13,-0.31l-0.21,-1.13l1.04,-0.03l0.3,0.25l-0.04,1.17l-0.74,1.34l-1.17,0.18l-0.22,0.15l-0.35,0.62l-2.51,1.13l-1.21,-0.0l-1.99,-0.71l-1.19,-0.58l0.07,-0.28l1.98,0.32l1.46,-0.2l0.24,-0.21l0.25,-0.79ZM789.24,303.52l0.11,0.15l2.19,1.62l1.6,2.62l0.27,0.14l1.09,-0.06l-0.07,0.77l0.23,0.32l1.23,0.27l-0.14,0.09l0.05,0.53l2.39,0.95l-0.11,0.28l-1.33,0.14l-0.51,-0.55l-0.18,-0.09l-4.59,-0.65l-1.87,-1.55l-1.38,-1.35l-1.28,-2.17l-0.16,-0.13l-3.27,-1.1l-0.19,0.0l-2.12,0.72l-1.58,0.85l-0.15,0.31l0.28,1.63l-1.65,0.73l-1.37,-0.4l-2.3,-0.09l-0.08,-15.65l3.95,1.57l4.58,1.42l1.67,1.25l1.32,1.19l0.36,1.39l0.19,0.21l4.06,1.51l0.39,0.85l-1.9,0.22l-0.25,0.39l0.55,1.68Z",
                name: "Papua New Guinea"
            },
            PE: {
                path: "M246.44,329.21l-0.63,1.25l-1.05,0.54l-2.25,-1.33l-0.19,-0.93l-0.16,-0.21l-4.95,-2.58l-4.46,-2.79l-1.87,-1.52l-0.94,-1.91l0.33,-0.6l-0.01,-0.31l-2.11,-3.33l-2.46,-4.66l-2.36,-5.02l-1.04,-1.18l-0.77,-1.81l-0.08,-0.11l-1.95,-1.64l-1.54,-0.88l0.61,-0.85l0.02,-0.31l-1.15,-2.27l0.69,-1.56l1.59,-1.26l0.12,0.42l-0.56,0.47l-0.11,0.25l0.07,0.92l0.36,0.27l0.97,-0.19l0.85,0.23l0.99,1.19l0.41,0.05l1.42,-1.03l0.11,-0.16l0.46,-1.64l1.45,-2.06l2.92,-0.96l0.11,-0.07l2.73,-2.62l0.84,-1.72l0.02,-0.18l-0.3,-1.65l0.28,-0.1l1.49,1.06l0.77,1.14l0.1,0.09l1.08,0.6l1.43,2.55l0.21,0.15l1.86,0.31l0.18,-0.03l1.25,-0.6l0.77,0.37l0.17,0.03l1.4,-0.2l1.57,0.96l-1.45,2.29l0.23,0.46l0.63,0.05l0.66,0.7l-1.51,-0.08l-0.24,0.1l-0.27,0.31l-1.96,0.46l-2.95,1.74l-0.14,0.21l-0.17,1.1l-0.6,0.82l-0.05,0.23l0.21,1.13l-1.31,0.63l-0.17,0.27l0.0,0.91l-0.53,0.37l-0.1,0.37l1.04,2.27l1.31,1.46l-0.44,0.9l0.24,0.43l1.52,0.13l0.87,1.23l0.24,0.13l2.21,0.07l0.18,-0.06l1.55,-1.13l-0.14,3.22l0.23,0.3l1.14,0.29l0.16,-0.0l1.18,-0.36l1.97,3.71l-0.45,0.71l-0.04,0.14l-0.12,1.8l-0.05,2.07l-0.92,1.2l-0.03,0.31l0.38,0.8l-0.48,0.72l-0.02,0.3l1.01,2.02l-1.5,2.64Z",
                name: "Peru"
            },
            PK: {
                path: "M609.08,187.76l1.66,1.21l0.71,2.11l0.2,0.19l3.62,1.01l-1.98,1.95l-2.65,0.4l-3.75,-0.68l-0.26,0.08l-1.23,1.22l-0.07,0.31l0.89,2.46l0.88,1.92l0.1,0.12l1.67,1.14l-1.8,1.35l-0.12,0.25l0.04,1.85l-2.35,2.67l-1.59,2.79l-2.5,2.72l-2.76,-0.2l-0.24,0.09l-2.76,2.83l0.04,0.45l1.54,1.13l0.27,1.94l0.09,0.17l1.34,1.29l0.4,1.83l-5.14,-0.01l-0.22,0.09l-1.53,1.63l-1.52,-0.56l-0.76,-1.88l-1.93,-2.03l-0.25,-0.09l-4.6,0.5l-4.05,0.05l-3.1,0.33l0.77,-2.53l3.48,-1.33l0.19,-0.33l-0.21,-1.24l-0.19,-0.23l-1.01,-0.37l-0.06,-2.18l-0.17,-0.26l-2.32,-1.16l-0.96,-1.57l-0.56,-0.65l3.16,1.05l0.14,0.01l2.45,-0.4l1.44,0.33l0.3,-0.1l0.4,-0.47l1.58,0.22l0.14,-0.01l3.25,-1.14l0.2,-0.27l0.08,-2.23l1.23,-1.38l1.73,0.0l0.28,-0.2l0.22,-0.61l1.68,-0.32l0.86,0.24l0.27,-0.05l0.98,-0.78l0.11,-0.26l-0.13,-1.57l0.96,-1.52l1.51,-0.67l0.14,-0.41l-0.74,-1.4l1.86,0.07l0.26,-0.13l0.69,-1.01l0.05,-0.2l-0.09,-0.94l1.14,-1.09l0.09,-0.28l-0.29,-1.41l-0.51,-1.07l1.23,-1.05l2.6,-0.58l2.86,-0.33l1.33,-0.54l1.3,-0.29Z",
                name: "Pakistan"
            },
            PH: {
                path: "M737.11,263.82l0.25,1.66l0.14,1.34l-0.54,1.46l-0.64,-1.79l-0.5,-0.1l-1.17,1.28l-0.05,0.32l0.74,1.71l-0.49,0.81l-2.6,-1.28l-0.61,-1.57l0.68,-1.07l-0.07,-0.4l-1.59,-1.19l-0.42,0.06l-0.69,0.91l-1.01,-0.08l-0.21,0.06l-1.58,1.2l-0.17,-0.3l0.87,-1.88l1.48,-0.66l1.18,-0.81l0.71,0.92l0.34,0.1l1.9,-0.69l0.18,-0.18l0.34,-0.94l1.57,-0.06l0.29,-0.32l-0.1,-1.38l1.41,0.83l0.36,2.06ZM734.94,254.42l0.56,2.24l-1.41,-0.49l-0.4,0.3l0.07,0.94l0.51,1.3l-0.54,0.26l-0.08,-1.34l-0.25,-0.28l-0.56,-0.1l-0.23,-0.91l1.03,0.14l0.34,-0.31l-0.03,-0.96l-0.06,-0.18l-1.14,-1.44l1.62,0.04l0.57,0.78ZM724.68,238.33l1.48,0.71l0.33,-0.04l0.44,-0.38l0.05,0.13l-0.37,0.97l0.01,0.23l0.81,1.75l-0.59,1.92l-1.37,0.79l-0.14,0.2l-0.39,2.07l0.01,0.14l0.56,2.04l0.23,0.21l1.33,0.28l0.14,-0.0l1.0,-0.27l2.82,1.28l-0.2,1.16l0.12,0.29l0.66,0.5l-0.13,0.56l-1.54,-0.99l-0.89,-1.29l-0.49,0.0l-0.44,0.65l-1.34,-1.28l-0.26,-0.08l-2.18,0.36l-0.96,-0.44l0.09,-0.72l0.69,-0.57l-0.01,-0.47l-0.75,-0.59l-0.47,0.14l-0.15,0.43l-0.86,-1.02l-0.34,-1.02l-0.07,-1.74l0.49,0.41l0.49,-0.21l0.26,-3.99l0.73,-2.1l1.23,0.0ZM731.12,258.92l-0.82,0.75l-0.83,1.64l-0.52,0.5l-1.17,-1.33l0.36,-0.47l0.62,-0.7l0.07,-0.15l0.24,-1.35l0.73,-0.08l-0.31,1.29l0.16,0.34l0.37,-0.09l1.21,-1.6l-0.12,1.24ZM726.66,255.58l0.85,0.45l0.14,0.03l1.28,-0.0l-0.03,0.62l-1.04,0.96l-1.15,0.55l-0.05,-0.71l0.17,-1.26l-0.01,-0.13l-0.16,-0.51ZM724.92,252.06l-0.45,1.5l-0.7,-0.83l-0.95,-1.43l1.44,0.06l0.67,0.7ZM717.48,261.28l-1.87,1.35l0.21,-0.3l1.81,-1.57l1.5,-1.75l0.97,-1.84l0.23,1.08l-1.56,1.33l-1.29,1.7Z",
                name: "Philippines"
            },
            PL: {
                path: "M458.8,144.25l-0.96,-1.98l0.18,-1.06l-0.01,-0.15l-0.62,-1.8l-0.82,-1.11l0.56,-0.73l0.05,-0.28l-0.51,-1.51l1.48,-0.87l3.88,-1.58l3.06,-1.14l2.23,0.52l0.15,0.66l0.29,0.23l2.4,0.04l3.11,0.39l4.56,-0.05l1.12,0.32l0.51,0.89l0.1,1.45l0.03,0.12l0.66,1.23l-0.01,1.08l-1.33,0.61l-0.14,0.41l0.74,1.5l0.07,1.53l1.22,2.79l-0.19,0.66l-1.09,0.33l-0.14,0.09l-2.27,2.72l-0.04,0.31l0.35,0.8l-2.22,-1.16l-0.21,-0.02l-1.72,0.44l-1.1,-0.31l-0.21,0.02l-1.3,0.61l-1.11,-1.02l-0.32,-0.05l-0.81,0.35l-1.15,-1.61l-0.21,-0.12l-1.65,-0.17l-0.19,-0.82l-0.23,-0.23l-1.72,-0.37l-0.34,0.17l-0.25,0.56l-0.88,-0.44l0.12,-0.69l-0.25,-0.35l-1.78,-0.27l-1.08,-0.97Z",
                name: "Poland"
            },
            ZM: {
                path: "M502.81,308.32l1.09,1.04l0.58,1.94l-0.39,0.66l-0.5,2.05l-0.0,0.14l0.45,1.95l-0.69,0.77l-0.06,0.11l-0.76,2.37l0.15,0.36l0.62,0.31l-6.85,1.9l-0.22,0.33l0.2,1.54l-1.62,0.3l-0.12,0.05l-1.43,1.02l-0.11,0.15l-0.25,0.73l-0.73,0.17l-0.14,0.08l-2.18,2.12l-1.33,1.6l-0.65,0.05l-0.83,-0.29l-2.75,-0.28l-0.24,-0.1l-0.15,-0.27l-0.99,-0.58l-0.12,-0.04l-1.73,-0.14l-1.88,0.54l-1.5,-1.48l-1.61,-2.01l0.11,-7.73l4.92,0.03l0.29,-0.37l-0.19,-0.79l0.34,-0.86l0.0,-0.21l-0.41,-1.11l0.26,-1.14l-0.01,-0.16l-0.12,-0.36l0.18,0.01l0.1,0.56l0.31,0.25l1.14,-0.06l1.44,0.21l0.76,1.05l0.19,0.12l2.01,0.35l0.19,-0.03l1.24,-0.65l0.44,1.03l0.22,0.18l1.81,0.34l0.85,0.99l1.02,1.39l0.24,0.12l1.92,0.02l0.3,-0.32l-0.21,-2.74l-0.47,-0.23l-0.53,0.36l-1.58,-0.89l-0.51,-0.34l0.29,-2.36l0.44,-2.99l-0.03,-0.18l-0.5,-0.99l0.61,-1.38l0.53,-0.24l3.26,-0.41l0.89,0.23l1.01,0.62l1.04,0.44l1.6,0.43l1.35,0.72Z",
                name: "Zambia"
            },
            EE: {
                path: "M482.19,120.88l0.23,-1.68l-0.43,-0.31l-0.75,0.37l-1.34,-1.1l-0.18,-1.75l2.92,-0.95l3.07,-0.53l2.66,0.6l2.48,-0.1l0.18,0.31l-1.65,1.96l-0.06,0.26l0.71,3.25l-0.88,0.94l-1.85,-0.01l-2.08,-1.3l-1.14,-0.47l-0.2,-0.01l-1.69,0.51Z",
                name: "Estonia"
            },
            EG: {
                path: "M508.07,208.8l-0.66,1.06l-0.53,2.03l-0.64,1.32l-0.32,0.26l-1.74,-1.85l-1.77,-3.86l-0.48,-0.09l-0.26,0.25l-0.07,0.32l1.04,2.88l1.55,2.76l1.89,4.18l0.94,1.48l0.83,1.54l2.08,2.73l-0.3,0.28l-0.1,0.23l0.08,1.72l0.11,0.22l2.91,2.37l-28.78,0.0l0.0,-19.06l-0.73,-2.2l0.61,-1.59l0.0,-0.2l-0.34,-1.04l0.73,-1.08l3.13,-0.04l2.36,0.72l2.48,0.81l1.15,0.43l0.23,-0.01l1.93,-0.87l1.02,-0.78l2.08,-0.21l1.59,0.31l0.62,1.24l0.52,0.03l0.46,-0.71l1.86,0.59l1.95,0.16l0.17,-0.04l0.92,-0.52l1.48,4.24Z",
                name: "Egypt"
            },
            ZA: {
                path: "M467.06,373.27l-0.13,-0.29l0.01,-1.58l-0.02,-0.12l-0.71,-1.64l0.59,-0.37l0.14,-0.26l-0.07,-2.13l-0.05,-0.15l-1.63,-2.58l-1.25,-2.31l-1.71,-3.37l0.88,-0.98l0.7,0.52l0.39,1.08l0.23,0.19l1.1,0.19l1.55,0.51l0.14,0.01l1.35,-0.2l0.11,-0.04l2.24,-1.39l0.14,-0.25l0.0,-9.4l0.16,0.09l1.39,2.38l-0.22,1.53l0.04,0.19l0.56,0.94l0.3,0.14l1.79,-0.27l0.16,-0.08l1.23,-1.18l1.17,-0.79l0.1,-0.12l0.57,-1.19l1.02,-0.52l0.9,0.28l1.16,0.73l0.14,0.05l2.04,0.13l0.13,-0.02l1.6,-0.62l0.18,-0.19l0.63,-1.93l1.18,-0.19l0.19,-0.12l0.78,-1.05l0.81,-1.71l2.18,-1.91l3.44,-1.88l0.89,0.02l1.17,0.43l0.21,-0.0l0.76,-0.29l1.07,0.21l1.15,3.55l0.63,1.82l-0.44,2.9l0.1,0.52l-0.74,-0.29l-0.18,-0.01l-0.72,0.19l-0.21,0.2l-0.22,0.74l-0.66,0.97l-0.05,0.18l0.02,0.93l0.09,0.21l1.49,1.46l0.27,0.08l1.47,-0.29l0.22,-0.18l0.43,-1.01l1.29,0.02l-0.51,1.63l-0.29,2.2l-0.59,1.12l-2.2,1.78l-1.06,1.39l-0.72,1.44l-1.39,1.93l-2.81,2.84l-1.75,1.65l-1.85,1.24l-2.55,1.06l-1.23,0.14l-0.24,0.18l-0.22,0.54l-1.27,-0.35l-0.2,0.01l-1.15,0.5l-2.62,-0.52l-0.12,0.0l-1.46,0.33l-0.98,-0.14l-0.16,0.02l-2.55,1.1l-2.11,0.44l-1.59,1.07l-0.93,0.06l-0.97,-0.92l-0.19,-0.08l-0.72,-0.04l-1.0,-1.16l-0.25,0.05ZM493.72,359.24l-1.12,-0.86l-0.31,-0.03l-1.23,0.59l-1.36,1.07l-1.39,1.78l0.01,0.38l1.88,2.11l0.31,0.09l0.9,-0.27l0.18,-0.15l0.4,-0.77l1.28,-0.39l0.18,-0.16l0.42,-0.88l0.76,-1.32l-0.05,-0.37l-0.87,-0.82Z",
                name: "South Africa"
            },
            EC: {
                path: "M220.2,293.48l1.25,-1.76l0.02,-0.31l-0.54,-1.09l-0.5,-0.06l-0.78,0.94l-1.03,-0.75l0.33,-0.46l0.05,-0.23l-0.38,-2.04l0.66,-0.28l0.17,-0.19l0.45,-1.52l0.93,-1.58l0.04,-0.2l-0.13,-0.78l1.19,-0.47l1.57,-0.91l2.35,1.34l0.17,0.04l0.28,-0.02l0.52,0.91l0.21,0.15l2.12,0.35l0.2,-0.03l0.55,-0.31l1.08,0.73l0.97,0.54l0.31,1.67l-0.71,1.49l-2.64,2.54l-2.95,0.97l-0.15,0.11l-1.53,2.18l-0.49,1.68l-1.1,0.8l-0.87,-1.05l-0.15,-0.1l-1.01,-0.27l-0.13,-0.0l-0.7,0.14l-0.03,-0.43l0.6,-0.5l0.1,-0.31l-0.26,-0.91Z",
                name: "Ecuador"
            },
            AL: {
                path: "M470.27,171.7l0.38,0.19l0.45,-0.18l0.4,0.61l0.11,0.1l0.46,0.24l0.13,0.87l-0.3,0.95l-0.0,0.17l0.36,1.28l0.12,0.17l0.9,0.63l-0.03,0.44l-0.67,0.35l-0.16,0.22l-0.14,0.88l-0.96,1.18l-0.06,-0.03l-0.04,-0.48l-0.12,-0.22l-1.28,-0.92l-0.19,-1.25l0.2,-1.96l0.33,-0.89l-0.06,-0.3l-0.36,-0.41l-0.13,-0.75l0.66,-0.9Z",
                name: "Albania"
            },
            AO: {
                path: "M461.62,299.93l0.55,1.67l0.73,1.54l1.56,2.18l0.28,0.12l1.66,-0.2l0.81,-0.34l1.28,0.33l0.33,-0.14l0.39,-0.67l0.56,-1.3l1.37,-0.09l0.27,-0.21l0.07,-0.23l0.67,-0.01l-0.13,0.53l0.29,0.37l2.74,-0.02l0.04,1.29l0.03,0.13l0.46,0.87l-0.35,1.52l0.18,1.55l0.07,0.16l0.75,0.85l-0.13,2.89l0.41,0.29l0.56,-0.21l1.11,0.05l1.5,-0.37l0.9,0.12l0.18,0.53l-0.27,1.15l0.01,0.17l0.4,1.08l-0.33,0.85l-0.01,0.18l0.12,0.51l-4.83,-0.03l-0.3,0.3l-0.12,8.13l0.07,0.19l1.69,2.1l1.27,1.25l-4.03,0.92l-5.93,-0.36l-1.66,-1.19l-0.18,-0.06l-10.15,0.11l-0.34,0.13l-1.35,-1.05l-0.17,-0.06l-1.62,-0.08l-1.6,0.45l-0.88,0.36l-0.17,-1.2l0.34,-2.19l0.85,-2.32l0.14,-1.13l0.79,-2.24l0.57,-1.0l1.42,-1.64l0.82,-1.15l0.05,-0.13l0.26,-1.88l-0.13,-1.51l-0.07,-0.16l-0.72,-0.87l-1.23,-2.91l0.09,-0.37l0.73,-0.95l0.05,-0.27l-1.27,-4.12l-1.19,-1.54l0.1,-0.2l0.86,-0.28l0.78,0.03l0.83,-0.29l7.12,0.03ZM451.81,298.94l-0.17,0.07l-0.5,-1.42l0.85,-0.92l0.53,-0.29l0.48,0.44l-0.56,0.32l-0.1,0.1l-0.41,0.65l-0.05,0.14l-0.07,0.91Z",
                name: "Angola"
            },
            KZ: {
                path: "M598.42,172.08l-1.37,0.54l-3.3,2.09l-0.11,0.12l-1.01,1.97l-0.56,0.01l-0.6,-1.24l-0.26,-0.17l-2.95,-0.09l-0.46,-2.22l-0.29,-0.24l-0.91,-0.02l0.17,-2.72l-0.12,-0.26l-3.0,-2.22l-0.2,-0.06l-4.29,0.24l-2.8,0.42l-2.36,-2.7l-6.4,-3.65l-0.23,-0.03l-6.45,1.83l-0.22,0.29l0.1,10.94l-0.84,0.1l-1.65,-2.21l-0.11,-0.09l-1.69,-0.84l-0.2,-0.02l-2.84,0.63l-0.14,0.07l-0.71,0.64l-0.02,-0.11l0.57,-1.17l0.0,-0.26l-0.48,-1.05l-0.17,-0.16l-2.78,-0.99l-1.08,-2.62l-0.13,-0.15l-1.24,-0.7l-0.04,-0.48l2.07,0.25l0.34,-0.29l0.09,-2.03l1.84,-0.44l2.12,0.45l0.36,-0.25l0.45,-3.04l-0.45,-2.06l-0.31,-0.23l-2.44,0.15l-2.07,-0.75l-0.23,0.01l-2.88,1.38l-2.21,0.62l-0.96,-0.38l0.22,-1.39l-0.06,-0.23l-1.6,-2.12l-0.25,-0.12l-1.72,0.08l-1.87,-1.91l1.33,-2.24l-0.06,-0.38l-0.55,-0.5l1.72,-3.08l2.3,1.7l0.48,-0.2l0.29,-2.26l4.99,-3.48l3.76,-0.08l5.46,2.27l2.96,1.33l0.26,-0.01l2.59,-1.36l3.82,-0.06l3.13,1.67l0.38,-0.09l0.63,-0.85l3.36,0.14l0.29,-0.19l0.63,-1.57l-0.13,-0.37l-3.64,-2.05l2.0,-1.36l0.1,-0.38l-0.32,-0.62l2.09,-0.76l0.13,-0.47l-1.65,-2.13l0.89,-0.91l9.27,-1.18l0.13,-0.05l1.17,-0.82l6.2,-1.27l2.26,-1.43l4.19,0.7l0.74,3.39l0.38,0.22l2.52,-0.81l2.9,1.06l-0.18,1.63l0.32,0.33l2.52,-0.23l5.0,-2.58l0.03,0.39l3.16,2.62l5.57,8.48l0.49,0.02l1.18,-1.53l3.22,1.78l0.21,0.03l3.5,-0.83l1.21,0.52l1.16,1.82l0.15,0.12l1.67,0.61l1.01,1.32l0.28,0.11l3.04,-0.41l1.1,1.64l-1.68,1.89l-1.97,0.28l-0.26,0.29l-0.12,3.09l-1.2,1.23l-4.81,-1.01l-0.35,0.2l-1.77,5.51l-1.14,0.62l-4.92,1.23l-0.2,0.41l2.14,5.06l-1.45,0.67l-0.17,0.31l0.15,1.28l-1.05,-0.3l-1.21,-1.04l-0.17,-0.07l-3.73,-0.32l-4.15,-0.08l-0.92,0.31l-3.46,-1.24l-0.22,0.01l-1.42,0.63l-0.17,0.21l-0.32,1.49l-3.82,-0.97l-0.15,0.0l-1.65,0.43l-0.2,0.17l-0.51,1.21Z",
                name: "Kazakhstan"
            },
            ET: {
                path: "M516.0,247.63l1.21,0.92l0.3,0.04l1.3,-0.53l0.46,0.41l0.19,0.08l1.65,0.03l2.05,0.96l0.67,0.88l1.07,0.79l1.0,1.45l0.7,0.68l-0.72,0.92l-0.85,1.19l-0.04,0.25l0.19,0.67l0.04,0.74l0.29,0.28l1.4,0.04l0.55,-0.15l0.23,0.19l-0.41,0.67l0.01,0.32l0.92,1.39l0.93,1.23l0.99,0.94l0.1,0.06l8.19,2.99l1.51,0.01l-6.51,6.95l-3.14,0.11l-0.18,0.06l-2.15,1.71l-1.51,0.04l-0.22,0.1l-0.6,0.69l-1.46,-0.0l-0.93,-0.78l-0.32,-0.04l-2.29,1.05l-0.12,0.1l-0.64,0.9l-1.44,-0.17l-0.51,-0.26l-0.17,-0.03l-0.56,0.07l-0.68,-0.02l-3.1,-2.08l-0.17,-0.05l-1.62,0.0l-0.68,-0.65l0.0,-1.28l-0.21,-0.29l-1.19,-0.38l-1.42,-2.63l-0.13,-0.12l-1.05,-0.53l-0.46,-1.0l-1.27,-1.23l-0.17,-0.08l-1.08,-0.13l0.53,-0.9l1.17,-0.05l0.26,-0.17l0.37,-0.77l0.03,-0.14l-0.03,-2.23l0.7,-2.49l1.08,-0.65l0.14,-0.19l0.24,-1.0l1.03,-1.85l1.47,-1.22l0.09,-0.12l1.02,-2.51l0.36,-1.96l2.62,0.48l0.33,-0.18l0.63,-1.55Z",
                name: "Ethiopia"
            },
            ZW: {
                path: "M498.95,341.2l-1.16,-0.23l-0.16,0.01l-0.74,0.28l-1.11,-0.41l-1.02,-0.04l-1.52,-1.13l-0.12,-0.05l-1.79,-0.37l-0.65,-1.46l-0.01,-0.86l-0.22,-0.29l-0.99,-0.26l-2.74,-2.77l-0.77,-1.46l-0.52,-0.5l-0.72,-1.54l2.24,0.23l0.78,0.28l0.12,0.02l0.85,-0.06l0.21,-0.11l1.38,-1.66l2.11,-2.05l0.81,-0.18l0.22,-0.2l0.27,-0.8l1.29,-0.93l1.53,-0.28l0.11,0.66l0.3,0.25l2.02,-0.05l1.04,0.48l0.5,0.59l0.18,0.1l1.13,0.18l1.11,0.7l0.01,3.06l-0.49,1.82l-0.11,1.94l0.03,0.16l0.35,0.68l-0.24,1.3l-0.27,0.17l-0.12,0.15l-0.64,1.83l-2.49,2.8Z",
                name: "Zimbabwe"
            },
            ES: {
                path: "M398.67,172.8l0.09,-1.45l-0.06,-0.2l-0.82,-1.05l3.16,-1.96l3.01,0.54l3.33,-0.02l2.64,0.52l2.14,-0.15l3.9,0.1l0.91,1.08l0.14,0.09l4.61,1.38l0.26,-0.04l0.77,-0.55l2.66,1.29l0.17,0.03l2.59,-0.35l0.1,1.28l-2.2,1.85l-3.13,0.62l-0.23,0.23l-0.21,0.92l-1.54,1.68l-0.97,2.4l0.02,0.26l0.85,1.46l-1.27,1.14l-0.09,0.14l-0.5,1.73l-1.73,0.53l-0.15,0.1l-1.68,2.1l-3.03,0.04l-2.38,-0.05l-0.17,0.05l-1.57,1.01l-0.9,1.01l-0.96,-0.19l-0.82,-0.86l-0.69,-1.6l-0.22,-0.18l-2.14,-0.41l-0.13,-0.62l0.83,-0.97l0.39,-0.86l-0.06,-0.33l-0.73,-0.73l0.63,-1.74l-0.02,-0.25l-0.8,-1.41l0.69,-0.15l0.23,-0.27l0.09,-1.29l0.33,-0.36l0.08,-0.2l0.03,-2.16l1.03,-0.72l0.1,-0.37l-0.7,-1.5l-0.25,-0.17l-1.46,-0.11l-0.22,0.07l-0.34,0.3l-1.17,0.0l-0.55,-1.29l-0.39,-0.16l-1.02,0.44l-0.45,0.36Z",
                name: "Spain"
            },
            ER: {
                path: "M527.15,253.05l-0.77,-0.74l-1.01,-1.47l-1.14,-0.86l-0.62,-0.84l-0.11,-0.09l-2.18,-1.02l-0.12,-0.03l-1.61,-0.03l-0.52,-0.46l-0.31,-0.05l-1.31,0.54l-1.38,-1.06l-0.46,0.12l-0.69,1.68l-2.49,-0.46l-0.2,-0.76l1.06,-3.69l0.24,-1.65l0.66,-0.66l1.76,-0.4l0.16,-0.1l0.97,-1.13l1.24,2.55l0.68,2.34l0.09,0.14l1.4,1.27l3.39,2.4l1.37,1.43l2.14,2.34l0.94,0.6l-0.32,0.26l-0.85,-0.17Z",
                name: "Eritrea"
            },
            ME: {
                path: "M469.05,172.9l-0.57,-0.8l-0.1,-0.09l-0.82,-0.46l0.16,-0.33l0.35,-1.57l0.72,-0.62l0.27,-0.16l0.48,0.38l0.35,0.4l0.12,0.08l0.79,0.32l0.66,0.43l-0.43,0.62l-0.28,0.11l-0.07,-0.25l-0.53,-0.1l-1.09,1.49l-0.05,0.23l0.06,0.32Z",
                name: "Montenegro"
            },
            MD: {
                path: "M488.2,153.75l0.14,-0.11l1.49,-0.28l1.75,0.95l1.06,0.14l0.92,0.7l-0.15,0.9l0.15,0.31l0.8,0.46l0.33,1.2l0.09,0.14l0.72,0.66l-0.11,0.28l0.1,0.33l-0.06,0.02l-1.25,-0.08l-0.17,-0.29l-0.39,-0.12l-0.52,0.25l-0.16,0.36l0.13,0.42l-0.6,0.88l-0.43,1.03l-0.22,0.12l-0.32,-1.0l0.25,-1.34l-0.08,-1.38l-0.06,-0.17l-1.43,-1.87l-0.81,-1.36l-0.78,-0.95l-0.12,-0.09l-0.29,-0.12Z",
                name: "Moldova"
            },
            MG: {
                path: "M544.77,316.45l0.64,1.04l0.6,1.62l0.4,3.04l0.63,1.21l-0.22,1.07l-0.15,0.26l-0.59,-1.05l-0.52,-0.01l-0.47,0.76l-0.04,0.23l0.46,1.84l-0.19,0.92l-0.61,0.53l-0.1,0.21l-0.16,2.15l-0.97,2.98l-1.24,3.59l-1.55,4.97l-0.96,3.67l-1.08,2.93l-1.94,0.61l-2.05,1.06l-3.2,-1.53l-0.62,-1.26l-0.18,-2.39l-0.87,-2.07l-0.22,-1.8l0.4,-1.69l1.01,-0.4l0.19,-0.28l0.01,-0.79l1.15,-1.91l0.04,-0.11l0.23,-1.66l-0.03,-0.17l-0.57,-1.21l-0.46,-1.58l-0.19,-2.25l0.82,-1.36l0.33,-1.51l1.11,-0.1l1.4,-0.53l0.9,-0.45l1.03,-0.03l0.21,-0.09l1.41,-1.45l2.12,-1.65l0.75,-1.29l0.03,-0.24l-0.17,-0.56l0.53,0.15l0.32,-0.1l1.38,-1.77l0.06,-0.18l0.04,-1.44l0.54,-0.74l0.62,0.77Z",
                name: "Madagascar"
            },
            MA: {
                path: "M378.66,230.13l0.07,-0.75l0.93,-0.72l0.82,-1.37l0.04,-0.21l-0.14,-0.8l0.8,-1.74l1.33,-1.61l0.79,-0.4l0.14,-0.15l0.66,-1.55l0.08,-1.46l0.83,-1.52l1.6,-0.94l0.11,-0.11l1.56,-2.71l1.2,-0.99l2.24,-0.29l0.17,-0.08l1.95,-1.83l1.3,-0.77l2.09,-2.28l0.07,-0.26l-0.61,-3.34l0.92,-2.3l0.33,-1.44l1.52,-1.79l2.48,-1.27l1.86,-1.16l0.1,-0.11l1.67,-2.93l0.72,-1.59l1.54,0.01l1.43,1.14l0.21,0.06l2.33,-0.19l2.55,0.62l0.97,0.03l0.83,1.6l0.15,1.71l0.86,2.96l0.09,0.14l0.5,0.45l-0.31,0.73l-3.11,0.44l-0.16,0.07l-1.07,0.97l-1.36,0.23l-0.25,0.28l-0.1,1.85l-2.74,1.02l-0.14,0.11l-0.9,1.3l-1.93,0.69l-2.56,0.44l-4.04,2.01l-0.17,0.27l0.02,2.91l-0.08,0.0l-0.3,0.31l0.05,1.15l-1.25,0.07l-0.16,0.06l-0.73,0.55l-0.98,0.0l-0.85,-0.33l-0.15,-0.02l-2.11,0.29l-0.24,0.19l-0.76,1.95l-0.63,0.16l-0.21,0.19l-1.15,3.29l-3.42,2.81l-0.1,0.17l-0.81,3.57l-0.98,1.12l-0.3,0.85l-5.13,0.19Z",
                name: "Morocco"
            },
            UZ: {
                path: "M587.83,186.48l0.06,-1.46l-0.19,-0.29l-3.31,-1.24l-2.57,-1.4l-1.63,-1.38l-2.79,-1.98l-1.2,-2.98l-0.12,-0.14l-0.84,-0.54l-0.18,-0.05l-2.61,0.13l-0.76,-0.48l-0.25,-2.25l-0.17,-0.24l-3.37,-1.6l-0.32,0.04l-2.08,1.73l-2.11,1.02l-0.16,0.35l0.31,1.14l-2.14,0.03l-0.09,-10.68l6.1,-1.74l6.25,3.57l2.36,2.72l0.27,0.1l2.92,-0.44l4.17,-0.23l2.78,2.06l-0.18,2.87l0.29,0.32l0.98,0.02l0.46,2.22l0.28,0.24l3.0,0.09l0.61,1.25l0.28,0.17l0.93,-0.02l0.26,-0.16l1.06,-2.06l3.21,-2.03l1.3,-0.5l0.19,0.08l-1.75,1.62l0.05,0.48l1.85,1.12l0.27,0.02l1.65,-0.69l2.4,1.27l-2.69,1.79l-1.79,-0.27l-0.89,0.06l-0.22,-0.52l0.48,-1.26l-0.34,-0.4l-3.35,0.69l-0.22,0.18l-0.78,1.87l-1.07,1.47l-1.93,-0.13l-0.29,0.16l-0.65,1.29l0.16,0.42l1.69,0.64l0.48,1.91l-1.25,2.6l-1.64,-0.53l-1.18,-0.03Z",
                name: "Uzbekistan"
            },
            MM: {
                path: "M670.1,233.39l-1.46,1.11l-1.68,0.11l-0.26,0.19l-1.1,2.7l-0.95,0.42l-0.14,0.42l1.21,2.27l1.61,1.92l0.94,1.55l-0.82,1.99l-0.77,0.42l-0.13,0.39l0.64,1.35l1.62,1.97l0.26,1.32l-0.04,1.15l0.02,0.13l0.92,2.18l-1.3,2.23l-0.79,1.69l-0.1,-0.77l0.74,-1.87l-0.02,-0.26l-0.8,-1.42l0.2,-2.68l-0.06,-0.2l-0.98,-1.27l-0.8,-2.98l-0.45,-3.22l-1.11,-2.22l-0.45,-0.1l-1.64,1.28l-2.74,1.76l-1.26,-0.2l-1.27,-0.49l0.79,-2.93l0.0,-0.14l-0.52,-2.42l-1.93,-2.97l0.26,-0.8l-0.22,-0.39l-1.37,-0.31l-1.65,-1.98l-0.12,-1.5l0.41,0.19l0.42,-0.26l0.05,-1.7l1.08,-0.54l0.16,-0.34l-0.24,-1.0l0.5,-0.79l0.05,-0.15l0.08,-2.35l1.58,0.49l0.36,-0.15l1.12,-2.19l0.15,-1.34l1.35,-2.18l0.04,-0.17l-0.07,-1.35l2.97,-1.71l1.67,0.45l0.38,-0.33l-0.18,-1.46l0.7,-0.4l0.15,-0.32l-0.13,-0.72l0.94,-0.13l0.74,1.41l0.11,0.12l0.95,0.56l0.07,1.89l-0.09,2.08l-2.28,2.15l-0.09,0.19l-0.3,3.15l0.35,0.32l2.37,-0.39l0.53,2.17l0.2,0.21l1.3,0.42l-0.63,1.9l0.14,0.36l1.86,0.99l1.1,0.49l0.24,0.0l1.45,-0.6l0.04,0.51l-2.01,1.6l-0.56,0.96l-1.34,0.56Z",
                name: "Myanmar"
            },
            ML: {
                path: "M390.79,248.2l0.67,-0.37l0.14,-0.18l0.36,-1.31l0.51,-0.04l1.68,0.69l0.21,0.0l1.34,-0.48l0.89,0.16l0.3,-0.13l0.29,-0.44l9.89,-0.04l0.29,-0.21l0.56,-1.8l-0.11,-0.33l-0.33,-0.24l-2.37,-22.1l3.41,-0.04l8.37,5.73l8.38,5.68l0.56,1.15l0.14,0.14l1.56,0.75l0.99,0.36l0.03,1.45l0.33,0.29l2.45,-0.22l0.01,5.52l-1.3,1.64l-0.06,0.15l-0.18,1.37l-1.99,0.36l-3.4,0.22l-0.19,0.09l-0.85,0.83l-1.48,0.09l-1.49,0.01l-0.54,-0.43l-0.26,-0.05l-1.38,0.36l-2.39,1.08l-0.13,0.12l-0.44,0.73l-1.88,1.11l-0.11,0.12l-0.3,0.57l-0.86,0.42l-1.1,-0.31l-0.28,0.07l-0.69,0.62l-0.09,0.16l-0.35,1.66l-1.93,2.04l-0.08,0.23l0.05,0.76l-0.63,0.99l-0.04,0.19l0.14,1.23l-0.81,0.29l-0.32,0.17l-0.27,-0.75l-0.39,-0.18l-0.65,0.26l-0.36,-0.04l-0.29,0.14l-0.37,0.6l-1.69,-0.02l-0.63,-0.34l-0.32,0.02l-0.12,0.09l-0.47,-0.45l0.1,-0.6l-0.09,-0.27l-0.31,-0.3l-0.33,-0.05l-0.05,0.02l0.02,-0.21l0.46,-0.59l-0.02,-0.39l-0.99,-1.02l-0.34,-0.74l-0.56,-0.56l-0.17,-0.09l-0.5,-0.07l-0.19,0.04l-0.58,0.35l-0.79,0.33l-0.65,0.51l-0.85,-0.16l-0.63,-0.59l-0.14,-0.07l-0.41,-0.08l-0.2,0.03l-0.59,0.31l-0.07,0.0l-0.1,-0.63l0.11,-0.85l-0.21,-0.98l-0.11,-0.17l-0.86,-0.66l-0.45,-1.34l-0.1,-1.36Z",
                name: "Mali"
            },
            MN: {
                path: "M641.06,150.59l2.41,-0.53l4.76,-2.8l3.67,-1.49l2.06,0.96l0.12,0.03l2.5,0.05l1.59,1.45l0.19,0.08l2.47,0.12l3.59,0.81l0.27,-0.07l2.43,-2.28l0.06,-0.36l-0.93,-1.77l2.33,-3.1l2.66,1.3l2.26,0.39l2.75,0.8l0.44,2.3l0.19,0.22l3.56,1.38l0.18,0.01l2.35,-0.6l3.1,-0.42l2.4,0.41l2.37,1.52l1.49,1.63l0.23,0.1l2.29,-0.03l3.13,0.52l0.15,-0.01l2.28,-0.79l3.27,-0.53l0.11,-0.04l3.56,-2.23l1.31,0.31l1.26,1.05l0.22,0.07l2.45,-0.22l-0.98,1.96l-1.77,3.21l-0.01,0.28l0.64,1.31l0.35,0.16l1.35,-0.38l2.4,0.48l0.22,-0.04l1.78,-1.09l1.82,0.92l2.11,2.07l-0.17,0.68l-1.79,-0.31l-3.74,0.45l-1.85,0.96l-1.78,2.01l-3.74,1.18l-2.46,1.61l-2.45,-0.6l-1.42,-0.28l-0.31,0.13l-1.31,1.99l0.0,0.33l0.78,1.15l0.3,0.74l-1.58,0.93l-1.75,1.59l-2.83,1.03l-3.77,0.12l-4.05,1.05l-2.81,1.54l-0.95,-0.8l-0.19,-0.07l-2.96,0.0l-3.64,-1.8l-2.55,-0.48l-3.38,0.41l-5.13,-0.67l-2.66,0.06l-1.35,-1.65l-1.12,-2.78l-0.21,-0.18l-1.5,-0.33l-2.98,-1.89l-0.12,-0.04l-3.37,-0.43l-2.84,-0.51l-0.75,-1.13l0.93,-3.54l-0.04,-0.24l-1.73,-2.55l-0.15,-0.12l-3.52,-1.18l-1.99,-1.61l-0.54,-1.85Z",
                name: "Mongolia"
            },
            MK: {
                path: "M472.73,173.87l0.08,0.01l0.32,-0.25l0.08,-0.44l1.29,-0.41l1.37,-0.28l1.03,-0.04l1.06,0.82l0.14,1.59l-0.22,0.04l-0.17,0.11l-0.32,0.4l-1.2,-0.05l-0.18,0.05l-0.9,0.61l-1.45,0.23l-0.85,-0.59l-0.3,-1.09l0.22,-0.71Z",
                name: "Macedonia"
            },
            MW: {
                path: "M507.18,313.84l-0.67,1.85l-0.01,0.16l0.7,3.31l0.31,0.24l0.75,-0.03l0.78,0.71l0.99,1.75l0.2,3.03l-0.91,0.45l-0.14,0.15l-0.59,1.38l-1.24,-1.21l-0.17,-1.62l0.49,-1.12l0.02,-0.16l-0.15,-1.03l-0.13,-0.21l-0.99,-0.65l-0.26,-0.03l-0.53,0.18l-1.31,-1.12l-1.15,-0.59l0.66,-2.06l0.75,-0.84l0.07,-0.27l-0.47,-2.04l0.48,-1.94l0.4,-0.65l0.03,-0.24l-0.64,-2.15l-0.08,-0.13l-0.44,-0.42l1.34,0.26l1.25,1.73l0.67,3.3Z",
                name: "Malawi"
            },
            MR: {
                path: "M390.54,247.66l-1.48,-1.58l-1.51,-1.88l-0.12,-0.09l-1.64,-0.67l-1.17,-0.74l-0.17,-0.05l-1.4,0.03l-0.12,0.03l-1.14,0.52l-1.15,-0.21l-0.26,0.08l-0.44,0.43l-0.11,-0.72l0.68,-1.29l0.31,-2.43l-0.28,-2.63l-0.29,-1.27l0.24,-1.24l-0.03,-0.2l-0.65,-1.24l-1.19,-1.05l0.32,-0.51l9.64,0.02l0.3,-0.34l-0.46,-3.71l0.51,-1.12l2.17,-0.22l0.27,-0.3l-0.08,-6.5l7.91,0.13l0.31,-0.3l0.01,-3.5l8.17,5.63l-2.89,0.04l-0.29,0.33l2.42,22.56l0.12,0.21l0.26,0.19l-0.43,1.38l-9.83,0.04l-0.25,0.13l-0.27,0.41l-0.77,-0.14l-0.15,0.01l-1.3,0.47l-1.64,-0.67l-0.14,-0.02l-0.79,0.06l-0.27,0.22l-0.39,1.39l-0.53,0.29Z",
                name: "Mauritania"
            },
            UG: {
                path: "M500.74,287.17l-2.84,-0.02l-0.92,0.32l-1.37,0.71l-0.29,-0.12l0.02,-1.6l0.54,-0.89l0.04,-0.13l0.14,-1.96l0.49,-1.09l0.91,-1.24l0.97,-0.68l0.8,-0.89l-0.13,-0.49l-0.79,-0.27l0.13,-2.55l0.78,-0.52l1.45,0.51l0.18,0.01l1.97,-0.57l1.72,0.01l0.18,-0.06l1.29,-0.97l0.98,1.44l0.29,1.24l1.05,2.75l-0.84,1.68l-1.94,2.66l-0.06,0.18l0.02,2.36l-4.8,0.18Z",
                name: "Uganda"
            },
            MY: {
                path: "M717.6,273.52l-1.51,0.7l-2.13,-0.41l-2.88,-0.0l-0.29,0.21l-0.84,2.77l-0.9,0.82l-0.08,0.12l-1.23,3.34l-1.81,0.47l-2.29,-0.68l-0.14,-0.01l-1.2,0.22l-0.14,0.07l-1.36,1.18l-1.47,-0.17l-0.12,0.01l-1.46,0.46l-1.51,-1.25l-0.24,-0.97l1.26,0.59l0.2,0.02l1.93,-0.47l0.22,-0.22l0.47,-1.98l0.9,-0.4l2.97,-0.54l0.17,-0.09l1.8,-1.98l1.02,-1.32l0.9,1.03l0.48,-0.04l0.43,-0.7l1.02,0.07l0.32,-0.27l0.25,-2.72l1.84,-1.67l1.23,-1.89l0.73,-0.01l1.12,1.11l0.1,0.99l0.18,0.24l1.66,0.71l1.85,0.67l-0.09,0.51l-1.45,0.11l-0.26,0.4l0.35,0.97ZM673.78,269.53l0.17,1.14l0.35,0.25l1.65,-0.3l0.18,-0.11l0.68,-0.86l0.31,0.13l1.41,1.45l0.99,1.59l0.13,1.57l-0.26,1.09l0.0,0.15l0.24,0.84l0.18,1.46l0.11,0.2l0.82,0.64l0.92,2.08l-0.03,0.52l-1.4,0.13l-2.29,-1.79l-2.86,-1.92l-0.27,-1.16l-0.07,-0.13l-1.39,-1.61l-0.33,-1.99l-0.05,-0.12l-0.84,-1.27l0.26,-1.72l-0.03,-0.18l-0.45,-0.87l0.13,-0.13l1.71,0.92Z",
                name: "Malaysia"
            },
            MX: {
                path: "M133.41,213.83l0.61,0.09l0.27,-0.09l0.93,-1.01l0.08,-0.18l0.09,-1.22l-0.09,-0.23l-1.93,-1.94l-1.46,-0.77l-2.96,-5.62l-0.86,-2.1l2.44,-0.18l2.68,-0.25l-0.03,0.08l0.17,0.4l3.79,1.35l5.81,1.97l6.96,-0.02l0.3,-0.3l0.0,-0.84l3.91,0.0l0.87,0.93l1.27,0.87l1.44,1.17l0.79,1.37l0.62,1.49l0.12,0.14l1.35,0.85l2.08,0.82l0.35,-0.1l1.49,-2.04l1.81,-0.05l1.63,1.01l1.21,1.8l0.86,1.58l1.47,1.55l0.53,1.82l0.73,1.32l0.14,0.13l1.98,0.84l1.78,0.59l0.61,-0.03l-0.78,1.89l-0.45,1.96l-0.19,3.58l-0.24,1.27l0.01,0.14l0.43,1.43l0.78,1.31l0.49,1.98l0.06,0.12l1.63,1.9l0.61,1.51l0.98,1.28l0.16,0.11l2.58,0.67l0.98,1.02l0.31,0.08l2.17,-0.71l1.91,-0.26l1.87,-0.47l1.67,-0.49l1.59,-1.06l0.11,-0.14l0.6,-1.52l0.22,-2.21l0.35,-0.62l1.58,-0.64l2.59,-0.59l2.18,0.09l1.43,-0.2l0.39,0.36l-0.07,1.02l-1.28,1.48l-0.65,1.68l0.07,0.32l0.33,0.32l-0.79,2.49l-0.28,-0.3l-0.24,-0.09l-1.0,0.08l-0.24,0.15l-0.74,1.28l-0.19,-0.13l-0.28,-0.03l-0.3,0.12l-0.19,0.29l0.0,0.06l-4.34,-0.02l-0.3,0.3l-0.0,1.16l-0.83,0.0l-0.28,0.19l0.08,0.33l0.93,0.86l0.9,0.58l0.24,0.48l0.16,0.15l0.2,0.08l-0.03,0.38l-2.94,0.01l-0.26,0.15l-1.21,2.09l0.02,0.33l0.25,0.33l-0.21,0.44l-0.04,0.22l-2.42,-2.35l-1.36,-0.87l-2.04,-0.67l-0.13,-0.01l-1.4,0.19l-2.07,0.98l-1.14,0.23l-1.72,-0.66l-1.85,-0.48l-2.31,-1.16l-1.92,-0.38l-2.79,-1.18l-2.04,-1.2l-0.6,-0.66l-0.19,-0.1l-1.37,-0.15l-2.45,-0.78l-1.07,-1.18l-2.63,-1.44l-1.2,-1.56l-0.44,-0.93l0.5,-0.15l0.2,-0.39l-0.2,-0.58l0.46,-0.55l0.07,-0.19l0.01,-0.91l-0.06,-0.18l-0.81,-1.13l-0.25,-1.08l-0.86,-1.36l-2.21,-2.63l-2.53,-2.09l-1.2,-1.63l-0.11,-0.09l-2.08,-1.06l-0.34,-0.48l0.35,-1.53l-0.16,-0.34l-1.24,-0.61l-1.39,-1.23l-0.6,-1.81l-0.24,-0.2l-1.25,-0.2l-1.38,-1.35l-1.11,-1.25l-0.1,-0.76l-0.05,-0.13l-1.33,-2.04l-0.85,-2.02l0.04,-0.99l-0.14,-0.27l-1.81,-1.1l-0.2,-0.04l-0.74,0.11l-1.34,-0.72l-0.42,0.16l-0.4,1.12l-0.0,0.19l0.41,1.3l0.24,2.04l0.06,0.15l0.88,1.16l1.84,1.86l0.4,0.61l0.12,0.1l0.27,0.14l0.29,0.82l0.31,0.2l0.2,-0.02l0.43,1.51l0.09,0.14l0.72,0.65l0.51,0.91l1.58,1.4l0.8,2.42l0.77,1.23l0.66,1.19l0.13,1.34l0.28,0.27l1.08,0.08l0.92,1.1l0.83,1.08l-0.03,0.24l-0.88,0.81l-0.13,-0.0l-0.59,-1.42l-0.07,-0.11l-1.67,-1.53l-1.81,-1.28l-1.15,-0.61l0.07,-1.85l-0.38,-1.45l-0.12,-0.17l-2.91,-2.03l-0.39,0.04l-0.11,0.11l-0.42,-0.46l-0.11,-0.08l-1.49,-0.63l-1.09,-1.16Z",
                name: "Mexico"
            },
            VU: {
                path: "M839.92,325.66l0.78,0.73l-0.18,0.07l-0.6,-0.8ZM839.13,322.74l0.27,1.36l-0.13,-0.06l-0.21,-0.02l-0.29,0.08l-0.22,-0.43l-0.03,-1.32l0.61,0.4Z",
                name: "Vanuatu"
            },
            FR: {
                path: "M444.58,172.63l-0.68,1.92l-0.72,-0.38l-0.51,-1.79l0.43,-0.95l1.15,-0.83l0.33,2.04ZM429.71,147.03l1.77,1.57l0.26,0.07l1.16,-0.23l2.12,1.44l0.56,0.28l0.16,0.03l0.61,-0.06l1.09,0.78l0.13,0.05l3.18,0.53l-1.09,1.94l-0.3,2.16l-0.48,0.38l-1.0,-0.26l-0.37,0.32l0.07,0.66l-1.73,1.68l-0.09,0.21l-0.04,1.42l0.41,0.29l0.96,-0.4l0.67,1.07l-0.09,0.78l0.04,0.19l0.61,0.97l-0.71,0.78l-0.07,0.28l0.65,2.39l0.21,0.21l1.09,0.31l-0.2,0.95l-2.08,1.58l-4.81,-0.8l-0.13,0.01l-3.65,0.99l-0.22,0.24l-0.25,1.6l-2.59,0.35l-2.74,-1.33l-0.31,0.03l-0.79,0.57l-4.38,-1.31l-0.79,-0.94l1.16,-1.64l0.05,-0.15l0.48,-6.17l-0.06,-0.21l-2.58,-3.3l-1.89,-1.65l-0.11,-0.06l-3.64,-1.17l-0.2,-1.88l2.92,-0.63l4.14,0.82l0.35,-0.36l-0.65,-3.0l1.77,1.05l0.27,0.02l5.83,-2.54l0.17,-0.19l0.71,-2.54l1.75,-0.53l0.27,0.88l0.27,0.21l1.04,0.05l1.08,1.23ZM289.1,278.45l-0.85,0.84l-0.88,0.13l-0.25,-0.51l-0.21,-0.16l-0.56,-0.1l-0.25,0.07l-0.63,0.55l-0.62,-0.29l0.5,-0.88l0.21,-1.11l0.42,-1.05l-0.03,-0.28l-0.93,-1.42l-0.18,-1.54l1.13,-1.87l2.42,0.78l2.55,2.04l0.33,0.81l-1.4,2.16l-0.77,1.84Z",
                name: "France"
            },
            FI: {
                path: "M492.26,76.42l-0.38,3.12l0.12,0.28l3.6,2.69l-2.14,2.96l-0.01,0.33l2.83,4.61l-1.61,3.36l0.03,0.31l2.15,2.87l-0.96,2.44l0.1,0.35l3.51,2.55l-0.81,1.72l-2.28,2.19l-5.28,4.79l-4.51,0.31l-4.39,1.37l-3.87,0.75l-1.34,-1.89l-0.11,-0.09l-2.23,-1.14l0.53,-3.54l-0.01,-0.14l-1.17,-3.37l1.12,-2.13l2.23,-2.44l5.69,-4.33l1.65,-0.84l0.16,-0.31l-0.26,-1.73l-0.15,-0.22l-3.4,-1.91l-0.77,-1.47l-0.07,-6.45l-0.12,-0.24l-3.91,-2.94l-3.0,-1.92l0.97,-0.76l2.6,2.17l0.21,0.07l3.2,-0.21l2.63,1.03l0.3,-0.05l2.39,-1.94l0.09,-0.13l1.18,-3.12l3.63,-1.42l2.87,1.59l-0.98,2.87Z",
                name: "Finland"
            },
            FJ: {
                path: "M869.98,327.07l-1.31,0.44l-0.14,-0.41l0.96,-0.41l0.85,-0.17l1.43,-0.78l-0.16,0.65l-1.64,0.67ZM867.58,329.12l0.54,0.47l-0.31,1.0l-1.32,0.3l-1.13,-0.26l-0.17,-0.78l0.72,-0.66l0.98,0.27l0.25,-0.04l0.43,-0.29Z",
                name: "Fiji"
            },
            FK: {
                path: "M268.15,427.89l2.6,-1.73l1.98,0.77l0.31,-0.05l1.32,-1.17l1.58,1.18l-0.54,0.84l-3.1,0.92l-1.0,-1.04l-0.39,-0.04l-1.9,1.35l-0.86,-1.04Z",
                name: "Falkland Islands"
            },
            NI: {
                path: "M202.1,252.6l0.23,-0.0l0.12,-0.11l0.68,-0.09l0.22,-0.15l0.23,-0.43l0.2,-0.01l0.28,-0.31l-0.04,-0.97l0.29,-0.03l0.5,0.02l0.25,-0.11l0.37,-0.46l0.51,0.35l0.4,-0.06l0.23,-0.28l0.45,-0.29l0.87,-0.7l0.11,-0.21l0.02,-0.26l0.23,-0.12l0.25,-0.48l0.29,0.27l0.14,0.07l0.5,0.12l0.22,-0.03l0.48,-0.28l0.66,-0.02l0.87,-0.33l0.36,-0.32l0.21,0.01l-0.11,0.48l0.0,0.14l0.22,0.8l-0.54,0.85l-0.27,1.03l-0.09,1.18l0.14,0.72l0.05,0.95l-0.24,0.15l-0.13,0.19l-0.23,1.09l0.0,0.14l0.14,0.53l-0.42,0.53l-0.06,0.24l0.12,0.69l0.08,0.15l0.18,0.19l-0.26,0.23l-0.49,-0.11l-0.35,-0.44l-0.16,-0.1l-0.79,-0.21l-0.23,0.03l-0.45,0.26l-1.51,-0.62l-0.31,0.05l-0.17,0.15l-1.81,-1.62l-0.6,-0.9l-1.04,-0.79l-0.77,-0.71Z",
                name: "Nicaragua"
            },
            NL: {
                path: "M436.22,136.65l1.82,0.08l0.36,0.89l-0.6,2.96l-0.53,1.06l-1.32,0.0l-0.3,0.34l0.35,2.89l-0.83,-0.47l-1.56,-1.43l-0.29,-0.07l-2.26,0.67l-1.02,-0.15l0.68,-0.48l0.1,-0.12l2.14,-4.84l3.25,-1.35Z",
                name: "Netherlands"
            },
            NO: {
                path: "M491.45,67.31l7.06,3.0l-2.52,0.94l-0.11,0.49l2.43,2.49l-3.82,1.59l-1.48,0.3l0.89,-2.61l-0.14,-0.36l-3.21,-1.78l-0.25,-0.02l-3.89,1.52l-0.17,0.17l-1.2,3.17l-2.19,1.78l-2.53,-0.99l-0.13,-0.02l-3.15,0.21l-2.69,-2.25l-0.38,-0.01l-1.43,1.11l-1.47,0.17l-0.26,0.26l-0.33,2.57l-4.42,-0.65l-0.33,0.22l-0.6,2.19l-2.17,-0.01l-0.27,0.16l-4.15,7.68l-3.88,5.76l-0.0,0.33l0.81,1.23l-0.7,1.27l-2.3,-0.06l-0.28,0.18l-1.63,3.72l-0.02,0.13l0.15,5.17l0.07,0.18l1.51,1.84l-0.79,4.24l-2.04,2.5l-0.92,1.75l-1.39,-1.88l-0.44,-0.05l-4.89,4.21l-3.16,0.81l-3.24,-1.74l-0.86,-3.82l-0.78,-8.6l2.18,-2.36l6.56,-3.28l5.0,-4.16l4.63,-5.74l5.99,-8.09l4.17,-3.23l6.84,-5.49l5.39,-1.92l4.06,0.24l0.23,-0.09l3.72,-3.67l4.51,0.19l4.4,-0.89ZM484.58,19.95l4.42,1.82l-3.25,2.68l-7.14,0.65l-7.16,-0.91l-0.39,-1.37l-0.28,-0.22l-3.48,-0.1l-2.25,-2.15l7.09,-1.48l3.55,1.36l0.28,-0.03l2.42,-1.66l6.18,1.41ZM481.99,33.92l-4.73,1.85l-3.76,-1.06l1.27,-1.02l0.04,-0.43l-1.18,-1.35l4.46,-0.94l0.89,1.83l0.17,0.15l2.83,0.96ZM466.5,23.95l7.64,3.87l-5.63,1.94l-0.19,0.19l-1.35,3.88l-2.08,0.96l-0.16,0.19l-1.14,4.18l-2.71,0.18l-4.94,-2.95l1.95,-1.63l-0.08,-0.51l-3.7,-1.54l-4.79,-4.54l-1.78,-4.01l6.29,-1.88l1.25,1.81l0.25,0.13l3.57,-0.08l0.26,-0.17l0.87,-1.79l3.41,-0.18l3.08,1.94Z",
                name: "Norway"
            },
            NA: {
                path: "M461.88,357.98l-1.61,-1.77l-0.94,-1.9l-0.54,-2.58l-0.62,-1.95l-0.83,-4.05l-0.06,-3.13l-0.33,-1.5l-0.07,-0.14l-0.95,-1.06l-1.27,-2.12l-1.3,-3.1l-0.59,-1.71l-1.98,-2.46l-0.13,-1.67l0.99,-0.4l1.44,-0.42l1.48,0.07l1.42,1.11l0.31,0.03l0.32,-0.15l9.99,-0.11l1.66,1.18l0.16,0.06l6.06,0.37l4.69,-1.06l2.01,-0.57l1.5,0.14l0.63,0.37l-1.0,0.41l-0.7,0.01l-0.16,0.05l-1.38,0.88l-0.79,-0.88l-0.29,-0.09l-3.83,0.9l-1.84,0.08l-0.29,0.3l-0.07,8.99l-2.18,0.08l-0.29,0.3l-0.0,17.47l-2.04,1.27l-1.21,0.18l-1.51,-0.49l-0.99,-0.18l-0.36,-1.0l-0.1,-0.14l-0.99,-0.74l-0.4,0.04l-0.98,1.09Z",
                name: "Namibia"
            },
            NC: {
                path: "M835.87,338.68l2.06,1.63l1.01,0.94l-0.49,0.32l-1.21,-0.62l-1.76,-1.16l-1.58,-1.36l-1.61,-1.79l-0.16,-0.41l0.54,0.02l1.32,0.83l1.08,0.87l0.79,0.73Z",
                name: "New Caledonia"
            },
            NE: {
                path: "M426.67,254.17l0.03,-1.04l-0.24,-0.3l-2.66,-0.53l-0.06,-1.0l-0.07,-0.17l-1.37,-1.62l-0.3,-1.04l0.15,-0.94l1.37,-0.09l0.19,-0.09l0.85,-0.83l3.34,-0.22l2.22,-0.41l0.24,-0.26l0.2,-1.5l1.32,-1.65l0.07,-0.19l-0.01,-5.74l3.4,-1.13l7.24,-5.12l8.46,-4.95l3.76,1.08l1.35,1.39l0.36,0.05l1.39,-0.77l0.55,3.66l0.12,0.2l0.82,0.6l0.03,0.69l0.1,0.21l0.87,0.74l-0.47,0.99l-0.96,5.26l-0.13,3.25l-3.08,2.34l-0.1,0.15l-1.08,3.37l0.08,0.31l0.94,0.86l-0.01,1.51l0.29,0.3l1.25,0.05l-0.14,0.66l-0.51,0.11l-0.24,0.26l-0.06,0.57l-0.04,0.0l-1.59,-2.62l-0.21,-0.14l-0.59,-0.1l-0.23,0.05l-1.83,1.33l-1.79,-0.68l-1.42,-0.17l-0.17,0.03l-0.65,0.32l-1.39,-0.07l-0.19,0.06l-1.4,1.03l-1.12,0.05l-2.97,-1.29l-0.26,0.01l-1.12,0.59l-1.08,-0.04l-0.85,-0.88l-0.11,-0.07l-2.51,-0.95l-0.14,-0.02l-2.69,0.3l-0.16,0.07l-0.65,0.55l-0.1,0.16l-0.34,1.41l-0.69,0.98l-0.05,0.15l-0.13,1.72l-1.47,-1.13l-0.18,-0.06l-0.9,0.01l-0.2,0.08l-0.32,0.28Z",
                name: "Niger"
            },
            NG: {
                path: "M442.0,272.7l-2.4,0.83l-0.88,-0.12l-0.19,0.04l-0.89,0.52l-1.78,-0.05l-1.23,-1.44l-0.88,-1.87l-1.77,-1.66l-0.21,-0.08l-3.78,0.03l0.13,-3.75l-0.06,-1.58l0.44,-1.47l0.74,-0.75l1.21,-1.56l0.04,-0.29l-0.22,-0.56l0.44,-0.9l0.01,-0.24l-0.54,-1.44l0.26,-2.97l0.72,-1.06l0.33,-1.37l0.51,-0.43l2.53,-0.28l2.38,0.9l0.89,0.91l0.2,0.09l1.28,0.04l0.15,-0.03l1.06,-0.56l2.9,1.26l0.13,0.02l1.28,-0.06l0.16,-0.06l1.39,-1.02l1.36,0.07l0.15,-0.03l0.64,-0.32l1.22,0.13l1.9,0.73l0.28,-0.04l1.86,-1.35l0.33,0.06l1.62,2.67l0.29,0.14l0.32,-0.04l0.73,0.74l-0.19,0.37l-0.12,0.74l-2.03,1.89l-0.07,0.11l-0.66,1.62l-0.35,1.28l-0.48,0.51l-0.07,0.12l-0.48,1.67l-1.26,0.98l-0.1,0.15l-0.38,1.24l-0.58,1.07l-0.2,0.91l-1.43,0.7l-1.26,-0.93l-0.19,-0.06l-0.95,0.04l-0.2,0.09l-1.41,1.39l-0.61,0.02l-0.26,0.17l-1.19,2.42l-0.61,1.67Z",
                name: "Nigeria"
            },
            NZ: {
                path: "M857.9,379.62l1.85,3.1l0.33,0.14l0.22,-0.28l0.04,-1.41l0.57,0.4l0.35,2.06l0.17,0.22l2.02,0.94l1.78,0.26l0.22,-0.06l1.31,-1.01l0.84,0.22l-0.53,2.27l-0.67,1.5l-1.71,-0.05l-0.25,0.12l-0.67,0.89l-0.05,0.23l0.21,1.15l-0.31,0.46l-2.15,3.57l-1.6,0.99l-0.28,-0.51l-0.15,-0.13l-0.72,-0.3l1.27,-2.15l0.01,-0.29l-0.82,-1.63l-0.15,-0.14l-2.5,-1.09l0.05,-0.69l1.67,-0.94l0.15,-0.21l0.42,-2.24l-0.11,-1.95l-0.03,-0.12l-0.97,-1.85l0.05,-0.41l-0.09,-0.25l-1.18,-1.17l-1.94,-2.49l-0.86,-1.64l0.38,-0.09l1.24,1.43l0.12,0.08l1.81,0.68l0.67,2.39ZM853.93,393.55l0.57,1.24l0.44,0.12l1.51,-1.03l0.52,0.91l0.0,1.09l-0.88,1.31l-1.62,2.2l-1.26,1.2l-0.05,0.38l0.64,1.02l-1.4,0.03l-0.14,0.04l-2.14,1.16l-0.14,0.17l-0.67,2.0l-1.38,3.06l-3.07,2.19l-2.12,-0.06l-1.55,-0.99l-0.14,-0.05l-2.53,-0.2l-0.31,-0.84l1.25,-2.15l3.07,-2.97l1.62,-0.59l1.81,-1.17l2.18,-1.63l1.55,-1.65l1.08,-2.18l0.9,-0.72l0.11,-0.17l0.35,-1.56l1.37,-1.07l0.4,0.91Z",
                name: "New Zealand"
            },
            NP: {
                path: "M641.26,213.53l-0.14,0.95l0.32,1.64l-0.21,0.78l-1.83,0.04l-2.98,-0.62l-1.86,-0.25l-1.37,-1.3l-0.18,-0.08l-3.38,-0.34l-3.21,-1.49l-2.38,-1.34l-2.16,-0.92l0.84,-2.2l1.51,-1.18l0.89,-0.57l1.83,0.77l2.5,1.76l1.39,0.41l0.78,1.21l0.17,0.13l1.91,0.53l2.0,1.17l2.92,0.66l2.63,0.24Z",
                name: "Nepal"
            },
            CI: {
                path: "M413.53,272.08l-0.83,0.02l-1.79,-0.49l-1.64,0.03l-3.04,0.46l-1.73,0.72l-2.4,0.89l-0.12,-0.02l0.16,-1.7l0.19,-0.25l0.06,-0.2l-0.08,-0.99l-0.09,-0.19l-1.06,-1.05l-0.15,-0.08l-0.71,-0.15l-0.51,-0.48l0.45,-0.92l0.02,-0.19l-0.24,-1.16l0.07,-0.43l0.14,-0.0l0.3,-0.26l0.15,-1.1l-0.02,-0.15l-0.13,-0.34l0.09,-0.13l0.83,-0.27l0.19,-0.37l-0.62,-2.02l-0.55,-1.0l0.14,-0.59l0.35,-0.14l0.24,-0.16l0.53,0.29l0.14,0.04l1.93,0.02l0.26,-0.14l0.36,-0.58l0.39,0.01l0.43,-0.17l0.28,0.79l0.43,0.16l0.56,-0.31l0.89,-0.32l0.92,0.45l0.39,0.75l0.14,0.13l1.13,0.53l0.3,-0.03l0.81,-0.59l1.02,-0.08l1.49,0.57l0.62,3.33l-1.03,2.09l-0.65,2.84l0.02,0.2l1.05,2.08l-0.07,0.64Z",
                name: "Ivory Coast"
            },
            CH: {
                path: "M444.71,156.27l0.05,0.3l-0.34,0.69l0.13,0.4l1.13,0.58l1.07,0.1l-0.12,0.81l-0.87,0.42l-1.75,-0.37l-0.34,0.18l-0.47,1.1l-0.86,0.07l-0.33,-0.38l-0.41,-0.04l-1.34,1.01l-1.02,0.13l-0.93,-0.58l-0.82,-1.32l-0.37,-0.12l-0.77,0.32l0.02,-0.84l1.74,-1.69l0.09,-0.25l-0.04,-0.38l0.73,0.19l0.26,-0.06l0.6,-0.48l2.02,0.02l0.24,-0.12l0.38,-0.51l2.31,0.84Z",
                name: "Switzerland"
            },
            CO: {
                path: "M232.24,284.95l-0.94,-0.52l-1.22,-0.82l-0.31,-0.01l-0.62,0.35l-1.88,-0.31l-0.54,-0.95l-0.29,-0.15l-0.37,0.03l-2.34,-1.33l-0.15,-0.35l0.57,-0.11l0.24,-0.32l-0.1,-1.15l0.46,-0.71l1.11,-0.15l0.21,-0.13l1.05,-1.57l0.95,-1.31l-0.08,-0.43l-0.73,-0.47l0.4,-1.24l0.01,-0.16l-0.53,-2.15l0.44,-0.54l0.06,-0.24l-0.4,-2.13l-0.06,-0.13l-0.93,-1.22l0.21,-0.8l0.52,0.12l0.32,-0.13l0.47,-0.75l0.03,-0.27l-0.52,-1.32l0.09,-0.11l1.14,0.07l0.22,-0.08l1.82,-1.71l0.96,-0.25l0.22,-0.28l0.02,-0.81l0.43,-2.01l1.28,-1.04l1.48,-0.05l0.27,-0.19l0.12,-0.31l1.73,0.19l0.2,-0.05l1.96,-1.28l0.97,-0.56l1.16,-1.16l0.64,0.11l0.43,0.44l-0.31,0.55l-1.49,0.39l-0.19,0.16l-0.6,1.2l-0.97,0.74l-0.73,0.94l-0.06,0.13l-0.3,1.76l-0.68,1.44l0.23,0.43l1.1,0.14l0.27,0.97l0.08,0.13l0.49,0.49l0.17,0.85l-0.27,0.86l-0.01,0.14l0.09,0.53l0.2,0.23l0.52,0.18l0.54,0.79l0.27,0.13l3.18,-0.24l1.31,0.29l1.7,2.08l0.31,0.1l0.96,-0.26l1.75,0.13l1.41,-0.27l0.56,0.27l-0.36,1.07l-0.54,0.81l-0.05,0.13l-0.2,1.8l0.51,1.79l0.07,0.12l0.65,0.68l0.05,0.32l-1.16,1.14l0.05,0.47l0.86,0.52l0.6,0.79l0.31,1.01l-0.7,-0.81l-0.44,-0.01l-0.74,0.77l-4.75,-0.05l-0.3,0.31l0.03,1.57l0.25,0.29l1.2,0.21l-0.02,0.24l-0.1,-0.05l-0.22,-0.02l-1.41,0.41l-0.22,0.29l-0.01,1.82l0.11,0.23l1.04,0.85l0.35,1.3l-0.06,1.02l-1.02,6.26l-0.84,-0.89l-0.19,-0.09l-0.25,-0.02l1.35,-2.13l-0.1,-0.42l-1.92,-1.17l-0.2,-0.04l-1.41,0.2l-0.82,-0.39l-0.26,0.0l-1.29,0.62l-1.63,-0.27l-1.4,-2.5l-0.12,-0.12l-1.1,-0.61l-0.83,-1.2l-1.67,-1.19l-0.27,-0.04l-0.54,0.19Z",
                name: "Colombia"
            },
            CN: {
                path: "M740.32,148.94l0.22,0.21l4.3,1.03l2.84,2.2l0.99,2.92l0.28,0.2l3.8,0.0l0.15,-0.04l2.13,-1.24l3.5,-0.8l-1.05,2.29l-0.95,1.13l-0.06,0.12l-0.85,3.41l-1.56,2.81l-2.83,-0.51l-0.19,0.03l-2.15,1.09l-0.15,0.34l0.65,2.59l-0.33,3.3l-1.03,0.07l-0.28,0.3l0.01,0.75l-1.09,-1.2l-0.48,0.05l-0.94,1.6l-3.76,1.26l-0.2,0.36l0.29,1.19l-1.67,-0.08l-1.11,-0.88l-0.42,0.05l-1.69,2.08l-2.71,1.57l-2.04,1.88l-3.42,0.84l-0.11,0.05l-1.8,1.34l-1.54,0.46l0.52,-0.53l0.06,-0.33l-0.44,-0.96l1.84,-1.84l0.02,-0.41l-1.32,-1.56l-0.36,-0.08l-2.23,1.08l-2.83,2.06l-1.52,1.85l-2.32,0.13l-0.2,0.09l-1.28,1.37l-0.03,0.37l1.32,1.97l0.18,0.13l1.83,0.43l0.07,1.08l0.18,0.26l1.98,0.84l0.3,-0.03l2.66,-1.96l2.06,1.04l0.12,0.03l1.4,0.07l0.27,1.0l-3.24,0.73l-0.17,0.11l-1.13,1.5l-2.38,1.4l-0.1,0.1l-1.29,1.99l0.1,0.42l2.6,1.5l0.97,2.72l1.52,2.56l1.66,2.08l-0.03,1.76l-1.4,0.67l-0.15,0.38l0.6,1.47l0.13,0.15l1.29,0.75l-0.35,2.0l-0.58,1.96l-1.22,0.21l-0.2,0.14l-1.83,2.93l-2.02,3.51l-2.29,3.13l-3.4,2.42l-3.42,2.18l-2.75,0.3l-0.15,0.06l-1.32,1.01l-0.68,-0.67l-0.41,-0.01l-1.37,1.27l-3.42,1.28l-2.62,0.4l-0.24,0.21l-0.8,2.57l-0.95,0.11l-0.53,-1.54l0.52,-0.89l-0.19,-0.44l-3.36,-0.84l-0.17,0.01l-1.09,0.4l-2.36,-0.64l-1.0,-0.9l0.35,-1.34l-0.23,-0.37l-2.22,-0.47l-1.15,-0.94l-0.36,-0.02l-2.08,1.37l-2.35,0.29l-1.98,-0.01l-0.13,0.03l-1.32,0.63l-1.28,0.38l-0.21,0.33l0.33,2.65l-0.78,-0.04l-0.14,-0.39l-0.07,-1.04l-0.41,-0.26l-1.72,0.71l-0.96,-0.43l-1.63,-0.86l0.65,-1.95l-0.19,-0.38l-1.43,-0.46l-0.56,-2.27l-0.34,-0.22l-2.26,0.38l0.25,-2.65l2.29,-2.15l0.09,-0.2l0.1,-2.21l-0.07,-2.09l-0.15,-0.25l-1.02,-0.6l-0.8,-1.52l-0.31,-0.16l-1.42,0.2l-2.16,-0.32l0.55,-0.74l0.01,-0.35l-1.17,-1.7l-0.41,-0.08l-1.67,1.07l-1.97,-0.63l-0.25,0.03l-2.89,1.73l-2.26,1.99l-1.82,0.3l-1.0,-0.66l-0.15,-0.05l-1.28,-0.06l-1.75,-0.61l-0.24,0.02l-1.35,0.69l-0.1,0.08l-1.2,1.45l-0.14,-1.41l-0.4,-0.25l-1.46,0.55l-2.83,-0.26l-2.77,-0.61l-1.99,-1.17l-1.91,-0.54l-0.78,-1.21l-0.17,-0.13l-1.36,-0.38l-2.54,-1.79l-2.01,-0.84l-0.28,0.02l-0.89,0.56l-3.31,-1.83l-2.35,-1.67l-0.57,-2.49l1.34,0.28l0.36,-0.28l0.08,-1.42l-0.05,-0.19l-0.93,-1.34l0.24,-2.18l-0.07,-0.22l-2.69,-3.32l-0.15,-0.1l-3.97,-1.11l-0.69,-2.05l-0.11,-0.15l-1.79,-1.3l-0.39,-0.73l-0.36,-1.57l0.08,-1.09l-0.18,-0.3l-1.52,-0.66l-0.22,-0.01l-0.51,0.18l-0.52,-2.21l0.59,-0.55l0.06,-0.35l-0.22,-0.44l2.12,-1.24l1.63,-0.55l2.58,0.39l0.31,-0.16l0.87,-1.75l3.05,-0.34l0.21,-0.12l0.84,-1.12l3.87,-1.59l0.15,-0.14l0.35,-0.68l0.03,-0.17l-0.17,-1.51l1.52,-0.7l0.15,-0.39l-2.12,-5.0l4.62,-1.15l1.35,-0.72l0.14,-0.17l1.72,-5.37l4.7,0.99l0.28,-0.08l1.39,-1.43l0.08,-0.2l0.11,-2.95l1.83,-0.26l0.18,-0.1l1.85,-2.08l0.61,-0.17l0.57,1.97l0.1,0.15l2.2,1.75l3.48,1.17l1.59,2.36l-0.93,3.53l0.04,0.24l0.9,1.35l0.2,0.13l2.98,0.53l3.32,0.43l2.97,1.89l1.49,0.35l1.08,2.67l1.52,1.88l0.24,0.11l2.74,-0.07l5.15,0.67l3.36,-0.41l2.39,0.43l3.67,1.81l0.13,0.03l2.92,-0.0l1.02,0.86l0.34,0.03l2.88,-1.59l3.98,-1.03l3.81,-0.13l3.02,-1.12l1.77,-1.61l1.73,-1.01l0.13,-0.37l-0.41,-1.01l-0.72,-1.07l1.09,-1.66l1.21,0.24l2.57,0.63l0.24,-0.04l2.46,-1.62l3.78,-1.19l0.13,-0.09l1.8,-2.03l1.66,-0.84l3.54,-0.41l1.93,0.35l0.34,-0.22l0.27,-1.12l-0.08,-0.29l-2.27,-2.22l-2.08,-1.07l-0.29,0.01l-1.82,1.12l-2.36,-0.47l-0.14,0.01l-1.18,0.34l-0.46,-0.94l1.69,-3.08l1.1,-2.21l2.75,1.12l0.26,-0.02l3.53,-2.06l0.15,-0.26l-0.02,-1.35l2.18,-3.39l1.35,-1.04l0.12,-0.24l-0.03,-1.85l-0.15,-0.25l-1.0,-0.58l1.68,-1.37l3.01,-0.59l3.25,-0.09l3.67,0.99l2.08,1.18l1.51,3.3l0.95,1.45l0.85,1.99l0.92,3.19ZM697.0,237.37l-1.95,1.12l-1.74,-0.68l-0.06,-1.9l1.08,-1.03l2.62,-0.7l1.23,0.05l0.37,0.65l-1.01,1.08l-0.54,1.4Z",
                name: "China"
            },
            CM: {
                path: "M453.76,278.92l-0.26,-0.11l-0.18,-0.02l-1.42,0.31l-1.56,-0.33l-1.17,0.16l-3.7,-0.05l0.3,-1.63l-0.04,-0.21l-0.98,-1.66l-0.15,-0.13l-1.03,-0.38l-0.46,-1.01l-0.13,-0.14l-0.48,-0.27l0.02,-0.46l0.62,-1.72l1.1,-2.25l0.54,-0.02l0.2,-0.09l1.41,-1.39l0.73,-0.03l1.32,0.97l0.31,0.03l1.72,-0.85l0.16,-0.2l0.22,-1.0l0.57,-1.03l0.36,-1.18l1.26,-0.98l0.1,-0.15l0.49,-1.7l0.48,-0.51l0.07,-0.13l0.35,-1.3l0.63,-1.54l2.06,-1.92l0.09,-0.17l0.12,-0.79l0.24,-0.41l-0.04,-0.36l-0.89,-0.91l0.04,-0.45l0.28,-0.06l0.85,1.39l0.16,1.59l-0.09,1.66l0.04,0.17l1.09,1.84l-0.86,-0.02l-0.72,0.17l-1.07,-0.24l-0.34,0.17l-0.54,1.19l0.06,0.34l1.48,1.47l1.06,0.44l0.32,0.94l0.73,1.6l-0.32,0.57l-1.23,2.49l-0.54,0.41l-0.12,0.21l-0.19,1.95l0.24,1.08l-0.18,0.67l0.07,0.28l1.13,1.25l0.24,0.93l0.92,1.29l1.1,0.8l0.1,1.01l0.26,0.73l-0.12,0.93l-1.65,-0.49l-2.02,-0.66l-3.19,-0.11Z",
                name: "Cameroon"
            },
            CL: {
                path: "M246.8,429.1l-1.14,0.78l-2.25,1.21l-0.16,0.23l-0.37,2.94l-0.75,0.06l-2.72,-1.07l-2.83,-2.34l-3.06,-1.9l-0.71,-1.92l0.67,-1.84l-0.02,-0.25l-1.22,-2.13l-0.31,-5.41l1.02,-2.95l2.59,-2.4l-0.13,-0.51l-3.32,-0.8l2.06,-2.4l0.07,-0.15l0.79,-4.77l2.44,0.95l0.4,-0.22l1.31,-6.31l-0.16,-0.33l-1.68,-0.8l-0.42,0.21l-0.72,3.47l-1.01,-0.27l0.74,-4.06l0.85,-5.46l1.12,-1.96l0.03,-0.22l-0.71,-2.82l-0.19,-2.94l0.76,-0.07l0.26,-0.2l1.53,-4.62l1.73,-4.52l1.07,-4.2l-0.56,-4.2l0.73,-2.2l0.01,-0.12l-0.29,-3.3l1.46,-3.34l0.45,-5.19l0.8,-5.52l0.78,-5.89l-0.18,-4.33l-0.49,-3.47l1.1,-0.56l0.13,-0.13l0.44,-0.88l0.9,1.29l0.32,1.8l0.1,0.18l1.16,0.97l-0.73,2.33l0.01,0.21l1.33,2.91l0.97,3.6l0.35,0.22l1.57,-0.31l0.16,0.34l-0.79,2.51l-2.61,1.25l-0.17,0.28l0.08,4.36l-0.48,0.79l0.01,0.33l0.6,0.84l-1.62,1.55l-1.67,2.6l-0.89,2.47l-0.02,0.13l0.23,2.56l-1.5,2.76l-0.03,0.21l1.15,4.8l0.11,0.17l0.54,0.42l-0.01,2.37l-1.4,2.7l-0.03,0.15l0.06,2.25l-1.8,1.78l-0.09,0.21l0.02,2.73l0.71,2.63l-1.33,0.94l-0.12,0.17l-0.67,2.64l-0.59,3.03l0.4,3.55l-0.84,0.51l-0.14,0.31l0.58,3.5l0.08,0.16l0.96,0.99l-0.7,1.08l0.11,0.43l1.04,0.55l0.19,0.8l-0.89,0.48l-0.16,0.31l0.26,1.77l-0.89,4.06l-1.31,2.67l-0.03,0.19l0.28,1.53l-0.73,1.88l-1.85,1.37l-0.12,0.26l0.22,3.46l0.06,0.16l0.88,1.19l0.28,0.12l1.32,-0.17l-0.04,2.13l0.04,0.15l1.04,1.95l0.24,0.16l5.94,0.44ZM248.79,430.71l0.0,7.41l0.3,0.3l2.67,0.0l1.01,0.06l-0.54,0.91l-1.99,1.01l-1.13,-0.1l-1.42,-0.27l-1.87,-1.06l-2.57,-0.49l-3.09,-1.9l-2.52,-1.83l-2.65,-2.93l0.93,0.32l3.54,2.29l3.32,1.23l0.34,-0.09l1.29,-1.57l0.83,-2.32l2.11,-1.28l1.43,0.32Z",
                name: "Chile"
            },
            CA: {
                path: "M280.14,145.66l-1.66,2.88l0.06,0.37l0.37,0.03l1.5,-1.01l1.17,0.49l-0.64,0.83l0.13,0.46l2.22,0.89l0.28,-0.03l1.02,-0.7l2.09,0.83l-0.69,2.1l0.37,0.38l1.43,-0.45l0.27,1.43l0.74,1.88l-0.95,2.5l-0.88,0.09l-1.34,-0.48l0.49,-2.34l-0.14,-0.32l-0.7,-0.4l-0.36,0.04l-2.81,2.66l-0.63,-0.05l1.2,-1.01l-0.1,-0.52l-2.4,-0.77l-2.79,0.18l-4.65,-0.09l-0.22,-0.54l1.37,-0.99l0.01,-0.48l-0.82,-0.65l1.91,-1.79l2.57,-5.17l1.49,-1.81l2.04,-1.07l0.63,0.08l-0.27,0.51l-1.33,2.07ZM193.92,74.85l-0.01,4.24l0.19,0.28l0.33,-0.07l3.14,-3.22l2.65,2.5l-0.71,3.04l0.06,0.26l2.42,2.88l0.46,0.0l2.66,-3.14l1.83,-3.74l0.03,-0.12l0.13,-4.53l3.23,0.31l3.63,0.64l3.18,2.08l0.13,1.91l-1.79,2.22l-0.0,0.37l1.69,2.2l-0.28,1.8l-4.74,2.84l-3.33,0.62l-2.5,-1.21l-0.41,0.17l-0.73,2.05l-2.39,3.44l-0.74,1.78l-2.78,2.61l-3.48,0.26l-0.17,0.07l-1.98,1.68l-0.1,0.21l-0.15,2.33l-2.68,0.45l-0.17,0.09l-3.1,3.2l-2.75,4.38l-0.99,3.06l-0.14,4.31l0.25,0.31l3.5,0.58l1.07,3.24l1.18,2.76l0.34,0.18l3.43,-0.69l4.55,1.52l2.45,1.32l1.76,1.65l0.12,0.07l3.11,0.96l2.63,1.46l0.13,0.04l4.12,0.2l2.41,0.3l-0.36,2.81l0.8,3.51l1.81,3.78l0.08,0.1l3.73,3.17l0.34,0.03l1.93,-1.08l0.13,-0.15l1.35,-3.44l0.01,-0.18l-1.31,-5.38l-0.08,-0.14l-1.46,-1.5l3.68,-1.51l2.84,-2.46l1.45,-2.55l0.04,-0.17l-0.2,-2.39l-0.04,-0.12l-1.7,-3.07l-2.9,-2.64l2.79,-3.66l0.05,-0.27l-1.08,-3.38l-0.8,-5.75l1.45,-0.75l4.18,1.03l2.6,0.38l0.18,-0.03l1.93,-0.95l2.18,1.23l3.01,2.18l0.73,1.42l0.25,0.16l4.18,0.27l-0.06,2.95l0.83,4.7l0.22,0.24l2.19,0.55l1.75,2.08l0.38,0.07l3.63,-2.03l0.11,-0.11l2.38,-4.06l1.36,-1.43l1.76,3.01l3.26,4.68l2.68,4.19l-0.94,2.09l0.12,0.38l3.31,1.98l2.23,1.98l0.13,0.07l3.94,0.89l1.48,1.02l0.96,2.82l0.22,0.2l1.85,0.43l0.88,1.13l0.17,3.53l-1.68,1.16l-1.76,1.14l-4.08,1.17l-0.11,0.06l-3.08,2.65l-4.11,0.52l-5.35,-0.69l-3.76,-0.02l-2.62,0.23l-0.2,0.1l-2.05,2.29l-3.13,1.41l-0.11,0.08l-3.6,4.24l-2.87,2.92l-0.05,0.36l0.33,0.14l2.13,-0.52l0.15,-0.08l3.98,-4.15l5.16,-2.63l3.58,-0.31l1.82,1.3l-2.09,1.91l-0.09,0.29l0.8,3.46l0.82,2.37l0.15,0.17l3.25,1.56l0.16,0.03l4.14,-0.45l0.21,-0.12l2.03,-2.86l0.11,1.46l0.13,0.22l1.26,0.88l-2.7,1.78l-5.51,1.83l-2.52,1.26l-2.75,2.16l-1.52,-0.18l-0.08,-2.16l4.19,-2.47l0.14,-0.34l-0.3,-0.22l-4.01,0.1l-2.66,0.36l-1.45,-1.56l0.0,-4.16l-0.11,-0.23l-1.11,-0.91l-0.28,-0.05l-1.5,0.48l-0.7,-0.7l-0.45,0.02l-1.91,2.39l-0.8,2.5l-0.82,1.31l-0.95,0.43l-0.77,0.15l-0.23,0.2l-0.18,0.56l-8.2,0.02l-0.13,0.03l-1.19,0.61l-2.95,2.45l-0.78,1.13l-4.6,0.01l-0.12,0.02l-1.13,0.48l-0.13,0.44l0.37,0.55l0.2,0.82l-0.01,0.09l-3.1,1.42l-2.63,0.5l-2.84,1.57l-0.47,0.0l-0.72,-0.4l-0.18,-0.27l0.03,-0.15l0.52,-1.0l1.2,-1.71l0.73,-1.8l0.02,-0.17l-1.03,-5.47l-0.15,-0.21l-2.35,-1.32l0.16,-0.29l-0.05,-0.35l-0.37,-0.38l-0.22,-0.09l-0.56,0.0l-0.35,-0.34l-0.11,-0.65l-0.46,-0.2l-0.39,0.26l-0.2,-0.03l-0.11,-0.33l-0.48,-0.25l-0.21,-0.71l-0.15,-0.18l-3.97,-2.07l-4.8,-2.39l-0.25,-0.01l-2.19,0.89l-0.72,0.03l-3.04,-0.82l-0.14,-0.0l-1.94,0.4l-2.4,-0.98l-2.56,-0.51l-1.7,-0.19l-0.62,-0.44l-0.42,-1.67l-0.3,-0.23l-0.85,0.02l-0.29,0.3l-0.01,0.95l-69.26,-0.01l-4.77,-3.14l-1.78,-1.41l-4.51,-1.38l-1.3,-2.73l0.34,-1.96l-0.17,-0.33l-3.06,-1.37l-0.41,-2.58l-0.11,-0.18l-2.92,-2.4l-0.05,-1.53l1.32,-1.59l0.07,-0.2l-0.07,-2.21l-0.16,-0.26l-4.19,-2.22l-2.52,-4.02l-1.56,-2.6l-0.08,-0.09l-2.28,-1.64l-1.65,-1.48l-1.31,-1.89l-0.38,-0.1l-2.51,1.21l-2.28,1.92l-2.03,-2.22l-1.85,-1.71l-2.44,-1.04l-2.28,-0.12l0.03,-37.72l4.27,0.98l4.0,2.13l2.61,0.4l0.24,-0.07l2.17,-1.81l2.92,-1.33l3.63,0.53l0.18,-0.03l3.72,-1.94l3.89,-1.06l1.6,1.72l0.37,0.06l1.87,-1.04l0.14,-0.19l0.48,-1.83l1.37,0.38l4.18,3.96l0.41,0.0l2.89,-2.62l0.28,2.79l0.37,0.26l3.08,-0.73l0.17,-0.12l0.85,-1.16l2.81,0.24l3.83,1.86l5.86,1.61l3.46,0.75l2.44,-0.26l2.89,1.89l-3.12,1.89l-0.14,0.31l0.24,0.24l4.53,0.92l6.84,-0.5l2.04,-0.71l2.54,2.44l0.39,0.02l2.72,-2.16l-0.01,-0.48l-2.26,-1.61l1.27,-1.16l2.94,-0.19l1.94,-0.42l1.89,0.97l2.49,2.32l0.24,0.08l2.71,-0.33l4.35,1.9l0.17,0.02l3.86,-0.67l3.62,0.1l0.31,-0.33l-0.26,-2.44l1.9,-0.65l3.58,1.36l-0.01,3.84l0.23,0.29l0.34,-0.17l1.51,-3.23l1.81,0.1l0.31,-0.22l1.13,-4.37l-0.08,-0.29l-2.68,-2.73l-2.83,-1.76l0.19,-4.73l2.77,-3.15l3.06,0.69l2.44,1.97l3.24,4.88l-2.05,2.02l0.15,0.51l4.41,0.85ZM265.85,150.7l-0.84,0.04l-3.15,-0.99l-1.77,-1.17l0.19,-0.06l3.17,0.79l2.39,1.27l0.01,0.12ZM249.41,3.71l6.68,0.49l5.34,0.79l4.34,1.6l-0.08,1.24l-5.91,2.56l-6.03,1.21l-2.36,1.38l-0.14,0.34l0.29,0.22l4.37,-0.02l-4.96,3.01l-4.06,1.64l-0.11,0.08l-4.21,4.62l-5.07,0.92l-0.12,0.05l-1.53,1.1l-7.5,0.59l-0.28,0.28l0.24,0.31l2.67,0.54l-1.04,0.6l-0.09,0.44l1.89,2.49l-2.11,1.66l-3.83,1.52l-0.15,0.13l-1.14,2.01l-3.41,1.55l-0.16,0.36l0.35,1.19l0.3,0.22l3.98,-0.19l0.03,0.78l-6.42,2.99l-6.44,-1.41l-7.41,0.79l-3.72,-0.62l-4.48,-0.26l-0.25,-2.0l4.37,-1.13l0.21,-0.38l-1.14,-3.55l1.13,-0.28l6.61,2.29l0.35,-0.12l-0.04,-0.37l-3.41,-3.45l-0.14,-0.08l-3.57,-0.92l1.62,-1.7l4.36,-1.3l0.2,-0.18l0.71,-1.94l-0.12,-0.36l-3.45,-2.15l-0.88,-2.43l6.36,0.23l1.94,0.61l0.23,-0.02l3.91,-2.1l0.15,-0.32l-0.26,-0.24l-5.69,-0.67l-8.69,0.37l-4.3,-1.92l-2.12,-2.39l-2.82,-1.68l-0.44,-1.65l3.41,-1.06l2.93,-0.2l4.91,-0.99l3.69,-2.28l2.93,0.31l2.64,1.68l0.42,-0.1l1.84,-3.23l3.17,-0.96l4.45,-0.69l7.56,-0.26l1.26,0.64l0.18,0.03l7.2,-1.06l10.81,0.8ZM203.94,57.59l0.01,0.32l1.97,2.97l0.51,-0.01l2.26,-3.75l6.05,-1.89l4.08,4.72l-0.36,2.95l0.38,0.33l4.95,-1.36l0.11,-0.05l2.23,-1.77l5.37,2.31l3.32,2.14l0.3,1.89l0.36,0.25l4.48,-1.01l2.49,2.8l0.14,0.09l5.99,1.78l2.09,1.74l2.18,3.83l-4.29,1.91l-0.01,0.54l5.9,2.83l3.95,0.94l3.54,3.84l0.2,0.1l3.58,0.25l-0.67,2.51l-4.18,4.54l-2.84,-1.61l-3.91,-3.95l-0.26,-0.09l-3.24,0.52l-0.25,0.26l-0.32,2.37l0.1,0.26l2.63,2.38l3.42,1.89l0.96,1.0l1.57,3.8l-0.74,2.43l-2.85,-0.96l-6.26,-3.15l-0.38,0.09l0.04,0.39l3.54,3.4l2.55,2.31l0.23,0.78l-6.26,-1.43l-5.33,-2.25l-2.73,-1.73l0.67,-0.86l-0.09,-0.45l-7.38,-4.01l-0.44,0.27l0.03,0.89l-6.85,0.61l-1.8,-1.17l1.43,-2.6l4.56,-0.07l5.15,-0.52l0.23,-0.45l-0.76,-1.34l0.8,-1.89l3.21,-4.06l0.05,-0.29l-0.72,-1.95l-0.97,-1.47l-0.11,-0.1l-3.84,-2.1l-4.53,-1.33l1.09,-0.75l0.05,-0.45l-2.65,-2.75l-0.18,-0.09l-2.12,-0.24l-1.91,-1.47l-0.39,0.02l-1.27,1.25l-4.4,0.56l-9.06,-0.99l-5.28,-1.31l-4.01,-0.67l-1.72,-1.31l2.32,-1.85l0.1,-0.33l-0.28,-0.2l-3.3,-0.02l-0.74,-4.36l1.86,-4.09l2.46,-1.88l5.74,-1.15l-1.5,2.55ZM261.28,159.28l0.19,0.14l1.82,0.42l1.66,-0.05l-0.66,0.68l-0.75,0.16l-3.0,-1.25l-0.46,-0.77l0.51,-0.52l0.68,1.19ZM230.87,84.48l-2.48,0.19l-0.52,-1.74l0.96,-2.17l2.03,-0.53l1.71,1.04l0.02,1.6l-0.22,0.46l-1.5,1.16ZM229.52,58.19l0.14,0.82l-4.99,-0.22l-2.73,0.63l-0.59,-0.23l-2.61,-2.4l0.08,-1.38l0.94,-0.25l5.61,0.51l4.14,2.54ZM222.12,105.0l-0.79,1.63l-0.75,-0.22l-0.52,-0.91l0.04,-0.09l0.84,-1.01l0.74,0.06l0.44,0.55ZM183.77,38.22l2.72,1.65l0.16,0.04l4.83,-0.01l1.92,1.52l-0.51,1.75l0.18,0.36l2.84,1.14l1.56,1.19l0.16,0.06l3.37,0.22l3.65,0.42l4.07,-1.1l5.05,-0.43l3.96,0.35l2.53,1.8l0.48,1.79l-1.37,1.16l-3.6,1.03l-3.22,-0.59l-7.17,0.76l-5.1,0.09l-4.0,-0.6l-6.48,-1.56l-0.81,-2.57l-0.3,-2.49l-0.1,-0.19l-2.51,-2.25l-0.16,-0.07l-5.12,-0.63l-2.61,-1.45l0.75,-1.71l4.88,0.32ZM207.46,91.26l0.42,1.62l0.42,0.19l1.12,-0.55l1.35,0.99l2.74,1.39l2.73,1.2l0.2,1.74l0.35,0.26l1.72,-0.29l1.31,0.97l-1.72,0.96l-3.68,-0.9l-1.34,-1.71l-0.43,-0.04l-2.46,2.1l-3.23,1.85l-0.74,-1.98l-0.31,-0.19l-2.47,0.28l1.49,-1.34l0.1,-0.19l0.32,-3.15l0.79,-3.45l1.34,0.25ZM215.59,102.66l-2.73,2.0l-1.49,-0.08l-0.37,-0.7l1.61,-1.56l3.0,0.03l-0.02,0.3ZM202.79,24.07l0.11,0.12l2.54,1.53l-3.01,1.47l-4.55,4.07l-4.3,0.38l-5.07,-0.68l-2.51,-2.09l0.03,-1.72l1.86,-1.4l0.1,-0.34l-0.29,-0.2l-4.49,0.04l-2.63,-1.79l-1.45,-2.36l1.61,-2.38l1.65,-1.69l2.47,-0.4l0.19,-0.48l-0.72,-0.89l5.1,-0.26l3.1,3.05l0.13,0.07l4.21,1.25l3.99,1.06l1.92,3.65ZM187.5,59.3l-0.15,0.1l-2.59,3.4l-2.5,-0.15l-1.47,-3.92l0.04,-2.24l1.22,-1.92l2.34,-1.26l5.11,0.17l4.28,1.06l-3.36,3.86l-2.9,0.9ZM186.19,48.8l-1.15,1.63l-3.42,-0.35l-2.68,-1.15l1.11,-1.88l3.34,-1.27l2.01,1.63l0.79,1.38ZM185.78,35.41l-0.95,0.13l-4.48,-0.33l-0.4,-0.91l4.5,0.07l1.45,0.82l-0.1,0.21ZM180.76,32.56l-3.43,1.03l-1.85,-1.14l-1.01,-1.92l-0.16,-1.87l2.87,0.2l1.39,0.35l2.75,1.75l-0.55,1.6ZM181.03,76.32l-1.21,1.2l-3.19,-1.26l-0.18,-0.01l-1.92,0.45l-2.88,-1.67l1.84,-1.16l1.6,-1.77l2.45,1.17l1.45,0.77l2.05,2.28ZM169.72,54.76l2.83,0.97l0.14,0.01l4.25,-0.58l0.47,1.01l-2.19,2.16l0.07,0.48l3.61,1.95l-0.41,3.84l-3.87,1.68l-2.23,-0.36l-1.73,-1.75l-6.07,-3.53l0.03,-1.01l4.79,0.55l0.3,-0.16l-0.04,-0.34l-2.55,-2.89l2.59,-2.05ZM174.44,40.56l1.49,1.87l0.07,2.48l-1.07,3.52l-3.87,0.48l-2.41,-0.72l0.05,-2.72l-0.33,-0.3l-3.79,0.36l-0.13,-3.31l2.36,0.14l0.15,-0.03l3.7,-1.74l3.44,0.29l0.31,-0.22l0.03,-0.12ZM170.14,31.5l0.75,1.74l-3.52,-0.52l-4.19,-1.77l-4.65,-0.17l1.65,-1.11l-0.05,-0.52l-2.86,-1.26l-0.13,-1.58l4.52,0.7l6.66,1.99l1.84,2.5ZM134.64,58.08l-1.08,1.93l0.34,0.44l5.44,-1.41l3.37,2.32l0.37,-0.02l2.66,-2.28l2.03,1.38l2.01,4.53l0.53,0.04l1.26,-1.93l0.03,-0.27l-1.67,-4.55l1.82,-0.58l2.36,0.73l2.69,1.84l1.53,4.46l0.77,3.24l0.15,0.19l4.22,2.26l4.32,2.04l-0.21,1.51l-3.87,0.34l-0.19,0.5l1.45,1.54l-0.65,1.23l-4.3,-0.65l-4.4,-1.19l-2.97,0.28l-4.67,1.48l-6.31,0.65l-4.27,0.39l-1.26,-1.91l-0.15,-0.12l-3.42,-1.2l-0.16,-0.01l-2.05,0.45l-2.66,-3.02l1.2,-0.34l3.82,-0.76l3.58,0.19l3.27,-0.78l0.23,-0.29l-0.24,-0.29l-4.84,-1.06l-5.42,0.35l-3.4,-0.09l-0.97,-1.22l5.39,-1.7l0.21,-0.33l-0.3,-0.25l-3.82,0.06l-3.95,-1.1l1.88,-3.13l1.68,-1.81l6.54,-2.84l2.11,0.77ZM158.85,56.58l-1.82,2.62l-3.38,-2.9l0.49,-0.39l3.17,-0.18l1.54,0.86ZM149.71,42.7l1.0,1.87l0.37,0.14l2.17,-0.83l2.33,0.2l0.38,2.16l-1.38,2.17l-8.33,0.76l-6.34,2.15l-3.51,0.1l-0.22,-1.13l4.98,-2.12l0.17,-0.34l-0.31,-0.23l-11.27,0.6l-3.04,-0.78l3.14,-4.57l2.2,-1.35l6.87,1.7l4.4,3.0l0.14,0.05l4.37,0.39l0.27,-0.48l-3.41,-4.68l1.96,-1.62l2.28,0.53l0.79,2.32ZM145.44,29.83l-2.18,0.77l-3.79,-0.0l0.02,-0.31l2.34,-1.5l1.2,0.23l2.42,0.83ZM144.83,34.5l-4.44,1.46l-3.18,-1.48l1.6,-1.36l3.51,-0.53l3.1,0.75l-0.6,1.16ZM119.02,65.87l-6.17,2.07l-1.19,-1.82l-0.13,-0.11l-5.48,-2.32l0.92,-1.7l1.73,-3.44l2.16,-3.15l-0.02,-0.36l-2.09,-2.56l7.84,-0.71l3.59,1.02l6.32,0.27l2.35,1.37l2.25,1.71l-2.68,1.04l-6.21,3.41l-3.1,3.28l-0.08,0.21l0.0,1.81ZM129.66,35.4l-0.3,3.55l-1.77,1.67l-2.34,0.27l-4.62,2.2l-3.89,0.76l-2.83,-0.93l3.85,-3.52l5.04,-3.36l3.75,0.07l3.11,-0.7ZM111.24,152.74l-0.82,0.29l-3.92,-1.39l-0.7,-1.06l-0.12,-0.1l-2.15,-1.09l-0.41,-0.84l-0.2,-0.16l-2.44,-0.56l-0.84,-1.56l0.1,-0.36l2.34,0.64l1.53,0.5l2.28,0.34l0.78,1.04l1.24,1.55l0.09,0.08l2.42,1.3l0.81,1.39ZM88.54,134.82l0.14,0.02l2.0,-0.23l-0.67,3.48l0.06,0.24l1.78,2.22l-0.24,-0.0l-1.4,-1.42l-0.91,-1.53l-1.26,-1.08l-0.42,-1.35l0.09,-0.66l0.82,0.31Z",
                name: "Canada"
            },
            CG: {
                path: "M453.66,296.61l-0.9,-0.82l-0.35,-0.04l-0.83,0.48l-0.77,0.83l-1.65,-2.13l1.66,-1.2l0.08,-0.39l-0.81,-1.43l0.59,-0.43l1.62,-0.29l0.24,-0.24l0.1,-0.58l0.94,0.84l0.19,0.08l2.21,0.11l0.27,-0.14l0.81,-1.29l0.32,-1.76l-0.27,-1.96l-0.06,-0.15l-1.08,-1.35l1.02,-2.74l-0.09,-0.34l-0.62,-0.5l-0.22,-0.06l-1.66,0.18l-0.55,-1.03l0.12,-0.73l2.85,0.09l1.98,0.65l2.0,0.59l0.38,-0.25l0.17,-1.3l1.26,-2.24l1.34,-1.19l1.54,0.38l1.35,0.12l-0.11,1.15l-0.74,1.34l-0.5,1.61l-0.31,2.22l0.12,1.41l-0.4,0.9l-0.06,0.88l-0.24,0.67l-1.57,1.15l-1.24,1.41l-1.09,2.43l-0.03,0.13l0.08,1.95l-0.55,0.69l-1.46,1.23l-1.32,1.41l-0.61,-0.29l-0.13,-0.57l-0.29,-0.23l-1.36,-0.02l-0.23,0.1l-0.72,0.81l-0.41,-0.16Z",
                name: "Republic of the Congo"
            },
            CF: {
                path: "M459.41,266.56l1.9,-0.17l0.22,-0.12l0.36,-0.5l0.14,0.02l0.55,0.51l0.29,0.07l3.15,-0.96l0.12,-0.07l1.05,-0.97l1.29,-0.87l0.12,-0.33l-0.17,-0.61l0.38,-0.12l2.36,0.15l0.15,-0.03l2.36,-1.17l0.12,-0.1l1.78,-2.72l1.18,-0.96l1.23,-0.34l0.21,0.79l0.07,0.13l1.37,1.5l0.01,0.86l-0.39,1.0l-0.01,0.17l0.16,0.78l0.1,0.17l0.91,0.76l1.89,1.09l1.24,0.92l0.02,0.67l0.12,0.23l1.67,1.3l0.99,1.03l0.61,1.46l0.14,0.15l1.79,0.95l0.2,0.4l-0.44,0.14l-1.54,-0.06l-1.98,-0.26l-0.93,0.22l-0.19,0.14l-0.3,0.48l-0.57,0.05l-0.91,-0.49l-0.26,-0.01l-2.7,1.21l-1.04,-0.23l-0.21,0.03l-0.34,0.19l-0.12,0.13l-0.64,1.3l-1.67,-0.43l-1.77,-0.24l-1.58,-0.91l-2.06,-0.85l-0.27,0.02l-1.42,0.88l-0.97,1.27l-0.06,0.14l-0.19,1.46l-1.3,-0.11l-1.67,-0.42l-0.27,0.07l-1.55,1.41l-0.99,1.76l-0.14,-1.18l-0.13,-0.22l-1.1,-0.78l-0.86,-1.2l-0.2,-0.84l-0.07,-0.13l-1.07,-1.19l0.16,-0.59l0.0,-0.15l-0.24,-1.01l0.18,-1.77l0.5,-0.38l0.09,-0.11l1.18,-2.4Z",
                name: "Central African Republic"
            },
            CD: {
                path: "M497.85,276.25l-0.14,2.77l0.2,0.3l0.57,0.19l-0.47,0.52l-1.0,0.71l-0.96,1.31l-0.56,1.22l-0.16,2.04l-0.54,0.89l-0.04,0.15l-0.02,1.76l-0.63,0.61l-0.09,0.2l-0.08,1.33l-0.2,0.11l-0.15,0.21l-0.23,1.37l0.03,0.2l0.6,1.08l0.16,2.96l0.44,2.29l-0.24,1.25l0.01,0.15l0.5,1.46l0.07,0.12l1.41,1.37l1.09,2.56l-0.51,-0.11l-3.45,0.45l-0.67,0.3l-0.15,0.15l-0.71,1.61l0.01,0.26l0.52,1.03l-0.43,2.9l-0.31,2.55l0.13,0.29l0.7,0.46l1.75,0.99l0.31,-0.01l0.26,-0.17l0.15,1.9l-1.44,-0.02l-0.94,-1.28l-0.94,-1.1l-0.17,-0.1l-1.76,-0.33l-0.5,-1.18l-0.42,-0.15l-1.44,0.75l-1.79,-0.32l-0.77,-1.05l-0.2,-0.12l-1.59,-0.23l-0.97,0.04l-0.1,-0.53l-0.27,-0.25l-0.86,-0.06l-1.13,-0.15l-1.62,0.37l-1.04,-0.06l-0.32,0.09l0.11,-2.56l-0.08,-0.21l-0.77,-0.87l-0.17,-1.41l0.36,-1.47l-0.03,-0.21l-0.48,-0.91l-0.04,-1.52l-0.3,-0.29l-2.65,0.02l0.13,-0.53l-0.29,-0.37l-1.28,0.01l-0.28,0.21l-0.07,0.24l-1.35,0.09l-0.26,0.18l-0.62,1.45l-0.25,0.42l-1.17,-0.3l-0.19,0.01l-0.79,0.34l-1.44,0.18l-1.41,-1.96l-0.7,-1.47l-0.61,-1.86l-0.28,-0.21l-7.39,-0.03l-0.92,0.3l-0.78,-0.03l-0.78,0.25l-0.11,-0.25l0.35,-0.15l0.18,-0.26l0.07,-1.02l0.33,-0.52l0.72,-0.42l0.52,0.2l0.33,-0.08l0.76,-0.86l0.99,0.02l0.11,0.48l0.16,0.2l0.94,0.44l0.35,-0.07l1.46,-1.56l1.44,-1.21l0.68,-0.85l0.06,-0.2l-0.08,-1.99l1.04,-2.33l1.1,-1.23l1.62,-1.19l0.11,-0.14l0.29,-0.8l0.08,-0.94l0.38,-0.82l0.03,-0.16l-0.13,-1.38l0.3,-2.16l0.47,-1.51l0.73,-1.31l0.04,-0.12l0.15,-1.51l0.21,-1.66l0.89,-1.16l1.16,-0.7l1.9,0.79l1.69,0.95l1.81,0.24l1.85,0.48l0.35,-0.16l0.71,-1.43l0.16,-0.09l1.03,0.23l0.19,-0.02l2.65,-1.19l0.86,0.46l0.17,0.03l0.81,-0.08l0.23,-0.14l0.31,-0.5l0.75,-0.17l1.83,0.26l1.64,0.06l0.72,-0.21l1.39,1.9l0.16,0.11l1.12,0.3l0.24,-0.04l0.58,-0.36l1.05,0.15l0.15,-0.02l1.15,-0.44l0.47,0.84l0.08,0.09l2.08,1.57Z",
                name: "Democratic Republic of the Congo"
            },
            CZ: {
                path: "M463.29,152.22l-0.88,-0.47l-0.18,-0.03l-1.08,0.15l-1.86,-0.94l-0.21,-0.02l-0.88,0.24l-0.13,0.07l-1.25,1.17l-1.63,-0.91l-1.38,-1.36l-1.22,-0.75l-0.24,-1.24l-0.33,-0.75l1.53,-0.6l0.98,-0.84l1.74,-0.62l0.11,-0.07l0.47,-0.47l0.46,0.27l0.24,0.03l0.96,-0.3l1.06,0.95l0.15,0.07l1.57,0.24l-0.1,0.6l0.16,0.32l1.36,0.68l0.41,-0.15l0.28,-0.62l1.29,0.28l0.19,0.84l0.26,0.23l1.73,0.18l0.74,1.02l-0.17,0.0l-0.25,0.13l-0.32,0.49l-0.46,0.11l-0.22,0.23l-0.13,0.57l-0.32,0.1l-0.2,0.22l-0.03,0.14l-0.65,0.25l-1.05,-0.05l-0.28,0.17l-0.22,0.43Z",
                name: "Czech Republic"
            },
            CY: {
                path: "M505.03,193.75l-1.51,0.68l-1.0,-0.3l-0.32,-0.63l0.69,-0.06l0.41,0.13l0.19,-0.0l0.62,-0.22l0.31,0.02l0.06,0.22l0.49,0.17l0.06,-0.01Z",
                name: "Cyprus"
            },
            CR: {
                path: "M213.0,263.84l-0.98,-0.4l-0.3,-0.31l0.16,-0.24l0.05,-0.21l-0.09,-0.56l-0.1,-0.18l-0.76,-0.65l-0.99,-0.5l-0.74,-0.28l-0.13,-0.58l-0.12,-0.18l-0.66,-0.45l-0.34,-0.0l-0.13,0.31l0.13,0.59l-0.17,0.21l-0.34,-0.42l-0.14,-0.1l-0.7,-0.22l-0.23,-0.34l0.01,-0.62l0.31,-0.74l-0.14,-0.38l-0.3,-0.15l0.47,-0.4l1.48,0.6l0.26,-0.02l0.47,-0.27l0.58,0.15l0.35,0.44l0.17,0.11l0.74,0.17l0.27,-0.07l0.3,-0.27l0.52,1.09l0.97,1.02l0.77,0.71l-0.41,0.1l-0.23,0.3l0.01,1.02l0.12,0.24l0.2,0.14l-0.07,0.05l-0.11,0.3l0.08,0.37l-0.23,0.63Z",
                name: "Costa Rica"
            },
            CU: {
                path: "M215.01,226.09l2.08,0.18l1.94,0.03l2.24,0.86l0.95,0.92l0.25,0.08l2.22,-0.28l0.79,0.55l3.68,2.81l0.19,0.06l0.77,-0.03l1.18,0.42l-0.12,0.47l0.27,0.37l1.78,0.1l1.59,0.9l-0.11,0.22l-1.5,0.3l-1.64,0.13l-1.75,-0.2l-2.69,0.19l1.0,-0.86l-0.03,-0.48l-1.02,-0.68l-0.13,-0.05l-1.52,-0.16l-0.74,-0.64l-0.57,-1.42l-0.3,-0.19l-1.36,0.1l-2.23,-0.67l-0.71,-0.52l-0.14,-0.06l-3.2,-0.4l-0.42,-0.25l0.56,-0.39l0.12,-0.33l-0.27,-0.22l-2.46,-0.13l-0.2,0.06l-1.72,1.31l-0.94,0.03l-0.25,0.15l-0.29,0.53l-1.04,0.24l-0.29,-0.07l0.7,-0.43l0.1,-0.11l0.5,-0.87l1.04,-0.54l1.23,-0.49l1.86,-0.25l0.62,-0.28Z",
                name: "Cuba"
            },
            SZ: {
                path: "M500.95,353.41l-0.41,0.97l-1.16,0.23l-1.29,-1.26l-0.02,-0.71l0.63,-0.93l0.23,-0.7l0.47,-0.12l1.04,0.4l0.32,1.05l0.2,1.08Z",
                name: "Swaziland"
            },
            SY: {
                path: "M510.84,199.83l0.09,-0.11l0.07,-0.2l-0.04,-1.08l0.56,-1.4l1.3,-1.01l0.1,-0.34l-0.41,-1.11l-0.24,-0.19l-0.89,-0.11l-0.2,-1.84l0.55,-1.05l1.3,-1.22l0.09,-0.19l0.09,-1.09l0.39,0.27l0.25,0.04l2.66,-0.77l1.35,0.52l2.06,-0.01l2.93,-1.08l1.35,0.04l2.14,-0.34l-0.83,1.16l-1.31,0.68l-0.16,0.3l0.23,2.03l-0.9,3.25l-5.43,2.87l-4.79,2.91l-2.32,-0.92Z",
                name: "Syria"
            },
            KG: {
                path: "M599.04,172.15l0.38,-0.9l1.43,-0.37l4.04,1.02l0.37,-0.23l0.36,-1.64l1.17,-0.52l3.45,1.24l0.2,-0.0l0.86,-0.31l4.09,0.08l3.61,0.31l1.18,1.02l0.11,0.06l1.19,0.34l-0.13,0.26l-3.84,1.58l-0.13,0.1l-0.81,1.08l-3.08,0.34l-0.24,0.16l-0.85,1.7l-2.43,-0.37l-0.14,0.01l-1.79,0.61l-2.39,1.4l-0.12,0.39l0.25,0.49l-0.48,0.45l-4.57,0.43l-3.04,-0.94l-2.45,0.18l0.14,-1.02l2.42,0.44l0.27,-0.08l0.81,-0.81l1.76,0.27l0.21,-0.05l3.21,-2.14l-0.03,-0.51l-2.97,-1.57l-0.26,-0.01l-1.64,0.69l-1.38,-0.84l1.81,-1.67l-0.09,-0.5l-0.46,-0.18Z",
                name: "Kyrgyzstan"
            },
            KE: {
                path: "M523.3,287.04l0.06,0.17l1.29,1.8l-1.46,0.84l-0.11,0.11l-0.55,0.93l-0.81,0.16l-0.24,0.24l-0.34,1.69l-0.81,1.06l-0.46,1.58l-0.76,0.63l-3.3,-2.3l-0.16,-1.32l-0.15,-0.23l-9.35,-5.28l-0.02,-2.4l1.92,-2.63l0.91,-1.83l0.01,-0.24l-1.09,-2.86l-0.29,-1.24l-1.09,-1.63l2.93,-2.85l0.92,0.3l0.0,1.19l0.09,0.22l0.86,0.83l0.21,0.08l1.65,0.0l3.09,2.08l0.16,0.05l0.79,0.03l0.54,-0.06l0.58,0.28l1.67,0.2l0.28,-0.12l0.69,-0.98l2.04,-0.94l0.86,0.73l0.19,0.07l1.1,0.0l-1.82,2.36l-0.06,0.18l0.03,9.12Z",
                name: "Kenya"
            },
            SS: {
                path: "M505.7,261.39l0.02,1.64l-0.27,0.55l-1.15,0.05l-0.24,0.15l-0.85,1.44l0.22,0.45l1.44,0.17l1.15,1.12l0.42,0.95l0.14,0.15l1.06,0.54l1.33,2.45l-3.06,2.98l-1.44,1.08l-1.75,0.01l-1.92,0.56l-1.5,-0.53l-0.27,0.03l-0.85,0.57l-1.98,-1.5l-0.56,-1.02l-0.37,-0.13l-1.32,0.5l-1.08,-0.15l-0.2,0.04l-0.56,0.35l-0.9,-0.24l-1.44,-1.97l-0.39,-0.77l-0.13,-0.13l-1.78,-0.94l-0.65,-1.5l-1.08,-1.12l-1.57,-1.22l-0.02,-0.68l-0.12,-0.23l-1.37,-1.02l-1.17,-0.68l0.2,-0.08l0.86,-0.48l0.14,-0.18l0.63,-2.22l0.6,-1.02l1.47,-0.28l0.35,0.56l1.29,1.48l0.14,0.09l0.69,0.22l0.22,-0.02l0.83,-0.4l1.58,0.08l0.26,0.39l0.25,0.13l2.49,0.0l0.3,-0.25l0.06,-0.35l1.13,-0.42l0.18,-0.18l0.22,-0.63l0.68,-0.38l1.95,1.37l0.23,0.05l1.29,-0.26l0.19,-0.12l1.23,-1.8l1.36,-1.37l0.08,-0.25l-0.21,-1.52l-0.06,-0.15l-0.25,-0.3l0.94,-0.08l0.26,-0.21l0.1,-0.32l0.6,0.09l-0.25,1.67l0.3,1.83l0.11,0.19l1.22,0.94l0.25,0.73l-0.04,1.2l0.26,0.31l0.09,0.01Z",
                name: "South Sudan"
            },
            SR: {
                path: "M278.1,270.26l2.71,0.45l0.31,-0.14l0.19,-0.32l1.82,-0.16l2.25,0.56l-1.09,1.81l-0.04,0.19l0.2,1.72l0.05,0.13l0.9,1.35l-0.39,0.99l-0.21,1.09l-0.48,0.8l-1.2,-0.44l-0.17,-0.01l-1.12,0.24l-0.95,-0.21l-0.35,0.2l-0.25,0.73l0.05,0.29l0.3,0.35l-0.06,0.13l-1.01,-0.15l-1.42,-2.03l-0.32,-1.36l-0.29,-0.23l-0.63,-0.0l-0.95,-1.56l0.41,-1.16l0.01,-0.17l-0.08,-0.35l1.29,-0.56l0.18,-0.22l0.35,-1.97Z",
                name: "Suriname"
            },
            KH: {
                path: "M680.28,257.89l-0.93,-1.2l-1.24,-2.56l-0.56,-2.9l1.45,-1.92l3.07,-0.46l2.26,0.35l2.03,0.98l0.38,-0.11l1.0,-1.55l1.86,0.79l0.52,1.51l-0.28,2.82l-4.05,1.88l-0.12,0.45l0.79,1.1l-2.2,0.17l-2.08,0.98l-1.89,-0.33Z",
                name: "Cambodia"
            },
            SV: {
                path: "M197.02,248.89l0.18,-0.05l0.59,0.17l0.55,0.51l0.64,0.35l0.06,0.22l0.37,0.21l1.01,-0.28l0.38,0.13l0.16,0.13l-0.14,0.81l-0.18,0.38l-1.22,-0.03l-0.84,-0.23l-1.11,-0.52l-1.31,-0.15l-0.49,-0.38l0.02,-0.08l0.76,-0.57l0.46,-0.27l0.11,-0.35Z",
                name: "El Salvador"
            },
            SK: {
                path: "M468.01,150.02l0.05,0.07l0.36,0.1l0.85,-0.37l1.12,1.02l0.33,0.05l1.38,-0.65l1.07,0.3l0.16,0.0l1.69,-0.43l1.95,1.02l-0.51,0.64l-0.45,1.2l-0.32,0.2l-2.55,-0.93l-0.17,-0.01l-0.82,0.2l-0.17,0.11l-0.53,0.68l-0.94,0.32l-0.14,-0.11l-0.29,-0.04l-1.18,0.48l-0.95,0.09l-0.26,0.21l-0.15,0.47l-1.84,0.34l-0.82,-0.31l-1.14,-0.73l-0.2,-0.89l0.42,-0.84l0.91,0.05l0.12,-0.02l0.86,-0.33l0.18,-0.21l0.03,-0.13l0.32,-0.1l0.2,-0.22l0.12,-0.55l0.39,-0.1l0.18,-0.13l0.3,-0.45l0.43,-0.0Z",
                name: "Slovakia"
            },
            KR: {
                path: "M737.31,185.72l0.84,0.08l0.27,-0.12l0.89,-1.2l1.63,-0.13l1.1,-0.2l0.21,-0.16l0.12,-0.24l1.86,2.95l0.59,1.79l0.02,3.17l-0.84,1.38l-2.23,0.55l-1.95,1.14l-1.91,0.21l-0.22,-1.21l0.45,-2.07l-0.01,-0.17l-0.99,-2.67l1.54,-0.4l0.17,-0.46l-1.55,-2.24Z",
                name: "South Korea"
            },
            SI: {
                path: "M455.77,159.59l1.79,0.21l0.18,-0.04l1.2,-0.68l2.12,-0.08l0.21,-0.1l0.38,-0.42l0.1,0.01l0.28,0.62l-1.71,0.71l-0.18,0.22l-0.21,1.1l-0.71,0.26l-0.2,0.28l0.01,0.55l-0.59,-0.04l-0.79,-0.47l-0.38,0.06l-0.36,0.41l-0.84,-0.05l0.05,-0.15l-0.56,-1.24l0.21,-1.17Z",
                name: "Slovenia"
            },
            KP: {
                path: "M747.76,172.02l-0.23,-0.04l-0.26,0.08l-1.09,1.02l-0.78,1.06l-0.06,0.19l0.09,1.95l-1.12,0.57l-0.53,0.58l-0.88,0.82l-1.69,0.51l-1.09,0.79l-0.12,0.22l-0.07,1.17l-0.22,0.25l0.09,0.47l0.96,0.46l1.22,1.1l-0.19,0.37l-0.91,0.16l-1.75,0.14l-0.22,0.12l-0.87,1.18l-0.95,-0.09l-0.3,0.18l-0.97,-0.44l-0.39,0.13l-0.25,0.44l-0.29,0.09l-0.03,-0.2l-0.18,-0.23l-0.62,-0.25l-0.43,-0.29l0.52,-0.97l0.52,-0.3l0.13,-0.38l-0.18,-0.42l0.59,-1.47l0.01,-0.21l-0.16,-0.48l-0.22,-0.2l-1.41,-0.31l-0.82,-0.55l1.74,-1.62l2.73,-1.58l1.62,-1.96l0.96,0.76l0.17,0.06l2.17,0.11l0.31,-0.37l-0.32,-1.31l3.61,-1.21l0.16,-0.13l0.79,-1.34l1.25,1.38Z",
                name: "North Korea"
            },
            SO: {
                path: "M543.8,256.48l0.61,-0.05l1.14,-0.37l1.31,-0.25l0.12,-0.05l1.11,-0.81l0.57,-0.0l0.03,0.39l-0.23,1.49l0.01,1.25l-0.52,0.92l-0.7,2.71l-1.19,2.79l-1.54,3.2l-2.13,3.66l-2.12,2.79l-2.92,3.39l-2.47,2.0l-3.76,2.5l-2.33,1.9l-2.77,3.06l-0.61,1.35l-0.28,0.29l-1.22,-1.69l-0.03,-8.92l2.12,-2.76l0.59,-0.68l1.47,-0.04l0.18,-0.06l2.15,-1.71l3.16,-0.11l0.21,-0.09l7.08,-7.55l1.76,-2.12l1.14,-1.57l0.06,-0.18l0.01,-4.67Z",
                name: "Somalia"
            },
            SN: {
                path: "M379.28,250.34l-0.95,-1.82l-0.09,-0.1l-0.83,-0.6l0.62,-0.28l0.13,-0.11l1.21,-1.8l0.6,-1.31l0.71,-0.68l1.09,0.2l0.18,-0.02l1.17,-0.53l1.25,-0.03l1.17,0.73l1.59,0.65l1.47,1.83l1.59,1.7l0.12,1.56l0.49,1.46l0.1,0.14l0.85,0.65l0.18,0.82l-0.08,0.57l-0.13,0.05l-1.29,-0.19l-0.29,0.13l-0.11,0.16l-0.35,0.04l-1.83,-0.61l-5.84,-0.13l-0.12,0.02l-0.6,0.26l-0.87,-0.06l-1.01,0.32l-0.26,-1.26l1.9,0.04l0.16,-0.04l0.54,-0.32l0.37,-0.02l0.15,-0.05l0.78,-0.5l0.92,0.46l0.12,0.03l1.09,0.04l0.15,-0.03l1.08,-0.57l0.11,-0.44l-0.51,-0.74l-0.39,-0.1l-0.76,0.39l-0.62,-0.01l-0.92,-0.58l-0.18,-0.05l-0.79,0.04l-0.2,0.09l-0.48,0.51l-2.41,0.06Z",
                name: "Senegal"
            },
            SL: {
                path: "M392.19,267.53l-0.44,-0.12l-1.73,-0.97l-1.24,-1.28l-0.4,-0.84l-0.27,-1.65l1.21,-1.0l0.09,-0.12l0.27,-0.66l0.32,-0.41l0.56,-0.05l0.16,-0.07l0.5,-0.41l1.75,0.0l0.59,0.77l0.49,0.96l-0.07,0.64l0.04,0.19l0.36,0.58l-0.03,0.84l0.24,0.2l-0.64,0.65l-1.13,1.37l-0.06,0.14l-0.12,0.66l-0.43,0.58Z",
                name: "Sierra Leone"
            },
            SB: {
                path: "M826.74,311.51l0.23,0.29l-0.95,-0.01l-0.39,-0.63l0.65,0.27l0.45,0.09ZM825.01,308.52l-1.18,-1.39l-0.37,-1.06l0.24,0.0l0.82,1.84l0.49,0.6ZM823.21,309.42l-0.44,0.03l-1.43,-0.24l-0.32,-0.24l0.08,-0.5l1.29,0.31l0.72,0.47l0.11,0.18ZM817.9,303.81l2.59,1.44l0.3,0.41l-1.21,-0.66l-1.34,-0.89l-0.34,-0.3ZM813.77,302.4l0.48,0.34l0.1,0.08l-0.33,-0.17l-0.25,-0.25Z",
                name: "Solomon Islands"
            },
            SA: {
                path: "M528.24,243.1l-0.2,-0.69l-0.07,-0.12l-0.69,-0.71l-0.18,-0.94l-0.12,-0.19l-1.24,-0.89l-1.28,-2.09l-0.7,-2.08l-0.07,-0.11l-1.73,-1.79l-0.11,-0.07l-1.03,-0.39l-1.57,-2.36l-0.27,-1.72l0.1,-1.53l-0.03,-0.15l-1.44,-2.93l-1.25,-1.13l-1.34,-0.56l-0.72,-1.33l0.11,-0.49l-0.02,-0.2l-0.7,-1.38l-0.08,-0.1l-0.68,-0.56l-0.97,-1.98l-2.8,-4.03l-0.25,-0.13l-0.85,0.01l0.29,-1.11l0.12,-0.97l0.23,-0.81l2.52,0.39l0.23,-0.06l1.08,-0.84l0.6,-0.95l1.78,-0.35l0.22,-0.17l0.37,-0.83l0.74,-0.42l0.08,-0.46l-2.17,-2.4l4.55,-1.26l0.12,-0.06l0.36,-0.32l2.83,0.71l3.67,1.91l7.04,5.5l0.17,0.06l4.64,0.22l2.06,0.24l0.55,1.15l0.28,0.17l1.56,-0.06l0.9,2.15l0.14,0.15l1.14,0.57l0.39,0.85l0.11,0.13l1.59,1.06l0.12,0.91l-0.23,0.83l0.01,0.18l0.32,0.9l0.07,0.11l0.68,0.7l0.33,0.86l0.37,0.65l0.09,0.1l0.76,0.53l0.25,0.04l0.45,-0.12l0.35,0.75l0.1,0.63l0.96,2.68l0.23,0.19l7.53,1.33l0.27,-0.09l0.24,-0.26l0.87,1.41l-1.58,4.96l-7.34,2.54l-7.28,1.02l-2.34,1.17l-0.12,0.1l-1.74,2.63l-0.86,0.32l-0.49,-0.68l-0.28,-0.12l-0.92,0.12l-2.32,-0.25l-0.41,-0.23l-0.15,-0.04l-2.89,0.06l-0.63,0.2l-0.91,-0.59l-0.43,0.11l-0.66,1.27l-0.03,0.21l0.21,0.89l-0.6,0.45Z",
                name: "Saudi Arabia"
            },
            SE: {
                path: "M476.42,90.44l-0.15,0.1l-2.43,2.86l-0.07,0.24l0.36,2.31l-3.84,3.1l-4.83,3.38l-0.11,0.15l-1.82,5.45l0.03,0.26l1.78,2.68l2.27,1.99l-2.13,3.88l-2.49,0.82l-0.2,0.24l-0.95,6.05l-1.32,3.09l-2.82,-0.32l-0.3,0.16l-1.34,2.64l-2.48,0.14l-0.76,-3.15l-2.09,-4.04l-1.85,-5.01l1.03,-1.98l2.06,-2.53l0.06,-0.13l0.83,-4.45l-0.06,-0.25l-1.54,-1.86l-0.15,-5.0l1.52,-3.48l2.28,0.06l0.27,-0.16l0.87,-1.59l-0.01,-0.31l-0.8,-1.21l3.79,-5.63l4.07,-7.54l2.23,0.01l0.29,-0.22l0.59,-2.15l4.46,0.66l0.34,-0.26l0.34,-2.64l1.21,-0.14l3.24,2.08l3.78,2.85l0.06,6.37l0.03,0.14l0.67,1.29l-3.95,1.07Z",
                name: "Sweden"
            },
            SD: {
                path: "M505.98,259.75l-0.31,-0.9l-0.1,-0.14l-1.2,-0.93l-0.27,-1.66l0.29,-1.83l-0.25,-0.34l-1.16,-0.17l-0.33,0.21l-0.11,0.37l-1.3,0.11l-0.21,0.49l0.55,0.68l0.18,1.29l-1.31,1.33l-1.18,1.72l-1.04,0.21l-2.0,-1.4l-0.32,-0.02l-0.95,0.52l-0.14,0.16l-0.21,0.6l-1.16,0.43l-0.19,0.23l-0.04,0.27l-2.08,0.0l-0.25,-0.39l-0.24,-0.13l-1.81,-0.09l-0.14,0.03l-0.8,0.38l-0.49,-0.16l-1.22,-1.39l-0.42,-0.67l-0.31,-0.14l-1.81,0.35l-0.2,0.14l-0.72,1.24l-0.61,2.14l-0.73,0.4l-0.62,0.22l-0.83,-0.68l-0.12,-0.6l0.38,-0.97l0.01,-1.14l-0.08,-0.2l-1.39,-1.53l-0.25,-0.97l0.03,-0.57l-0.11,-0.25l-0.81,-0.66l-0.03,-1.34l-0.04,-0.14l-0.52,-0.98l-0.31,-0.15l-0.42,0.07l0.12,-0.44l0.63,-1.03l0.03,-0.23l-0.24,-0.88l0.69,-0.66l0.02,-0.41l-0.4,-0.46l0.58,-1.39l1.04,-1.71l1.97,0.16l0.32,-0.3l-0.12,-10.24l0.02,-0.8l2.59,-0.01l0.3,-0.3l0.0,-4.92l29.19,0.0l0.68,2.17l-0.4,0.35l-0.1,0.27l0.36,2.69l0.93,3.15l0.12,0.16l2.05,1.4l-0.99,1.15l-1.75,0.4l-0.15,0.08l-0.79,0.79l-0.08,0.17l-0.24,1.69l-1.07,3.75l-0.0,0.16l0.25,0.96l-0.38,2.1l-0.98,2.41l-1.52,1.3l-1.07,1.94l-0.25,0.99l-1.08,0.64l-0.13,0.18l-0.46,1.65Z",
                name: "Sudan"
            },
            DO: {
                path: "M241.7,234.97l0.15,-0.22l1.73,0.01l1.43,0.64l0.15,0.03l0.45,-0.04l0.36,0.74l0.28,0.17l1.02,-0.04l-0.04,0.43l0.27,0.33l1.03,0.09l0.91,0.7l-0.57,0.64l-0.99,-0.47l-0.16,-0.03l-1.11,0.11l-0.79,-0.12l-0.26,0.09l-0.38,0.4l-0.66,0.11l-0.28,-0.45l-0.38,-0.12l-0.83,0.37l-0.14,0.13l-0.85,1.49l-0.27,-0.17l-0.1,-0.58l0.05,-0.67l-0.07,-0.21l-0.44,-0.53l0.35,-0.25l0.12,-0.19l0.19,-1.0l-0.2,-1.4Z",
                name: "Dominican Republic"
            },
            DJ: {
                path: "M528.78,253.36l0.34,0.45l-0.06,0.76l-1.26,0.54l-0.05,0.53l0.82,0.53l-0.57,0.83l-0.3,-0.25l-0.27,-0.05l-0.56,0.17l-1.07,-0.03l-0.04,-0.56l-0.16,-0.56l0.76,-1.07l0.76,-0.97l0.89,0.18l0.25,-0.06l0.51,-0.42Z",
                name: "Djibouti"
            },
            DK: {
                path: "M452.4,129.07l-1.27,2.39l-2.25,-1.69l-0.26,-1.08l3.15,-1.0l0.63,1.39ZM447.87,126.25l-0.35,0.76l-0.47,-0.24l-0.38,0.09l-1.8,2.53l-0.03,0.29l0.56,1.4l-1.22,0.4l-1.68,-0.41l-0.92,-1.76l-0.07,-3.47l0.38,-0.88l0.62,-0.93l2.07,-0.21l0.19,-0.1l0.84,-0.95l1.5,-0.76l-0.06,1.26l-0.7,1.1l-0.03,0.25l0.3,1.0l0.18,0.19l1.06,0.42Z",
                name: "Denmark"
            },
            DE: {
                path: "M445.51,131.69l0.03,0.94l0.21,0.28l2.32,0.74l-0.02,1.0l0.37,0.3l2.55,-0.65l1.36,-0.89l2.63,1.27l1.09,1.01l0.51,1.51l-0.6,0.78l-0.0,0.36l0.88,1.17l0.58,1.68l-0.18,1.08l0.03,0.18l0.87,1.81l-0.66,0.2l-0.55,-0.32l-0.36,0.05l-0.58,0.58l-1.73,0.62l-0.99,0.84l-1.77,0.7l-0.16,0.4l0.42,0.94l0.26,1.34l0.14,0.2l1.25,0.76l1.22,1.2l-0.71,1.2l-0.81,0.37l-0.17,0.32l0.34,1.99l-0.04,0.09l-0.47,-0.39l-0.17,-0.07l-1.2,-0.1l-1.85,0.57l-2.15,-0.13l-0.29,0.18l-0.21,0.5l-0.96,-0.67l-0.24,-0.05l-0.67,0.16l-2.6,-0.94l-0.34,0.1l-0.42,0.57l-1.64,-0.02l0.26,-1.88l1.24,-2.15l-0.21,-0.45l-3.54,-0.58l-0.98,-0.71l0.12,-1.26l-0.05,-0.2l-0.44,-0.64l0.27,-2.18l-0.38,-3.14l1.17,-0.0l0.27,-0.17l0.63,-1.26l0.65,-3.17l-0.02,-0.17l-0.41,-1.0l0.32,-0.47l1.77,-0.16l0.37,0.6l0.47,0.06l1.7,-1.69l0.06,-0.33l-0.55,-1.24l-0.09,-1.51l1.5,0.36l0.16,-0.01l1.22,-0.4Z",
                name: "Germany"
            },
            YE: {
                path: "M553.53,242.65l-1.51,0.58l-0.17,0.16l-0.48,1.14l-0.07,0.79l-2.31,1.0l-3.98,1.19l-2.28,1.8l-0.97,0.12l-0.7,-0.14l-0.23,0.05l-1.42,1.03l-1.51,0.47l-2.07,0.13l-0.68,0.15l-0.17,0.1l-0.49,0.6l-0.57,0.16l-0.18,0.13l-0.3,0.49l-1.06,-0.05l-0.13,0.02l-0.73,0.32l-1.48,-0.11l-0.55,-1.26l0.07,-1.32l-0.04,-0.16l-0.39,-0.72l-0.48,-1.85l-0.52,-0.79l0.08,-0.02l0.22,-0.36l-0.23,-1.05l0.24,-0.39l0.04,-0.19l-0.09,-0.95l0.96,-0.72l0.11,-0.31l-0.23,-0.98l0.46,-0.88l0.75,0.49l0.26,0.03l0.63,-0.22l2.76,-0.06l0.5,0.25l2.42,0.26l0.85,-0.11l0.52,0.71l0.35,0.1l1.17,-0.43l0.15,-0.12l1.75,-2.64l2.22,-1.11l6.95,-0.96l2.55,5.58Z",
                name: "Yemen"
            },
            AT: {
                path: "M463.17,154.15l-0.14,0.99l-1.15,0.01l-0.24,0.47l0.39,0.56l-0.75,1.84l-0.36,0.4l-2.06,0.07l-0.14,0.04l-1.18,0.67l-1.96,-0.23l-3.43,-0.78l-0.5,-0.97l-0.33,-0.16l-2.47,0.55l-0.2,0.16l-0.18,0.37l-1.27,-0.38l-1.28,-0.09l-0.81,-0.41l0.25,-0.51l0.03,-0.18l-0.05,-0.28l0.35,-0.08l1.16,0.81l0.45,-0.13l0.27,-0.64l2.0,0.12l1.84,-0.57l1.05,0.09l0.71,0.59l0.47,-0.11l0.23,-0.54l0.02,-0.17l-0.32,-1.85l0.69,-0.31l0.13,-0.12l0.73,-1.23l1.61,0.89l0.35,-0.04l1.35,-1.27l0.7,-0.19l1.84,0.93l0.18,0.03l1.08,-0.15l0.81,0.43l-0.07,0.15l-0.02,0.2l0.24,1.06Z",
                name: "Austria"
            },
            DZ: {
                path: "M450.58,224.94l-8.31,4.86l-7.23,5.12l-3.46,1.13l-2.42,0.22l-0.02,-1.33l-0.2,-0.28l-1.15,-0.42l-1.45,-0.69l-0.55,-1.13l-0.1,-0.12l-8.45,-5.72l-17.72,-12.17l0.03,-0.38l-0.02,-3.21l3.84,-1.91l2.46,-0.41l2.1,-0.75l0.14,-0.11l0.9,-1.3l2.84,-1.06l0.19,-0.27l0.09,-1.81l1.21,-0.2l0.15,-0.07l1.06,-0.96l3.19,-0.46l0.23,-0.18l0.46,-1.08l-0.08,-0.34l-0.6,-0.54l-0.83,-2.85l-0.18,-1.8l-0.82,-1.57l2.13,-1.37l2.65,-0.49l0.13,-0.05l1.55,-1.15l2.34,-0.85l4.2,-0.51l4.07,-0.23l1.21,0.41l0.23,-0.01l2.3,-1.11l2.52,-0.02l0.94,0.62l0.2,0.05l1.25,-0.13l-0.36,1.03l-0.01,0.14l0.39,2.66l-0.56,2.2l-1.49,1.52l-0.08,0.24l0.22,2.12l0.11,0.2l1.94,1.58l0.02,0.54l0.12,0.23l1.45,1.06l1.04,4.85l0.81,2.42l0.13,1.19l-0.43,2.17l0.17,1.28l-0.31,1.53l0.2,1.56l-0.9,1.02l-0.01,0.38l1.43,1.88l0.09,1.06l0.04,0.13l0.89,1.48l0.37,0.12l1.03,-0.43l1.79,1.12l0.89,1.34Z",
                name: "Algeria"
            },
            US: {
                path: "M892.64,99.05l1.16,0.57l0.21,0.02l1.45,-0.38l1.92,0.99l2.17,0.47l-1.65,0.72l-1.75,-0.79l-0.93,-0.7l-0.21,-0.06l-2.11,0.22l-0.35,-0.2l0.09,-0.87ZM183.29,150.37l0.39,1.54l0.12,0.17l0.78,0.55l0.14,0.05l1.74,0.2l2.52,0.5l2.4,0.98l0.17,0.02l1.96,-0.4l3.01,0.81l0.91,-0.02l2.22,-0.88l4.67,2.33l3.86,2.01l0.21,0.71l0.15,0.18l0.33,0.17l-0.02,0.05l0.23,0.43l0.67,0.1l0.21,-0.05l0.1,-0.07l0.05,0.29l0.09,0.16l0.5,0.5l0.21,0.09l0.56,0.0l0.13,0.13l-0.2,0.36l0.12,0.41l2.49,1.39l0.99,5.24l-0.69,1.68l-1.16,1.64l-0.6,1.18l-0.06,0.31l0.04,0.22l0.28,0.43l0.11,0.1l0.85,0.47l0.15,0.04l0.63,0.0l0.14,-0.04l2.87,-1.58l2.6,-0.49l3.28,-1.5l0.17,-0.23l0.04,-0.43l-0.23,-0.93l-0.24,-0.39l0.74,-0.32l4.7,-0.01l0.25,-0.13l0.77,-1.15l2.9,-2.41l1.04,-0.52l8.35,-0.02l0.28,-0.21l0.2,-0.6l0.7,-0.14l1.06,-0.48l0.13,-0.11l0.92,-1.49l0.75,-2.39l1.67,-2.08l0.59,0.6l0.3,0.07l1.52,-0.49l0.88,0.72l-0.0,4.14l0.08,0.2l1.6,1.72l0.31,0.72l-2.42,1.35l-2.55,1.05l-2.64,0.9l-0.14,0.11l-1.33,1.81l-0.44,0.7l-0.05,0.15l-0.03,1.6l0.03,0.14l0.83,1.59l0.24,0.16l0.78,0.06l-1.15,0.33l-1.25,-0.04l-1.83,0.52l-2.51,0.29l-2.17,0.88l-0.17,0.36l0.33,0.22l3.55,-0.54l0.15,0.11l-2.87,0.73l-1.19,0.0l-0.16,-0.33l-0.36,0.06l-0.76,0.82l0.17,0.5l0.42,0.08l-0.45,1.75l-1.4,1.74l-0.04,-0.17l-0.21,-0.22l-0.48,-0.13l-0.77,-0.69l-0.36,-0.03l-0.12,0.34l0.52,1.58l0.09,0.14l0.52,0.43l0.03,0.87l-0.74,1.05l-0.39,0.63l0.05,-0.12l-0.08,-0.34l-1.19,-1.03l-0.28,-2.31l-0.26,-0.26l-0.32,0.19l-0.48,1.27l-0.01,0.19l0.39,1.33l-1.14,-0.31l-0.36,0.18l0.14,0.38l1.57,0.85l0.1,2.58l0.22,0.28l0.55,0.15l0.21,0.81l0.33,2.72l-1.46,1.94l-2.5,0.81l-0.12,0.07l-1.58,1.58l-1.15,0.17l-0.15,0.06l-1.27,1.03l-0.09,0.13l-0.32,0.85l-2.71,1.79l-1.45,1.37l-1.18,1.64l-0.05,0.12l-0.39,1.96l0.0,0.13l0.44,1.91l0.85,2.37l1.1,1.91l0.03,1.2l1.16,3.07l-0.08,1.74l-0.1,0.99l-0.57,1.48l-0.54,0.24l-0.97,-0.26l-0.34,-1.02l-0.12,-0.16l-0.89,-0.58l-2.44,-4.28l-0.34,-0.94l0.49,-1.71l-0.02,-0.21l-0.7,-1.5l-2.0,-2.35l-0.11,-0.08l-0.98,-0.42l-0.25,0.01l-2.42,1.19l-0.26,-0.08l-1.26,-1.29l-1.57,-0.68l-0.16,-0.02l-2.79,0.34l-2.18,-0.3l-1.98,0.19l-1.12,0.45l-0.14,0.44l0.4,0.65l-0.04,1.02l0.09,0.22l0.29,0.3l-0.06,0.05l-0.77,-0.33l-0.26,0.01l-0.87,0.48l-1.64,-0.08l-1.79,-1.39l-0.23,-0.06l-2.11,0.33l-1.75,-0.61l-0.14,-0.01l-1.61,0.2l-2.11,0.64l-0.11,0.06l-2.25,1.99l-2.53,1.21l-1.43,1.38l-0.58,1.22l-0.03,0.12l-0.03,1.86l0.13,1.32l0.3,0.62l-0.46,0.04l-1.71,-0.57l-1.85,-0.79l-0.63,-1.14l-0.54,-1.85l-0.07,-0.12l-1.45,-1.51l-0.86,-1.58l-1.26,-1.87l-0.09,-0.09l-1.76,-1.09l-0.17,-0.04l-2.05,0.05l-0.23,0.12l-1.44,1.97l-1.84,-0.72l-1.19,-0.76l-0.6,-1.45l-0.9,-1.52l-1.49,-1.21l-1.27,-0.87l-0.89,-0.96l-0.22,-0.1l-4.34,-0.0l-0.3,0.3l-0.0,0.84l-6.62,0.02l-5.66,-1.93l-3.48,-1.24l0.11,-0.25l-0.3,-0.42l-3.18,0.3l-2.6,0.2l-0.35,-1.19l-0.08,-0.13l-1.62,-1.61l-0.13,-0.08l-1.02,-0.29l-0.22,-0.66l-0.25,-0.2l-1.31,-0.13l-0.82,-0.7l-0.16,-0.07l-2.25,-0.27l-0.48,-0.34l-0.28,-1.44l-0.07,-0.14l-2.41,-2.84l-2.03,-3.89l0.08,-0.58l-0.1,-0.27l-1.08,-0.94l-1.87,-2.36l-0.33,-2.31l-0.07,-0.15l-1.24,-1.5l0.52,-2.4l-0.09,-2.57l-0.78,-2.3l0.96,-2.83l0.61,-5.66l-0.46,-4.26l-0.79,-2.71l-0.68,-1.4l0.13,-0.26l3.24,0.97l1.28,2.88l0.52,0.06l0.62,-0.84l0.06,-0.22l-0.4,-2.61l-0.74,-2.29l68.9,-0.0l0.3,-0.3l0.01,-0.95l0.32,-0.01ZM32.5,67.43l1.75,1.99l0.41,0.04l1.02,-0.81l3.79,0.25l-0.1,0.72l0.24,0.34l3.83,0.77l2.6,-0.44l5.21,1.41l4.84,0.43l1.9,0.57l0.15,0.01l3.25,-0.71l3.72,1.32l2.52,0.58l-0.03,38.14l0.29,0.3l2.41,0.11l2.34,1.0l1.7,1.59l2.22,2.42l0.42,0.03l2.41,-2.04l2.25,-1.08l1.23,1.76l1.71,1.53l2.24,1.62l1.54,2.56l2.56,4.09l0.11,0.11l4.1,2.17l0.06,1.93l-1.12,1.35l-1.22,-1.14l-2.08,-1.05l-0.68,-2.94l-0.09,-0.16l-3.18,-2.84l-1.32,-3.35l-0.25,-0.19l-2.43,-0.24l-3.93,-0.09l-2.85,-1.02l-5.24,-3.85l-6.77,-2.04l-3.52,0.3l-4.84,-1.7l-2.96,-1.6l-0.23,-0.02l-2.78,0.8l-0.21,0.35l0.46,2.31l-1.11,0.19l-2.9,0.78l-2.24,1.26l-2.42,0.68l-0.29,-1.79l1.07,-3.49l2.54,-1.11l0.12,-0.45l-0.69,-0.96l-0.41,-0.07l-3.19,2.12l-1.76,2.54l-3.57,2.62l-0.03,0.46l1.63,1.59l-2.14,2.38l-2.64,1.49l-2.49,1.09l-0.16,0.17l-0.58,1.48l-3.8,1.79l-0.14,0.14l-0.75,1.57l-2.75,1.41l-1.62,-0.25l-0.16,0.02l-2.35,0.98l-2.54,1.19l-2.06,1.15l-4.05,0.93l-0.1,-0.15l2.45,-1.45l2.49,-1.1l2.61,-1.88l3.03,-0.39l0.19,-0.1l1.2,-1.41l3.43,-2.11l0.61,-0.75l1.81,-1.24l0.13,-0.2l0.42,-2.7l1.24,-2.12l-0.03,-0.35l-0.34,-0.09l-2.73,1.05l-0.67,-0.53l-0.39,0.02l-1.13,1.11l-1.43,-1.62l-0.49,0.06l-0.41,0.8l-0.67,-1.31l-0.42,-0.12l-2.43,1.43l-1.18,-0.0l-0.18,-1.86l0.43,-1.3l-0.09,-0.33l-1.61,-1.33l-0.26,-0.06l-3.11,0.68l-2.0,-1.66l-1.61,-0.85l-0.01,-1.97l-0.11,-0.23l-1.76,-1.48l0.86,-1.96l2.01,-2.13l0.88,-1.94l1.79,-0.25l1.65,0.6l0.31,-0.06l1.91,-1.8l1.67,0.31l0.22,-0.04l1.91,-1.23l0.13,-0.33l-0.47,-1.82l-0.15,-0.19l-1.0,-0.52l1.51,-1.27l0.09,-0.34l-0.29,-0.19l-1.62,0.06l-2.66,0.88l-0.13,0.09l-0.62,0.72l-1.77,-0.8l-0.16,-0.02l-3.48,0.44l-3.5,-0.92l-1.06,-1.61l-2.78,-2.09l3.07,-1.51l5.52,-2.01l1.65,0.0l-0.28,1.73l0.31,0.35l5.29,-0.16l0.23,-0.49l-2.03,-2.59l-0.1,-0.08l-3.03,-1.58l-1.79,-2.12l-2.4,-1.83l-3.18,-1.27l1.13,-1.84l4.28,-0.14l0.15,-0.05l3.16,-2.0l0.13,-0.17l0.57,-2.07l2.43,-2.02l2.42,-0.52l4.67,-1.98l2.22,0.29l0.2,-0.04l3.74,-2.37l3.57,0.91ZM37.66,123.49l-2.31,1.26l-1.04,-0.75l-0.31,-1.35l2.06,-1.16l1.24,-0.51l1.48,0.22l0.76,0.81l-1.89,1.49ZM30.89,233.84l1.2,0.57l0.35,0.3l0.48,0.69l-1.6,0.86l-0.3,0.31l-0.24,-0.14l0.05,-0.54l-0.02,-0.15l-0.36,-0.83l0.05,-0.12l0.39,-0.38l0.07,-0.31l-0.09,-0.27ZM29.06,231.89l0.5,0.14l0.31,0.19l-0.46,0.1l-0.34,-0.43ZM25.02,230.13l0.2,-0.11l0.4,0.47l-0.43,-0.05l-0.17,-0.31ZM21.29,228.68l0.1,-0.07l0.22,0.02l0.02,0.21l-0.02,0.02l-0.32,-0.18ZM6.0,113.33l-1.19,0.45l-1.5,-0.64l-0.94,-0.63l1.76,-0.46l1.71,0.29l0.16,0.98Z",
                name: "United States of America"
            },
            LV: {
                path: "M473.99,127.16l0.07,-2.15l1.15,-2.11l2.05,-1.07l1.84,2.48l0.25,0.12l2.01,-0.07l0.29,-0.25l0.45,-2.58l1.85,-0.56l0.98,0.4l2.13,1.33l0.16,0.05l1.97,0.01l1.02,0.7l0.21,1.67l0.71,1.84l-2.44,1.23l-1.36,0.53l-2.28,-1.62l-0.12,-0.05l-1.18,-0.2l-0.28,-0.6l-0.31,-0.17l-2.43,0.35l-4.17,-0.23l-0.12,0.02l-2.45,0.93Z",
                name: "Latvia"
            },
            UY: {
                path: "M276.9,363.17l1.3,-0.23l2.4,2.04l0.22,0.07l0.82,-0.07l2.48,1.7l1.93,1.5l1.28,1.67l-0.95,1.14l-0.04,0.31l0.63,1.45l-0.96,1.57l-2.65,1.47l-1.73,-0.53l-0.15,-0.01l-1.25,0.28l-2.22,-1.16l-0.16,-0.03l-1.56,0.08l-1.33,-1.36l0.17,-1.58l0.48,-0.55l0.07,-0.2l-0.02,-2.74l0.66,-2.8l0.57,-2.02Z",
                name: "Uruguay"
            },
            LB: {
                path: "M510.44,198.11l-0.48,0.03l-0.26,0.17l-0.15,0.32l-0.21,-0.0l0.72,-1.85l1.19,-1.9l0.74,0.09l0.27,0.73l-1.19,0.93l-0.09,0.13l-0.54,1.36Z",
                name: "Lebanon"
            },
            LA: {
                path: "M684.87,248.8l0.61,-0.86l0.05,-0.16l0.11,-2.17l-0.08,-0.22l-1.96,-2.16l-0.15,-2.44l-0.08,-0.18l-1.9,-2.1l-0.19,-0.1l-1.89,-0.18l-0.29,0.15l-0.42,0.76l-1.21,0.06l-0.67,-0.41l-0.31,-0.0l-2.2,1.29l-0.05,-1.77l0.61,-2.7l-0.27,-0.37l-1.44,-0.1l-0.12,-1.31l-0.12,-0.21l-0.87,-0.65l0.38,-0.68l1.76,-1.41l0.08,0.22l0.27,0.2l1.33,0.07l0.31,-0.34l-0.35,-2.75l0.85,-0.25l1.32,1.88l1.11,2.36l0.27,0.17l2.89,0.02l0.78,1.82l-1.32,0.56l-0.12,0.09l-0.72,0.93l0.1,0.45l2.93,1.52l3.62,5.27l1.88,1.78l0.58,1.67l-0.38,2.11l-1.87,-0.79l-0.37,0.11l-0.99,1.54l-1.51,-0.73Z",
                name: "Laos"
            },
            TW: {
                path: "M725.6,222.5l-1.5,4.22l-0.82,1.65l-1.01,-1.7l-0.26,-1.8l1.4,-2.48l1.8,-1.81l0.76,0.53l-0.38,1.39Z",
                name: "Taiwan"
            },
            TT: {
                path: "M266.35,259.46l0.41,-0.39l0.09,-0.23l-0.04,-0.75l1.14,-0.26l0.2,0.03l-0.07,1.37l-1.73,0.23Z",
                name: "Trinidad and Tobago"
            },
            TR: {
                path: "M513.25,175.38l3.63,1.17l0.14,0.01l2.88,-0.45l2.11,0.26l0.18,-0.03l2.9,-1.53l2.51,-0.13l2.25,1.37l0.36,0.88l-0.23,1.36l0.19,0.33l1.81,0.72l0.61,0.53l-1.31,0.64l-0.16,0.34l0.76,3.24l-0.44,0.8l0.01,0.3l1.19,2.02l-0.71,0.29l-0.74,-0.62l-0.15,-0.07l-2.91,-0.37l-0.15,0.02l-1.04,0.43l-2.78,0.44l-1.44,-0.03l-2.83,1.06l-1.95,0.01l-1.28,-0.52l-0.2,-0.01l-2.62,0.76l-0.7,-0.48l-0.47,0.22l-0.13,1.49l-1.01,0.94l-0.58,-0.82l0.79,-0.9l0.04,-0.34l-0.31,-0.15l-1.46,0.23l-2.03,-0.64l-0.3,0.07l-1.65,1.58l-3.58,0.3l-1.94,-1.47l-0.17,-0.06l-2.7,-0.1l-0.28,0.17l-0.51,1.06l-1.47,0.29l-2.32,-1.46l-0.17,-0.05l-2.55,0.05l-1.4,-2.7l-1.72,-1.54l1.11,-2.06l-0.07,-0.37l-1.35,-1.19l2.47,-2.51l3.74,-0.11l0.26,-0.17l0.96,-2.07l4.56,0.38l0.19,-0.05l2.97,-1.92l2.84,-0.83l4.03,-0.06l4.31,2.08ZM488.85,176.8l-1.81,1.38l-0.57,-1.01l0.02,-0.36l0.45,-0.25l0.13,-0.15l0.78,-1.87l-0.11,-0.37l-0.72,-0.47l1.91,-0.71l1.89,0.35l0.25,0.97l0.17,0.2l1.87,0.83l-0.19,0.31l-2.82,0.16l-0.18,0.07l-1.06,0.91Z",
                name: "Turkey"
            },
            LK: {
                path: "M625.44,266.07l-0.35,2.4l-0.9,0.61l-1.91,0.5l-1.04,-1.75l-0.43,-3.5l1.0,-3.6l1.34,1.09l1.13,1.72l1.16,2.52Z",
                name: "Sri Lanka"
            },
            TN: {
                path: "M444.91,206.18l-0.99,-4.57l-0.12,-0.18l-1.43,-1.04l-0.02,-0.53l-0.11,-0.22l-1.95,-1.59l-0.19,-1.85l1.44,-1.47l0.08,-0.14l0.59,-2.34l-0.38,-2.77l0.44,-1.28l2.52,-1.08l1.41,0.28l-0.06,1.2l0.43,0.28l1.81,-0.9l0.02,0.06l-1.14,1.28l-0.08,0.2l-0.02,1.32l0.11,0.24l0.74,0.6l-0.29,2.18l-1.56,1.35l-0.09,0.32l0.48,1.54l0.28,0.21l1.11,0.04l0.55,1.17l0.15,0.14l0.76,0.35l-0.12,1.79l-1.1,0.72l-0.8,0.91l-1.68,1.04l-0.13,0.32l0.25,1.08l-0.18,0.96l-0.74,0.39Z",
                name: "Tunisia"
            },
            TL: {
                path: "M734.21,307.22l0.17,-0.34l1.99,-0.52l1.72,-0.08l0.78,-0.3l0.29,0.1l-0.43,0.32l-2.57,1.09l-1.71,0.59l-0.05,-0.49l-0.19,-0.36Z",
                name: "East Timor"
            },
            TM: {
                path: "M553.16,173.51l-0.12,1.0l-0.26,-0.65l0.38,-0.34ZM553.54,173.16l0.13,-0.12l0.43,-0.09l-0.56,0.21ZM555.68,172.6l0.65,-0.14l1.53,0.76l1.71,2.29l0.27,0.12l1.27,-0.14l2.81,-0.04l0.29,-0.38l-0.35,-1.27l1.98,-0.97l1.96,-1.63l3.05,1.44l0.25,2.23l0.14,0.22l0.96,0.61l0.18,0.05l2.61,-0.13l0.68,0.44l1.2,2.97l0.1,0.13l2.85,2.03l1.67,1.41l2.66,1.45l3.13,1.17l-0.05,1.23l-0.36,-0.04l-1.12,-0.73l-0.44,0.14l-0.34,0.89l-1.96,0.52l-0.22,0.23l-0.47,2.17l-1.26,0.78l-1.93,0.42l-0.21,0.18l-0.46,1.14l-1.64,0.33l-2.3,-0.97l-0.2,-2.23l-0.28,-0.27l-1.76,-0.1l-2.78,-2.48l-0.15,-0.07l-1.95,-0.31l-2.82,-1.48l-1.78,-0.27l-0.18,0.03l-1.03,0.51l-1.6,-0.08l-0.22,0.08l-1.72,1.6l-1.83,0.46l-0.39,-1.7l0.36,-3.0l-0.16,-0.3l-1.73,-0.88l0.57,-1.77l-0.25,-0.39l-1.33,-0.14l0.41,-1.85l2.05,0.63l0.21,-0.01l2.2,-0.95l0.09,-0.49l-1.78,-1.75l-0.69,-1.66l-0.07,-0.03Z",
                name: "Turkmenistan"
            },
            TJ: {
                path: "M597.99,178.71l-0.23,0.23l-2.57,-0.47l-0.35,0.25l-0.24,1.7l0.32,0.34l2.66,-0.22l3.15,0.95l4.47,-0.42l0.58,2.45l0.39,0.21l0.71,-0.25l1.22,0.53l-0.06,1.01l0.29,1.28l-2.19,-0.0l-1.71,-0.21l-0.23,0.07l-1.51,1.25l-1.05,0.27l-0.77,0.51l-0.71,-0.67l0.22,-2.28l-0.24,-0.32l-0.43,-0.08l0.17,-0.57l-0.16,-0.36l-1.36,-0.66l-0.34,0.05l-1.08,1.01l-0.09,0.15l-0.25,1.09l-0.24,0.26l-1.36,-0.05l-0.27,0.14l-0.65,1.06l-0.58,-0.39l-0.3,-0.02l-1.68,0.86l-0.36,-0.16l1.28,-2.65l0.02,-0.2l-0.54,-2.17l-0.18,-0.21l-1.53,-0.58l0.41,-0.82l1.89,0.13l0.26,-0.12l1.19,-1.63l0.77,-1.82l2.66,-0.55l-0.33,0.87l0.01,0.23l0.36,0.82l0.3,0.18l0.23,-0.02Z",
                name: "Tajikistan"
            },
            LS: {
                path: "M493.32,359.69l0.69,0.65l-0.65,1.12l-0.38,0.8l-1.27,0.39l-0.18,0.15l-0.4,0.77l-0.59,0.18l-1.59,-1.78l1.16,-1.5l1.3,-1.02l0.97,-0.46l0.94,0.72Z",
                name: "Lesotho"
            },
            TH: {
                path: "M677.42,253.68l-1.7,-0.88l-0.14,-0.03l-1.77,0.04l0.3,-1.64l-0.3,-0.35l-2.21,0.01l-0.3,0.28l-0.2,2.76l-2.15,5.9l-0.02,0.13l0.17,1.83l0.28,0.27l1.45,0.07l0.93,2.1l0.44,2.15l0.08,0.15l1.4,1.44l0.16,0.09l1.43,0.27l1.04,1.05l-0.58,0.73l-1.24,0.22l-0.15,-0.99l-0.15,-0.22l-2.04,-1.1l-0.36,0.06l-0.23,0.23l-0.72,-0.71l-0.41,-1.18l-0.06,-0.11l-1.33,-1.42l-1.22,-1.2l-0.5,0.13l-0.15,0.54l-0.14,-0.41l0.26,-1.48l0.73,-2.38l1.2,-2.57l1.37,-2.35l0.02,-0.27l-0.95,-2.26l0.03,-1.19l-0.29,-1.42l-0.06,-0.13l-1.65,-2.0l-0.46,-0.99l0.62,-0.34l0.13,-0.15l0.92,-2.23l-0.02,-0.27l-1.05,-1.74l-1.57,-1.86l-1.04,-1.96l0.76,-0.34l0.16,-0.16l1.07,-2.63l1.58,-0.1l0.16,-0.06l1.43,-1.11l1.24,-0.52l0.84,0.62l0.13,1.43l0.28,0.27l1.34,0.09l-0.54,2.39l0.05,2.39l0.45,0.25l2.48,-1.45l0.6,0.36l0.17,0.04l1.47,-0.07l0.25,-0.15l0.41,-0.73l1.58,0.15l1.76,1.93l0.15,2.44l0.08,0.18l1.94,2.15l-0.1,1.96l-0.66,0.93l-2.25,-0.34l-3.24,0.49l-0.19,0.12l-1.6,2.12l-0.06,0.24l0.48,2.46Z",
                name: "Thailand"
            },
            TF: {
                path: "M593.76,417.73l1.38,0.84l2.15,0.37l0.04,0.31l-0.59,1.24l-3.36,0.19l-0.05,-1.38l0.43,-1.56Z",
                name: "French Southern and Antarctic Lands"
            },
            TG: {
                path: "M425.23,269.29l-1.49,0.4l-0.43,-0.68l-0.64,-1.54l-0.18,-1.16l0.54,-2.21l-0.04,-0.24l-0.59,-0.86l-0.23,-1.9l0.0,-1.82l-0.07,-0.19l-0.95,-1.19l0.1,-0.41l1.58,0.04l-0.23,0.97l0.08,0.28l1.55,1.55l0.09,1.13l0.08,0.19l0.42,0.43l-0.11,5.66l0.52,1.53Z",
                name: "Togo"
            },
            TD: {
                path: "M457.57,252.46l0.23,-1.08l-0.28,-0.36l-1.32,-0.05l0.0,-1.35l-0.1,-0.22l-0.9,-0.82l0.99,-3.1l3.12,-2.37l0.12,-0.23l0.13,-3.33l0.95,-5.2l0.53,-1.09l-0.07,-0.36l-0.94,-0.81l-0.03,-0.7l-0.12,-0.23l-0.84,-0.61l-0.57,-3.76l2.21,-1.26l19.67,9.88l0.12,9.74l-1.83,-0.15l-0.28,0.14l-1.14,1.89l-0.68,1.62l0.05,0.31l0.33,0.38l-0.61,0.58l-0.08,0.3l0.25,0.93l-0.58,0.95l-0.29,1.01l0.34,0.37l0.67,-0.11l0.39,0.73l0.03,1.4l0.11,0.23l0.8,0.65l-0.01,0.24l-1.38,0.37l-0.11,0.06l-1.27,1.03l-1.83,2.76l-2.21,1.1l-2.34,-0.15l-0.82,0.25l-0.2,0.37l0.19,0.68l-1.16,0.79l-1.01,0.94l-2.92,0.89l-0.5,-0.46l-0.17,-0.08l-0.41,-0.05l-0.28,0.12l-0.38,0.54l-1.36,0.12l0.1,-0.18l0.01,-0.27l-0.78,-1.72l-0.35,-1.03l-0.17,-0.18l-1.03,-0.41l-1.29,-1.28l0.36,-0.78l0.9,0.2l0.14,-0.0l0.67,-0.17l1.36,0.02l0.26,-0.45l-1.32,-2.22l0.09,-1.64l-0.17,-1.68l-0.04,-0.13l-0.93,-1.53Z",
                name: "Chad"
            },
            LY: {
                path: "M457.99,226.38l-1.57,0.87l-1.25,-1.28l-0.13,-0.08l-3.85,-1.11l-1.04,-1.57l-0.09,-0.09l-1.98,-1.23l-0.27,-0.02l-0.93,0.39l-0.72,-1.2l-0.09,-1.07l-0.06,-0.16l-1.33,-1.75l0.83,-0.94l0.07,-0.24l-0.21,-1.64l0.31,-1.43l-0.17,-1.29l0.43,-2.26l-0.15,-1.33l-0.73,-2.18l0.99,-0.52l0.16,-0.21l0.22,-1.16l-0.22,-1.06l1.54,-0.95l0.81,-0.92l1.19,-0.78l0.14,-0.23l0.12,-1.76l2.57,0.84l0.16,0.01l0.99,-0.23l2.01,0.45l3.19,1.2l1.12,2.36l0.2,0.16l2.24,0.53l3.5,1.14l2.65,1.36l0.29,-0.01l1.22,-0.71l1.27,-1.32l0.07,-0.29l-0.55,-2.0l0.69,-1.19l1.7,-1.23l1.61,-0.35l3.2,0.54l0.78,1.14l0.24,0.13l0.85,0.01l0.84,0.47l2.35,0.31l0.42,0.63l-0.79,1.16l-0.04,0.26l0.35,1.08l-0.61,1.6l-0.0,0.2l0.73,2.16l0.0,24.24l-2.58,0.01l-0.3,0.29l-0.02,0.62l-19.55,-9.83l-0.28,0.01l-2.53,1.44Z",
                name: "Libya"
            },
            AE: {
                path: "M550.59,223.8l0.12,0.08l1.92,-0.41l3.54,0.15l0.23,-0.09l1.71,-1.79l1.86,-1.7l1.31,-1.36l0.26,0.5l0.28,1.72l-0.93,0.01l-0.3,0.26l-0.21,1.73l0.11,0.27l0.08,0.06l-0.7,0.32l-0.17,0.27l-0.01,0.99l-0.68,1.02l-0.05,0.15l-0.06,0.96l-0.32,0.36l-7.19,-1.27l-0.79,-2.22Z",
                name: "United Arab Emirates"
            },
            VE: {
                path: "M240.66,256.5l0.65,0.91l-0.03,1.13l-1.05,1.39l-0.03,0.31l0.95,2.0l0.32,0.17l1.08,-0.16l0.24,-0.21l0.56,-1.83l-0.06,-0.29l-0.71,-0.81l-0.1,-1.58l2.9,-0.96l0.19,-0.37l-0.29,-1.02l0.45,-0.41l0.72,1.43l0.26,0.16l1.65,0.04l1.46,1.27l0.08,0.72l0.3,0.27l2.28,0.02l2.55,-0.25l1.34,1.06l0.14,0.06l1.92,0.31l0.2,-0.03l1.4,-0.79l0.15,-0.25l0.02,-0.36l2.82,-0.14l1.17,-0.01l-0.41,0.14l-0.14,0.46l0.86,1.19l0.22,0.12l1.93,0.18l1.73,1.13l0.37,1.9l0.31,0.24l1.21,-0.05l0.52,0.32l-1.63,1.21l-0.11,0.17l-0.22,0.92l0.07,0.27l0.63,0.69l-0.31,0.24l-1.48,0.39l-0.22,0.3l0.04,1.03l-0.59,0.6l-0.01,0.41l1.67,1.87l0.23,0.48l-0.72,0.76l-2.71,0.91l-1.78,0.39l-0.13,0.06l-0.6,0.49l-1.84,-0.58l-1.89,-0.33l-0.18,0.03l-0.47,0.23l-0.02,0.53l0.96,0.56l-0.08,1.58l0.35,1.58l0.26,0.23l1.91,0.19l0.02,0.07l-1.54,0.62l-0.18,0.2l-0.25,0.92l-0.88,0.35l-1.85,0.58l-0.16,0.13l-0.4,0.64l-1.66,0.14l-1.22,-1.18l-0.79,-2.52l-0.67,-0.88l-0.66,-0.43l0.99,-0.98l0.09,-0.26l-0.09,-0.56l-0.08,-0.16l-0.66,-0.69l-0.47,-1.54l0.18,-1.67l0.55,-0.85l0.45,-1.35l-0.15,-0.36l-0.89,-0.43l-0.19,-0.02l-1.39,0.28l-1.76,-0.13l-0.92,0.23l-1.64,-2.01l-0.17,-0.1l-1.54,-0.33l-3.05,0.23l-0.5,-0.73l-0.15,-0.12l-0.45,-0.15l-0.05,-0.28l0.28,-0.86l0.01,-0.15l-0.2,-1.01l-0.08,-0.15l-0.5,-0.5l-0.3,-1.08l-0.25,-0.22l-0.89,-0.12l0.54,-1.18l0.29,-1.73l0.66,-0.85l0.94,-0.7l0.09,-0.11l0.3,-0.6Z",
                name: "Venezuela"
            },
            AF: {
                path: "M574.42,192.1l2.24,0.95l0.18,0.02l1.89,-0.38l0.22,-0.18l0.46,-1.14l1.82,-0.4l1.5,-0.91l0.14,-0.19l0.46,-2.12l1.93,-0.51l0.2,-0.18l0.26,-0.68l0.87,0.57l0.13,0.05l0.79,0.09l1.35,0.02l1.83,0.59l0.75,0.34l0.26,-0.01l1.66,-0.85l0.7,0.46l0.42,-0.09l0.72,-1.17l1.32,0.05l0.23,-0.1l0.39,-0.43l0.07,-0.14l0.24,-1.08l0.86,-0.81l0.94,0.46l-0.2,0.64l0.23,0.38l0.49,0.09l-0.21,2.15l0.09,0.25l0.99,0.94l0.38,0.03l0.83,-0.57l1.06,-0.27l0.12,-0.06l1.46,-1.21l1.63,0.2l2.4,0.0l0.17,0.32l-1.12,0.25l-1.23,0.52l-2.86,0.33l-2.69,0.6l-0.13,0.06l-1.46,1.25l-0.07,0.36l0.58,1.18l0.25,1.21l-1.13,1.08l-0.09,0.25l0.09,0.98l-0.53,0.79l-2.22,-0.08l-0.28,0.44l0.83,1.57l-1.3,0.58l-0.13,0.11l-1.06,1.69l-0.05,0.18l0.13,1.51l-0.73,0.58l-0.78,-0.22l-0.14,-0.01l-1.91,0.36l-0.23,0.19l-0.2,0.57l-1.65,-0.0l-0.22,0.1l-1.4,1.56l-0.08,0.19l-0.08,2.13l-2.99,1.05l-1.67,-0.23l-0.27,0.1l-0.39,0.46l-1.43,-0.31l-2.43,0.4l-3.69,-1.23l1.96,-2.15l0.08,-0.24l-0.21,-1.78l-0.23,-0.26l-1.69,-0.42l-0.19,-1.62l-0.77,-2.08l0.98,-1.41l-0.14,-0.45l-0.82,-0.31l0.6,-1.79l0.93,-3.21Z",
                name: "Afghanistan"
            },
            IQ: {
                path: "M534.42,190.89l0.13,0.14l1.5,0.78l0.15,1.34l-1.13,0.87l-0.11,0.16l-0.58,2.2l0.04,0.24l1.73,2.67l0.12,0.1l2.99,1.49l1.18,1.94l-0.39,1.89l0.29,0.36l0.5,-0.0l0.02,1.17l0.08,0.2l0.83,0.86l-2.36,-0.29l-0.29,0.13l-1.74,2.49l-4.4,-0.21l-7.03,-5.49l-3.73,-1.94l-2.92,-0.74l-0.89,-3.0l5.33,-2.81l0.15,-0.19l0.95,-3.43l-0.2,-2.0l1.19,-0.61l0.11,-0.09l1.23,-1.73l0.92,-0.38l2.75,0.35l0.81,0.68l0.31,0.05l0.94,-0.38l1.5,3.17Z",
                name: "Iraq"
            },
            IS: {
                path: "M384.26,87.96l-0.51,2.35l0.08,0.28l2.61,2.58l-2.99,2.83l-7.16,2.72l-2.08,0.7l-9.51,-1.71l1.89,-1.36l-0.07,-0.53l-4.4,-1.59l3.33,-0.59l0.25,-0.32l-0.11,-1.2l-0.25,-0.27l-4.82,-0.88l1.38,-2.2l3.54,-0.57l3.8,2.74l0.33,0.01l3.68,-2.18l3.02,1.12l0.25,-0.02l4.01,-2.18l3.72,0.27Z",
                name: "Iceland"
            },
            IR: {
                path: "M556.2,187.5l2.05,-0.52l0.13,-0.07l1.69,-1.57l1.55,0.08l0.15,-0.03l1.02,-0.5l1.64,0.25l2.82,1.48l1.91,0.3l2.8,2.49l0.18,0.08l1.61,0.09l0.19,2.09l-1.0,3.47l-0.69,2.04l0.18,0.38l0.73,0.28l-0.85,1.22l-0.04,0.28l0.81,2.19l0.19,1.72l0.23,0.26l1.69,0.42l0.17,1.43l-2.18,2.39l-0.01,0.4l1.22,1.42l1.0,1.62l0.12,0.11l2.23,1.11l0.06,2.2l0.2,0.27l1.03,0.38l0.14,0.83l-3.38,1.3l-0.18,0.19l-0.87,2.85l-4.44,-0.76l-2.75,-0.62l-2.64,-0.32l-1.01,-3.11l-0.17,-0.19l-1.2,-0.48l-0.18,-0.01l-1.99,0.51l-2.42,1.25l-2.89,-0.84l-2.48,-2.03l-2.41,-0.79l-1.61,-2.47l-1.84,-3.63l-0.36,-0.15l-1.22,0.4l-1.48,-0.84l-0.37,0.06l-0.72,0.82l-1.08,-1.12l-0.02,-1.35l-0.3,-0.29l-0.43,0.0l0.34,-1.64l-0.04,-0.22l-1.29,-2.11l-0.12,-0.11l-3.0,-1.49l-1.62,-2.49l0.52,-1.98l1.18,-0.92l0.11,-0.27l-0.19,-1.66l-0.16,-0.23l-1.55,-0.81l-1.58,-3.33l-1.3,-2.2l0.41,-0.75l0.03,-0.21l-0.73,-3.12l1.2,-0.59l0.35,0.9l1.26,1.35l0.15,0.09l1.81,0.39l0.91,-0.09l0.15,-0.06l2.9,-2.13l0.7,-0.16l0.48,0.56l-0.75,1.26l0.05,0.37l1.56,1.53l0.28,0.08l0.37,-0.09l0.7,1.89l0.21,0.19l2.31,0.59l1.69,1.4l0.15,0.07l3.66,0.49l3.91,-0.76l0.23,-0.19l0.19,-0.52Z",
                name: "Iran"
            },
            AM: {
                path: "M530.51,176.08l2.91,-0.39l0.41,0.63l0.11,0.1l0.66,0.36l-0.32,0.47l0.07,0.41l1.1,0.84l-0.53,0.7l0.06,0.42l1.06,0.8l1.01,0.44l0.04,1.56l-0.44,0.04l-0.88,-1.46l0.01,-0.37l-0.3,-0.31l-0.98,0.01l-0.65,-0.69l-0.26,-0.09l-0.38,0.06l-0.97,-0.82l-1.64,-0.65l0.2,-1.2l-0.02,-0.16l-0.28,-0.69Z",
                name: "Armenia"
            },
            IT: {
                path: "M451.68,158.58l0.2,0.16l3.3,0.75l-0.22,1.26l0.02,0.18l0.35,0.78l-1.4,-0.32l-0.21,0.03l-2.04,1.1l-0.16,0.29l0.13,1.47l-0.29,0.82l0.02,0.24l0.82,1.57l0.1,0.11l2.28,1.5l1.29,2.53l2.79,2.43l0.2,0.07l1.83,-0.02l0.31,0.34l-0.46,0.39l0.06,0.5l4.06,1.97l2.06,1.49l0.17,0.36l-0.24,0.53l-1.08,-1.07l-0.15,-0.08l-2.18,-0.49l-0.33,0.15l-1.05,1.91l0.11,0.4l1.63,0.98l-0.22,1.12l-0.84,0.14l-0.22,0.15l-1.27,2.38l-0.54,0.12l0.01,-0.47l0.48,-1.46l0.5,-0.58l0.03,-0.35l-0.97,-1.69l-0.76,-1.48l-0.17,-0.15l-0.94,-0.33l-0.68,-1.18l-0.16,-0.13l-1.53,-0.52l-1.03,-1.14l-0.19,-0.1l-1.78,-0.19l-1.88,-1.3l-2.27,-1.94l-1.64,-1.68l-0.76,-2.94l-0.21,-0.21l-1.22,-0.35l-2.01,-1.0l-0.24,-0.01l-1.15,0.42l-0.11,0.07l-1.38,1.36l-0.5,0.11l0.19,-0.87l-0.21,-0.35l-1.19,-0.34l-0.56,-2.06l0.76,-0.82l0.03,-0.36l-0.68,-1.08l0.04,-0.31l0.68,0.42l0.19,0.04l1.21,-0.15l0.14,-0.06l1.18,-0.89l0.25,0.29l0.25,0.1l1.19,-0.1l0.25,-0.18l0.45,-1.04l1.61,0.34l0.19,-0.02l1.1,-0.53l0.17,-0.22l0.15,-0.95l1.19,0.35l0.35,-0.16l0.23,-0.47l2.11,-0.47l0.45,0.89ZM459.35,184.63l-0.71,1.81l0.0,0.23l0.33,0.79l-0.37,1.03l-1.6,-0.91l-1.33,-0.34l-3.24,-1.36l0.23,-0.99l2.73,0.24l3.95,-0.5ZM443.95,175.91l1.26,1.77l-0.31,3.47l-0.82,-0.13l-0.26,0.08l-0.83,0.79l-0.64,-0.52l-0.1,-3.42l-0.44,-1.34l0.91,0.1l0.21,-0.06l1.01,-0.74Z",
                name: "Italy"
            },
            VN: {
                path: "M690.8,230.21l-2.86,1.93l-2.09,2.46l-0.06,0.11l-0.55,1.8l0.04,0.26l4.26,6.1l2.31,1.63l1.46,1.97l1.12,4.62l-0.32,4.3l-1.97,1.57l-2.85,1.62l-2.09,2.14l-2.83,2.13l-0.67,-1.19l0.65,-1.58l-0.09,-0.35l-1.47,-1.14l1.67,-0.79l2.57,-0.18l0.22,-0.47l-0.89,-1.24l3.88,-1.8l0.17,-0.24l0.31,-3.05l-0.01,-0.13l-0.56,-1.63l0.44,-2.48l-0.01,-0.15l-0.63,-1.81l-0.08,-0.12l-1.87,-1.77l-3.64,-5.3l-0.11,-0.1l-2.68,-1.39l0.45,-0.59l1.53,-0.65l0.16,-0.39l-0.97,-2.27l-0.27,-0.18l-2.89,-0.02l-1.04,-2.21l-1.28,-1.83l0.96,-0.46l1.97,0.01l2.43,-0.3l0.13,-0.05l1.95,-1.29l1.04,0.85l0.13,0.06l1.98,0.42l-0.32,1.21l0.09,0.3l1.19,1.07l0.12,0.07l1.88,0.51Z",
                name: "Vietnam"
            },
            AR: {
                path: "M258.11,341.34l1.4,1.81l0.51,-0.06l0.89,-1.94l2.51,0.1l0.36,0.49l4.6,4.31l0.15,0.08l1.99,0.39l3.01,1.93l2.5,1.01l0.28,0.91l-2.4,3.97l0.17,0.44l2.57,0.74l2.81,0.41l2.09,-0.44l0.14,-0.07l2.27,-2.06l0.09,-0.17l0.38,-2.2l0.88,-0.36l1.05,1.29l-0.04,1.88l-1.98,1.4l-1.72,1.13l-2.84,2.65l-3.34,3.73l-0.07,0.12l-0.63,2.22l-0.67,2.85l0.02,2.73l-0.47,0.54l-0.07,0.17l-0.36,3.28l0.12,0.27l3.03,2.32l-0.31,1.78l0.11,0.29l1.44,1.15l-0.11,1.17l-2.32,3.57l-3.59,1.51l-4.95,0.6l-2.72,-0.29l-0.32,0.38l0.5,1.67l-0.49,2.13l0.01,0.16l0.4,1.29l-1.27,0.88l-2.41,0.39l-2.33,-1.05l-0.31,0.04l-0.97,0.78l-0.11,0.27l0.35,2.98l0.16,0.23l1.69,0.91l0.31,-0.02l1.08,-0.75l0.46,0.96l-2.1,0.88l-2.01,1.89l-0.09,0.18l-0.36,3.05l-0.51,1.42l-2.16,0.01l-0.19,0.07l-1.96,1.59l-0.1,0.15l-0.72,2.34l0.08,0.31l2.46,2.31l0.13,0.07l2.09,0.56l-0.74,2.45l-2.86,1.75l-0.12,0.14l-1.59,3.71l-2.2,1.24l-0.1,0.09l-1.03,1.54l-0.04,0.23l0.81,3.45l0.06,0.13l1.13,1.32l-2.59,-0.57l-5.89,-0.44l-0.92,-1.73l0.05,-2.4l-0.34,-0.3l-1.49,0.19l-0.72,-0.98l-0.2,-3.21l1.79,-1.33l0.1,-0.13l0.79,-2.04l0.02,-0.16l-0.27,-1.52l1.31,-2.69l0.91,-4.15l-0.23,-1.72l0.91,-0.49l0.15,-0.33l-0.27,-1.16l-0.15,-0.2l-0.87,-0.46l0.65,-1.01l-0.04,-0.37l-1.06,-1.09l-0.54,-3.2l0.83,-0.51l0.14,-0.29l-0.42,-3.6l0.58,-2.98l0.64,-2.5l1.41,-1.0l0.12,-0.32l-0.75,-2.8l-0.01,-2.48l1.81,-1.78l0.09,-0.22l-0.06,-2.3l1.39,-2.69l0.03,-0.14l0.01,-2.58l-0.11,-0.24l-0.57,-0.45l-1.1,-4.59l1.49,-2.73l0.04,-0.17l-0.23,-2.59l0.86,-2.38l1.6,-2.48l1.74,-1.65l0.04,-0.39l-0.64,-0.89l0.42,-0.7l0.04,-0.16l-0.08,-4.26l2.55,-1.23l0.16,-0.18l0.86,-2.75l-0.01,-0.22l-0.22,-0.48l1.84,-2.1l3.0,0.59ZM256.77,438.98l-2.1,0.15l-1.18,-1.14l-0.19,-0.08l-1.53,-0.09l-2.38,-0.0l-0.0,-6.28l0.4,0.65l1.25,2.55l0.11,0.12l3.26,2.07l3.19,0.8l-0.82,1.26Z",
                name: "Argentina"
            },
            AU: {
                path: "M705.55,353.06l0.09,0.09l0.37,0.05l0.13,-0.35l-0.57,-1.69l0.48,0.3l0.71,0.99l0.34,0.11l0.2,-0.29l-0.04,-1.37l-0.04,-0.14l-1.22,-2.07l-0.28,-0.9l-0.51,-0.69l0.24,-1.33l0.52,-0.7l0.34,-1.32l0.01,-0.13l-0.25,-1.44l0.51,-0.94l0.1,1.03l0.23,0.26l0.32,-0.14l1.01,-1.72l1.94,-0.84l1.27,-1.14l1.84,-0.92l1.0,-0.18l0.6,0.28l0.26,-0.0l1.94,-0.96l1.48,-0.28l0.19,-0.13l0.32,-0.49l0.51,-0.18l1.42,0.05l2.63,-0.76l0.11,-0.06l1.36,-1.15l0.08,-0.1l0.61,-1.33l1.42,-1.27l0.1,-0.19l0.11,-1.03l0.06,-1.32l1.39,-1.74l0.85,1.79l0.4,0.14l1.07,-0.51l0.11,-0.45l-0.77,-1.05l0.53,-0.84l0.86,0.43l0.43,-0.22l0.29,-1.85l1.29,-1.19l0.6,-0.98l1.16,-0.4l0.2,-0.27l0.02,-0.34l0.74,0.2l0.38,-0.27l0.03,-0.44l1.98,-0.61l1.7,1.08l1.36,1.48l0.22,0.1l1.55,0.02l1.57,0.24l0.33,-0.4l-0.48,-1.27l1.09,-1.86l1.06,-0.63l0.1,-0.42l-0.28,-0.46l0.93,-1.24l1.36,-0.8l1.16,0.27l0.14,0.0l2.1,-0.48l0.23,-0.3l-0.05,-1.3l-0.18,-0.26l-1.08,-0.49l0.44,-0.12l1.52,0.58l1.39,1.06l2.11,0.65l0.19,-0.0l0.59,-0.21l1.44,0.72l0.27,0.0l1.37,-0.68l0.84,0.2l0.26,-0.06l0.37,-0.3l0.82,0.89l-0.56,1.14l-0.84,0.91l-0.75,0.07l-0.26,0.38l0.26,0.9l-0.67,1.15l-0.88,1.24l-0.05,0.25l0.18,0.72l0.12,0.17l1.99,1.42l1.96,0.84l1.25,0.86l1.8,1.51l0.19,0.07l0.63,-0.0l1.15,0.58l0.34,0.7l0.17,0.15l2.39,0.88l0.24,-0.02l1.65,-0.88l0.14,-0.16l0.49,-1.37l0.52,-1.19l0.31,-1.39l0.75,-2.02l0.01,-0.19l-0.33,-1.16l0.16,-0.67l0.0,-0.13l-0.28,-1.41l0.3,-1.78l0.42,-0.45l0.05,-0.33l-0.33,-0.73l0.56,-1.25l0.48,-1.39l0.07,-0.69l0.58,-0.59l0.48,0.84l0.17,1.53l0.17,0.24l0.47,0.23l0.09,0.9l0.05,0.14l0.87,1.23l0.17,1.33l-0.09,0.89l0.03,0.15l0.9,2.0l0.43,0.13l1.38,-0.83l0.71,0.92l1.06,0.88l-0.22,0.96l0.0,0.14l0.53,2.2l0.38,1.3l0.15,0.18l0.52,0.26l0.62,2.01l-0.23,1.27l0.02,0.18l0.81,1.76l0.14,0.14l2.69,1.35l3.21,2.21l-0.2,0.4l0.04,0.34l1.39,1.6l0.95,2.78l0.43,0.16l0.79,-0.46l0.85,0.96l0.39,0.05l0.22,-0.15l0.36,2.33l0.09,0.18l1.78,1.63l1.16,1.01l1.9,2.1l0.67,2.05l0.06,1.47l-0.17,1.64l0.03,0.17l1.16,2.22l-0.14,2.28l-0.43,1.24l-0.68,2.44l0.04,1.63l-0.48,1.92l-1.06,2.43l-1.79,1.32l-0.1,0.12l-0.91,2.15l-0.82,1.37l-0.76,2.47l-0.98,1.46l-0.63,2.14l-0.33,2.02l0.1,0.82l-1.21,0.85l-2.71,0.1l-0.13,0.03l-2.31,1.19l-1.21,1.17l-1.34,1.11l-1.89,-1.18l-1.33,-0.46l0.32,-1.24l-0.4,-0.35l-1.46,0.61l-2.06,1.98l-1.99,-0.73l-1.43,-0.46l-1.45,-0.22l-2.32,-0.81l-1.51,-1.67l-0.45,-2.11l-0.6,-1.5l-0.07,-0.11l-1.23,-1.16l-0.16,-0.08l-1.96,-0.28l0.59,-0.99l0.03,-0.24l-0.61,-2.1l-0.54,-0.08l-1.16,1.85l-1.23,0.29l0.73,-0.88l0.06,-0.12l0.37,-1.57l0.93,-1.33l0.05,-0.2l-0.2,-2.07l-0.53,-0.17l-2.01,2.35l-1.52,0.94l-0.12,0.14l-0.82,1.93l-1.5,-0.9l0.07,-1.32l-0.06,-0.2l-1.57,-2.04l-1.15,-0.92l0.3,-0.41l-0.1,-0.44l-3.21,-1.69l-0.13,-0.03l-1.69,-0.08l-2.35,-1.31l-0.16,-0.04l-4.55,0.27l-3.24,0.99l-2.8,0.91l-2.33,-0.18l-0.17,0.03l-2.63,1.41l-2.14,0.64l-0.2,0.19l-0.47,1.42l-0.8,0.99l-1.99,0.06l-1.55,0.24l-2.27,-0.5l-1.79,0.3l-1.71,0.13l-0.19,0.09l-1.38,1.39l-0.58,-0.1l-0.21,0.04l-1.26,0.8l-1.13,0.85l-1.72,-0.1l-1.6,-0.0l-2.58,-1.76l-1.21,-0.49l0.04,-1.19l1.04,-0.32l0.16,-0.12l0.42,-0.64l0.05,-0.19l-0.09,-0.97l0.3,-2.0l-0.28,-1.64l-1.34,-2.84l-0.39,-1.49l0.1,-1.51l-0.04,-0.17l-0.96,-1.72l-0.06,-0.73l-0.09,-0.19l-1.04,-1.01l-0.3,-2.02l-0.05,-0.12l-1.23,-1.83ZM784.95,393.35l2.39,1.01l0.2,0.01l3.26,-0.96l1.19,0.16l0.16,3.19l-0.78,0.95l-0.07,0.16l-0.19,1.83l-0.43,-0.41l-0.44,0.03l-1.61,1.96l-0.4,-0.12l-1.38,-0.09l-1.43,-2.42l-0.37,-2.03l-1.4,-2.53l0.04,-0.94l1.27,0.2Z",
                name: "Australia"
            },
            IL: {
                path: "M509.04,199.22l0.71,0.0l0.27,-0.17l0.15,-0.33l0.19,-0.01l0.02,0.73l-0.27,0.34l0.02,0.08l-0.32,0.62l-0.65,-0.27l-0.41,0.19l-0.52,1.85l0.16,0.35l0.14,0.07l-0.17,0.1l-0.14,0.21l-0.11,0.73l0.39,0.33l0.81,-0.26l0.03,0.64l-0.97,3.43l-1.28,-3.67l0.62,-0.78l-0.03,-0.41l0.58,-1.16l0.5,-2.07l0.27,-0.54Z",
                name: "Israel"
            },
            IN: {
                path: "M615.84,192.58l2.4,2.97l-0.24,2.17l0.05,0.2l0.94,1.35l-0.06,0.97l-1.46,-0.3l-0.35,0.36l0.7,3.06l0.12,0.18l2.46,1.75l3.11,1.72l-1.23,0.96l-0.1,0.13l-0.97,2.55l0.16,0.38l2.41,1.02l2.37,1.33l3.27,1.52l3.43,0.37l1.37,1.3l0.17,0.08l1.92,0.25l3.0,0.62l2.15,-0.04l0.28,-0.22l0.29,-1.06l0.0,-0.13l-0.32,-1.66l0.16,-0.94l1.0,-0.37l0.23,2.28l0.18,0.24l2.28,1.02l0.2,0.02l1.52,-0.41l2.06,0.18l2.08,-0.08l0.29,-0.27l0.18,-1.66l-0.1,-0.26l-0.53,-0.44l1.38,-0.23l0.15,-0.07l2.26,-2.0l2.75,-1.65l1.97,0.63l0.25,-0.03l1.54,-0.99l0.89,1.28l-0.72,0.97l0.2,0.48l2.49,0.37l0.11,0.61l-0.69,0.39l-0.15,0.3l0.15,1.22l-1.36,-0.37l-0.23,0.03l-3.24,1.86l-0.15,0.28l0.07,1.44l-1.33,2.16l-0.04,0.13l-0.12,1.24l-0.98,1.91l-1.72,-0.53l-0.39,0.28l-0.09,2.66l-0.52,0.83l-0.04,0.23l0.21,0.89l-0.71,0.36l-1.21,-3.85l-0.29,-0.21l-0.69,0.01l-0.29,0.23l-0.28,1.17l-0.84,-0.84l0.6,-1.17l0.97,-0.13l0.23,-0.16l1.15,-2.25l-0.18,-0.42l-1.54,-0.47l-2.3,0.04l-2.13,-0.33l-0.19,-1.63l-0.26,-0.26l-1.13,-0.13l-1.93,-1.13l-0.42,0.13l-0.88,1.82l0.08,0.37l1.47,1.15l-1.21,0.77l-0.1,0.1l-0.56,0.97l0.13,0.42l1.31,0.61l-0.36,1.35l0.01,0.2l0.85,1.95l0.37,2.05l-0.26,0.68l-1.55,-0.02l-3.09,0.54l-0.25,0.32l0.13,1.84l-1.21,1.4l-3.64,1.79l-2.79,3.04l-1.86,1.61l-2.48,1.68l-0.13,0.25l-0.0,1.0l-1.07,0.55l-2.21,0.9l-1.13,0.13l-0.25,0.19l-0.75,1.96l-0.02,0.15l0.52,3.31l0.13,2.03l-1.03,2.35l-0.03,0.12l-0.01,4.03l-1.02,0.1l-0.23,0.15l-1.14,1.93l0.04,0.36l0.44,0.48l-1.83,0.57l-0.18,0.15l-0.81,1.65l-0.74,0.53l-2.14,-2.12l-1.14,-3.47l-0.96,-2.57l-0.9,-1.26l-1.3,-2.38l-0.61,-3.14l-0.44,-1.62l-2.29,-3.56l-1.03,-4.94l-0.74,-3.29l0.01,-3.12l-0.49,-2.51l-0.41,-0.22l-3.56,1.53l-1.59,-0.28l-2.96,-2.87l0.94,-0.74l0.06,-0.41l-0.74,-1.03l-2.73,-2.1l1.35,-1.43l5.38,0.01l0.29,-0.36l-0.5,-2.29l-0.09,-0.15l-1.33,-1.28l-0.27,-1.96l-0.12,-0.2l-1.36,-1.0l2.42,-2.48l2.77,0.2l0.24,-0.1l2.62,-2.85l1.59,-2.8l2.41,-2.74l0.07,-0.2l-0.04,-1.82l2.01,-1.51l-0.01,-0.49l-1.95,-1.33l-0.83,-1.81l-0.82,-2.27l0.98,-0.97l3.64,0.66l2.89,-0.42l0.17,-0.08l2.18,-2.15Z",
                name: "India"
            },
            TZ: {
                path: "M505.77,287.58l0.36,0.23l8.95,5.03l0.15,1.3l0.13,0.21l3.4,2.37l-1.07,2.88l-0.02,0.14l0.15,1.42l0.15,0.23l1.47,0.84l0.05,0.42l-0.66,1.44l-0.02,0.18l0.13,0.72l-0.16,1.16l0.03,0.19l0.87,1.57l1.03,2.48l0.12,0.14l0.53,0.32l-1.59,1.18l-2.64,0.95l-1.45,-0.04l-0.2,0.07l-0.81,0.69l-1.64,0.06l-0.68,0.3l-2.9,-0.69l-1.71,0.17l-0.65,-3.18l-0.05,-0.12l-1.35,-1.88l-0.19,-0.12l-2.41,-0.46l-1.38,-0.74l-1.63,-0.44l-0.96,-0.41l-0.95,-0.58l-1.31,-3.09l-1.47,-1.46l-0.45,-1.31l0.24,-1.34l-0.39,-1.99l0.71,-0.08l0.18,-0.09l0.91,-0.91l0.98,-1.31l0.59,-0.5l0.11,-0.24l-0.02,-0.81l-0.08,-0.2l-0.47,-0.5l-0.1,-0.67l0.51,-0.23l0.18,-0.25l0.14,-1.47l-0.05,-0.2l-0.76,-1.09l0.45,-0.15l2.71,0.03l5.01,-0.19Z",
                name: "Tanzania"
            },
            AZ: {
                path: "M539.36,175.66l0.16,0.09l1.11,0.2l0.32,-0.15l0.4,-0.71l1.22,-0.99l1.11,1.33l1.26,2.09l0.22,0.14l1.06,0.13l0.28,0.29l-1.46,0.17l-0.26,0.24l-0.43,2.26l-0.39,0.92l-0.85,0.63l-0.12,0.25l0.06,1.2l-0.22,0.05l-1.28,-1.25l0.74,-1.25l-0.03,-0.35l-0.74,-0.86l-0.3,-0.1l-1.05,0.27l-2.49,1.82l-0.04,-1.46l-0.18,-0.27l-1.09,-0.47l-0.8,-0.6l0.53,-0.7l-0.06,-0.42l-1.11,-0.84l0.34,-0.51l-0.11,-0.43l-0.89,-0.48l-0.33,-0.49l0.25,-0.2l1.78,0.81l1.35,0.18l0.25,-0.09l0.34,-0.35l0.02,-0.39l-1.04,-1.36l0.28,-0.18l0.49,0.07l1.65,1.74ZM533.53,180.16l0.63,0.67l0.22,0.09l0.8,-0.0l0.04,0.31l0.66,1.09l-0.94,-0.21l-1.16,-1.24l-0.25,-0.71Z",
                name: "Azerbaijan"
            },
            IE: {
                path: "M405.17,135.35l0.36,2.16l-1.78,2.84l-4.28,1.91l-3.02,-0.43l1.81,-3.13l0.02,-0.26l-1.23,-3.26l3.24,-2.56l1.54,-1.32l0.37,1.33l-0.49,1.77l0.3,0.38l1.49,-0.05l1.68,0.63Z",
                name: "Ireland"
            },
            ID: {
                path: "M756.56,287.86l0.69,4.02l0.15,0.21l2.59,1.5l0.39,-0.07l2.05,-2.61l2.75,-1.45l2.09,-0.0l2.08,0.85l1.85,0.89l2.52,0.46l0.08,15.44l-1.72,-1.6l-0.15,-0.07l-2.54,-0.51l-0.29,0.1l-0.53,0.62l-2.53,0.06l0.78,-1.51l1.48,-0.66l0.17,-0.34l-0.65,-2.74l-1.23,-2.19l-0.14,-0.13l-4.85,-2.13l-2.09,-0.23l-3.7,-2.28l-0.41,0.1l-0.67,1.11l-0.63,0.14l-0.41,-0.67l-0.01,-1.01l-0.14,-0.25l-1.39,-0.89l2.05,-0.69l1.73,0.05l0.29,-0.39l-0.21,-0.66l-0.29,-0.21l-3.5,-0.0l-0.9,-1.36l-0.19,-0.13l-2.14,-0.44l-0.65,-0.76l2.86,-0.51l1.28,-0.79l3.75,0.96l0.32,0.76ZM758.01,300.37l-0.79,1.04l-0.14,-1.07l0.4,-0.81l0.29,-0.47l0.24,0.31l-0.0,1.0ZM747.45,292.9l0.48,1.02l-1.45,-0.69l-2.09,-0.21l-1.45,0.16l-1.28,-0.07l0.35,-0.81l2.86,-0.1l2.58,0.68ZM741.15,285.69l-0.16,-0.25l-0.72,-3.08l0.47,-1.86l0.35,-0.38l0.1,0.73l0.25,0.26l1.28,0.19l0.18,0.78l-0.11,1.8l-0.96,-0.18l-0.35,0.22l-0.38,1.52l0.05,0.24ZM741.19,285.75l0.76,0.97l-0.11,0.05l-0.65,-1.02ZM739.18,293.52l-0.61,0.54l-1.44,-0.38l-0.25,-0.55l1.93,-0.09l0.36,0.48ZM728.4,295.87l-0.27,-0.07l-2.26,0.89l-0.37,-0.41l0.27,-0.8l-0.09,-0.33l-1.68,-1.37l0.17,-2.29l-0.42,-0.3l-1.67,0.76l-0.17,0.29l0.21,2.92l0.09,3.34l-1.22,0.28l-0.78,-0.54l0.65,-2.1l0.01,-0.14l-0.39,-2.42l-0.29,-0.25l-0.86,-0.02l-0.63,-1.4l0.99,-1.61l0.35,-1.97l1.24,-3.73l0.49,-0.96l1.95,-1.7l1.86,0.69l3.16,0.35l2.92,-0.1l0.17,-0.06l2.24,-1.65l0.11,0.14l-1.8,2.22l-1.72,0.44l-2.41,-0.48l-4.21,0.13l-2.19,0.36l-0.25,0.24l-0.36,1.9l0.08,0.27l2.24,2.23l0.4,0.02l1.29,-1.08l3.19,-0.58l-0.19,0.06l-1.04,1.4l-2.13,0.94l-0.12,0.45l2.26,3.06l-0.37,0.69l0.03,0.32l1.51,1.95ZM728.48,295.97l0.59,0.76l-0.02,1.37l-1.0,0.55l-0.64,-0.58l1.09,-1.84l-0.02,-0.26ZM728.64,286.95l0.79,-0.14l-0.07,0.39l-0.72,-0.24ZM732.38,310.1l-1.89,0.49l-0.06,-0.06l0.17,-0.64l1.0,-1.42l2.14,-0.87l0.1,0.2l0.04,0.58l-1.49,1.72ZM728.26,305.71l-0.17,0.63l-3.53,0.67l-3.02,-0.28l-0.0,-0.42l1.66,-0.44l1.47,0.71l0.16,0.03l1.75,-0.21l1.69,-0.69ZM722.98,310.33l-0.74,0.03l-2.52,-1.35l1.42,-0.3l1.19,0.7l0.72,0.63l-0.06,0.28ZM716.24,305.63l0.66,0.49l0.22,0.06l1.35,-0.18l0.31,0.53l-4.18,0.77l-0.8,-0.01l0.51,-0.86l1.2,-0.02l0.24,-0.12l0.49,-0.65ZM715.84,280.21l0.09,0.34l2.25,1.86l-2.25,0.22l-0.24,0.17l-0.84,1.71l-0.03,0.15l0.1,2.11l-2.27,1.62l-0.13,0.24l-0.06,2.46l-0.74,2.92l-0.02,-0.05l-0.39,-0.16l-2.62,1.04l-0.86,-1.33l-0.23,-0.14l-1.71,-0.14l-1.19,-0.76l-0.25,-0.03l-2.78,0.84l-0.79,-1.05l-0.26,-0.12l-1.61,0.13l-1.8,-0.25l-0.36,-3.13l-0.15,-0.23l-1.18,-0.65l-1.13,-2.02l-0.33,-2.1l0.27,-2.19l1.05,-1.17l0.28,1.12l0.1,0.16l1.71,1.41l0.28,0.05l1.55,-0.49l1.54,0.17l0.23,-0.07l1.4,-1.21l1.05,-0.19l2.3,0.68l0.16,0.0l2.04,-0.53l0.21,-0.19l1.26,-3.41l0.91,-0.82l0.09,-0.14l0.8,-2.64l2.63,0.0l1.71,0.33l-1.19,1.89l0.02,0.34l1.74,2.24l-0.37,1.0ZM692.67,302.0l0.26,0.19l4.8,0.25l0.28,-0.16l0.44,-0.83l4.29,1.12l0.85,1.52l0.23,0.15l3.71,0.45l2.37,1.15l-2.06,0.69l-2.77,-1.0l-2.25,0.07l-2.57,-0.18l-2.31,-0.45l-2.94,-0.97l-1.84,-0.25l-0.13,0.01l-0.97,0.29l-4.34,-0.98l-0.38,-0.94l-0.25,-0.19l-1.76,-0.14l1.31,-1.84l2.81,0.14l1.97,0.96l0.95,0.19l0.28,0.74ZM685.63,299.27l-2.36,0.04l-2.07,-2.05l-3.17,-2.02l-1.06,-1.5l-1.88,-2.02l-1.22,-1.85l-1.9,-3.49l-2.2,-2.11l-0.71,-2.08l-0.94,-1.99l-0.1,-0.12l-2.21,-1.54l-1.35,-2.17l-1.86,-1.39l-2.53,-2.68l-0.14,-0.81l1.22,0.08l3.76,0.47l2.16,2.4l1.94,1.7l1.37,1.04l2.35,2.67l0.22,0.1l2.44,0.04l1.99,1.62l1.42,2.06l0.09,0.09l1.67,1.0l-0.88,1.8l0.11,0.39l1.44,0.87l0.13,0.04l0.68,0.05l0.41,1.62l0.87,1.4l0.22,0.14l1.71,0.21l1.06,1.38l-0.61,3.04l-0.09,3.6Z",
                name: "Indonesia"
            },
            UA: {
                path: "M500.54,141.42l0.9,0.13l0.27,-0.11l0.52,-0.62l0.68,0.13l2.43,-0.3l1.32,1.57l-0.45,0.48l-0.07,0.26l0.21,1.03l0.27,0.24l1.85,0.15l0.76,1.22l-0.05,0.55l0.2,0.31l3.18,1.15l0.18,0.01l1.75,-0.47l1.42,1.41l0.22,0.09l1.42,-0.03l3.44,0.99l0.02,0.65l-0.97,1.62l-0.03,0.24l0.52,1.67l-0.29,0.79l-2.24,0.22l-0.14,0.05l-1.29,0.89l-0.13,0.23l-0.07,1.16l-1.75,0.22l-0.12,0.04l-1.6,0.98l-2.27,0.16l-0.12,0.04l-2.16,1.17l-0.16,0.29l0.15,1.94l0.14,0.23l1.23,0.75l0.18,0.04l2.06,-0.15l-0.22,0.51l-2.67,0.54l-3.27,1.72l-1.0,-0.45l0.45,-1.19l-0.19,-0.39l-2.34,-0.78l0.15,-0.2l2.32,-1.0l0.09,-0.49l-0.73,-0.72l-0.15,-0.08l-3.69,-0.75l-0.14,-0.96l-0.35,-0.25l-2.32,0.39l-0.21,0.15l-0.91,1.7l-1.77,2.1l-0.93,-0.44l-0.24,-0.0l-1.05,0.45l-0.48,-0.25l0.13,-0.07l0.14,-0.15l0.43,-1.04l0.67,-0.97l0.04,-0.26l-0.1,-0.31l0.04,-0.02l0.11,0.19l0.24,0.15l1.48,0.09l0.78,-0.25l0.07,-0.53l-0.27,-0.19l0.09,-0.25l-0.08,-0.33l-0.81,-0.74l-0.34,-1.24l-0.14,-0.18l-0.73,-0.42l0.15,-0.87l-0.11,-0.29l-1.13,-0.86l-0.15,-0.06l-0.97,-0.11l-1.79,-0.97l-0.2,-0.03l-1.66,0.32l-0.13,0.06l-0.52,0.41l-0.95,-0.0l-0.23,0.11l-0.56,0.66l-1.74,0.29l-0.79,0.43l-1.01,-0.68l-0.16,-0.05l-1.57,-0.01l-1.52,-0.35l-0.23,0.04l-0.71,0.45l-0.09,-0.43l-0.13,-0.19l-1.18,-0.74l0.38,-1.02l0.53,-0.64l0.35,0.12l0.37,-0.41l-0.57,-1.29l2.1,-2.5l1.16,-0.36l0.2,-0.2l0.27,-0.92l-0.01,-0.2l-1.1,-2.52l0.79,-0.09l0.13,-0.05l1.3,-0.86l1.83,-0.07l2.48,0.26l2.84,0.8l1.91,0.06l0.88,0.45l0.29,-0.01l0.72,-0.44l0.49,0.58l0.25,0.11l2.2,-0.16l0.94,0.3l0.39,-0.26l0.15,-1.57l0.61,-0.59l2.01,-0.19Z",
                name: "Ukraine"
            },
            QA: {
                path: "M548.47,221.47l-0.15,-1.72l0.59,-1.23l0.38,-0.16l0.54,0.6l0.04,1.4l-0.47,1.37l-0.41,0.11l-0.53,-0.37Z",
                name: "Qatar"
            },
            MZ: {
                path: "M507.71,314.14l1.65,-0.18l2.96,0.7l0.2,-0.02l0.6,-0.29l1.68,-0.06l0.18,-0.07l0.8,-0.69l1.5,0.02l2.74,-0.98l1.74,-1.27l0.25,0.7l-0.1,2.47l0.31,2.27l0.1,3.97l0.42,1.24l-0.7,1.71l-0.94,1.73l-1.52,1.52l-5.06,2.21l-2.88,2.8l-1.01,0.51l-1.72,1.81l-0.99,0.58l-0.15,0.23l-0.21,1.86l0.04,0.19l1.17,1.95l0.47,1.47l0.03,0.74l0.39,0.28l0.05,-0.01l-0.06,2.13l-0.39,1.19l0.1,0.33l0.42,0.32l-0.28,0.83l-0.95,0.86l-2.03,0.88l-3.08,1.49l-1.1,0.99l-0.09,0.28l0.21,1.13l0.21,0.23l0.38,0.11l-0.14,0.89l-1.39,-0.02l-0.17,-0.94l-0.38,-1.23l-0.2,-0.89l0.44,-2.91l-0.01,-0.14l-0.65,-1.88l-1.15,-3.55l2.52,-2.85l0.68,-1.89l0.29,-0.18l0.14,-0.2l0.28,-1.53l-0.03,-0.19l-0.36,-0.7l0.1,-1.83l0.49,-1.84l-0.01,-3.26l-0.14,-0.25l-1.3,-0.83l-0.11,-0.04l-1.08,-0.17l-0.47,-0.55l-0.1,-0.08l-1.16,-0.54l-0.13,-0.03l-1.83,0.04l-0.32,-2.25l7.19,-1.99l1.32,1.12l0.29,0.06l0.55,-0.19l0.75,0.49l0.11,0.81l-0.49,1.11l-0.02,0.15l0.19,1.81l0.09,0.18l1.63,1.59l0.48,-0.1l0.72,-1.68l0.99,-0.49l0.17,-0.29l-0.21,-3.29l-0.04,-0.13l-1.11,-1.92l-0.9,-0.82l-0.21,-0.08l-0.62,0.03l-0.63,-2.98l0.61,-1.67Z",
                name: "Mozambique"
            }
        },
        height: 440.7063107441331,
        projection: {
            type: "mill",
            centralMeridian: 11.5
        },
        width: 900
    }),
    function() {
        function extend(a, b) {
            var n;
            a || (a = {});
            for (n in b) a[n] = b[n];
            return a
        }

        function merge() {
            var i, len, args = arguments,
                ret = {},
                doCopy = function(copy, original) {
                    var value, key;
                    "object" != typeof copy && (copy = {});
                    for (key in original) original.hasOwnProperty(key) && (value = original[key], copy[key] = value && "object" == typeof value && "[object Array]" !== Object.prototype.toString.call(value) && "renderTo" !== key && "number" != typeof value.nodeType ? doCopy(copy[key] || {}, value) : original[key]);
                    return copy
                };
            for (args[0] === !0 && (ret = args[1], args = Array.prototype.slice.call(args, 2)), len = args.length, i = 0; len > i; i++) ret = doCopy(ret, args[i]);
            return ret
        }

        function pInt(s, mag) {
            return parseInt(s, mag || 10)
        }

        function isString(s) {
            return "string" == typeof s
        }

        function isObject(obj) {
            return obj && "object" == typeof obj
        }

        function isArray(obj) {
            return "[object Array]" === Object.prototype.toString.call(obj)
        }

        function isNumber(n) {
            return "number" == typeof n
        }

        function log2lin(num) {
            return math.log(num) / math.LN10
        }

        function lin2log(num) {
            return math.pow(10, num)
        }

        function erase(arr, item) {
            for (var i = arr.length; i--;)
                if (arr[i] === item) {
                    arr.splice(i, 1);
                    break
                }
        }

        function defined(obj) {
            return obj !== UNDEFINED && null !== obj
        }

        function attr(elem, prop, value) {
            var key, ret;
            if (isString(prop)) defined(value) ? elem.setAttribute(prop, value) : elem && elem.getAttribute && (ret = elem.getAttribute(prop));
            else if (defined(prop) && isObject(prop))
                for (key in prop) elem.setAttribute(key, prop[key]);
            return ret
        }

        function splat(obj) {
            return isArray(obj) ? obj : [obj]
        }

        function pick() {
            var i, arg, args = arguments,
                length = args.length;
            for (i = 0; length > i; i++)
                if (arg = args[i], arg !== UNDEFINED && null !== arg) return arg
        }

        function css(el, styles) {
            isIE && !hasSVG && styles && styles.opacity !== UNDEFINED && (styles.filter = "alpha(opacity=" + 100 * styles.opacity + ")"), extend(el.style, styles)
        }

        function createElement(tag, attribs, styles, parent, nopad) {
            var el = doc.createElement(tag);
            return attribs && extend(el, attribs), nopad && css(el, {
                padding: 0,
                border: NONE,
                margin: 0
            }), styles && css(el, styles), parent && parent.appendChild(el), el
        }

        function extendClass(parent, members) {
            var object = function() {
                return UNDEFINED
            };
            return object.prototype = new parent, extend(object.prototype, members), object
        }

        function numberFormat(number, decimals, decPoint, thousandsSep) {
            var lang = defaultOptions.lang,
                n = +number || 0,
                c = -1 === decimals ? (n.toString().split(".")[1] || "").length : isNaN(decimals = mathAbs(decimals)) ? 2 : decimals,
                d = void 0 === decPoint ? lang.decimalPoint : decPoint,
                t = void 0 === thousandsSep ? lang.thousandsSep : thousandsSep,
                s = 0 > n ? "-" : "",
                i = String(pInt(n = mathAbs(n).toFixed(c))),
                j = i.length > 3 ? i.length % 3 : 0;
            return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + mathAbs(n - i).toFixed(c).slice(2) : "")
        }

        function pad(number, length) {
            return new Array((length || 2) + 1 - String(number).length).join(0) + number
        }

        function wrap(obj, method, func) {
            var proceed = obj[method];
            obj[method] = function() {
                var args = Array.prototype.slice.call(arguments);
                return args.unshift(proceed), func.apply(this, args)
            }
        }

        function formatSingle(format, val) {
            var decimals, floatRegex = /f$/,
                decRegex = /\.([0-9])/,
                lang = defaultOptions.lang;
            return floatRegex.test(format) ? (decimals = format.match(decRegex), decimals = decimals ? decimals[1] : -1, null !== val && (val = numberFormat(val, decimals, lang.decimalPoint, format.indexOf(",") > -1 ? lang.thousandsSep : ""))) : val = dateFormat(format, val), val
        }

        function format(str, ctx) {
            for (var segment, valueAndFormat, path, i, len, val, index, splitter = "{", isInside = !1, ret = []; - 1 !== (index = str.indexOf(splitter));) {
                if (segment = str.slice(0, index), isInside) {
                    for (valueAndFormat = segment.split(":"), path = valueAndFormat.shift().split("."), len = path.length, val = ctx, i = 0; len > i; i++) val = val[path[i]];
                    valueAndFormat.length && (val = formatSingle(valueAndFormat.join(":"), val)), ret.push(val)
                } else ret.push(segment);
                str = str.slice(index + 1), isInside = !isInside, splitter = isInside ? "}" : "{"
            }
            return ret.push(str), ret.join("")
        }

        function getMagnitude(num) {
            return math.pow(10, mathFloor(math.log(num) / math.LN10))
        }

        function normalizeTickInterval(interval, multiples, magnitude, options) {
            var normalized, i;
            for (magnitude = pick(magnitude, 1), normalized = interval / magnitude, multiples || (multiples = [1, 2, 2.5, 5, 10], options && options.allowDecimals === !1 && (1 === magnitude ? multiples = [1, 2, 5, 10] : .1 >= magnitude && (multiples = [1 / magnitude]))), i = 0; i < multiples.length && (interval = multiples[i], !(normalized <= (multiples[i] + (multiples[i + 1] || multiples[i])) / 2)); i++);
            return interval *= magnitude
        }

        function stableSort(arr, sortFunction) {
            var sortValue, i, length = arr.length;
            for (i = 0; length > i; i++) arr[i].ss_i = i;
            for (arr.sort(function(a, b) {
                    return sortValue = sortFunction(a, b), 0 === sortValue ? a.ss_i - b.ss_i : sortValue
                }), i = 0; length > i; i++) delete arr[i].ss_i
        }

        function arrayMin(data) {
            for (var i = data.length, min = data[0]; i--;) data[i] < min && (min = data[i]);
            return min
        }

        function arrayMax(data) {
            for (var i = data.length, max = data[0]; i--;) data[i] > max && (max = data[i]);
            return max
        }

        function destroyObjectProperties(obj, except) {
            var n;
            for (n in obj) obj[n] && obj[n] !== except && obj[n].destroy && obj[n].destroy(), delete obj[n]
        }

        function discardElement(element) {
            garbageBin || (garbageBin = createElement(DIV)), element && garbageBin.appendChild(element), garbageBin.innerHTML = ""
        }

        function correctFloat(num) {
            return parseFloat(num.toPrecision(14))
        }

        function setAnimation(animation, chart) {
            globalAnimation = pick(animation, chart.animation)
        }

        function setTimeMethods() {
            var useUTC = defaultOptions.global.useUTC,
                GET = useUTC ? "getUTC" : "get",
                SET = useUTC ? "setUTC" : "set";
            timezoneOffset = 6e4 * (useUTC && defaultOptions.global.timezoneOffset || 0), makeTime = useUTC ? Date.UTC : function(year, month, date, hours, minutes, seconds) {
                return new Date(year, month, pick(date, 1), pick(hours, 0), pick(minutes, 0), pick(seconds, 0)).getTime()
            }, getMinutes = GET + "Minutes", getHours = GET + "Hours", getDay = GET + "Day", getDate = GET + "Date", getMonth = GET + "Month", getFullYear = GET + "FullYear", setMinutes = SET + "Minutes", setHours = SET + "Hours", setDate = SET + "Date", setMonth = SET + "Month", setFullYear = SET + "FullYear"
        }

        function setOptions(options) {
            return defaultOptions = merge(!0, defaultOptions, options), setTimeMethods(), defaultOptions
        }

        function getOptions() {
            return defaultOptions
        }

        function SVGElement() {}

        function Tick(axis, pos, type, noLabel) {
            this.axis = axis, this.pos = pos, this.type = type || "", this.isNew = !0, type || noLabel || this.addLabel()
        }

        function Axis() {
            this.init.apply(this, arguments)
        }

        function Chart() {
            this.init.apply(this, arguments)
        }

        function StackItem(axis, options, isNegative, x, stackOption) {
            var inverted = axis.chart.inverted;
            this.axis = axis, this.isNegative = isNegative, this.options = options, this.x = x, this.total = null, this.points = {}, this.stack = stackOption, this.alignOptions = {
                align: options.align || (inverted ? isNegative ? "left" : "right" : "center"),
                verticalAlign: options.verticalAlign || (inverted ? "middle" : isNegative ? "bottom" : "top"),
                y: pick(options.y, inverted ? 4 : isNegative ? 14 : -6),
                x: pick(options.x, inverted ? isNegative ? -6 : 6 : 0)
            }, this.textAlign = options.textAlign || (inverted ? isNegative ? "right" : "left" : "center")
        }

        function Scroller(chart) {
            var chartOptions = chart.options,
                navigatorOptions = chartOptions.navigator,
                navigatorEnabled = navigatorOptions.enabled,
                scrollbarOptions = chartOptions.scrollbar,
                scrollbarEnabled = scrollbarOptions.enabled,
                height = navigatorEnabled ? navigatorOptions.height : 0,
                scrollbarHeight = scrollbarEnabled ? scrollbarOptions.height : 0;
            this.handles = [], this.scrollbarButtons = [], this.elementsToDestroy = [], this.chart = chart, this.setBaseSeries(), this.height = height, this.scrollbarHeight = scrollbarHeight, this.scrollbarEnabled = scrollbarEnabled, this.navigatorEnabled = navigatorEnabled, this.navigatorOptions = navigatorOptions, this.scrollbarOptions = scrollbarOptions, this.outlineHeight = height + scrollbarHeight, this.init()
        }

        function RangeSelector(chart) {
            this.init(chart)
        }
        var UNDEFINED, Renderer, hasTouch, garbageBin, defaultOptions, dateFormat, globalAnimation, pathAnim, timeUnits, error, AxisPlotLineOrBandExtension, makeTime, timezoneOffset, getMinutes, getHours, getDay, getDate, getMonth, getFullYear, setMinutes, setHours, setDate, setMonth, setFullYear, Highcharts, doc = document,
            win = window,
            math = Math,
            mathRound = math.round,
            mathFloor = math.floor,
            mathCeil = math.ceil,
            mathMax = math.max,
            mathMin = math.min,
            mathAbs = math.abs,
            mathCos = math.cos,
            mathSin = math.sin,
            mathPI = math.PI,
            deg2rad = 2 * mathPI / 360,
            userAgent = navigator.userAgent,
            isOpera = win.opera,
            isIE = /msie/i.test(userAgent) && !isOpera,
            docMode8 = 8 === doc.documentMode,
            isWebKit = /AppleWebKit/.test(userAgent),
            isFirefox = /Firefox/.test(userAgent),
            isTouchDevice = /(Mobile|Android|Windows Phone)/.test(userAgent),
            SVG_NS = "http://www.w3.org/2000/svg",
            hasSVG = !!doc.createElementNS && !!doc.createElementNS(SVG_NS, "svg").createSVGRect,
            hasBidiBug = isFirefox && parseInt(userAgent.split("Firefox/")[1], 10) < 4,
            useCanVG = !hasSVG && !isIE && !!doc.createElement("canvas").getContext,
            symbolSizes = {},
            idCounter = 0,
            noop = function() {
                return UNDEFINED
            },
            charts = [],
            chartCount = 0,
            PRODUCT = "Highstock",
            VERSION = "2.0.3",
            DIV = "div",
            ABSOLUTE = "absolute",
            RELATIVE = "relative",
            HIDDEN = "hidden",
            PREFIX = "highcharts-",
            VISIBLE = "visible",
            PX = "px",
            NONE = "none",
            M = "M",
            L = "L",
            numRegex = /^[0-9]+$/,
            NORMAL_STATE = "",
            HOVER_STATE = "hover",
            SELECT_STATE = "select",
            STROKE_WIDTH = "stroke-width",
            seriesTypes = {};
        win.Highcharts ? error(16, !0) : Highcharts = win.Highcharts = {}, dateFormat = function(format, timestamp, capitalize) {
                if (!defined(timestamp) || isNaN(timestamp) || !isFinite(timestamp)) return "Invalid date";
                format = pick(format, "%Y-%m-%d %H:%M:%S");
                var key, date = new Date(timestamp - timezoneOffset),
                    hours = date[getHours](),
                    day = date[getDay](),
                    dayOfMonth = date[getDate](),
                    month = date[getMonth](),
                    fullYear = date[getFullYear](),
                    lang = defaultOptions.lang,
                    langWeekdays = lang.weekdays,
                    replacements = extend({
                        a: langWeekdays[day].substr(0, 3),
                        A: langWeekdays[day],
                        d: pad(dayOfMonth),
                        e: dayOfMonth,
                        b: lang.shortMonths[month],
                        B: lang.months[month],
                        m: pad(month + 1),
                        y: fullYear.toString().substr(2, 2),
                        Y: fullYear,
                        H: pad(hours),
                        I: pad(hours % 12 || 12),
                        l: hours % 12 || 12,
                        M: pad(date[getMinutes]()),
                        p: 12 > hours ? "AM" : "PM",
                        P: 12 > hours ? "am" : "pm",
                        S: pad(date.getSeconds()),
                        L: pad(mathRound(timestamp % 1e3), 3)
                    }, Highcharts.dateFormats);
                for (key in replacements)
                    for (; - 1 !== format.indexOf("%" + key);) format = format.replace("%" + key, "function" == typeof replacements[key] ? replacements[key](timestamp) : replacements[key]);
                return capitalize ? format.substr(0, 1).toUpperCase() + format.substr(1) : format
            }, error = function(code, stop) {
                var msg = "Highcharts error #" + code + ": www.highcharts.com/errors/" + code;
                if (stop) throw msg;
                win.console && console.log(msg)
            }, timeUnits = {
                millisecond: 1,
                second: 1e3,
                minute: 6e4,
                hour: 36e5,
                day: 864e5,
                week: 6048e5,
                month: 26784e5,
                year: 31556952e3
            }, pathAnim = {
                init: function(elem, fromD, toD) {
                    fromD = fromD || "";
                    var endLength, slice, i, startBaseLine, endBaseLine, shift = elem.shift,
                        bezier = fromD.indexOf("C") > -1,
                        numParams = bezier ? 7 : 3,
                        start = fromD.split(" "),
                        end = [].concat(toD),
                        sixify = function(arr) {
                            for (i = arr.length; i--;) arr[i] === M && arr.splice(i + 1, 0, arr[i + 1], arr[i + 2], arr[i + 1], arr[i + 2])
                        };
                    if (bezier && (sixify(start), sixify(end)), elem.isArea && (startBaseLine = start.splice(start.length - 6, 6), endBaseLine = end.splice(end.length - 6, 6)), shift <= end.length / numParams && start.length === end.length)
                        for (; shift--;) end = [].concat(end).splice(0, numParams).concat(end);
                    if (elem.shift = 0, start.length)
                        for (endLength = end.length; start.length < endLength;) slice = [].concat(start).splice(start.length - numParams, numParams), bezier && (slice[numParams - 6] = slice[numParams - 2], slice[numParams - 5] = slice[numParams - 1]), start = start.concat(slice);
                    return startBaseLine && (start = start.concat(startBaseLine), end = end.concat(endBaseLine)), [start, end]
                },
                step: function(start, end, pos, complete) {
                    var startVal, ret = [],
                        i = start.length;
                    if (1 === pos) ret = complete;
                    else if (i === end.length && 1 > pos)
                        for (; i--;) startVal = parseFloat(start[i]), ret[i] = isNaN(startVal) ? start[i] : pos * parseFloat(end[i] - startVal) + startVal;
                    else ret = end;
                    return ret
                }
            },
            function($) {
                win.HighchartsAdapter = win.HighchartsAdapter || $ && {
                    init: function(pathAnim) {
                        var dSetter, Fx = $.fx,
                            Step = Fx.step,
                            Tween = $.Tween,
                            propHooks = Tween && Tween.propHooks,
                            opacityHook = $.cssHooks.opacity;
                        $.extend($.easing, {
                            easeOutQuad: function(x, t, b, c, d) {
                                return -c * (t /= d) * (t - 2) + b
                            }
                        }), $.each(["cur", "_default", "width", "height", "opacity"], function(i, fn) {
                            var base, obj = Step;
                            "cur" === fn ? obj = Fx.prototype : "_default" === fn && Tween && (obj = propHooks[fn], fn = "set"), base = obj[fn], base && (obj[fn] = function(fx) {
                                var elem;
                                return fx = i ? fx : this, "align" !== fx.prop ? (elem = fx.elem, elem.attr ? elem.attr(fx.prop, "cur" === fn ? UNDEFINED : fx.now) : base.apply(this, arguments)) : void 0
                            })
                        }), wrap(opacityHook, "get", function(proceed, elem, computed) {
                            return elem.attr ? elem.opacity || 0 : proceed.call(this, elem, computed)
                        }), dSetter = function(fx) {
                            var ends, elem = fx.elem;
                            fx.started || (ends = pathAnim.init(elem, elem.d, elem.toD), fx.start = ends[0], fx.end = ends[1], fx.started = !0), elem.attr("d", pathAnim.step(fx.start, fx.end, fx.pos, elem.toD))
                        }, Tween ? propHooks.d = {
                            set: dSetter
                        } : Step.d = dSetter, this.each = Array.prototype.forEach ? function(arr, fn) {
                            return Array.prototype.forEach.call(arr, fn)
                        } : function(arr, fn) {
                            var i, len = arr.length;
                            for (i = 0; len > i; i++)
                                if (fn.call(arr[i], arr[i], i, arr) === !1) return i
                        }, $.fn.highcharts = function() {
                            var options, ret, chart, constr = "Chart",
                                args = arguments;
                            return this[0] && (isString(args[0]) && (constr = args[0], args = Array.prototype.slice.call(args, 1)), options = args[0], options !== UNDEFINED && (options.chart = options.chart || {}, options.chart.renderTo = this[0], chart = new Highcharts[constr](options, args[1]), ret = this), options === UNDEFINED && (ret = charts[attr(this[0], "data-highcharts-chart")])), ret
                        }
                    },
                    getScript: $.getScript,
                    inArray: $.inArray,
                    adapterRun: function(elem, method) {
                        return $(elem)[method]()
                    },
                    grep: $.grep,
                    map: function(arr, fn) {
                        for (var results = [], i = 0, len = arr.length; len > i; i++) results[i] = fn.call(arr[i], arr[i], i, arr);
                        return results
                    },
                    offset: function(el) {
                        return $(el).offset()
                    },
                    addEvent: function(el, event, fn) {
                        $(el).bind(event, fn)
                    },
                    removeEvent: function(el, eventType, handler) {
                        var func = doc.removeEventListener ? "removeEventListener" : "detachEvent";
                        doc[func] && el && !el[func] && (el[func] = function() {}), $(el).unbind(eventType, handler)
                    },
                    fireEvent: function(el, type, eventArguments, defaultFunction) {
                        var defaultPrevented, event = $.Event(type),
                            detachedType = "detached" + type;
                        !isIE && eventArguments && (delete eventArguments.layerX, delete eventArguments.layerY, delete eventArguments.returnValue), extend(event, eventArguments), el[type] && (el[detachedType] = el[type], el[type] = null), $.each(["preventDefault", "stopPropagation"], function(i, fn) {
                            var base = event[fn];
                            event[fn] = function() {
                                try {
                                    base.call(event)
                                } catch (e) {
                                    "preventDefault" === fn && (defaultPrevented = !0)
                                }
                            }
                        }), $(el).trigger(event), el[detachedType] && (el[type] = el[detachedType], el[detachedType] = null), !defaultFunction || event.isDefaultPrevented() || defaultPrevented || defaultFunction(event)
                    },
                    washMouseEvent: function(e) {
                        var ret = e.originalEvent || e;
                        return ret.pageX === UNDEFINED && (ret.pageX = e.pageX, ret.pageY = e.pageY), ret
                    },
                    animate: function(el, params, options) {
                        var $el = $(el);
                        el.style || (el.style = {}), params.d && (el.toD = params.d, params.d = 1), $el.stop(), params.opacity !== UNDEFINED && el.attr && (params.opacity += "px"), $el.animate(params, options)
                    },
                    stop: function(el) {
                        $(el).stop()
                    }
                }
            }(win.jQuery);
        var globalAdapter = win.HighchartsAdapter,
            adapter = globalAdapter || {};
        globalAdapter && globalAdapter.init.call(globalAdapter, pathAnim);
        var adapterRun = adapter.adapterRun,
            getScript = adapter.getScript,
            inArray = adapter.inArray,
            each = adapter.each,
            grep = adapter.grep,
            offset = adapter.offset,
            map = adapter.map,
            addEvent = adapter.addEvent,
            removeEvent = adapter.removeEvent,
            fireEvent = adapter.fireEvent,
            washMouseEvent = adapter.washMouseEvent,
            animate = adapter.animate,
            stop = adapter.stop,
            defaultLabelOptions = {
                enabled: !0,
                x: 0,
                y: 15,
                style: {
                    color: "#606060",
                    cursor: "default",
                    fontSize: "11px"
                }
            };
        defaultOptions = {
            colors: ["#7cb5ec", "#434348", "#90ed7d", "#f7a35c", "#8085e9", "#f15c80", "#e4d354", "#8085e8", "#8d4653", "#91e8e1"],
            symbols: ["circle", "diamond", "square", "triangle", "triangle-down"],
            lang: {
                loading: "Loading...",
                months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                weekdays: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                decimalPoint: ".",
                numericSymbols: ["k", "M", "G", "T", "P", "E"],
                resetZoom: "Reset zoom",
                resetZoomTitle: "Reset zoom level 1:1",
                thousandsSep: ","
            },
            global: {
                useUTC: !0,
                canvasToolsURL: "http://code.highcharts.com/stock/2.0.3/modules/canvas-tools.js",
                VMLRadialGradientURL: "http://code.highcharts.com/stock/2.0.3/gfx/vml-radial-gradient.png"
            },
            chart: {
                borderColor: "#4572A7",
                borderRadius: 0,
                defaultSeriesType: "line",
                ignoreHiddenSeries: !0,
                spacing: [10, 10, 15, 10],
                backgroundColor: "#FFFFFF",
                plotBorderColor: "#C0C0C0",
                resetZoomButton: {
                    theme: {
                        zIndex: 20
                    },
                    position: {
                        align: "right",
                        x: -10,
                        y: 10
                    }
                }
            },
            title: {
                text: "Chart title",
                align: "center",
                margin: 15,
                style: {
                    color: "#333333",
                    fontSize: "18px"
                }
            },
            subtitle: {
                text: "",
                align: "center",
                style: {
                    color: "#555555"
                }
            },
            plotOptions: {
                line: {
                    allowPointSelect: !1,
                    showCheckbox: !1,
                    animation: {
                        duration: 1e3
                    },
                    events: {},
                    lineWidth: 2,
                    marker: {
                        lineWidth: 0,
                        radius: 4,
                        lineColor: "#FFFFFF",
                        states: {
                            hover: {
                                enabled: !0,
                                lineWidthPlus: 1,
                                radiusPlus: 2
                            },
                            select: {
                                fillColor: "#FFFFFF",
                                lineColor: "#000000",
                                lineWidth: 2
                            }
                        }
                    },
                    point: {
                        events: {}
                    },
                    dataLabels: merge(defaultLabelOptions, {
                        align: "center",
                        enabled: !1,
                        formatter: function() {
                            return null === this.y ? "" : numberFormat(this.y, -1)
                        },
                        verticalAlign: "bottom",
                        y: 0
                    }),
                    cropThreshold: 300,
                    pointRange: 0,
                    states: {
                        hover: {
                            lineWidthPlus: 1,
                            marker: {},
                            halo: {
                                size: 10,
                                opacity: .25
                            }
                        },
                        select: {
                            marker: {}
                        }
                    },
                    stickyTracking: !0,
                    turboThreshold: 1e3
                }
            },
            labels: {
                style: {
                    position: ABSOLUTE,
                    color: "#3E576F"
                }
            },
            legend: {
                enabled: !0,
                align: "center",
                layout: "horizontal",
                labelFormatter: function() {
                    return this.name
                },
                borderColor: "#909090",
                borderRadius: 0,
                navigation: {
                    activeColor: "#274b6d",
                    inactiveColor: "#CCC"
                },
                shadow: !1,
                itemStyle: {
                    color: "#333333",
                    fontSize: "12px",
                    fontWeight: "bold"
                },
                itemHoverStyle: {
                    color: "#000"
                },
                itemHiddenStyle: {
                    color: "#CCC"
                },
                itemCheckboxStyle: {
                    position: ABSOLUTE,
                    width: "13px",
                    height: "13px"
                },
                symbolPadding: 5,
                verticalAlign: "bottom",
                x: 0,
                y: 0,
                title: {
                    style: {
                        fontWeight: "bold"
                    }
                }
            },
            loading: {
                labelStyle: {
                    fontWeight: "bold",
                    position: RELATIVE,
                    top: "45%"
                },
                style: {
                    position: ABSOLUTE,
                    backgroundColor: "white",
                    opacity: .5,
                    textAlign: "center"
                }
            },
            tooltip: {
                enabled: !0,
                animation: hasSVG,
                backgroundColor: "rgba(249, 249, 249, .85)",
                borderWidth: 1,
                borderRadius: 3,
                dateTimeLabelFormats: {
                    millisecond: "%A, %b %e, %H:%M:%S.%L",
                    second: "%A, %b %e, %H:%M:%S",
                    minute: "%A, %b %e, %H:%M",
                    hour: "%A, %b %e, %H:%M",
                    day: "%A, %b %e, %Y",
                    week: "Week from %A, %b %e, %Y",
                    month: "%B %Y",
                    year: "%Y"
                },
                headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
                pointFormat: '<span style="color:{series.color}">â—</span> {series.name}: <b>{point.y}</b><br/>',
                shadow: !0,
                snap: isTouchDevice ? 25 : 10,
                style: {
                    color: "#333333",
                    cursor: "default",
                    fontSize: "12px",
                    padding: "8px",
                    whiteSpace: "nowrap"
                }
            },
            credits: {
                enabled: !0,
                text: "Highcharts.com",
                href: "http://www.highcharts.com",
                position: {
                    align: "right",
                    x: -10,
                    verticalAlign: "bottom",
                    y: -5
                },
                style: {
                    cursor: "pointer",
                    color: "#909090",
                    fontSize: "9px"
                }
            }
        };
        var defaultPlotOptions = defaultOptions.plotOptions,
            defaultSeriesOptions = defaultPlotOptions.line;
        setTimeMethods();
        var rgbaRegEx = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/,
            hexRegEx = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,
            rgbRegEx = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/,
            Color = function(input) {
                function init(input) {
                    input && input.stops ? stops = map(input.stops, function(stop) {
                        return Color(stop[1])
                    }) : (result = rgbaRegEx.exec(input), result ? rgba = [pInt(result[1]), pInt(result[2]), pInt(result[3]), parseFloat(result[4], 10)] : (result = hexRegEx.exec(input), result ? rgba = [pInt(result[1], 16), pInt(result[2], 16), pInt(result[3], 16), 1] : (result = rgbRegEx.exec(input), result && (rgba = [pInt(result[1]), pInt(result[2]), pInt(result[3]), 1]))))
                }

                function get(format) {
                    var ret;
                    return stops ? (ret = merge(input), ret.stops = [].concat(ret.stops), each(stops, function(stop, i) {
                        ret.stops[i] = [ret.stops[i][0], stop.get(format)]
                    })) : ret = rgba && !isNaN(rgba[0]) ? "rgb" === format ? "rgb(" + rgba[0] + "," + rgba[1] + "," + rgba[2] + ")" : "a" === format ? rgba[3] : "rgba(" + rgba.join(",") + ")" : input, ret
                }

                function brighten(alpha) {
                    if (stops) each(stops, function(stop) {
                        stop.brighten(alpha)
                    });
                    else if (isNumber(alpha) && 0 !== alpha) {
                        var i;
                        for (i = 0; 3 > i; i++) rgba[i] += pInt(255 * alpha), rgba[i] < 0 && (rgba[i] = 0), rgba[i] > 255 && (rgba[i] = 255)
                    }
                    return this
                }

                function setOpacity(alpha) {
                    return rgba[3] = alpha, this
                }
                var result, stops, rgba = [];
                return init(input), {
                    get: get,
                    brighten: brighten,
                    rgba: rgba,
                    setOpacity: setOpacity
                }
            };
        SVGElement.prototype = {
            opacity: 1,
            textProps: ["fontSize", "fontWeight", "fontFamily", "color", "lineHeight", "width", "textDecoration", "textShadow", "HcTextStroke"],
            init: function(renderer, nodeName) {
                var wrapper = this;
                wrapper.element = "span" === nodeName ? createElement(nodeName) : doc.createElementNS(SVG_NS, nodeName), wrapper.renderer = renderer
            },
            animate: function(params, options, complete) {
                var animOptions = pick(options, globalAnimation, !0);
                return stop(this), animOptions ? (animOptions = merge(animOptions, {}), complete && (animOptions.complete = complete), animate(this, params, animOptions)) : (this.attr(params), complete && complete()), this
            },
            colorGradient: function(color, prop, elem) {
                var colorObject, gradName, gradAttr, gradients, gradientObject, stops, stopColor, stopOpacity, radialReference, n, id, renderer = this.renderer,
                    key = [];
                if (color.linearGradient ? gradName = "linearGradient" : color.radialGradient && (gradName = "radialGradient"), gradName) {
                    gradAttr = color[gradName], gradients = renderer.gradients, stops = color.stops, radialReference = elem.radialReference, isArray(gradAttr) && (color[gradName] = gradAttr = {
                        x1: gradAttr[0],
                        y1: gradAttr[1],
                        x2: gradAttr[2],
                        y2: gradAttr[3],
                        gradientUnits: "userSpaceOnUse"
                    }), "radialGradient" === gradName && radialReference && !defined(gradAttr.gradientUnits) && (gradAttr = merge(gradAttr, {
                        cx: radialReference[0] - radialReference[2] / 2 + gradAttr.cx * radialReference[2],
                        cy: radialReference[1] - radialReference[2] / 2 + gradAttr.cy * radialReference[2],
                        r: gradAttr.r * radialReference[2],
                        gradientUnits: "userSpaceOnUse"
                    }));
                    for (n in gradAttr) "id" !== n && key.push(n, gradAttr[n]);
                    for (n in stops) key.push(stops[n]);
                    key = key.join(","), gradients[key] ? id = gradients[key].attr("id") : (gradAttr.id = id = PREFIX + idCounter++, gradients[key] = gradientObject = renderer.createElement(gradName).attr(gradAttr).add(renderer.defs), gradientObject.stops = [], each(stops, function(stop) {
                        var stopObject;
                        0 === stop[1].indexOf("rgba") ? (colorObject = Color(stop[1]), stopColor = colorObject.get("rgb"), stopOpacity = colorObject.get("a")) : (stopColor = stop[1], stopOpacity = 1), stopObject = renderer.createElement("stop").attr({
                            offset: stop[0],
                            "stop-color": stopColor,
                            "stop-opacity": stopOpacity
                        }).add(gradientObject), gradientObject.stops.push(stopObject)
                    })), elem.setAttribute(prop, "url(" + renderer.url + "#" + id + ")")
                }
            },
            attr: function(hash, val) {
                var key, value, hasSetSymbolSize, skipAttr, element = this.element,
                    ret = this;
                if ("string" == typeof hash && val !== UNDEFINED && (key = hash, hash = {}, hash[key] = val), "string" == typeof hash) ret = (this[hash + "Getter"] || this._defaultGetter).call(this, hash, element);
                else {
                    for (key in hash) value = hash[key], skipAttr = !1, this.symbolName && /^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(key) && (hasSetSymbolSize || (this.symbolAttr(hash), hasSetSymbolSize = !0), skipAttr = !0), !this.rotation || "x" !== key && "y" !== key || (this.doTransform = !0), skipAttr || (this[key + "Setter"] || this._defaultSetter).call(this, value, key, element), this.shadows && /^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(key) && this.updateShadows(key, value);
                    this.doTransform && (this.updateTransform(), this.doTransform = !1)
                }
                return ret
            },
            updateShadows: function(key, value) {
                for (var shadows = this.shadows, i = shadows.length; i--;) shadows[i].setAttribute(key, "height" === key ? mathMax(value - (shadows[i].cutHeight || 0), 0) : "d" === key ? this.d : value)
            },
            addClass: function(className) {
                var element = this.element,
                    currentClassName = attr(element, "class") || "";
                return -1 === currentClassName.indexOf(className) && attr(element, "class", currentClassName + " " + className), this
            },
            symbolAttr: function(hash) {
                var wrapper = this;
                each(["x", "y", "r", "start", "end", "width", "height", "innerR", "anchorX", "anchorY"], function(key) {
                    wrapper[key] = pick(hash[key], wrapper[key])
                }), wrapper.attr({
                    d: wrapper.renderer.symbols[wrapper.symbolName](wrapper.x, wrapper.y, wrapper.width, wrapper.height, wrapper)
                })
            },
            clip: function(clipRect) {
                return this.attr("clip-path", clipRect ? "url(" + this.renderer.url + "#" + clipRect.id + ")" : NONE)
            },
            crisp: function(rect) {
                var key, normalizer, wrapper = this,
                    attribs = {},
                    strokeWidth = rect.strokeWidth || wrapper.strokeWidth || 0;
                normalizer = mathRound(strokeWidth) % 2 / 2, rect.x = mathFloor(rect.x || wrapper.x || 0) + normalizer, rect.y = mathFloor(rect.y || wrapper.y || 0) + normalizer, rect.width = mathFloor((rect.width || wrapper.width || 0) - 2 * normalizer), rect.height = mathFloor((rect.height || wrapper.height || 0) - 2 * normalizer), rect.strokeWidth = strokeWidth;
                for (key in rect) wrapper[key] !== rect[key] && (wrapper[key] = attribs[key] = rect[key]);
                return attribs
            },
            css: function(styles) {
                var textWidth, n, hyphenate, elemWrapper = this,
                    oldStyles = elemWrapper.styles,
                    newStyles = {},
                    elem = elemWrapper.element,
                    serializedCss = "",
                    hasNew = !oldStyles;
                if (styles && styles.color && (styles.fill = styles.color), oldStyles)
                    for (n in styles) styles[n] !== oldStyles[n] && (newStyles[n] = styles[n], hasNew = !0);
                if (hasNew) {
                    if (textWidth = elemWrapper.textWidth = styles && styles.width && "text" === elem.nodeName.toLowerCase() && pInt(styles.width), oldStyles && (styles = extend(oldStyles, newStyles)), elemWrapper.styles = styles, textWidth && (useCanVG || !hasSVG && elemWrapper.renderer.forExport) && delete styles.width, isIE && !hasSVG) css(elemWrapper.element, styles);
                    else {
                        hyphenate = function(a, b) {
                            return "-" + b.toLowerCase()
                        };
                        for (n in styles) serializedCss += n.replace(/([A-Z])/g, hyphenate) + ":" + styles[n] + ";";
                        attr(elem, "style", serializedCss)
                    }
                    textWidth && elemWrapper.added && elemWrapper.renderer.buildText(elemWrapper)
                }
                return elemWrapper
            },
            on: function(eventType, handler) {
                var svgElement = this,
                    element = svgElement.element;
                return hasTouch && "click" === eventType ? (element.ontouchstart = function(e) {
                    svgElement.touchEventFired = Date.now(), e.preventDefault(), handler.call(element, e)
                }, element.onclick = function(e) {
                    (-1 === userAgent.indexOf("Android") || Date.now() - (svgElement.touchEventFired || 0) > 1100) && handler.call(element, e)
                }) : element["on" + eventType] = handler, this
            },
            setRadialReference: function(coordinates) {
                return this.element.radialReference = coordinates, this
            },
            translate: function(x, y) {
                return this.attr({
                    translateX: x,
                    translateY: y
                })
            },
            invert: function() {
                var wrapper = this;
                return wrapper.inverted = !0, wrapper.updateTransform(), wrapper
            },
            updateTransform: function() {
                var transform, wrapper = this,
                    translateX = wrapper.translateX || 0,
                    translateY = wrapper.translateY || 0,
                    scaleX = wrapper.scaleX,
                    scaleY = wrapper.scaleY,
                    inverted = wrapper.inverted,
                    rotation = wrapper.rotation,
                    element = wrapper.element;
                inverted && (translateX += wrapper.attr("width"), translateY += wrapper.attr("height")), transform = ["translate(" + translateX + "," + translateY + ")"], inverted ? transform.push("rotate(90) scale(-1,1)") : rotation && transform.push("rotate(" + rotation + " " + (element.getAttribute("x") || 0) + " " + (element.getAttribute("y") || 0) + ")"), (defined(scaleX) || defined(scaleY)) && transform.push("scale(" + pick(scaleX, 1) + " " + pick(scaleY, 1) + ")"), transform.length && element.setAttribute("transform", transform.join(" "))
            },
            toFront: function() {
                var element = this.element;
                return element.parentNode.appendChild(element), this
            },
            align: function(alignOptions, alignByTranslate, box) {
                var align, vAlign, x, y, alignTo, attribs = {},
                    renderer = this.renderer,
                    alignedObjects = renderer.alignedObjects;
                return alignOptions ? (this.alignOptions = alignOptions, this.alignByTranslate = alignByTranslate, (!box || isString(box)) && (this.alignTo = alignTo = box || "renderer", erase(alignedObjects, this), alignedObjects.push(this), box = null)) : (alignOptions = this.alignOptions, alignByTranslate = this.alignByTranslate, alignTo = this.alignTo), box = pick(box, renderer[alignTo], renderer), align = alignOptions.align, vAlign = alignOptions.verticalAlign, x = (box.x || 0) + (alignOptions.x || 0), y = (box.y || 0) + (alignOptions.y || 0), ("right" === align || "center" === align) && (x += (box.width - (alignOptions.width || 0)) / {
                    right: 1,
                    center: 2
                }[align]), attribs[alignByTranslate ? "translateX" : "x"] = mathRound(x), ("bottom" === vAlign || "middle" === vAlign) && (y += (box.height - (alignOptions.height || 0)) / ({
                    bottom: 1,
                    middle: 2
                }[vAlign] || 1)), attribs[alignByTranslate ? "translateY" : "y"] = mathRound(y), this[this.placed ? "animate" : "attr"](attribs), this.placed = !0, this.alignAttr = attribs, this
            },
            getBBox: function() {
                var width, height, cacheKey, wrapper = this,
                    bBox = wrapper.bBox,
                    renderer = wrapper.renderer,
                    rotation = wrapper.rotation,
                    element = wrapper.element,
                    styles = wrapper.styles,
                    rad = rotation * deg2rad,
                    textStr = wrapper.textStr;
                if (("" === textStr || numRegex.test(textStr)) && (cacheKey = "num." + textStr.toString().length + (styles ? "|" + styles.fontSize + "|" + styles.fontFamily : "")), cacheKey && (bBox = renderer.cache[cacheKey]), !bBox) {
                    if (element.namespaceURI === SVG_NS || renderer.forExport) {
                        try {
                            bBox = element.getBBox ? extend({}, element.getBBox()) : {
                                width: element.offsetWidth,
                                height: element.offsetHeight
                            }
                        } catch (e) {}(!bBox || bBox.width < 0) && (bBox = {
                            width: 0,
                            height: 0
                        })
                    } else bBox = wrapper.htmlGetBBox();
                    renderer.isSVG && (width = bBox.width, height = bBox.height, isIE && styles && "11px" === styles.fontSize && "16.9" === height.toPrecision(3) && (bBox.height = height = 14), rotation && (bBox.width = mathAbs(height * mathSin(rad)) + mathAbs(width * mathCos(rad)), bBox.height = mathAbs(height * mathCos(rad)) + mathAbs(width * mathSin(rad)))), wrapper.bBox = bBox, cacheKey && (renderer.cache[cacheKey] = bBox)
                }
                return bBox
            },
            show: function(inherit) {
                return inherit && this.element.namespaceURI === SVG_NS ? (this.element.removeAttribute("visibility"), this) : this.attr({
                    visibility: inherit ? "inherit" : VISIBLE
                })
            },
            hide: function() {
                return this.attr({
                    visibility: HIDDEN
                })
            },
            fadeOut: function(duration) {
                var elemWrapper = this;
                elemWrapper.animate({
                    opacity: 0
                }, {
                    duration: duration || 150,
                    complete: function() {
                        elemWrapper.hide()
                    }
                })
            },
            add: function(parent) {
                var childNodes, otherElement, otherZIndex, i, inserted, renderer = this.renderer,
                    parentWrapper = parent || renderer,
                    parentNode = parentWrapper.element || renderer.box,
                    element = this.element,
                    zIndex = this.zIndex;
                if (parent && (this.parentGroup = parent), this.parentInverted = parent && parent.inverted, void 0 !== this.textStr && renderer.buildText(this), zIndex && (parentWrapper.handleZ = !0, zIndex = pInt(zIndex)), parentWrapper.handleZ)
                    for (childNodes = parentNode.childNodes, i = 0; i < childNodes.length; i++)
                        if (otherElement = childNodes[i], otherZIndex = attr(otherElement, "zIndex"), otherElement !== element && (pInt(otherZIndex) > zIndex || !defined(zIndex) && defined(otherZIndex))) {
                            parentNode.insertBefore(element, otherElement), inserted = !0;
                            break
                        }
                return inserted || parentNode.appendChild(element), this.added = !0, this.onAdd && this.onAdd(), this
            },
            safeRemoveChild: function(element) {
                var parentNode = element.parentNode;
                parentNode && parentNode.removeChild(element)
            },
            destroy: function() {
                var grandParent, key, i, wrapper = this,
                    element = wrapper.element || {},
                    shadows = wrapper.shadows,
                    parentToClean = wrapper.renderer.isSVG && "SPAN" === element.nodeName && wrapper.parentGroup;
                if (element.onclick = element.onmouseout = element.onmouseover = element.onmousemove = element.point = null, stop(wrapper), wrapper.clipPath && (wrapper.clipPath = wrapper.clipPath.destroy()), wrapper.stops) {
                    for (i = 0; i < wrapper.stops.length; i++) wrapper.stops[i] = wrapper.stops[i].destroy();
                    wrapper.stops = null
                }
                for (wrapper.safeRemoveChild(element), shadows && each(shadows, function(shadow) {
                        wrapper.safeRemoveChild(shadow)
                    }); parentToClean && parentToClean.div && 0 === parentToClean.div.childNodes.length;) grandParent = parentToClean.parentGroup, wrapper.safeRemoveChild(parentToClean.div), delete parentToClean.div, parentToClean = grandParent;
                wrapper.alignTo && erase(wrapper.renderer.alignedObjects, wrapper);
                for (key in wrapper) delete wrapper[key];
                return null
            },
            shadow: function(shadowOptions, group, cutOff) {
                var i, shadow, strokeWidth, shadowWidth, shadowElementOpacity, transform, shadows = [],
                    element = this.element;
                if (shadowOptions) {
                    for (shadowWidth = pick(shadowOptions.width, 3), shadowElementOpacity = (shadowOptions.opacity || .15) / shadowWidth, transform = this.parentInverted ? "(-1,-1)" : "(" + pick(shadowOptions.offsetX, 1) + ", " + pick(shadowOptions.offsetY, 1) + ")", i = 1; shadowWidth >= i; i++) shadow = element.cloneNode(0), strokeWidth = 2 * shadowWidth + 1 - 2 * i, attr(shadow, {
                        isShadow: "true",
                        stroke: shadowOptions.color || "black",
                        "stroke-opacity": shadowElementOpacity * i,
                        "stroke-width": strokeWidth,
                        transform: "translate" + transform,
                        fill: NONE
                    }), cutOff && (attr(shadow, "height", mathMax(attr(shadow, "height") - strokeWidth, 0)), shadow.cutHeight = strokeWidth), group ? group.element.appendChild(shadow) : element.parentNode.insertBefore(shadow, element), shadows.push(shadow);
                    this.shadows = shadows
                }
                return this
            },
            xGetter: function(key) {
                return "circle" === this.element.nodeName && (key = {
                    x: "cx",
                    y: "cy"
                }[key] || key), this._defaultGetter(key)
            },
            _defaultGetter: function(key) {
                var ret = pick(this[key], this.element ? this.element.getAttribute(key) : null, 0);
                return /^[\-0-9\.]+$/.test(ret) && (ret = parseFloat(ret)), ret
            },
            dSetter: function(value, key, element) {
                value && value.join && (value = value.join(" ")), /(NaN| {2}|^$)/.test(value) && (value = "M 0 0"), element.setAttribute(key, value), this[key] = value
            },
            dashstyleSetter: function(value) {
                var i;
                if (value = value && value.toLowerCase()) {
                    for (value = value.replace("shortdashdotdot", "3,1,1,1,1,1,").replace("shortdashdot", "3,1,1,1").replace("shortdot", "1,1,").replace("shortdash", "3,1,").replace("longdash", "8,3,").replace(/dot/g, "1,3,").replace("dash", "4,3,").replace(/,$/, "").replace("solid", 1).split(","), i = value.length; i--;) value[i] = pInt(value[i]) * this["stroke-width"];
                    value = value.join(","), this.element.setAttribute("stroke-dasharray", value)
                }
            },
            alignSetter: function(value) {
                this.element.setAttribute("text-anchor", {
                    left: "start",
                    center: "middle",
                    right: "end"
                }[value])
            },
            opacitySetter: function(value, key, element) {
                this[key] = value, element.setAttribute(key, value)
            },
            titleSetter: function(value) {
                var titleNode = this.element.getElementsByTagName("title")[0];
                titleNode || (titleNode = doc.createElementNS(SVG_NS, "title"), this.element.appendChild(titleNode)), titleNode.textContent = value
            },
            textSetter: function(value) {
                value !== this.textStr && (delete this.bBox, this.textStr = value, this.added && this.renderer.buildText(this))
            },
            fillSetter: function(value, key, element) {
                "string" == typeof value ? element.setAttribute(key, value) : value && this.colorGradient(value, key, element)
            },
            zIndexSetter: function(value, key, element) {
                element.setAttribute(key, value), this[key] = value
            },
            _defaultSetter: function(value, key, element) {
                element.setAttribute(key, value)
            }
        }, SVGElement.prototype.yGetter = SVGElement.prototype.xGetter, SVGElement.prototype.translateXSetter = SVGElement.prototype.translateYSetter = SVGElement.prototype.rotationSetter = SVGElement.prototype.verticalAlignSetter = SVGElement.prototype.scaleXSetter = SVGElement.prototype.scaleYSetter = function(value, key) {
            this[key] = value, this.doTransform = !0
        }, SVGElement.prototype["stroke-widthSetter"] = SVGElement.prototype.strokeSetter = function(value, key, element) {
            this[key] = value, this.stroke && this["stroke-width"] ? (this.strokeWidth = this["stroke-width"], SVGElement.prototype.fillSetter.call(this, this.stroke, "stroke", element), element.setAttribute("stroke-width", this["stroke-width"]), this.hasStroke = !0) : "stroke-width" === key && 0 === value && this.hasStroke && (element.removeAttribute("stroke"), this.hasStroke = !1)
        };
        var SVGRenderer = function() {
            this.init.apply(this, arguments)
        };
        SVGRenderer.prototype = {
            Element: SVGElement,
            init: function(container, width, height, style, forExport) {
                var boxWrapper, element, desc, renderer = this,
                    loc = location;
                boxWrapper = renderer.createElement("svg").attr({
                    version: "1.1"
                }).css(this.getStyle(style)), element = boxWrapper.element, container.appendChild(element), -1 === container.innerHTML.indexOf("xmlns") && attr(element, "xmlns", SVG_NS), renderer.isSVG = !0, renderer.box = element, renderer.boxWrapper = boxWrapper, renderer.alignedObjects = [], renderer.url = (isFirefox || isWebKit) && doc.getElementsByTagName("base").length ? loc.href.replace(/#.*?$/, "").replace(/([\('\)])/g, "\\$1").replace(/ /g, "%20") : "", desc = this.createElement("desc").add(), desc.element.appendChild(doc.createTextNode("Created with " + PRODUCT + " " + VERSION)), renderer.defs = this.createElement("defs").add(), renderer.forExport = forExport, renderer.gradients = {}, renderer.cache = {}, renderer.setSize(width, height, !1);
                var subPixelFix, rect;
                isFirefox && container.getBoundingClientRect && (renderer.subPixelFix = subPixelFix = function() {
                    css(container, {
                        left: 0,
                        top: 0
                    }), rect = container.getBoundingClientRect(), css(container, {
                        left: mathCeil(rect.left) - rect.left + PX,
                        top: mathCeil(rect.top) - rect.top + PX
                    })
                }, subPixelFix(), addEvent(win, "resize", subPixelFix))
            },
            getStyle: function(style) {
                return this.style = extend({
                    fontFamily: '"Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif',
                    fontSize: "12px"
                }, style)
            },
            isHidden: function() {
                return !this.boxWrapper.getBBox().width
            },
            destroy: function() {
                var renderer = this,
                    rendererDefs = renderer.defs;
                return renderer.box = null, renderer.boxWrapper = renderer.boxWrapper.destroy(), destroyObjectProperties(renderer.gradients || {}), renderer.gradients = null, rendererDefs && (renderer.defs = rendererDefs.destroy()), renderer.subPixelFix && removeEvent(win, "resize", renderer.subPixelFix), renderer.alignedObjects = null, null
            },
            createElement: function(nodeName) {
                var wrapper = new this.Element;
                return wrapper.init(this, nodeName), wrapper
            },
            draw: function() {},
            buildText: function(wrapper) {
                for (var lines, styleRegex, hrefRegex, textNode = wrapper.element, renderer = this, forExport = renderer.forExport, textStr = pick(wrapper.textStr, "").toString(), hasMarkup = -1 !== textStr.indexOf("<"), childNodes = textNode.childNodes, parentX = attr(textNode, "x"), textStyles = wrapper.styles, width = wrapper.textWidth, textLineHeight = textStyles && textStyles.lineHeight, textStroke = textStyles && textStyles.HcTextStroke, i = childNodes.length, getLineHeight = function(tspan) {
                        return textLineHeight ? pInt(textLineHeight) : renderer.fontMetrics(/(px|em)$/.test(tspan && tspan.style.fontSize) ? tspan.style.fontSize : textStyles && textStyles.fontSize || renderer.style.fontSize || 12, tspan).h
                    }; i--;) textNode.removeChild(childNodes[i]);
                return hasMarkup || textStroke || -1 !== textStr.indexOf(" ") ? (styleRegex = /<.*style="([^"]+)".*>/, hrefRegex = /<.*href="(http[^"]+)".*>/, width && !wrapper.added && this.box.appendChild(textNode), lines = hasMarkup ? textStr.replace(/<(b|strong)>/g, '<span style="font-weight:bold">').replace(/<(i|em)>/g, '<span style="font-style:italic">').replace(/<a/g, "<span").replace(/<\/(b|strong|i|em|a)>/g, "</span>").split(/<br.*?>/g) : [textStr], "" === lines[lines.length - 1] && lines.pop(), each(lines, function(line, lineNo) {
                    var spans, spanNo = 0;
                    line = line.replace(/<span/g, "|||<span").replace(/<\/span>/g, "</span>|||"), spans = line.split("|||"), each(spans, function(span) {
                        if ("" !== span || 1 === spans.length) {
                            var spanStyle, attributes = {},
                                tspan = doc.createElementNS(SVG_NS, "tspan");
                            if (styleRegex.test(span) && (spanStyle = span.match(styleRegex)[1].replace(/(;| |^)color([ :])/, "$1fill$2"), attr(tspan, "style", spanStyle)), hrefRegex.test(span) && !forExport && (attr(tspan, "onclick", 'location.href="' + span.match(hrefRegex)[1] + '"'), css(tspan, {
                                    cursor: "pointer"
                                })), span = (span.replace(/<(.|\n)*?>/g, "") || " ").replace(/&lt;/g, "<").replace(/&gt;/g, ">"), " " !== span) {
                                if (tspan.appendChild(doc.createTextNode(span)), spanNo ? attributes.dx = 0 : lineNo && null !== parentX && (attributes.x = parentX), attr(tspan, attributes), textNode.appendChild(tspan), !spanNo && lineNo && (!hasSVG && forExport && css(tspan, {
                                        display: "block"
                                    }), attr(tspan, "dy", getLineHeight(tspan))), width)
                                    for (var tooLong, actualWidth, bBox, words = span.replace(/([^\^])-/g, "$1- ").split(" "), hasWhiteSpace = spans.length > 1 || words.length > 1 && "nowrap" !== textStyles.whiteSpace, hcHeight = textStyles.HcHeight, rest = [], dy = getLineHeight(tspan), softLineNo = 1; hasWhiteSpace && (words.length || rest.length);) delete wrapper.bBox, bBox = wrapper.getBBox(), actualWidth = bBox.width, !hasSVG && renderer.forExport && (actualWidth = renderer.measureSpanWidth(tspan.firstChild.data, wrapper.styles)), tooLong = actualWidth > width, tooLong && 1 !== words.length ? (tspan.removeChild(tspan.firstChild), rest.unshift(words.pop())) : (words = rest, rest = [], words.length && (softLineNo++, hcHeight && softLineNo * dy > hcHeight ? (words = ["..."], wrapper.attr("title", wrapper.textStr)) : (tspan = doc.createElementNS(SVG_NS, "tspan"), attr(tspan, {
                                        dy: dy,
                                        x: parentX
                                    }), spanStyle && attr(tspan, "style", spanStyle), textNode.appendChild(tspan))), actualWidth > width && (width = actualWidth)), words.length && tspan.appendChild(doc.createTextNode(words.join(" ").replace(/- /g, "-")));
                                spanNo++
                            }
                        }
                    })
                }), void 0) : void textNode.appendChild(doc.createTextNode(textStr))
            },
            button: function(text, x, y, callback, normalState, hoverState, pressedState, disabledState, shape) {
                var stateOptions, stateStyle, normalStyle, hoverStyle, pressedStyle, disabledStyle, label = this.label(text, x, y, shape, null, null, null, null, "button"),
                    curState = 0,
                    verticalGradient = {
                        x1: 0,
                        y1: 0,
                        x2: 0,
                        y2: 1
                    };
                return normalState = merge({
                    "stroke-width": 1,
                    stroke: "#CCCCCC",
                    fill: {
                        linearGradient: verticalGradient,
                        stops: [
                            [0, "#FEFEFE"],
                            [1, "#F6F6F6"]
                        ]
                    },
                    r: 2,
                    padding: 5,
                    style: {
                        color: "black"
                    }
                }, normalState), normalStyle = normalState.style, delete normalState.style, hoverState = merge(normalState, {
                    stroke: "#68A",
                    fill: {
                        linearGradient: verticalGradient,
                        stops: [
                            [0, "#FFF"],
                            [1, "#ACF"]
                        ]
                    }
                }, hoverState), hoverStyle = hoverState.style, delete hoverState.style, pressedState = merge(normalState, {
                    stroke: "#68A",
                    fill: {
                        linearGradient: verticalGradient,
                        stops: [
                            [0, "#9BD"],
                            [1, "#CDF"]
                        ]
                    }
                }, pressedState), pressedStyle = pressedState.style, delete pressedState.style, disabledState = merge(normalState, {
                    style: {
                        color: "#CCC"
                    }
                }, disabledState), disabledStyle = disabledState.style, delete disabledState.style, addEvent(label.element, isIE ? "mouseover" : "mouseenter", function() {
                    3 !== curState && label.attr(hoverState).css(hoverStyle)
                }), addEvent(label.element, isIE ? "mouseout" : "mouseleave", function() {
                    3 !== curState && (stateOptions = [normalState, hoverState, pressedState][curState], stateStyle = [normalStyle, hoverStyle, pressedStyle][curState], label.attr(stateOptions).css(stateStyle))
                }), label.setState = function(state) {
                    label.state = curState = state, state ? 2 === state ? label.attr(pressedState).css(pressedStyle) : 3 === state && label.attr(disabledState).css(disabledStyle) : label.attr(normalState).css(normalStyle)
                }, label.on("click", function() {
                    3 !== curState && callback.call(label)
                }).attr(normalState).css(extend({
                    cursor: "default"
                }, normalStyle))
            },
            crispLine: function(points, width) {
                return points[1] === points[4] && (points[1] = points[4] = mathRound(points[1]) - width % 2 / 2), points[2] === points[5] && (points[2] = points[5] = mathRound(points[2]) + width % 2 / 2), points
            },
            path: function(path) {
                var attr = {
                    fill: NONE
                };
                return isArray(path) ? attr.d = path : isObject(path) && extend(attr, path), this.createElement("path").attr(attr)
            },
            circle: function(x, y, r) {
                var attr = isObject(x) ? x : {
                        x: x,
                        y: y,
                        r: r
                    },
                    wrapper = this.createElement("circle");
                return wrapper.xSetter = function(value) {
                    this.element.setAttribute("cx", value)
                }, wrapper.ySetter = function(value) {
                    this.element.setAttribute("cy", value)
                }, wrapper.attr(attr)
            },
            arc: function(x, y, r, innerR, start, end) {
                var arc;
                return isObject(x) && (y = x.y, r = x.r, innerR = x.innerR, start = x.start, end = x.end, x = x.x), arc = this.symbol("arc", x || 0, y || 0, r || 0, r || 0, {
                    innerR: innerR || 0,
                    start: start || 0,
                    end: end || 0
                }), arc.r = r, arc
            },
            rect: function(x, y, width, height, r, strokeWidth) {
                r = isObject(x) ? x.r : r;
                var wrapper = this.createElement("rect"),
                    attribs = isObject(x) ? x : x === UNDEFINED ? {} : {
                        x: x,
                        y: y,
                        width: mathMax(width, 0),
                        height: mathMax(height, 0)
                    };
                return strokeWidth !== UNDEFINED && (attribs.strokeWidth = strokeWidth, attribs = wrapper.crisp(attribs)), r && (attribs.r = r), wrapper.rSetter = function(value) {
                    attr(this.element, {
                        rx: value,
                        ry: value
                    })
                }, wrapper.attr(attribs)
            },
            setSize: function(width, height, animate) {
                var renderer = this,
                    alignedObjects = renderer.alignedObjects,
                    i = alignedObjects.length;
                for (renderer.width = width, renderer.height = height, renderer.boxWrapper[pick(animate, !0) ? "animate" : "attr"]({
                        width: width,
                        height: height
                    }); i--;) alignedObjects[i].align()
            },
            g: function(name) {
                var elem = this.createElement("g");
                return defined(name) ? elem.attr({
                    "class": PREFIX + name
                }) : elem
            },
            image: function(src, x, y, width, height) {
                var elemWrapper, attribs = {
                    preserveAspectRatio: NONE
                };
                return arguments.length > 1 && extend(attribs, {
                    x: x,
                    y: y,
                    width: width,
                    height: height
                }), elemWrapper = this.createElement("image").attr(attribs), elemWrapper.element.setAttributeNS ? elemWrapper.element.setAttributeNS("http://www.w3.org/1999/xlink", "href", src) : elemWrapper.element.setAttribute("hc-svg-href", src), elemWrapper
            },
            symbol: function(symbol, x, y, width, height, options) {
                var obj, imageElement, imageSrc, imageSize, centerImage, symbolFn = this.symbols[symbol],
                    path = symbolFn && symbolFn(mathRound(x), mathRound(y), width, height, options),
                    imageRegex = /^url\((.*?)\)$/;
                return path ? (obj = this.path(path), extend(obj, {
                    symbolName: symbol,
                    x: x,
                    y: y,
                    width: width,
                    height: height
                }), options && extend(obj, options)) : imageRegex.test(symbol) && (centerImage = function(img, size) {
                    img.element && (img.attr({
                        width: size[0],
                        height: size[1]
                    }), img.alignByTranslate || img.translate(mathRound((width - size[0]) / 2), mathRound((height - size[1]) / 2)))
                }, imageSrc = symbol.match(imageRegex)[1], imageSize = symbolSizes[imageSrc], obj = this.image(imageSrc).attr({
                    x: x,
                    y: y
                }), obj.isImg = !0, imageSize ? centerImage(obj, imageSize) : (obj.attr({
                    width: 0,
                    height: 0
                }), imageElement = createElement("img", {
                    onload: function() {
                        centerImage(obj, symbolSizes[imageSrc] = [this.width, this.height])
                    },
                    src: imageSrc
                }))), obj
            },
            symbols: {
                circle: function(x, y, w, h) {
                    var cpw = .166 * w;
                    return [M, x + w / 2, y, "C", x + w + cpw, y, x + w + cpw, y + h, x + w / 2, y + h, "C", x - cpw, y + h, x - cpw, y, x + w / 2, y, "Z"]
                },
                square: function(x, y, w, h) {
                    return [M, x, y, L, x + w, y, x + w, y + h, x, y + h, "Z"]
                },
                triangle: function(x, y, w, h) {
                    return [M, x + w / 2, y, L, x + w, y + h, x, y + h, "Z"]
                },
                "triangle-down": function(x, y, w, h) {
                    return [M, x, y, L, x + w, y, x + w / 2, y + h, "Z"]
                },
                diamond: function(x, y, w, h) {
                    return [M, x + w / 2, y, L, x + w, y + h / 2, x + w / 2, y + h, x, y + h / 2, "Z"]
                },
                arc: function(x, y, w, h, options) {
                    var start = options.start,
                        radius = options.r || w || h,
                        end = options.end - .001,
                        innerRadius = options.innerR,
                        open = options.open,
                        cosStart = mathCos(start),
                        sinStart = mathSin(start),
                        cosEnd = mathCos(end),
                        sinEnd = mathSin(end),
                        longArc = options.end - start < mathPI ? 0 : 1;
                    return [M, x + radius * cosStart, y + radius * sinStart, "A", radius, radius, 0, longArc, 1, x + radius * cosEnd, y + radius * sinEnd, open ? M : L, x + innerRadius * cosEnd, y + innerRadius * sinEnd, "A", innerRadius, innerRadius, 0, longArc, 0, x + innerRadius * cosStart, y + innerRadius * sinStart, open ? "" : "Z"]
                },
                callout: function(x, y, w, h, options) {
                    var path, arrowLength = 6,
                        halfDistance = 6,
                        r = mathMin(options && options.r || 0, w, h),
                        safeDistance = r + halfDistance,
                        anchorX = options && options.anchorX,
                        anchorY = options && options.anchorY,
                        normalizer = mathRound(options.strokeWidth || 0) % 2 / 2;
                    return x += normalizer, y += normalizer, path = ["M", x + r, y, "L", x + w - r, y, "C", x + w, y, x + w, y, x + w, y + r, "L", x + w, y + h - r, "C", x + w, y + h, x + w, y + h, x + w - r, y + h, "L", x + r, y + h, "C", x, y + h, x, y + h, x, y + h - r, "L", x, y + r, "C", x, y, x, y, x + r, y], anchorX && anchorX > w && anchorY > y + safeDistance && y + h - safeDistance > anchorY ? path.splice(13, 3, "L", x + w, anchorY - halfDistance, x + w + arrowLength, anchorY, x + w, anchorY + halfDistance, x + w, y + h - r) : anchorX && 0 > anchorX && anchorY > y + safeDistance && y + h - safeDistance > anchorY ? path.splice(33, 3, "L", x, anchorY + halfDistance, x - arrowLength, anchorY, x, anchorY - halfDistance, x, y + r) : anchorY && anchorY > h && anchorX > x + safeDistance && x + w - safeDistance > anchorX ? path.splice(23, 3, "L", anchorX + halfDistance, y + h, anchorX, y + h + arrowLength, anchorX - halfDistance, y + h, x + r, y + h) : anchorY && 0 > anchorY && anchorX > x + safeDistance && x + w - safeDistance > anchorX && path.splice(3, 3, "L", anchorX - halfDistance, y, anchorX, y - arrowLength, anchorX + halfDistance, y, w - r, y), path
                }
            },
            clipRect: function(x, y, width, height) {
                var wrapper, id = PREFIX + idCounter++,
                    clipPath = this.createElement("clipPath").attr({
                        id: id
                    }).add(this.defs);
                return wrapper = this.rect(x, y, width, height, 0).add(clipPath), wrapper.id = id, wrapper.clipPath = clipPath, wrapper
            },
            text: function(str, x, y, useHTML) {
                var wrapper, renderer = this,
                    fakeSVG = useCanVG || !hasSVG && renderer.forExport,
                    attr = {};
                return useHTML && !renderer.forExport ? renderer.html(str, x, y) : (attr.x = Math.round(x || 0), y && (attr.y = Math.round(y)), (str || 0 === str) && (attr.text = str), wrapper = renderer.createElement("text").attr(attr), fakeSVG && wrapper.css({
                    position: ABSOLUTE
                }), useHTML || (wrapper.xSetter = function(value, key, element) {
                    var tspan, i, tspans = element.getElementsByTagName("tspan"),
                        parentVal = element.getAttribute(key);
                    for (i = 0; i < tspans.length; i++) tspan = tspans[i], tspan.getAttribute(key) === parentVal && tspan.setAttribute(key, value);
                    element.setAttribute(key, value)
                }), wrapper)
            },
            fontMetrics: function(fontSize, elem) {
                fontSize = fontSize || this.style.fontSize, elem && win.getComputedStyle && (elem = elem.element || elem, fontSize = win.getComputedStyle(elem, "").fontSize), fontSize = /px/.test(fontSize) ? pInt(fontSize) : /em/.test(fontSize) ? 12 * parseFloat(fontSize) : 12;
                var lineHeight = 24 > fontSize ? fontSize + 4 : mathRound(1.2 * fontSize),
                    baseline = mathRound(.8 * lineHeight);
                return {
                    h: lineHeight,
                    b: baseline,
                    f: fontSize
                }
            },
            label: function(str, x, y, shape, anchorX, anchorY, useHTML, baseline, className) {
                function updateBoxSize() {
                    var boxX, boxY, style = text.element.style;
                    bBox = (void 0 === width || void 0 === height || wrapper.styles.textAlign) && text.textStr && text.getBBox(), wrapper.width = (width || bBox.width || 0) + 2 * padding + paddingLeft, wrapper.height = (height || bBox.height || 0) + 2 * padding, baselineOffset = padding + renderer.fontMetrics(style && style.fontSize, text).b, needsBox && (box || (boxX = mathRound(-alignFactor * padding), boxY = baseline ? -baselineOffset : 0, wrapper.box = box = shape ? renderer.symbol(shape, boxX, boxY, wrapper.width, wrapper.height, deferredAttr) : renderer.rect(boxX, boxY, wrapper.width, wrapper.height, 0, deferredAttr[STROKE_WIDTH]), box.attr("fill", NONE).add(wrapper)), box.isImg || box.attr(extend({
                        width: mathRound(wrapper.width),
                        height: mathRound(wrapper.height)
                    }, deferredAttr)), deferredAttr = null)
                }

                function updateTextPadding() {
                    var y, styles = wrapper.styles,
                        textAlign = styles && styles.textAlign,
                        x = paddingLeft + padding * (1 - alignFactor);
                    y = baseline ? 0 : baselineOffset, defined(width) && bBox && ("center" === textAlign || "right" === textAlign) && (x += {
                        center: .5,
                        right: 1
                    }[textAlign] * (width - bBox.width)), (x !== text.x || y !== text.y) && (text.attr("x", x), y !== UNDEFINED && text.attr("y", y)), text.x = x, text.y = y
                }

                function boxAttr(key, value) {
                    box ? box.attr(key, value) : deferredAttr[key] = value
                }
                var box, bBox, width, height, wrapperX, wrapperY, baselineOffset, needsBox, renderer = this,
                    wrapper = renderer.g(className),
                    text = renderer.text("", 0, 0, useHTML).attr({
                        zIndex: 1
                    }),
                    alignFactor = 0,
                    padding = 3,
                    paddingLeft = 0,
                    crispAdjust = 0,
                    deferredAttr = {};
                wrapper.onAdd = function() {
                    text.add(wrapper), wrapper.attr({
                        text: str || "",
                        x: x,
                        y: y
                    }), box && defined(anchorX) && wrapper.attr({
                        anchorX: anchorX,
                        anchorY: anchorY
                    })
                }, wrapper.widthSetter = function(value) {
                    width = value
                }, wrapper.heightSetter = function(value) {
                    height = value
                }, wrapper.paddingSetter = function(value) {
                    defined(value) && value !== padding && (padding = value, updateTextPadding())
                }, wrapper.paddingLeftSetter = function(value) {
                    defined(value) && value !== paddingLeft && (paddingLeft = value, updateTextPadding())
                }, wrapper.alignSetter = function(value) {
                    alignFactor = {
                        left: 0,
                        center: .5,
                        right: 1
                    }[value]
                }, wrapper.textSetter = function(value) {
                    value !== UNDEFINED && text.textSetter(value), updateBoxSize(), updateTextPadding()
                }, wrapper["stroke-widthSetter"] = function(value, key) {
                    value && (needsBox = !0), crispAdjust = value % 2 / 2, boxAttr(key, value)
                }, wrapper.strokeSetter = wrapper.fillSetter = wrapper.rSetter = function(value, key) {
                    "fill" === key && value && (needsBox = !0), boxAttr(key, value)
                }, wrapper.anchorXSetter = function(value, key) {
                    anchorX = value, boxAttr(key, value + crispAdjust - wrapperX)
                }, wrapper.anchorYSetter = function(value, key) {
                    anchorY = value, boxAttr(key, value - wrapperY)
                }, wrapper.xSetter = function(value) {
                    wrapper.x = value, alignFactor && (value -= alignFactor * ((width || bBox.width) + padding)), wrapperX = mathRound(value), wrapper.attr("translateX", wrapperX)
                }, wrapper.ySetter = function(value) {
                    wrapperY = wrapper.y = mathRound(value), wrapper.attr("translateY", wrapperY)
                };
                var baseCss = wrapper.css;
                return extend(wrapper, {
                    css: function(styles) {
                        if (styles) {
                            var textStyles = {};
                            styles = merge(styles), each(wrapper.textProps, function(prop) {
                                styles[prop] !== UNDEFINED && (textStyles[prop] = styles[prop], delete styles[prop])
                            }), text.css(textStyles)
                        }
                        return baseCss.call(wrapper, styles)
                    },
                    getBBox: function() {
                        return {
                            width: bBox.width + 2 * padding,
                            height: bBox.height + 2 * padding,
                            x: bBox.x - padding,
                            y: bBox.y - padding
                        }
                    },
                    shadow: function(b) {
                        return box && box.shadow(b), wrapper
                    },
                    destroy: function() {
                        removeEvent(wrapper.element, "mouseenter"), removeEvent(wrapper.element, "mouseleave"), text && (text = text.destroy()), box && (box = box.destroy()), SVGElement.prototype.destroy.call(wrapper), wrapper = renderer = updateBoxSize = updateTextPadding = boxAttr = null
                    }
                })
            }
        }, Renderer = SVGRenderer, extend(SVGElement.prototype, {
            htmlCss: function(styles) {
                var wrapper = this,
                    element = wrapper.element,
                    textWidth = styles && "SPAN" === element.tagName && styles.width;
                return textWidth && (delete styles.width, wrapper.textWidth = textWidth, wrapper.updateTransform()), wrapper.styles = extend(wrapper.styles, styles), css(wrapper.element, styles), wrapper
            },
            htmlGetBBox: function() {
                var wrapper = this,
                    element = wrapper.element,
                    bBox = wrapper.bBox;
                return bBox || ("text" === element.nodeName && (element.style.position = ABSOLUTE), bBox = wrapper.bBox = {
                    x: element.offsetLeft,
                    y: element.offsetTop,
                    width: element.offsetWidth,
                    height: element.offsetHeight
                }), bBox
            },
            htmlUpdateTransform: function() {
                if (!this.added) return void(this.alignOnAdd = !0);
                var wrapper = this,
                    renderer = wrapper.renderer,
                    elem = wrapper.element,
                    translateX = wrapper.translateX || 0,
                    translateY = wrapper.translateY || 0,
                    x = wrapper.x || 0,
                    y = wrapper.y || 0,
                    align = wrapper.textAlign || "left",
                    alignCorrection = {
                        left: 0,
                        center: .5,
                        right: 1
                    }[align],
                    shadows = wrapper.shadows;
                if (css(elem, {
                        marginLeft: translateX,
                        marginTop: translateY
                    }), shadows && each(shadows, function(shadow) {
                        css(shadow, {
                            marginLeft: translateX + 1,
                            marginTop: translateY + 1
                        })
                    }), wrapper.inverted && each(elem.childNodes, function(child) {
                        renderer.invertChild(child, elem)
                    }), "SPAN" === elem.tagName) {
                    var width, baseline, rotation = wrapper.rotation,
                        textWidth = pInt(wrapper.textWidth),
                        currentTextTransform = [rotation, align, elem.innerHTML, wrapper.textWidth].join(",");
                    currentTextTransform !== wrapper.cTT && (baseline = renderer.fontMetrics(elem.style.fontSize).b, defined(rotation) && wrapper.setSpanRotation(rotation, alignCorrection, baseline), width = pick(wrapper.elemWidth, elem.offsetWidth), width > textWidth && /[ \-]/.test(elem.textContent || elem.innerText) && (css(elem, {
                        width: textWidth + PX,
                        display: "block",
                        whiteSpace: "normal"
                    }), width = textWidth), wrapper.getSpanCorrection(width, baseline, alignCorrection, rotation, align)), css(elem, {
                        left: x + (wrapper.xCorr || 0) + PX,
                        top: y + (wrapper.yCorr || 0) + PX
                    }), isWebKit && (baseline = elem.offsetHeight), wrapper.cTT = currentTextTransform
                }
            },
            setSpanRotation: function(rotation, alignCorrection, baseline) {
                var rotationStyle = {},
                    cssTransformKey = isIE ? "-ms-transform" : isWebKit ? "-webkit-transform" : isFirefox ? "MozTransform" : isOpera ? "-o-transform" : "";
                rotationStyle[cssTransformKey] = rotationStyle.transform = "rotate(" + rotation + "deg)", rotationStyle[cssTransformKey + (isFirefox ? "Origin" : "-origin")] = rotationStyle.transformOrigin = 100 * alignCorrection + "% " + baseline + "px", css(this.element, rotationStyle)
            },
            getSpanCorrection: function(width, baseline, alignCorrection) {
                this.xCorr = -width * alignCorrection, this.yCorr = -baseline
            }
        }), extend(SVGRenderer.prototype, {
            html: function(str, x, y) {
                var wrapper = this.createElement("span"),
                    element = wrapper.element,
                    renderer = wrapper.renderer;
                return wrapper.textSetter = function(value) {
                    value !== element.innerHTML && delete this.bBox, element.innerHTML = this.textStr = value
                }, wrapper.xSetter = wrapper.ySetter = wrapper.alignSetter = wrapper.rotationSetter = function(value, key) {
                    "align" === key && (key = "textAlign"), wrapper[key] = value, wrapper.htmlUpdateTransform()
                }, wrapper.attr({
                    text: str,
                    x: mathRound(x),
                    y: mathRound(y)
                }).css({
                    position: ABSOLUTE,
                    whiteSpace: "nowrap",
                    fontFamily: this.style.fontFamily,
                    fontSize: this.style.fontSize
                }), wrapper.css = wrapper.htmlCss, renderer.isSVG && (wrapper.add = function(svgGroupWrapper) {
                    var htmlGroup, parentGroup, container = renderer.box.parentNode,
                        parents = [];
                    if (this.parentGroup = svgGroupWrapper, svgGroupWrapper) {
                        if (htmlGroup = svgGroupWrapper.div, !htmlGroup) {
                            for (parentGroup = svgGroupWrapper; parentGroup;) parents.push(parentGroup), parentGroup = parentGroup.parentGroup;
                            each(parents.reverse(), function(parentGroup) {
                                var htmlGroupStyle;
                                htmlGroup = parentGroup.div = parentGroup.div || createElement(DIV, {
                                    className: attr(parentGroup.element, "class")
                                }, {
                                    position: ABSOLUTE,
                                    left: (parentGroup.translateX || 0) + PX,
                                    top: (parentGroup.translateY || 0) + PX
                                }, htmlGroup || container), htmlGroupStyle = htmlGroup.style, extend(parentGroup, {
                                    translateXSetter: function(value, key) {
                                        htmlGroupStyle.left = value + PX, parentGroup[key] = value, parentGroup.doTransform = !0
                                    },
                                    translateYSetter: function(value, key) {
                                        htmlGroupStyle.top = value + PX, parentGroup[key] = value, parentGroup.doTransform = !0
                                    },
                                    visibilitySetter: function(value, key) {
                                        htmlGroupStyle[key] = value
                                    }
                                })
                            })
                        }
                    } else htmlGroup = container;
                    return htmlGroup.appendChild(element), wrapper.added = !0, wrapper.alignOnAdd && wrapper.htmlUpdateTransform(), wrapper
                }), wrapper
            }
        });
        var VMLRenderer, VMLElement;
        if (!hasSVG && !useCanVG) {
            VMLElement = {
                init: function(renderer, nodeName) {
                    var wrapper = this,
                        markup = ["<", nodeName, ' filled="f" stroked="f"'],
                        style = ["position: ", ABSOLUTE, ";"],
                        isDiv = nodeName === DIV;
                    ("shape" === nodeName || isDiv) && style.push("left:0;top:0;width:1px;height:1px;"), style.push("visibility: ", isDiv ? HIDDEN : VISIBLE), markup.push(' style="', style.join(""), '"/>'), nodeName && (markup = isDiv || "span" === nodeName || "img" === nodeName ? markup.join("") : renderer.prepVML(markup), wrapper.element = createElement(markup)), wrapper.renderer = renderer
                },
                add: function(parent) {
                    var wrapper = this,
                        renderer = wrapper.renderer,
                        element = wrapper.element,
                        box = renderer.box,
                        inverted = parent && parent.inverted,
                        parentNode = parent ? parent.element || parent : box;
                    return inverted && renderer.invertChild(element, parentNode), parentNode.appendChild(element), wrapper.added = !0, wrapper.alignOnAdd && !wrapper.deferUpdateTransform && wrapper.updateTransform(), wrapper.onAdd && wrapper.onAdd(), wrapper
                },
                updateTransform: SVGElement.prototype.htmlUpdateTransform,
                setSpanRotation: function() {
                    var rotation = this.rotation,
                        costheta = mathCos(rotation * deg2rad),
                        sintheta = mathSin(rotation * deg2rad);
                    css(this.element, {
                        filter: rotation ? ["progid:DXImageTransform.Microsoft.Matrix(M11=", costheta, ", M12=", -sintheta, ", M21=", sintheta, ", M22=", costheta, ", sizingMethod='auto expand')"].join("") : NONE
                    })
                },
                getSpanCorrection: function(width, baseline, alignCorrection, rotation, align) {
                    var quad, costheta = rotation ? mathCos(rotation * deg2rad) : 1,
                        sintheta = rotation ? mathSin(rotation * deg2rad) : 0,
                        height = pick(this.elemHeight, this.element.offsetHeight),
                        nonLeft = align && "left" !== align;
                    this.xCorr = 0 > costheta && -width, this.yCorr = 0 > sintheta && -height, quad = 0 > costheta * sintheta, this.xCorr += sintheta * baseline * (quad ? 1 - alignCorrection : alignCorrection), this.yCorr -= costheta * baseline * (rotation ? quad ? alignCorrection : 1 - alignCorrection : 1), nonLeft && (this.xCorr -= width * alignCorrection * (0 > costheta ? -1 : 1), rotation && (this.yCorr -= height * alignCorrection * (0 > sintheta ? -1 : 1)), css(this.element, {
                        textAlign: align
                    }))
                },
                pathToVML: function(value) {
                    for (var i = value.length, path = []; i--;) isNumber(value[i]) ? path[i] = mathRound(10 * value[i]) - 5 : "Z" === value[i] ? path[i] = "x" : (path[i] = value[i], !value.isArc || "wa" !== value[i] && "at" !== value[i] || (path[i + 5] === path[i + 7] && (path[i + 7] += value[i + 7] > value[i + 5] ? 1 : -1), path[i + 6] === path[i + 8] && (path[i + 8] += value[i + 8] > value[i + 6] ? 1 : -1)));
                    return path.join(" ") || "x"
                },
                clip: function(clipRect) {
                    var clipMembers, cssRet, wrapper = this;
                    return clipRect ? (clipMembers = clipRect.members, erase(clipMembers, wrapper), clipMembers.push(wrapper), wrapper.destroyClip = function() {
                        erase(clipMembers, wrapper)
                    }, cssRet = clipRect.getCSS(wrapper)) : (wrapper.destroyClip && wrapper.destroyClip(), cssRet = {
                        clip: docMode8 ? "inherit" : "rect(auto)"
                    }), wrapper.css(cssRet)
                },
                css: SVGElement.prototype.htmlCss,
                safeRemoveChild: function(element) {
                    element.parentNode && discardElement(element)
                },
                destroy: function() {
                    return this.destroyClip && this.destroyClip(), SVGElement.prototype.destroy.apply(this)
                },
                on: function(eventType, handler) {
                    return this.element["on" + eventType] = function() {
                        var evt = win.event;
                        evt.target = evt.srcElement, handler(evt)
                    }, this
                },
                cutOffPath: function(path, length) {
                    var len;
                    return path = path.split(/[ ,]/), len = path.length, (9 === len || 11 === len) && (path[len - 4] = path[len - 2] = pInt(path[len - 2]) - 10 * length), path.join(" ")
                },
                shadow: function(shadowOptions, group, cutOff) {
                    var i, shadow, markup, strokeWidth, modifiedPath, shadowWidth, shadowElementOpacity, shadows = [],
                        element = this.element,
                        renderer = this.renderer,
                        elemStyle = element.style,
                        path = element.path;
                    if (path && "string" != typeof path.value && (path = "x"), modifiedPath = path, shadowOptions) {
                        for (shadowWidth = pick(shadowOptions.width, 3), shadowElementOpacity = (shadowOptions.opacity || .15) / shadowWidth, i = 1; 3 >= i; i++) strokeWidth = 2 * shadowWidth + 1 - 2 * i, cutOff && (modifiedPath = this.cutOffPath(path.value, strokeWidth + .5)), markup = ['<shape isShadow="true" strokeweight="', strokeWidth, '" filled="false" path="', modifiedPath, '" coordsize="10 10" style="', element.style.cssText, '" />'], shadow = createElement(renderer.prepVML(markup), null, {
                            left: pInt(elemStyle.left) + pick(shadowOptions.offsetX, 1),
                            top: pInt(elemStyle.top) + pick(shadowOptions.offsetY, 1)
                        }), cutOff && (shadow.cutOff = strokeWidth + 1), markup = ['<stroke color="', shadowOptions.color || "black", '" opacity="', shadowElementOpacity * i, '"/>'], createElement(renderer.prepVML(markup), null, null, shadow), group ? group.element.appendChild(shadow) : element.parentNode.insertBefore(shadow, element), shadows.push(shadow);
                        this.shadows = shadows
                    }
                    return this
                },
                updateShadows: noop,
                setAttr: function(key, value) {
                    docMode8 ? this.element[key] = value : this.element.setAttribute(key, value)
                },
                classSetter: function(value) {
                    this.element.className = value
                },
                dashstyleSetter: function(value, key, element) {
                    var strokeElem = element.getElementsByTagName("stroke")[0] || createElement(this.renderer.prepVML(["<stroke/>"]), null, null, element);
                    strokeElem[key] = value || "solid", this[key] = value
                },
                dSetter: function(value, key, element) {
                    var i, shadows = this.shadows;
                    if (value = value || [], this.d = value.join && value.join(" "), element.path = value = this.pathToVML(value), shadows)
                        for (i = shadows.length; i--;) shadows[i].path = shadows[i].cutOff ? this.cutOffPath(value, shadows[i].cutOff) : value;
                    this.setAttr(key, value)
                },
                fillSetter: function(value, key, element) {
                    var nodeName = element.nodeName;
                    "SPAN" === nodeName ? element.style.color = value : "IMG" !== nodeName && (element.filled = value !== NONE, this.setAttr("fillcolor", this.renderer.color(value, element, key, this)))
                },
                opacitySetter: noop,
                rotationSetter: function(value, key, element) {
                    var style = element.style;
                    this[key] = style[key] = value, style.left = -mathRound(mathSin(value * deg2rad) + 1) + PX, style.top = mathRound(mathCos(value * deg2rad)) + PX
                },
                strokeSetter: function(value, key, element) {
                    this.setAttr("strokecolor", this.renderer.color(value, element, key))
                },
                "stroke-widthSetter": function(value, key, element) {
                    element.stroked = !!value, this[key] = value, isNumber(value) && (value += PX), this.setAttr("strokeweight", value)
                },
                titleSetter: function(value, key) {
                    this.setAttr(key, value)
                },
                visibilitySetter: function(value, key, element) {
                    "inherit" === value && (value = VISIBLE), this.shadows && each(this.shadows, function(shadow) {
                        shadow.style[key] = value
                    }), "DIV" === element.nodeName && (value = value === HIDDEN ? "-999em" : 0, docMode8 || (element.style[key] = value ? VISIBLE : HIDDEN), key = "top"), element.style[key] = value
                },
                xSetter: function(value, key, element) {
                    this[key] = value, "x" === key ? key = "left" : "y" === key && (key = "top"), this.updateClipping ? (this[key] = value, this.updateClipping()) : element.style[key] = value
                },
                zIndexSetter: function(value, key, element) {
                    element.style[key] = value
                }
            }, Highcharts.VMLElement = VMLElement = extendClass(SVGElement, VMLElement), VMLElement.prototype.ySetter = VMLElement.prototype.widthSetter = VMLElement.prototype.heightSetter = VMLElement.prototype.xSetter;
            var VMLRendererExtension = {
                Element: VMLElement,
                isIE8: userAgent.indexOf("MSIE 8.0") > -1,
                init: function(container, width, height, style) {
                    var boxWrapper, box, css, renderer = this;
                    if (renderer.alignedObjects = [], boxWrapper = renderer.createElement(DIV).css(extend(this.getStyle(style), {
                            position: RELATIVE
                        })), box = boxWrapper.element, container.appendChild(boxWrapper.element), renderer.isVML = !0, renderer.box = box, renderer.boxWrapper = boxWrapper, renderer.cache = {}, renderer.setSize(width, height, !1), !doc.namespaces.hcv) {
                        doc.namespaces.add("hcv", "urn:schemas-microsoft-com:vml"), css = "hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } ";
                        try {
                            doc.createStyleSheet().cssText = css
                        } catch (e) {
                            doc.styleSheets[0].cssText += css
                        }
                    }
                },
                isHidden: function() {
                    return !this.box.offsetWidth
                },
                clipRect: function(x, y, width, height) {
                    var clipRect = this.createElement(),
                        isObj = isObject(x);
                    return extend(clipRect, {
                        members: [],
                        left: (isObj ? x.x : x) + 1,
                        top: (isObj ? x.y : y) + 1,
                        width: (isObj ? x.width : width) - 1,
                        height: (isObj ? x.height : height) - 1,
                        getCSS: function(wrapper) {
                            var element = wrapper.element,
                                nodeName = element.nodeName,
                                isShape = "shape" === nodeName,
                                inverted = wrapper.inverted,
                                rect = this,
                                top = rect.top - (isShape ? element.offsetTop : 0),
                                left = rect.left,
                                right = left + rect.width,
                                bottom = top + rect.height,
                                ret = {
                                    clip: "rect(" + mathRound(inverted ? left : top) + "px," + mathRound(inverted ? bottom : right) + "px," + mathRound(inverted ? right : bottom) + "px," + mathRound(inverted ? top : left) + "px)"
                                };
                            return !inverted && docMode8 && "DIV" === nodeName && extend(ret, {
                                width: right + PX,
                                height: bottom + PX
                            }), ret
                        },
                        updateClipping: function() {
                            each(clipRect.members, function(member) {
                                member.element && member.css(clipRect.getCSS(member))
                            })
                        }
                    })
                },
                color: function(color, elem, prop, wrapper) {
                    var colorObject, markup, fillType, renderer = this,
                        regexRgba = /^rgba/,
                        ret = NONE;
                    if (color && color.linearGradient ? fillType = "gradient" : color && color.radialGradient && (fillType = "pattern"), fillType) {
                        var stopColor, stopOpacity, x1, y1, x2, y2, opacity1, opacity2, color1, color2, firstStop, lastStop, gradient = color.linearGradient || color.radialGradient,
                            fillAttr = "",
                            stops = color.stops,
                            colors = [],
                            addFillNode = function() {
                                markup = ['<fill colors="' + colors.join(",") + '" opacity="', opacity2, '" o:opacity2="', opacity1, '" type="', fillType, '" ', fillAttr, 'focus="100%" method="any" />'], createElement(renderer.prepVML(markup), null, null, elem)
                            };
                        if (firstStop = stops[0], lastStop = stops[stops.length - 1], firstStop[0] > 0 && stops.unshift([0, firstStop[1]]), lastStop[0] < 1 && stops.push([1, lastStop[1]]), each(stops, function(stop, i) {
                                regexRgba.test(stop[1]) ? (colorObject = Color(stop[1]), stopColor = colorObject.get("rgb"), stopOpacity = colorObject.get("a")) : (stopColor = stop[1], stopOpacity = 1), colors.push(100 * stop[0] + "% " + stopColor), i ? (opacity2 = stopOpacity, color1 = stopColor) : (opacity1 = stopOpacity, color2 = stopColor)
                            }), "fill" === prop)
                            if ("gradient" === fillType) x1 = gradient.x1 || gradient[0] || 0, y1 = gradient.y1 || gradient[1] || 0, x2 = gradient.x2 || gradient[2] || 0, y2 = gradient.y2 || gradient[3] || 0, fillAttr = 'angle="' + (90 - 180 * math.atan((y2 - y1) / (x2 - x1)) / mathPI) + '"', addFillNode();
                            else {
                                var bBox, r = gradient.r,
                                    sizex = 2 * r,
                                    sizey = 2 * r,
                                    cx = gradient.cx,
                                    cy = gradient.cy,
                                    radialReference = elem.radialReference,
                                    applyRadialGradient = function() {
                                        radialReference && (bBox = wrapper.getBBox(), cx += (radialReference[0] - bBox.x) / bBox.width - .5, cy += (radialReference[1] - bBox.y) / bBox.height - .5, sizex *= radialReference[2] / bBox.width, sizey *= radialReference[2] / bBox.height), fillAttr = 'src="' + defaultOptions.global.VMLRadialGradientURL + '" size="' + sizex + "," + sizey + '" origin="0.5,0.5" position="' + cx + "," + cy + '" color2="' + color2 + '" ', addFillNode()
                                    };
                                wrapper.added ? applyRadialGradient() : wrapper.onAdd = applyRadialGradient, ret = color1
                            } else ret = stopColor
                    } else if (regexRgba.test(color) && "IMG" !== elem.tagName) colorObject = Color(color), markup = ["<", prop, ' opacity="', colorObject.get("a"), '"/>'], createElement(this.prepVML(markup), null, null, elem), ret = colorObject.get("rgb");
                    else {
                        var propNodes = elem.getElementsByTagName(prop);
                        propNodes.length && (propNodes[0].opacity = 1, propNodes[0].type = "solid"), ret = color
                    }
                    return ret
                },
                prepVML: function(markup) {
                    var vmlStyle = "display:inline-block;behavior:url(#default#VML);",
                        isIE8 = this.isIE8;
                    return markup = markup.join(""), isIE8 ? (markup = markup.replace("/>", ' xmlns="urn:schemas-microsoft-com:vml" />'), markup = -1 === markup.indexOf('style="') ? markup.replace("/>", ' style="' + vmlStyle + '" />') : markup.replace('style="', 'style="' + vmlStyle)) : markup = markup.replace("<", "<hcv:"), markup
                },
                text: SVGRenderer.prototype.html,
                path: function(path) {
                    var attr = {
                        coordsize: "10 10"
                    };
                    return isArray(path) ? attr.d = path : isObject(path) && extend(attr, path), this.createElement("shape").attr(attr)
                },
                circle: function(x, y, r) {
                    var circle = this.symbol("circle");
                    return isObject(x) && (r = x.r, y = x.y, x = x.x), circle.isCircle = !0, circle.r = r, circle.attr({
                        x: x,
                        y: y
                    })
                },
                g: function(name) {
                    var wrapper, attribs;
                    return name && (attribs = {
                        className: PREFIX + name,
                        "class": PREFIX + name
                    }), wrapper = this.createElement(DIV).attr(attribs)
                },
                image: function(src, x, y, width, height) {
                    var obj = this.createElement("img").attr({
                        src: src
                    });
                    return arguments.length > 1 && obj.attr({
                        x: x,
                        y: y,
                        width: width,
                        height: height
                    }), obj
                },
                createElement: function(nodeName) {
                    return "rect" === nodeName ? this.symbol(nodeName) : SVGRenderer.prototype.createElement.call(this, nodeName)
                },
                invertChild: function(element, parentNode) {
                    var ren = this,
                        parentStyle = parentNode.style,
                        imgStyle = "IMG" === element.tagName && element.style;
                    css(element, {
                        flip: "x",
                        left: pInt(parentStyle.width) - (imgStyle ? pInt(imgStyle.top) : 1),
                        top: pInt(parentStyle.height) - (imgStyle ? pInt(imgStyle.left) : 1),
                        rotation: -90
                    }), each(element.childNodes, function(child) {
                        ren.invertChild(child, element)
                    })
                },
                symbols: {
                    arc: function(x, y, w, h, options) {
                        var ret, start = options.start,
                            end = options.end,
                            radius = options.r || w || h,
                            innerRadius = options.innerR,
                            cosStart = mathCos(start),
                            sinStart = mathSin(start),
                            cosEnd = mathCos(end),
                            sinEnd = mathSin(end);
                        return end - start === 0 ? ["x"] : (ret = ["wa", x - radius, y - radius, x + radius, y + radius, x + radius * cosStart, y + radius * sinStart, x + radius * cosEnd, y + radius * sinEnd], options.open && !innerRadius && ret.push("e", M, x, y), ret.push("at", x - innerRadius, y - innerRadius, x + innerRadius, y + innerRadius, x + innerRadius * cosEnd, y + innerRadius * sinEnd, x + innerRadius * cosStart, y + innerRadius * sinStart, "x", "e"), ret.isArc = !0, ret)
                    },
                    circle: function(x, y, w, h, wrapper) {
                        return wrapper && (w = h = 2 * wrapper.r), wrapper && wrapper.isCircle && (x -= w / 2, y -= h / 2), ["wa", x, y, x + w, y + h, x + w, y + h / 2, x + w, y + h / 2, "e"]
                    },
                    rect: function(x, y, w, h, options) {
                        return SVGRenderer.prototype.symbols[defined(options) && options.r ? "callout" : "square"].call(0, x, y, w, h, options)
                    }
                }
            };
            Highcharts.VMLRenderer = VMLRenderer = function() {
                this.init.apply(this, arguments)
            }, VMLRenderer.prototype = merge(SVGRenderer.prototype, VMLRendererExtension), Renderer = VMLRenderer
        }
        SVGRenderer.prototype.measureSpanWidth = function(text, styles) {
            var offsetWidth, measuringSpan = doc.createElement("span"),
                textNode = doc.createTextNode(text);
            return measuringSpan.appendChild(textNode), css(measuringSpan, styles), this.box.appendChild(measuringSpan), offsetWidth = measuringSpan.offsetWidth, discardElement(measuringSpan), offsetWidth
        };
        var CanVGRenderer, CanVGController;
        useCanVG && (Highcharts.CanVGRenderer = CanVGRenderer = function() {
            SVG_NS = "http://www.w3.org/1999/xhtml"
        }, CanVGRenderer.prototype.symbols = {}, CanVGController = function() {
            function drawDeferred() {
                var callIndex, callLength = deferredRenderCalls.length;
                for (callIndex = 0; callLength > callIndex; callIndex++) deferredRenderCalls[callIndex]();
                deferredRenderCalls = []
            }
            var deferredRenderCalls = [];
            return {
                push: function(func, scriptLocation) {
                    0 === deferredRenderCalls.length && getScript(scriptLocation, drawDeferred), deferredRenderCalls.push(func)
                }
            }
        }(), Renderer = CanVGRenderer), Tick.prototype = {
            addLabel: function() {
                var str, css, attr, dateTimeLabelFormat, tick = this,
                    axis = tick.axis,
                    options = axis.options,
                    chart = axis.chart,
                    horiz = axis.horiz,
                    categories = axis.categories,
                    names = axis.names,
                    pos = tick.pos,
                    labelOptions = options.labels,
                    rotation = labelOptions.rotation,
                    tickPositions = axis.tickPositions,
                    width = horiz && categories && !labelOptions.step && !labelOptions.staggerLines && !labelOptions.rotation && chart.plotWidth / tickPositions.length || !horiz && (chart.margin[3] || .33 * chart.chartWidth),
                    isFirst = pos === tickPositions[0],
                    isLast = pos === tickPositions[tickPositions.length - 1],
                    value = categories ? pick(categories[pos], names[pos], pos) : pos,
                    label = tick.label,
                    tickPositionInfo = tickPositions.info;
                axis.isDatetimeAxis && tickPositionInfo && (dateTimeLabelFormat = options.dateTimeLabelFormats[tickPositionInfo.higherRanks[pos] || tickPositionInfo.unitName]), tick.isFirst = isFirst, tick.isLast = isLast, str = axis.labelFormatter.call({
                    axis: axis,
                    chart: chart,
                    isFirst: isFirst,
                    isLast: isLast,
                    dateTimeLabelFormat: dateTimeLabelFormat,
                    value: axis.isLog ? correctFloat(lin2log(value)) : value
                }), css = width && {
                    width: mathMax(1, mathRound(width - 2 * (labelOptions.padding || 10))) + PX
                }, css = extend(css, labelOptions.style), defined(label) ? label && label.attr({
                    text: str
                }).css(css) : (attr = {
                    align: axis.labelAlign
                }, isNumber(rotation) && (attr.rotation = rotation), width && labelOptions.ellipsis && (css.HcHeight = axis.len / tickPositions.length), tick.label = label = defined(str) && labelOptions.enabled ? chart.renderer.text(str, 0, 0, labelOptions.useHTML).attr(attr).css(css).add(axis.labelGroup) : null, axis.tickBaseline = chart.renderer.fontMetrics(labelOptions.style.fontSize, label).b, rotation && 2 === axis.side && (axis.tickBaseline *= mathCos(rotation * deg2rad))), tick.yOffset = label ? pick(labelOptions.y, axis.tickBaseline + (2 === axis.side ? 8 : -(label.getBBox().height / 2))) : 0
            },
            getLabelSize: function() {
                var label = this.label,
                    axis = this.axis;
                return label ? label.getBBox()[axis.horiz ? "height" : "width"] : 0
            },
            getLabelSides: function() {
                var bBox = this.label.getBBox(),
                    axis = this.axis,
                    horiz = axis.horiz,
                    options = axis.options,
                    labelOptions = options.labels,
                    size = horiz ? bBox.width : bBox.height,
                    leftSide = horiz ? labelOptions.x - size * {
                        left: 0,
                        center: .5,
                        right: 1
                    }[axis.labelAlign] : 0,
                    rightSide = horiz ? size + leftSide : size;
                return [leftSide, rightSide]
            },
            handleOverflow: function(index, xy) {
                var axisLeft, axisRight, neighbour, neighbourEdge, justifyToPlot, show = !0,
                    axis = this.axis,
                    isFirst = this.isFirst,
                    isLast = this.isLast,
                    horiz = axis.horiz,
                    pxPos = horiz ? xy.x : xy.y,
                    reversed = axis.reversed,
                    tickPositions = axis.tickPositions,
                    sides = this.getLabelSides(),
                    leftSide = sides[0],
                    rightSide = sides[1],
                    line = this.label.line || 0,
                    labelEdge = axis.labelEdge,
                    justifyLabel = axis.justifyLabels && (isFirst || isLast);
                if (labelEdge[line] === UNDEFINED || pxPos + leftSide > labelEdge[line] ? labelEdge[line] = pxPos + rightSide : justifyLabel || (show = !1), justifyLabel) {
                    justifyToPlot = axis.justifyToPlot, axisLeft = justifyToPlot ? axis.pos : 0, axisRight = justifyToPlot ? axisLeft + axis.len : axis.chart.chartWidth;
                    do index += isFirst ? 1 : -1, neighbour = axis.ticks[tickPositions[index]]; while (tickPositions[index] && (!neighbour || !neighbour.label || neighbour.label.line !== line));
                    neighbourEdge = neighbour && neighbour.label.xy && neighbour.label.xy.x + neighbour.getLabelSides()[isFirst ? 0 : 1], isFirst && !reversed || isLast && reversed ? axisLeft > pxPos + leftSide && (pxPos = axisLeft - leftSide, neighbour && pxPos + rightSide > neighbourEdge && (show = !1)) : pxPos + rightSide > axisRight && (pxPos = axisRight - rightSide, neighbour && neighbourEdge > pxPos + leftSide && (show = !1)), xy.x = pxPos
                }
                return show
            },
            getPosition: function(horiz, pos, tickmarkOffset, old) {
                var axis = this.axis,
                    chart = axis.chart,
                    cHeight = old && chart.oldChartHeight || chart.chartHeight;
                return {
                    x: horiz ? axis.translate(pos + tickmarkOffset, null, null, old) + axis.transB : axis.left + axis.offset + (axis.opposite ? (old && chart.oldChartWidth || chart.chartWidth) - axis.right - axis.left : 0),
                    y: horiz ? cHeight - axis.bottom + axis.offset - (axis.opposite ? axis.height : 0) : cHeight - axis.translate(pos + tickmarkOffset, null, null, old) - axis.transB
                }
            },
            getLabelPosition: function(x, y, label, horiz, labelOptions, tickmarkOffset, index, step) {
                var axis = this.axis,
                    transA = axis.transA,
                    reversed = axis.reversed,
                    staggerLines = axis.staggerLines;
                return x = x + labelOptions.x - (tickmarkOffset && horiz ? tickmarkOffset * transA * (reversed ? -1 : 1) : 0), y = y + this.yOffset - (tickmarkOffset && !horiz ? tickmarkOffset * transA * (reversed ? 1 : -1) : 0), staggerLines && (label.line = index / (step || 1) % staggerLines, y += label.line * (axis.labelOffset / staggerLines)), {
                    x: x,
                    y: y
                }
            },
            getMarkPath: function(x, y, tickLength, tickWidth, horiz, renderer) {
                return renderer.crispLine([M, x, y, L, x + (horiz ? 0 : -tickLength), y + (horiz ? tickLength : 0)], tickWidth)
            },
            render: function(index, old, opacity) {
                var gridLinePath, markPath, attribs, tick = this,
                    axis = tick.axis,
                    options = axis.options,
                    chart = axis.chart,
                    renderer = chart.renderer,
                    horiz = axis.horiz,
                    type = tick.type,
                    label = tick.label,
                    pos = tick.pos,
                    labelOptions = options.labels,
                    gridLine = tick.gridLine,
                    gridPrefix = type ? type + "Grid" : "grid",
                    tickPrefix = type ? type + "Tick" : "tick",
                    gridLineWidth = options[gridPrefix + "LineWidth"],
                    gridLineColor = options[gridPrefix + "LineColor"],
                    dashStyle = options[gridPrefix + "LineDashStyle"],
                    tickLength = options[tickPrefix + "Length"],
                    tickWidth = options[tickPrefix + "Width"] || 0,
                    tickColor = options[tickPrefix + "Color"],
                    tickPosition = options[tickPrefix + "Position"],
                    mark = tick.mark,
                    step = labelOptions.step,
                    show = !0,
                    tickmarkOffset = axis.tickmarkOffset,
                    xy = tick.getPosition(horiz, pos, tickmarkOffset, old),
                    x = xy.x,
                    y = xy.y,
                    reverseCrisp = horiz && x === axis.pos + axis.len || !horiz && y === axis.pos ? -1 : 1;
                opacity = pick(opacity, 1), this.isActive = !0, gridLineWidth && (gridLinePath = axis.getPlotLinePath(pos + tickmarkOffset, gridLineWidth * reverseCrisp, old, !0), gridLine === UNDEFINED && (attribs = {
                    stroke: gridLineColor,
                    "stroke-width": gridLineWidth
                }, dashStyle && (attribs.dashstyle = dashStyle), type || (attribs.zIndex = 1), old && (attribs.opacity = 0), tick.gridLine = gridLine = gridLineWidth ? renderer.path(gridLinePath).attr(attribs).add(axis.gridGroup) : null), !old && gridLine && gridLinePath && gridLine[tick.isNew ? "attr" : "animate"]({
                    d: gridLinePath,
                    opacity: opacity
                })), tickWidth && tickLength && ("inside" === tickPosition && (tickLength = -tickLength), axis.opposite && (tickLength = -tickLength), markPath = tick.getMarkPath(x, y, tickLength, tickWidth * reverseCrisp, horiz, renderer), mark ? mark.animate({
                    d: markPath,
                    opacity: opacity
                }) : tick.mark = renderer.path(markPath).attr({
                    stroke: tickColor,
                    "stroke-width": tickWidth,
                    opacity: opacity
                }).add(axis.axisGroup)), label && !isNaN(x) && (label.xy = xy = tick.getLabelPosition(x, y, label, horiz, labelOptions, tickmarkOffset, index, step), tick.isFirst && !tick.isLast && !pick(options.showFirstLabel, 1) || tick.isLast && !tick.isFirst && !pick(options.showLastLabel, 1) ? show = !1 : axis.isRadial || labelOptions.step || labelOptions.rotation || old || 0 === opacity || (show = tick.handleOverflow(index, xy)), step && index % step && (show = !1), show && !isNaN(xy.y) ? (xy.opacity = opacity, label[tick.isNew ? "attr" : "animate"](xy), tick.isNew = !1) : label.attr("y", -9999))
            },
            destroy: function() {
                destroyObjectProperties(this, this.axis)
            }
        }, Highcharts.PlotLineOrBand = function(axis, options) {
            this.axis = axis, options && (this.options = options, this.id = options.id)
        }, Highcharts.PlotLineOrBand.prototype = {
            render: function() {
                var addEvent, eventType, xs, ys, x, y, plotLine = this,
                    axis = plotLine.axis,
                    horiz = axis.horiz,
                    halfPointRange = (axis.pointRange || 0) / 2,
                    options = plotLine.options,
                    optionsLabel = options.label,
                    label = plotLine.label,
                    width = options.width,
                    to = options.to,
                    from = options.from,
                    isBand = defined(from) && defined(to),
                    value = options.value,
                    dashStyle = options.dashStyle,
                    svgElem = plotLine.svgElem,
                    path = [],
                    color = options.color,
                    zIndex = options.zIndex,
                    events = options.events,
                    attribs = {},
                    renderer = axis.chart.renderer;
                if (axis.isLog && (from = log2lin(from), to = log2lin(to), value = log2lin(value)), width) path = axis.getPlotLinePath(value, width), attribs = {
                    stroke: color,
                    "stroke-width": width
                }, dashStyle && (attribs.dashstyle = dashStyle);
                else {
                    if (!isBand) return;
                    from = mathMax(from, axis.min - halfPointRange), to = mathMin(to, axis.max + halfPointRange), path = axis.getPlotBandPath(from, to, options), color && (attribs.fill = color), options.borderWidth && (attribs.stroke = options.borderColor, attribs["stroke-width"] = options.borderWidth)
                }
                if (defined(zIndex) && (attribs.zIndex = zIndex), svgElem) path ? svgElem.animate({
                    d: path
                }, null, svgElem.onGetPath) : (svgElem.hide(), svgElem.onGetPath = function() {
                    svgElem.show()
                }, label && (plotLine.label = label = label.destroy()));
                else if (path && path.length && (plotLine.svgElem = svgElem = renderer.path(path).attr(attribs).add(), events)) {
                    addEvent = function(eventType) {
                        svgElem.on(eventType, function(e) {
                            events[eventType].apply(plotLine, [e])
                        })
                    };
                    for (eventType in events) addEvent(eventType)
                }
                return optionsLabel && defined(optionsLabel.text) && path && path.length && axis.width > 0 && axis.height > 0 ? (optionsLabel = merge({
                    align: horiz && isBand && "center",
                    x: horiz ? !isBand && 4 : 10,
                    verticalAlign: !horiz && isBand && "middle",
                    y: horiz ? isBand ? 16 : 10 : isBand ? 6 : -4,
                    rotation: horiz && !isBand && 90
                }, optionsLabel), label || (attribs = {
                    align: optionsLabel.textAlign || optionsLabel.align,
                    rotation: optionsLabel.rotation
                }, defined(zIndex) && (attribs.zIndex = zIndex), plotLine.label = label = renderer.text(optionsLabel.text, 0, 0, optionsLabel.useHTML).attr(attribs).css(optionsLabel.style).add()), xs = [path[1], path[4], isBand ? path[6] : path[1]], ys = [path[2], path[5], isBand ? path[7] : path[2]], x = arrayMin(xs), y = arrayMin(ys), label.align(optionsLabel, !1, {
                    x: x,
                    y: y,
                    width: arrayMax(xs) - x,
                    height: arrayMax(ys) - y
                }), label.show()) : label && label.hide(), plotLine
            },
            destroy: function() {
                erase(this.axis.plotLinesAndBands, this), delete this.axis, destroyObjectProperties(this)
            }
        }, AxisPlotLineOrBandExtension = {
            getPlotBandPath: function(from, to) {
                var toPath = this.getPlotLinePath(to),
                    path = this.getPlotLinePath(from);
                return path && toPath ? path.push(toPath[4], toPath[5], toPath[1], toPath[2]) : path = null, path
            },
            addPlotBand: function(options) {
                return this.addPlotBandOrLine(options, "plotBands")
            },
            addPlotLine: function(options) {
                return this.addPlotBandOrLine(options, "plotLines")
            },
            addPlotBandOrLine: function(options, coll) {
                var obj = new Highcharts.PlotLineOrBand(this, options).render(),
                    userOptions = this.userOptions;
                return obj && (coll && (userOptions[coll] = userOptions[coll] || [], userOptions[coll].push(options)), this.plotLinesAndBands.push(obj)), obj
            },
            removePlotBandOrLine: function(id) {
                for (var plotLinesAndBands = this.plotLinesAndBands, options = this.options, userOptions = this.userOptions, i = plotLinesAndBands.length; i--;) plotLinesAndBands[i].id === id && plotLinesAndBands[i].destroy();
                each([options.plotLines || [], userOptions.plotLines || [], options.plotBands || [], userOptions.plotBands || []], function(arr) {
                    for (i = arr.length; i--;) arr[i].id === id && erase(arr, arr[i])
                })
            }
        }, Axis.prototype = {
            defaultOptions: {
                dateTimeLabelFormats: {
                    millisecond: "%H:%M:%S.%L",
                    second: "%H:%M:%S",
                    minute: "%H:%M",
                    hour: "%H:%M",
                    day: "%e. %b",
                    week: "%e. %b",
                    month: "%b '%y",
                    year: "%Y"
                },
                endOnTick: !1,
                gridLineColor: "#C0C0C0",
                labels: defaultLabelOptions,
                lineColor: "#C0D0E0",
                lineWidth: 1,
                minPadding: .01,
                maxPadding: .01,
                minorGridLineColor: "#E0E0E0",
                minorGridLineWidth: 1,
                minorTickColor: "#A0A0A0",
                minorTickLength: 2,
                minorTickPosition: "outside",
                startOfWeek: 1,
                startOnTick: !1,
                tickColor: "#C0D0E0",
                tickLength: 10,
                tickmarkPlacement: "between",
                tickPixelInterval: 100,
                tickPosition: "outside",
                tickWidth: 1,
                title: {
                    align: "middle",
                    style: {
                        color: "#707070"
                    }
                },
                type: "linear"
            },
            defaultYAxisOptions: {
                endOnTick: !0,
                gridLineWidth: 1,
                tickPixelInterval: 72,
                showLastLabel: !0,
                labels: {
                    x: -8,
                    y: 3
                },
                lineWidth: 0,
                maxPadding: .05,
                minPadding: .05,
                startOnTick: !0,
                tickWidth: 0,
                title: {
                    rotation: 270,
                    text: "Values"
                },
                stackLabels: {
                    enabled: !1,
                    formatter: function() {
                        return numberFormat(this.total, -1)
                    },
                    style: defaultLabelOptions.style
                }
            },
            defaultLeftAxisOptions: {
                labels: {
                    x: -15,
                    y: null
                },
                title: {
                    rotation: 270
                }
            },
            defaultRightAxisOptions: {
                labels: {
                    x: 15,
                    y: null
                },
                title: {
                    rotation: 90
                }
            },
            defaultBottomAxisOptions: {
                labels: {
                    x: 0,
                    y: null
                },
                title: {
                    rotation: 0
                }
            },
            defaultTopAxisOptions: {
                labels: {
                    x: 0,
                    y: -15
                },
                title: {
                    rotation: 0
                }
            },
            init: function(chart, userOptions) {
                var isXAxis = userOptions.isX,
                    axis = this;
                axis.horiz = chart.inverted ? !isXAxis : isXAxis, axis.isXAxis = isXAxis, axis.coll = isXAxis ? "xAxis" : "yAxis", axis.opposite = userOptions.opposite, axis.side = userOptions.side || (axis.horiz ? axis.opposite ? 0 : 2 : axis.opposite ? 1 : 3), axis.setOptions(userOptions);
                var options = this.options,
                    type = options.type,
                    isDatetimeAxis = "datetime" === type;
                axis.labelFormatter = options.labels.formatter || axis.defaultLabelFormatter, axis.userOptions = userOptions, axis.minPixelPadding = 0, axis.chart = chart, axis.reversed = options.reversed, axis.zoomEnabled = options.zoomEnabled !== !1, axis.categories = options.categories || "category" === type, axis.names = [], axis.isLog = "logarithmic" === type, axis.isDatetimeAxis = isDatetimeAxis, axis.isLinked = defined(options.linkedTo), axis.tickmarkOffset = axis.categories && "between" === options.tickmarkPlacement ? .5 : 0, axis.ticks = {}, axis.labelEdge = [], axis.minorTicks = {}, axis.plotLinesAndBands = [], axis.alternateBands = {}, axis.len = 0, axis.minRange = axis.userMinRange = options.minRange || options.maxZoom, axis.range = options.range, axis.offset = options.offset || 0, axis.stacks = {}, axis.oldStacks = {}, axis.max = null, axis.min = null, axis.crosshair = pick(options.crosshair, splat(chart.options.tooltip.crosshairs)[isXAxis ? 0 : 1], !1);
                var eventType, events = axis.options.events; - 1 === inArray(axis, chart.axes) && (isXAxis && !this.isColorAxis ? chart.axes.splice(chart.xAxis.length, 0, axis) : chart.axes.push(axis), chart[axis.coll].push(axis)), axis.series = axis.series || [], chart.inverted && isXAxis && axis.reversed === UNDEFINED && (axis.reversed = !0), axis.removePlotBand = axis.removePlotBandOrLine, axis.removePlotLine = axis.removePlotBandOrLine;
                for (eventType in events) addEvent(axis, eventType, events[eventType]);
                axis.isLog && (axis.val2lin = log2lin, axis.lin2val = lin2log)
            },
            setOptions: function(userOptions) {
                this.options = merge(this.defaultOptions, this.isXAxis ? {} : this.defaultYAxisOptions, [this.defaultTopAxisOptions, this.defaultRightAxisOptions, this.defaultBottomAxisOptions, this.defaultLeftAxisOptions][this.side], merge(defaultOptions[this.coll], userOptions))
            },
            defaultLabelFormatter: function() {
                var multi, ret, axis = this.axis,
                    value = this.value,
                    categories = axis.categories,
                    dateTimeLabelFormat = this.dateTimeLabelFormat,
                    numericSymbols = defaultOptions.lang.numericSymbols,
                    i = numericSymbols && numericSymbols.length,
                    formatOption = axis.options.labels.format,
                    numericSymbolDetector = axis.isLog ? value : axis.tickInterval;
                if (formatOption) ret = format(formatOption, this);
                else if (categories) ret = value;
                else if (dateTimeLabelFormat) ret = dateFormat(dateTimeLabelFormat, value);
                else if (i && numericSymbolDetector >= 1e3)
                    for (; i-- && ret === UNDEFINED;) multi = Math.pow(1e3, i + 1), numericSymbolDetector >= multi && null !== numericSymbols[i] && (ret = numberFormat(value / multi, -1) + numericSymbols[i]);
                return ret === UNDEFINED && (ret = mathAbs(value) >= 1e4 ? numberFormat(value, 0) : numberFormat(value, -1, UNDEFINED, "")), ret
            },
            getSeriesExtremes: function() {
                var axis = this,
                    chart = axis.chart;
                axis.hasVisibleSeries = !1, axis.dataMin = axis.dataMax = null, axis.buildStacks && axis.buildStacks(), each(axis.series, function(series) {
                    if (series.visible || !chart.options.chart.ignoreHiddenSeries) {
                        var xData, seriesDataMin, seriesDataMax, seriesOptions = series.options,
                            threshold = seriesOptions.threshold;
                        axis.hasVisibleSeries = !0, axis.isLog && 0 >= threshold && (threshold = null), axis.isXAxis ? (xData = series.xData, xData.length && (axis.dataMin = mathMin(pick(axis.dataMin, xData[0]), arrayMin(xData)), axis.dataMax = mathMax(pick(axis.dataMax, xData[0]), arrayMax(xData)))) : (series.getExtremes(), seriesDataMax = series.dataMax, seriesDataMin = series.dataMin, defined(seriesDataMin) && defined(seriesDataMax) && (axis.dataMin = mathMin(pick(axis.dataMin, seriesDataMin), seriesDataMin), axis.dataMax = mathMax(pick(axis.dataMax, seriesDataMax), seriesDataMax)), defined(threshold) && (axis.dataMin >= threshold ? (axis.dataMin = threshold, axis.ignoreMinPadding = !0) : axis.dataMax < threshold && (axis.dataMax = threshold, axis.ignoreMaxPadding = !0)))
                    }
                })
            },
            translate: function(val, backwards, cvsCoord, old, handleLog, pointPlacement) {
                var returnValue, axis = this,
                    sign = 1,
                    cvsOffset = 0,
                    localA = old ? axis.oldTransA : axis.transA,
                    localMin = old ? axis.oldMin : axis.min,
                    minPixelPadding = axis.minPixelPadding,
                    postTranslate = (axis.options.ordinal || axis.isLog && handleLog) && axis.lin2val;
                return localA || (localA = axis.transA), cvsCoord && (sign *= -1, cvsOffset = axis.len), axis.reversed && (sign *= -1, cvsOffset -= sign * (axis.sector || axis.len)), backwards ? (val = val * sign + cvsOffset, val -= minPixelPadding, returnValue = val / localA + localMin, postTranslate && (returnValue = axis.lin2val(returnValue))) : (postTranslate && (val = axis.val2lin(val)), "between" === pointPlacement && (pointPlacement = .5), returnValue = sign * (val - localMin) * localA + cvsOffset + sign * minPixelPadding + (isNumber(pointPlacement) ? localA * pointPlacement * axis.pointRange : 0)), returnValue
            },
            toPixels: function(value, paneCoordinates) {
                return this.translate(value, !1, !this.horiz, null, !0) + (paneCoordinates ? 0 : this.pos)
            },
            toValue: function(pixel, paneCoordinates) {
                return this.translate(pixel - (paneCoordinates ? 0 : this.pos), !0, !this.horiz, null, !0)
            },
            getPlotLinePath: function(value, lineWidth, old, force, translatedValue) {
                var x1, y1, x2, y2, skip, axis = this,
                    chart = axis.chart,
                    axisLeft = axis.left,
                    axisTop = axis.top,
                    cHeight = old && chart.oldChartHeight || chart.chartHeight,
                    cWidth = old && chart.oldChartWidth || chart.chartWidth,
                    transB = axis.transB;
                return translatedValue = pick(translatedValue, axis.translate(value, null, null, old)), x1 = x2 = mathRound(translatedValue + transB), y1 = y2 = mathRound(cHeight - translatedValue - transB), isNaN(translatedValue) ? skip = !0 : axis.horiz ? (y1 = axisTop, y2 = cHeight - axis.bottom, (axisLeft > x1 || x1 > axisLeft + axis.width) && (skip = !0)) : (x1 = axisLeft, x2 = cWidth - axis.right, (axisTop > y1 || y1 > axisTop + axis.height) && (skip = !0)), skip && !force ? null : chart.renderer.crispLine([M, x1, y1, L, x2, y2], lineWidth || 1)
            },
            getLinearTickPositions: function(tickInterval, min, max) {
                var pos, lastPos, roundedMin = correctFloat(mathFloor(min / tickInterval) * tickInterval),
                    roundedMax = correctFloat(mathCeil(max / tickInterval) * tickInterval),
                    tickPositions = [];
                if (min === max && isNumber(min)) return [min];
                for (pos = roundedMin; roundedMax >= pos && (tickPositions.push(pos), pos = correctFloat(pos + tickInterval), pos !== lastPos);) lastPos = pos;
                return tickPositions
            },
            getMinorTickPositions: function() {
                var pos, i, len, axis = this,
                    options = axis.options,
                    tickPositions = axis.tickPositions,
                    minorTickInterval = axis.minorTickInterval,
                    minorTickPositions = [];
                if (axis.isLog)
                    for (len = tickPositions.length, i = 1; len > i; i++) minorTickPositions = minorTickPositions.concat(axis.getLogTickPositions(minorTickInterval, tickPositions[i - 1], tickPositions[i], !0));
                else if (axis.isDatetimeAxis && "auto" === options.minorTickInterval) minorTickPositions = minorTickPositions.concat(axis.getTimeTicks(axis.normalizeTimeTickInterval(minorTickInterval), axis.min, axis.max, options.startOfWeek)), minorTickPositions[0] < axis.min && minorTickPositions.shift();
                else
                    for (pos = axis.min + (tickPositions[0] - axis.min) % minorTickInterval; pos <= axis.max; pos += minorTickInterval) minorTickPositions.push(pos);
                return minorTickPositions
            },
            adjustForMinRange: function() {
                var zoomOffset, closestDataRange, i, distance, xData, loopLength, minArgs, maxArgs, axis = this,
                    options = axis.options,
                    min = axis.min,
                    max = axis.max,
                    spaceAvailable = axis.dataMax - axis.dataMin >= axis.minRange;
                if (axis.isXAxis && axis.minRange === UNDEFINED && !axis.isLog && (defined(options.min) || defined(options.max) ? axis.minRange = null : (each(axis.series, function(series) {
                        for (xData = series.xData, loopLength = series.xIncrement ? 1 : xData.length - 1, i = loopLength; i > 0; i--) distance = xData[i] - xData[i - 1], (closestDataRange === UNDEFINED || closestDataRange > distance) && (closestDataRange = distance)
                    }), axis.minRange = mathMin(5 * closestDataRange, axis.dataMax - axis.dataMin))), max - min < axis.minRange) {
                    var minRange = axis.minRange;
                    zoomOffset = (minRange - max + min) / 2, minArgs = [min - zoomOffset, pick(options.min, min - zoomOffset)], spaceAvailable && (minArgs[2] = axis.dataMin), min = arrayMax(minArgs), maxArgs = [min + minRange, pick(options.max, min + minRange)], spaceAvailable && (maxArgs[2] = axis.dataMax), max = arrayMin(maxArgs), minRange > max - min && (minArgs[0] = max - minRange, minArgs[1] = pick(options.min, max - minRange), min = arrayMax(minArgs))
                }
                axis.min = min, axis.max = max
            },
            setAxisTranslation: function(saveOld) {
                var closestPointRange, ordinalCorrection, axis = this,
                    range = axis.max - axis.min,
                    pointRange = axis.axisPointRange || 0,
                    minPointOffset = 0,
                    pointRangePadding = 0,
                    linkedParent = axis.linkedParent,
                    hasCategories = !!axis.categories,
                    transA = axis.transA;
                (axis.isXAxis || hasCategories || pointRange) && (linkedParent ? (minPointOffset = linkedParent.minPointOffset, pointRangePadding = linkedParent.pointRangePadding) : each(axis.series, function(series) {
                    var seriesPointRange = hasCategories ? 1 : axis.isXAxis ? series.pointRange : axis.axisPointRange || 0,
                        pointPlacement = series.options.pointPlacement,
                        seriesClosestPointRange = series.closestPointRange;
                    seriesPointRange > range && (seriesPointRange = 0), pointRange = mathMax(pointRange, seriesPointRange), minPointOffset = mathMax(minPointOffset, isString(pointPlacement) ? 0 : seriesPointRange / 2), pointRangePadding = mathMax(pointRangePadding, "on" === pointPlacement ? 0 : seriesPointRange), !series.noSharedTooltip && defined(seriesClosestPointRange) && (closestPointRange = defined(closestPointRange) ? mathMin(closestPointRange, seriesClosestPointRange) : seriesClosestPointRange)
                }), ordinalCorrection = axis.ordinalSlope && closestPointRange ? axis.ordinalSlope / closestPointRange : 1, axis.minPointOffset = minPointOffset *= ordinalCorrection, axis.pointRangePadding = pointRangePadding *= ordinalCorrection, axis.pointRange = mathMin(pointRange, range), axis.closestPointRange = closestPointRange), saveOld && (axis.oldTransA = transA), axis.translationSlope = axis.transA = transA = axis.len / (range + pointRangePadding || 1), axis.transB = axis.horiz ? axis.left : axis.bottom, axis.minPixelPadding = transA * minPointOffset
            },
            setTickPositions: function(secondPass) {
                var length, linkedParentExtremes, tickPositions, keepTwoTicksOnly, axis = this,
                    chart = axis.chart,
                    options = axis.options,
                    startOnTick = options.startOnTick,
                    endOnTick = options.endOnTick,
                    isLog = axis.isLog,
                    isDatetimeAxis = axis.isDatetimeAxis,
                    isXAxis = axis.isXAxis,
                    isLinked = axis.isLinked,
                    tickPositioner = axis.options.tickPositioner,
                    maxPadding = options.maxPadding,
                    minPadding = options.minPadding,
                    tickIntervalOption = options.tickInterval,
                    minTickIntervalOption = options.minTickInterval,
                    tickPixelIntervalOption = options.tickPixelInterval,
                    categories = axis.categories;
                if (isLinked ? (axis.linkedParent = chart[axis.coll][options.linkedTo], linkedParentExtremes = axis.linkedParent.getExtremes(), axis.min = pick(linkedParentExtremes.min, linkedParentExtremes.dataMin), axis.max = pick(linkedParentExtremes.max, linkedParentExtremes.dataMax), options.type !== axis.linkedParent.options.type && error(11, 1)) : (axis.min = pick(axis.userMin, options.min, axis.dataMin), axis.max = pick(axis.userMax, options.max, axis.dataMax)), isLog && (!secondPass && mathMin(axis.min, pick(axis.dataMin, axis.min)) <= 0 && error(10, 1), axis.min = correctFloat(log2lin(axis.min)), axis.max = correctFloat(log2lin(axis.max))), axis.range && defined(axis.max) && (axis.userMin = axis.min = mathMax(axis.min, axis.max - axis.range), axis.userMax = axis.max, axis.range = null), axis.beforePadding && axis.beforePadding(), axis.adjustForMinRange(), categories || axis.axisPointRange || axis.usePercentage || isLinked || !defined(axis.min) || !defined(axis.max) || (length = axis.max - axis.min, length && (defined(options.min) || defined(axis.userMin) || !minPadding || !(axis.dataMin < 0) && axis.ignoreMinPadding || (axis.min -= length * minPadding), defined(options.max) || defined(axis.userMax) || !maxPadding || !(axis.dataMax > 0) && axis.ignoreMaxPadding || (axis.max += length * maxPadding))), isNumber(options.floor) && (axis.min = mathMax(axis.min, options.floor)), isNumber(options.ceiling) && (axis.max = mathMin(axis.max, options.ceiling)), axis.min === axis.max || void 0 === axis.min || void 0 === axis.max ? axis.tickInterval = 1 : isLinked && !tickIntervalOption && tickPixelIntervalOption === axis.linkedParent.options.tickPixelInterval ? axis.tickInterval = axis.linkedParent.tickInterval : (axis.tickInterval = pick(tickIntervalOption, categories ? 1 : (axis.max - axis.min) * tickPixelIntervalOption / mathMax(axis.len, tickPixelIntervalOption)), !defined(tickIntervalOption) && axis.len < tickPixelIntervalOption && !this.isRadial && !this.isLog && !categories && startOnTick && endOnTick && (keepTwoTicksOnly = !0, axis.tickInterval /= 4)), isXAxis && !secondPass && each(axis.series, function(series) {
                        series.processData(axis.min !== axis.oldMin || axis.max !== axis.oldMax)
                    }), axis.setAxisTranslation(!0), axis.beforeSetTickPositions && axis.beforeSetTickPositions(), axis.postProcessTickInterval && (axis.tickInterval = axis.postProcessTickInterval(axis.tickInterval)), axis.pointRange && (axis.tickInterval = mathMax(axis.pointRange, axis.tickInterval)), !tickIntervalOption && axis.tickInterval < minTickIntervalOption && (axis.tickInterval = minTickIntervalOption), isDatetimeAxis || isLog || tickIntervalOption || (axis.tickInterval = normalizeTickInterval(axis.tickInterval, null, getMagnitude(axis.tickInterval), options)), axis.minorTickInterval = "auto" === options.minorTickInterval && axis.tickInterval ? axis.tickInterval / 5 : options.minorTickInterval, axis.tickPositions = tickPositions = options.tickPositions ? [].concat(options.tickPositions) : tickPositioner && tickPositioner.apply(axis, [axis.min, axis.max]), tickPositions || (!axis.ordinalPositions && (axis.max - axis.min) / axis.tickInterval > mathMax(2 * axis.len, 200) && error(19, !0), tickPositions = isDatetimeAxis ? axis.getTimeTicks(axis.normalizeTimeTickInterval(axis.tickInterval, options.units), axis.min, axis.max, options.startOfWeek, axis.ordinalPositions, axis.closestPointRange, !0) : isLog ? axis.getLogTickPositions(axis.tickInterval, axis.min, axis.max) : axis.getLinearTickPositions(axis.tickInterval, axis.min, axis.max), keepTwoTicksOnly && tickPositions.splice(1, tickPositions.length - 2), axis.tickPositions = tickPositions), !isLinked) {
                    var singlePad, roundedMin = tickPositions[0],
                        roundedMax = tickPositions[tickPositions.length - 1],
                        minPointOffset = axis.minPointOffset || 0;
                    startOnTick || endOnTick || categories || 2 !== tickPositions.length || tickPositions.splice(1, 0, (roundedMax + roundedMin) / 2), startOnTick ? axis.min = roundedMin : axis.min - minPointOffset > roundedMin && tickPositions.shift(), endOnTick ? axis.max = roundedMax : axis.max + minPointOffset < roundedMax && tickPositions.pop(), 1 === tickPositions.length && (singlePad = mathAbs(axis.max) > 1e13 ? 1 : .001, axis.min -= singlePad, axis.max += singlePad)
                }
            },
            setMaxTicks: function() {
                var chart = this.chart,
                    maxTicks = chart.maxTicks || {},
                    tickPositions = this.tickPositions,
                    key = this._maxTicksKey = [this.coll, this.pos, this.len].join("-");
                !this.isLinked && !this.isDatetimeAxis && tickPositions && tickPositions.length > (maxTicks[key] || 0) && this.options.alignTicks !== !1 && (maxTicks[key] = tickPositions.length), chart.maxTicks = maxTicks
            },
            adjustTickAmount: function() {
                var axis = this,
                    chart = axis.chart,
                    key = axis._maxTicksKey,
                    tickPositions = axis.tickPositions,
                    maxTicks = chart.maxTicks;
                if (maxTicks && maxTicks[key] && !axis.isDatetimeAxis && !axis.categories && !axis.isLinked && axis.options.alignTicks !== !1 && this.min !== UNDEFINED) {
                    var tickAmount, oldTickAmount = axis.tickAmount,
                        calculatedTickAmount = tickPositions.length;
                    if (axis.tickAmount = tickAmount = maxTicks[key], tickAmount > calculatedTickAmount) {
                        for (; tickPositions.length < tickAmount;) tickPositions.push(correctFloat(tickPositions[tickPositions.length - 1] + axis.tickInterval));
                        axis.transA *= (calculatedTickAmount - 1) / (tickAmount - 1), axis.max = tickPositions[tickPositions.length - 1]
                    }
                    defined(oldTickAmount) && tickAmount !== oldTickAmount && (axis.isDirty = !0)
                }
            },
            setScale: function() {
                var type, i, isDirtyData, isDirtyAxisLength, axis = this,
                    stacks = axis.stacks;
                if (axis.oldMin = axis.min, axis.oldMax = axis.max, axis.oldAxisLength = axis.len, axis.setAxisSize(), isDirtyAxisLength = axis.len !== axis.oldAxisLength, each(axis.series, function(series) {
                        (series.isDirtyData || series.isDirty || series.xAxis.isDirty) && (isDirtyData = !0)
                    }), isDirtyAxisLength || isDirtyData || axis.isLinked || axis.forceRedraw || axis.userMin !== axis.oldUserMin || axis.userMax !== axis.oldUserMax) {
                    if (!axis.isXAxis)
                        for (type in stacks)
                            for (i in stacks[type]) stacks[type][i].total = null, stacks[type][i].cum = 0;
                    axis.forceRedraw = !1, axis.getSeriesExtremes(), axis.setTickPositions(), axis.oldUserMin = axis.userMin, axis.oldUserMax = axis.userMax, axis.isDirty || (axis.isDirty = isDirtyAxisLength || axis.min !== axis.oldMin || axis.max !== axis.oldMax)
                } else if (!axis.isXAxis) {
                    axis.oldStacks && (stacks = axis.stacks = axis.oldStacks);
                    for (type in stacks)
                        for (i in stacks[type]) stacks[type][i].cum = stacks[type][i].total
                }
                axis.setMaxTicks()
            },
            setExtremes: function(newMin, newMax, redraw, animation, eventArguments) {
                var axis = this,
                    chart = axis.chart;
                redraw = pick(redraw, !0), eventArguments = extend(eventArguments, {
                    min: newMin,
                    max: newMax
                }), fireEvent(axis, "setExtremes", eventArguments, function() {
                    axis.userMin = newMin, axis.userMax = newMax, axis.eventArgs = eventArguments, axis.isDirtyExtremes = !0, redraw && chart.redraw(animation)
                })
            },
            zoom: function(newMin, newMax) {
                var dataMin = this.dataMin,
                    dataMax = this.dataMax,
                    options = this.options;
                return this.allowZoomOutside || (defined(dataMin) && newMin <= mathMin(dataMin, pick(options.min, dataMin)) && (newMin = UNDEFINED), defined(dataMax) && newMax >= mathMax(dataMax, pick(options.max, dataMax)) && (newMax = UNDEFINED)), this.displayBtn = newMin !== UNDEFINED || newMax !== UNDEFINED, this.setExtremes(newMin, newMax, !1, UNDEFINED, {
                    trigger: "zoom"
                }), !0
            },
            setAxisSize: function() {
                var chart = this.chart,
                    options = this.options,
                    offsetLeft = options.offsetLeft || 0,
                    offsetRight = options.offsetRight || 0,
                    horiz = this.horiz,
                    width = pick(options.width, chart.plotWidth - offsetLeft + offsetRight),
                    height = pick(options.height, chart.plotHeight),
                    top = pick(options.top, chart.plotTop),
                    left = pick(options.left, chart.plotLeft + offsetLeft),
                    percentRegex = /%$/;
                percentRegex.test(height) && (height = parseInt(height, 10) / 100 * chart.plotHeight), percentRegex.test(top) && (top = parseInt(top, 10) / 100 * chart.plotHeight + chart.plotTop), this.left = left, this.top = top, this.width = width, this.height = height, this.bottom = chart.chartHeight - height - top, this.right = chart.chartWidth - width - left, this.len = mathMax(horiz ? width : height, 0), this.pos = horiz ? left : top
            },
            getExtremes: function() {
                var axis = this,
                    isLog = axis.isLog;
                return {
                    min: isLog ? correctFloat(lin2log(axis.min)) : axis.min,
                    max: isLog ? correctFloat(lin2log(axis.max)) : axis.max,
                    dataMin: axis.dataMin,
                    dataMax: axis.dataMax,
                    userMin: axis.userMin,
                    userMax: axis.userMax
                }
            },
            getThreshold: function(threshold) {
                var axis = this,
                    isLog = axis.isLog,
                    realMin = isLog ? lin2log(axis.min) : axis.min,
                    realMax = isLog ? lin2log(axis.max) : axis.max;
                return realMin > threshold || null === threshold ? threshold = realMin : threshold > realMax && (threshold = realMax), axis.translate(threshold, 0, 1, 0, 1)
            },
            autoLabelAlign: function(rotation) {
                var ret, angle = (pick(rotation, 0) - 90 * this.side + 720) % 360;
                return ret = angle > 15 && 165 > angle ? "right" : angle > 195 && 345 > angle ? "left" : "center"
            },
            getOffset: function() {
                var hasData, showAxis, titleOffsetOption, labelOffsetPadded, n, i, sortedPositions, lastRight, overlap, pos, bBox, x, w, lineNo, lineHeightCorrection, axis = this,
                    chart = axis.chart,
                    renderer = chart.renderer,
                    options = axis.options,
                    tickPositions = axis.tickPositions,
                    ticks = axis.ticks,
                    horiz = axis.horiz,
                    side = axis.side,
                    invertedSide = chart.inverted ? [1, 0, 3, 2][side] : side,
                    titleOffset = 0,
                    titleMargin = 0,
                    axisTitleOptions = options.title,
                    labelOptions = options.labels,
                    labelOffset = 0,
                    axisOffset = chart.axisOffset,
                    clipOffset = chart.clipOffset,
                    directionFactor = [-1, 1, 1, -1][side],
                    autoStaggerLines = 1,
                    maxStaggerLines = pick(labelOptions.maxStaggerLines, 5);
                if (axis.hasData = hasData = axis.hasVisibleSeries || defined(axis.min) && defined(axis.max) && !!tickPositions, axis.showAxis = showAxis = hasData || pick(options.showEmpty, !0), axis.staggerLines = axis.horiz && labelOptions.staggerLines, axis.axisGroup || (axis.gridGroup = renderer.g("grid").attr({
                        zIndex: options.gridZIndex || 1
                    }).add(), axis.axisGroup = renderer.g("axis").attr({
                        zIndex: options.zIndex || 2
                    }).add(), axis.labelGroup = renderer.g("axis-labels").attr({
                        zIndex: labelOptions.zIndex || 7
                    }).addClass(PREFIX + axis.coll.toLowerCase() + "-labels").add()), hasData || axis.isLinked) {
                    if (axis.labelAlign = pick(labelOptions.align || axis.autoLabelAlign(labelOptions.rotation)), each(tickPositions, function(pos) {
                            ticks[pos] ? ticks[pos].addLabel() : ticks[pos] = new Tick(axis, pos)
                        }), axis.horiz && !axis.staggerLines && maxStaggerLines && !labelOptions.rotation) {
                        for (sortedPositions = axis.reversed ? [].concat(tickPositions).reverse() : tickPositions; maxStaggerLines > autoStaggerLines;) {
                            for (lastRight = [], overlap = !1, i = 0; i < sortedPositions.length; i++) pos = sortedPositions[i], bBox = ticks[pos].label && ticks[pos].label.getBBox(), w = bBox ? bBox.width : 0, lineNo = i % autoStaggerLines, w && (x = axis.translate(pos), lastRight[lineNo] !== UNDEFINED && x < lastRight[lineNo] && (overlap = !0), lastRight[lineNo] = x + w);
                            if (!overlap) break;
                            autoStaggerLines++
                        }
                        autoStaggerLines > 1 && (axis.staggerLines = autoStaggerLines)
                    }
                    each(tickPositions, function(pos) {
                        (0 === side || 2 === side || {
                            1: "left",
                            3: "right"
                        }[side] === axis.labelAlign) && (labelOffset = mathMax(ticks[pos].getLabelSize(), labelOffset))
                    }), axis.staggerLines && (labelOffset *= axis.staggerLines, axis.labelOffset = labelOffset)
                } else
                    for (n in ticks) ticks[n].destroy(), delete ticks[n];
                axisTitleOptions && axisTitleOptions.text && axisTitleOptions.enabled !== !1 && (axis.axisTitle || (axis.axisTitle = renderer.text(axisTitleOptions.text, 0, 0, axisTitleOptions.useHTML).attr({
                    zIndex: 7,
                    rotation: axisTitleOptions.rotation || 0,
                    align: axisTitleOptions.textAlign || {
                        low: "left",
                        middle: "center",
                        high: "right"
                    }[axisTitleOptions.align]
                }).addClass(PREFIX + this.coll.toLowerCase() + "-title").css(axisTitleOptions.style).add(axis.axisGroup), axis.axisTitle.isNew = !0), showAxis && (titleOffset = axis.axisTitle.getBBox()[horiz ? "height" : "width"], titleOffsetOption = axisTitleOptions.offset, titleMargin = defined(titleOffsetOption) ? 0 : pick(axisTitleOptions.margin, horiz ? 5 : 10)), axis.axisTitle[showAxis ? "show" : "hide"]()), axis.offset = directionFactor * pick(options.offset, axisOffset[side]), lineHeightCorrection = 2 === side ? axis.tickBaseline : 0, labelOffsetPadded = labelOffset + titleMargin + (labelOffset && directionFactor * (horiz ? pick(labelOptions.y, axis.tickBaseline + 8) : labelOptions.x) - lineHeightCorrection), axis.axisTitleMargin = pick(titleOffsetOption, labelOffsetPadded), axisOffset[side] = mathMax(axisOffset[side], axis.axisTitleMargin + titleOffset + directionFactor * axis.offset, labelOffsetPadded), clipOffset[invertedSide] = mathMax(clipOffset[invertedSide], 2 * mathFloor(options.lineWidth / 2))
            },
            getLinePath: function(lineWidth) {
                var chart = this.chart,
                    opposite = this.opposite,
                    offset = this.offset,
                    horiz = this.horiz,
                    lineLeft = this.left + (opposite ? this.width : 0) + offset,
                    lineTop = chart.chartHeight - this.bottom - (opposite ? this.height : 0) + offset;
                return opposite && (lineWidth *= -1), chart.renderer.crispLine([M, horiz ? this.left : lineLeft, horiz ? lineTop : this.top, L, horiz ? chart.chartWidth - this.right : lineLeft, horiz ? lineTop : chart.chartHeight - this.bottom], lineWidth)
            },
            getTitlePosition: function() {
                var horiz = this.horiz,
                    axisLeft = this.left,
                    axisTop = this.top,
                    axisLength = this.len,
                    axisTitleOptions = this.options.title,
                    margin = horiz ? axisLeft : axisTop,
                    opposite = this.opposite,
                    offset = this.offset,
                    fontSize = pInt(axisTitleOptions.style.fontSize || 12),
                    alongAxis = {
                        low: margin + (horiz ? 0 : axisLength),
                        middle: margin + axisLength / 2,
                        high: margin + (horiz ? axisLength : 0)
                    }[axisTitleOptions.align],
                    offAxis = (horiz ? axisTop + this.height : axisLeft) + (horiz ? 1 : -1) * (opposite ? -1 : 1) * this.axisTitleMargin + (2 === this.side ? fontSize : 0);
                return {
                    x: horiz ? alongAxis : offAxis + (opposite ? this.width : 0) + offset + (axisTitleOptions.x || 0),
                    y: horiz ? offAxis - (opposite ? this.height : 0) + offset : alongAxis + (axisTitleOptions.y || 0)
                }
            },
            render: function() {
                var sortedPositions, linePath, from, to, axis = this,
                    horiz = axis.horiz,
                    reversed = axis.reversed,
                    chart = axis.chart,
                    renderer = chart.renderer,
                    options = axis.options,
                    isLog = axis.isLog,
                    isLinked = axis.isLinked,
                    tickPositions = axis.tickPositions,
                    axisTitle = axis.axisTitle,
                    ticks = axis.ticks,
                    minorTicks = axis.minorTicks,
                    alternateBands = axis.alternateBands,
                    stackLabelOptions = options.stackLabels,
                    alternateGridColor = options.alternateGridColor,
                    tickmarkOffset = axis.tickmarkOffset,
                    lineWidth = options.lineWidth,
                    hasRendered = chart.hasRendered,
                    slideInTicks = hasRendered && defined(axis.oldMin) && !isNaN(axis.oldMin),
                    hasData = axis.hasData,
                    showAxis = axis.showAxis,
                    overflow = options.labels.overflow,
                    justifyLabels = axis.justifyLabels = horiz && overflow !== !1;
                axis.labelEdge.length = 0, axis.justifyToPlot = "justify" === overflow, each([ticks, minorTicks, alternateBands], function(coll) {
                    var pos;
                    for (pos in coll) coll[pos].isActive = !1
                }), (hasData || isLinked) && (axis.minorTickInterval && !axis.categories && each(axis.getMinorTickPositions(), function(pos) {
                    minorTicks[pos] || (minorTicks[pos] = new Tick(axis, pos, "minor")), slideInTicks && minorTicks[pos].isNew && minorTicks[pos].render(null, !0), minorTicks[pos].render(null, !1, 1)
                }), tickPositions.length && (sortedPositions = tickPositions.slice(), (horiz && reversed || !horiz && !reversed) && sortedPositions.reverse(), justifyLabels && (sortedPositions = sortedPositions.slice(1).concat([sortedPositions[0]])), each(sortedPositions, function(pos, i) {
                    justifyLabels && (i = i === sortedPositions.length - 1 ? 0 : i + 1), (!isLinked || pos >= axis.min && pos <= axis.max) && (ticks[pos] || (ticks[pos] = new Tick(axis, pos)), slideInTicks && ticks[pos].isNew && ticks[pos].render(i, !0, .1), ticks[pos].render(i))
                }), tickmarkOffset && 0 === axis.min && (ticks[-1] || (ticks[-1] = new Tick(axis, -1, null, !0)), ticks[-1].render(-1))), alternateGridColor && each(tickPositions, function(pos, i) {
                    i % 2 === 0 && pos < axis.max && (alternateBands[pos] || (alternateBands[pos] = new Highcharts.PlotLineOrBand(axis)), from = pos + tickmarkOffset, to = tickPositions[i + 1] !== UNDEFINED ? tickPositions[i + 1] + tickmarkOffset : axis.max, alternateBands[pos].options = {
                        from: isLog ? lin2log(from) : from,
                        to: isLog ? lin2log(to) : to,
                        color: alternateGridColor
                    }, alternateBands[pos].render(), alternateBands[pos].isActive = !0)
                }), axis._addedPlotLB || (each((options.plotLines || []).concat(options.plotBands || []), function(plotLineOptions) {
                    axis.addPlotBandOrLine(plotLineOptions)
                }), axis._addedPlotLB = !0)), each([ticks, minorTicks, alternateBands], function(coll) {
                    var pos, i, forDestruction = [],
                        delay = globalAnimation ? globalAnimation.duration || 500 : 0,
                        destroyInactiveItems = function() {
                            for (i = forDestruction.length; i--;) coll[forDestruction[i]] && !coll[forDestruction[i]].isActive && (coll[forDestruction[i]].destroy(), delete coll[forDestruction[i]])
                        };
                    for (pos in coll) coll[pos].isActive || (coll[pos].render(pos, !1, 0), coll[pos].isActive = !1, forDestruction.push(pos));
                    coll !== alternateBands && chart.hasRendered && delay ? delay && setTimeout(destroyInactiveItems, delay) : destroyInactiveItems()
                }), lineWidth && (linePath = axis.getLinePath(lineWidth), axis.axisLine ? axis.axisLine.animate({
                    d: linePath
                }) : axis.axisLine = renderer.path(linePath).attr({
                    stroke: options.lineColor,
                    "stroke-width": lineWidth,
                    zIndex: 7
                }).add(axis.axisGroup), axis.axisLine[showAxis ? "show" : "hide"]()), axisTitle && showAxis && (axisTitle[axisTitle.isNew ? "attr" : "animate"](axis.getTitlePosition()), axisTitle.isNew = !1), stackLabelOptions && stackLabelOptions.enabled && axis.renderStackTotals(), axis.isDirty = !1
            },
            redraw: function() {
                this.render(), each(this.plotLinesAndBands, function(plotLine) {
                    plotLine.render()
                }), each(this.series, function(series) {
                    series.isDirty = !0
                })
            },
            destroy: function(keepEvents) {
                var stackKey, i, axis = this,
                    stacks = axis.stacks,
                    plotLinesAndBands = axis.plotLinesAndBands;
                keepEvents || removeEvent(axis);
                for (stackKey in stacks) destroyObjectProperties(stacks[stackKey]), stacks[stackKey] = null;
                for (each([axis.ticks, axis.minorTicks, axis.alternateBands], function(coll) {
                        destroyObjectProperties(coll)
                    }), i = plotLinesAndBands.length; i--;) plotLinesAndBands[i].destroy();
                each(["stackTotalGroup", "axisLine", "axisTitle", "axisGroup", "cross", "gridGroup", "labelGroup"], function(prop) {
                    axis[prop] && (axis[prop] = axis[prop].destroy())
                }), this.cross && this.cross.destroy()
            },
            drawCrosshair: function(e, point) {
                if (this.crosshair) {
                    if ((defined(point) || !pick(this.crosshair.snap, !0)) === !1) return void this.hideCrosshair();
                    var path, pos, options = this.crosshair,
                        animation = options.animation;
                    if (pick(options.snap, !0) ? defined(point) && (pos = this.chart.inverted != this.horiz ? point.plotX : this.len - point.plotY) : pos = this.horiz ? e.chartX - this.pos : this.len - e.chartY + this.pos, path = this.isRadial ? this.getPlotLinePath(this.isXAxis ? point.x : pick(point.stackY, point.y)) : this.getPlotLinePath(null, null, null, null, pos), null === path) return void this.hideCrosshair();
                    if (this.cross) this.cross.attr({
                        visibility: VISIBLE
                    })[animation ? "animate" : "attr"]({
                        d: path
                    }, animation);
                    else {
                        var attribs = {
                            "stroke-width": options.width || 1,
                            stroke: options.color || "#C0C0C0",
                            zIndex: options.zIndex || 2
                        };
                        options.dashStyle && (attribs.dashstyle = options.dashStyle), this.cross = this.chart.renderer.path(path).attr(attribs).add()
                    }
                }
            },
            hideCrosshair: function() {
                this.cross && this.cross.hide()
            }
        }, extend(Axis.prototype, AxisPlotLineOrBandExtension), Axis.prototype.getTimeTicks = function(normalizedInterval, min, max, startOfWeek) {
            var i, minYear, tickPositions = [],
                higherRanks = {},
                useUTC = defaultOptions.global.useUTC,
                minDate = new Date(min - timezoneOffset),
                interval = normalizedInterval.unitRange,
                count = normalizedInterval.count;
            if (defined(min)) {
                interval >= timeUnits.second && (minDate.setMilliseconds(0), minDate.setSeconds(interval >= timeUnits.minute ? 0 : count * mathFloor(minDate.getSeconds() / count))), interval >= timeUnits.minute && minDate[setMinutes](interval >= timeUnits.hour ? 0 : count * mathFloor(minDate[getMinutes]() / count)), interval >= timeUnits.hour && minDate[setHours](interval >= timeUnits.day ? 0 : count * mathFloor(minDate[getHours]() / count)), interval >= timeUnits.day && minDate[setDate](interval >= timeUnits.month ? 1 : count * mathFloor(minDate[getDate]() / count)), interval >= timeUnits.month && (minDate[setMonth](interval >= timeUnits.year ? 0 : count * mathFloor(minDate[getMonth]() / count)), minYear = minDate[getFullYear]()), interval >= timeUnits.year && (minYear -= minYear % count, minDate[setFullYear](minYear)), interval === timeUnits.week && minDate[setDate](minDate[getDate]() - minDate[getDay]() + pick(startOfWeek, 1)), i = 1, timezoneOffset && (minDate = new Date(minDate.getTime() + timezoneOffset)), minYear = minDate[getFullYear]();
                for (var time = minDate.getTime(), minMonth = minDate[getMonth](), minDateDate = minDate[getDate](), localTimezoneOffset = useUTC ? timezoneOffset : (864e5 + 60 * minDate.getTimezoneOffset() * 1e3) % 864e5; max > time;) tickPositions.push(time), interval === timeUnits.year ? time = makeTime(minYear + i * count, 0) : interval === timeUnits.month ? time = makeTime(minYear, minMonth + i * count) : useUTC || interval !== timeUnits.day && interval !== timeUnits.week ? time += interval * count : time = makeTime(minYear, minMonth, minDateDate + i * count * (interval === timeUnits.day ? 1 : 7)), i++;
                tickPositions.push(time), each(grep(tickPositions, function(time) {
                    return interval <= timeUnits.hour && time % timeUnits.day === localTimezoneOffset
                }), function(time) {
                    higherRanks[time] = "day"
                })
            }
            return tickPositions.info = extend(normalizedInterval, {
                higherRanks: higherRanks,
                totalRange: interval * count
            }), tickPositions
        }, Axis.prototype.normalizeTimeTickInterval = function(tickInterval, unitsOption) {
            var count, i, units = unitsOption || [
                    ["millisecond", [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],
                    ["second", [1, 2, 5, 10, 15, 30]],
                    ["minute", [1, 2, 5, 10, 15, 30]],
                    ["hour", [1, 2, 3, 4, 6, 8, 12]],
                    ["day", [1, 2]],
                    ["week", [1, 2]],
                    ["month", [1, 2, 3, 4, 6]],
                    ["year", null]
                ],
                unit = units[units.length - 1],
                interval = timeUnits[unit[0]],
                multiples = unit[1];
            for (i = 0; i < units.length; i++)
                if (unit = units[i], interval = timeUnits[unit[0]], multiples = unit[1], units[i + 1]) {
                    var lessThan = (interval * multiples[multiples.length - 1] + timeUnits[units[i + 1][0]]) / 2;
                    if (lessThan >= tickInterval) break
                }
            return interval === timeUnits.year && 5 * interval > tickInterval && (multiples = [1, 2, 5]), count = normalizeTickInterval(tickInterval / interval, multiples, "year" === unit[0] ? mathMax(getMagnitude(tickInterval / interval), 1) : 1), {
                unitRange: interval,
                count: count,
                unitName: unit[0]
            }
        }, Axis.prototype.getLogTickPositions = function(interval, min, max, minor) {
            var axis = this,
                options = axis.options,
                axisLength = axis.len,
                positions = [];
            if (minor || (axis._minorAutoInterval = null), interval >= .5) interval = mathRound(interval), positions = axis.getLinearTickPositions(interval, min, max);
            else if (interval >= .08) {
                var intermediate, i, j, len, pos, lastPos, break2, roundedMin = mathFloor(min);
                for (intermediate = interval > .3 ? [1, 2, 4] : interval > .15 ? [1, 2, 4, 6, 8] : [1, 2, 3, 4, 5, 6, 7, 8, 9], i = roundedMin; max + 1 > i && !break2; i++)
                    for (len = intermediate.length, j = 0; len > j && !break2; j++) pos = log2lin(lin2log(i) * intermediate[j]), pos > min && (!minor || max >= lastPos) && lastPos !== UNDEFINED && positions.push(lastPos), lastPos > max && (break2 = !0), lastPos = pos
            } else {
                var realMin = lin2log(min),
                    realMax = lin2log(max),
                    tickIntervalOption = options[minor ? "minorTickInterval" : "tickInterval"],
                    filteredTickIntervalOption = "auto" === tickIntervalOption ? null : tickIntervalOption,
                    tickPixelIntervalOption = options.tickPixelInterval / (minor ? 5 : 1),
                    totalPixelLength = minor ? axisLength / axis.tickPositions.length : axisLength;
                interval = pick(filteredTickIntervalOption, axis._minorAutoInterval, (realMax - realMin) * tickPixelIntervalOption / (totalPixelLength || 1)), interval = normalizeTickInterval(interval, null, getMagnitude(interval)), positions = map(axis.getLinearTickPositions(interval, realMin, realMax), log2lin), minor || (axis._minorAutoInterval = interval / 5)
            }
            return minor || (axis.tickInterval = interval), positions
        };
        var Tooltip = Highcharts.Tooltip = function() {
            this.init.apply(this, arguments)
        };
        Tooltip.prototype = {
            init: function(chart, options) {
                var borderWidth = options.borderWidth,
                    style = options.style,
                    padding = pInt(style.padding);
                this.chart = chart, this.options = options, this.crosshairs = [], this.now = {
                    x: 0,
                    y: 0
                }, this.isHidden = !0, this.label = chart.renderer.label("", 0, 0, options.shape || "callout", null, null, options.useHTML, null, "tooltip").attr({
                    padding: padding,
                    fill: options.backgroundColor,
                    "stroke-width": borderWidth,
                    r: options.borderRadius,
                    zIndex: 8
                }).css(style).css({
                    padding: 0
                }).add().attr({
                    y: -9999
                }), useCanVG || this.label.shadow(options.shadow), this.shared = options.shared
            },
            destroy: function() {
                this.label && (this.label = this.label.destroy()), clearTimeout(this.hideTimer), clearTimeout(this.tooltipTimeout)
            },
            move: function(x, y, anchorX, anchorY) {
                var tooltip = this,
                    now = tooltip.now,
                    animate = tooltip.options.animation !== !1 && !tooltip.isHidden && (mathAbs(x - now.x) > 1 || mathAbs(y - now.y) > 1),
                    skipAnchor = tooltip.followPointer || tooltip.len > 1;
                extend(now, {
                    x: animate ? (2 * now.x + x) / 3 : x,
                    y: animate ? (now.y + y) / 2 : y,
                    anchorX: skipAnchor ? UNDEFINED : animate ? (2 * now.anchorX + anchorX) / 3 : anchorX,
                    anchorY: skipAnchor ? UNDEFINED : animate ? (now.anchorY + anchorY) / 2 : anchorY
                }), tooltip.label.attr(now), animate && (clearTimeout(this.tooltipTimeout), this.tooltipTimeout = setTimeout(function() {
                    tooltip && tooltip.move(x, y, anchorX, anchorY)
                }, 32))
            },
            hide: function() {
                var hoverPoints, tooltip = this;
                clearTimeout(this.hideTimer), this.isHidden || (hoverPoints = this.chart.hoverPoints, this.hideTimer = setTimeout(function() {
                    tooltip.label.fadeOut(), tooltip.isHidden = !0
                }, pick(this.options.hideDelay, 500)), hoverPoints && each(hoverPoints, function(point) {
                    point.setState()
                }), this.chart.hoverPoints = null)
            },
            getAnchor: function(points, mouseEvent) {
                var ret, yAxis, chart = this.chart,
                    inverted = chart.inverted,
                    plotTop = chart.plotTop,
                    plotX = 0,
                    plotY = 0;
                return points = splat(points), ret = points[0].tooltipPos, this.followPointer && mouseEvent && (mouseEvent.chartX === UNDEFINED && (mouseEvent = chart.pointer.normalize(mouseEvent)), ret = [mouseEvent.chartX - chart.plotLeft, mouseEvent.chartY - plotTop]), ret || (each(points, function(point) {
                    yAxis = point.series.yAxis, plotX += point.plotX, plotY += (point.plotLow ? (point.plotLow + point.plotHigh) / 2 : point.plotY) + (!inverted && yAxis ? yAxis.top - plotTop : 0)
                }), plotX /= points.length, plotY /= points.length, ret = [inverted ? chart.plotWidth - plotY : plotX, this.shared && !inverted && points.length > 1 && mouseEvent ? mouseEvent.chartY - plotTop : inverted ? chart.plotHeight - plotX : plotY]), map(ret, mathRound)
            },
            getPosition: function(boxWidth, boxHeight, point) {
                var swapped, chart = this.chart,
                    distance = this.distance,
                    ret = {},
                    first = ["y", chart.chartHeight, boxHeight, point.plotY + chart.plotTop],
                    second = ["x", chart.chartWidth, boxWidth, point.plotX + chart.plotLeft],
                    preferFarSide = point.ttBelow || chart.inverted && !point.negative || !chart.inverted && point.negative,
                    firstDimension = function(dim, outerSize, innerSize, point) {
                        var roomLeft = point - distance > innerSize,
                            roomRight = outerSize > point + distance + innerSize,
                            alignedLeft = point - distance - innerSize,
                            alignedRight = point + distance;
                        if (preferFarSide && roomRight) ret[dim] = alignedRight;
                        else if (!preferFarSide && roomLeft) ret[dim] = alignedLeft;
                        else if (roomLeft) ret[dim] = alignedLeft;
                        else {
                            if (!roomRight) return !1;
                            ret[dim] = alignedRight
                        }
                    },
                    secondDimension = function(dim, outerSize, innerSize, point) {
                        return distance > point || point > outerSize - distance ? !1 : void(ret[dim] = innerSize / 2 > point ? 1 : point > outerSize - innerSize / 2 ? outerSize - innerSize - 2 : point - innerSize / 2)
                    },
                    swap = function(count) {
                        var temp = first;
                        first = second, second = temp, swapped = count
                    },
                    run = function() {
                        firstDimension.apply(0, first) !== !1 ? secondDimension.apply(0, second) !== !1 || swapped || (swap(!0), run()) : swapped ? ret.x = ret.y = 0 : (swap(!0), run())
                    };
                return (chart.inverted || this.len > 1) && swap(), run(), ret
            },
            defaultFormatter: function(tooltip) {
                var s, items = this.points || splat(this),
                    series = items[0].series;
                return s = [tooltip.tooltipHeaderFormatter(items[0])], each(items, function(item) {
                    series = item.series, s.push(series.tooltipFormatter && series.tooltipFormatter(item) || item.point.tooltipFormatter(series.tooltipOptions.pointFormat))
                }), s.push(tooltip.options.footerFormat || ""), s.join("")
            },
            refresh: function(point, mouseEvent) {
                var x, y, anchor, text, borderColor, currentSeries, tooltip = this,
                    chart = tooltip.chart,
                    label = tooltip.label,
                    options = tooltip.options,
                    textConfig = {},
                    pointConfig = [],
                    formatter = options.formatter || tooltip.defaultFormatter,
                    hoverPoints = chart.hoverPoints,
                    shared = tooltip.shared;
                clearTimeout(this.hideTimer), tooltip.followPointer = splat(point)[0].series.tooltipOptions.followPointer, anchor = tooltip.getAnchor(point, mouseEvent), x = anchor[0], y = anchor[1], !shared || point.series && point.series.noSharedTooltip ? textConfig = point.getLabelConfig() : (chart.hoverPoints = point, hoverPoints && each(hoverPoints, function(point) {
                    point.setState()
                }), each(point, function(item) {
                    item.setState(HOVER_STATE), pointConfig.push(item.getLabelConfig())
                }), textConfig = {
                    x: point[0].category,
                    y: point[0].y
                }, textConfig.points = pointConfig, this.len = pointConfig.length, point = point[0]), text = formatter.call(textConfig, tooltip), currentSeries = point.series, this.distance = pick(currentSeries.tooltipOptions.distance, 16), text === !1 ? this.hide() : (tooltip.isHidden && (stop(label), label.attr("opacity", 1).show()), label.attr({
                    text: text
                }), borderColor = options.borderColor || point.color || currentSeries.color || "#606060", label.attr({
                    stroke: borderColor
                }), tooltip.updatePosition({
                    plotX: x,
                    plotY: y,
                    negative: point.negative,
                    ttBelow: point.ttBelow
                }), this.isHidden = !1), fireEvent(chart, "tooltipRefresh", {
                    text: text,
                    x: x + chart.plotLeft,
                    y: y + chart.plotTop,
                    borderColor: borderColor
                })
            },
            updatePosition: function(point) {
                var chart = this.chart,
                    label = this.label,
                    pos = (this.options.positioner || this.getPosition).call(this, label.width, label.height, point);
                this.move(mathRound(pos.x), mathRound(pos.y), point.plotX + chart.plotLeft, point.plotY + chart.plotTop)
            },
            tooltipHeaderFormatter: function(point) {
                var n, series = point.series,
                    tooltipOptions = series.tooltipOptions,
                    dateTimeLabelFormats = tooltipOptions.dateTimeLabelFormats,
                    xDateFormat = tooltipOptions.xDateFormat,
                    xAxis = series.xAxis,
                    isDateTime = xAxis && "datetime" === xAxis.options.type && isNumber(point.key),
                    headerFormat = tooltipOptions.headerFormat,
                    closestPointRange = xAxis && xAxis.closestPointRange;
                if (isDateTime && !xDateFormat) {
                    if (closestPointRange) {
                        for (n in timeUnits)
                            if (timeUnits[n] >= closestPointRange || timeUnits[n] <= timeUnits.day && point.key % timeUnits[n] > 0) {
                                xDateFormat = dateTimeLabelFormats[n];
                                break
                            }
                    } else xDateFormat = dateTimeLabelFormats.day;
                    xDateFormat = xDateFormat || dateTimeLabelFormats.year
                }
                return isDateTime && xDateFormat && (headerFormat = headerFormat.replace("{point.key}", "{point.key:" + xDateFormat + "}")), format(headerFormat, {
                    point: point,
                    series: series
                })
            }
        };
        var hoverChartIndex;
        hasTouch = doc.documentElement.ontouchstart !== UNDEFINED;
        var Pointer = Highcharts.Pointer = function(chart, options) {
            this.init(chart, options)
        };
        if (Pointer.prototype = {
                init: function(chart, options) {
                    var zoomX, zoomY, chartOptions = options.chart,
                        chartEvents = chartOptions.events,
                        zoomType = useCanVG ? "" : chartOptions.zoomType,
                        inverted = chart.inverted;
                    this.options = options, this.chart = chart, this.zoomX = zoomX = /x/.test(zoomType), this.zoomY = zoomY = /y/.test(zoomType), this.zoomHor = zoomX && !inverted || zoomY && inverted, this.zoomVert = zoomY && !inverted || zoomX && inverted, this.hasZoom = zoomX || zoomY, this.runChartClick = chartEvents && !!chartEvents.click, this.pinchDown = [], this.lastValidTouch = {}, Highcharts.Tooltip && options.tooltip.enabled && (chart.tooltip = new Tooltip(chart, options.tooltip), this.followTouchMove = options.tooltip.followTouchMove), this.setDOMEvents()
                },
                normalize: function(e, chartPosition) {
                    var chartX, chartY, ePos;
                    return e = e || window.event, e = washMouseEvent(e), e.target || (e.target = e.srcElement), ePos = e.touches ? e.touches.length ? e.touches.item(0) : e.changedTouches[0] : e, chartPosition || (this.chartPosition = chartPosition = offset(this.chart.container)), ePos.pageX === UNDEFINED ? (chartX = mathMax(e.x, e.clientX - chartPosition.left), chartY = e.y) : (chartX = ePos.pageX - chartPosition.left, chartY = ePos.pageY - chartPosition.top), extend(e, {
                        chartX: mathRound(chartX),
                        chartY: mathRound(chartY)
                    })
                },
                getCoordinates: function(e) {
                    var coordinates = {
                        xAxis: [],
                        yAxis: []
                    };
                    return each(this.chart.axes, function(axis) {
                        coordinates[axis.isXAxis ? "xAxis" : "yAxis"].push({
                            axis: axis,
                            value: axis.toValue(e[axis.horiz ? "chartX" : "chartY"])
                        })
                    }), coordinates
                },
                getIndex: function(e) {
                    var chart = this.chart;
                    return chart.inverted ? chart.plotHeight + chart.plotTop - e.chartY : e.chartX - chart.plotLeft
                },
                runPointActions: function(e) {
                    var followPointer, point, points, i, j, anchor, pointer = this,
                        chart = pointer.chart,
                        series = chart.series,
                        tooltip = chart.tooltip,
                        hoverPoint = chart.hoverPoint,
                        hoverSeries = chart.hoverSeries,
                        distance = chart.chartWidth,
                        index = pointer.getIndex(e);
                    if (tooltip && pointer.options.tooltip.shared && (!hoverSeries || !hoverSeries.noSharedTooltip)) {
                        for (points = [], i = series.length, j = 0; i > j; j++) series[j].visible && series[j].options.enableMouseTracking !== !1 && !series[j].noSharedTooltip && series[j].singularTooltips !== !0 && series[j].tooltipPoints.length && (point = series[j].tooltipPoints[index], point && point.series && (point._dist = mathAbs(index - point.clientX), distance = mathMin(distance, point._dist), points.push(point)));
                        for (i = points.length; i--;) points[i]._dist > distance && points.splice(i, 1);
                        points.length && points[0].clientX !== pointer.hoverX && (tooltip.refresh(points, e), pointer.hoverX = points[0].clientX)
                    }
                    followPointer = hoverSeries && hoverSeries.tooltipOptions.followPointer, hoverSeries && hoverSeries.tracker && !followPointer ? (point = hoverSeries.tooltipPoints[index], point && point !== hoverPoint && point.onMouseOver(e)) : tooltip && followPointer && !tooltip.isHidden && (anchor = tooltip.getAnchor([{}], e), tooltip.updatePosition({
                        plotX: anchor[0],
                        plotY: anchor[1]
                    })), tooltip && !pointer._onDocumentMouseMove && (pointer._onDocumentMouseMove = function(e) {
                        charts[hoverChartIndex] && charts[hoverChartIndex].pointer.onDocumentMouseMove(e)
                    }, addEvent(doc, "mousemove", pointer._onDocumentMouseMove)), each(chart.axes, function(axis) {
                        axis.drawCrosshair(e, pick(point, hoverPoint))
                    })
                },
                reset: function(allowMove) {
                    var pointer = this,
                        chart = pointer.chart,
                        hoverSeries = chart.hoverSeries,
                        hoverPoint = chart.hoverPoint,
                        tooltip = chart.tooltip,
                        tooltipPoints = tooltip && tooltip.shared ? chart.hoverPoints : hoverPoint;
                    allowMove = allowMove && tooltip && tooltipPoints, allowMove && splat(tooltipPoints)[0].plotX === UNDEFINED && (allowMove = !1), allowMove ? (tooltip.refresh(tooltipPoints), hoverPoint && hoverPoint.setState(hoverPoint.state, !0)) : (hoverPoint && hoverPoint.onMouseOut(), hoverSeries && hoverSeries.onMouseOut(), tooltip && tooltip.hide(), pointer._onDocumentMouseMove && (removeEvent(doc, "mousemove", pointer._onDocumentMouseMove), pointer._onDocumentMouseMove = null), each(chart.axes, function(axis) {
                        axis.hideCrosshair()
                    }), pointer.hoverX = null)
                },
                scaleGroups: function(attribs, clip) {
                    var seriesAttribs, chart = this.chart;
                    each(chart.series, function(series) {
                        seriesAttribs = attribs || series.getPlotBox(), series.xAxis && series.xAxis.zoomEnabled && (series.group.attr(seriesAttribs), series.markerGroup && (series.markerGroup.attr(seriesAttribs), series.markerGroup.clip(clip ? chart.clipRect : null)), series.dataLabelsGroup && series.dataLabelsGroup.attr(seriesAttribs))
                    }), chart.clipRect.attr(clip || chart.clipBox)
                },
                dragStart: function(e) {
                    var chart = this.chart;
                    chart.mouseIsDown = e.type, chart.cancelClick = !1, chart.mouseDownX = this.mouseDownX = e.chartX, chart.mouseDownY = this.mouseDownY = e.chartY
                },
                drag: function(e) {
                    var clickedInside, size, chart = this.chart,
                        chartOptions = chart.options.chart,
                        chartX = e.chartX,
                        chartY = e.chartY,
                        zoomHor = this.zoomHor,
                        zoomVert = this.zoomVert,
                        plotLeft = chart.plotLeft,
                        plotTop = chart.plotTop,
                        plotWidth = chart.plotWidth,
                        plotHeight = chart.plotHeight,
                        mouseDownX = this.mouseDownX,
                        mouseDownY = this.mouseDownY,
                        panKey = chartOptions.panKey && e[chartOptions.panKey + "Key"];
                    plotLeft > chartX ? chartX = plotLeft : chartX > plotLeft + plotWidth && (chartX = plotLeft + plotWidth), plotTop > chartY ? chartY = plotTop : chartY > plotTop + plotHeight && (chartY = plotTop + plotHeight), this.hasDragged = Math.sqrt(Math.pow(mouseDownX - chartX, 2) + Math.pow(mouseDownY - chartY, 2)), this.hasDragged > 10 && (clickedInside = chart.isInsidePlot(mouseDownX - plotLeft, mouseDownY - plotTop), chart.hasCartesianSeries && (this.zoomX || this.zoomY) && clickedInside && !panKey && (this.selectionMarker || (this.selectionMarker = chart.renderer.rect(plotLeft, plotTop, zoomHor ? 1 : plotWidth, zoomVert ? 1 : plotHeight, 0).attr({
                        fill: chartOptions.selectionMarkerFill || "rgba(69,114,167,0.25)",
                        zIndex: 7
                    }).add())), this.selectionMarker && zoomHor && (size = chartX - mouseDownX, this.selectionMarker.attr({
                        width: mathAbs(size),
                        x: (size > 0 ? 0 : size) + mouseDownX
                    })), this.selectionMarker && zoomVert && (size = chartY - mouseDownY, this.selectionMarker.attr({
                        height: mathAbs(size),
                        y: (size > 0 ? 0 : size) + mouseDownY
                    })), clickedInside && !this.selectionMarker && chartOptions.panning && chart.pan(e, chartOptions.panning))
                },
                drop: function(e) {
                    var chart = this.chart,
                        hasPinched = this.hasPinched;
                    if (this.selectionMarker) {
                        var runZoom, selectionData = {
                                xAxis: [],
                                yAxis: [],
                                originalEvent: e.originalEvent || e
                            },
                            selectionBox = this.selectionMarker,
                            selectionLeft = selectionBox.attr ? selectionBox.attr("x") : selectionBox.x,
                            selectionTop = selectionBox.attr ? selectionBox.attr("y") : selectionBox.y,
                            selectionWidth = selectionBox.attr ? selectionBox.attr("width") : selectionBox.width,
                            selectionHeight = selectionBox.attr ? selectionBox.attr("height") : selectionBox.height;
                        (this.hasDragged || hasPinched) && (each(chart.axes, function(axis) {
                            if (axis.zoomEnabled) {
                                var horiz = axis.horiz,
                                    minPixelPadding = "touchend" === e.type ? axis.minPixelPadding : 0,
                                    selectionMin = axis.toValue((horiz ? selectionLeft : selectionTop) + minPixelPadding),
                                    selectionMax = axis.toValue((horiz ? selectionLeft + selectionWidth : selectionTop + selectionHeight) - minPixelPadding);
                                isNaN(selectionMin) || isNaN(selectionMax) || (selectionData[axis.coll].push({
                                    axis: axis,
                                    min: mathMin(selectionMin, selectionMax),
                                    max: mathMax(selectionMin, selectionMax)
                                }), runZoom = !0)
                            }
                        }), runZoom && fireEvent(chart, "selection", selectionData, function(args) {
                            chart.zoom(extend(args, hasPinched ? {
                                animation: !1
                            } : null))
                        })), this.selectionMarker = this.selectionMarker.destroy(), hasPinched && this.scaleGroups()
                    }
                    chart && (css(chart.container, {
                        cursor: chart._cursor
                    }), chart.cancelClick = this.hasDragged > 10, chart.mouseIsDown = this.hasDragged = this.hasPinched = !1, this.pinchDown = [])
                },
                onContainerMouseDown: function(e) {
                    e = this.normalize(e), e.preventDefault && e.preventDefault(), this.dragStart(e)
                },
                onDocumentMouseUp: function(e) {
                    charts[hoverChartIndex] && charts[hoverChartIndex].pointer.drop(e)
                },
                onDocumentMouseMove: function(e) {
                    var chart = this.chart,
                        chartPosition = this.chartPosition,
                        hoverSeries = chart.hoverSeries;
                    e = this.normalize(e, chartPosition), chartPosition && hoverSeries && !this.inClass(e.target, "highcharts-tracker") && !chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop) && this.reset()
                },
                onContainerMouseLeave: function() {
                    var chart = charts[hoverChartIndex];
                    chart && (chart.pointer.reset(), chart.pointer.chartPosition = null)
                },
                onContainerMouseMove: function(e) {
                    var chart = this.chart;
                    hoverChartIndex = chart.index, e = this.normalize(e), e.returnValue = !1, "mousedown" === chart.mouseIsDown && this.drag(e), !this.inClass(e.target, "highcharts-tracker") && !chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop) || chart.openMenu || this.runPointActions(e)
                },
                inClass: function(element, className) {
                    for (var elemClassName; element;) {
                        if (elemClassName = attr(element, "class")) {
                            if (-1 !== elemClassName.indexOf(className)) return !0;
                            if (-1 !== elemClassName.indexOf(PREFIX + "container")) return !1
                        }
                        element = element.parentNode
                    }
                },
                onTrackerMouseOut: function(e) {
                    var series = this.chart.hoverSeries,
                        relatedTarget = e.relatedTarget || e.toElement,
                        relatedSeries = relatedTarget && relatedTarget.point && relatedTarget.point.series;
                    !series || series.options.stickyTracking || this.inClass(relatedTarget, PREFIX + "tooltip") || relatedSeries === series || series.onMouseOut()
                },
                onContainerClick: function(e) {
                    var chart = this.chart,
                        hoverPoint = chart.hoverPoint,
                        plotLeft = chart.plotLeft,
                        plotTop = chart.plotTop;
                    e = this.normalize(e), e.cancelBubble = !0, chart.cancelClick || (hoverPoint && this.inClass(e.target, PREFIX + "tracker") ? (fireEvent(hoverPoint.series, "click", extend(e, {
                        point: hoverPoint
                    })), chart.hoverPoint && hoverPoint.firePointEvent("click", e)) : (extend(e, this.getCoordinates(e)), chart.isInsidePlot(e.chartX - plotLeft, e.chartY - plotTop) && fireEvent(chart, "click", e)))
                },
                setDOMEvents: function() {
                    var pointer = this,
                        container = pointer.chart.container;
                    container.onmousedown = function(e) {
                        pointer.onContainerMouseDown(e)
                    }, container.onmousemove = function(e) {
                        pointer.onContainerMouseMove(e)
                    }, container.onclick = function(e) {
                        pointer.onContainerClick(e)
                    }, addEvent(container, "mouseleave", pointer.onContainerMouseLeave), 1 === chartCount && addEvent(doc, "mouseup", pointer.onDocumentMouseUp), hasTouch && (container.ontouchstart = function(e) {
                        pointer.onContainerTouchStart(e)
                    }, container.ontouchmove = function(e) {
                        pointer.onContainerTouchMove(e)
                    }, 1 === chartCount && addEvent(doc, "touchend", pointer.onDocumentTouchEnd))
                },
                destroy: function() {
                    var prop;
                    removeEvent(this.chart.container, "mouseleave", this.onContainerMouseLeave), chartCount || (removeEvent(doc, "mouseup", this.onDocumentMouseUp), removeEvent(doc, "touchend", this.onDocumentTouchEnd)), clearInterval(this.tooltipTimeout);
                    for (prop in this) this[prop] = null
                }
            }, extend(Highcharts.Pointer.prototype, {
                pinchTranslate: function(pinchDown, touches, transform, selectionMarker, clip, lastValidTouch) {
                    (this.zoomHor || this.pinchHor) && this.pinchTranslateDirection(!0, pinchDown, touches, transform, selectionMarker, clip, lastValidTouch), (this.zoomVert || this.pinchVert) && this.pinchTranslateDirection(!1, pinchDown, touches, transform, selectionMarker, clip, lastValidTouch)
                },
                pinchTranslateDirection: function(horiz, pinchDown, touches, transform, selectionMarker, clip, lastValidTouch, forcedScale) {
                    var selectionWH, selectionXY, clipXY, outOfBounds, transformScale, scaleKey, chart = this.chart,
                        xy = horiz ? "x" : "y",
                        XY = horiz ? "X" : "Y",
                        sChartXY = "chart" + XY,
                        wh = horiz ? "width" : "height",
                        plotLeftTop = chart["plot" + (horiz ? "Left" : "Top")],
                        scale = forcedScale || 1,
                        inverted = chart.inverted,
                        bounds = chart.bounds[horiz ? "h" : "v"],
                        singleTouch = 1 === pinchDown.length,
                        touch0Start = pinchDown[0][sChartXY],
                        touch0Now = touches[0][sChartXY],
                        touch1Start = !singleTouch && pinchDown[1][sChartXY],
                        touch1Now = !singleTouch && touches[1][sChartXY],
                        setScale = function() {
                            !singleTouch && mathAbs(touch0Start - touch1Start) > 20 && (scale = forcedScale || mathAbs(touch0Now - touch1Now) / mathAbs(touch0Start - touch1Start)), clipXY = (plotLeftTop - touch0Now) / scale + touch0Start, selectionWH = chart["plot" + (horiz ? "Width" : "Height")] / scale
                        };
                    setScale(), selectionXY = clipXY, selectionXY < bounds.min ? (selectionXY = bounds.min, outOfBounds = !0) : selectionXY + selectionWH > bounds.max && (selectionXY = bounds.max - selectionWH, outOfBounds = !0), outOfBounds ? (touch0Now -= .8 * (touch0Now - lastValidTouch[xy][0]), singleTouch || (touch1Now -= .8 * (touch1Now - lastValidTouch[xy][1])), setScale()) : lastValidTouch[xy] = [touch0Now, touch1Now], inverted || (clip[xy] = clipXY - plotLeftTop, clip[wh] = selectionWH), scaleKey = inverted ? horiz ? "scaleY" : "scaleX" : "scale" + XY, transformScale = inverted ? 1 / scale : scale, selectionMarker[wh] = selectionWH, selectionMarker[xy] = selectionXY, transform[scaleKey] = scale, transform["translate" + XY] = transformScale * plotLeftTop + (touch0Now - transformScale * touch0Start)
                },
                pinch: function(e) {
                    var self = this,
                        chart = self.chart,
                        pinchDown = self.pinchDown,
                        followTouchMove = self.followTouchMove,
                        touches = e.touches,
                        touchesLength = touches.length,
                        lastValidTouch = self.lastValidTouch,
                        hasZoom = self.hasZoom,
                        selectionMarker = self.selectionMarker,
                        transform = {},
                        fireClickEvent = 1 === touchesLength && (self.inClass(e.target, PREFIX + "tracker") && chart.runTrackerClick || chart.runChartClick),
                        clip = {};
                    !hasZoom && !followTouchMove || fireClickEvent || e.preventDefault(), map(touches, function(e) {
                        return self.normalize(e)
                    }), "touchstart" === e.type ? (each(touches, function(e, i) {
                        pinchDown[i] = {
                            chartX: e.chartX,
                            chartY: e.chartY
                        }
                    }), lastValidTouch.x = [pinchDown[0].chartX, pinchDown[1] && pinchDown[1].chartX], lastValidTouch.y = [pinchDown[0].chartY, pinchDown[1] && pinchDown[1].chartY], each(chart.axes, function(axis) {
                        if (axis.zoomEnabled) {
                            var bounds = chart.bounds[axis.horiz ? "h" : "v"],
                                minPixelPadding = axis.minPixelPadding,
                                min = axis.toPixels(pick(axis.options.min, axis.dataMin)),
                                max = axis.toPixels(pick(axis.options.max, axis.dataMax)),
                                absMin = mathMin(min, max),
                                absMax = mathMax(min, max);
                            bounds.min = mathMin(axis.pos, absMin - minPixelPadding), bounds.max = mathMax(axis.pos + axis.len, absMax + minPixelPadding)
                        }
                    })) : pinchDown.length && (selectionMarker || (self.selectionMarker = selectionMarker = extend({
                        destroy: noop
                    }, chart.plotBox)), self.pinchTranslate(pinchDown, touches, transform, selectionMarker, clip, lastValidTouch), self.hasPinched = hasZoom, self.scaleGroups(transform, clip), !hasZoom && followTouchMove && 1 === touchesLength && this.runPointActions(self.normalize(e)))
                },
                onContainerTouchStart: function(e) {
                    var chart = this.chart;
                    hoverChartIndex = chart.index, 1 === e.touches.length ? (e = this.normalize(e), chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop) ? (this.runPointActions(e), this.pinch(e)) : this.reset()) : 2 === e.touches.length && this.pinch(e)
                },
                onContainerTouchMove: function(e) {
                    (1 === e.touches.length || 2 === e.touches.length) && this.pinch(e)
                },
                onDocumentTouchEnd: function(e) {
                    charts[hoverChartIndex] && charts[hoverChartIndex].pointer.drop(e)
                }
            }), win.PointerEvent || win.MSPointerEvent) {
            var touches = {},
                hasPointerEvent = !!win.PointerEvent,
                getWebkitTouches = function() {
                    var key, fake = [];
                    fake.item = function(i) {
                        return this[i]
                    };
                    for (key in touches) touches.hasOwnProperty(key) && fake.push({
                        pageX: touches[key].pageX,
                        pageY: touches[key].pageY,
                        target: touches[key].target
                    });
                    return fake
                },
                translateMSPointer = function(e, method, wktype, callback) {
                    var p;
                    e = e.originalEvent || e, "touch" !== e.pointerType && e.pointerType !== e.MSPOINTER_TYPE_TOUCH || !charts[hoverChartIndex] || (callback(e), p = charts[hoverChartIndex].pointer, p[method]({
                        type: wktype,
                        target: e.currentTarget,
                        preventDefault: noop,
                        touches: getWebkitTouches()
                    }))
                };
            extend(Pointer.prototype, {
                onContainerPointerDown: function(e) {
                    translateMSPointer(e, "onContainerTouchStart", "touchstart", function(e) {
                        touches[e.pointerId] = {
                            pageX: e.pageX,
                            pageY: e.pageY,
                            target: e.currentTarget
                        }
                    })
                },
                onContainerPointerMove: function(e) {
                    translateMSPointer(e, "onContainerTouchMove", "touchmove", function(e) {
                        touches[e.pointerId] = {
                            pageX: e.pageX,
                            pageY: e.pageY
                        }, touches[e.pointerId].target || (touches[e.pointerId].target = e.currentTarget)
                    })
                },
                onDocumentPointerUp: function(e) {
                    translateMSPointer(e, "onContainerTouchEnd", "touchend", function(e) {
                        delete touches[e.pointerId]
                    })
                },
                batchMSEvents: function(fn) {
                    fn(this.chart.container, hasPointerEvent ? "pointerdown" : "MSPointerDown", this.onContainerPointerDown), fn(this.chart.container, hasPointerEvent ? "pointermove" : "MSPointerMove", this.onContainerPointerMove), fn(doc, hasPointerEvent ? "pointerup" : "MSPointerUp", this.onDocumentPointerUp)
                }
            }), wrap(Pointer.prototype, "init", function(proceed, chart, options) {
                proceed.call(this, chart, options), (this.hasZoom || this.followTouchMove) && css(chart.container, {
                    "-ms-touch-action": NONE,
                    "touch-action": NONE
                })
            }), wrap(Pointer.prototype, "setDOMEvents", function(proceed) {
                proceed.apply(this), (this.hasZoom || this.followTouchMove) && this.batchMSEvents(addEvent)
            }), wrap(Pointer.prototype, "destroy", function(proceed) {
                this.batchMSEvents(removeEvent), proceed.call(this)
            })
        }
        var Legend = Highcharts.Legend = function(chart, options) {
            this.init(chart, options)
        };
        Legend.prototype = {
            init: function(chart, options) {
                var legend = this,
                    itemStyle = options.itemStyle,
                    padding = pick(options.padding, 8),
                    itemMarginTop = options.itemMarginTop || 0;
                this.options = options, options.enabled && (legend.itemStyle = itemStyle, legend.itemHiddenStyle = merge(itemStyle, options.itemHiddenStyle), legend.itemMarginTop = itemMarginTop, legend.padding = padding, legend.initialItemX = padding, legend.initialItemY = padding - 5, legend.maxItemWidth = 0, legend.chart = chart, legend.itemHeight = 0, legend.lastLineHeight = 0, legend.symbolWidth = pick(options.symbolWidth, 16), legend.pages = [], legend.render(), addEvent(legend.chart, "endResize", function() {
                    legend.positionCheckboxes()
                }))
            },
            colorizeItem: function(item, visible) {
                var key, val, legend = this,
                    options = legend.options,
                    legendItem = item.legendItem,
                    legendLine = item.legendLine,
                    legendSymbol = item.legendSymbol,
                    hiddenColor = legend.itemHiddenStyle.color,
                    textColor = visible ? options.itemStyle.color : hiddenColor,
                    symbolColor = visible ? item.legendColor || item.color || "#CCC" : hiddenColor,
                    markerOptions = item.options && item.options.marker,
                    symbolAttr = {
                        fill: symbolColor
                    };
                if (legendItem && legendItem.css({
                        fill: textColor,
                        color: textColor
                    }), legendLine && legendLine.attr({
                        stroke: symbolColor
                    }), legendSymbol) {
                    if (markerOptions && legendSymbol.isMarker) {
                        symbolAttr.stroke = symbolColor, markerOptions = item.convertAttribs(markerOptions);
                        for (key in markerOptions) val = markerOptions[key], val !== UNDEFINED && (symbolAttr[key] = val)
                    }
                    legendSymbol.attr(symbolAttr)
                }
            },
            positionItem: function(item) {
                var legend = this,
                    options = legend.options,
                    symbolPadding = options.symbolPadding,
                    ltr = !options.rtl,
                    legendItemPos = item._legendItemPos,
                    itemX = legendItemPos[0],
                    itemY = legendItemPos[1],
                    checkbox = item.checkbox;
                item.legendGroup && item.legendGroup.translate(ltr ? itemX : legend.legendWidth - itemX - 2 * symbolPadding - 4, itemY), checkbox && (checkbox.x = itemX, checkbox.y = itemY)
            },
            destroyItem: function(item) {
                var checkbox = item.checkbox;
                each(["legendItem", "legendLine", "legendSymbol", "legendGroup"], function(key) {
                    item[key] && (item[key] = item[key].destroy())
                }), checkbox && discardElement(item.checkbox)
            },
            destroy: function() {
                var legend = this,
                    legendGroup = legend.group,
                    box = legend.box;
                box && (legend.box = box.destroy()), legendGroup && (legend.group = legendGroup.destroy())
            },
            positionCheckboxes: function(scrollOffset) {
                var translateY, alignAttr = this.group.alignAttr,
                    clipHeight = this.clipHeight || this.legendHeight;
                alignAttr && (translateY = alignAttr.translateY, each(this.allItems, function(item) {
                    var top, checkbox = item.checkbox;
                    checkbox && (top = translateY + checkbox.y + (scrollOffset || 0) + 3, css(checkbox, {
                        left: alignAttr.translateX + item.checkboxOffset + checkbox.x - 20 + PX,
                        top: top + PX,
                        display: top > translateY - 6 && translateY + clipHeight - 6 > top ? "" : NONE
                    }))
                }))
            },
            renderTitle: function() {
                var bBox, options = this.options,
                    padding = this.padding,
                    titleOptions = options.title,
                    titleHeight = 0;
                titleOptions.text && (this.title || (this.title = this.chart.renderer.label(titleOptions.text, padding - 3, padding - 4, null, null, null, null, null, "legend-title").attr({
                    zIndex: 1
                }).css(titleOptions.style).add(this.group)), bBox = this.title.getBBox(), titleHeight = bBox.height, this.offsetWidth = bBox.width, this.contentGroup.attr({
                    translateY: titleHeight
                })), this.titleHeight = titleHeight
            },
            renderItem: function(item) {
                var itemHeight, bBox, itemWidth, legend = this,
                    chart = legend.chart,
                    renderer = chart.renderer,
                    options = legend.options,
                    horizontal = "horizontal" === options.layout,
                    symbolWidth = legend.symbolWidth,
                    symbolPadding = options.symbolPadding,
                    itemStyle = legend.itemStyle,
                    itemHiddenStyle = legend.itemHiddenStyle,
                    padding = legend.padding,
                    itemDistance = horizontal ? pick(options.itemDistance, 20) : 0,
                    ltr = !options.rtl,
                    widthOption = options.width,
                    itemMarginBottom = options.itemMarginBottom || 0,
                    itemMarginTop = legend.itemMarginTop,
                    initialItemX = legend.initialItemX,
                    li = item.legendItem,
                    series = item.series && item.series.drawLegendSymbol ? item.series : item,
                    seriesOptions = series.options,
                    showCheckbox = legend.createCheckboxForItem && seriesOptions && seriesOptions.showCheckbox,
                    useHTML = options.useHTML;
                li || (item.legendGroup = renderer.g("legend-item").attr({
                    zIndex: 1
                }).add(legend.scrollGroup), item.legendItem = li = renderer.text(options.labelFormat ? format(options.labelFormat, item) : options.labelFormatter.call(item), ltr ? symbolWidth + symbolPadding : -symbolPadding, legend.baseline || 0, useHTML).css(merge(item.visible ? itemStyle : itemHiddenStyle)).attr({
                    align: ltr ? "left" : "right",
                    zIndex: 2
                }).add(item.legendGroup), legend.baseline || (legend.baseline = renderer.fontMetrics(itemStyle.fontSize, li).f + 3 + itemMarginTop, li.attr("y", legend.baseline)), series.drawLegendSymbol(legend, item), legend.setItemEvents && legend.setItemEvents(item, li, useHTML, itemStyle, itemHiddenStyle), legend.colorizeItem(item, item.visible), showCheckbox && legend.createCheckboxForItem(item)), bBox = li.getBBox(), itemWidth = item.checkboxOffset = options.itemWidth || item.legendItemWidth || symbolWidth + symbolPadding + bBox.width + itemDistance + (showCheckbox ? 20 : 0), legend.itemHeight = itemHeight = mathRound(item.legendItemHeight || bBox.height), horizontal && legend.itemX - initialItemX + itemWidth > (widthOption || chart.chartWidth - 2 * padding - initialItemX - options.x) && (legend.itemX = initialItemX, legend.itemY += itemMarginTop + legend.lastLineHeight + itemMarginBottom, legend.lastLineHeight = 0), legend.maxItemWidth = mathMax(legend.maxItemWidth, itemWidth), legend.lastItemY = itemMarginTop + legend.itemY + itemMarginBottom, legend.lastLineHeight = mathMax(itemHeight, legend.lastLineHeight), item._legendItemPos = [legend.itemX, legend.itemY], horizontal ? legend.itemX += itemWidth : (legend.itemY += itemMarginTop + itemHeight + itemMarginBottom, legend.lastLineHeight = itemHeight), legend.offsetWidth = widthOption || mathMax((horizontal ? legend.itemX - initialItemX - itemDistance : itemWidth) + padding, legend.offsetWidth)
            },
            getAllItems: function() {
                var allItems = [];
                return each(this.chart.series, function(series) {
                    var seriesOptions = series.options;
                    pick(seriesOptions.showInLegend, defined(seriesOptions.linkedTo) ? !1 : UNDEFINED, !0) && (allItems = allItems.concat(series.legendItems || ("point" === seriesOptions.legendType ? series.data : series)))
                }), allItems
            },
            render: function() {
                var allItems, display, legendWidth, legendHeight, legend = this,
                    chart = legend.chart,
                    renderer = chart.renderer,
                    legendGroup = legend.group,
                    box = legend.box,
                    options = legend.options,
                    padding = legend.padding,
                    legendBorderWidth = options.borderWidth,
                    legendBackgroundColor = options.backgroundColor;
                legend.itemX = legend.initialItemX, legend.itemY = legend.initialItemY, legend.offsetWidth = 0, legend.lastItemY = 0, legendGroup || (legend.group = legendGroup = renderer.g("legend").attr({
                    zIndex: 7
                }).add(), legend.contentGroup = renderer.g().attr({
                    zIndex: 1
                }).add(legendGroup), legend.scrollGroup = renderer.g().add(legend.contentGroup)), legend.renderTitle(), allItems = legend.getAllItems(), stableSort(allItems, function(a, b) {
                    return (a.options && a.options.legendIndex || 0) - (b.options && b.options.legendIndex || 0)
                }), options.reversed && allItems.reverse(), legend.allItems = allItems, legend.display = display = !!allItems.length, each(allItems, function(item) {
                    legend.renderItem(item)
                }), legendWidth = options.width || legend.offsetWidth, legendHeight = legend.lastItemY + legend.lastLineHeight + legend.titleHeight, legendHeight = legend.handleOverflow(legendHeight), (legendBorderWidth || legendBackgroundColor) && (legendWidth += padding, legendHeight += padding, box ? legendWidth > 0 && legendHeight > 0 && (box[box.isNew ? "attr" : "animate"](box.crisp({
                    width: legendWidth,
                    height: legendHeight
                })), box.isNew = !1) : (legend.box = box = renderer.rect(0, 0, legendWidth, legendHeight, options.borderRadius, legendBorderWidth || 0).attr({
                    stroke: options.borderColor,
                    "stroke-width": legendBorderWidth || 0,
                    fill: legendBackgroundColor || NONE
                }).add(legendGroup).shadow(options.shadow), box.isNew = !0), box[display ? "show" : "hide"]()), legend.legendWidth = legendWidth, legend.legendHeight = legendHeight, each(allItems, function(item) {
                    legend.positionItem(item)
                }), display && legendGroup.align(extend({
                    width: legendWidth,
                    height: legendHeight
                }, options), !0, "spacingBox"), chart.isResizing || this.positionCheckboxes()
            },
            handleOverflow: function(legendHeight) {
                var clipHeight, lastY, legend = this,
                    chart = this.chart,
                    renderer = chart.renderer,
                    options = this.options,
                    optionsY = options.y,
                    alignTop = "top" === options.verticalAlign,
                    spaceHeight = chart.spacingBox.height + (alignTop ? -optionsY : optionsY) - this.padding,
                    maxHeight = options.maxHeight,
                    clipRect = this.clipRect,
                    navOptions = options.navigation,
                    animation = pick(navOptions.animation, !0),
                    arrowSize = navOptions.arrowSize || 12,
                    nav = this.nav,
                    pages = this.pages,
                    allItems = this.allItems;
                return "horizontal" === options.layout && (spaceHeight /= 2), maxHeight && (spaceHeight = mathMin(spaceHeight, maxHeight)), pages.length = 0, legendHeight > spaceHeight && !options.useHTML ? (this.clipHeight = clipHeight = mathMax(spaceHeight - 20 - this.titleHeight - this.padding, 0), this.currentPage = pick(this.currentPage, 1), this.fullHeight = legendHeight, each(allItems, function(item, i) {
                    var y = item._legendItemPos[1],
                        h = mathRound(item.legendItem.getBBox().height),
                        len = pages.length;
                    (!len || y - pages[len - 1] > clipHeight && (lastY || y) !== pages[len - 1]) && (pages.push(lastY || y), len++), i === allItems.length - 1 && y + h - pages[len - 1] > clipHeight && pages.push(y), y !== lastY && (lastY = y)
                }), clipRect || (clipRect = legend.clipRect = renderer.clipRect(0, this.padding, 9999, 0), legend.contentGroup.clip(clipRect)), clipRect.attr({
                    height: clipHeight
                }), nav || (this.nav = nav = renderer.g().attr({
                    zIndex: 1
                }).add(this.group), this.up = renderer.symbol("triangle", 0, 0, arrowSize, arrowSize).on("click", function() {
                    legend.scroll(-1, animation)
                }).add(nav), this.pager = renderer.text("", 15, 10).css(navOptions.style).add(nav), this.down = renderer.symbol("triangle-down", 0, 0, arrowSize, arrowSize).on("click", function() {
                    legend.scroll(1, animation)
                }).add(nav)), legend.scroll(0), legendHeight = spaceHeight) : nav && (clipRect.attr({
                    height: chart.chartHeight
                }), nav.hide(), this.scrollGroup.attr({
                    translateY: 1
                }), this.clipHeight = 0), legendHeight
            },
            scroll: function(scrollBy, animation) {
                var scrollOffset, pages = this.pages,
                    pageCount = pages.length,
                    currentPage = this.currentPage + scrollBy,
                    clipHeight = this.clipHeight,
                    navOptions = this.options.navigation,
                    activeColor = navOptions.activeColor,
                    inactiveColor = navOptions.inactiveColor,
                    pager = this.pager,
                    padding = this.padding;
                currentPage > pageCount && (currentPage = pageCount), currentPage > 0 && (animation !== UNDEFINED && setAnimation(animation, this.chart), this.nav.attr({
                    translateX: padding,
                    translateY: clipHeight + this.padding + 7 + this.titleHeight,
                    visibility: VISIBLE
                }), this.up.attr({
                    fill: 1 === currentPage ? inactiveColor : activeColor
                }).css({
                    cursor: 1 === currentPage ? "default" : "pointer"
                }), pager.attr({
                    text: currentPage + "/" + pageCount
                }), this.down.attr({
                    x: 18 + this.pager.getBBox().width,
                    fill: currentPage === pageCount ? inactiveColor : activeColor
                }).css({
                    cursor: currentPage === pageCount ? "default" : "pointer"
                }), scrollOffset = -pages[currentPage - 1] + this.initialItemY, this.scrollGroup.animate({
                    translateY: scrollOffset
                }), this.currentPage = currentPage, this.positionCheckboxes(scrollOffset))
            }
        };
        var LegendSymbolMixin = Highcharts.LegendSymbolMixin = {
            drawRectangle: function(legend, item) {
                var symbolHeight = legend.options.symbolHeight || 12;
                item.legendSymbol = this.chart.renderer.rect(0, legend.baseline - 5 - symbolHeight / 2, legend.symbolWidth, symbolHeight, legend.options.symbolRadius || 0).attr({
                    zIndex: 3
                }).add(item.legendGroup)
            },
            drawLineMarker: function(legend) {
                var radius, legendSymbol, attr, options = this.options,
                    markerOptions = options.marker,
                    legendOptions = legend.options,
                    symbolWidth = legend.symbolWidth,
                    renderer = this.chart.renderer,
                    legendItemGroup = this.legendGroup,
                    verticalCenter = legend.baseline - mathRound(.3 * renderer.fontMetrics(legendOptions.itemStyle.fontSize, this.legendItem).b);
                options.lineWidth && (attr = {
                    "stroke-width": options.lineWidth
                }, options.dashStyle && (attr.dashstyle = options.dashStyle), this.legendLine = renderer.path([M, 0, verticalCenter, L, symbolWidth, verticalCenter]).attr(attr).add(legendItemGroup)), markerOptions && markerOptions.enabled !== !1 && (radius = markerOptions.radius, this.legendSymbol = legendSymbol = renderer.symbol(this.symbol, symbolWidth / 2 - radius, verticalCenter - radius, 2 * radius, 2 * radius).add(legendItemGroup), legendSymbol.isMarker = !0)
            }
        };
        (/Trident\/7\.0/.test(userAgent) || isFirefox) && wrap(Legend.prototype, "positionItem", function(proceed, item) {
            var legend = this,
                runPositionItem = function() {
                    item._legendItemPos && proceed.call(legend, item)
                };
            runPositionItem(), setTimeout(runPositionItem)
        }), Chart.prototype = {
            init: function(userOptions, callback) {
                var options, seriesOptions = userOptions.series;
                userOptions.series = null, options = merge(defaultOptions, userOptions), options.series = userOptions.series = seriesOptions, this.userOptions = userOptions;
                var optionsChart = options.chart;
                this.margin = this.splashArray("margin", optionsChart), this.spacing = this.splashArray("spacing", optionsChart);
                var chartEvents = optionsChart.events;
                this.bounds = {
                    h: {},
                    v: {}
                }, this.callback = callback, this.isResizing = 0, this.options = options, this.axes = [], this.series = [], this.hasCartesianSeries = optionsChart.showAxes;
                var eventType, chart = this;
                if (chart.index = charts.length, charts.push(chart), chartCount++, optionsChart.reflow !== !1 && addEvent(chart, "load", function() {
                        chart.initReflow()
                    }), chartEvents)
                    for (eventType in chartEvents) addEvent(chart, eventType, chartEvents[eventType]);
                chart.xAxis = [], chart.yAxis = [], chart.animation = useCanVG ? !1 : pick(optionsChart.animation, !0), chart.pointCount = chart.colorCounter = chart.symbolCounter = 0, chart.firstRender()
            },
            initSeries: function(options) {
                var series, chart = this,
                    optionsChart = chart.options.chart,
                    type = options.type || optionsChart.type || optionsChart.defaultSeriesType,
                    constr = seriesTypes[type];
                return constr || error(17, !0), series = new constr, series.init(this, options), series
            },
            isInsidePlot: function(plotX, plotY, inverted) {
                var x = inverted ? plotY : plotX,
                    y = inverted ? plotX : plotY;
                return x >= 0 && x <= this.plotWidth && y >= 0 && y <= this.plotHeight
            },
            adjustTickAmounts: function() {
                this.options.chart.alignTicks !== !1 && each(this.axes, function(axis) {
                    axis.adjustTickAmount()
                }), this.maxTicks = null
            },
            redraw: function(animation) {
                var hasStackedSeries, hasDirtyStacks, serie, chart = this,
                    axes = chart.axes,
                    series = chart.series,
                    pointer = chart.pointer,
                    legend = chart.legend,
                    redrawLegend = chart.isDirtyLegend,
                    hasCartesianSeries = chart.hasCartesianSeries,
                    isDirtyBox = chart.isDirtyBox,
                    seriesLength = series.length,
                    i = seriesLength,
                    renderer = chart.renderer,
                    isHiddenChart = renderer.isHidden(),
                    afterRedraw = [];
                for (setAnimation(animation, chart), isHiddenChart && chart.cloneRenderTo(), chart.layOutTitles(); i--;)
                    if (serie = series[i], serie.options.stacking && (hasStackedSeries = !0, serie.isDirty)) {
                        hasDirtyStacks = !0;
                        break
                    }
                if (hasDirtyStacks)
                    for (i = seriesLength; i--;) serie = series[i], serie.options.stacking && (serie.isDirty = !0);
                each(series, function(serie) {
                    serie.isDirty && "point" === serie.options.legendType && (redrawLegend = !0)
                }), redrawLegend && legend.options.enabled && (legend.render(), chart.isDirtyLegend = !1), hasStackedSeries && chart.getStacks(), hasCartesianSeries && (chart.isResizing || (chart.maxTicks = null, each(axes, function(axis) {
                    axis.setScale()
                })), chart.adjustTickAmounts()), chart.getMargins(), hasCartesianSeries && (each(axes, function(axis) {
                    axis.isDirty && (isDirtyBox = !0)
                }), each(axes, function(axis) {
                    axis.isDirtyExtremes && (axis.isDirtyExtremes = !1, afterRedraw.push(function() {
                        fireEvent(axis, "afterSetExtremes", extend(axis.eventArgs, axis.getExtremes())), delete axis.eventArgs
                    })), (isDirtyBox || hasStackedSeries) && axis.redraw()
                })), isDirtyBox && chart.drawChartBox(), each(series, function(serie) {
                    serie.isDirty && serie.visible && (!serie.isCartesian || serie.xAxis) && serie.redraw()
                }), pointer && pointer.reset(!0), renderer.draw(), fireEvent(chart, "redraw"), isHiddenChart && chart.cloneRenderTo(!0), each(afterRedraw, function(callback) {
                    callback.call()
                })
            },
            get: function(id) {
                var i, j, points, chart = this,
                    axes = chart.axes,
                    series = chart.series;
                for (i = 0; i < axes.length; i++)
                    if (axes[i].options.id === id) return axes[i];
                for (i = 0; i < series.length; i++)
                    if (series[i].options.id === id) return series[i];
                for (i = 0; i < series.length; i++)
                    for (points = series[i].points || [], j = 0; j < points.length; j++)
                        if (points[j].id === id) return points[j];
                return null
            },
            getAxes: function() {
                var optionsArray, axis, chart = this,
                    options = this.options,
                    xAxisOptions = options.xAxis = splat(options.xAxis || {}),
                    yAxisOptions = options.yAxis = splat(options.yAxis || {});
                each(xAxisOptions, function(axis, i) {
                    axis.index = i, axis.isX = !0
                }), each(yAxisOptions, function(axis, i) {
                    axis.index = i
                }), optionsArray = xAxisOptions.concat(yAxisOptions), each(optionsArray, function(axisOptions) {
                    axis = new Axis(chart, axisOptions)
                }), chart.adjustTickAmounts()
            },
            getSelectedPoints: function() {
                var points = [];
                return each(this.series, function(serie) {
                    points = points.concat(grep(serie.points || [], function(point) {
                        return point.selected
                    }))
                }), points
            },
            getSelectedSeries: function() {
                return grep(this.series, function(serie) {
                    return serie.selected
                })
            },
            getStacks: function() {
                var chart = this;
                each(chart.yAxis, function(axis) {
                    axis.stacks && axis.hasVisibleSeries && (axis.oldStacks = axis.stacks)
                }), each(chart.series, function(series) {
                    !series.options.stacking || series.visible !== !0 && chart.options.chart.ignoreHiddenSeries !== !1 || (series.stackKey = series.type + pick(series.options.stack, ""))
                })
            },
            setTitle: function(titleOptions, subtitleOptions, redraw) {
                var chartTitleOptions, chartSubtitleOptions, chart = this,
                    options = chart.options;
                chartTitleOptions = options.title = merge(options.title, titleOptions), chartSubtitleOptions = options.subtitle = merge(options.subtitle, subtitleOptions), each([
                    ["title", titleOptions, chartTitleOptions],
                    ["subtitle", subtitleOptions, chartSubtitleOptions]
                ], function(arr) {
                    var name = arr[0],
                        title = chart[name],
                        titleOptions = arr[1],
                        chartTitleOptions = arr[2];
                    title && titleOptions && (chart[name] = title = title.destroy()), chartTitleOptions && chartTitleOptions.text && !title && (chart[name] = chart.renderer.text(chartTitleOptions.text, 0, 0, chartTitleOptions.useHTML).attr({
                        align: chartTitleOptions.align,
                        "class": PREFIX + name,
                        zIndex: chartTitleOptions.zIndex || 4
                    }).css(chartTitleOptions.style).add())
                }), chart.layOutTitles(redraw)
            },
            layOutTitles: function(redraw) {
                var requiresDirtyBox, titleOffset = 0,
                    title = this.title,
                    subtitle = this.subtitle,
                    options = this.options,
                    titleOptions = options.title,
                    subtitleOptions = options.subtitle,
                    renderer = this.renderer,
                    autoWidth = this.spacingBox.width - 44;
                title && (title.css({
                    width: (titleOptions.width || autoWidth) + PX
                }).align(extend({
                    y: renderer.fontMetrics(titleOptions.style.fontSize, title).b - 3
                }, titleOptions), !1, "spacingBox"), titleOptions.floating || titleOptions.verticalAlign || (titleOffset = title.getBBox().height)), subtitle && (subtitle.css({
                    width: (subtitleOptions.width || autoWidth) + PX
                }).align(extend({
                    y: titleOffset + (titleOptions.margin - 13) + renderer.fontMetrics(titleOptions.style.fontSize, subtitle).b
                }, subtitleOptions), !1, "spacingBox"), subtitleOptions.floating || subtitleOptions.verticalAlign || (titleOffset = mathCeil(titleOffset + subtitle.getBBox().height))), requiresDirtyBox = this.titleOffset !== titleOffset, this.titleOffset = titleOffset, !this.isDirtyBox && requiresDirtyBox && (this.isDirtyBox = requiresDirtyBox, this.hasRendered && pick(redraw, !0) && this.isDirtyBox && this.redraw())
            },
            getChartSize: function() {
                var chart = this,
                    optionsChart = chart.options.chart,
                    widthOption = optionsChart.width,
                    heightOption = optionsChart.height,
                    renderTo = chart.renderToClone || chart.renderTo;
                defined(widthOption) || (chart.containerWidth = adapterRun(renderTo, "width")), defined(heightOption) || (chart.containerHeight = adapterRun(renderTo, "height")), chart.chartWidth = mathMax(0, widthOption || chart.containerWidth || 600), chart.chartHeight = mathMax(0, pick(heightOption, chart.containerHeight > 19 ? chart.containerHeight : 400))
            },
            cloneRenderTo: function(revert) {
                var clone = this.renderToClone,
                    container = this.container;
                revert ? clone && (this.renderTo.appendChild(container), discardElement(clone), delete this.renderToClone) : (container && container.parentNode === this.renderTo && this.renderTo.removeChild(container), this.renderToClone = clone = this.renderTo.cloneNode(0), css(clone, {
                    position: ABSOLUTE,
                    top: "-9999px",
                    display: "block"
                }), clone.style.setProperty && clone.style.setProperty("display", "block", "important"), doc.body.appendChild(clone), container && clone.appendChild(container))
            },
            getContainer: function() {
                var container, chartWidth, chartHeight, renderTo, oldChartIndex, containerId, chart = this,
                    optionsChart = chart.options.chart,
                    indexAttrName = "data-highcharts-chart";
                chart.renderTo = renderTo = optionsChart.renderTo, containerId = PREFIX + idCounter++, isString(renderTo) && (chart.renderTo = renderTo = doc.getElementById(renderTo)), renderTo || error(13, !0), oldChartIndex = pInt(attr(renderTo, indexAttrName)), !isNaN(oldChartIndex) && charts[oldChartIndex] && charts[oldChartIndex].hasRendered && charts[oldChartIndex].destroy(), attr(renderTo, indexAttrName, chart.index), renderTo.innerHTML = "", optionsChart.skipClone || renderTo.offsetWidth || chart.cloneRenderTo(), chart.getChartSize(), chartWidth = chart.chartWidth, chartHeight = chart.chartHeight, chart.container = container = createElement(DIV, {
                    className: PREFIX + "container" + (optionsChart.className ? " " + optionsChart.className : ""),
                    id: containerId
                }, extend({
                    position: RELATIVE,
                    overflow: HIDDEN,
                    width: chartWidth + PX,
                    height: chartHeight + PX,
                    textAlign: "left",
                    lineHeight: "normal",
                    zIndex: 0,
                    "-webkit-tap-highlight-color": "rgba(0,0,0,0)"
                }, optionsChart.style), chart.renderToClone || renderTo), chart._cursor = container.style.cursor, chart.renderer = optionsChart.forExport ? new SVGRenderer(container, chartWidth, chartHeight, optionsChart.style, !0) : new Renderer(container, chartWidth, chartHeight, optionsChart.style), useCanVG && chart.renderer.create(chart, container, chartWidth, chartHeight)
            },
            getMargins: function() {
                var axisOffset, chart = this,
                    spacing = chart.spacing,
                    legend = chart.legend,
                    margin = chart.margin,
                    legendOptions = chart.options.legend,
                    legendMargin = pick(legendOptions.margin, 20),
                    legendX = legendOptions.x,
                    legendY = legendOptions.y,
                    align = legendOptions.align,
                    verticalAlign = legendOptions.verticalAlign,
                    titleOffset = chart.titleOffset;
                chart.resetMargins(), axisOffset = chart.axisOffset, titleOffset && !defined(margin[0]) && (chart.plotTop = mathMax(chart.plotTop, titleOffset + chart.options.title.margin + spacing[0])), legend.display && !legendOptions.floating && ("right" === align ? defined(margin[1]) || (chart.marginRight = mathMax(chart.marginRight, legend.legendWidth - legendX + legendMargin + spacing[1])) : "left" === align ? defined(margin[3]) || (chart.plotLeft = mathMax(chart.plotLeft, legend.legendWidth + legendX + legendMargin + spacing[3])) : "top" === verticalAlign ? defined(margin[0]) || (chart.plotTop = mathMax(chart.plotTop, legend.legendHeight + legendY + legendMargin + spacing[0])) : "bottom" === verticalAlign && (defined(margin[2]) || (chart.marginBottom = mathMax(chart.marginBottom, legend.legendHeight - legendY + legendMargin + spacing[2])))), chart.extraBottomMargin && (chart.marginBottom += chart.extraBottomMargin), chart.extraTopMargin && (chart.plotTop += chart.extraTopMargin), chart.hasCartesianSeries && each(chart.axes, function(axis) {
                    axis.getOffset()
                }), defined(margin[3]) || (chart.plotLeft += axisOffset[3]), defined(margin[0]) || (chart.plotTop += axisOffset[0]), defined(margin[2]) || (chart.marginBottom += axisOffset[2]), defined(margin[1]) || (chart.marginRight += axisOffset[1]), chart.setChartSize()
            },
            reflow: function(e) {
                var chart = this,
                    optionsChart = chart.options.chart,
                    renderTo = chart.renderTo,
                    width = optionsChart.width || adapterRun(renderTo, "width"),
                    height = optionsChart.height || adapterRun(renderTo, "height"),
                    target = e ? e.target : win,
                    doReflow = function() {
                        chart.container && (chart.setSize(width, height, !1), chart.hasUserSize = null)
                    };
                chart.hasUserSize || !width || !height || target !== win && target !== doc || ((width !== chart.containerWidth || height !== chart.containerHeight) && (clearTimeout(chart.reflowTimeout), e ? chart.reflowTimeout = setTimeout(doReflow, 100) : doReflow()), chart.containerWidth = width, chart.containerHeight = height)
            },
            initReflow: function() {
                var chart = this,
                    reflow = function(e) {
                        chart.reflow(e)
                    };
                addEvent(win, "resize", reflow), addEvent(chart, "destroy", function() {
                    removeEvent(win, "resize", reflow)
                })
            },
            setSize: function(width, height, animation) {
                var chartWidth, chartHeight, fireEndResize, chart = this;
                chart.isResizing += 1, fireEndResize = function() {
                    chart && fireEvent(chart, "endResize", null, function() {
                        chart.isResizing -= 1
                    })
                }, setAnimation(animation, chart), chart.oldChartHeight = chart.chartHeight, chart.oldChartWidth = chart.chartWidth, defined(width) && (chart.chartWidth = chartWidth = mathMax(0, mathRound(width)), chart.hasUserSize = !!chartWidth), defined(height) && (chart.chartHeight = chartHeight = mathMax(0, mathRound(height))), (globalAnimation ? animate : css)(chart.container, {
                    width: chartWidth + PX,
                    height: chartHeight + PX
                }, globalAnimation), chart.setChartSize(!0), chart.renderer.setSize(chartWidth, chartHeight, animation), chart.maxTicks = null, each(chart.axes, function(axis) {
                    axis.isDirty = !0, axis.setScale()
                }), each(chart.series, function(serie) {
                    serie.isDirty = !0
                }), chart.isDirtyLegend = !0, chart.isDirtyBox = !0, chart.layOutTitles(), chart.getMargins(), chart.redraw(animation), chart.oldChartHeight = null, fireEvent(chart, "resize"), globalAnimation === !1 ? fireEndResize() : setTimeout(fireEndResize, globalAnimation && globalAnimation.duration || 500)
            },
            setChartSize: function(skipAxes) {
                var clipX, clipY, plotLeft, plotTop, plotWidth, plotHeight, plotBorderWidth, chart = this,
                    inverted = chart.inverted,
                    renderer = chart.renderer,
                    chartWidth = chart.chartWidth,
                    chartHeight = chart.chartHeight,
                    optionsChart = chart.options.chart,
                    spacing = chart.spacing,
                    clipOffset = chart.clipOffset;
                chart.plotLeft = plotLeft = mathRound(chart.plotLeft), chart.plotTop = plotTop = mathRound(chart.plotTop), chart.plotWidth = plotWidth = mathMax(0, mathRound(chartWidth - plotLeft - chart.marginRight)), chart.plotHeight = plotHeight = mathMax(0, mathRound(chartHeight - plotTop - chart.marginBottom)), chart.plotSizeX = inverted ? plotHeight : plotWidth, chart.plotSizeY = inverted ? plotWidth : plotHeight, chart.plotBorderWidth = optionsChart.plotBorderWidth || 0, chart.spacingBox = renderer.spacingBox = {
                    x: spacing[3],
                    y: spacing[0],
                    width: chartWidth - spacing[3] - spacing[1],
                    height: chartHeight - spacing[0] - spacing[2]
                }, chart.plotBox = renderer.plotBox = {
                    x: plotLeft,
                    y: plotTop,
                    width: plotWidth,
                    height: plotHeight
                }, plotBorderWidth = 2 * mathFloor(chart.plotBorderWidth / 2), clipX = mathCeil(mathMax(plotBorderWidth, clipOffset[3]) / 2), clipY = mathCeil(mathMax(plotBorderWidth, clipOffset[0]) / 2), chart.clipBox = {
                    x: clipX,
                    y: clipY,
                    width: mathFloor(chart.plotSizeX - mathMax(plotBorderWidth, clipOffset[1]) / 2 - clipX),
                    height: mathMax(0, mathFloor(chart.plotSizeY - mathMax(plotBorderWidth, clipOffset[2]) / 2 - clipY))
                }, skipAxes || each(chart.axes, function(axis) {
                    axis.setAxisSize(), axis.setAxisTranslation()
                })
            },
            resetMargins: function() {
                var chart = this,
                    spacing = chart.spacing,
                    margin = chart.margin;
                chart.plotTop = pick(margin[0], spacing[0]), chart.marginRight = pick(margin[1], spacing[1]), chart.marginBottom = pick(margin[2], spacing[2]), chart.plotLeft = pick(margin[3], spacing[3]), chart.axisOffset = [0, 0, 0, 0], chart.clipOffset = [0, 0, 0, 0]
            },
            drawChartBox: function() {
                var mgn, bgAttr, chart = this,
                    optionsChart = chart.options.chart,
                    renderer = chart.renderer,
                    chartWidth = chart.chartWidth,
                    chartHeight = chart.chartHeight,
                    chartBackground = chart.chartBackground,
                    plotBackground = chart.plotBackground,
                    plotBorder = chart.plotBorder,
                    plotBGImage = chart.plotBGImage,
                    chartBorderWidth = optionsChart.borderWidth || 0,
                    chartBackgroundColor = optionsChart.backgroundColor,
                    plotBackgroundColor = optionsChart.plotBackgroundColor,
                    plotBackgroundImage = optionsChart.plotBackgroundImage,
                    plotBorderWidth = optionsChart.plotBorderWidth || 0,
                    plotLeft = chart.plotLeft,
                    plotTop = chart.plotTop,
                    plotWidth = chart.plotWidth,
                    plotHeight = chart.plotHeight,
                    plotBox = chart.plotBox,
                    clipRect = chart.clipRect,
                    clipBox = chart.clipBox;
                mgn = chartBorderWidth + (optionsChart.shadow ? 8 : 0), (chartBorderWidth || chartBackgroundColor) && (chartBackground ? chartBackground.animate(chartBackground.crisp({
                    width: chartWidth - mgn,
                    height: chartHeight - mgn
                })) : (bgAttr = {
                    fill: chartBackgroundColor || NONE
                }, chartBorderWidth && (bgAttr.stroke = optionsChart.borderColor, bgAttr["stroke-width"] = chartBorderWidth), chart.chartBackground = renderer.rect(mgn / 2, mgn / 2, chartWidth - mgn, chartHeight - mgn, optionsChart.borderRadius, chartBorderWidth).attr(bgAttr).addClass(PREFIX + "background").add().shadow(optionsChart.shadow))), plotBackgroundColor && (plotBackground ? plotBackground.animate(plotBox) : chart.plotBackground = renderer.rect(plotLeft, plotTop, plotWidth, plotHeight, 0).attr({
                    fill: plotBackgroundColor
                }).add().shadow(optionsChart.plotShadow)), plotBackgroundImage && (plotBGImage ? plotBGImage.animate(plotBox) : chart.plotBGImage = renderer.image(plotBackgroundImage, plotLeft, plotTop, plotWidth, plotHeight).add()), clipRect ? clipRect.animate({
                    width: clipBox.width,
                    height: clipBox.height
                }) : chart.clipRect = renderer.clipRect(clipBox), plotBorderWidth && (plotBorder ? plotBorder.animate(plotBorder.crisp({
                    x: plotLeft,
                    y: plotTop,
                    width: plotWidth,
                    height: plotHeight
                })) : chart.plotBorder = renderer.rect(plotLeft, plotTop, plotWidth, plotHeight, 0, -plotBorderWidth).attr({
                    stroke: optionsChart.plotBorderColor,
                    "stroke-width": plotBorderWidth,
                    fill: NONE,
                    zIndex: 1
                }).add()), chart.isDirtyBox = !1
            },
            propFromSeries: function() {
                var klass, i, value, chart = this,
                    optionsChart = chart.options.chart,
                    seriesOptions = chart.options.series;
                each(["inverted", "angular", "polar"], function(key) {
                    for (klass = seriesTypes[optionsChart.type || optionsChart.defaultSeriesType], value = chart[key] || optionsChart[key] || klass && klass.prototype[key], i = seriesOptions && seriesOptions.length; !value && i--;) klass = seriesTypes[seriesOptions[i].type], klass && klass.prototype[key] && (value = !0);
                    chart[key] = value
                })
            },
            linkSeries: function() {
                var chart = this,
                    chartSeries = chart.series;
                each(chartSeries, function(series) {
                    series.linkedSeries.length = 0
                }), each(chartSeries, function(series) {
                    var linkedTo = series.options.linkedTo;
                    isString(linkedTo) && (linkedTo = ":previous" === linkedTo ? chart.series[series.index - 1] : chart.get(linkedTo), linkedTo && (linkedTo.linkedSeries.push(series), series.linkedParent = linkedTo))
                })
            },
            renderSeries: function() {
                each(this.series, function(serie) {
                    serie.translate(), serie.setTooltipPoints && serie.setTooltipPoints(), serie.render()
                })
            },
            renderLabels: function() {
                var chart = this,
                    labels = chart.options.labels;
                labels.items && each(labels.items, function(label) {
                    var style = extend(labels.style, label.style),
                        x = pInt(style.left) + chart.plotLeft,
                        y = pInt(style.top) + chart.plotTop + 12;
                    delete style.left, delete style.top, chart.renderer.text(label.html, x, y).attr({
                        zIndex: 2
                    }).css(style).add()
                })
            },
            render: function() {
                var chart = this,
                    axes = chart.axes,
                    renderer = chart.renderer,
                    options = chart.options;
                chart.setTitle(), chart.legend = new Legend(chart, options.legend), chart.getStacks(), each(axes, function(axis) {
                    axis.setScale()
                }), chart.getMargins(), chart.maxTicks = null, each(axes, function(axis) {
                    axis.setTickPositions(!0), axis.setMaxTicks()
                }), chart.adjustTickAmounts(), chart.getMargins(), chart.drawChartBox(), chart.hasCartesianSeries && each(axes, function(axis) {
                    axis.render()
                }), chart.seriesGroup || (chart.seriesGroup = renderer.g("series-group").attr({
                    zIndex: 3
                }).add()), chart.renderSeries(), chart.renderLabels(), chart.showCredits(options.credits), chart.hasRendered = !0
            },
            showCredits: function(credits) {
                credits.enabled && !this.credits && (this.credits = this.renderer.text(credits.text, 0, 0).on("click", function() {
                    credits.href && (location.href = credits.href)
                }).attr({
                    align: credits.position.align,
                    zIndex: 8
                }).css(credits.style).add().align(credits.position))
            },
            destroy: function() {
                var i, chart = this,
                    axes = chart.axes,
                    series = chart.series,
                    container = chart.container,
                    parentNode = container && container.parentNode;
                for (fireEvent(chart, "destroy"), charts[chart.index] = UNDEFINED, chartCount--, chart.renderTo.removeAttribute("data-highcharts-chart"), removeEvent(chart), i = axes.length; i--;) axes[i] = axes[i].destroy();
                for (i = series.length; i--;) series[i] = series[i].destroy();
                each(["title", "subtitle", "chartBackground", "plotBackground", "plotBGImage", "plotBorder", "seriesGroup", "clipRect", "credits", "pointer", "scroller", "rangeSelector", "legend", "resetZoomButton", "tooltip", "renderer"], function(name) {
                    var prop = chart[name];
                    prop && prop.destroy && (chart[name] = prop.destroy())
                }), container && (container.innerHTML = "", removeEvent(container), parentNode && discardElement(container));
                for (i in chart) delete chart[i]
            },
            isReadyToRender: function() {
                var chart = this;
                return !hasSVG && win == win.top && "complete" !== doc.readyState || useCanVG && !win.canvg ? (useCanVG ? CanVGController.push(function() {
                    chart.firstRender()
                }, chart.options.global.canvasToolsURL) : doc.attachEvent("onreadystatechange", function() {
                    doc.detachEvent("onreadystatechange", chart.firstRender), "complete" === doc.readyState && chart.firstRender()
                }), !1) : !0
            },
            firstRender: function() {
                var chart = this,
                    options = chart.options,
                    callback = chart.callback;
                chart.isReadyToRender() && (chart.getContainer(), fireEvent(chart, "init"), chart.resetMargins(), chart.setChartSize(), chart.propFromSeries(), chart.getAxes(), each(options.series || [], function(serieOptions) {
                    chart.initSeries(serieOptions)
                }), chart.linkSeries(), fireEvent(chart, "beforeRender"), Highcharts.Pointer && (chart.pointer = new Pointer(chart, options)), chart.render(), chart.renderer.draw(), callback && callback.apply(chart, [chart]), each(chart.callbacks, function(fn) {
                    fn.apply(chart, [chart])
                }), chart.cloneRenderTo(!0), fireEvent(chart, "load"))
            },
            splashArray: function(target, options) {
                var oVar = options[target],
                    tArray = isObject(oVar) ? oVar : [oVar, oVar, oVar, oVar];
                return [pick(options[target + "Top"], tArray[0]), pick(options[target + "Right"], tArray[1]), pick(options[target + "Bottom"], tArray[2]), pick(options[target + "Left"], tArray[3])]
            }
        }, Chart.prototype.callbacks = [];
        var CenteredSeriesMixin = Highcharts.CenteredSeriesMixin = {
                getCenter: function() {
                    var handleSlicingRoom, isPercent, options = this.options,
                        chart = this.chart,
                        slicingRoom = 2 * (options.slicedOffset || 0),
                        plotWidth = chart.plotWidth - 2 * slicingRoom,
                        plotHeight = chart.plotHeight - 2 * slicingRoom,
                        centerOption = options.center,
                        positions = [pick(centerOption[0], "50%"), pick(centerOption[1], "50%"), options.size || "100%", options.innerSize || 0],
                        smallestSize = mathMin(plotWidth, plotHeight);
                    return map(positions, function(length, i) {
                        return isPercent = /%$/.test(length), handleSlicingRoom = 2 > i || 2 === i && isPercent, (isPercent ? [plotWidth, plotHeight, smallestSize, smallestSize][i] * pInt(length) / 100 : length) + (handleSlicingRoom ? slicingRoom : 0)
                    })
                }
            },
            Point = function() {};
        Point.prototype = {
            init: function(series, options, x) {
                var colors, point = this;
                return point.series = series, point.applyOptions(options, x), point.pointAttr = {}, series.options.colorByPoint && (colors = series.options.colors || series.chart.options.colors, point.color = point.color || colors[series.colorCounter++], series.colorCounter === colors.length && (series.colorCounter = 0)), series.chart.pointCount++, point
            },
            applyOptions: function(options, x) {
                var point = this,
                    series = point.series,
                    pointValKey = series.options.pointValKey || series.pointValKey;
                return options = Point.prototype.optionsToObject.call(this, options), extend(point, options), point.options = point.options ? extend(point.options, options) : options, pointValKey && (point.y = point[pointValKey]), point.x === UNDEFINED && series && (point.x = x === UNDEFINED ? series.autoIncrement() : x), point
            },
            optionsToObject: function(options) {
                var firstItemType, ret = {},
                    series = this.series,
                    pointArrayMap = series.pointArrayMap || ["y"],
                    valueCount = pointArrayMap.length,
                    i = 0,
                    j = 0;
                if ("number" == typeof options || null === options) ret[pointArrayMap[0]] = options;
                else if (isArray(options))
                    for (options.length > valueCount && (firstItemType = typeof options[0], "string" === firstItemType ? ret.name = options[0] : "number" === firstItemType && (ret.x = options[0]), i++); valueCount > j;) ret[pointArrayMap[j++]] = options[i++];
                else "object" == typeof options && (ret = options, options.dataLabels && (series._hasPointLabels = !0), options.marker && (series._hasPointMarkers = !0));
                return ret
            },
            destroy: function() {
                var prop, point = this,
                    series = point.series,
                    chart = series.chart,
                    hoverPoints = chart.hoverPoints;
                chart.pointCount--, hoverPoints && (point.setState(), erase(hoverPoints, point), hoverPoints.length || (chart.hoverPoints = null)), point === chart.hoverPoint && point.onMouseOut(), (point.graphic || point.dataLabel) && (removeEvent(point), point.destroyElements()), point.legendItem && chart.legend.destroyItem(point);
                for (prop in point) point[prop] = null
            },
            destroyElements: function() {
                for (var prop, point = this, props = ["graphic", "dataLabel", "dataLabelUpper", "group", "connector", "shadowGroup"], i = 6; i--;) prop = props[i], point[prop] && (point[prop] = point[prop].destroy())
            },
            getLabelConfig: function() {
                var point = this;
                return {
                    x: point.category,
                    y: point.y,
                    key: point.name || point.category,
                    series: point.series,
                    point: point,
                    percentage: point.percentage,
                    total: point.total || point.stackTotal
                }
            },
            tooltipFormatter: function(pointFormat) {
                var series = this.series,
                    seriesTooltipOptions = series.tooltipOptions,
                    valueDecimals = pick(seriesTooltipOptions.valueDecimals, ""),
                    valuePrefix = seriesTooltipOptions.valuePrefix || "",
                    valueSuffix = seriesTooltipOptions.valueSuffix || "";
                return each(series.pointArrayMap || ["y"], function(key) {
                    key = "{point." + key, (valuePrefix || valueSuffix) && (pointFormat = pointFormat.replace(key + "}", valuePrefix + key + "}" + valueSuffix)), pointFormat = pointFormat.replace(key + "}", key + ":,." + valueDecimals + "f}")
                }), format(pointFormat, {
                    point: this,
                    series: this.series
                })
            },
            firePointEvent: function(eventType, eventArgs, defaultFunction) {
                var point = this,
                    series = this.series,
                    seriesOptions = series.options;
                (seriesOptions.point.events[eventType] || point.options && point.options.events && point.options.events[eventType]) && this.importEvents(), "click" === eventType && seriesOptions.allowPointSelect && (defaultFunction = function(event) {
                    point.select(null, event.ctrlKey || event.metaKey || event.shiftKey)
                }), fireEvent(this, eventType, eventArgs, defaultFunction)
            }
        };
        var Series = function() {};
        Series.prototype = {
            isCartesian: !0,
            type: "line",
            pointClass: Point,
            sorted: !0,
            requireSorting: !0,
            pointAttrToOptions: {
                stroke: "lineColor",
                "stroke-width": "lineWidth",
                fill: "fillColor",
                r: "radius"
            },
            axisTypes: ["xAxis", "yAxis"],
            colorCounter: 0,
            parallelArrays: ["x", "y"],
            init: function(chart, options) {
                var eventType, events, series = this,
                    chartSeries = chart.series,
                    sortByIndex = function(a, b) {
                        return pick(a.options.index, a._i) - pick(b.options.index, b._i)
                    };
                series.chart = chart, series.options = options = series.setOptions(options), series.linkedSeries = [], series.bindAxes(), extend(series, {
                    name: options.name,
                    state: NORMAL_STATE,
                    pointAttr: {},
                    visible: options.visible !== !1,
                    selected: options.selected === !0
                }), useCanVG && (options.animation = !1), events = options.events;
                for (eventType in events) addEvent(series, eventType, events[eventType]);
                (events && events.click || options.point && options.point.events && options.point.events.click || options.allowPointSelect) && (chart.runTrackerClick = !0), series.getColor(), series.getSymbol(), each(series.parallelArrays, function(key) {
                    series[key + "Data"] = []
                }), series.setData(options.data, !1), series.isCartesian && (chart.hasCartesianSeries = !0), chartSeries.push(series), series._i = chartSeries.length - 1, stableSort(chartSeries, sortByIndex), this.yAxis && stableSort(this.yAxis.series, sortByIndex), each(chartSeries, function(series, i) {
                    series.index = i, series.name = series.name || "Series " + (i + 1)
                })
            },
            bindAxes: function() {
                var axisOptions, series = this,
                    seriesOptions = series.options,
                    chart = series.chart;
                each(series.axisTypes || [], function(AXIS) {
                    each(chart[AXIS], function(axis) {
                        axisOptions = axis.options, (seriesOptions[AXIS] === axisOptions.index || seriesOptions[AXIS] !== UNDEFINED && seriesOptions[AXIS] === axisOptions.id || seriesOptions[AXIS] === UNDEFINED && 0 === axisOptions.index) && (axis.series.push(series), series[AXIS] = axis, axis.isDirty = !0)
                    }), series[AXIS] || series.optionalAxis === AXIS || error(18, !0)
                })
            },
            updateParallelArrays: function(point, i) {
                var series = point.series,
                    args = arguments,
                    fn = "number" == typeof i ? function(key) {
                        var val = "y" === key && series.toYData ? series.toYData(point) : point[key];
                        series[key + "Data"][i] = val
                    } : function(key) {
                        Array.prototype[i].apply(series[key + "Data"], Array.prototype.slice.call(args, 2))
                    };
                each(series.parallelArrays, fn)
            },
            autoIncrement: function() {
                var series = this,
                    options = series.options,
                    xIncrement = series.xIncrement;
                return xIncrement = pick(xIncrement, options.pointStart, 0), series.pointInterval = pick(series.pointInterval, options.pointInterval, 1), series.xIncrement = xIncrement + series.pointInterval, xIncrement
            },
            getSegments: function() {
                var i, series = this,
                    lastNull = -1,
                    segments = [],
                    points = series.points,
                    pointsLength = points.length;
                if (pointsLength)
                    if (series.options.connectNulls) {
                        for (i = pointsLength; i--;) null === points[i].y && points.splice(i, 1);
                        points.length && (segments = [points])
                    } else each(points, function(point, i) {
                        null === point.y ? (i > lastNull + 1 && segments.push(points.slice(lastNull + 1, i)), lastNull = i) : i === pointsLength - 1 && segments.push(points.slice(lastNull + 1, i + 1))
                    });
                series.segments = segments
            },
            setOptions: function(itemOptions) {
                var options, chart = this.chart,
                    chartOptions = chart.options,
                    plotOptions = chartOptions.plotOptions,
                    userOptions = chart.userOptions || {},
                    userPlotOptions = userOptions.plotOptions || {},
                    typeOptions = plotOptions[this.type];
                return this.userOptions = itemOptions, options = merge(typeOptions, plotOptions.series, itemOptions), this.tooltipOptions = merge(defaultOptions.tooltip, defaultOptions.plotOptions[this.type].tooltip, userOptions.tooltip, userPlotOptions.series && userPlotOptions.series.tooltip, userPlotOptions[this.type] && userPlotOptions[this.type].tooltip, itemOptions.tooltip), null === typeOptions.marker && delete options.marker, options
            },
            getCyclic: function(prop, value, defaults) {
                var i, userOptions = this.userOptions,
                    indexName = "_" + prop + "Index",
                    counterName = prop + "Counter";
                value || (defined(userOptions[indexName]) ? i = userOptions[indexName] : (userOptions[indexName] = i = this.chart[counterName] % defaults.length, this.chart[counterName] += 1), value = defaults[i]), this[prop] = value
            },
            getColor: function() {
                this.options.colorByPoint || this.getCyclic("color", this.options.color || defaultPlotOptions[this.type].color, this.chart.options.colors)
            },
            getSymbol: function() {
                var seriesMarkerOption = this.options.marker;
                this.getCyclic("symbol", seriesMarkerOption.symbol, this.chart.options.symbols), /^url/.test(this.symbol) && (seriesMarkerOption.radius = 0)
            },
            drawLegendSymbol: LegendSymbolMixin.drawLineMarker,
            setData: function(data, redraw, animation, updatePoints) {
                var dataLength, i, pt, series = this,
                    oldData = series.points,
                    oldDataLength = oldData && oldData.length || 0,
                    options = series.options,
                    chart = series.chart,
                    firstPoint = null,
                    xAxis = series.xAxis,
                    hasCategories = xAxis && !!xAxis.categories,
                    tooltipPoints = series.tooltipPoints,
                    turboThreshold = options.turboThreshold,
                    xData = this.xData,
                    yData = this.yData,
                    pointArrayMap = series.pointArrayMap,
                    valueCount = pointArrayMap && pointArrayMap.length;
                if (data = data || [], dataLength = data.length, redraw = pick(redraw, !0), updatePoints === !1 || !dataLength || oldDataLength !== dataLength || series.cropped || series.hasGroupedData) {
                    if (series.xIncrement = null, series.pointRange = hasCategories ? 1 : options.pointRange, series.colorCounter = 0, each(this.parallelArrays, function(key) {
                            series[key + "Data"].length = 0
                        }), turboThreshold && dataLength > turboThreshold) {
                        for (i = 0; null === firstPoint && dataLength > i;) firstPoint = data[i], i++;
                        if (isNumber(firstPoint)) {
                            var x = pick(options.pointStart, 0),
                                pointInterval = pick(options.pointInterval, 1);
                            for (i = 0; dataLength > i; i++) xData[i] = x, yData[i] = data[i], x += pointInterval;
                            series.xIncrement = x
                        } else if (isArray(firstPoint))
                            if (valueCount)
                                for (i = 0; dataLength > i; i++) pt = data[i], xData[i] = pt[0], yData[i] = pt.slice(1, valueCount + 1);
                            else
                                for (i = 0; dataLength > i; i++) pt = data[i], xData[i] = pt[0], yData[i] = pt[1];
                        else error(12)
                    } else
                        for (i = 0; dataLength > i; i++) data[i] !== UNDEFINED && (pt = {
                            series: series
                        }, series.pointClass.prototype.applyOptions.apply(pt, [data[i]]), series.updateParallelArrays(pt, i), hasCategories && pt.name && (xAxis.names[pt.x] = pt.name));
                    for (isString(yData[0]) && error(14, !0), series.data = [], series.options.data = data, i = oldDataLength; i--;) oldData[i] && oldData[i].destroy && oldData[i].destroy();
                    tooltipPoints && (tooltipPoints.length = 0), xAxis && (xAxis.minRange = xAxis.userMinRange), series.isDirty = series.isDirtyData = chart.isDirtyBox = !0, animation = !1
                } else each(data, function(point, i) {
                    oldData[i].update(point, !1)
                });
                redraw && chart.redraw(animation)
            },
            processData: function(force) {
                var croppedData, cropped, distance, closestPointRange, i, xExtremes, min, max, series = this,
                    processedXData = series.xData,
                    processedYData = series.yData,
                    dataLength = processedXData.length,
                    cropStart = 0,
                    xAxis = series.xAxis,
                    options = series.options,
                    cropThreshold = options.cropThreshold,
                    activePointCount = 0,
                    isCartesian = series.isCartesian;
                if (isCartesian && !series.isDirty && !xAxis.isDirty && !series.yAxis.isDirty && !force) return !1;
                for (isCartesian && series.sorted && (!cropThreshold || dataLength > cropThreshold || series.forceCrop) && (xExtremes = xAxis.getExtremes(), min = xExtremes.min, max = xExtremes.max, processedXData[dataLength - 1] < min || processedXData[0] > max ? (processedXData = [], processedYData = []) : (processedXData[0] < min || processedXData[dataLength - 1] > max) && (croppedData = this.cropData(series.xData, series.yData, min, max), processedXData = croppedData.xData, processedYData = croppedData.yData, cropStart = croppedData.start, cropped = !0, activePointCount = processedXData.length)), i = processedXData.length - 1; i >= 0; i--) distance = processedXData[i] - processedXData[i - 1], !cropped && processedXData[i] > min && processedXData[i] < max && activePointCount++, distance > 0 && (closestPointRange === UNDEFINED || closestPointRange > distance) ? closestPointRange = distance : 0 > distance && series.requireSorting && error(15);
                series.cropped = cropped, series.cropStart = cropStart, series.processedXData = processedXData, series.processedYData = processedYData, series.activePointCount = activePointCount, null === options.pointRange && (series.pointRange = closestPointRange || 1), series.closestPointRange = closestPointRange
            },
            cropData: function(xData, yData, min, max) {
                var i, dataLength = xData.length,
                    cropStart = 0,
                    cropEnd = dataLength,
                    cropShoulder = pick(this.cropShoulder, 1);
                for (i = 0; dataLength > i; i++)
                    if (xData[i] >= min) {
                        cropStart = mathMax(0, i - cropShoulder);
                        break
                    }
                for (; dataLength > i; i++)
                    if (xData[i] > max) {
                        cropEnd = i + cropShoulder;
                        break
                    }
                return {
                    xData: xData.slice(cropStart, cropEnd),
                    yData: yData.slice(cropStart, cropEnd),
                    start: cropStart,
                    end: cropEnd
                }
            },
            generatePoints: function() {
                var dataLength, cursor, point, i, series = this,
                    options = series.options,
                    dataOptions = options.data,
                    data = series.data,
                    processedXData = series.processedXData,
                    processedYData = series.processedYData,
                    pointClass = series.pointClass,
                    processedDataLength = processedXData.length,
                    cropStart = series.cropStart || 0,
                    hasGroupedData = series.hasGroupedData,
                    points = [];
                if (!data && !hasGroupedData) {
                    var arr = [];
                    arr.length = dataOptions.length, data = series.data = arr
                }
                for (i = 0; processedDataLength > i; i++) cursor = cropStart + i, hasGroupedData ? points[i] = (new pointClass).init(series, [processedXData[i]].concat(splat(processedYData[i]))) : (data[cursor] ? point = data[cursor] : dataOptions[cursor] !== UNDEFINED && (data[cursor] = point = (new pointClass).init(series, dataOptions[cursor], processedXData[i])), points[i] = point);
                if (data && (processedDataLength !== (dataLength = data.length) || hasGroupedData))
                    for (i = 0; dataLength > i; i++) i !== cropStart || hasGroupedData || (i += processedDataLength), data[i] && (data[i].destroyElements(), data[i].plotX = UNDEFINED);
                series.data = data, series.points = points
            },
            getExtremes: function(yData) {
                var yDataLength, validValue, withinRange, dataMin, dataMax, x, y, i, j, xAxis = this.xAxis,
                    yAxis = this.yAxis,
                    xData = this.processedXData,
                    activeYData = [],
                    activeCounter = 0,
                    xExtremes = xAxis.getExtremes(),
                    xMin = xExtremes.min,
                    xMax = xExtremes.max;
                for (yData = yData || this.stackedYData || this.processedYData, yDataLength = yData.length, i = 0; yDataLength > i; i++)
                    if (x = xData[i], y = yData[i], validValue = null !== y && y !== UNDEFINED && (!yAxis.isLog || y.length || y > 0), withinRange = this.getExtremesFromAll || this.cropped || (xData[i + 1] || x) >= xMin && (xData[i - 1] || x) <= xMax, validValue && withinRange)
                        if (j = y.length)
                            for (; j--;) null !== y[j] && (activeYData[activeCounter++] = y[j]);
                        else activeYData[activeCounter++] = y;
                this.dataMin = pick(dataMin, arrayMin(activeYData)), this.dataMax = pick(dataMax, arrayMax(activeYData))
            },
            translate: function() {
                this.processedXData || this.processData(), this.generatePoints();
                var i, series = this,
                    options = series.options,
                    stacking = options.stacking,
                    xAxis = series.xAxis,
                    categories = xAxis.categories,
                    yAxis = series.yAxis,
                    points = series.points,
                    dataLength = points.length,
                    hasModifyValue = !!series.modifyValue,
                    pointPlacement = options.pointPlacement,
                    dynamicallyPlaced = "between" === pointPlacement || isNumber(pointPlacement),
                    threshold = options.threshold;
                for (i = 0; dataLength > i; i++) {
                    var pointStack, stackValues, point = points[i],
                        xValue = point.x,
                        yValue = point.y,
                        yBottom = point.low,
                        stack = stacking && yAxis.stacks[(series.negStacks && threshold > yValue ? "-" : "") + series.stackKey];
                    yAxis.isLog && 0 >= yValue && (point.y = yValue = null), point.plotX = xAxis.translate(xValue, 0, 0, 0, 1, pointPlacement, "flags" === this.type), stacking && series.visible && stack && stack[xValue] && (pointStack = stack[xValue], stackValues = pointStack.points[series.index + "," + i], yBottom = stackValues[0], yValue = stackValues[1], 0 === yBottom && (yBottom = pick(threshold, yAxis.min)), yAxis.isLog && 0 >= yBottom && (yBottom = null), point.total = point.stackTotal = pointStack.total, point.percentage = pointStack.total && point.y / pointStack.total * 100, point.stackY = yValue, pointStack.setOffset(series.pointXOffset || 0, series.barW || 0)), point.yBottom = defined(yBottom) ? yAxis.translate(yBottom, 0, 1, 0, 1) : null, hasModifyValue && (yValue = series.modifyValue(yValue, point)), point.plotY = "number" == typeof yValue && 1 / 0 !== yValue ? yAxis.translate(yValue, 0, 1, 0, 1) : UNDEFINED, point.clientX = dynamicallyPlaced ? xAxis.translate(xValue, 0, 0, 0, 1) : point.plotX, point.negative = point.y < (threshold || 0), point.category = categories && categories[point.x] !== UNDEFINED ? categories[point.x] : point.x
                }
                series.getSegments()
            },
            animate: function(init) {
                var clipRect, markerClipRect, sharedClipKey, series = this,
                    chart = series.chart,
                    renderer = chart.renderer,
                    animation = series.options.animation,
                    clipBox = series.clipBox || chart.clipBox,
                    inverted = chart.inverted;
                animation && !isObject(animation) && (animation = defaultPlotOptions[series.type].animation), sharedClipKey = ["_sharedClip", animation.duration, animation.easing, clipBox.height].join(","), init ? (clipRect = chart[sharedClipKey], markerClipRect = chart[sharedClipKey + "m"], clipRect || (chart[sharedClipKey] = clipRect = renderer.clipRect(extend(clipBox, {
                    width: 0
                })), chart[sharedClipKey + "m"] = markerClipRect = renderer.clipRect(-99, inverted ? -chart.plotLeft : -chart.plotTop, 99, inverted ? chart.chartWidth : chart.chartHeight)), series.group.clip(clipRect), series.markerGroup.clip(markerClipRect), series.sharedClipKey = sharedClipKey) : (clipRect = chart[sharedClipKey], clipRect && clipRect.animate({
                    width: chart.plotSizeX
                }, animation), chart[sharedClipKey + "m"] && chart[sharedClipKey + "m"].animate({
                    width: chart.plotSizeX + 99
                }, animation), series.animate = null)
            },
            afterAnimate: function() {
                var chart = this.chart,
                    sharedClipKey = this.sharedClipKey,
                    group = this.group,
                    clipBox = this.clipBox;
                group && this.options.clip !== !1 && (sharedClipKey && clipBox || group.clip(clipBox ? chart.renderer.clipRect(clipBox) : chart.clipRect), this.markerGroup.clip()), fireEvent(this, "afterAnimate"), setTimeout(function() {
                    sharedClipKey && chart[sharedClipKey] && (clipBox || (chart[sharedClipKey] = chart[sharedClipKey].destroy()), chart[sharedClipKey + "m"] && (chart[sharedClipKey + "m"] = chart[sharedClipKey + "m"].destroy()))
                }, 100)
            },
            drawPoints: function() {
                var pointAttr, plotX, plotY, i, point, radius, symbol, isImage, graphic, pointMarkerOptions, enabled, isInside, series = this,
                    points = series.points,
                    chart = series.chart,
                    options = series.options,
                    seriesMarkerOptions = options.marker,
                    seriesPointAttr = series.pointAttr[""],
                    markerGroup = series.markerGroup,
                    globallyEnabled = pick(seriesMarkerOptions.enabled, series.activePointCount < .5 * series.xAxis.len / seriesMarkerOptions.radius);
                if (seriesMarkerOptions.enabled !== !1 || series._hasPointMarkers)
                    for (i = points.length; i--;) point = points[i], plotX = mathFloor(point.plotX), plotY = point.plotY, graphic = point.graphic, pointMarkerOptions = point.marker || {}, enabled = globallyEnabled && pointMarkerOptions.enabled === UNDEFINED || pointMarkerOptions.enabled, isInside = chart.isInsidePlot(mathRound(plotX), plotY, chart.inverted), enabled && plotY !== UNDEFINED && !isNaN(plotY) && null !== point.y ? (pointAttr = point.pointAttr[point.selected ? SELECT_STATE : NORMAL_STATE] || seriesPointAttr, radius = pointAttr.r, symbol = pick(pointMarkerOptions.symbol, series.symbol), isImage = 0 === symbol.indexOf("url"), graphic ? graphic[isInside ? "show" : "hide"](!0).animate(extend({
                        x: plotX - radius,
                        y: plotY - radius
                    }, graphic.symbolName ? {
                        width: 2 * radius,
                        height: 2 * radius
                    } : {})) : isInside && (radius > 0 || isImage) && (point.graphic = graphic = chart.renderer.symbol(symbol, plotX - radius, plotY - radius, 2 * radius, 2 * radius).attr(pointAttr).add(markerGroup))) : graphic && (point.graphic = graphic.destroy())
            },
            convertAttribs: function(options, base1, base2, base3) {
                var attr, option, conversion = this.pointAttrToOptions,
                    obj = {};
                options = options || {}, base1 = base1 || {}, base2 = base2 || {}, base3 = base3 || {};
                for (attr in conversion) option = conversion[attr], obj[attr] = pick(options[option], base1[attr], base2[attr], base3[attr]);
                return obj
            },
            getAttribs: function() {
                var pointStateOptionsHover, i, point, pointAttr, attr, key, series = this,
                    seriesOptions = series.options,
                    normalOptions = defaultPlotOptions[series.type].marker ? seriesOptions.marker : seriesOptions,
                    stateOptions = normalOptions.states,
                    stateOptionsHover = stateOptions[HOVER_STATE],
                    seriesColor = series.color,
                    normalDefaults = {
                        stroke: seriesColor,
                        fill: seriesColor
                    },
                    points = series.points || [],
                    seriesPointAttr = [],
                    pointAttrToOptions = series.pointAttrToOptions,
                    hasPointSpecificOptions = series.hasPointSpecificOptions,
                    negativeColor = seriesOptions.negativeColor,
                    defaultLineColor = normalOptions.lineColor,
                    defaultFillColor = normalOptions.fillColor,
                    turboThreshold = seriesOptions.turboThreshold;
                if (seriesOptions.marker ? (stateOptionsHover.radius = stateOptionsHover.radius || normalOptions.radius + stateOptionsHover.radiusPlus, stateOptionsHover.lineWidth = stateOptionsHover.lineWidth || normalOptions.lineWidth + stateOptionsHover.lineWidthPlus) : stateOptionsHover.color = stateOptionsHover.color || Color(stateOptionsHover.color || seriesColor).brighten(stateOptionsHover.brightness).get(), seriesPointAttr[NORMAL_STATE] = series.convertAttribs(normalOptions, normalDefaults), each([HOVER_STATE, SELECT_STATE], function(state) {
                        seriesPointAttr[state] = series.convertAttribs(stateOptions[state], seriesPointAttr[NORMAL_STATE])
                    }), series.pointAttr = seriesPointAttr, i = points.length, !turboThreshold || turboThreshold > i || hasPointSpecificOptions)
                    for (; i--;) {
                        if (point = points[i], normalOptions = point.options && point.options.marker || point.options, normalOptions && normalOptions.enabled === !1 && (normalOptions.radius = 0), point.negative && negativeColor && (point.color = point.fillColor = negativeColor), hasPointSpecificOptions = seriesOptions.colorByPoint || point.color, point.options)
                            for (key in pointAttrToOptions) defined(normalOptions[pointAttrToOptions[key]]) && (hasPointSpecificOptions = !0);
                        hasPointSpecificOptions ? (normalOptions = normalOptions || {}, pointAttr = [], stateOptions = normalOptions.states || {}, pointStateOptionsHover = stateOptions[HOVER_STATE] = stateOptions[HOVER_STATE] || {}, seriesOptions.marker || (pointStateOptionsHover.color = pointStateOptionsHover.color || !point.options.color && stateOptionsHover.color || Color(point.color).brighten(pointStateOptionsHover.brightness || stateOptionsHover.brightness).get()), attr = {
                            color: point.color
                        }, defaultFillColor || (attr.fillColor = point.color), defaultLineColor || (attr.lineColor = point.color), pointAttr[NORMAL_STATE] = series.convertAttribs(extend(attr, normalOptions), seriesPointAttr[NORMAL_STATE]), pointAttr[HOVER_STATE] = series.convertAttribs(stateOptions[HOVER_STATE], seriesPointAttr[HOVER_STATE], pointAttr[NORMAL_STATE]), pointAttr[SELECT_STATE] = series.convertAttribs(stateOptions[SELECT_STATE], seriesPointAttr[SELECT_STATE], pointAttr[NORMAL_STATE])) : pointAttr = seriesPointAttr, point.pointAttr = pointAttr
                    }
            },
            destroy: function() {
                var destroy, i, point, prop, axis, series = this,
                    chart = series.chart,
                    issue134 = /AppleWebKit\/533/.test(userAgent),
                    data = series.data || [];
                for (fireEvent(series, "destroy"), removeEvent(series), each(series.axisTypes || [], function(AXIS) {
                        axis = series[AXIS], axis && (erase(axis.series, series), axis.isDirty = axis.forceRedraw = !0)
                    }), series.legendItem && series.chart.legend.destroyItem(series), i = data.length; i--;) point = data[i], point && point.destroy && point.destroy();
                series.points = null, clearTimeout(series.animationTimeout), each(["area", "graph", "dataLabelsGroup", "group", "markerGroup", "tracker", "graphNeg", "areaNeg", "posClip", "negClip"], function(prop) {
                    series[prop] && (destroy = issue134 && "group" === prop ? "hide" : "destroy", series[prop][destroy]())
                }), chart.hoverSeries === series && (chart.hoverSeries = null), erase(chart.series, series);
                for (prop in series) delete series[prop]
            },
            getSegmentPath: function(segment) {
                var series = this,
                    segmentPath = [],
                    step = series.options.step;
                return each(segment, function(point, i) {
                    var lastPoint, plotX = point.plotX,
                        plotY = point.plotY;
                    series.getPointSpline ? segmentPath.push.apply(segmentPath, series.getPointSpline(segment, point, i)) : (segmentPath.push(i ? L : M), step && i && (lastPoint = segment[i - 1], "right" === step ? segmentPath.push(lastPoint.plotX, plotY) : "center" === step ? segmentPath.push((lastPoint.plotX + plotX) / 2, lastPoint.plotY, (lastPoint.plotX + plotX) / 2, plotY) : segmentPath.push(plotX, lastPoint.plotY)), segmentPath.push(point.plotX, point.plotY))
                }), segmentPath
            },
            getGraphPath: function() {
                var segmentPath, series = this,
                    graphPath = [],
                    singlePoints = [];
                return each(series.segments, function(segment) {
                    segmentPath = series.getSegmentPath(segment), segment.length > 1 ? graphPath = graphPath.concat(segmentPath) : singlePoints.push(segment[0])
                }), series.singlePoints = singlePoints, series.graphPath = graphPath, graphPath
            },
            drawGraph: function() {
                var series = this,
                    options = this.options,
                    props = [
                        ["graph", options.lineColor || this.color]
                    ],
                    lineWidth = options.lineWidth,
                    dashStyle = options.dashStyle,
                    roundCap = "square" !== options.linecap,
                    graphPath = this.getGraphPath(),
                    negativeColor = options.negativeColor;
                negativeColor && props.push(["graphNeg", negativeColor]), each(props, function(prop, i) {
                    var attribs, graphKey = prop[0],
                        graph = series[graphKey];
                    graph ? (stop(graph), graph.animate({
                        d: graphPath
                    })) : lineWidth && graphPath.length && (attribs = {
                        stroke: prop[1],
                        "stroke-width": lineWidth,
                        fill: NONE,
                        zIndex: 1
                    }, dashStyle ? attribs.dashstyle = dashStyle : roundCap && (attribs["stroke-linecap"] = attribs["stroke-linejoin"] = "round"), series[graphKey] = series.chart.renderer.path(graphPath).attr(attribs).add(series.group).shadow(!i && options.shadow))
                })
            },
            clipNeg: function() {
                var translatedThreshold, posAttr, negAttr, above, below, options = this.options,
                    chart = this.chart,
                    renderer = chart.renderer,
                    negativeColor = options.negativeColor || options.negativeFillColor,
                    graph = this.graph,
                    area = this.area,
                    posClip = this.posClip,
                    negClip = this.negClip,
                    chartWidth = chart.chartWidth,
                    chartHeight = chart.chartHeight,
                    chartSizeMax = mathMax(chartWidth, chartHeight),
                    yAxis = this.yAxis;
                negativeColor && (graph || area) && (translatedThreshold = mathRound(yAxis.toPixels(options.threshold || 0, !0)), 0 > translatedThreshold && (chartSizeMax -= translatedThreshold), above = {
                    x: 0,
                    y: 0,
                    width: chartSizeMax,
                    height: translatedThreshold
                }, below = {
                    x: 0,
                    y: translatedThreshold,
                    width: chartSizeMax,
                    height: chartSizeMax
                }, chart.inverted && (above.height = below.y = chart.plotWidth - translatedThreshold, renderer.isVML && (above = {
                    x: chart.plotWidth - translatedThreshold - chart.plotLeft,
                    y: 0,
                    width: chartWidth,
                    height: chartHeight
                }, below = {
                    x: translatedThreshold + chart.plotLeft - chartWidth,
                    y: 0,
                    width: chart.plotLeft + translatedThreshold,
                    height: chartWidth
                })), yAxis.reversed ? (posAttr = below, negAttr = above) : (posAttr = above, negAttr = below), posClip ? (posClip.animate(posAttr), negClip.animate(negAttr)) : (this.posClip = posClip = renderer.clipRect(posAttr), this.negClip = negClip = renderer.clipRect(negAttr), graph && this.graphNeg && (graph.clip(posClip), this.graphNeg.clip(negClip)), area && (area.clip(posClip), this.areaNeg.clip(negClip))))
            },
            invertGroups: function() {
                function setInvert() {
                    var size = {
                        width: series.yAxis.len,
                        height: series.xAxis.len
                    };
                    each(["group", "markerGroup"], function(groupName) {
                        series[groupName] && series[groupName].attr(size).invert()
                    })
                }
                var series = this,
                    chart = series.chart;
                series.xAxis && (addEvent(chart, "resize", setInvert), addEvent(series, "destroy", function() {
                    removeEvent(chart, "resize", setInvert)
                }), setInvert(), series.invertGroups = setInvert)
            },
            plotGroup: function(prop, name, visibility, zIndex, parent) {
                var group = this[prop],
                    isNew = !group;
                return isNew && (this[prop] = group = this.chart.renderer.g(name).attr({
                    visibility: visibility,
                    zIndex: zIndex || .1
                }).add(parent)), group[isNew ? "attr" : "animate"](this.getPlotBox()), group
            },
            getPlotBox: function() {
                var chart = this.chart,
                    xAxis = this.xAxis,
                    yAxis = this.yAxis;
                return chart.inverted && (xAxis = yAxis, yAxis = this.xAxis), {
                    translateX: xAxis ? xAxis.left : chart.plotLeft,
                    translateY: yAxis ? yAxis.top : chart.plotTop,
                    scaleX: 1,
                    scaleY: 1
                }
            },
            render: function() {
                var group, series = this,
                    chart = series.chart,
                    options = series.options,
                    animation = options.animation,
                    animDuration = animation && !!series.animate && chart.renderer.isSVG && pick(animation.duration, 500) || 0,
                    visibility = series.visible ? VISIBLE : HIDDEN,
                    zIndex = options.zIndex,
                    hasRendered = series.hasRendered,
                    chartSeriesGroup = chart.seriesGroup;
                group = series.plotGroup("group", "series", visibility, zIndex, chartSeriesGroup), series.markerGroup = series.plotGroup("markerGroup", "markers", visibility, zIndex, chartSeriesGroup), animDuration && series.animate(!0), series.getAttribs(), group.inverted = series.isCartesian ? chart.inverted : !1, series.drawGraph && (series.drawGraph(), series.clipNeg()), series.drawDataLabels && series.drawDataLabels(), series.visible && series.drawPoints(), series.drawTracker && series.options.enableMouseTracking !== !1 && series.drawTracker(), chart.inverted && series.invertGroups(), options.clip === !1 || series.sharedClipKey || hasRendered || group.clip(chart.clipRect), animDuration && series.animate(), hasRendered || (animDuration ? series.animationTimeout = setTimeout(function() {
                    series.afterAnimate()
                }, animDuration) : series.afterAnimate()), series.isDirty = series.isDirtyData = !1, series.hasRendered = !0
            },
            redraw: function() {
                var series = this,
                    chart = series.chart,
                    wasDirtyData = series.isDirtyData,
                    group = series.group,
                    xAxis = series.xAxis,
                    yAxis = series.yAxis;
                group && (chart.inverted && group.attr({
                    width: chart.plotWidth,
                    height: chart.plotHeight
                }), group.animate({
                    translateX: pick(xAxis && xAxis.left, chart.plotLeft),
                    translateY: pick(yAxis && yAxis.top, chart.plotTop)
                })), series.translate(), series.setTooltipPoints && series.setTooltipPoints(!0), series.render(), wasDirtyData && fireEvent(series, "updatedData")
            }
        }, StackItem.prototype = {
            destroy: function() {
                destroyObjectProperties(this, this.axis)
            },
            render: function(group) {
                var options = this.options,
                    formatOption = options.format,
                    str = formatOption ? format(formatOption, this) : options.formatter.call(this);
                this.label ? this.label.attr({
                    text: str,
                    visibility: HIDDEN
                }) : this.label = this.axis.chart.renderer.text(str, null, null, options.useHTML).css(options.style).attr({
                    align: this.textAlign,
                    rotation: options.rotation,
                    visibility: HIDDEN
                }).add(group)
            },
            setOffset: function(xOffset, xWidth) {
                var alignAttr, stackItem = this,
                    axis = stackItem.axis,
                    chart = axis.chart,
                    inverted = chart.inverted,
                    neg = this.isNegative,
                    y = axis.translate(axis.usePercentage ? 100 : this.total, 0, 0, 0, 1),
                    yZero = axis.translate(0),
                    h = mathAbs(y - yZero),
                    x = chart.xAxis[0].translate(this.x) + xOffset,
                    plotHeight = chart.plotHeight,
                    stackBox = {
                        x: inverted ? neg ? y : y - h : x,
                        y: inverted ? plotHeight - x - xWidth : neg ? plotHeight - y - h : plotHeight - y,
                        width: inverted ? h : xWidth,
                        height: inverted ? xWidth : h
                    },
                    label = this.label;
                label && (label.align(this.alignOptions, null, stackBox), alignAttr = label.alignAttr, label[this.options.crop === !1 || chart.isInsidePlot(alignAttr.x, alignAttr.y) ? "show" : "hide"](!0))
            }
        }, Axis.prototype.buildStacks = function() {
            var series = this.series,
                reversedStacks = pick(this.options.reversedStacks, !0),
                i = series.length;
            if (!this.isXAxis) {
                for (this.usePercentage = !1; i--;) series[reversedStacks ? i : series.length - i - 1].setStackedPoints();
                if (this.usePercentage)
                    for (i = 0; i < series.length; i++) series[i].setPercentStacks()
            }
        }, Axis.prototype.renderStackTotals = function() {
            var stackKey, oneStack, stackCategory, axis = this,
                chart = axis.chart,
                renderer = chart.renderer,
                stacks = axis.stacks,
                stackTotalGroup = axis.stackTotalGroup;
            stackTotalGroup || (axis.stackTotalGroup = stackTotalGroup = renderer.g("stack-labels").attr({
                visibility: VISIBLE,
                zIndex: 6
            }).add()), stackTotalGroup.translate(chart.plotLeft, chart.plotTop);
            for (stackKey in stacks) {
                oneStack = stacks[stackKey];
                for (stackCategory in oneStack) oneStack[stackCategory].render(stackTotalGroup)
            }
        }, Series.prototype.setStackedPoints = function() {
            if (this.options.stacking && (this.visible === !0 || this.chart.options.chart.ignoreHiddenSeries === !1)) {
                var isNegative, stack, other, key, pointKey, i, x, y, series = this,
                    xData = series.processedXData,
                    yData = series.processedYData,
                    stackedYData = [],
                    yDataLength = yData.length,
                    seriesOptions = series.options,
                    threshold = seriesOptions.threshold,
                    stackOption = seriesOptions.stack,
                    stacking = seriesOptions.stacking,
                    stackKey = series.stackKey,
                    negKey = "-" + stackKey,
                    negStacks = series.negStacks,
                    yAxis = series.yAxis,
                    stacks = yAxis.stacks,
                    oldStacks = yAxis.oldStacks;
                for (i = 0; yDataLength > i; i++) x = xData[i], y = yData[i], pointKey = series.index + "," + i, isNegative = negStacks && threshold > y, key = isNegative ? negKey : stackKey, stacks[key] || (stacks[key] = {}), stacks[key][x] || (oldStacks[key] && oldStacks[key][x] ? (stacks[key][x] = oldStacks[key][x], stacks[key][x].total = null) : stacks[key][x] = new StackItem(yAxis, yAxis.options.stackLabels, isNegative, x, stackOption)), stack = stacks[key][x], stack.points[pointKey] = [stack.cum || 0], "percent" === stacking ? (other = isNegative ? stackKey : negKey, negStacks && stacks[other] && stacks[other][x] ? (other = stacks[other][x], stack.total = other.total = mathMax(other.total, stack.total) + mathAbs(y) || 0) : stack.total = correctFloat(stack.total + (mathAbs(y) || 0))) : stack.total = correctFloat(stack.total + (y || 0)), stack.cum = (stack.cum || 0) + (y || 0), stack.points[pointKey].push(stack.cum), stackedYData[i] = stack.cum;
                "percent" === stacking && (yAxis.usePercentage = !0), this.stackedYData = stackedYData, yAxis.oldStacks = {}
            }
        }, Series.prototype.setPercentStacks = function() {
            var series = this,
                stackKey = series.stackKey,
                stacks = series.yAxis.stacks,
                processedXData = series.processedXData;
            each([stackKey, "-" + stackKey], function(key) {
                for (var x, stack, pointExtremes, totalFactor, i = processedXData.length; i--;) x = processedXData[i], stack = stacks[key] && stacks[key][x], pointExtremes = stack && stack.points[series.index + "," + i], pointExtremes && (totalFactor = stack.total ? 100 / stack.total : 0, pointExtremes[0] = correctFloat(pointExtremes[0] * totalFactor), pointExtremes[1] = correctFloat(pointExtremes[1] * totalFactor), series.stackedYData[i] = pointExtremes[1])
            })
        }, extend(Chart.prototype, {
            addSeries: function(options, redraw, animation) {
                var series, chart = this;
                return options && (redraw = pick(redraw, !0), fireEvent(chart, "addSeries", {
                    options: options
                }, function() {
                    series = chart.initSeries(options), chart.isDirtyLegend = !0, chart.linkSeries(), redraw && chart.redraw(animation)
                })), series
            },
            addAxis: function(options, isX, redraw, animation) {
                var axis, key = isX ? "xAxis" : "yAxis",
                    chartOptions = this.options;
                axis = new Axis(this, merge(options, {
                    index: this[key].length,
                    isX: isX
                })), chartOptions[key] = splat(chartOptions[key] || {}), chartOptions[key].push(options), pick(redraw, !0) && this.redraw(animation)
            },
            showLoading: function(str) {
                var chart = this,
                    options = chart.options,
                    loadingDiv = chart.loadingDiv,
                    loadingOptions = options.loading,
                    setLoadingSize = function() {
                        loadingDiv && css(loadingDiv, {
                            left: chart.plotLeft + PX,
                            top: chart.plotTop + PX,
                            width: chart.plotWidth + PX,
                            height: chart.plotHeight + PX
                        })
                    };
                loadingDiv || (chart.loadingDiv = loadingDiv = createElement(DIV, {
                    className: PREFIX + "loading"
                }, extend(loadingOptions.style, {
                    zIndex: 10,
                    display: NONE
                }), chart.container), chart.loadingSpan = createElement("span", null, loadingOptions.labelStyle, loadingDiv), addEvent(chart, "redraw", setLoadingSize)), chart.loadingSpan.innerHTML = str || options.lang.loading, chart.loadingShown || (css(loadingDiv, {
                    opacity: 0,
                    display: ""
                }), animate(loadingDiv, {
                    opacity: loadingOptions.style.opacity
                }, {
                    duration: loadingOptions.showDuration || 0
                }), chart.loadingShown = !0), setLoadingSize()
            },
            hideLoading: function() {
                var options = this.options,
                    loadingDiv = this.loadingDiv;
                loadingDiv && animate(loadingDiv, {
                    opacity: 0
                }, {
                    duration: options.loading.hideDuration || 100,
                    complete: function() {
                        css(loadingDiv, {
                            display: NONE
                        })
                    }
                }), this.loadingShown = !1
            }
        }), extend(Point.prototype, {
            update: function(options, redraw, animation) {
                var i, point = this,
                    series = point.series,
                    graphic = point.graphic,
                    data = series.data,
                    chart = series.chart,
                    seriesOptions = series.options;
                redraw = pick(redraw, !0), point.firePointEvent("update", {
                    options: options
                }, function() {
                    point.applyOptions(options), isObject(options) && (series.getAttribs(), graphic && (options && options.marker && options.marker.symbol ? point.graphic = graphic.destroy() : graphic.attr(point.pointAttr[point.state || ""])), options && options.dataLabels && point.dataLabel && (point.dataLabel = point.dataLabel.destroy())), i = inArray(point, data), series.updateParallelArrays(point, i), seriesOptions.data[i] = point.options, series.isDirty = series.isDirtyData = !0, !series.fixedBox && series.hasCartesianSeries && (chart.isDirtyBox = !0), "point" === seriesOptions.legendType && chart.legend.destroyItem(point), redraw && chart.redraw(animation)
                })
            },
            remove: function(redraw, animation) {
                var i, point = this,
                    series = point.series,
                    points = series.points,
                    chart = series.chart,
                    data = series.data;
                setAnimation(animation, chart), redraw = pick(redraw, !0), point.firePointEvent("remove", null, function() {
                    i = inArray(point, data), data.length === points.length && points.splice(i, 1), data.splice(i, 1), series.options.data.splice(i, 1), series.updateParallelArrays(point, "splice", i, 1), point.destroy(), series.isDirty = !0, series.isDirtyData = !0, redraw && chart.redraw()
                })
            }
        }), extend(Series.prototype, {
            addPoint: function(options, redraw, shift, animation) {
                var point, isInTheMiddle, x, i, series = this,
                    seriesOptions = series.options,
                    data = series.data,
                    graph = series.graph,
                    area = series.area,
                    chart = series.chart,
                    names = series.xAxis && series.xAxis.names,
                    currentShift = graph && graph.shift || 0,
                    dataOptions = seriesOptions.data,
                    xData = series.xData;
                if (setAnimation(animation, chart), shift && each([graph, area, series.graphNeg, series.areaNeg], function(shape) {
                        shape && (shape.shift = currentShift + 1)
                    }), area && (area.isArea = !0), redraw = pick(redraw, !0), point = {
                        series: series
                    }, series.pointClass.prototype.applyOptions.apply(point, [options]), x = point.x, i = xData.length, series.requireSorting && x < xData[i - 1])
                    for (isInTheMiddle = !0; i && xData[i - 1] > x;) i--;
                series.updateParallelArrays(point, "splice", i, 0, 0), series.updateParallelArrays(point, i), names && (names[x] = point.name), dataOptions.splice(i, 0, options), isInTheMiddle && (series.data.splice(i, 0, null), series.processData()), "point" === seriesOptions.legendType && series.generatePoints(), shift && (data[0] && data[0].remove ? data[0].remove(!1) : (data.shift(), series.updateParallelArrays(point, "shift"), dataOptions.shift())), series.isDirty = !0, series.isDirtyData = !0, redraw && (series.getAttribs(), chart.redraw())
            },
            remove: function(redraw, animation) {
                var series = this,
                    chart = series.chart;
                redraw = pick(redraw, !0), series.isRemoving || (series.isRemoving = !0, fireEvent(series, "remove", null, function() {
                    series.destroy(), chart.isDirtyLegend = chart.isDirtyBox = !0, chart.linkSeries(), redraw && chart.redraw(animation)
                })), series.isRemoving = !1
            },
            update: function(newOptions, redraw) {
                var n, series = this,
                    chart = this.chart,
                    oldOptions = this.userOptions,
                    oldType = this.type,
                    proto = seriesTypes[oldType].prototype,
                    preserve = ["group", "markerGroup", "dataLabelsGroup"];
                each(preserve, function(prop) {
                    preserve[prop] = series[prop], delete series[prop]
                }), newOptions = merge(oldOptions, {
                    animation: !1,
                    index: this.index,
                    pointStart: this.xData[0]
                }, {
                    data: this.options.data
                }, newOptions), this.remove(!1);
                for (n in proto) proto.hasOwnProperty(n) && (this[n] = UNDEFINED);
                extend(this, seriesTypes[newOptions.type || oldType].prototype), each(preserve, function(prop) {
                    series[prop] = preserve[prop]
                }), this.init(chart, newOptions), chart.linkSeries(), pick(redraw, !0) && chart.redraw(!1)
            }
        }), extend(Axis.prototype, {
            update: function(newOptions, redraw) {
                var chart = this.chart;
                newOptions = chart.options[this.coll][this.options.index] = merge(this.userOptions, newOptions), this.destroy(!0), this._addedPlotLB = UNDEFINED, this.init(chart, extend(newOptions, {
                    events: UNDEFINED
                })), chart.isDirtyBox = !0, pick(redraw, !0) && chart.redraw()
            },
            remove: function(redraw) {
                for (var chart = this.chart, key = this.coll, axisSeries = this.series, i = axisSeries.length; i--;) axisSeries[i] && axisSeries[i].remove(!1);
                erase(chart.axes, this), erase(chart[key], this), chart.options[key].splice(this.options.index, 1), each(chart[key], function(axis, i) {
                    axis.options.index = i
                }), this.destroy(), chart.isDirtyBox = !0, pick(redraw, !0) && chart.redraw()
            },
            setTitle: function(newTitleOptions, redraw) {
                this.update({
                    title: newTitleOptions
                }, redraw)
            },
            setCategories: function(categories, redraw) {
                this.update({
                    categories: categories
                }, redraw)
            }
        });
        var LineSeries = extendClass(Series);
        seriesTypes.line = LineSeries, defaultPlotOptions.area = merge(defaultSeriesOptions, {
            threshold: 0
        });
        var AreaSeries = extendClass(Series, {
            type: "area",
            getSegments: function() {
                var plotX, plotY, i, x, series = this,
                    segments = [],
                    segment = [],
                    keys = [],
                    xAxis = this.xAxis,
                    yAxis = this.yAxis,
                    stack = yAxis.stacks[this.stackKey],
                    pointMap = {},
                    points = this.points,
                    connectNulls = this.options.connectNulls;
                if (this.options.stacking && !this.cropped) {
                    for (i = 0; i < points.length; i++) pointMap[points[i].x] = points[i];
                    for (x in stack) null !== stack[x].total && keys.push(+x);
                    keys.sort(function(a, b) {
                        return a - b
                    }), each(keys, function(x) {
                        var stackPoint, y = 0;
                        if (!connectNulls || pointMap[x] && null !== pointMap[x].y)
                            if (pointMap[x]) segment.push(pointMap[x]);
                            else {
                                for (i = series.index; i <= yAxis.series.length; i++)
                                    if (stackPoint = stack[x].points[i + "," + x]) {
                                        y = stackPoint[1];
                                        break
                                    }
                                plotX = xAxis.translate(x), plotY = yAxis.toPixels(y, !0), segment.push({
                                    y: null,
                                    plotX: plotX,
                                    clientX: plotX,
                                    plotY: plotY,
                                    yBottom: plotY,
                                    onMouseOver: noop
                                })
                            }
                    }), segment.length && segments.push(segment)
                } else Series.prototype.getSegments.call(this), segments = this.segments;
                this.segments = segments
            },
            getSegmentPath: function(segment) {
                var i, yBottom, segmentPath = Series.prototype.getSegmentPath.call(this, segment),
                    areaSegmentPath = [].concat(segmentPath),
                    options = this.options,
                    segLength = segmentPath.length,
                    translatedThreshold = this.yAxis.getThreshold(options.threshold);
                if (3 === segLength && areaSegmentPath.push(L, segmentPath[1], segmentPath[2]), options.stacking && !this.closedStacks)
                    for (i = segment.length - 1; i >= 0; i--) yBottom = pick(segment[i].yBottom, translatedThreshold), i < segment.length - 1 && options.step && areaSegmentPath.push(segment[i + 1].plotX, yBottom), areaSegmentPath.push(segment[i].plotX, yBottom);
                else this.closeSegment(areaSegmentPath, segment, translatedThreshold);
                return this.areaPath = this.areaPath.concat(areaSegmentPath), segmentPath
            },
            closeSegment: function(path, segment, translatedThreshold) {
                path.push(L, segment[segment.length - 1].plotX, translatedThreshold, L, segment[0].plotX, translatedThreshold)
            },
            drawGraph: function() {
                this.areaPath = [], Series.prototype.drawGraph.apply(this);
                var series = this,
                    areaPath = this.areaPath,
                    options = this.options,
                    negativeColor = options.negativeColor,
                    negativeFillColor = options.negativeFillColor,
                    props = [
                        ["area", this.color, options.fillColor]
                    ];
                (negativeColor || negativeFillColor) && props.push(["areaNeg", negativeColor, negativeFillColor]), each(props, function(prop) {
                    var areaKey = prop[0],
                        area = series[areaKey];
                    area ? area.animate({
                        d: areaPath
                    }) : series[areaKey] = series.chart.renderer.path(areaPath).attr({
                        fill: pick(prop[2], Color(prop[1]).setOpacity(pick(options.fillOpacity, .75)).get()),
                        zIndex: 0
                    }).add(series.group)
                })
            },
            drawLegendSymbol: LegendSymbolMixin.drawRectangle
        });
        seriesTypes.area = AreaSeries, defaultPlotOptions.spline = merge(defaultSeriesOptions);
        var SplineSeries = extendClass(Series, {
            type: "spline",
            getPointSpline: function(segment, point, i) {
                var leftContX, leftContY, rightContX, rightContY, ret, smoothing = 1.5,
                    denom = smoothing + 1,
                    plotX = point.plotX,
                    plotY = point.plotY,
                    lastPoint = segment[i - 1],
                    nextPoint = segment[i + 1];
                if (lastPoint && nextPoint) {
                    var correction, lastX = lastPoint.plotX,
                        lastY = lastPoint.plotY,
                        nextX = nextPoint.plotX,
                        nextY = nextPoint.plotY;
                    leftContX = (smoothing * plotX + lastX) / denom, leftContY = (smoothing * plotY + lastY) / denom, rightContX = (smoothing * plotX + nextX) / denom, rightContY = (smoothing * plotY + nextY) / denom, correction = (rightContY - leftContY) * (rightContX - plotX) / (rightContX - leftContX) + plotY - rightContY, leftContY += correction, rightContY += correction, leftContY > lastY && leftContY > plotY ? (leftContY = mathMax(lastY, plotY), rightContY = 2 * plotY - leftContY) : lastY > leftContY && plotY > leftContY && (leftContY = mathMin(lastY, plotY), rightContY = 2 * plotY - leftContY), rightContY > nextY && rightContY > plotY ? (rightContY = mathMax(nextY, plotY), leftContY = 2 * plotY - rightContY) : nextY > rightContY && plotY > rightContY && (rightContY = mathMin(nextY, plotY), leftContY = 2 * plotY - rightContY), point.rightContX = rightContX, point.rightContY = rightContY
                }
                return i ? (ret = ["C", lastPoint.rightContX || lastPoint.plotX, lastPoint.rightContY || lastPoint.plotY, leftContX || plotX, leftContY || plotY, plotX, plotY], lastPoint.rightContX = lastPoint.rightContY = null) : ret = [M, plotX, plotY], ret
            }
        });
        seriesTypes.spline = SplineSeries, defaultPlotOptions.areaspline = merge(defaultPlotOptions.area);
        var areaProto = AreaSeries.prototype,
            AreaSplineSeries = extendClass(SplineSeries, {
                type: "areaspline",
                closedStacks: !0,
                getSegmentPath: areaProto.getSegmentPath,
                closeSegment: areaProto.closeSegment,
                drawGraph: areaProto.drawGraph,
                drawLegendSymbol: LegendSymbolMixin.drawRectangle
            });
        seriesTypes.areaspline = AreaSplineSeries, defaultPlotOptions.column = merge(defaultSeriesOptions, {
            borderColor: "#FFFFFF",
            borderRadius: 0,
            groupPadding: .2,
            marker: null,
            pointPadding: .1,
            minPointLength: 0,
            cropThreshold: 50,
            pointRange: null,
            states: {
                hover: {
                    brightness: .1,
                    shadow: !1,
                    halo: !1
                },
                select: {
                    color: "#C0C0C0",
                    borderColor: "#000000",
                    shadow: !1
                }
            },
            dataLabels: {
                align: null,
                verticalAlign: null,
                y: null
            },
            stickyTracking: !1,
            tooltip: {
                distance: 6
            },
            threshold: 0
        });
        var ColumnSeries = extendClass(Series, {
            type: "column",
            pointAttrToOptions: {
                stroke: "borderColor",
                fill: "color",
                r: "borderRadius"
            },
            cropShoulder: 0,
            trackerGroups: ["group", "dataLabelsGroup"],
            negStacks: !0,
            init: function() {
                Series.prototype.init.apply(this, arguments);
                var series = this,
                    chart = series.chart;
                chart.hasRendered && each(chart.series, function(otherSeries) {
                    otherSeries.type === series.type && (otherSeries.isDirty = !0)
                })
            },
            getColumnMetrics: function() {
                var stackKey, columnIndex, series = this,
                    options = series.options,
                    xAxis = series.xAxis,
                    yAxis = series.yAxis,
                    reversedXAxis = xAxis.reversed,
                    stackGroups = {},
                    columnCount = 0;
                options.grouping === !1 ? columnCount = 1 : each(series.chart.series, function(otherSeries) {
                    var otherOptions = otherSeries.options,
                        otherYAxis = otherSeries.yAxis;
                    otherSeries.type === series.type && otherSeries.visible && yAxis.len === otherYAxis.len && yAxis.pos === otherYAxis.pos && (otherOptions.stacking ? (stackKey = otherSeries.stackKey, stackGroups[stackKey] === UNDEFINED && (stackGroups[stackKey] = columnCount++), columnIndex = stackGroups[stackKey]) : otherOptions.grouping !== !1 && (columnIndex = columnCount++), otherSeries.columnIndex = columnIndex)
                });
                var categoryWidth = mathMin(mathAbs(xAxis.transA) * (xAxis.ordinalSlope || options.pointRange || xAxis.closestPointRange || xAxis.tickInterval || 1), xAxis.len),
                    groupPadding = categoryWidth * options.groupPadding,
                    groupWidth = categoryWidth - 2 * groupPadding,
                    pointOffsetWidth = groupWidth / columnCount,
                    optionPointWidth = options.pointWidth,
                    pointPadding = defined(optionPointWidth) ? (pointOffsetWidth - optionPointWidth) / 2 : pointOffsetWidth * options.pointPadding,
                    pointWidth = pick(optionPointWidth, pointOffsetWidth - 2 * pointPadding),
                    colIndex = (reversedXAxis ? columnCount - (series.columnIndex || 0) : series.columnIndex) || 0,
                    pointXOffset = pointPadding + (groupPadding + colIndex * pointOffsetWidth - categoryWidth / 2) * (reversedXAxis ? -1 : 1);
                return series.columnMetrics = {
                    width: pointWidth,
                    offset: pointXOffset
                }
            },
            translate: function() {
                var series = this,
                    chart = series.chart,
                    options = series.options,
                    borderWidth = series.borderWidth = pick(options.borderWidth, series.activePointCount > .5 * series.xAxis.len ? 0 : 1),
                    yAxis = series.yAxis,
                    threshold = options.threshold,
                    translatedThreshold = series.translatedThreshold = yAxis.getThreshold(threshold),
                    minPointLength = pick(options.minPointLength, 5),
                    metrics = series.getColumnMetrics(),
                    pointWidth = metrics.width,
                    seriesBarW = series.barW = mathMax(pointWidth, 1 + 2 * borderWidth),
                    pointXOffset = series.pointXOffset = metrics.offset,
                    xCrisp = -(borderWidth % 2 ? .5 : 0),
                    yCrisp = borderWidth % 2 ? .5 : 1;
                chart.renderer.isVML && chart.inverted && (yCrisp += 1), options.pointPadding && (seriesBarW = mathCeil(seriesBarW)), Series.prototype.translate.apply(series), each(series.points, function(point) {
                    var right, bottom, fromTop, yBottom = pick(point.yBottom, translatedThreshold),
                        plotY = mathMin(mathMax(-999 - yBottom, point.plotY), yAxis.len + 999 + yBottom),
                        barX = point.plotX + pointXOffset,
                        barW = seriesBarW,
                        barY = mathMin(plotY, yBottom),
                        barH = mathMax(plotY, yBottom) - barY;
                    mathAbs(barH) < minPointLength && minPointLength && (barH = minPointLength, barY = mathRound(mathAbs(barY - translatedThreshold) > minPointLength ? yBottom - minPointLength : translatedThreshold - (yAxis.translate(point.y, 0, 1, 0, 1) <= translatedThreshold ? minPointLength : 0))), point.barX = barX, point.pointWidth = pointWidth, point.tooltipPos = chart.inverted ? [yAxis.len - plotY, series.xAxis.len - barX - barW / 2] : [barX + barW / 2, plotY], right = mathRound(barX + barW) + xCrisp, barX = mathRound(barX) + xCrisp, barW = right - barX, fromTop = mathAbs(barY) < .5, bottom = mathRound(barY + barH) + yCrisp, barY = mathRound(barY) + yCrisp, barH = bottom - barY, fromTop && (barY -= 1, barH += 1), point.shapeType = "rect", point.shapeArgs = {
                        x: barX,
                        y: barY,
                        width: barW,
                        height: barH
                    }
                })
            },
            getSymbol: noop,
            drawLegendSymbol: LegendSymbolMixin.drawRectangle,
            drawGraph: noop,
            drawPoints: function() {
                var shapeArgs, pointAttr, series = this,
                    chart = this.chart,
                    options = series.options,
                    renderer = chart.renderer,
                    animationLimit = options.animationLimit || 250;
                each(series.points, function(point) {
                    var borderAttr, plotY = point.plotY,
                        graphic = point.graphic;
                    plotY === UNDEFINED || isNaN(plotY) || null === point.y ? graphic && (point.graphic = graphic.destroy()) : (shapeArgs = point.shapeArgs, borderAttr = defined(series.borderWidth) ? {
                        "stroke-width": series.borderWidth
                    } : {}, pointAttr = point.pointAttr[point.selected ? SELECT_STATE : NORMAL_STATE] || series.pointAttr[NORMAL_STATE], graphic ? (stop(graphic), graphic.attr(borderAttr)[chart.pointCount < animationLimit ? "animate" : "attr"](merge(shapeArgs))) : point.graphic = graphic = renderer[point.shapeType](shapeArgs).attr(pointAttr).attr(borderAttr).add(series.group).shadow(options.shadow, null, options.stacking && !options.borderRadius))
                })
            },
            animate: function(init) {
                var translatedThreshold, series = this,
                    yAxis = this.yAxis,
                    options = series.options,
                    inverted = this.chart.inverted,
                    attr = {};
                hasSVG && (init ? (attr.scaleY = .001, translatedThreshold = mathMin(yAxis.pos + yAxis.len, mathMax(yAxis.pos, yAxis.toPixels(options.threshold))), inverted ? attr.translateX = translatedThreshold - yAxis.len : attr.translateY = translatedThreshold, series.group.attr(attr)) : (attr.scaleY = 1, attr[inverted ? "translateX" : "translateY"] = yAxis.pos, series.group.animate(attr, series.options.animation), series.animate = null))
            },
            remove: function() {
                var series = this,
                    chart = series.chart;
                chart.hasRendered && each(chart.series, function(otherSeries) {
                    otherSeries.type === series.type && (otherSeries.isDirty = !0)
                }), Series.prototype.remove.apply(series, arguments)
            }
        });
        seriesTypes.column = ColumnSeries, defaultPlotOptions.bar = merge(defaultPlotOptions.column);
        var BarSeries = extendClass(ColumnSeries, {
            type: "bar",
            inverted: !0
        });
        seriesTypes.bar = BarSeries, defaultPlotOptions.scatter = merge(defaultSeriesOptions, {
            lineWidth: 0,
            tooltip: {
                headerFormat: '<span style="color:{series.color}">â—</span> <span style="font-size: 10px;"> {series.name}</span><br/>',
                pointFormat: "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>"
            },
            stickyTracking: !1
        });
        var ScatterSeries = extendClass(Series, {
            type: "scatter",
            sorted: !1,
            requireSorting: !1,
            noSharedTooltip: !0,
            trackerGroups: ["markerGroup", "dataLabelsGroup"],
            takeOrdinalPosition: !1,
            singularTooltips: !0,
            drawGraph: function() {
                this.options.lineWidth && Series.prototype.drawGraph.call(this)
            }
        });
        seriesTypes.scatter = ScatterSeries, defaultPlotOptions.pie = merge(defaultSeriesOptions, {
            borderColor: "#FFFFFF",
            borderWidth: 1,
            center: [null, null],
            clip: !1,
            colorByPoint: !0,
            dataLabels: {
                distance: 30,
                enabled: !0,
                formatter: function() {
                    return this.point.name
                }
            },
            ignoreHiddenPoint: !0,
            legendType: "point",
            marker: null,
            size: null,
            showInLegend: !1,
            slicedOffset: 10,
            states: {
                hover: {
                    brightness: .1,
                    shadow: !1
                }
            },
            stickyTracking: !1,
            tooltip: {
                followPointer: !0
            }
        });
        var PiePoint = extendClass(Point, {
                init: function() {
                    Point.prototype.init.apply(this, arguments);
                    var toggleSlice, point = this;
                    return point.y < 0 && (point.y = null), extend(point, {
                        visible: point.visible !== !1,
                        name: pick(point.name, "Slice")
                    }), toggleSlice = function(e) {
                        point.slice("select" === e.type)
                    }, addEvent(point, "select", toggleSlice), addEvent(point, "unselect", toggleSlice), point
                },
                setVisible: function(vis) {
                    var point = this,
                        series = point.series,
                        chart = series.chart;
                    point.visible = point.options.visible = vis = vis === UNDEFINED ? !point.visible : vis, series.options.data[inArray(point, series.data)] = point.options, each(["graphic", "dataLabel", "connector", "shadowGroup"], function(key) {
                        point[key] && point[key][vis ? "show" : "hide"](!0)
                    }), point.legendItem && chart.legend.colorizeItem(point, vis), !series.isDirty && series.options.ignoreHiddenPoint && (series.isDirty = !0, chart.redraw())
                },
                slice: function(sliced, redraw, animation) {
                    var translation, point = this,
                        series = point.series,
                        chart = series.chart;
                    setAnimation(animation, chart), redraw = pick(redraw, !0), point.sliced = point.options.sliced = sliced = defined(sliced) ? sliced : !point.sliced, series.options.data[inArray(point, series.data)] = point.options, translation = sliced ? point.slicedTranslation : {
                        translateX: 0,
                        translateY: 0
                    }, point.graphic.animate(translation), point.shadowGroup && point.shadowGroup.animate(translation)
                },
                haloPath: function(size) {
                    var shapeArgs = this.shapeArgs,
                        chart = this.series.chart;
                    return this.sliced || !this.visible ? [] : this.series.chart.renderer.symbols.arc(chart.plotLeft + shapeArgs.x, chart.plotTop + shapeArgs.y, shapeArgs.r + size, shapeArgs.r + size, {
                        innerR: this.shapeArgs.r,
                        start: shapeArgs.start,
                        end: shapeArgs.end
                    })
                }
            }),
            PieSeries = {
                type: "pie",
                isCartesian: !1,
                pointClass: PiePoint,
                requireSorting: !1,
                noSharedTooltip: !0,
                trackerGroups: ["group", "dataLabelsGroup"],
                axisTypes: [],
                pointAttrToOptions: {
                    stroke: "borderColor",
                    "stroke-width": "borderWidth",
                    fill: "color"
                },
                singularTooltips: !0,
                getColor: noop,
                animate: function(init) {
                    var series = this,
                        points = series.points,
                        startAngleRad = series.startAngleRad;
                    init || (each(points, function(point) {
                        var graphic = point.graphic,
                            args = point.shapeArgs;
                        graphic && (graphic.attr({
                            r: series.center[3] / 2,
                            start: startAngleRad,
                            end: startAngleRad
                        }), graphic.animate({
                            r: args.r,
                            start: args.start,
                            end: args.end
                        }, series.options.animation))
                    }), series.animate = null)
                },
                setData: function(data, redraw, animation, updatePoints) {
                    Series.prototype.setData.call(this, data, !1, animation, updatePoints), this.processData(), this.generatePoints(), pick(redraw, !0) && this.chart.redraw(animation)
                },
                generatePoints: function() {
                    var i, points, len, point, total = 0,
                        ignoreHiddenPoint = this.options.ignoreHiddenPoint;
                    for (Series.prototype.generatePoints.call(this), points = this.points, len = points.length, i = 0; len > i; i++) point = points[i], total += ignoreHiddenPoint && !point.visible ? 0 : point.y;
                    for (this.total = total, i = 0; len > i; i++) point = points[i], point.percentage = total > 0 ? point.y / total * 100 : 0, point.total = total
                },
                translate: function(positions) {
                    this.generatePoints();
                    var start, end, angle, radiusX, radiusY, i, point, series = this,
                        cumulative = 0,
                        precision = 1e3,
                        options = series.options,
                        slicedOffset = options.slicedOffset,
                        connectorOffset = slicedOffset + options.borderWidth,
                        startAngle = options.startAngle || 0,
                        startAngleRad = series.startAngleRad = mathPI / 180 * (startAngle - 90),
                        endAngleRad = series.endAngleRad = mathPI / 180 * (pick(options.endAngle, startAngle + 360) - 90),
                        circ = endAngleRad - startAngleRad,
                        points = series.points,
                        labelDistance = options.dataLabels.distance,
                        ignoreHiddenPoint = options.ignoreHiddenPoint,
                        len = points.length;
                    for (positions || (series.center = positions = series.getCenter()), series.getX = function(y, left) {
                            return angle = math.asin(mathMin((y - positions[1]) / (positions[2] / 2 + labelDistance), 1)), positions[0] + (left ? -1 : 1) * mathCos(angle) * (positions[2] / 2 + labelDistance)
                        }, i = 0; len > i; i++) point = points[i], start = startAngleRad + cumulative * circ, (!ignoreHiddenPoint || point.visible) && (cumulative += point.percentage / 100), end = startAngleRad + cumulative * circ, point.shapeType = "arc", point.shapeArgs = {
                        x: positions[0],
                        y: positions[1],
                        r: positions[2] / 2,
                        innerR: positions[3] / 2,
                        start: mathRound(start * precision) / precision,
                        end: mathRound(end * precision) / precision
                    }, angle = (end + start) / 2, angle > 1.5 * mathPI ? angle -= 2 * mathPI : -mathPI / 2 > angle && (angle += 2 * mathPI), point.slicedTranslation = {
                        translateX: mathRound(mathCos(angle) * slicedOffset),
                        translateY: mathRound(mathSin(angle) * slicedOffset)
                    }, radiusX = mathCos(angle) * positions[2] / 2, radiusY = mathSin(angle) * positions[2] / 2, point.tooltipPos = [positions[0] + .7 * radiusX, positions[1] + .7 * radiusY], point.half = -mathPI / 2 > angle || angle > mathPI / 2 ? 1 : 0, point.angle = angle, connectorOffset = mathMin(connectorOffset, labelDistance / 2), point.labelPos = [positions[0] + radiusX + mathCos(angle) * labelDistance, positions[1] + radiusY + mathSin(angle) * labelDistance, positions[0] + radiusX + mathCos(angle) * connectorOffset, positions[1] + radiusY + mathSin(angle) * connectorOffset, positions[0] + radiusX, positions[1] + radiusY, 0 > labelDistance ? "center" : point.half ? "right" : "left", angle]
                },
                drawGraph: null,
                drawPoints: function() {
                    var groupTranslation, graphic, shadowGroup, shapeArgs, series = this,
                        chart = series.chart,
                        renderer = chart.renderer,
                        shadow = series.options.shadow;
                    shadow && !series.shadowGroup && (series.shadowGroup = renderer.g("shadow").add(series.group)), each(series.points, function(point) {
                        graphic = point.graphic, shapeArgs = point.shapeArgs, shadowGroup = point.shadowGroup, shadow && !shadowGroup && (shadowGroup = point.shadowGroup = renderer.g("shadow").add(series.shadowGroup)), groupTranslation = point.sliced ? point.slicedTranslation : {
                            translateX: 0,
                            translateY: 0
                        }, shadowGroup && shadowGroup.attr(groupTranslation), graphic ? graphic.animate(extend(shapeArgs, groupTranslation)) : point.graphic = graphic = renderer[point.shapeType](shapeArgs).setRadialReference(series.center).attr(point.pointAttr[point.selected ? SELECT_STATE : NORMAL_STATE]).attr({
                            "stroke-linejoin": "round"
                        }).attr(groupTranslation).add(series.group).shadow(shadow, shadowGroup), void 0 !== point.visible && point.setVisible(point.visible)
                    })
                },
                sortByAngle: function(points, sign) {
                    points.sort(function(a, b) {
                        return void 0 !== a.angle && (b.angle - a.angle) * sign
                    })
                },
                drawLegendSymbol: LegendSymbolMixin.drawRectangle,
                getCenter: CenteredSeriesMixin.getCenter,
                getSymbol: noop
            };
        PieSeries = extendClass(Series, PieSeries), seriesTypes.pie = PieSeries, Series.prototype.drawDataLabels = function() {
            var pointOptions, generalOptions, str, dataLabelsGroup, series = this,
                seriesOptions = series.options,
                cursor = seriesOptions.cursor,
                options = seriesOptions.dataLabels,
                points = series.points;
            (options.enabled || series._hasPointLabels) && (series.dlProcessOptions && series.dlProcessOptions(options), dataLabelsGroup = series.plotGroup("dataLabelsGroup", "data-labels", options.defer ? HIDDEN : VISIBLE, options.zIndex || 6), !series.hasRendered && pick(options.defer, !0) && (dataLabelsGroup.attr({
                opacity: 0
            }), addEvent(series, "afterAnimate", function() {
                series.visible && dataLabelsGroup.show(), dataLabelsGroup[seriesOptions.animation ? "animate" : "attr"]({
                    opacity: 1
                }, {
                    duration: 200
                })
            })), generalOptions = options, each(points, function(point) {
                var enabled, labelConfig, attr, name, rotation, dataLabel = point.dataLabel,
                    connector = point.connector,
                    isNew = !0;
                if (pointOptions = point.options && point.options.dataLabels, enabled = pick(pointOptions && pointOptions.enabled, generalOptions.enabled), dataLabel && !enabled) point.dataLabel = dataLabel.destroy();
                else if (enabled) {
                    if (options = merge(generalOptions, pointOptions), rotation = options.rotation, labelConfig = point.getLabelConfig(), str = options.format ? format(options.format, labelConfig) : options.formatter.call(labelConfig, options), options.style.color = pick(options.color, options.style.color, series.color, "black"), dataLabel) defined(str) ? (dataLabel.attr({
                        text: str
                    }), isNew = !1) : (point.dataLabel = dataLabel = dataLabel.destroy(), connector && (point.connector = connector.destroy()));
                    else if (defined(str)) {
                        attr = {
                            fill: options.backgroundColor,
                            stroke: options.borderColor,
                            "stroke-width": options.borderWidth,
                            r: options.borderRadius || 0,
                            rotation: rotation,
                            padding: options.padding,
                            zIndex: 1
                        };
                        for (name in attr) attr[name] === UNDEFINED && delete attr[name];
                        dataLabel = point.dataLabel = series.chart.renderer[rotation ? "text" : "label"](str, 0, -999, null, null, null, options.useHTML).attr(attr).css(extend(options.style, cursor && {
                            cursor: cursor
                        })).add(dataLabelsGroup).shadow(options.shadow)
                    }
                    dataLabel && series.alignDataLabel(point, dataLabel, options, null, isNew)
                }
            }))
        }, Series.prototype.alignDataLabel = function(point, dataLabel, options, alignTo, isNew) {
            var alignAttr, chart = this.chart,
                inverted = chart.inverted,
                plotX = pick(point.plotX, -999),
                plotY = pick(point.plotY, -999),
                bBox = dataLabel.getBBox(),
                visible = this.visible && (point.series.forceDL || chart.isInsidePlot(plotX, mathRound(plotY), inverted) || alignTo && chart.isInsidePlot(plotX, inverted ? alignTo.x + 1 : alignTo.y + alignTo.height - 1, inverted));
            visible && (alignTo = extend({
                x: inverted ? chart.plotWidth - plotY : plotX,
                y: mathRound(inverted ? chart.plotHeight - plotX : plotY),
                width: 0,
                height: 0
            }, alignTo), extend(options, {
                width: bBox.width,
                height: bBox.height
            }), options.rotation ? dataLabel[isNew ? "attr" : "animate"]({
                x: alignTo.x + options.x + alignTo.width / 2,
                y: alignTo.y + options.y + alignTo.height / 2
            }).attr({
                align: options.align
            }) : (dataLabel.align(options, null, alignTo), alignAttr = dataLabel.alignAttr, "justify" === pick(options.overflow, "justify") ? this.justifyDataLabel(dataLabel, options, alignAttr, bBox, alignTo, isNew) : pick(options.crop, !0) && (visible = chart.isInsidePlot(alignAttr.x, alignAttr.y) && chart.isInsidePlot(alignAttr.x + bBox.width, alignAttr.y + bBox.height)))), visible || (dataLabel.attr({
                y: -999
            }), dataLabel.placed = !1)
        }, Series.prototype.justifyDataLabel = function(dataLabel, options, alignAttr, bBox, alignTo, isNew) {
            var off, justified, chart = this.chart,
                align = options.align,
                verticalAlign = options.verticalAlign;
            off = alignAttr.x, 0 > off && ("right" === align ? options.align = "left" : options.x = -off, justified = !0), off = alignAttr.x + bBox.width, off > chart.plotWidth && ("left" === align ? options.align = "right" : options.x = chart.plotWidth - off, justified = !0), off = alignAttr.y, 0 > off && ("bottom" === verticalAlign ? options.verticalAlign = "top" : options.y = -off, justified = !0), off = alignAttr.y + bBox.height, off > chart.plotHeight && ("top" === verticalAlign ? options.verticalAlign = "bottom" : options.y = chart.plotHeight - off, justified = !0), justified && (dataLabel.placed = !isNew, dataLabel.align(options, null, alignTo))
        }, seriesTypes.pie && (seriesTypes.pie.prototype.drawDataLabels = function() {
            var point, connector, connectorPath, dataLabel, dataLabelWidth, labelPos, labelHeight, x, y, visibility, rankArr, i, j, series = this,
                data = series.data,
                chart = series.chart,
                options = series.options.dataLabels,
                connectorPadding = pick(options.connectorPadding, 10),
                connectorWidth = pick(options.connectorWidth, 1),
                plotWidth = chart.plotWidth,
                plotHeight = chart.plotHeight,
                softConnector = pick(options.softConnector, !0),
                distanceOption = options.distance,
                seriesCenter = series.center,
                radius = seriesCenter[2] / 2,
                centerY = seriesCenter[1],
                outside = distanceOption > 0,
                halves = [
                    [],
                    []
                ],
                overflow = [0, 0, 0, 0],
                sort = function(a, b) {
                    return b.y - a.y
                };
            if (series.visible && (options.enabled || series._hasPointLabels)) {
                for (Series.prototype.drawDataLabels.apply(series), each(data, function(point) {
                        point.dataLabel && point.visible && halves[point.half].push(point)
                    }), i = 2; i--;) {
                    var slotsLength, pos, bottom, slotIndex, slots = [],
                        usedSlots = [],
                        points = halves[i],
                        length = points.length;
                    if (length) {
                        for (series.sortByAngle(points, i - .5), j = labelHeight = 0; !labelHeight && points[j];) labelHeight = points[j] && points[j].dataLabel && (points[j].dataLabel.getBBox().height || 21), j++;
                        if (distanceOption > 0) {
                            for (bottom = mathMin(centerY + radius + distanceOption, chart.plotHeight), pos = mathMax(0, centerY - radius - distanceOption); bottom >= pos; pos += labelHeight) slots.push(pos);
                            if (slotsLength = slots.length, length > slotsLength) {
                                for (rankArr = [].concat(points), rankArr.sort(sort), j = length; j--;) rankArr[j].rank = j;
                                for (j = length; j--;) points[j].rank >= slotsLength && points.splice(j, 1);
                                length = points.length
                            }
                            for (j = 0; length > j; j++) {
                                point = points[j], labelPos = point.labelPos;
                                var distance, slotI, closest = 9999;
                                for (slotI = 0; slotsLength > slotI; slotI++) distance = mathAbs(slots[slotI] - labelPos[1]), closest > distance && (closest = distance, slotIndex = slotI);
                                if (j > slotIndex && null !== slots[j]) slotIndex = j;
                                else if (length - j + slotIndex > slotsLength && null !== slots[j])
                                    for (slotIndex = slotsLength - length + j; null === slots[slotIndex];) slotIndex++;
                                else
                                    for (; null === slots[slotIndex];) slotIndex++;
                                usedSlots.push({
                                    i: slotIndex,
                                    y: slots[slotIndex]
                                }), slots[slotIndex] = null
                            }
                            usedSlots.sort(sort)
                        }
                        for (j = 0; length > j; j++) {
                            var slot, naturalY;
                            point = points[j], labelPos = point.labelPos, dataLabel = point.dataLabel, visibility = point.visible === !1 ? HIDDEN : VISIBLE, naturalY = labelPos[1], distanceOption > 0 ? (slot = usedSlots.pop(), slotIndex = slot.i, y = slot.y, (naturalY > y && null !== slots[slotIndex + 1] || y > naturalY && null !== slots[slotIndex - 1]) && (y = mathMin(mathMax(0, naturalY), chart.plotHeight))) : y = naturalY, x = options.justify ? seriesCenter[0] + (i ? -1 : 1) * (radius + distanceOption) : series.getX(y === centerY - radius - distanceOption || y === centerY + radius + distanceOption ? naturalY : y, i), dataLabel._attr = {
                                visibility: visibility,
                                align: labelPos[6]
                            }, dataLabel._pos = {
                                x: x + options.x + ({
                                    left: connectorPadding,
                                    right: -connectorPadding
                                }[labelPos[6]] || 0),
                                y: y + options.y - 10
                            }, dataLabel.connX = x, dataLabel.connY = y, null === this.options.size && (dataLabelWidth = dataLabel.width, connectorPadding > x - dataLabelWidth ? overflow[3] = mathMax(mathRound(dataLabelWidth - x + connectorPadding), overflow[3]) : x + dataLabelWidth > plotWidth - connectorPadding && (overflow[1] = mathMax(mathRound(x + dataLabelWidth - plotWidth + connectorPadding), overflow[1])), 0 > y - labelHeight / 2 ? overflow[0] = mathMax(mathRound(-y + labelHeight / 2), overflow[0]) : y + labelHeight / 2 > plotHeight && (overflow[2] = mathMax(mathRound(y + labelHeight / 2 - plotHeight), overflow[2])))
                        }
                    }
                }(0 === arrayMax(overflow) || this.verifyDataLabelOverflow(overflow)) && (this.placeDataLabels(), outside && connectorWidth && each(this.points, function(point) {
                    connector = point.connector, labelPos = point.labelPos, dataLabel = point.dataLabel, dataLabel && dataLabel._pos ? (visibility = dataLabel._attr.visibility, x = dataLabel.connX, y = dataLabel.connY, connectorPath = softConnector ? [M, x + ("left" === labelPos[6] ? 5 : -5), y, "C", x, y, 2 * labelPos[2] - labelPos[4], 2 * labelPos[3] - labelPos[5], labelPos[2], labelPos[3], L, labelPos[4], labelPos[5]] : [M, x + ("left" === labelPos[6] ? 5 : -5), y, L, labelPos[2], labelPos[3], L, labelPos[4], labelPos[5]], connector ? (connector.animate({
                        d: connectorPath
                    }), connector.attr("visibility", visibility)) : point.connector = connector = series.chart.renderer.path(connectorPath).attr({
                        "stroke-width": connectorWidth,
                        stroke: options.connectorColor || point.color || "#606060",
                        visibility: visibility
                    }).add(series.dataLabelsGroup)) : connector && (point.connector = connector.destroy())
                }))
            }
        }, seriesTypes.pie.prototype.placeDataLabels = function() {
            each(this.points, function(point) {
                var _pos, dataLabel = point.dataLabel;
                dataLabel && (_pos = dataLabel._pos, _pos ? (dataLabel.attr(dataLabel._attr), dataLabel[dataLabel.moved ? "animate" : "attr"](_pos), dataLabel.moved = !0) : dataLabel && dataLabel.attr({
                    y: -999
                }))
            })
        }, seriesTypes.pie.prototype.alignDataLabel = noop, seriesTypes.pie.prototype.verifyDataLabelOverflow = function(overflow) {
            var ret, center = this.center,
                options = this.options,
                centerOption = options.center,
                minSize = options.minSize || 80,
                newSize = minSize;
            return null !== centerOption[0] ? newSize = mathMax(center[2] - mathMax(overflow[1], overflow[3]), minSize) : (newSize = mathMax(center[2] - overflow[1] - overflow[3], minSize), center[0] += (overflow[3] - overflow[1]) / 2), null !== centerOption[1] ? newSize = mathMax(mathMin(newSize, center[2] - mathMax(overflow[0], overflow[2])), minSize) : (newSize = mathMax(mathMin(newSize, center[2] - overflow[0] - overflow[2]), minSize), center[1] += (overflow[0] - overflow[2]) / 2), newSize < center[2] ? (center[2] = newSize, this.translate(center), each(this.points, function(point) {
                point.dataLabel && (point.dataLabel._pos = null)
            }), this.drawDataLabels && this.drawDataLabels()) : ret = !0, ret
        }), seriesTypes.column && (seriesTypes.column.prototype.alignDataLabel = function(point, dataLabel, options, alignTo, isNew) {
            var chart = this.chart,
                inverted = chart.inverted,
                dlBox = point.dlBox || point.shapeArgs,
                below = point.below || point.plotY > pick(this.translatedThreshold, chart.plotSizeY),
                inside = pick(options.inside, !!this.options.stacking);
            dlBox && (alignTo = merge(dlBox), inverted && (alignTo = {
                x: chart.plotWidth - alignTo.y - alignTo.height,
                y: chart.plotHeight - alignTo.x - alignTo.width,
                width: alignTo.height,
                height: alignTo.width
            }), inside || (inverted ? (alignTo.x += below ? 0 : alignTo.width, alignTo.width = 0) : (alignTo.y += below ? alignTo.height : 0, alignTo.height = 0))), options.align = pick(options.align, !inverted || inside ? "center" : below ? "right" : "left"), options.verticalAlign = pick(options.verticalAlign, inverted || inside ? "middle" : below ? "top" : "bottom"), Series.prototype.alignDataLabel.call(this, point, dataLabel, options, alignTo, isNew)
        });
        var TrackerMixin = Highcharts.TrackerMixin = {
            drawTrackerPoint: function() {
                var series = this,
                    chart = series.chart,
                    pointer = chart.pointer,
                    cursor = series.options.cursor,
                    css = cursor && {
                        cursor: cursor
                    },
                    onMouseOver = function(e) {
                        var point, target = e.target;
                        for (chart.hoverSeries !== series && series.onMouseOver(); target && !point;) point = target.point, target = target.parentNode;
                        point !== UNDEFINED && point !== chart.hoverPoint && point.onMouseOver(e)
                    };
                each(series.points, function(point) {
                    point.graphic && (point.graphic.element.point = point), point.dataLabel && (point.dataLabel.element.point = point)
                }), series._hasTracking || (each(series.trackerGroups, function(key) {
                    series[key] && (series[key].addClass(PREFIX + "tracker").on("mouseover", onMouseOver).on("mouseout", function(e) {
                        pointer.onTrackerMouseOut(e)
                    }).css(css), hasTouch && series[key].on("touchstart", onMouseOver))
                }), series._hasTracking = !0)
            },
            drawTrackerGraph: function() {
                var singlePoint, i, series = this,
                    options = series.options,
                    trackByArea = options.trackByArea,
                    trackerPath = [].concat(trackByArea ? series.areaPath : series.graphPath),
                    trackerPathLength = trackerPath.length,
                    chart = series.chart,
                    pointer = chart.pointer,
                    renderer = chart.renderer,
                    snap = chart.options.tooltip.snap,
                    tracker = series.tracker,
                    cursor = options.cursor,
                    css = cursor && {
                        cursor: cursor
                    },
                    singlePoints = series.singlePoints,
                    onMouseOver = function() {
                        chart.hoverSeries !== series && series.onMouseOver()
                    },
                    TRACKER_FILL = "rgba(192,192,192," + (hasSVG ? 1e-4 : .002) + ")";
                if (trackerPathLength && !trackByArea)
                    for (i = trackerPathLength + 1; i--;) trackerPath[i] === M && trackerPath.splice(i + 1, 0, trackerPath[i + 1] - snap, trackerPath[i + 2], L), (i && trackerPath[i] === M || i === trackerPathLength) && trackerPath.splice(i, 0, L, trackerPath[i - 2] + snap, trackerPath[i - 1]);
                for (i = 0; i < singlePoints.length; i++) singlePoint = singlePoints[i], trackerPath.push(M, singlePoint.plotX - snap, singlePoint.plotY, L, singlePoint.plotX + snap, singlePoint.plotY);
                tracker ? tracker.attr({
                    d: trackerPath
                }) : (series.tracker = renderer.path(trackerPath).attr({
                    "stroke-linejoin": "round",
                    visibility: series.visible ? VISIBLE : HIDDEN,
                    stroke: TRACKER_FILL,
                    fill: trackByArea ? TRACKER_FILL : NONE,
                    "stroke-width": options.lineWidth + (trackByArea ? 0 : 2 * snap),
                    zIndex: 2
                }).add(series.group), each([series.tracker, series.markerGroup], function(tracker) {
                    tracker.addClass(PREFIX + "tracker").on("mouseover", onMouseOver).on("mouseout", function(e) {
                        pointer.onTrackerMouseOut(e)
                    }).css(css), hasTouch && tracker.on("touchstart", onMouseOver)
                }))
            }
        };
        seriesTypes.column && (ColumnSeries.prototype.drawTracker = TrackerMixin.drawTrackerPoint), seriesTypes.pie && (seriesTypes.pie.prototype.drawTracker = TrackerMixin.drawTrackerPoint), seriesTypes.scatter && (ScatterSeries.prototype.drawTracker = TrackerMixin.drawTrackerPoint), extend(Legend.prototype, {
            setItemEvents: function(item, legendItem, useHTML, itemStyle, itemHiddenStyle) {
                var legend = this;
                (useHTML ? legendItem : item.legendGroup).on("mouseover", function() {
                    item.setState(HOVER_STATE), legendItem.css(legend.options.itemHoverStyle)
                }).on("mouseout", function() {
                    legendItem.css(item.visible ? itemStyle : itemHiddenStyle), item.setState()
                }).on("click", function(event) {
                    var strLegendItemClick = "legendItemClick",
                        fnLegendItemClick = function() {
                            item.setVisible()
                        };
                    event = {
                        browserEvent: event
                    }, item.firePointEvent ? item.firePointEvent(strLegendItemClick, event, fnLegendItemClick) : fireEvent(item, strLegendItemClick, event, fnLegendItemClick)
                })
            },
            createCheckboxForItem: function(item) {
                var legend = this;
                item.checkbox = createElement("input", {
                    type: "checkbox",
                    checked: item.selected,
                    defaultChecked: item.selected
                }, legend.options.itemCheckboxStyle, legend.chart.container), addEvent(item.checkbox, "click", function(event) {
                    var target = event.target;
                    fireEvent(item, "checkboxClick", {
                        checked: target.checked
                    }, function() {
                        item.select()
                    })
                })
            }
        }), defaultOptions.legend.itemStyle.cursor = "pointer", extend(Chart.prototype, {
            showResetZoom: function() {
                var chart = this,
                    lang = defaultOptions.lang,
                    btnOptions = chart.options.chart.resetZoomButton,
                    theme = btnOptions.theme,
                    states = theme.states,
                    alignTo = "chart" === btnOptions.relativeTo ? null : "plotBox";
                this.resetZoomButton = chart.renderer.button(lang.resetZoom, null, null, function() {
                    chart.zoomOut()
                }, theme, states && states.hover).attr({
                    align: btnOptions.position.align,
                    title: lang.resetZoomTitle
                }).add().align(btnOptions.position, !1, alignTo)
            },
            zoomOut: function() {
                var chart = this;
                fireEvent(chart, "selection", {
                    resetSelection: !0
                }, function() {
                    chart.zoom()
                })
            },
            zoom: function(event) {
                var hasZoomed, resetZoomButton, chart = this,
                    pointer = chart.pointer,
                    displayButton = !1;
                !event || event.resetSelection ? each(chart.axes, function(axis) {
                    hasZoomed = axis.zoom()
                }) : each(event.xAxis.concat(event.yAxis), function(axisData) {
                    var axis = axisData.axis,
                        isXAxis = axis.isXAxis;
                    (pointer[isXAxis ? "zoomX" : "zoomY"] || pointer[isXAxis ? "pinchX" : "pinchY"]) && (hasZoomed = axis.zoom(axisData.min, axisData.max), axis.displayBtn && (displayButton = !0))
                }), resetZoomButton = chart.resetZoomButton, displayButton && !resetZoomButton ? chart.showResetZoom() : !displayButton && isObject(resetZoomButton) && (chart.resetZoomButton = resetZoomButton.destroy()), hasZoomed && chart.redraw(pick(chart.options.chart.animation, event && event.animation, chart.pointCount < 100))
            },
            pan: function(e, panning) {
                var doRedraw, chart = this,
                    hoverPoints = chart.hoverPoints;
                hoverPoints && each(hoverPoints, function(point) {
                    point.setState()
                }), each("xy" === panning ? [1, 0] : [1], function(isX) {
                    var mousePos = e[isX ? "chartX" : "chartY"],
                        axis = chart[isX ? "xAxis" : "yAxis"][0],
                        startPos = chart[isX ? "mouseDownX" : "mouseDownY"],
                        halfPointRange = (axis.pointRange || 0) / 2,
                        extremes = axis.getExtremes(),
                        newMin = axis.toValue(startPos - mousePos, !0) + halfPointRange,
                        newMax = axis.toValue(startPos + chart[isX ? "plotWidth" : "plotHeight"] - mousePos, !0) - halfPointRange;
                    axis.series.length && newMin > mathMin(extremes.dataMin, extremes.min) && newMax < mathMax(extremes.dataMax, extremes.max) && (axis.setExtremes(newMin, newMax, !1, !1, {
                        trigger: "pan"
                    }), doRedraw = !0), chart[isX ? "mouseDownX" : "mouseDownY"] = mousePos
                }), doRedraw && chart.redraw(!1), css(chart.container, {
                    cursor: "move"
                })
            }
        }), extend(Point.prototype, {
            select: function(selected, accumulate) {
                var point = this,
                    series = point.series,
                    chart = series.chart;
                selected = pick(selected, !point.selected), point.firePointEvent(selected ? "select" : "unselect", {
                    accumulate: accumulate
                }, function() {
                    point.selected = point.options.selected = selected, series.options.data[inArray(point, series.data)] = point.options, point.setState(selected && SELECT_STATE), accumulate || each(chart.getSelectedPoints(), function(loopPoint) {
                        loopPoint.selected && loopPoint !== point && (loopPoint.selected = loopPoint.options.selected = !1, series.options.data[inArray(loopPoint, series.data)] = loopPoint.options, loopPoint.setState(NORMAL_STATE), loopPoint.firePointEvent("unselect"))
                    })
                })
            },
            onMouseOver: function(e) {
                var point = this,
                    series = point.series,
                    chart = series.chart,
                    tooltip = chart.tooltip,
                    hoverPoint = chart.hoverPoint;
                hoverPoint && hoverPoint !== point && hoverPoint.onMouseOut(), point.firePointEvent("mouseOver"), !tooltip || tooltip.shared && !series.noSharedTooltip || tooltip.refresh(point, e), point.setState(HOVER_STATE), chart.hoverPoint = point
            },
            onMouseOut: function() {
                var chart = this.series.chart,
                    hoverPoints = chart.hoverPoints;
                this.firePointEvent("mouseOut"), hoverPoints && -1 !== inArray(this, hoverPoints) || (this.setState(), chart.hoverPoint = null)
            },
            importEvents: function() {
                if (!this.hasImportedEvents) {
                    var eventType, point = this,
                        options = merge(point.series.options.point, point.options),
                        events = options.events;
                    point.events = events;
                    for (eventType in events) addEvent(point, eventType, events[eventType]);
                    this.hasImportedEvents = !0
                }
            },
            setState: function(state, move) {
                var radius, haloOptions, newSymbol, pointAttr, point = this,
                    plotX = point.plotX,
                    plotY = point.plotY,
                    series = point.series,
                    stateOptions = series.options.states,
                    markerOptions = defaultPlotOptions[series.type].marker && series.options.marker,
                    normalDisabled = markerOptions && !markerOptions.enabled,
                    markerStateOptions = markerOptions && markerOptions.states[state],
                    stateDisabled = markerStateOptions && markerStateOptions.enabled === !1,
                    stateMarkerGraphic = series.stateMarkerGraphic,
                    pointMarker = point.marker || {},
                    chart = series.chart,
                    halo = series.halo;
                state = state || NORMAL_STATE, pointAttr = point.pointAttr[state] || series.pointAttr[state], state === point.state && !move || point.selected && state !== SELECT_STATE || stateOptions[state] && stateOptions[state].enabled === !1 || state && (stateDisabled || normalDisabled && markerStateOptions.enabled === !1) || state && pointMarker.states && pointMarker.states[state] && pointMarker.states[state].enabled === !1 || (point.graphic ? (radius = markerOptions && point.graphic.symbolName && pointAttr.r, point.graphic.attr(merge(pointAttr, radius ? {
                    x: plotX - radius,
                    y: plotY - radius,
                    width: 2 * radius,
                    height: 2 * radius
                } : {})), stateMarkerGraphic && stateMarkerGraphic.hide()) : (state && markerStateOptions && (radius = markerStateOptions.radius, newSymbol = pointMarker.symbol || series.symbol, stateMarkerGraphic && stateMarkerGraphic.currentSymbol !== newSymbol && (stateMarkerGraphic = stateMarkerGraphic.destroy()), stateMarkerGraphic ? stateMarkerGraphic[move ? "animate" : "attr"]({
                    x: plotX - radius,
                    y: plotY - radius
                }) : newSymbol && (series.stateMarkerGraphic = stateMarkerGraphic = chart.renderer.symbol(newSymbol, plotX - radius, plotY - radius, 2 * radius, 2 * radius).attr(pointAttr).add(series.markerGroup), stateMarkerGraphic.currentSymbol = newSymbol)), stateMarkerGraphic && stateMarkerGraphic[state && chart.isInsidePlot(plotX, plotY, chart.inverted) ? "show" : "hide"]()), haloOptions = stateOptions[state] && stateOptions[state].halo, haloOptions && haloOptions.size ? (halo || (series.halo = halo = chart.renderer.path().add(series.seriesGroup)), halo.attr(extend({
                    fill: Color(point.color || series.color).setOpacity(haloOptions.opacity).get()
                }, haloOptions.attributes))[move ? "animate" : "attr"]({
                    d: point.haloPath(haloOptions.size)
                })) : halo && halo.attr({
                    d: []
                }), point.state = state)
            },
            haloPath: function(size) {
                var series = this.series,
                    chart = series.chart,
                    plotBox = series.getPlotBox(),
                    inverted = chart.inverted;
                return chart.renderer.symbols.circle(plotBox.translateX + (inverted ? series.yAxis.len - this.plotY : this.plotX) - size, plotBox.translateY + (inverted ? series.xAxis.len - this.plotX : this.plotY) - size, 2 * size, 2 * size)
            }
        }), extend(Series.prototype, {
            onMouseOver: function() {
                var series = this,
                    chart = series.chart,
                    hoverSeries = chart.hoverSeries;
                hoverSeries && hoverSeries !== series && hoverSeries.onMouseOut(), series.options.events.mouseOver && fireEvent(series, "mouseOver"), series.setState(HOVER_STATE), chart.hoverSeries = series
            },
            onMouseOut: function() {
                var series = this,
                    options = series.options,
                    chart = series.chart,
                    tooltip = chart.tooltip,
                    hoverPoint = chart.hoverPoint;
                hoverPoint && hoverPoint.onMouseOut(), series && options.events.mouseOut && fireEvent(series, "mouseOut"), !tooltip || options.stickyTracking || tooltip.shared && !series.noSharedTooltip || tooltip.hide(), series.setState(), chart.hoverSeries = null
            },
            setState: function(state) {
                var attribs, series = this,
                    options = series.options,
                    graph = series.graph,
                    graphNeg = series.graphNeg,
                    stateOptions = options.states,
                    lineWidth = options.lineWidth;
                if (state = state || NORMAL_STATE, series.state !== state) {
                    if (series.state = state, stateOptions[state] && stateOptions[state].enabled === !1) return;
                    state && (lineWidth = stateOptions[state].lineWidth || lineWidth + (stateOptions[state].lineWidthPlus || 0)), graph && !graph.dashstyle && (attribs = {
                        "stroke-width": lineWidth
                    }, graph.attr(attribs), graphNeg && graphNeg.attr(attribs))
                }
            },
            setVisible: function(vis, redraw) {
                var showOrHide, series = this,
                    chart = series.chart,
                    legendItem = series.legendItem,
                    ignoreHiddenSeries = chart.options.chart.ignoreHiddenSeries,
                    oldVisibility = series.visible;
                series.visible = vis = series.userOptions.visible = vis === UNDEFINED ? !oldVisibility : vis, showOrHide = vis ? "show" : "hide", each(["group", "dataLabelsGroup", "markerGroup", "tracker"], function(key) {
                    series[key] && series[key][showOrHide]()
                }), chart.hoverSeries === series && series.onMouseOut(), legendItem && chart.legend.colorizeItem(series, vis), series.isDirty = !0, series.options.stacking && each(chart.series, function(otherSeries) {
                    otherSeries.options.stacking && otherSeries.visible && (otherSeries.isDirty = !0)
                }), each(series.linkedSeries, function(otherSeries) {
                    otherSeries.setVisible(vis, !1)
                }), ignoreHiddenSeries && (chart.isDirtyBox = !0), redraw !== !1 && chart.redraw(), fireEvent(series, showOrHide)
            },
            setTooltipPoints: function(renew) {
                var pointsLength, low, high, point, pointX, nextPoint, i, series = this,
                    points = [],
                    xAxis = series.xAxis,
                    xExtremes = xAxis && xAxis.getExtremes(),
                    axisLength = xAxis ? xAxis.tooltipLen || xAxis.len : series.chart.plotSizeX,
                    tooltipPoints = [];
                if (series.options.enableMouseTracking !== !1 && !series.singularTooltips) {
                    for (renew && (series.tooltipPoints = null), each(series.segments || series.points, function(segment) {
                            points = points.concat(segment)
                        }), xAxis && xAxis.reversed && (points = points.reverse()), series.orderTooltipPoints && series.orderTooltipPoints(points), pointsLength = points.length, i = 0; pointsLength > i; i++)
                        if (point = points[i], pointX = point.x, pointX >= xExtremes.min && pointX <= xExtremes.max)
                            for (nextPoint = points[i + 1], low = high === UNDEFINED ? 0 : high + 1, high = points[i + 1] ? mathMin(mathMax(0, mathFloor((point.clientX + (nextPoint ? nextPoint.wrappedClientX || nextPoint.clientX : axisLength)) / 2)), axisLength) : axisLength; low >= 0 && high >= low;) tooltipPoints[low++] = point;
                    series.tooltipPoints = tooltipPoints
                }
            },
            show: function() {
                this.setVisible(!0)
            },
            hide: function() {
                this.setVisible(!1)
            },
            select: function(selected) {
                var series = this;
                series.selected = selected = selected === UNDEFINED ? !series.selected : selected, series.checkbox && (series.checkbox.checked = selected), fireEvent(series, selected ? "select" : "unselect")
            },
            drawTracker: TrackerMixin.drawTrackerGraph
        }), wrap(Series.prototype, "init", function(proceed) {
            var xAxis, series = this;
            proceed.apply(this, Array.prototype.slice.call(arguments, 1)), xAxis = series.xAxis, xAxis && xAxis.options.ordinal && addEvent(series, "updatedData", function() {
                delete xAxis.ordinalIndex
            })
        }), wrap(Axis.prototype, "getTimeTicks", function(proceed, normalizedInterval, min, max, startOfWeek, positions, closestDistance, findHigherRanks) {
            var segmentPositions, hasCrossedHigherRank, info, posLength, outsideMax, start = 0,
                end = 0,
                higherRanks = {},
                groupPositions = [],
                lastGroupPosition = -Number.MAX_VALUE,
                tickPixelIntervalOption = this.options.tickPixelInterval;
            if (!this.options.ordinal || !positions || positions.length < 3 || min === UNDEFINED) return proceed.call(this, normalizedInterval, min, max, startOfWeek);
            for (posLength = positions.length; posLength > end; end++) {
                if (outsideMax = end && positions[end - 1] > max, positions[end] < min && (start = end), end === posLength - 1 || positions[end + 1] - positions[end] > 5 * closestDistance || outsideMax) {
                    if (positions[end] > lastGroupPosition) {
                        for (segmentPositions = proceed.call(this, normalizedInterval, positions[start], positions[end], startOfWeek); segmentPositions.length && segmentPositions[0] <= lastGroupPosition;) segmentPositions.shift();
                        segmentPositions.length && (lastGroupPosition = segmentPositions[segmentPositions.length - 1]), groupPositions = groupPositions.concat(segmentPositions)
                    }
                    start = end + 1
                }
                if (outsideMax) break
            }
            if (info = segmentPositions.info, findHigherRanks && info.unitRange <= timeUnits.hour) {
                for (end = groupPositions.length - 1, start = 1; end > start; start++) new Date(groupPositions[start] - timezoneOffset)[getDate]() !== new Date(groupPositions[start - 1] - timezoneOffset)[getDate]() && (higherRanks[groupPositions[start]] = "day", hasCrossedHigherRank = !0);
                hasCrossedHigherRank && (higherRanks[groupPositions[0]] = "day"), info.higherRanks = higherRanks
            }
            if (groupPositions.info = info, findHigherRanks && defined(tickPixelIntervalOption)) {
                for (var itemToRemove, translated, lastTranslated, medianDistance, distance, length = groupPositions.length, i = length, translatedArr = [], distances = []; i--;) translated = this.translate(groupPositions[i]), lastTranslated && (distances[i] = lastTranslated - translated), translatedArr[i] = lastTranslated = translated;
                for (distances.sort(), medianDistance = distances[mathFloor(distances.length / 2)], .6 * tickPixelIntervalOption > medianDistance && (medianDistance = null), i = groupPositions[length - 1] > max ? length - 1 : length, lastTranslated = void 0; i--;) translated = translatedArr[i], distance = lastTranslated - translated, lastTranslated && .8 * tickPixelIntervalOption > distance && (null === medianDistance || .8 * medianDistance > distance) ? (higherRanks[groupPositions[i]] && !higherRanks[groupPositions[i + 1]] ? (itemToRemove = i + 1, lastTranslated = translated) : itemToRemove = i, groupPositions.splice(itemToRemove, 1)) : lastTranslated = translated
            }
            return groupPositions
        }), extend(Axis.prototype, {
            beforeSetTickPositions: function() {
                var len, dist, minIndex, maxIndex, slope, i, axis = this,
                    ordinalPositions = [],
                    useOrdinal = !1,
                    extremes = axis.getExtremes(),
                    min = extremes.min,
                    max = extremes.max;
                if (axis.options.ordinal) {
                    if (each(axis.series, function(series, i) {
                            if (series.visible !== !1 && series.takeOrdinalPosition !== !1 && (ordinalPositions = ordinalPositions.concat(series.processedXData), len = ordinalPositions.length, ordinalPositions.sort(function(a, b) {
                                    return a - b
                                }), len))
                                for (i = len - 1; i--;) ordinalPositions[i] === ordinalPositions[i + 1] && ordinalPositions.splice(i, 1)
                        }), len = ordinalPositions.length, len > 2) {
                        for (dist = ordinalPositions[1] - ordinalPositions[0], i = len - 1; i-- && !useOrdinal;) ordinalPositions[i + 1] - ordinalPositions[i] !== dist && (useOrdinal = !0);
                        !axis.options.keepOrdinalPadding && (ordinalPositions[0] - min > dist || max - ordinalPositions[ordinalPositions.length - 1] > dist) && (useOrdinal = !0)
                    }
                    useOrdinal ? (axis.ordinalPositions = ordinalPositions, minIndex = axis.val2lin(mathMax(min, ordinalPositions[0]), !0), maxIndex = axis.val2lin(mathMin(max, ordinalPositions[ordinalPositions.length - 1]), !0), axis.ordinalSlope = slope = (max - min) / (maxIndex - minIndex), axis.ordinalOffset = min - minIndex * slope) : axis.ordinalPositions = axis.ordinalSlope = axis.ordinalOffset = UNDEFINED
                }
                axis.groupIntervalFactor = null
            },
            val2lin: function(val, toIndex) {
                var axis = this,
                    ordinalPositions = axis.ordinalPositions;
                if (ordinalPositions) {
                    var i, distance, ordinalIndex, ordinalLength = ordinalPositions.length;
                    for (i = ordinalLength; i--;)
                        if (ordinalPositions[i] === val) {
                            ordinalIndex = i;
                            break
                        }
                    for (i = ordinalLength - 1; i--;)
                        if (val > ordinalPositions[i] || 0 === i) {
                            distance = (val - ordinalPositions[i]) / (ordinalPositions[i + 1] - ordinalPositions[i]), ordinalIndex = i + distance;
                            break
                        }
                    return toIndex ? ordinalIndex : axis.ordinalSlope * (ordinalIndex || 0) + axis.ordinalOffset
                }
                return val
            },
            lin2val: function(val, fromIndex) {
                var axis = this,
                    ordinalPositions = axis.ordinalPositions;
                if (ordinalPositions) {
                    var linearEquivalentLeft, linearEquivalentRight, distance, ordinalSlope = axis.ordinalSlope,
                        ordinalOffset = axis.ordinalOffset,
                        i = ordinalPositions.length - 1;
                    if (fromIndex) 0 > val ? val = ordinalPositions[0] : val > i ? val = ordinalPositions[i] : (i = mathFloor(val), distance = val - i);
                    else
                        for (; i--;)
                            if (linearEquivalentLeft = ordinalSlope * i + ordinalOffset, val >= linearEquivalentLeft) {
                                linearEquivalentRight = ordinalSlope * (i + 1) + ordinalOffset, distance = (val - linearEquivalentLeft) / (linearEquivalentRight - linearEquivalentLeft);
                                break
                            } return distance !== UNDEFINED && ordinalPositions[i] !== UNDEFINED ? ordinalPositions[i] + (distance ? distance * (ordinalPositions[i + 1] - ordinalPositions[i]) : 0) : val
                }
                return val
            },
            getExtendedPositions: function() {
                var fakeAxis, fakeSeries, axis = this,
                    chart = axis.chart,
                    grouping = axis.series[0].currentDataGrouping,
                    ordinalIndex = axis.ordinalIndex,
                    key = grouping ? grouping.count + grouping.unitName : "raw",
                    extremes = axis.getExtremes();
                return ordinalIndex || (ordinalIndex = axis.ordinalIndex = {}), ordinalIndex[key] || (fakeAxis = {
                    series: [],
                    getExtremes: function() {
                        return {
                            min: extremes.dataMin,
                            max: extremes.dataMax
                        }
                    },
                    options: {
                        ordinal: !0
                    },
                    val2lin: Axis.prototype.val2lin
                }, each(axis.series, function(series) {
                    fakeSeries = {
                        xAxis: fakeAxis,
                        xData: series.xData,
                        chart: chart,
                        destroyGroupedData: noop
                    }, fakeSeries.options = {
                        dataGrouping: grouping ? {
                            enabled: !0,
                            forced: !0,
                            approximation: "open",
                            units: [
                                [grouping.unitName, [grouping.count]]
                            ]
                        } : {
                            enabled: !1
                        }
                    }, series.processData.apply(fakeSeries), fakeAxis.series.push(fakeSeries)
                }), axis.beforeSetTickPositions.apply(fakeAxis), ordinalIndex[key] = fakeAxis.ordinalPositions), ordinalIndex[key]
            },
            getGroupIntervalFactor: function(xMin, xMax, series) {
                var median, i = 0,
                    processedXData = series.processedXData,
                    len = processedXData.length,
                    distances = [],
                    groupIntervalFactor = this.groupIntervalFactor;
                if (!groupIntervalFactor) {
                    for (; len - 1 > i; i++) distances[i] = processedXData[i + 1] - processedXData[i];
                    distances.sort(function(a, b) {
                        return a - b
                    }), median = distances[mathFloor(len / 2)], xMin = mathMax(xMin, processedXData[0]), xMax = mathMin(xMax, processedXData[len - 1]), this.groupIntervalFactor = groupIntervalFactor = len * median / (xMax - xMin)
                }
                return groupIntervalFactor
            },
            postProcessTickInterval: function(tickInterval) {
                var ordinalSlope = this.ordinalSlope;
                return ordinalSlope ? tickInterval / (ordinalSlope / this.closestPointRange) : tickInterval
            }
        }), wrap(Chart.prototype, "pan", function(proceed, e) {
            var chart = this,
                xAxis = chart.xAxis[0],
                chartX = e.chartX,
                runBase = !1;
            if (xAxis.options.ordinal && xAxis.series.length) {
                var trimmedRange, ordinalPositions, searchAxisLeft, searchAxisRight, mouseDownX = chart.mouseDownX,
                    extremes = xAxis.getExtremes(),
                    dataMax = extremes.dataMax,
                    min = extremes.min,
                    max = extremes.max,
                    hoverPoints = chart.hoverPoints,
                    closestPointRange = xAxis.closestPointRange,
                    pointPixelWidth = xAxis.translationSlope * (xAxis.ordinalSlope || closestPointRange),
                    movedUnits = (mouseDownX - chartX) / pointPixelWidth,
                    extendedAxis = {
                        ordinalPositions: xAxis.getExtendedPositions()
                    },
                    lin2val = xAxis.lin2val,
                    val2lin = xAxis.val2lin;
                extendedAxis.ordinalPositions ? mathAbs(movedUnits) > 1 && (hoverPoints && each(hoverPoints, function(point) {
                    point.setState()
                }), 0 > movedUnits ? (searchAxisLeft = extendedAxis, searchAxisRight = xAxis.ordinalPositions ? xAxis : extendedAxis) : (searchAxisLeft = xAxis.ordinalPositions ? xAxis : extendedAxis, searchAxisRight = extendedAxis), ordinalPositions = searchAxisRight.ordinalPositions, dataMax > ordinalPositions[ordinalPositions.length - 1] && ordinalPositions.push(dataMax), chart.fixedRange = max - min, trimmedRange = xAxis.toFixedRange(null, null, lin2val.apply(searchAxisLeft, [val2lin.apply(searchAxisLeft, [min, !0]) + movedUnits, !0]), lin2val.apply(searchAxisRight, [val2lin.apply(searchAxisRight, [max, !0]) + movedUnits, !0])), trimmedRange.min >= mathMin(extremes.dataMin, min) && trimmedRange.max <= mathMax(dataMax, max) && xAxis.setExtremes(trimmedRange.min, trimmedRange.max, !0, !1, {
                    trigger: "pan"
                }), chart.mouseDownX = chartX, css(chart.container, {
                    cursor: "move"
                })) : runBase = !0
            } else runBase = !0;
            runBase && proceed.apply(this, Array.prototype.slice.call(arguments, 1))
        }), wrap(Series.prototype, "getSegments", function(proceed) {
            var segments, series = this,
                gapSize = series.options.gapSize,
                xAxis = series.xAxis;
            proceed.apply(this, Array.prototype.slice.call(arguments, 1)), gapSize && (segments = series.segments, each(segments, function(segment, no) {
                for (var i = segment.length - 1; i--;) segment[i + 1].x - segment[i].x > xAxis.closestPointRange * gapSize && segments.splice(no + 1, 0, segment.splice(i + 1, segment.length - i))
            }))
        });
        var DATA_GROUPING = "dataGrouping",
            seriesProto = Series.prototype,
            tooltipProto = Tooltip.prototype,
            baseProcessData = seriesProto.processData,
            baseGeneratePoints = seriesProto.generatePoints,
            baseDestroy = seriesProto.destroy,
            baseTooltipHeaderFormatter = tooltipProto.tooltipHeaderFormatter,
            NUMBER = "number",
            commonOptions = {
                approximation: "average",
                groupPixelWidth: 2,
                dateTimeLabelFormats: {
                    millisecond: ["%A, %b %e, %H:%M:%S.%L", "%A, %b %e, %H:%M:%S.%L", "-%H:%M:%S.%L"],
                    second: ["%A, %b %e, %H:%M:%S", "%A, %b %e, %H:%M:%S", "-%H:%M:%S"],
                    minute: ["%A, %b %e, %H:%M", "%A, %b %e, %H:%M", "-%H:%M"],
                    hour: ["%A, %b %e, %H:%M", "%A, %b %e, %H:%M", "-%H:%M"],
                    day: ["%A, %b %e, %Y", "%A, %b %e", "-%A, %b %e, %Y"],
                    week: ["Week from %A, %b %e, %Y", "%A, %b %e", "-%A, %b %e, %Y"],
                    month: ["%B %Y", "%B", "-%B %Y"],
                    year: ["%Y", "%Y", "-%Y"]
                }
            },
            specificOptions = {
                line: {},
                spline: {},
                area: {},
                areaspline: {},
                column: {
                    approximation: "sum",
                    groupPixelWidth: 10
                },
                arearange: {
                    approximation: "range"
                },
                areasplinerange: {
                    approximation: "range"
                },
                columnrange: {
                    approximation: "range",
                    groupPixelWidth: 10
                },
                candlestick: {
                    approximation: "ohlc",
                    groupPixelWidth: 10
                },
                ohlc: {
                    approximation: "ohlc",
                    groupPixelWidth: 5
                }
            },
            defaultDataGroupingUnits = [
                ["millisecond", [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],
                ["second", [1, 2, 5, 10, 15, 30]],
                ["minute", [1, 2, 5, 10, 15, 30]],
                ["hour", [1, 2, 3, 4, 6, 8, 12]],
                ["day", [1]],
                ["week", [1]],
                ["month", [1, 3, 6]],
                ["year", null]
            ],
            approximations = {
                sum: function(arr) {
                    var ret, len = arr.length;
                    if (!len && arr.hasNulls) ret = null;
                    else if (len)
                        for (ret = 0; len--;) ret += arr[len];
                    return ret
                },
                average: function(arr) {
                    var len = arr.length,
                        ret = approximations.sum(arr);
                    return typeof ret === NUMBER && len && (ret /= len), ret
                },
                open: function(arr) {
                    return arr.length ? arr[0] : arr.hasNulls ? null : UNDEFINED
                },
                high: function(arr) {
                    return arr.length ? arrayMax(arr) : arr.hasNulls ? null : UNDEFINED
                },
                low: function(arr) {
                    return arr.length ? arrayMin(arr) : arr.hasNulls ? null : UNDEFINED
                },
                close: function(arr) {
                    return arr.length ? arr[arr.length - 1] : arr.hasNulls ? null : UNDEFINED
                },
                ohlc: function(open, high, low, close) {
                    return open = approximations.open(open), high = approximations.high(high), low = approximations.low(low), close = approximations.close(close), typeof open === NUMBER || typeof high === NUMBER || typeof low === NUMBER || typeof close === NUMBER ? [open, high, low, close] : void 0
                },
                range: function(low, high) {
                    return low = approximations.low(low), high = approximations.high(high), typeof low === NUMBER || typeof high === NUMBER ? [low, high] : void 0
                }
            };
        seriesProto.groupData = function(xData, yData, groupPositions, approximation) {
            var pointX, pointY, groupedY, i, series = this,
                data = series.data,
                dataOptions = series.options.data,
                groupedXData = [],
                groupedYData = [],
                dataLength = xData.length,
                handleYData = !!yData,
                values = [
                    [],
                    [],
                    [],
                    []
                ],
                approximationFn = "function" == typeof approximation ? approximation : approximations[approximation],
                pointArrayMap = series.pointArrayMap,
                pointArrayMapLength = pointArrayMap && pointArrayMap.length;
            for (i = 0; dataLength >= i && !(xData[i] >= groupPositions[0]); i++);
            for (; dataLength >= i; i++) {
                for (;
                    (groupPositions[1] !== UNDEFINED && xData[i] >= groupPositions[1] || i === dataLength) && (pointX = groupPositions.shift(), groupedY = approximationFn.apply(0, values), groupedY !== UNDEFINED && (groupedXData.push(pointX), groupedYData.push(groupedY)), values[0] = [], values[1] = [], values[2] = [], values[3] = [], i !== dataLength););
                if (i === dataLength) break;
                if (pointArrayMap) {
                    var j, val, index = series.cropStart + i,
                        point = data && data[index] || series.pointClass.prototype.applyOptions.apply({
                            series: series
                        }, [dataOptions[index]]);
                    for (j = 0; pointArrayMapLength > j; j++) val = point[pointArrayMap[j]], typeof val === NUMBER ? values[j].push(val) : null === val && (values[j].hasNulls = !0)
                } else pointY = handleYData ? yData[i] : null, typeof pointY === NUMBER ? values[0].push(pointY) : null === pointY && (values[0].hasNulls = !0)
            }
            return [groupedXData, groupedYData]
        }, seriesProto.processData = function() {
            var hasGroupedData, series = this,
                chart = series.chart,
                options = series.options,
                dataGroupingOptions = options[DATA_GROUPING],
                groupingEnabled = series.allowDG !== !1 && dataGroupingOptions && pick(dataGroupingOptions.enabled, chart.options._stock);
            if (series.forceCrop = groupingEnabled, series.groupPixelWidth = null, series.hasProcessed = !0, baseProcessData.apply(series, arguments) !== !1 && groupingEnabled) {
                series.destroyGroupedData();
                var i, processedXData = series.processedXData,
                    processedYData = series.processedYData,
                    plotSizeX = chart.plotSizeX,
                    xAxis = series.xAxis,
                    ordinal = xAxis.options.ordinal,
                    groupPixelWidth = series.groupPixelWidth = xAxis.getGroupPixelWidth && xAxis.getGroupPixelWidth(),
                    nonGroupedPointRange = series.pointRange;
                if (groupPixelWidth) {
                    hasGroupedData = !0, series.points = null;
                    var extremes = xAxis.getExtremes(),
                        xMin = extremes.min,
                        xMax = extremes.max,
                        groupIntervalFactor = ordinal && xAxis.getGroupIntervalFactor(xMin, xMax, series) || 1,
                        interval = groupPixelWidth * (xMax - xMin) / plotSizeX * groupIntervalFactor,
                        groupPositions = xAxis.getTimeTicks(xAxis.normalizeTimeTickInterval(interval, dataGroupingOptions.units || defaultDataGroupingUnits), xMin, xMax, null, processedXData, series.closestPointRange),
                        groupedXandY = seriesProto.groupData.apply(series, [processedXData, processedYData, groupPositions, dataGroupingOptions.approximation]),
                        groupedXData = groupedXandY[0],
                        groupedYData = groupedXandY[1];
                    if (dataGroupingOptions.smoothed) {
                        for (i = groupedXData.length - 1, groupedXData[i] = xMax; i-- && i > 0;) groupedXData[i] += interval / 2;
                        groupedXData[0] = xMin
                    }
                    series.currentDataGrouping = groupPositions.info, null === options.pointRange && (series.pointRange = groupPositions.info.totalRange), series.closestPointRange = groupPositions.info.totalRange, defined(groupedXData[0]) && groupedXData[0] < xAxis.dataMin && (xAxis.dataMin = groupedXData[0]), series.processedXData = groupedXData, series.processedYData = groupedYData
                } else series.currentDataGrouping = null, series.pointRange = nonGroupedPointRange;
                series.hasGroupedData = hasGroupedData
            }
        }, seriesProto.destroyGroupedData = function() {
            var groupedData = this.groupedData;
            each(groupedData || [], function(point, i) {
                point && (groupedData[i] = point.destroy ? point.destroy() : null)
            }), this.groupedData = null
        }, seriesProto.generatePoints = function() {
            baseGeneratePoints.apply(this), this.destroyGroupedData(), this.groupedData = this.hasGroupedData ? this.points : null
        }, tooltipProto.tooltipHeaderFormatter = function(point) {
            var xDateFormatEnd, currentDataGrouping, dateTimeLabelFormats, labelFormats, formattedKey, n, ret, tooltip = this,
                series = point.series,
                options = series.options,
                tooltipOptions = series.tooltipOptions,
                dataGroupingOptions = options.dataGrouping,
                xDateFormat = tooltipOptions.xDateFormat,
                xAxis = series.xAxis;
            if (xAxis && "datetime" === xAxis.options.type && dataGroupingOptions && isNumber(point.key)) {
                if (currentDataGrouping = series.currentDataGrouping, dateTimeLabelFormats = dataGroupingOptions.dateTimeLabelFormats, currentDataGrouping) labelFormats = dateTimeLabelFormats[currentDataGrouping.unitName], 1 === currentDataGrouping.count ? xDateFormat = labelFormats[0] : (xDateFormat = labelFormats[1], xDateFormatEnd = labelFormats[2]);
                else if (!xDateFormat && dateTimeLabelFormats)
                    for (n in timeUnits)
                        if (timeUnits[n] >= xAxis.closestPointRange || timeUnits[n] <= timeUnits.day && point.key % timeUnits[n] > 0) {
                            xDateFormat = dateTimeLabelFormats[n][0];
                            break
                        }
                formattedKey = dateFormat(xDateFormat, point.key), xDateFormatEnd && (formattedKey += dateFormat(xDateFormatEnd, point.key + currentDataGrouping.totalRange - 1)), ret = tooltipOptions.headerFormat.replace("{point.key}", formattedKey)
            } else ret = baseTooltipHeaderFormatter.call(tooltip, point);
            return ret
        }, seriesProto.destroy = function() {
            for (var series = this, groupedData = series.groupedData || [], i = groupedData.length; i--;) groupedData[i] && groupedData[i].destroy();
            baseDestroy.apply(series)
        }, wrap(seriesProto, "setOptions", function(proceed, itemOptions) {
            var options = proceed.call(this, itemOptions),
                type = this.type,
                plotOptions = this.chart.options.plotOptions,
                defaultOptions = defaultPlotOptions[type].dataGrouping;
            return specificOptions[type] && (defaultOptions || (defaultOptions = merge(commonOptions, specificOptions[type])), options.dataGrouping = merge(defaultOptions, plotOptions.series && plotOptions.series.dataGrouping, plotOptions[type].dataGrouping, itemOptions.dataGrouping)), this.chart.options._stock && (this.requireSorting = !0), options
        }), wrap(Axis.prototype, "setScale", function(proceed) {
            proceed.call(this), each(this.series, function(series) {
                series.hasProcessed = !1
            })
        }), Axis.prototype.getGroupPixelWidth = function() {
            var i, dataLength, dgOptions, series = this.series,
                len = series.length,
                groupPixelWidth = 0,
                doGrouping = !1;
            for (i = len; i--;) dgOptions = series[i].options.dataGrouping, dgOptions && (groupPixelWidth = mathMax(groupPixelWidth, dgOptions.groupPixelWidth));
            for (i = len; i--;) dgOptions = series[i].options.dataGrouping, dgOptions && series[i].hasProcessed && (dataLength = (series[i].processedXData || series[i].data).length, (series[i].groupPixelWidth || dataLength > this.chart.plotSizeX / groupPixelWidth || dataLength && dgOptions.forced) && (doGrouping = !0));
            return doGrouping ? groupPixelWidth : 0
        }, defaultPlotOptions.ohlc = merge(defaultPlotOptions.column, {
            lineWidth: 1,
            tooltip: {
                pointFormat: '<span style="color:{series.color}">â—</span> <b> {series.name}</b><br/>Open: {point.open}<br/>High: {point.high}<br/>Low: {point.low}<br/>Close: {point.close}<br/>'
            },
            states: {
                hover: {
                    lineWidth: 3
                }
            },
            threshold: null
        });
        var OHLCSeries = extendClass(seriesTypes.column, {
            type: "ohlc",
            pointArrayMap: ["open", "high", "low", "close"],
            toYData: function(point) {
                return [point.open, point.high, point.low, point.close]
            },
            pointValKey: "high",
            pointAttrToOptions: {
                stroke: "color",
                "stroke-width": "lineWidth"
            },
            upColorProp: "stroke",
            getAttribs: function() {
                seriesTypes.column.prototype.getAttribs.apply(this, arguments);
                var series = this,
                    options = series.options,
                    stateOptions = options.states,
                    upColor = options.upColor || series.color,
                    seriesDownPointAttr = merge(series.pointAttr),
                    upColorProp = series.upColorProp;
                seriesDownPointAttr[""][upColorProp] = upColor, seriesDownPointAttr.hover[upColorProp] = stateOptions.hover.upColor || upColor, seriesDownPointAttr.select[upColorProp] = stateOptions.select.upColor || upColor, each(series.points, function(point) {
                    point.open < point.close && (point.pointAttr = seriesDownPointAttr)
                })
            },
            translate: function() {
                var series = this,
                    yAxis = series.yAxis;
                seriesTypes.column.prototype.translate.apply(series), each(series.points, function(point) {
                    null !== point.open && (point.plotOpen = yAxis.translate(point.open, 0, 1, 0, 1)), null !== point.close && (point.plotClose = yAxis.translate(point.close, 0, 1, 0, 1))
                })
            },
            drawPoints: function() {
                var pointAttr, plotOpen, plotClose, crispCorr, halfWidth, path, graphic, crispX, series = this,
                    points = series.points,
                    chart = series.chart;
                each(points, function(point) {
                    point.plotY !== UNDEFINED && (graphic = point.graphic, pointAttr = point.pointAttr[point.selected ? "selected" : ""] || series.pointAttr[NORMAL_STATE], crispCorr = pointAttr["stroke-width"] % 2 / 2, crispX = mathRound(point.plotX) - crispCorr, halfWidth = mathRound(point.shapeArgs.width / 2), path = ["M", crispX, mathRound(point.yBottom), "L", crispX, mathRound(point.plotY)], null !== point.open && (plotOpen = mathRound(point.plotOpen) + crispCorr, path.push("M", crispX, plotOpen, "L", crispX - halfWidth, plotOpen)), null !== point.close && (plotClose = mathRound(point.plotClose) + crispCorr, path.push("M", crispX, plotClose, "L", crispX + halfWidth, plotClose)), graphic ? graphic.animate({
                        d: path
                    }) : point.graphic = chart.renderer.path(path).attr(pointAttr).add(series.group))
                })
            },
            animate: null
        });
        seriesTypes.ohlc = OHLCSeries, defaultPlotOptions.candlestick = merge(defaultPlotOptions.column, {
            lineColor: "black",
            lineWidth: 1,
            states: {
                hover: {
                    lineWidth: 2
                }
            },
            tooltip: defaultPlotOptions.ohlc.tooltip,
            threshold: null,
            upColor: "white"
        });
        var CandlestickSeries = extendClass(OHLCSeries, {
            type: "candlestick",
            pointAttrToOptions: {
                fill: "color",
                stroke: "lineColor",
                "stroke-width": "lineWidth"
            },
            upColorProp: "fill",
            getAttribs: function() {
                seriesTypes.ohlc.prototype.getAttribs.apply(this, arguments);
                var series = this,
                    options = series.options,
                    stateOptions = options.states,
                    upLineColor = options.upLineColor || options.lineColor,
                    hoverStroke = stateOptions.hover.upLineColor || upLineColor,
                    selectStroke = stateOptions.select.upLineColor || upLineColor;
                each(series.points, function(point) {
                    point.open < point.close && (point.pointAttr[""].stroke = upLineColor, point.pointAttr.hover.stroke = hoverStroke, point.pointAttr.select.stroke = selectStroke)
                })
            },
            drawPoints: function() {
                var pointAttr, plotOpen, plotClose, topBox, bottomBox, hasTopWhisker, hasBottomWhisker, crispCorr, crispX, graphic, path, halfWidth, series = this,
                    points = series.points,
                    chart = series.chart,
                    seriesPointAttr = series.pointAttr[""];
                each(points, function(point) {
                    graphic = point.graphic, point.plotY !== UNDEFINED && (pointAttr = point.pointAttr[point.selected ? "selected" : ""] || seriesPointAttr, crispCorr = pointAttr["stroke-width"] % 2 / 2, crispX = mathRound(point.plotX) - crispCorr, plotOpen = point.plotOpen, plotClose = point.plotClose, topBox = math.min(plotOpen, plotClose), bottomBox = math.max(plotOpen, plotClose), halfWidth = mathRound(point.shapeArgs.width / 2), hasTopWhisker = mathRound(topBox) !== mathRound(point.plotY), hasBottomWhisker = bottomBox !== point.yBottom, topBox = mathRound(topBox) + crispCorr, bottomBox = mathRound(bottomBox) + crispCorr, path = ["M", crispX - halfWidth, bottomBox, "L", crispX - halfWidth, topBox, "L", crispX + halfWidth, topBox, "L", crispX + halfWidth, bottomBox, "Z", "M", crispX, topBox, "L", crispX, hasTopWhisker ? mathRound(point.plotY) : topBox, "M", crispX, bottomBox, "L", crispX, hasBottomWhisker ? mathRound(point.yBottom) : bottomBox], graphic ? graphic.animate({
                        d: path
                    }) : point.graphic = chart.renderer.path(path).attr(pointAttr).add(series.group).shadow(series.options.shadow))
                })
            }
        });
        seriesTypes.candlestick = CandlestickSeries;
        var symbols = SVGRenderer.prototype.symbols;
        defaultPlotOptions.flags = merge(defaultPlotOptions.column, {
            fillColor: "white",
            lineWidth: 1,
            pointRange: 0,
            shape: "flag",
            stackDistance: 12,
            states: {
                hover: {
                    lineColor: "black",
                    fillColor: "#FCFFC5"
                }
            },
            style: {
                fontSize: "11px",
                fontWeight: "bold",
                textAlign: "center"
            },
            tooltip: {
                pointFormat: "{point.text}<br/>"
            },
            threshold: null,
            y: -30
        }), seriesTypes.flags = extendClass(seriesTypes.column, {
            type: "flags",
            sorted: !1,
            noSharedTooltip: !0,
            allowDG: !1,
            takeOrdinalPosition: !1,
            trackerGroups: ["markerGroup"],
            forceCrop: !0,
            init: Series.prototype.init,
            pointAttrToOptions: {
                fill: "fillColor",
                stroke: "color",
                "stroke-width": "lineWidth",
                r: "radius"
            },
            translate: function() {
                seriesTypes.column.prototype.translate.apply(this);
                var point, lastPoint, leftPoint, lastX, rightPoint, currentDataGrouping, series = this,
                    options = series.options,
                    chart = series.chart,
                    points = series.points,
                    cursor = points.length - 1,
                    optionsOnSeries = options.onSeries,
                    onSeries = optionsOnSeries && chart.get(optionsOnSeries),
                    step = onSeries && onSeries.options.step,
                    onData = onSeries && onSeries.points,
                    i = onData && onData.length,
                    xAxis = series.xAxis,
                    xAxisExt = xAxis.getExtremes();
                if (onSeries && onSeries.visible && i)
                    for (currentDataGrouping = onSeries.currentDataGrouping, lastX = onData[i - 1].x + (currentDataGrouping ? currentDataGrouping.totalRange : 0), points.sort(function(a, b) {
                            return a.x - b.x
                        }); i-- && points[cursor] && (point = points[cursor], leftPoint = onData[i], !(leftPoint.x <= point.x && leftPoint.plotY !== UNDEFINED && (point.x <= lastX && (point.plotY = leftPoint.plotY, leftPoint.x < point.x && !step && (rightPoint = onData[i + 1], rightPoint && rightPoint.plotY !== UNDEFINED && (point.plotY += (point.x - leftPoint.x) / (rightPoint.x - leftPoint.x) * (rightPoint.plotY - leftPoint.plotY)))), cursor--, i++, 0 > cursor))););
                each(points, function(point, i) {
                    point.plotY === UNDEFINED && (point.x >= xAxisExt.min && point.x <= xAxisExt.max ? point.plotY = chart.chartHeight - xAxis.bottom - (xAxis.opposite ? xAxis.height : 0) + xAxis.offset - chart.plotTop : point.shapeArgs = {}), lastPoint = points[i - 1], lastPoint && lastPoint.plotX === point.plotX && (lastPoint.stackIndex === UNDEFINED && (lastPoint.stackIndex = 0), point.stackIndex = lastPoint.stackIndex + 1)
                })
            },
            drawPoints: function() {
                var pointAttr, plotX, plotY, shape, i, point, graphic, stackIndex, anchorX, anchorY, outsideRight, series = this,
                    seriesPointAttr = series.pointAttr[""],
                    points = series.points,
                    chart = series.chart,
                    renderer = chart.renderer,
                    options = series.options,
                    optionsY = options.y,
                    crisp = options.lineWidth % 2 / 2;
                for (i = points.length; i--;) point = points[i], outsideRight = point.plotX > series.xAxis.len, plotX = point.plotX + (outsideRight ? crisp : -crisp), stackIndex = point.stackIndex, shape = point.options.shape || options.shape, plotY = point.plotY, plotY !== UNDEFINED && (plotY = point.plotY + optionsY + crisp - (stackIndex !== UNDEFINED && stackIndex * options.stackDistance)), anchorX = stackIndex ? UNDEFINED : point.plotX + crisp, anchorY = stackIndex ? UNDEFINED : point.plotY, graphic = point.graphic, plotY !== UNDEFINED && plotX >= 0 && !outsideRight ? (pointAttr = point.pointAttr[point.selected ? "select" : ""] || seriesPointAttr, graphic ? graphic.attr({
                    x: plotX,
                    y: plotY,
                    r: pointAttr.r,
                    anchorX: anchorX,
                    anchorY: anchorY
                }) : graphic = point.graphic = renderer.label(point.options.title || options.title || "A", plotX, plotY, shape, anchorX, anchorY, options.useHTML).css(merge(options.style, point.style)).attr(pointAttr).attr({
                    align: "flag" === shape ? "left" : "center",
                    width: options.width,
                    height: options.height
                }).add(series.markerGroup).shadow(options.shadow), point.tooltipPos = [plotX, plotY]) : graphic && (point.graphic = graphic.destroy())
            },
            drawTracker: function() {
                var series = this,
                    points = series.points;
                TrackerMixin.drawTrackerPoint.apply(this), each(points, function(point) {
                    var graphic = point.graphic;
                    graphic && addEvent(graphic.element, "mouseover", function() {
                        point.stackIndex > 0 && !point.raised && (point._y = graphic.y, graphic.attr({
                            y: point._y - 8
                        }), point.raised = !0), each(points, function(otherPoint) {
                            otherPoint !== point && otherPoint.raised && otherPoint.graphic && (otherPoint.graphic.attr({
                                y: otherPoint._y
                            }), otherPoint.raised = !1)
                        })
                    })
                })
            },
            animate: noop
        }), symbols.flag = function(x, y, w, h, options) {
            var anchorX = options && options.anchorX || x,
                anchorY = options && options.anchorY || y;
            return ["M", anchorX, anchorY, "L", x, y + h, x, y, x + w, y, x + w, y + h, x, y + h, "M", anchorX, anchorY, "Z"]
        }, each(["circle", "square"], function(shape) {
            symbols[shape + "pin"] = function(x, y, w, h, options) {
                var labelTopOrBottomY, anchorX = options && options.anchorX,
                    anchorY = options && options.anchorY,
                    path = symbols[shape](x, y, w, h);
                return anchorX && anchorY && (labelTopOrBottomY = y > anchorY ? y : y + h, path.push("M", anchorX, labelTopOrBottomY, "L", anchorX, anchorY)), path
            }
        }), Renderer === Highcharts.VMLRenderer && each(["flag", "circlepin", "squarepin"], function(shape) {
            VMLRenderer.prototype.symbols[shape] = symbols[shape]
        });
        var defaultSeriesType, units = [].concat(defaultDataGroupingUnits),
            numExt = function(extreme) {
                return Math[extreme].apply(0, grep(arguments, function(n) {
                    return "number" == typeof n
                }))
            };
        units[4] = ["day", [1, 2, 3, 4]], units[5] = ["week", [1, 2, 3]], defaultSeriesType = seriesTypes.areaspline === UNDEFINED ? "line" : "areaspline", extend(defaultOptions, {
            navigator: {
                handles: {
                    backgroundColor: "#ebe7e8",
                    borderColor: "#b2b1b6"
                },
                height: 40,
                margin: 25,
                maskFill: "rgba(128,179,236,0.3)",
                maskInside: !0,
                outlineColor: "#b2b1b6",
                outlineWidth: 1,
                series: {
                    type: defaultSeriesType,
                    color: "#4572A7",
                    compare: null,
                    fillOpacity: .05,
                    dataGrouping: {
                        approximation: "average",
                        enabled: !0,
                        groupPixelWidth: 2,
                        smoothed: !0,
                        units: units
                    },
                    dataLabels: {
                        enabled: !1,
                        zIndex: 2
                    },
                    id: PREFIX + "navigator-series",
                    lineColor: "#4572A7",
                    lineWidth: 1,
                    marker: {
                        enabled: !1
                    },
                    pointRange: 0,
                    shadow: !1,
                    threshold: null
                },
                xAxis: {
                    tickWidth: 0,
                    lineWidth: 0,
                    gridLineColor: "#EEE",
                    gridLineWidth: 1,
                    tickPixelInterval: 200,
                    labels: {
                        align: "left",
                        style: {
                            color: "#888"
                        },
                        x: 3,
                        y: -4
                    },
                    crosshair: !1
                },
                yAxis: {
                    gridLineWidth: 0,
                    startOnTick: !1,
                    endOnTick: !1,
                    minPadding: .1,
                    maxPadding: .1,
                    labels: {
                        enabled: !1
                    },
                    crosshair: !1,
                    title: {
                        text: null
                    },
                    tickWidth: 0
                }
            },
            scrollbar: {
                height: isTouchDevice ? 20 : 14,
                barBackgroundColor: "#bfc8d1",
                barBorderRadius: 0,
                barBorderWidth: 1,
                barBorderColor: "#bfc8d1",
                buttonArrowColor: "#666",
                buttonBackgroundColor: "#ebe7e8",
                buttonBorderColor: "#bbb",
                buttonBorderRadius: 0,
                buttonBorderWidth: 1,
                minWidth: 6,
                rifleColor: "#666",
                trackBackgroundColor: "#eeeeee",
                trackBorderColor: "#eeeeee",
                trackBorderWidth: 1,
                liveRedraw: hasSVG && !isTouchDevice
            }
        }), Scroller.prototype = {
            drawHandle: function(x, index) {
                var tempElem, scroller = this,
                    chart = scroller.chart,
                    renderer = chart.renderer,
                    elementsToDestroy = scroller.elementsToDestroy,
                    handles = scroller.handles,
                    handlesOptions = scroller.navigatorOptions.handles,
                    attr = {
                        fill: handlesOptions.backgroundColor,
                        stroke: handlesOptions.borderColor,
                        "stroke-width": 1
                    };
                scroller.rendered || (handles[index] = renderer.g("navigator-handle-" + ["left", "right"][index]).css({
                    cursor: "e-resize"
                }).attr({
                    zIndex: 4 - index
                }).add(), tempElem = renderer.rect(-4.5, 0, 9, 16, 0, 1).attr(attr).add(handles[index]), elementsToDestroy.push(tempElem), tempElem = renderer.path(["M", -1.5, 4, "L", -1.5, 12, "M", .5, 4, "L", .5, 12]).attr(attr).add(handles[index]), elementsToDestroy.push(tempElem)), handles[index][chart.isResizing ? "animate" : "attr"]({
                    translateX: scroller.scrollerLeft + scroller.scrollbarHeight + parseInt(x, 10),
                    translateY: scroller.top + scroller.height / 2 - 8
                })
            },
            drawScrollbarButton: function(index) {
                var tempElem, scroller = this,
                    chart = scroller.chart,
                    renderer = chart.renderer,
                    elementsToDestroy = scroller.elementsToDestroy,
                    scrollbarButtons = scroller.scrollbarButtons,
                    scrollbarHeight = scroller.scrollbarHeight,
                    scrollbarOptions = scroller.scrollbarOptions;
                scroller.rendered || (scrollbarButtons[index] = renderer.g().add(scroller.scrollbarGroup), tempElem = renderer.rect(-.5, -.5, scrollbarHeight + 1, scrollbarHeight + 1, scrollbarOptions.buttonBorderRadius, scrollbarOptions.buttonBorderWidth).attr({
                    stroke: scrollbarOptions.buttonBorderColor,
                    "stroke-width": scrollbarOptions.buttonBorderWidth,
                    fill: scrollbarOptions.buttonBackgroundColor
                }).add(scrollbarButtons[index]), elementsToDestroy.push(tempElem), tempElem = renderer.path(["M", scrollbarHeight / 2 + (index ? -1 : 1), scrollbarHeight / 2 - 3, "L", scrollbarHeight / 2 + (index ? -1 : 1), scrollbarHeight / 2 + 3, scrollbarHeight / 2 + (index ? 2 : -2), scrollbarHeight / 2]).attr({
                    fill: scrollbarOptions.buttonArrowColor
                }).add(scrollbarButtons[index]), elementsToDestroy.push(tempElem)), index && scrollbarButtons[index].attr({
                    translateX: scroller.scrollerWidth - scrollbarHeight
                })
            },
            render: function(min, max, pxMin, pxMax) {
                var navigatorLeft, navigatorWidth, scrollerLeft, scrollerWidth, zoomedMin, zoomedMax, range, scrX, scrWidth, strokeWidth, centerBarX, verb, unionExtremes, scroller = this,
                    chart = scroller.chart,
                    renderer = chart.renderer,
                    scrollbarGroup = scroller.scrollbarGroup,
                    navigatorGroup = scroller.navigatorGroup,
                    scrollbar = scroller.scrollbar,
                    xAxis = scroller.xAxis,
                    scrollbarTrack = scroller.scrollbarTrack,
                    scrollbarHeight = scroller.scrollbarHeight,
                    scrollbarEnabled = scroller.scrollbarEnabled,
                    navigatorOptions = scroller.navigatorOptions,
                    scrollbarOptions = scroller.scrollbarOptions,
                    scrollbarMinWidth = scrollbarOptions.minWidth,
                    height = scroller.height,
                    top = scroller.top,
                    navigatorEnabled = scroller.navigatorEnabled,
                    outlineWidth = navigatorOptions.outlineWidth,
                    halfOutline = outlineWidth / 2,
                    scrollbarPad = 0,
                    outlineHeight = scroller.outlineHeight,
                    barBorderRadius = scrollbarOptions.barBorderRadius,
                    scrollbarStrokeWidth = scrollbarOptions.barBorderWidth,
                    outlineTop = top + halfOutline;
                isNaN(min) || (scroller.navigatorLeft = navigatorLeft = pick(xAxis.left, chart.plotLeft + scrollbarHeight), scroller.navigatorWidth = navigatorWidth = pick(xAxis.len, chart.plotWidth - 2 * scrollbarHeight), scroller.scrollerLeft = scrollerLeft = navigatorLeft - scrollbarHeight, scroller.scrollerWidth = scrollerWidth = scrollerWidth = navigatorWidth + 2 * scrollbarHeight, xAxis.getExtremes && (unionExtremes = scroller.getUnionExtremes(!0), !unionExtremes || unionExtremes.dataMin === xAxis.min && unionExtremes.dataMax === xAxis.max || xAxis.setExtremes(unionExtremes.dataMin, unionExtremes.dataMax, !0, !1)), pxMin = pick(pxMin, xAxis.translate(min)), pxMax = pick(pxMax, xAxis.translate(max)), (isNaN(pxMin) || 1 / 0 === mathAbs(pxMin)) && (pxMin = 0, pxMax = scrollerWidth), xAxis.translate(pxMax, !0) - xAxis.translate(pxMin, !0) < chart.xAxis[0].minRange || (scroller.zoomedMax = mathMin(mathMax(pxMin, pxMax), navigatorWidth), scroller.zoomedMin = mathMax(scroller.fixedWidth ? scroller.zoomedMax - scroller.fixedWidth : mathMin(pxMin, pxMax), 0), scroller.range = scroller.zoomedMax - scroller.zoomedMin, zoomedMax = mathRound(scroller.zoomedMax), zoomedMin = mathRound(scroller.zoomedMin), range = zoomedMax - zoomedMin, scroller.rendered || (navigatorEnabled && (scroller.navigatorGroup = navigatorGroup = renderer.g("navigator").attr({
                    zIndex: 3
                }).add(), scroller.leftShade = renderer.rect().attr({
                    fill: navigatorOptions.maskFill
                }).add(navigatorGroup), navigatorOptions.maskInside || (scroller.rightShade = renderer.rect().attr({
                    fill: navigatorOptions.maskFill
                }).add(navigatorGroup)), scroller.outline = renderer.path().attr({
                    "stroke-width": outlineWidth,
                    stroke: navigatorOptions.outlineColor
                }).add(navigatorGroup)), scrollbarEnabled && (scroller.scrollbarGroup = scrollbarGroup = renderer.g("scrollbar").add(), strokeWidth = scrollbarOptions.trackBorderWidth, scroller.scrollbarTrack = scrollbarTrack = renderer.rect().attr({
                    x: 0,
                    y: -strokeWidth % 2 / 2,
                    fill: scrollbarOptions.trackBackgroundColor,
                    stroke: scrollbarOptions.trackBorderColor,
                    "stroke-width": strokeWidth,
                    r: scrollbarOptions.trackBorderRadius || 0,
                    height: scrollbarHeight
                }).add(scrollbarGroup), scroller.scrollbar = scrollbar = renderer.rect().attr({
                    y: -scrollbarStrokeWidth % 2 / 2,
                    height: scrollbarHeight,
                    fill: scrollbarOptions.barBackgroundColor,
                    stroke: scrollbarOptions.barBorderColor,
                    "stroke-width": scrollbarStrokeWidth,
                    r: barBorderRadius
                }).add(scrollbarGroup), scroller.scrollbarRifles = renderer.path().attr({
                    stroke: scrollbarOptions.rifleColor,
                    "stroke-width": 1
                }).add(scrollbarGroup))), verb = chart.isResizing ? "animate" : "attr", navigatorEnabled && (scroller.leftShade[verb](navigatorOptions.maskInside ? {
                    x: navigatorLeft + zoomedMin,
                    y: top,
                    width: zoomedMax - zoomedMin,
                    height: height
                } : {
                    x: navigatorLeft,
                    y: top,
                    width: zoomedMin,
                    height: height
                }), scroller.rightShade && scroller.rightShade[verb]({
                    x: navigatorLeft + zoomedMax,
                    y: top,
                    width: navigatorWidth - zoomedMax,
                    height: height
                }), scroller.outline[verb]({
                    d: [M, scrollerLeft, outlineTop, L, navigatorLeft + zoomedMin + halfOutline, outlineTop, navigatorLeft + zoomedMin + halfOutline, outlineTop + outlineHeight, L, navigatorLeft + zoomedMax - halfOutline, outlineTop + outlineHeight, L, navigatorLeft + zoomedMax - halfOutline, outlineTop, scrollerLeft + scrollerWidth, outlineTop].concat(navigatorOptions.maskInside ? [M, navigatorLeft + zoomedMin + halfOutline, outlineTop, L, navigatorLeft + zoomedMax - halfOutline, outlineTop] : [])
                }), scroller.drawHandle(zoomedMin + halfOutline, 0), scroller.drawHandle(zoomedMax + halfOutline, 1)), scrollbarEnabled && scrollbarGroup && (scroller.drawScrollbarButton(0), scroller.drawScrollbarButton(1), scrollbarGroup[verb]({
                    translateX: scrollerLeft,
                    translateY: mathRound(outlineTop + height)
                }), scrollbarTrack[verb]({
                    width: scrollerWidth
                }), scrX = scrollbarHeight + zoomedMin, scrWidth = range - scrollbarStrokeWidth, scrollbarMinWidth > scrWidth && (scrollbarPad = (scrollbarMinWidth - scrWidth) / 2, scrWidth = scrollbarMinWidth, scrX -= scrollbarPad), scroller.scrollbarPad = scrollbarPad, scrollbar[verb]({
                    x: mathFloor(scrX) + scrollbarStrokeWidth % 2 / 2,
                    width: scrWidth
                }), centerBarX = scrollbarHeight + zoomedMin + range / 2 - .5, scroller.scrollbarRifles.attr({
                    visibility: range > 12 ? VISIBLE : HIDDEN
                })[verb]({
                    d: [M, centerBarX - 3, scrollbarHeight / 4, L, centerBarX - 3, 2 * scrollbarHeight / 3, M, centerBarX, scrollbarHeight / 4, L, centerBarX, 2 * scrollbarHeight / 3, M, centerBarX + 3, scrollbarHeight / 4, L, centerBarX + 3, 2 * scrollbarHeight / 3]
                })), scroller.scrollbarPad = scrollbarPad, scroller.rendered = !0))
            },
            addEvents: function() {
                var _events, container = this.chart.container,
                    mouseDownHandler = this.mouseDownHandler,
                    mouseMoveHandler = this.mouseMoveHandler,
                    mouseUpHandler = this.mouseUpHandler;
                _events = [
                    [container, "mousedown", mouseDownHandler],
                    [container, "mousemove", mouseMoveHandler],
                    [document, "mouseup", mouseUpHandler]
                ], hasTouch && _events.push([container, "touchstart", mouseDownHandler], [container, "touchmove", mouseMoveHandler], [document, "touchend", mouseUpHandler]), each(_events, function(args) {
                    addEvent.apply(null, args)
                }), this._events = _events
            },
            removeEvents: function() {
                each(this._events, function(args) {
                    removeEvent.apply(null, args)
                }), this._events = UNDEFINED, this.navigatorEnabled && this.baseSeries && removeEvent(this.baseSeries, "updatedData", this.updatedDataHandler)
            },
            init: function() {
                var xAxis, yAxis, dragOffset, hasDragged, defaultBodyCursor, scroller = this,
                    chart = scroller.chart,
                    scrollbarHeight = scroller.scrollbarHeight,
                    navigatorOptions = scroller.navigatorOptions,
                    height = scroller.height,
                    top = scroller.top,
                    bodyStyle = document.body.style,
                    baseSeries = scroller.baseSeries;
                scroller.mouseDownHandler = function(e) {
                    e = chart.pointer.normalize(e);
                    var fixedMax, ext, left, isOnNavigator, zoomedMin = scroller.zoomedMin,
                        zoomedMax = scroller.zoomedMax,
                        top = scroller.top,
                        scrollbarHeight = scroller.scrollbarHeight,
                        scrollerLeft = scroller.scrollerLeft,
                        scrollerWidth = scroller.scrollerWidth,
                        navigatorLeft = scroller.navigatorLeft,
                        navigatorWidth = scroller.navigatorWidth,
                        scrollbarPad = scroller.scrollbarPad,
                        range = scroller.range,
                        chartX = e.chartX,
                        chartY = e.chartY,
                        baseXAxis = chart.xAxis[0],
                        handleSensitivity = isTouchDevice ? 10 : 7;
                    chartY > top && top + height + scrollbarHeight > chartY && (isOnNavigator = !scroller.scrollbarEnabled || top + height > chartY, isOnNavigator && math.abs(chartX - zoomedMin - navigatorLeft) < handleSensitivity ? (scroller.grabbedLeft = !0, scroller.otherHandlePos = zoomedMax, scroller.fixedExtreme = baseXAxis.max, chart.fixedRange = null) : isOnNavigator && math.abs(chartX - zoomedMax - navigatorLeft) < handleSensitivity ? (scroller.grabbedRight = !0, scroller.otherHandlePos = zoomedMin, scroller.fixedExtreme = baseXAxis.min, chart.fixedRange = null) : chartX > navigatorLeft + zoomedMin - scrollbarPad && navigatorLeft + zoomedMax + scrollbarPad > chartX ? (scroller.grabbedCenter = chartX, scroller.fixedWidth = range, chart.renderer.isSVG && (defaultBodyCursor = bodyStyle.cursor, bodyStyle.cursor = "ew-resize"), dragOffset = chartX - zoomedMin) : chartX > scrollerLeft && scrollerLeft + scrollerWidth > chartX && (left = isOnNavigator ? chartX - navigatorLeft - range / 2 : navigatorLeft > chartX ? zoomedMin - .2 * range : chartX > scrollerLeft + scrollerWidth - scrollbarHeight ? zoomedMin + .2 * range : navigatorLeft + zoomedMin > chartX ? zoomedMin - range : zoomedMax, 0 > left ? left = 0 : left + range >= navigatorWidth && (left = navigatorWidth - range, fixedMax = xAxis.dataMax), left !== zoomedMin && (scroller.fixedWidth = range, ext = xAxis.toFixedRange(left, left + range, null, fixedMax), baseXAxis.setExtremes(ext.min, ext.max, !0, !1, {
                        trigger: "navigator"
                    }))))
                }, scroller.mouseMoveHandler = function(e) {
                    var chartX, scrollbarHeight = scroller.scrollbarHeight,
                        navigatorLeft = scroller.navigatorLeft,
                        navigatorWidth = scroller.navigatorWidth,
                        scrollerLeft = scroller.scrollerLeft,
                        scrollerWidth = scroller.scrollerWidth,
                        range = scroller.range;
                    0 !== e.pageX && (e = chart.pointer.normalize(e), chartX = e.chartX, navigatorLeft > chartX ? chartX = navigatorLeft : chartX > scrollerLeft + scrollerWidth - scrollbarHeight && (chartX = scrollerLeft + scrollerWidth - scrollbarHeight), scroller.grabbedLeft ? (hasDragged = !0, scroller.render(0, 0, chartX - navigatorLeft, scroller.otherHandlePos)) : scroller.grabbedRight ? (hasDragged = !0, scroller.render(0, 0, scroller.otherHandlePos, chartX - navigatorLeft)) : scroller.grabbedCenter && (hasDragged = !0, dragOffset > chartX ? chartX = dragOffset : chartX > navigatorWidth + dragOffset - range && (chartX = navigatorWidth + dragOffset - range), scroller.render(0, 0, chartX - dragOffset, chartX - dragOffset + range)), hasDragged && scroller.scrollbarOptions.liveRedraw && setTimeout(function() {
                        scroller.mouseUpHandler(e)
                    }, 0))
                }, scroller.mouseUpHandler = function(e) {
                    var ext, fixedMin, fixedMax;
                    hasDragged && (scroller.zoomedMin === scroller.otherHandlePos ? fixedMin = scroller.fixedExtreme : scroller.zoomedMax === scroller.otherHandlePos && (fixedMax = scroller.fixedExtreme), ext = xAxis.toFixedRange(scroller.zoomedMin, scroller.zoomedMax, fixedMin, fixedMax), chart.xAxis[0].setExtremes(ext.min, ext.max, !0, !1, {
                        trigger: "navigator",
                        triggerOp: "navigator-drag",
                        DOMEvent: e
                    })), "mousemove" !== e.type && (scroller.grabbedLeft = scroller.grabbedRight = scroller.grabbedCenter = scroller.fixedWidth = scroller.fixedExtreme = scroller.otherHandlePos = hasDragged = dragOffset = null, bodyStyle.cursor = defaultBodyCursor || "")
                };
                var xAxisIndex = chart.xAxis.length,
                    yAxisIndex = chart.yAxis.length;
                chart.extraBottomMargin = scroller.outlineHeight + navigatorOptions.margin, scroller.navigatorEnabled ? (scroller.xAxis = xAxis = new Axis(chart, merge({
                    ordinal: baseSeries && baseSeries.xAxis.options.ordinal
                }, navigatorOptions.xAxis, {
                    id: "navigator-x-axis",
                    isX: !0,
                    type: "datetime",
                    index: xAxisIndex,
                    height: height,
                    offset: 0,
                    offsetLeft: scrollbarHeight,
                    offsetRight: -scrollbarHeight,
                    keepOrdinalPadding: !0,
                    startOnTick: !1,
                    endOnTick: !1,
                    minPadding: 0,
                    maxPadding: 0,
                    zoomEnabled: !1
                })), scroller.yAxis = yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {
                    id: "navigator-y-axis",
                    alignTicks: !1,
                    height: height,
                    offset: 0,
                    index: yAxisIndex,
                    zoomEnabled: !1
                })), baseSeries || navigatorOptions.series.data ? scroller.addBaseSeries() : 0 === chart.series.length && wrap(chart, "redraw", function(proceed, animation) {
                    chart.series.length > 0 && !scroller.series && (scroller.setBaseSeries(), chart.redraw = proceed), proceed.call(chart, animation)
                })) : scroller.xAxis = xAxis = {
                    translate: function(value, reverse) {
                        var axis = chart.xAxis[0],
                            ext = axis.getExtremes(),
                            scrollTrackWidth = chart.plotWidth - 2 * scrollbarHeight,
                            min = numExt("min", axis.options.min, ext.dataMin),
                            valueRange = numExt("max", axis.options.max, ext.dataMax) - min;
                        return reverse ? value * valueRange / scrollTrackWidth + min : scrollTrackWidth * (value - min) / valueRange
                    },
                    toFixedRange: Axis.prototype.toFixedRange
                }, wrap(chart, "getMargins", function(proceed) {
                    var legend = this.legend,
                        legendOptions = legend.options;
                    proceed.call(this), scroller.top = top = scroller.navigatorOptions.top || this.chartHeight - scroller.height - scroller.scrollbarHeight - this.spacing[2] - ("bottom" === legendOptions.verticalAlign && legendOptions.enabled && !legendOptions.floating ? legend.legendHeight + pick(legendOptions.margin, 10) : 0), xAxis && yAxis && (xAxis.options.top = yAxis.options.top = top, xAxis.setAxisSize(), yAxis.setAxisSize())
                }), scroller.addEvents()
            },
            getUnionExtremes: function(returnFalseOnNoBaseSeries) {
                var baseAxis = this.chart.xAxis[0],
                    navAxis = this.xAxis,
                    navAxisOptions = navAxis.options,
                    baseAxisOptions = baseAxis.options;
                return returnFalseOnNoBaseSeries && null === baseAxis.dataMin ? void 0 : {
                    dataMin: numExt("min", navAxisOptions && navAxisOptions.min, baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin),
                    dataMax: numExt("max", navAxisOptions && navAxisOptions.max, baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax)
                }
            },
            setBaseSeries: function(baseSeriesOption) {
                var chart = this.chart;
                baseSeriesOption = baseSeriesOption || chart.options.navigator.baseSeries, this.series && this.series.remove(), this.baseSeries = chart.series[baseSeriesOption] || "string" == typeof baseSeriesOption && chart.get(baseSeriesOption) || chart.series[0], this.xAxis && this.addBaseSeries()
            },
            addBaseSeries: function() {
                var mergedNavSeriesOptions, navigatorData, baseSeries = this.baseSeries,
                    baseOptions = baseSeries ? baseSeries.options : {},
                    baseData = baseOptions.data,
                    navigatorSeriesOptions = this.navigatorOptions.series;
                navigatorData = navigatorSeriesOptions.data, this.hasNavigatorData = !!navigatorData, mergedNavSeriesOptions = merge(baseOptions, navigatorSeriesOptions, {
                    enableMouseTracking: !1,
                    group: "nav",
                    padXAxis: !1,
                    xAxis: "navigator-x-axis",
                    yAxis: "navigator-y-axis",
                    name: "Navigator",
                    showInLegend: !1,
                    isInternal: !0,
                    visible: !0
                }), mergedNavSeriesOptions.data = navigatorData || baseData, this.series = this.chart.initSeries(mergedNavSeriesOptions), baseSeries && this.navigatorOptions.adaptToUpdatedData !== !1 && (addEvent(baseSeries, "updatedData", this.updatedDataHandler), baseSeries.userOptions.events = extend(baseSeries.userOptions.event, {
                    updatedData: this.updatedDataHandler
                }))
            },
            updatedDataHandler: function() {
                var stickToMin, stickToMax, newMax, newMin, doRedraw, scroller = this.chart.scroller,
                    baseSeries = scroller.baseSeries,
                    baseXAxis = baseSeries.xAxis,
                    baseExtremes = baseXAxis.getExtremes(),
                    baseMin = baseExtremes.min,
                    baseMax = baseExtremes.max,
                    baseDataMin = baseExtremes.dataMin,
                    baseDataMax = baseExtremes.dataMax,
                    range = baseMax - baseMin,
                    navigatorSeries = scroller.series,
                    navXData = navigatorSeries.xData,
                    hasSetExtremes = !!baseXAxis.setExtremes;
                stickToMax = baseMax >= navXData[navXData.length - 1] - (this.closestPointRange || 0), stickToMin = baseDataMin >= baseMin, scroller.hasNavigatorData || (navigatorSeries.options.pointStart = baseSeries.xData[0], navigatorSeries.setData(baseSeries.options.data, !1), doRedraw = !0), stickToMin && (newMin = baseDataMin, newMax = newMin + range), stickToMax && (newMax = baseDataMax, stickToMin || (newMin = mathMax(newMax - range, navigatorSeries.xData[0]))), hasSetExtremes && (stickToMin || stickToMax) ? isNaN(newMin) || baseXAxis.setExtremes(newMin, newMax, !0, !1, {
                    trigger: "updatedData"
                }) : (doRedraw && this.chart.redraw(!1), scroller.render(mathMax(baseMin, baseDataMin), mathMin(baseMax, baseDataMax)))
            },
            destroy: function() {
                var scroller = this;
                scroller.removeEvents(), each([scroller.xAxis, scroller.yAxis, scroller.leftShade, scroller.rightShade, scroller.outline, scroller.scrollbarTrack, scroller.scrollbarRifles, scroller.scrollbarGroup, scroller.scrollbar], function(prop) {
                    prop && prop.destroy && prop.destroy()
                }), scroller.xAxis = scroller.yAxis = scroller.leftShade = scroller.rightShade = scroller.outline = scroller.scrollbarTrack = scroller.scrollbarRifles = scroller.scrollbarGroup = scroller.scrollbar = null, each([scroller.scrollbarButtons, scroller.handles, scroller.elementsToDestroy], function(coll) {
                    destroyObjectProperties(coll)
                })
            }
        }, Highcharts.Scroller = Scroller, wrap(Axis.prototype, "zoom", function(proceed, newMin, newMax) {
            var previousZoom, ret, chart = this.chart,
                chartOptions = chart.options,
                zoomType = chartOptions.chart.zoomType,
                navigator = chartOptions.navigator,
                rangeSelector = chartOptions.rangeSelector;
            return this.isXAxis && (navigator && navigator.enabled || rangeSelector && rangeSelector.enabled) && ("x" === zoomType ? chart.resetZoomButton = "blocked" : "y" === zoomType ? ret = !1 : "xy" === zoomType && (previousZoom = this.previousZoom, defined(newMin) ? this.previousZoom = [this.min, this.max] : previousZoom && (newMin = previousZoom[0], newMax = previousZoom[1], delete this.previousZoom))), ret !== UNDEFINED ? ret : proceed.call(this, newMin, newMax)
        }), wrap(Chart.prototype, "init", function(proceed, options, callback) {
            addEvent(this, "beforeRender", function() {
                var options = this.options;
                (options.navigator.enabled || options.scrollbar.enabled) && (this.scroller = new Scroller(this))
            }), proceed.call(this, options, callback)
        }), wrap(Series.prototype, "addPoint", function(proceed, options, redraw, shift, animation) {
            var turboThreshold = this.options.turboThreshold;
            turboThreshold && this.xData.length > turboThreshold && isObject(options) && !isArray(options) && this.chart.scroller && error(20, !0), proceed.call(this, options, redraw, shift, animation)
        }), extend(defaultOptions, {
            rangeSelector: {
                buttonTheme: {
                    width: 28,
                    height: 18,
                    fill: "#f7f7f7",
                    padding: 2,
                    r: 0,
                    "stroke-width": 0,
                    style: {
                        color: "#444",
                        cursor: "pointer",
                        fontWeight: "normal"
                    },
                    zIndex: 7,
                    states: {
                        hover: {
                            fill: "#e7e7e7"
                        },
                        select: {
                            fill: "#e7f0f9",
                            style: {
                                color: "black",
                                fontWeight: "bold"
                            }
                        }
                    }
                },
                inputPosition: {
                    align: "right"
                },
                labelStyle: {
                    color: "#666"
                }
            }
        }), defaultOptions.lang = merge(defaultOptions.lang, {
            rangeSelectorZoom: "Zoom",
            rangeSelectorFrom: "From",
            rangeSelectorTo: "To"
        }), RangeSelector.prototype = {
            clickButton: function(i, redraw) {
                var newMin, now, baseXAxisOptions, rangeMin, year, timeName, rangeSelector = this,
                    selected = rangeSelector.selected,
                    chart = rangeSelector.chart,
                    buttons = rangeSelector.buttons,
                    rangeOptions = rangeSelector.buttonOptions[i],
                    baseAxis = chart.xAxis[0],
                    unionExtremes = chart.scroller && chart.scroller.getUnionExtremes() || baseAxis || {},
                    dataMin = unionExtremes.dataMin,
                    dataMax = unionExtremes.dataMax,
                    newMax = baseAxis && mathRound(mathMin(baseAxis.max, pick(dataMax, baseAxis.max))),
                    date = new Date(newMax),
                    type = rangeOptions.type,
                    count = rangeOptions.count,
                    range = rangeOptions._range;
                if (null !== dataMin && null !== dataMax && i !== rangeSelector.selected) {
                    if ("month" === type || "year" === type) timeName = {
                        month: "Month",
                        year: "FullYear"
                    }[type], date["set" + timeName](date["get" + timeName]() - count), newMin = date.getTime(), dataMin = pick(dataMin, Number.MIN_VALUE), isNaN(newMin) || dataMin > newMin ? (newMin = dataMin, newMax = mathMin(newMin + range, dataMax)) : range = newMax - newMin;
                    else if (range) newMin = mathMax(newMax - range, dataMin), newMax = mathMin(newMin + range, dataMax);
                    else if ("ytd" === type) {
                        if (!baseAxis) return void addEvent(chart, "beforeRender", function() {
                            rangeSelector.clickButton(i)
                        });
                        dataMax === UNDEFINED && (dataMin = Number.MAX_VALUE, dataMax = Number.MIN_VALUE, each(chart.series, function(series) {
                            var xData = series.xData;
                            dataMin = mathMin(xData[0], dataMin), dataMax = mathMax(xData[xData.length - 1], dataMax)
                        }), redraw = !1), now = new Date(dataMax), year = now.getFullYear(), newMin = rangeMin = mathMax(dataMin || 0, Date.UTC(year, 0, 1)), now = now.getTime(), newMax = mathMin(dataMax || now, now)
                    } else "all" === type && baseAxis && (newMin = dataMin, newMax = dataMax);
                    buttons[selected] && buttons[selected].setState(0), buttons[i] && buttons[i].setState(2), chart.fixedRange = range, baseAxis ? (baseAxis.setExtremes(newMin, newMax, pick(redraw, 1), 0, {
                        trigger: "rangeSelectorButton",
                        rangeSelectorButton: rangeOptions
                    }), rangeSelector.setSelected(i)) : (baseXAxisOptions = chart.options.xAxis, baseXAxisOptions[0] = merge(baseXAxisOptions[0], {
                        range: range,
                        min: rangeMin
                    }), rangeSelector.setSelected(i))
                }
            },
            setSelected: function(selected) {
                this.selected = this.options.selected = selected
            },
            defaultButtons: [{
                type: "month",
                count: 1,
                text: "1m"
            }, {
                type: "month",
                count: 3,
                text: "3m"
            }, {
                type: "month",
                count: 6,
                text: "6m"
            }, {
                type: "ytd",
                text: "YTD"
            }, {
                type: "year",
                count: 1,
                text: "1y"
            }, {
                type: "all",
                text: "All"
            }],
            init: function(chart) {
                var rangeSelector = this,
                    options = chart.options.rangeSelector,
                    buttonOptions = options.buttons || [].concat(rangeSelector.defaultButtons),
                    selectedOption = options.selected,
                    blurInputs = rangeSelector.blurInputs = function() {
                        var minInput = rangeSelector.minInput,
                            maxInput = rangeSelector.maxInput;
                        minInput && minInput.blur(), maxInput && maxInput.blur()
                    };
                rangeSelector.chart = chart, rangeSelector.options = options, rangeSelector.buttons = [], chart.extraTopMargin = 35, rangeSelector.buttonOptions = buttonOptions, addEvent(chart.container, "mousedown", blurInputs), addEvent(chart, "resize", blurInputs), each(buttonOptions, rangeSelector.computeButtonRange), selectedOption !== UNDEFINED && buttonOptions[selectedOption] && this.clickButton(selectedOption, !1), addEvent(chart, "load", function() {
                    addEvent(chart.xAxis[0], "afterSetExtremes", function() {
                        rangeSelector.updateButtonStates(!0)
                    })
                })
            },
            updateButtonStates: function(updating) {
                var rangeSelector = this,
                    chart = this.chart,
                    baseAxis = chart.xAxis[0],
                    unionExtremes = chart.scroller && chart.scroller.getUnionExtremes() || baseAxis,
                    dataMin = unionExtremes.dataMin,
                    dataMax = unionExtremes.dataMax,
                    selected = rangeSelector.selected,
                    allButtonsEnabled = rangeSelector.options.allButtonsEnabled,
                    buttons = rangeSelector.buttons;
                updating && chart.fixedRange !== mathRound(baseAxis.max - baseAxis.min) && (buttons[selected] && buttons[selected].setState(0), rangeSelector.setSelected(null)), each(rangeSelector.buttonOptions, function(rangeOptions, i) {
                    var range = rangeOptions._range,
                        isTooGreatRange = range > dataMax - dataMin,
                        isTooSmallRange = range < baseAxis.minRange,
                        isAllButAlreadyShowingAll = "all" === rangeOptions.type && baseAxis.max - baseAxis.min >= dataMax - dataMin && 2 !== buttons[i].state,
                        isYTDButNotAvailable = "ytd" === rangeOptions.type && dateFormat("%Y", dataMin) === dateFormat("%Y", dataMax);
                    range === mathRound(baseAxis.max - baseAxis.min) && i !== selected ? (rangeSelector.setSelected(i), buttons[i].setState(2)) : !allButtonsEnabled && (isTooGreatRange || isTooSmallRange || isAllButAlreadyShowingAll || isYTDButNotAvailable) ? buttons[i].setState(3) : 3 === buttons[i].state && buttons[i].setState(0)
                })
            },
            computeButtonRange: function(rangeOptions) {
                var type = rangeOptions.type,
                    count = rangeOptions.count || 1,
                    fixedTimes = {
                        millisecond: 1,
                        second: 1e3,
                        minute: 6e4,
                        hour: 36e5,
                        day: 864e5,
                        week: 6048e5
                    };
                fixedTimes[type] ? rangeOptions._range = fixedTimes[type] * count : ("month" === type || "year" === type) && (rangeOptions._range = 24 * {
                    month: 30,
                    year: 365
                }[type] * 36e5 * count)
            },
            setInputValue: function(name, time) {
                var options = this.chart.options.rangeSelector;
                defined(time) && (this[name + "Input"].HCTime = time), this[name + "Input"].value = dateFormat(options.inputEditDateFormat || "%Y-%m-%d", this[name + "Input"].HCTime), this[name + "DateBox"].attr({
                    text: dateFormat(options.inputDateFormat || "%b %e, %Y", this[name + "Input"].HCTime)
                })
            },
            drawInput: function(name) {
                var input, label, dateBox, rangeSelector = this,
                    chart = rangeSelector.chart,
                    chartStyle = chart.renderer.style,
                    renderer = chart.renderer,
                    options = chart.options.rangeSelector,
                    lang = defaultOptions.lang,
                    div = rangeSelector.div,
                    isMin = "min" === name,
                    inputGroup = this.inputGroup;
                this[name + "Label"] = label = renderer.label(lang[isMin ? "rangeSelectorFrom" : "rangeSelectorTo"], this.inputGroup.offset).attr({
                    padding: 2
                }).css(merge(chartStyle, options.labelStyle)).add(inputGroup), inputGroup.offset += label.width + 5, this[name + "DateBox"] = dateBox = renderer.label("", inputGroup.offset).attr({
                    padding: 2,
                    width: options.inputBoxWidth || 90,
                    height: options.inputBoxHeight || 17,
                    stroke: options.inputBoxBorderColor || "silver",
                    "stroke-width": 1
                }).css(merge({
                    textAlign: "center",
                    color: "#444"
                }, chartStyle, options.inputStyle)).on("click", function() {
                    rangeSelector[name + "Input"].focus()
                }).add(inputGroup), inputGroup.offset += dateBox.width + (isMin ? 10 : 0), this[name + "Input"] = input = createElement("input", {
                    name: name,
                    className: PREFIX + "range-selector",
                    type: "text"
                }, extend({
                    position: ABSOLUTE,
                    border: 0,
                    width: "1px",
                    height: "1px",
                    padding: 0,
                    textAlign: "center",
                    fontSize: chartStyle.fontSize,
                    fontFamily: chartStyle.fontFamily,
                    top: chart.plotTop + PX
                }, options.inputStyle), div), input.onfocus = function() {
                    css(this, {
                        left: inputGroup.translateX + dateBox.x + PX,
                        top: inputGroup.translateY + PX,
                        width: dateBox.width - 2 + PX,
                        height: dateBox.height - 2 + PX,
                        border: "2px solid silver"
                    })
                }, input.onblur = function() {
                    css(this, {
                        border: 0,
                        width: "1px",
                        height: "1px"
                    }), rangeSelector.setInputValue(name)
                }, input.onchange = function() {
                    var inputValue = input.value,
                        value = (options.inputDateParser || Date.parse)(inputValue),
                        xAxis = chart.xAxis[0],
                        dataMin = xAxis.dataMin,
                        dataMax = xAxis.dataMax;
                    isNaN(value) && (value = inputValue.split("-"), value = Date.UTC(pInt(value[0]), pInt(value[1]) - 1, pInt(value[2]))), isNaN(value) || (defaultOptions.global.useUTC || (value += 60 * (new Date).getTimezoneOffset() * 1e3), isMin ? value > rangeSelector.maxInput.HCTime ? value = UNDEFINED : dataMin > value && (value = dataMin) : value < rangeSelector.minInput.HCTime ? value = UNDEFINED : value > dataMax && (value = dataMax), value !== UNDEFINED && chart.xAxis[0].setExtremes(isMin ? value : xAxis.min, isMin ? xAxis.max : value, UNDEFINED, UNDEFINED, {
                        trigger: "rangeSelectorInput"
                    }))
                }
            },
            render: function(min, max) {
                var yAlign, buttonLeft, rangeSelector = this,
                    chart = rangeSelector.chart,
                    renderer = chart.renderer,
                    container = chart.container,
                    chartOptions = chart.options,
                    navButtonOptions = chartOptions.exporting && chartOptions.navigation && chartOptions.navigation.buttonOptions,
                    options = chartOptions.rangeSelector,
                    buttons = rangeSelector.buttons,
                    lang = defaultOptions.lang,
                    div = rangeSelector.div,
                    inputGroup = rangeSelector.inputGroup,
                    buttonTheme = options.buttonTheme,
                    inputEnabled = options.inputEnabled !== !1,
                    states = buttonTheme && buttonTheme.states,
                    plotLeft = chart.plotLeft;
                rangeSelector.rendered || (rangeSelector.zoomText = renderer.text(lang.rangeSelectorZoom, plotLeft, chart.plotTop - 20).css(options.labelStyle).add(), buttonLeft = plotLeft + rangeSelector.zoomText.getBBox().width + 5, each(rangeSelector.buttonOptions, function(rangeOptions, i) {
                    buttons[i] = renderer.button(rangeOptions.text, buttonLeft, chart.plotTop - 35, function() {
                        rangeSelector.clickButton(i), rangeSelector.isActive = !0
                    }, buttonTheme, states && states.hover, states && states.select).css({
                        textAlign: "center"
                    }).add(), buttonLeft += buttons[i].width + pick(options.buttonSpacing, 5), rangeSelector.selected === i && buttons[i].setState(2)
                }), rangeSelector.updateButtonStates(), inputEnabled && (rangeSelector.div = div = createElement("div", null, {
                    position: "relative",
                    height: 0,
                    zIndex: 1
                }), container.parentNode.insertBefore(div, container), rangeSelector.inputGroup = inputGroup = renderer.g("input-group").add(), inputGroup.offset = 0, rangeSelector.drawInput("min"), rangeSelector.drawInput("max"))), inputEnabled && (yAlign = chart.plotTop - 45, inputGroup.align(extend({
                    y: yAlign,
                    width: inputGroup.offset,
                    x: navButtonOptions && yAlign < (navButtonOptions.y || 0) + navButtonOptions.height - chart.spacing[0] ? -40 : 0
                }, options.inputPosition), !0, chart.spacingBox), rangeSelector.setInputValue("min", min), rangeSelector.setInputValue("max", max)), rangeSelector.rendered = !0
            },
            destroy: function() {
                var key, minInput = this.minInput,
                    maxInput = this.maxInput,
                    chart = this.chart,
                    blurInputs = this.blurInputs;
                removeEvent(chart.container, "mousedown", blurInputs), removeEvent(chart, "resize", blurInputs), destroyObjectProperties(this.buttons), minInput && (minInput.onfocus = minInput.onblur = minInput.onchange = null), maxInput && (maxInput.onfocus = maxInput.onblur = maxInput.onchange = null);
                for (key in this) this[key] && "chart" !== key && (this[key].destroy ? this[key].destroy() : this[key].nodeType && discardElement(this[key])), this[key] = null
            }
        }, Axis.prototype.toFixedRange = function(pxMin, pxMax, fixedMin, fixedMax) {
            var fixedRange = this.chart && this.chart.fixedRange,
                newMin = pick(fixedMin, this.translate(pxMin, !0)),
                newMax = pick(fixedMax, this.translate(pxMax, !0)),
                changeRatio = fixedRange && (newMax - newMin) / fixedRange;
            return changeRatio > .7 && 1.3 > changeRatio && (fixedMax ? newMin = newMax - fixedRange : newMax = newMin + fixedRange), {
                min: newMin,
                max: newMax
            }
        }, wrap(Chart.prototype, "init", function(proceed, options, callback) {
            addEvent(this, "init", function() {
                this.options.rangeSelector.enabled && (this.rangeSelector = new RangeSelector(this))
            }), proceed.call(this, options, callback)
        }), Highcharts.RangeSelector = RangeSelector, Chart.prototype.callbacks.push(function(chart) {
            function renderScroller() {
                extremes = chart.xAxis[0].getExtremes(), scroller.render(extremes.min, extremes.max)
            }

            function renderRangeSelector() {
                extremes = chart.xAxis[0].getExtremes(), isNaN(extremes.min) || rangeSelector.render(extremes.min, extremes.max)
            }

            function afterSetExtremesHandlerScroller(e) {
                "navigator-drag" !== e.triggerOp && scroller.render(e.min, e.max)
            }

            function afterSetExtremesHandlerRangeSelector(e) {
                rangeSelector.render(e.min, e.max)
            }

            function destroyEvents() {
                scroller && removeEvent(chart.xAxis[0], "afterSetExtremes", afterSetExtremesHandlerScroller), rangeSelector && (removeEvent(chart, "resize", renderRangeSelector), removeEvent(chart.xAxis[0], "afterSetExtremes", afterSetExtremesHandlerRangeSelector))
            }
            var extremes, scroller = chart.scroller,
                rangeSelector = chart.rangeSelector;
            scroller && (addEvent(chart.xAxis[0], "afterSetExtremes", afterSetExtremesHandlerScroller), wrap(chart, "drawChartBox", function(proceed) {
                var isDirtyBox = this.isDirtyBox;
                proceed.call(this), isDirtyBox && renderScroller()
            }), renderScroller()), rangeSelector && (addEvent(chart.xAxis[0], "afterSetExtremes", afterSetExtremesHandlerRangeSelector), addEvent(chart, "resize", renderRangeSelector), renderRangeSelector()), addEvent(chart, "destroy", destroyEvents)
        }), Highcharts.StockChart = function(options, callback) {
            var opposite, seriesOptions = options.series,
                navigatorEnabled = pick(options.navigator && options.navigator.enabled, !0),
                disableStartOnTick = navigatorEnabled ? {
                    startOnTick: !1,
                    endOnTick: !1
                } : null,
                lineOptions = {
                    marker: {
                        enabled: !1,
                        radius: 2
                    },
                    states: {
                        hover: {
                            lineWidth: 2
                        }
                    }
                },
                columnOptions = {
                    shadow: !1,
                    borderWidth: 0
                };
            return options.xAxis = map(splat(options.xAxis || {}), function(xAxisOptions) {
                return merge({
                    minPadding: 0,
                    maxPadding: 0,
                    ordinal: !0,
                    title: {
                        text: null
                    },
                    labels: {
                        overflow: "justify"
                    },
                    showLastLabel: !0
                }, xAxisOptions, {
                    type: "datetime",
                    categories: null
                }, disableStartOnTick)
            }), options.yAxis = map(splat(options.yAxis || {}), function(yAxisOptions) {
                return opposite = pick(yAxisOptions.opposite, !0), merge({
                    labels: {
                        y: -2
                    },
                    opposite: opposite,
                    showLastLabel: !1,
                    title: {
                        text: null
                    }
                }, yAxisOptions)
            }), options.series = null, options = merge({
                chart: {
                    panning: !0,
                    pinchType: "x"
                },
                navigator: {
                    enabled: !0
                },
                scrollbar: {
                    enabled: !0
                },
                rangeSelector: {
                    enabled: !0
                },
                title: {
                    text: null,
                    style: {
                        fontSize: "16px"
                    }
                },
                tooltip: {
                    shared: !0,
                    crosshairs: !0
                },
                legend: {
                    enabled: !1
                },
                plotOptions: {
                    line: lineOptions,
                    spline: lineOptions,
                    area: lineOptions,
                    areaspline: lineOptions,
                    arearange: lineOptions,
                    areasplinerange: lineOptions,
                    column: columnOptions,
                    columnrange: columnOptions,
                    candlestick: columnOptions,
                    ohlc: columnOptions
                }
            }, options, {
                _stock: !0,
                chart: {
                    inverted: !1
                }
            }), options.series = seriesOptions, new Chart(options, callback)
        }, wrap(Pointer.prototype, "init", function(proceed, chart, options) {
            var pinchType = options.chart.pinchType || "";
            proceed.call(this, chart, options), this.pinchX = this.pinchHor = -1 !== pinchType.indexOf("x"), this.pinchY = this.pinchVert = -1 !== pinchType.indexOf("y"), this.hasZoom = this.hasZoom || this.pinchHor || this.pinchVert
        }), wrap(Axis.prototype, "autoLabelAlign", function(proceed) {
            return this.chart.options._stock && "yAxis" === this.coll && 0 === inArray(this, this.chart.yAxis) ? (15 === this.options.labels.x && (this.options.labels.x = 0), "right") : proceed.call(this, [].slice.call(arguments, 1))
        }), Axis.prototype.getPlotLinePath = function(value, lineWidth, old, force, translatedValue) {
            var x1, y1, x2, y2, axes, axes2, uniqueAxes, axis = this,
                series = this.isLinked && !this.series ? this.linkedParent.series : this.series,
                chart = axis.chart,
                renderer = chart.renderer,
                axisLeft = axis.left,
                axisTop = axis.top,
                result = [];
            return axes = axis.isXAxis ? defined(axis.options.yAxis) ? [chart.yAxis[axis.options.yAxis]] : map(series, function(S) {
                return S.yAxis
            }) : defined(axis.options.xAxis) ? [chart.xAxis[axis.options.xAxis]] : map(series, function(S) {
                return S.xAxis
            }), axes2 = axis.isXAxis ? chart.yAxis : chart.xAxis, each(axes2, function(A) {
                if (defined(A.options.id) ? -1 === A.options.id.indexOf("navigator") : !0) {
                    var a = A.isXAxis ? "yAxis" : "xAxis",
                        rax = defined(A.options[a]) ? chart[a][A.options[a]] : chart[a][0];
                    axis === rax && axes.push(A)
                }
            }), uniqueAxes = axes.length ? [] : [axis], each(axes, function(axis2) {
                -1 === inArray(axis2, uniqueAxes) && uniqueAxes.push(axis2)
            }), translatedValue = pick(translatedValue, axis.translate(value, null, null, old)), isNaN(translatedValue) || (axis.horiz ? each(uniqueAxes, function(axis2) {
                y1 = axis2.top, y2 = y1 + axis2.len, x1 = x2 = mathRound(translatedValue + axis.transB), (x1 >= axisLeft && x1 <= axisLeft + axis.width || force) && result.push("M", x1, y1, "L", x2, y2)
            }) : each(uniqueAxes, function(axis2) {
                x1 = axis2.left, x2 = x1 + axis2.width, y1 = y2 = mathRound(axisTop + axis.height - translatedValue), (y1 >= axisTop && y1 <= axisTop + axis.height || force) && result.push("M", x1, y1, "L", x2, y2)
            })), result.length > 0 ? renderer.crispPolyLine(result, lineWidth || 1) : void 0
        }, Axis.prototype.getPlotBandPath = function(from, to) {
            var i, toPath = this.getPlotLinePath(to),
                path = this.getPlotLinePath(from),
                result = [];
            if (path && toPath)
                for (i = 0; i < path.length; i += 6) result.push("M", path[i + 1], path[i + 2], "L", path[i + 4], path[i + 5], toPath[i + 4], toPath[i + 5], toPath[i + 1], toPath[i + 2]);
            else result = null;
            return result
        }, SVGRenderer.prototype.crispPolyLine = function(points, width) {
            var i;
            for (i = 0; i < points.length; i += 6) points[i + 1] === points[i + 4] && (points[i + 1] = points[i + 4] = mathRound(points[i + 1]) - width % 2 / 2), points[i + 2] === points[i + 5] && (points[i + 2] = points[i + 5] = mathRound(points[i + 2]) + width % 2 / 2);
            return points
        }, Renderer === Highcharts.VMLRenderer && (VMLRenderer.prototype.crispPolyLine = SVGRenderer.prototype.crispPolyLine), wrap(Axis.prototype, "hideCrosshair", function(proceed, i) {
            proceed.call(this, i), defined(this.crossLabelArray) && (defined(i) ? this.crossLabelArray[i] && this.crossLabelArray[i].hide() : each(this.crossLabelArray, function(crosslabel) {
                crosslabel.hide()
            }))
        }), wrap(Axis.prototype, "drawCrosshair", function(proceed, e, point) {
            if (proceed.call(this, e, point), defined(this.crosshair.label) && this.crosshair.label.enabled && defined(point)) {
                var posx, posy, crossBox, limit, chart = this.chart,
                    options = this.options.crosshair.label,
                    axis = this.isXAxis ? "x" : "y",
                    horiz = this.horiz,
                    opposite = this.opposite,
                    left = this.left,
                    top = this.top,
                    crossLabel = this.crossLabel,
                    formatOption = options.format,
                    formatFormat = "";
                if (crossLabel || (crossLabel = this.crossLabel = chart.renderer.label().attr({
                        align: options.align || (horiz ? "center" : opposite ? "right" === this.labelAlign ? "right" : "left" : "left" === this.labelAlign ? "left" : "center"),
                        zIndex: 12,
                        height: horiz ? 16 : UNDEFINED,
                        fill: options.backgroundColor || this.series[0] && this.series[0].color || "gray",
                        padding: pick(options.padding, 2),
                        stroke: options.borderColor || null,
                        "stroke-width": options.borderWidth || 0
                    }).css(extend({
                        color: "white",
                        fontWeight: "normal",
                        fontSize: "11px",
                        textAlign: "center"
                    }, options.style)).add()), horiz ? (posx = point.plotX + left, posy = top + (opposite ? 0 : this.height)) : (posx = opposite ? this.width + left : 0, posy = point.plotY + top), top > posy || posy > top + this.height) return void this.hideCrosshair();
                formatOption || options.formatter || (this.isDatetimeAxis && (formatFormat = "%b %d, %Y"), formatOption = "{value" + (formatFormat ? ":" + formatFormat : "") + "}"), crossLabel.attr({
                    text: formatOption ? format(formatOption, {
                        value: point[axis]
                    }) : options.formatter.call(this, point[axis]),
                    x: posx,
                    y: posy,
                    visibility: VISIBLE
                }), crossBox = crossLabel.getBBox(), horiz ? ("inside" === this.options.tickPosition && !opposite || "inside" !== this.options.tickPosition && opposite) && (posy = crossLabel.y - crossBox.height) : posy = crossLabel.y - crossBox.height / 2, limit = horiz ? {
                    left: left - crossBox.x,
                    right: left + this.width - crossBox.x
                } : {
                    left: "left" === this.labelAlign ? left : 0,
                    right: "right" === this.labelAlign ? left + this.width : chart.chartWidth
                }, crossLabel.translateX < limit.left && (posx += limit.left - crossLabel.translateX), crossLabel.translateX + crossBox.width >= limit.right && (posx -= crossLabel.translateX + crossBox.width - limit.right), crossLabel.attr({
                    x: posx,
                    y: posy,
                    visibility: VISIBLE
                })
            }
        });
        var seriesInit = seriesProto.init,
            seriesProcessData = seriesProto.processData,
            pointTooltipFormatter = Point.prototype.tooltipFormatter;
        seriesProto.init = function() {
            seriesInit.apply(this, arguments), this.setCompare(this.options.compare)
        }, seriesProto.setCompare = function(compare) {
            this.modifyValue = "value" === compare || "percent" === compare ? function(value, point) {
                var compareValue = this.compareValue;
                return value !== UNDEFINED && (value = "value" === compare ? value - compareValue : value = 100 * (value / compareValue) - 100, point && (point.change = value)), value
            } : null, this.chart.hasRendered && (this.isDirty = !0)
        }, seriesProto.processData = function() {
            var processedXData, processedYData, length, series = this,
                i = 0;
            if (seriesProcessData.apply(this, arguments), series.xAxis && series.processedYData)
                for (processedXData = series.processedXData, processedYData = series.processedYData, length = processedYData.length; length > i; i++)
                    if (typeof processedYData[i] === NUMBER && processedXData[i] >= series.xAxis.min) {
                        series.compareValue = processedYData[i];
                        break
                    }
        }, wrap(seriesProto, "getExtremes", function(proceed) {
            proceed.apply(this, [].slice.call(arguments, 1)), this.modifyValue && (this.dataMax = this.modifyValue(this.dataMax), this.dataMin = this.modifyValue(this.dataMin))
        }), Axis.prototype.setCompare = function(compare, redraw) {
            this.isXAxis || (each(this.series, function(series) {
                series.setCompare(compare)
            }), pick(redraw, !0) && this.chart.redraw())
        }, Point.prototype.tooltipFormatter = function(pointFormat) {
            var point = this;
            return pointFormat = pointFormat.replace("{point.change}", (point.change > 0 ? "+" : "") + numberFormat(point.change, pick(point.series.tooltipOptions.changeDecimals, 2))), pointTooltipFormatter.apply(this, [pointFormat])
        }, wrap(Series.prototype, "render", function(proceed) {
            this.chart.options._stock && (!this.clipBox && this.animate && -1 !== this.animate.toString().indexOf("sharedClip") ? (this.clipBox = merge(this.chart.clipBox), this.clipBox.width = this.xAxis.len, this.clipBox.height = this.yAxis.len) : this.chart[this.sharedClipKey] && this.chart[this.sharedClipKey].attr({
                width: this.xAxis.len,
                height: this.yAxis.len
            })), proceed.call(this)
        }), extend(Highcharts, {
            Axis: Axis,
            Chart: Chart,
            Color: Color,
            Point: Point,
            Tick: Tick,
            Renderer: Renderer,
            Series: Series,
            SVGElement: SVGElement,
            SVGRenderer: SVGRenderer,
            arrayMin: arrayMin,
            arrayMax: arrayMax,
            charts: charts,
            dateFormat: dateFormat,
            format: format,
            pathAnim: pathAnim,
            getOptions: getOptions,
            hasBidiBug: hasBidiBug,
            isTouchDevice: isTouchDevice,
            numberFormat: numberFormat,
            seriesTypes: seriesTypes,
            setOptions: setOptions,
            addEvent: addEvent,
            removeEvent: removeEvent,
            createElement: createElement,
            discardElement: discardElement,
            css: css,
            each: each,
            extend: extend,
            map: map,
            merge: merge,
            pick: pick,
            splat: splat,
            extendClass: extendClass,
            pInt: pInt,
            wrap: wrap,
            svg: hasSVG,
            canvas: useCanVG,
            vml: !hasSVG && !useCanVG,
            product: PRODUCT,
            version: VERSION
        })
    }(),
    function($) {
        var DatePicker = function() {
            var views = {
                    years: "datepickerViewYears",
                    moths: "datepickerViewMonths",
                    days: "datepickerViewDays"
                },
                tpl = {
                    wrapper: '<div class="datepicker"><div class="datepickerBorderT" /><div class="datepickerBorderB" /><div class="datepickerBorderL" /><div class="datepickerBorderR" /><div class="datepickerBorderTL" /><div class="datepickerBorderTR" /><div class="datepickerBorderBL" /><div class="datepickerBorderBR" /><div class="datepickerContainer"><table cellspacing="0" cellpadding="0"><tbody><tr></tr></tbody></table></div></div>',
                    head: ['<td class="datepickerBlock">', '<table cellspacing="0" cellpadding="0">', "<thead>", "<tr>", '<th colspan="7"><a class="datepickerGoPrev" href="#"><span><%=prev%></span></a>', '<a class="datepickerMonth" href="#"><span></span></a>', '<a class="datepickerGoNext" href="#"><span><%=next%></span></a></th>', "</tr>", '<tr class="datepickerDoW">', "<th><span><%=day1%></span></th>", "<th><span><%=day2%></span></th>", "<th><span><%=day3%></span></th>", "<th><span><%=day4%></span></th>", "<th><span><%=day5%></span></th>", "<th><span><%=day6%></span></th>", "<th><span><%=day7%></span></th>", "</tr>", "</thead>", "</table></td>"],
                    space: '<td class="datepickerSpace"><div></div></td>',
                    days: ['<tbody class="datepickerDays">', "<tr>", '<td class="<%=weeks[0].days[0].classname%>"><a href="#"><span><%=weeks[0].days[0].text%></span></a></td>', '<td class="<%=weeks[0].days[1].classname%>"><a href="#"><span><%=weeks[0].days[1].text%></span></a></td>', '<td class="<%=weeks[0].days[2].classname%>"><a href="#"><span><%=weeks[0].days[2].text%></span></a></td>', '<td class="<%=weeks[0].days[3].classname%>"><a href="#"><span><%=weeks[0].days[3].text%></span></a></td>', '<td class="<%=weeks[0].days[4].classname%>"><a href="#"><span><%=weeks[0].days[4].text%></span></a></td>', '<td class="<%=weeks[0].days[5].classname%>"><a href="#"><span><%=weeks[0].days[5].text%></span></a></td>', '<td class="<%=weeks[0].days[6].classname%>"><a href="#"><span><%=weeks[0].days[6].text%></span></a></td>', "</tr>", "<tr>", '<td class="<%=weeks[1].days[0].classname%>"><a href="#"><span><%=weeks[1].days[0].text%></span></a></td>', '<td class="<%=weeks[1].days[1].classname%>"><a href="#"><span><%=weeks[1].days[1].text%></span></a></td>', '<td class="<%=weeks[1].days[2].classname%>"><a href="#"><span><%=weeks[1].days[2].text%></span></a></td>', '<td class="<%=weeks[1].days[3].classname%>"><a href="#"><span><%=weeks[1].days[3].text%></span></a></td>', '<td class="<%=weeks[1].days[4].classname%>"><a href="#"><span><%=weeks[1].days[4].text%></span></a></td>', '<td class="<%=weeks[1].days[5].classname%>"><a href="#"><span><%=weeks[1].days[5].text%></span></a></td>', '<td class="<%=weeks[1].days[6].classname%>"><a href="#"><span><%=weeks[1].days[6].text%></span></a></td>', "</tr>", "<tr>", '<td class="<%=weeks[2].days[0].classname%>"><a href="#"><span><%=weeks[2].days[0].text%></span></a></td>', '<td class="<%=weeks[2].days[1].classname%>"><a href="#"><span><%=weeks[2].days[1].text%></span></a></td>', '<td class="<%=weeks[2].days[2].classname%>"><a href="#"><span><%=weeks[2].days[2].text%></span></a></td>', '<td class="<%=weeks[2].days[3].classname%>"><a href="#"><span><%=weeks[2].days[3].text%></span></a></td>', '<td class="<%=weeks[2].days[4].classname%>"><a href="#"><span><%=weeks[2].days[4].text%></span></a></td>', '<td class="<%=weeks[2].days[5].classname%>"><a href="#"><span><%=weeks[2].days[5].text%></span></a></td>', '<td class="<%=weeks[2].days[6].classname%>"><a href="#"><span><%=weeks[2].days[6].text%></span></a></td>', "</tr>", "<tr>", '<td class="<%=weeks[3].days[0].classname%>"><a href="#"><span><%=weeks[3].days[0].text%></span></a></td>', '<td class="<%=weeks[3].days[1].classname%>"><a href="#"><span><%=weeks[3].days[1].text%></span></a></td>', '<td class="<%=weeks[3].days[2].classname%>"><a href="#"><span><%=weeks[3].days[2].text%></span></a></td>', '<td class="<%=weeks[3].days[3].classname%>"><a href="#"><span><%=weeks[3].days[3].text%></span></a></td>', '<td class="<%=weeks[3].days[4].classname%>"><a href="#"><span><%=weeks[3].days[4].text%></span></a></td>', '<td class="<%=weeks[3].days[5].classname%>"><a href="#"><span><%=weeks[3].days[5].text%></span></a></td>', '<td class="<%=weeks[3].days[6].classname%>"><a href="#"><span><%=weeks[3].days[6].text%></span></a></td>', "</tr>", "<tr>", '<td class="<%=weeks[4].days[0].classname%>"><a href="#"><span><%=weeks[4].days[0].text%></span></a></td>', '<td class="<%=weeks[4].days[1].classname%>"><a href="#"><span><%=weeks[4].days[1].text%></span></a></td>', '<td class="<%=weeks[4].days[2].classname%>"><a href="#"><span><%=weeks[4].days[2].text%></span></a></td>', '<td class="<%=weeks[4].days[3].classname%>"><a href="#"><span><%=weeks[4].days[3].text%></span></a></td>', '<td class="<%=weeks[4].days[4].classname%>"><a href="#"><span><%=weeks[4].days[4].text%></span></a></td>', '<td class="<%=weeks[4].days[5].classname%>"><a href="#"><span><%=weeks[4].days[5].text%></span></a></td>', '<td class="<%=weeks[4].days[6].classname%>"><a href="#"><span><%=weeks[4].days[6].text%></span></a></td>', "</tr>", "<tr>", '<td class="<%=weeks[5].days[0].classname%>"><a href="#"><span><%=weeks[5].days[0].text%></span></a></td>', '<td class="<%=weeks[5].days[1].classname%>"><a href="#"><span><%=weeks[5].days[1].text%></span></a></td>', '<td class="<%=weeks[5].days[2].classname%>"><a href="#"><span><%=weeks[5].days[2].text%></span></a></td>', '<td class="<%=weeks[5].days[3].classname%>"><a href="#"><span><%=weeks[5].days[3].text%></span></a></td>', '<td class="<%=weeks[5].days[4].classname%>"><a href="#"><span><%=weeks[5].days[4].text%></span></a></td>', '<td class="<%=weeks[5].days[5].classname%>"><a href="#"><span><%=weeks[5].days[5].text%></span></a></td>', '<td class="<%=weeks[5].days[6].classname%>"><a href="#"><span><%=weeks[5].days[6].text%></span></a></td>', "</tr>", "</tbody>"],
                    months: ['<tbody class="<%=className%>">', "<tr>", '<td colspan="2"><a href="#"><span><%=data[0]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[1]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[2]%></span></a></td>', '<td colspan="1"><a href="#"><span><%=data[3]%></span></a></td>', "</tr>", "<tr>", '<td colspan="2"><a href="#"><span><%=data[4]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[5]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[6]%></span></a></td>', '<td colspan="1"><a href="#"><span><%=data[7]%></span></a></td>', "</tr>", "<tr>", '<td colspan="2"><a href="#"><span><%=data[8]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[9]%></span></a></td>', '<td colspan="2"><a href="#"><span><%=data[10]%></span></a></td>', '<td colspan="1"><a href="#"><span><%=data[11]%></span></a></td>', "</tr>", "</tbody>"]
                },
                defaults = {
                    date: null,
                    current: null,
                    inline: !1,
                    mode: "single",
                    calendars: 1,
                    starts: 0,
                    prev: "&#9664;",
                    next: "&#9654;",
                    view: "days",
                    position: "bottom",
                    showOn: "focus",
                    onRenderCell: function() {
                        return {}
                    },
                    onChange: function() {},
                    onBeforeShow: function() {
                        return !0
                    },
                    onAfterShow: function() {},
                    onBeforeHide: function() {
                        return !0
                    },
                    onAfterHide: function() {},
                    locale: {
                        daysMin: ["S", "M", "T", "W", "T", "F", "S"],
                        months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                        monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                    },
                    extraHeight: !1,
                    extraWidth: !1,
                    lastSel: !1
                },
                fill = function(el) {
                    var date, data, dow, month, indic, indic2, html, tblCal, options = $(el).data("datepicker"),
                        cal = $(el),
                        currentCal = Math.floor(options.calendars / 2),
                        cnt = 0;
                    cal.find("td>table tbody").remove();
                    for (var i = 0; i < options.calendars; i++) {
                        date = new Date(options.current), date.addMonths(-currentCal + i), tblCal = cal.find("table").eq(i + 1), 0 == i && tblCal.addClass("datepickerFirstView"), i == options.calendars - 1 && tblCal.addClass("datepickerLastView"), tblCal.hasClass("datepickerViewDays") ? dow = date.getMonthName(!0) + ", " + date.getFullYear() : tblCal.hasClass("datepickerViewMonths") ? dow = date.getFullYear() : tblCal.hasClass("datepickerViewYears") && (dow = date.getFullYear() - 6 + " - " + (date.getFullYear() + 5)), tblCal.find("thead tr:first th a:eq(1) span").text(dow), dow = date.getFullYear() - 6, data = {
                            data: [],
                            className: "datepickerYears"
                        };
                        for (var j = 0; 12 > j; j++) data.data.push(dow + j);
                        html = tmpl(tpl.months.join(""), data), date.setDate(1), data = {
                            weeks: [],
                            test: 10
                        }, month = date.getMonth();
                        var dow = (date.getDay() - options.starts) % 7;
                        for (date.addDays(-(dow + (0 > dow ? 7 : 0))), cnt = 0; 42 > cnt;) {
                            indic = parseInt(cnt / 7, 10), indic2 = cnt % 7, data.weeks[indic] || (data.weeks[indic] = {
                                days: []
                            }), data.weeks[indic].days[indic2] = {
                                text: date.getDate(),
                                classname: []
                            };
                            var today = new Date;
                            today.getDate() == date.getDate() && today.getMonth() == date.getMonth() && today.getYear() == date.getYear() && data.weeks[indic].days[indic2].classname.push("datepickerToday"), date > today && data.weeks[indic].days[indic2].classname.push("datepickerFuture"), month != date.getMonth() && (data.weeks[indic].days[indic2].classname.push("datepickerNotInMonth"), data.weeks[indic].days[indic2].classname.push("datepickerDisabled")), 0 == date.getDay() && data.weeks[indic].days[indic2].classname.push("datepickerSunday"), 6 == date.getDay() && data.weeks[indic].days[indic2].classname.push("datepickerSaturday");
                            var fromUser = options.onRenderCell(el, date),
                                val = date.valueOf();
                            options.date && (!$.isArray(options.date) || options.date.length > 0) && (fromUser.selected || options.date == val || $.inArray(val, options.date) > -1 || "range" == options.mode && val >= options.date[0] && val <= options.date[1]) && data.weeks[indic].days[indic2].classname.push("datepickerSelected"), fromUser.disabled && data.weeks[indic].days[indic2].classname.push("datepickerDisabled"), fromUser.className && data.weeks[indic].days[indic2].classname.push(fromUser.className), data.weeks[indic].days[indic2].classname = data.weeks[indic].days[indic2].classname.join(" "), cnt++, date.addDays(1)
                        }
                        html = tmpl(tpl.days.join(""), data) + html, data = {
                            data: options.locale.monthsShort,
                            className: "datepickerMonths"
                        }, html = tmpl(tpl.months.join(""), data) + html, tblCal.append(html)
                    }
                },
                extendDate = function(locale) {
                    Date.prototype.tempDate || (Date.prototype.tempDate = null, Date.prototype.months = locale.months, Date.prototype.monthsShort = locale.monthsShort, Date.prototype.getMonthName = function(fullName) {
                        return this[fullName ? "months" : "monthsShort"][this.getMonth()]
                    }, Date.prototype.addDays = function(n) {
                        this.setDate(this.getDate() + n), this.tempDate = this.getDate()
                    }, Date.prototype.addMonths = function(n) {
                        null == this.tempDate && (this.tempDate = this.getDate()), this.setDate(1), this.setMonth(this.getMonth() + n), this.setDate(Math.min(this.tempDate, this.getMaxDays()))
                    }, Date.prototype.addYears = function(n) {
                        null == this.tempDate && (this.tempDate = this.getDate()), this.setDate(1), this.setFullYear(this.getFullYear() + n), this.setDate(Math.min(this.tempDate, this.getMaxDays()))
                    }, Date.prototype.getMaxDays = function() {
                        var m, tmpDate = new Date(Date.parse(this)),
                            d = 28;
                        for (m = tmpDate.getMonth(), d = 28; tmpDate.getMonth() == m;) d++, tmpDate.setDate(d);
                        return d - 1
                    })
                },
                layout = function(el) {
                    var options = $(el).data("datepicker"),
                        cal = $("#" + options.id);
                    if (options.extraHeight === !1) {
                        var divs = $(el).find("div");
                        options.extraHeight = divs.get(0).offsetHeight + divs.get(1).offsetHeight, options.extraWidth = divs.get(2).offsetWidth + divs.get(3).offsetWidth
                    }
                    var tbl = cal.find("table:first").get(0),
                        width = tbl.offsetWidth,
                        height = tbl.offsetHeight;
                    cal.css({
                        width: width + options.extraWidth + "px",
                        height: height + options.extraHeight + "px"
                    }).find("div.datepickerContainer").css({
                        width: width + "px",
                        height: height + "px"
                    })
                },
                click = function(ev) {
                    $(ev.target).is("span") && (ev.target = ev.target.parentNode);
                    var el = $(ev.target);
                    if (el.is("a")) {
                        if (ev.target.blur(), el.hasClass("datepickerDisabled")) return !1;
                        var options = $(this).data("datepicker"),
                            parentEl = el.parent(),
                            tblEl = parentEl.parent().parent().parent(),
                            tblIndex = $("table", this).index(tblEl.get(0)) - 1,
                            tmp = new Date(options.current),
                            changed = !1,
                            fillIt = !1,
                            currentCal = Math.floor(options.calendars / 2);
                        if (parentEl.is("th")) el.hasClass("datepickerMonth") ? (tmp.addMonths(tblIndex - currentCal), "range" == options.mode ? (options.date[0] = tmp.setHours(0, 0, 0, 0).valueOf(), tmp.addDays(tmp.getMaxDays() - 1), tmp.setHours(23, 59, 59, 0), options.date[1] = tmp.valueOf(), fillIt = !0, changed = !0, options.lastSel = !1) : 1 == options.calendars && (tblEl.eq(0).hasClass("datepickerViewDays") ? (tblEl.eq(0).toggleClass("datepickerViewDays datepickerViewMonths"), el.find("span").text(tmp.getFullYear())) : tblEl.eq(0).hasClass("datepickerViewMonths") ? (tblEl.eq(0).toggleClass("datepickerViewMonths datepickerViewYears"), el.find("span").text(tmp.getFullYear() - 6 + " - " + (tmp.getFullYear() + 5))) : tblEl.eq(0).hasClass("datepickerViewYears") && (tblEl.eq(0).toggleClass("datepickerViewYears datepickerViewDays"), el.find("span").text(tmp.getMonthName(!0) + ", " + tmp.getFullYear())))) : parentEl.parent().parent().is("thead") && (tblEl.eq(0).hasClass("datepickerViewDays") ? options.current.addMonths(el.hasClass("datepickerGoPrev") ? -1 : 1) : tblEl.eq(0).hasClass("datepickerViewMonths") ? options.current.addYears(el.hasClass("datepickerGoPrev") ? -1 : 1) : tblEl.eq(0).hasClass("datepickerViewYears") && options.current.addYears(el.hasClass("datepickerGoPrev") ? -12 : 12), fillIt = !0);
                        else if (parentEl.is("td") && !parentEl.hasClass("datepickerDisabled")) {
                            if (tblEl.eq(0).hasClass("datepickerViewMonths")) options.current.setMonth(tblEl.find("tbody.datepickerMonths td").index(parentEl)), options.current.setFullYear(parseInt(tblEl.find("thead th a.datepickerMonth span").text(), 10)), options.current.addMonths(currentCal - tblIndex), tblEl.eq(0).toggleClass("datepickerViewMonths datepickerViewDays");
                            else if (tblEl.eq(0).hasClass("datepickerViewYears")) options.current.setFullYear(parseInt(el.text(), 10)), tblEl.eq(0).toggleClass("datepickerViewYears datepickerViewMonths");
                            else {
                                var val = parseInt(el.text(), 10);
                                switch (tmp.addMonths(tblIndex - currentCal), parentEl.hasClass("datepickerNotInMonth") && tmp.addMonths(val > 15 ? -1 : 1), tmp.setDate(val), options.mode) {
                                    case "multiple":
                                        val = tmp.setHours(0, 0, 0, 0).valueOf(), $.inArray(val, options.date) > -1 ? $.each(options.date, function(nr, dat) {
                                            return dat == val ? (options.date.splice(nr, 1), !1) : void 0
                                        }) : options.date.push(val);
                                        break;
                                    case "range":
                                        options.lastSel || (options.date[0] = tmp.setHours(0, 0, 0, 0).valueOf()), val = tmp.setHours(23, 59, 59, 0).valueOf(), val < options.date[0] ? (options.date[1] = options.date[0] + 86399e3, options.date[0] = val - 86399e3) : options.date[1] = val, options.lastSel = !options.lastSel;
                                        break;
                                    default:
                                        options.date = tmp.valueOf()
                                }
                                changed = !0
                            }
                            fillIt = !0
                        }
                        fillIt && fill(this), changed && options.onChange.apply(this, prepareDate(options))
                    }
                    return !1
                },
                prepareDate = function(options) {
                    var dates = null;
                    return "single" == options.mode ? options.date && (dates = new Date(options.date)) : (dates = new Array, $(options.date).each(function(i, val) {
                        dates.push(new Date(val))
                    })), [dates, options.el]
                },
                getViewport = function() {
                    var m = "CSS1Compat" == document.compatMode;
                    return {
                        l: window.pageXOffset || (m ? document.documentElement.scrollLeft : document.body.scrollLeft),
                        t: window.pageYOffset || (m ? document.documentElement.scrollTop : document.body.scrollTop),
                        w: window.innerWidth || (m ? document.documentElement.clientWidth : document.body.clientWidth),
                        h: window.innerHeight || (m ? document.documentElement.clientHeight : document.body.clientHeight)
                    }
                },
                isChildOf = function(parentEl, el, container) {
                    if (parentEl == el) return !0;
                    if (parentEl.contains) return parentEl.contains(el);
                    if (parentEl.compareDocumentPosition) return !!(16 & parentEl.compareDocumentPosition(el));
                    for (var prEl = el.parentNode; prEl && prEl != container;) {
                        if (prEl == parentEl) return !0;
                        prEl = prEl.parentNode
                    }
                    return !1
                },
                show = function() {
                    var cal = $("#" + $(this).data("datepickerId"));
                    if (!cal.is(":visible")) {
                        {
                            var calEl = cal.get(0),
                                options = cal.data("datepicker");
                            options.onBeforeShow.apply(this, [calEl])
                        }
                        if (0 == options.onBeforeShow.apply(this, [calEl])) return;
                        fill(calEl); {
                            var pos = $(this).offset(),
                                viewPort = getViewport(),
                                top = pos.top,
                                left = pos.left;
                            $.curCSS(calEl, "display")
                        }
                        switch (cal.css({
                            visibility: "hidden",
                            display: "block"
                        }), layout(calEl), options.position) {
                            case "top":
                                top -= calEl.offsetHeight;
                                break;
                            case "left":
                                left -= calEl.offsetWidth;
                                break;
                            case "right":
                                left += this.offsetWidth;
                                break;
                            case "bottom":
                                top += this.offsetHeight
                        }
                        top + calEl.offsetHeight > viewPort.t + viewPort.h && (top = pos.top - calEl.offsetHeight), top < viewPort.t && (top = pos.top + this.offsetHeight + calEl.offsetHeight), left + calEl.offsetWidth > viewPort.l + viewPort.w && (left = pos.left - calEl.offsetWidth), left < viewPort.l && (left = pos.left + this.offsetWidth), cal.css({
                            visibility: "visible",
                            display: "block",
                            top: top + "px",
                            left: left + "px"
                        }), options.onAfterShow.apply(this, [cal.get(0)]), $(document).bind("mousedown", {
                            cal: cal,
                            trigger: this
                        }, hide)
                    }
                    return !1
                },
                hide = function(ev) {
                    ev.target == ev.data.trigger || isChildOf(ev.data.cal.get(0), ev.target, ev.data.cal.get(0)) || 0 != ev.data.cal.data("datepicker").onBeforeHide.apply(this, [ev.data.cal.get(0)]) && (ev.data.cal.hide(), ev.data.cal.data("datepicker").onAfterHide.apply(this, [ev.data.cal.get(0)]), $(document).unbind("mousedown", hide))
                },
                normalizeDate = function(mode, date) {
                    if ("single" == mode || date || (date = []), date && (!$.isArray(date) || date.length > 0))
                        if ("single" != mode)
                            if ($.isArray(date)) {
                                for (var i = 0; i < date.length; i++) date[i] = new Date(date[i]).setHours(0, 0, 0, 0).valueOf();
                                "range" == mode && (1 == date.length && date.push(new Date(date[0])), date[1] = new Date(date[1]).setHours(23, 59, 59, 0).valueOf())
                            } else date = [new Date(date).setHours(0, 0, 0, 0).valueOf()], "range" == mode && date.push(new Date(date[0]).setHours(23, 59, 59, 0).valueOf());
                    else date = new Date(date).setHours(0, 0, 0, 0).valueOf();
                    return date
                };
            return {
                init: function(options) {
                    return options = $.extend({}, defaults, options || {}), extendDate(options.locale), options.calendars = Math.max(1, parseInt(options.calendars, 10) || 1), options.mode = /single|multiple|range/.test(options.mode) ? options.mode : "single", this.each(function() {
                        if (!$(this).data("datepicker")) {
                            options.el = this, options.date = normalizeDate(options.mode, options.date), options.current = options.current ? new Date(options.current) : new Date, options.current.setDate(1), options.current.setHours(0, 0, 0, 0);
                            var cnt, id = "datepicker_" + parseInt(1e3 * Math.random());
                            options.id = id, $(this).data("datepickerId", options.id);
                            var cal = $(tpl.wrapper).attr("id", id).bind("click", click).data("datepicker", options);
                            options.className && cal.addClass(options.className);
                            for (var html = "", i = 0; i < options.calendars; i++) cnt = options.starts, i > 0 && (html += tpl.space), html += tmpl(tpl.head.join(""), {
                                prev: options.prev,
                                next: options.next,
                                day1: options.locale.daysMin[cnt++ % 7],
                                day2: options.locale.daysMin[cnt++ % 7],
                                day3: options.locale.daysMin[cnt++ % 7],
                                day4: options.locale.daysMin[cnt++ % 7],
                                day5: options.locale.daysMin[cnt++ % 7],
                                day6: options.locale.daysMin[cnt++ % 7],
                                day7: options.locale.daysMin[cnt++ % 7]
                            });
                            cal.find("tr:first").append(html).find("table").addClass(views[options.view]), fill(cal.get(0)), options.inline ? (cal.appendTo(this).show().css("position", "relative"), layout(cal.get(0))) : (cal.appendTo(document.body), $(this).bind(options.showOn, show))
                        }
                    })
                },
                showPicker: function() {
                    return this.each(function() {
                        if ($(this).data("datepickerId")) {
                            var cal = $("#" + $(this).data("datepickerId")),
                                options = cal.data("datepicker");
                            options.inline || show.apply(this)
                        }
                    })
                },
                hidePicker: function() {
                    return this.each(function() {
                        if ($(this).data("datepickerId")) {
                            var cal = $("#" + $(this).data("datepickerId")),
                                options = cal.data("datepicker");
                            options.inline || $("#" + $(this).data("datepickerId")).hide()
                        }
                    })
                },
                setDate: function(date, shiftTo) {
                    return this.each(function() {
                        if ($(this).data("datepickerId")) {
                            var cal = $("#" + $(this).data("datepickerId")),
                                options = cal.data("datepicker");
                            options.date = normalizeDate(options.mode, date), shiftTo && (options.current = new Date("single" != options.mode ? options.date[0] : options.date)), fill(cal.get(0))
                        }
                    })
                },
                getDate: function() {
                    return this.size() > 0 ? prepareDate($("#" + $(this).data("datepickerId")).data("datepicker")) : void 0
                },
                clear: function() {
                    return this.each(function() {
                        if ($(this).data("datepickerId")) {
                            var cal = $("#" + $(this).data("datepickerId")),
                                options = cal.data("datepicker");
                            options.date = "single" == options.mode ? null : [], fill(cal.get(0))
                        }
                    })
                },
                fixLayout: function() {
                    return this.each(function() {
                        if ($(this).data("datepickerId")) {
                            var cal = $("#" + $(this).data("datepickerId")),
                                options = cal.data("datepicker");
                            options.inline && layout(cal.get(0))
                        }
                    })
                }
            }
        }();
        $.fn.extend({
            DatePicker: DatePicker.init,
            DatePickerHide: DatePicker.hidePicker,
            DatePickerShow: DatePicker.showPicker,
            DatePickerSetDate: DatePicker.setDate,
            DatePickerGetDate: DatePicker.getDate,
            DatePickerClear: DatePicker.clear,
            DatePickerLayout: DatePicker.fixLayout
        })
    }(jQuery),
    function() {
        var cache = {};
        this.tmpl = function tmpl(str, data) {
            var fn = /\W/.test(str) ? new Function("obj", "var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('" + str.replace(/[\r\t\n]/g, " ").split("<%").join("	").replace(/((^|%>)[^\t]*)'/g, "$1\r").replace(/\t=(.*?)%>/g, "',$1,'").split("	").join("');").split("%>").join("p.push('").split("\r").join("\\'") + "');}return p.join('');") : cache[str] = cache[str] || tmpl(document.getElementById(str).innerHTML);
            return data ? fn(data) : fn
        }
    }();
var app = angular.module("app", ["toggle-switch", "ui.router", "ct.ui.router.extras", "ngTouch", "ngResource", "ngAnimate", "ezfb", "seo", "ngCsv", "angular-google-analytics", "angular-carousel", "ui", "ui.bootstrap", "ngCookies", "rw.translate", "ngUpload", "$strap.directives", "ui.slider", "angularFileUpload", "vcRecaptcha", "FBAngular", "ngGrid", "luegg.directives", "monospaced.elastic", "xeditable", "ui.sortable", "adaptive.detection"]);
app.config(function($locationProvider, $httpProvider, $FBProvider, AnalyticsProvider, $cookieStoreProvider, $stateProvider, $urlRouterProvider, $urlMatcherFactoryProvider) {
        $locationProvider.html5Mode(!0).hashPrefix("!");
        var access = routingConfig.accessLevels;
        $FBProvider.setInitParams({
            appId: "203160066526888"
        }), $urlMatcherFactoryProvider.strictMode(!1), $urlRouterProvider.otherwise("/401"), $stateProvider.state("nav", {
            url: "",
            "abstract": !0,
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                }
            }
        }).state("hitbox", {
            url: "",
            "abstract": !0,
            parent: "nav"
        }).state("home", {
            url: "",
            "abstract": !0,
            views: {
                "viewMain@": {
                    templateUrl: "partials/main/home.html"
                },
                "viewPlayer@": {
                    templateUrl: "partials/sub/livePlayer.html",
                    controller: "PlaybackController"
                }
            },
            parent: "hitbox"
        }).state("home.root", {
            url: "/",
            browse: null,
            section: "home",
            parent: "home"
        }).state("browse-favorite", {
            url: "/browse/favorite",
            browse: "favorite",
            section: "home",
            parent: "home"
        }).state("browse-game", {
            url: "/browse/:game_name",
            section: "home",
            browse: "game",
            parent: "home"
        }).state("browse-language", {
            url: "/browse/lang/:language",
            section: "home",
            browse: "language",
            parent: "home"
        }).state("signup", {
            url: "/signup?restorekey",
            views: {
                "viewMain@": {
                    templateUrl: "partials/main/signup.html"
                }
            },
            access: access.anon,
            section: "signup",
            title: "Signup",
            parent: "nav"
        }).state("games", {
            url: "/games",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/games.html"
                }
            },
            access: access.anon,
            section: "game",
            title: "Games"
        }).state("game", {
            url: "/game/:game_name",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/game.html"
                }
            },
            access: access.anon,
            section: "game"
        }).state("settings", {
            url: "/settings/:user",
            views: {
                "viewMain@": {
                    templateUrl: "partials/main/settings.html"
                }
            },
            access: access.user,
            section: "settings",
            parent: "nav"
        }).state("settings.livestreams", {
            url: "/livestreams",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_livestreams.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "livestreams"
        }).state("settings.account", {
            url: "/account",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_account.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "account"
        }).state("settings.videos", {
            url: "/videos",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_videos.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "videos"
        }).state("settings.statistics", {
            url: "/statistics",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_statistics.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "statistics"
        }).state("settings.teams", {
            url: "/teams",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_teams.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "teams"
        }).state("settings.connections", {
            url: "/connections",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_connections.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "connections"
        }).state("settings.admin", {
            url: "/admin",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_admin.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "admin"
        }).state("settings.connections.following", {
            url: "/following",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_connections.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "connections",
            subtab: "following"
        }).state("settings.connections.follower", {
            url: "/follower",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_connections.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "connections",
            subtab: "follower"
        }).state("settings.connections.subscription", {
            url: "/subscription",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_connections.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "connections",
            subtab: "subscription"
        }).state("settings.connections.subscribers", {
            url: "/subscribers",
            views: {
                "viewSettings@settings": {
                    templateUrl: "partials/sub/settings_connections.html"
                }
            },
            access: access.user,
            section: "settings",
            tab: "connections",
            subtab: "subscribers"
        }).state("content", {
            url: "/content/:tab",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/content.html"
                }
            },
            access: access.user,
            section: "content"
        }).state("legal", {
            url: "/legal/:tab",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/legal.html"
                }
            },
            access: access.user,
            section: "legal"
        }).state("404", {
            url: "/404",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/404.html"
                }
            },
            access: access.anon,
            section: "404"
        }).state("401", {
            url: "/401",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/401.html"
                }
            },
            access: access.anon,
            section: "401"
        }).state("whyunoplay", {
            url: "/whyunoplay",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/content/whyunoplay.html"
                }
            },
            access: access.anon,
            section: "401"
        }).state("verifyemail", {
            url: "/verifyemail/:token",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/verifyemail.html"
                }
            },
            access: access.anon,
            section: "verifyemail"
        }).state("newsletter", {
            url: "/unsubscribe/newsletter",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/unsubscribe_newsletter.html"
                }
            },
            access: access.anon,
            section: "unsubscribe"
        }).state("team", {
            url: "/team/:team",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/team.html"
                }
            },
            access: access.anon,
            section: "team"
        }).state("teammanager", {
            url: "/teammanager/:team",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/team-manager.html"
                }
            },
            access: access.anon,
            section: "teammanager"
        }).state("following", {
            url: "/following",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/following.html"
                }
            },
            access: access.anon,
            section: "following"
        }).state("event", {
            url: "/event/:event_name",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/content/event.html",
                    controller: "EventController"
                }
            },
            access: access.anon,
            section: "event"
        }).state("inbox", {
            url: "/inbox/:user",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/inbox.html"
                }
            },
            access: access.admin,
            section: "inbox",
            tab: "inbox"
        }).state("coupon", {
            url: "/coupon",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/coupon.html"
                }
            },
            access: access.user,
            section: "coupon",
            tab: "coupon"
        }).state("embedchat", {
            url: "/embedchat/:channel?autoconnect&mini",
            views: {
                viewMain: {
                    templateUrl: "partials/main/embedchat.html"
                }
            },
            access: access.anon,
            section: "embedchat"
        }).state("embed", {
            url: "/embed/:channel",
            views: {
                viewMain: {
                    templateUrl: "partials/main/embed.html"
                }
            },
            access: access.anon,
            section: "embedplayer"
        }).state("embedvideo", {
            url: "/embedvideo/:id",
            views: {
                viewMain: {
                    templateUrl: "partials/main/embed.html"
                }
            },
            access: access.anon,
            section: "embedvideo"
        }).state("banned", {
            url: "/:channel/banned",
            views: {
                viewNav: {
                    templateUrl: "partials/sub/nav.html"
                },
                viewMain: {
                    templateUrl: "partials/main/banned.html"
                }
            },
            access: access.anon,
            section: "banned"
        }).state("subscribe", {
            url: "/:channel/subscribe?token",
            views: {
                viewMain: {
                    templateUrl: "partials/main/subscribe.html",
                    controller: "SubscriptionController"
                }
            },
            access: access.anon,
            section: "subscribe"
        }).state("subscribe.user", {
            url: "/:user",
            views: {
                viewMain: {
                    templateUrl: "partials/main/subscribe.html",
                    controller: "SubscriptionController"
                }
            },
            access: access.anon,
            section: "subscribe"
        }).state("unsubscribe", {
            url: "/:channel/cancel",
            views: {
                viewMain: {
                    templateUrl: "partials/main/subscribe_cancel.html",
                    controller: "SubscriptionCancelController"
                }
            },
            access: access.anon,
            section: "subscribe"
        }).state("unsubscribe.user", {
            url: "/:user",
            views: {
                viewMain: {
                    templateUrl: "partials/main/subscribe_cancel.html",
                    controller: "SubscriptionCancelController"
                }
            },
            access: access.anon,
            section: "subscribe"
        }).state("dashboard", {
            url: "/dashboard/:user",
            views: {
                viewMain: {
                    templateUrl: "partials/main/dashboard.html"
                }
            },
            section: "dashboard",
            access: access.admin,
            tab: "livestreams"
        }).state("recording", {
            url: "/r/:id",
            views: {
                "viewMain@": {
                    templateUrl: "partials/main/detail.html",
                    controller: "DetailController"
                },
                "viewContent@video": {
                    templateUrl: "partials/sub/detail_profile.html"
                },
                "viewPlayer@": {
                    templateUrl: "partials/sub/livePlayer.html",
                    controller: "PlaybackController"
                }
            },
            access: access.anon,
            userContent: "profile",
            section: "recording",
            parent: "hitbox"
        }).state("video", {
            url: "/video/:id",
            views: {
                "viewMain@": {
                    templateUrl: "partials/main/detail.html",
                    controller: "DetailController"
                },
                "viewContent@video": {
                    templateUrl: "partials/sub/detail_profile.html"
                },
                "viewPlayer@": {
                    templateUrl: "partials/sub/livePlayer.html",
                    controller: "PlaybackController"
                }
            },
            access: access.anon,
            userContent: "profile",
            section: "video",
            parent: "hitbox"
        }).state("video.team", {
            url: "/team",
            views: {
                "viewContent@video": {
                    templateUrl: "partials/sub/detail_content_team.html"
                }
            },
            access: access.anon,
            userContent: "team",
            section: "video"
        }).state("video.profile", {
            url: "/profile",
            views: {
                "viewContent@video": {
                    templateUrl: "partials/sub/detail_profile.html"
                }
            },
            access: access.anon,
            userContent: "profile",
            section: "video"
        }).state("video.follower", {
            url: "/follower",
            views: {
                "viewContent@video": {
                    templateUrl: "partials/sub/detail_content_follower.html"
                }
            },
            userContent: "follower",
            section: "video"
        }).state("video.following", {
            url: "/following",
            views: {
                "viewContent@video": {
                    templateUrl: "partials/sub/detail_content_following.html"
                }
            },
            userContent: "following",
            section: "video"
        }).state("video.videos", {
            url: "/videos",
            views: {
                "viewContent@video": {
                    templateUrl: "partials/sub/detail_content_video.html"
                }
            },
            userContent: "videos",
            section: "video"
        }).state("detail", {
            url: "/:channel",
            views: {
                "viewMain@": {
                    templateUrl: "partials/main/detail.html",
                    controller: "DetailController"
                },
                "viewContent@detail": {
                    templateUrl: "partials/sub/detail_profile.html"
                },
                "viewChat@": {
                    templateUrl: "partials/main/chat.html"
                },
                "viewPlayer@": {
                    templateUrl: "partials/sub/livePlayer.html",
                    controller: "PlaybackController"
                }
            },
            section: "channel",
            userContent: "profile",
            parent: "hitbox"
        }).state("detail.team", {
            url: "/team",
            views: {
                "viewContent@detail": {
                    templateUrl: "partials/sub/detail_content_team.html"
                }
            },
            userContent: "team",
            section: "channel"
        }).state("detail.videos", {
            url: "/videos",
            views: {
                "viewContent@detail": {
                    templateUrl: "partials/sub/detail_content_video.html"
                }
            },
            userContent: "videos",
            section: "channel"
        }).state("detail.follower", {
            url: "/follower",
            views: {
                "viewContent@detail": {
                    templateUrl: "partials/sub/detail_content_follower.html"
                }
            },
            userContent: "follower",
            section: "channel"
        }).state("detail.following", {
            url: "/following",
            views: {
                "viewContent@detail": {
                    templateUrl: "partials/sub/detail_content_following.html"
                }
            },
            userContent: "following",
            section: "channel"
        }).state("detail.profile", {
            url: "/profile",
            views: {
                "viewContent@detail": {
                    templateUrl: "partials/sub/detail_profile.html"
                }
            },
            userContent: "profile",
            section: "channel"
        }).state("detail.chat", {
            url: "/chat",
            section: "channel"
        });
        var interceptor = ["$location", "$q", function($location, $q) {
            function success(response) {
                return response
            }

            function error(response) {
                return $q.reject(401 === response.status ? response : response)
            }
            return function(promise) {
                return promise.then(success, error)
            }
        }];
        $httpProvider.responseInterceptors.push(interceptor), AnalyticsProvider.setAccount("UA-42900118-1"), AnalyticsProvider.trackPages(!0), AnalyticsProvider.setDomainName("hitbox.tv"), AnalyticsProvider.setPageEvent("$stateChangeSuccess"), AnalyticsProvider.ignoreFirstPageLoad(!1)
    }).run(["$rootScope", "$location", "Auth", "$timeout", "$stateParams", "$location", "Analytics", function($rootScope, $location, Auth, $timeout, $stateParams, $location) {
        $rootScope.page_visibility = "visible", $rootScope.channel = "";
        var tabVisibilityCheck = function() {
            function onchange(evt) {
                var v = "visible",
                    h = "hidden",
                    evtMap = {
                        focus: v,
                        focusin: v,
                        pageshow: v,
                        blur: h,
                        focusout: h,
                        pagehide: h
                    };
                evt = evt || window.event;
                var visibility = "visible";
                visibility = evt.type in evtMap ? evtMap[evt.type] : this[hidden] ? "hidden" : "visible", $rootScope.$$phase || $rootScope.$apply(function() {
                    $rootScope.page_visibility = visibility
                })
            }
            var hidden = "hidden";
            hidden in document ? document.addEventListener("visibilitychange", onchange) : (hidden = "mozHidden") in document ? document.addEventListener("mozvisibilitychange", onchange) : (hidden = "webkitHidden") in document ? document.addEventListener("webkitvisibilitychange", onchange) : (hidden = "msHidden") in document ? document.addEventListener("msvisibilitychange", onchange) : "onfocusin" in document ? document.onfocusin = document.onfocusout = onchange : window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange, void 0 !== document[hidden]
        };
        tabVisibilityCheck(), $rootScope.$on("$stateChangeSuccess", function(event, toState, toParams) {
            if ($rootScope.state = toState.name, "subscribe" == toState.section) {
                if ("http" == $location.protocol() && "subscribe" == toState.section) {
                    var restOfUrl = $location.path(),
                        restHost = $location.host();
                    return void(window.location = "https://" + restHost + restOfUrl)
                }
            } else if ("https" == $location.protocol()) {
                var restOfUrl = $location.path(),
                    restHost = $location.host();
                return void(window.location = "http://" + restHost + restOfUrl)
            }
            $rootScope.title = toParams.title, $rootScope.isHTTPS_page = "https" == $location.protocol() ? !0 : !1
        }), $rootScope.$on("$stateChangeStart", function(event, toState, toParams) {
            $("select2-drop") && $("select2-drop").hide(), $rootScope.cachebuster = Math.round((new Date).getTime() / 1e3), $rootScope.error = null, $rootScope.chatEnabled = null, $rootScope.section = toState.section, $rootScope.detached = toState.detached, $rootScope.subNav = 0, $rootScope.userSubNav = !1;
            var tab = toParams.tab ? toParams.tab : toState.tab;
            "connections" == tab && (tab = "following"), ("settings" == toState.section || "inbox" == toState.section || "dashboard" == toState.section) && Auth.authorize({
                accessLevel: toState.access,
                resource: tab,
                resource_id: toParams.user
            }, function(auth) {
                auth || $location.path("/401")
            }, function() {
                $location.path("/401")
            })
        }), $rootScope.appInitialized = !0
    }]),
    function(exports) {
        exports.userRoles = {
            "public": 1,
            user: 12,
            community: 10,
            admin: 8
        }, exports.accessLevels = {
            "public": 15,
            anon: 1,
            user: 12,
            community: 10,
            admin: 8
        }
    }("undefined" == typeof exports ? this.routingConfig = {} : exports), app.config(["$translateProvider", function($translateProvider) {
        $translateProvider.translations("en_US", {
            BTN_LOGIN: "Log in",
            BTN_SIGNUP: "Sign Up",
            BTN_LOGOUT: "Logout",
            BTN_FOLLOW: "Follow",
            BTN_FOLLOWING: "Following",
            BTN_SUBSCRIBE: "Subscribe",
            BTN_DONATE: "Donate",
            BTN_SHARE: "Share",
            BTN_SAVE_AS_VIDEO: "Save as video",
            LABEL_TITLE: "Title",
            LABEL_TAGS: "Tags",
            LABEL_USERNAME: "Username",
            LABEL_PASSWORD: "Password",
            LABEL_EMAIL: "E-mail",
            LABEL_PASSWORD2: "Re-enter password",
            LABEL_MESSAGE: "Message",
            LABEL_CREATE_ACCOUNT: "Sign Up",
            LABEL_TEAM_NAME: "Team Name",
            LABEL_TEAM_LOGO: "Logo",
            LABEL_TEAM_COVER: "Cover",
            LABEL_DESCRIPTION: "Description",
            LABEL_TEAM_MEMBER: "Member",
            LABEL_TEAM_INVITE_MEMBER: "Invite Members",
            LABEL_TEAM_DISPLAY_NAME: "Display Name",
            LINK_ALL_GAMES: "All Games",
            LINK_GAMES: "Games",
            LINK_SEARCH: "Search",
            TEXT_NO_ACCOUNT: "Don't have an account?",
            TEXT_FORGOT_PASSWORD: "Forgot your password?",
            TEXT_FOLLOWING: "Following",
            TEXT_VIEWERS: "Viewers",
            TEXT_LOGIN_FAILED: "Username and password don't match",
            TEXT_LOGIN_BANNED: "You are banned from hitbox. Please check your email for more information.",
            TEXT_CONTINUE_FB: "Continue with Facebook",
            TEXT_OR_WITH: "or with",
            TEXT_FINISH_FB_SIGNUP: "Please confirm or change your e-mail and username",
            TEXT_USERNAME_SHORT: "Your username must be at least 3 characters long.",
            TEXT_USERNAME_TAKEN: "Your username has already been taken.",
            TEXT_USERNAME_INVALID: "Your username contains invalid characters. (Allowed: A-Z,0-9)",
            TEXT_EMAIL_INVALID: "Invalid e-mail address",
            TEXT_EMAIL_IN_USE: "E-mail already in use",
            TEXT_FILL_ALL_FIELD: "You must fill all of the fields",
            TEXT_PASSWORD_SHORT: "Your password must be at least 6 characters long.",
            TEXT_PASSWORD_NOMATCH: "Your passwords do not match.",
            TEXT_CREATE_ACCOUNT: "Create your Account",
            TEXT_FINISH_ACCOUNT: "Finish your Account",
            TEXT_SETTINGS: "Settings",
            TEXT_ACCOUNT: "Account",
            TEXT_LIVESTREAMS: "Livestreams",
            TEXT_LIVESTREAM: "Livestream",
            TEXT_TEAMS: "Teams",
            TEXT_RECORDINGS: "Recordings",
            TEXT_VIDEOS: "Videos",
            TEXT_VIDEO_EDITOR: "Video Editor",
            TEXT_VIDEO_MANAGER: "Video Manager",
            TEXT_STATISTICS: "Statistics",
            TEXT_REVENUES: "Revenues",
            TEXT_TEAM_NAME_INVALID: "Invalid teamname (Allowed: A-Z,0-9)",
            TEXT_TEAM_NAME_TOO_SHORT: "A teamname must be at least 4 characters long.",
            TEXT_TEAM_TEXT_REQUIRED: "Please provide some informations about your team",
            TEXT_TEAM_TAKEN: "This teamname has already been taken.",
            LABEL_SAVE: "Save",
            LABEL_CANCEL: "Cancel",
            LABEL_PROFILE_IMAGE: "Profile Picture",
            BTN_UPLOAD_IMAGE: "Upload image",
            LABEL_CHANGE_PASSWORD: "Change password",
            LABEL_CHANGE_EMAIL: "Change e-mail",
            HEAD_TRENDING: "Trending",
            HEAD_LIVE_NOW: "Live Now",
            HEAD_RECENT_RECORDINGS: "Recent Recordings",
            HEAD_POPULAR_RECORDINGS: "Popular Recordings",
            GAMES_PLAYED_NOW: "Games played now",
            HEAD_COMMUNITY: "Community",
            LANGUAGE: "Language",
            LABEL_CHAT: "Chat",
            LABEL_CHANNEL: "Channel",
            BTN_SIGN_IN_TO_CHAT: "Sign in to chat",
            LABEL_MESSAGE: "What's on your mind?",
            LABEL_RECORDINGS: "Recordings",
            TEXT_MESSAGES: "Messages",
            TEXT_DETAILS: "Details",
            TEXT_SUBSCRIPTIONS: "Subscriptions",
            TEXT_SUBSCRIBERS: "Subscribers",
            TEXT_FOLLOWERS: "Followers"
        }), $translateProvider.translations("de_DE", {
            BTN_LOGIN: "Einloggen",
            BTN_SIGNUP: "Anmelden",
            BTN_LOGOUT: "Logout",
            BTN_FOLLOW: "Folgen",
            BTN_FOLLOWING: "Folgend",
            BTN_SUBSCRIBE: "Abonnieren",
            BTN_DONATE: "Spenden",
            BTN_SHARE: "Teilen",
            BTN_SAVE_AS_VIDEO: "Als Video speichern",
            LABEL_TAGS: "Tags",
            LABEL_TITLE: "Titel",
            LABEL_USERNAME: "Benutzername",
            LABEL_PASSWORD: "Passwort",
            LABEL_EMAIL: "E-Mail",
            LABEL_PASSWORD2: "Passwort wiederholen",
            LABEL_CREATE_ACCOUNT: "Registrieren",
            LABEL_MESSAGE: "Nachricht",
            LABEL_TEAM_NAME: "Teamname",
            LABEL_TEAM_LOGO: "Teambild",
            LABEL_TEAM_COVER: "Teamcover",
            LABEL_DESCRIPTION: "Beschreibung",
            LABEL_TEAM_MEMBER: "Mitglieder",
            LABEL_TEAM_INVITE_MEMBER: "Mitglied einladen",
            LABEL_TEAM_DISPLAY_NAME: "Anzeigename",
            LINK_ALL_GAMES: "Alle Spiele",
            LINK_GAMES: "Spiele",
            LINK_SEARCH: "Suche",
            TEXT_NO_ACCOUNT: "Noch kein Benutzerkonto?",
            TEXT_FORGOT_PASSWORD: "Passwort vergessen?",
            TEXT_VIEWERS: "Zuseher",
            TEXT_FOLLOWING: "Folgend",
            TEXT_LOGIN_FAILED: "Benutzername und Passwort stimmen nicht Ã¼berein",
            TEXT_CONTINUE_FB: "Mit Facebook Fortfahren",
            TEXT_OR_WITH: "oder mit",
            TEXT_FINISH_FB_SIGNUP: "Bitte bestÃ¤tige oder Ã¤ndere deine E-Mail und deinen Benutzernamen",
            TEXT_USERNAME_SHORT: "Dein Benutzername muss mindestens 3 Zeichen lang sein.",
            TEXT_USERNAME_TAKEN: "Dein Benutzername ist bereits vergeben.",
            TEXT_USERNAME_INVALID: "UngÃ¼ltiger Benutzername [a-Z,0-9]",
            TEXT_EMAIL_INVALID: "UngÃ¼ltige E-Mail Adresse",
            TEXT_EMAIL_IN_USE: "Diese E-Mail Adresse wird bereits verwendet",
            TEXT_FILL_ALL_FIELD: "Du musst alle Felder ausfÃ¼llen",
            TEXT_PASSWORD_SHORT: "Dein Passwort muss mindestens 6 Zeichen lang sein.",
            TEXT_PASSWORD_NOMATCH: "Deine PasswÃ¶rter stimmen nicht Ã¼berein.",
            TEXT_CREATE_ACCOUNT: "Erstelle dein Benutzerkonto",
            TEXT_FINISH_ACCOUNT: "Anmeldung Abschliessen",
            TEXT_SETTINGS: "Einstellungen",
            TEXT_ACCOUNT: "Benutzerkonto",
            TEXT_LIVESTREAMS: "Livestreams",
            TEXT_LIVESTREAM: "Livestream",
            TEXT_TEAMS: "Teams",
            TEXT_RECORDINGS: "Aufnahmen",
            TEXT_VIDEOS: "Videos",
            TEXT_VIDEO_EDITOR: "Video Editor",
            TEXT_VIDEO_MANAGER: "Video Manager",
            TEXT_STATISTICS: "Statistiken",
            TEXT_REVENUES: "Einnahmen",
            TEXT_TEAM_NAME_INVALID: "UngÃ¼ltiger Teamname (Allowed: A-Z,0-9)",
            TEXT_TEAM_NAME_TOO_SHORT: "Ein Teamname muss mindestens 4 Zeichen lang sein.",
            TEXT_TEAM_TEXT_REQUIRED: "Bitte teile uns ein paar Informationen Ã¼ber dein Team mit.",
            TEXT_TEAM_TAKEN: "Dieser Teamname ist bereits vergeben.",
            LABEL_SAVE: "Speichern",
            LABEL_CANCEL: "Abbrechen",
            LABEL_PROFILE_IMAGE: "Profil Bild",
            BTN_UPLOAD_IMAGE: "Bild hochladen",
            LABEL_CHANGE_PASSWORD: "Passwort Ã¤ndern",
            LABEL_CHANGE_EMAIL: "E-Mail Ã¤ndern",
            HEAD_TRENDING: "Angesagt",
            HEAD_LIVE_NOW: "Jetzt Live",
            HEAD_RECENT_RECORDINGS: "Neuesten Videos",
            HEAD_POPULAR_RECORDINGS: "Angesagte Videos",
            GAMES_PLAYED_NOW: "Spiele",
            HEAD_COMMUNITY: "Community",
            LANGUAGE: "Sprache",
            LABEL_CHAT: "Chat",
            LABEL_CHANNEL: "Kanal",
            BTN_SIGN_IN_TO_CHAT: "Anmelden und chatten",
            LABEL_MESSAGE: "Nachricht",
            LABEL_RECORDINGS: "Videos",
            TEXT_MESSAGES: "Nachrichten",
            TEXT_DETAILS: "Details",
            TEXT_SUBSCRIPTIONS: "Abos",
            TEXT_SUBSCRIBERS: "Subscribers",
            TEXT_FOLLOWERS: "Followers"
        }), $translateProvider.preferredLanguage("en_US"), $translateProvider.useCookieStorage(), $translateProvider.storageKey("lang")
    }]), app.constant("appSettings", {
        apiUri: "https://" + window.location.hostname + "/api",
        fluentdUri: "http://columbo.hitbox.tv/log",
        apiUriNonSecure: "http://" + window.location.hostname + "/api",
        playerUrl: "",
        staticUri: "http://edge.sf.hitbox.tv/static",
        imgUrl: "http://edge.sf.hitbox.tv",
        liveImgUrl: "http://edge.sf.hitbox.tv/static/img/media/live",
        baseUrl: "http://hitbox.tv",
        fallbackImages: {
            teamCover: "/static/img/generic/team_cover.jpg",
            teamLogo: "/static/img/generic/team_logo_large.jpg",
            userCover: "/static/img/generic/user_cover.jpg",
            userLogo: "/static/img/generic/user_logo_large.jpg",
            userLogoSmall: "/static/img/generic/user_logo.jpg"
        },
        ovaBasic: {
            url: "ova.swf",
            autoPlay: !0,
            player: {
                modes: {
                    linear: {
                        controls: {
                            visible: !1
                        }
                    }
                }
            },
            ads: {
                pauseOnClickThrough: !0,
                servers: [{
                    type: "direct",
                    tag: "http://www4.smartadserver.com/call/pubx/52319/377414/9760/M/__random-number__"
                }],
                schedule: [{
                    position: "pre-roll",
                    playOnce: !1
                }, {
                    position: "mid-roll",
                    startTime: "00:00:10",
                    loadOnDemand: !0
                }]
            },
            debug: {
                levels: "fatal, config, vast_template, vpaid, display_events, playlist, http_calls, api, tracking_events"
            }
        },
        ovaAnalytics: {
            google: {
                custom: {
                    enable: !0,
                    accountId: "UA-42900118-3",
                    impressions: {
                        linear: "/ova/impression-counter/custom-test/linear",
                        nonLinear: "/ova/impression-counter/custom-test/nonLinear",
                        companion: "/ova/impression-counter/custom-test/companion"
                    },
                    adCalls: {
                        enable: !0,
                        fired: "/ova/ad-calls/fired",
                        complete: "/ova/ad-calls/complete",
                        failover: "/ova/ad-calls/failover",
                        error: "/ova/ad-calls/error",
                        timeout: "/ova/ad-calls/timeout",
                        deferred: "/ova/ad-calls/deferred"
                    },
                    template: {
                        enable: !0,
                        loaded: "/ova/templates/loaded",
                        error: "/ova/templates/error",
                        timeout: "/ova/templates/timeout",
                        deferred: "/ova/templates/deferred"
                    },
                    adSlot: {
                        enable: !0,
                        loaded: "/ova/adslots/loaded",
                        error: "/ova/adslots/error",
                        timeout: "/ova/adslots/timeout",
                        deferred: "/ova/adslots/deferred"
                    },
                    progress: {
                        enable: !0,
                        start: "/ova/progress/start",
                        firstQuartile: "/ova/progress/firstQuartile",
                        midpoint: "/ova/progress/midpoint",
                        thirdQuartile: "/ova/progress/thirdQuartile",
                        complete: "/ova/progress/complete",
                        pause: "/ova/progress/pause",
                        resume: "/ova/progress/resume",
                        fullscreen: "/ova/progress/fullscreen",
                        mute: "/ova/progress/mute",
                        unmute: "/ova/progress/unmute",
                        expand: "/ova/progress/expand",
                        collapse: "/ova/progress/collapse",
                        acceptInvitation: "/ova/progress/acceptInvitation",
                        close: "/ova/progress/close"
                    },
                    vpaid: {
                        enable: !0,
                        loaded: "/ova/vpaid/loaded",
                        started: "/ova/vpaid/started",
                        complete: "/ova/vpaid/complete",
                        stopped: "/ova/vpaid/stopped",
                        linearChange: "/ova/vpaid/linearChange",
                        expandedChange: "/ova/vpaid/expandedChange",
                        remainingTimeChange: "/ova/vpaid/remainingTimeChange",
                        volumeChange: "/ova/vpaid/volumeChange",
                        videoStart: "/ova/vpaid/videoStart",
                        videoFirstQuartile: "/ova/vpaid/videoFirstQuartile",
                        videoMidpoint: "/ova/vpaid/videoMidpoint",
                        videoThirdQuartile: "/ova/vpaid/videoThirdQuartile",
                        videoComplete: "/ova/vpaid/videoComplete",
                        userAcceptInvitation: "/ova/vpaid/userAcceptInvitation",
                        userClose: "/ova/vpaid/userClose",
                        paused: "/ova/vpaid/paused",
                        playing: "/ova/vpaid/playing",
                        error: "/ova/vpaid/error"
                    },
                    clicks: {
                        enable: !0,
                        linear: "/ova/clicks/linear",
                        nonLinear: "/ova/clicks/nonLinear",
                        vpaid: "/ova/clicks/vpaid"
                    }
                }
            }
        }
    }), app.filter("truncate", function() {
        return function(text, length, end) {
            return void 0 === end && (end = " ..."), text.length <= length || text.length - end.length <= length ? text : String(text).substring(0, length - end.length) + end
        }
    }), app.filter("range", function() {
        return function(input, min, max) {
            min = parseInt(min), max = parseInt(max);
            for (var i = min; max > i; i++) input.push(i);
            return input
        }
    }), app.directive("validPrice", function() {
        return {
            require: "ngModel",
            link: function(scope, elm, attrs, ctrl) {
                var regex = /^\d{2,4}(\.\d{1,2})?$/;
                ctrl.$parsers.unshift(function(viewValue) {
                    var floatValue = parseFloat(viewValue);
                    return floatValue >= 50 && 5e3 >= floatValue && regex.test(viewValue) ? ctrl.$setValidity("validPrice", !0) : ctrl.$setValidity("validPrice", !1), viewValue
                })
            }
        }
    }), app.filter("nl2br", function() {
        return function(string, is_xhtml) {
            var is_xhtml = is_xhtml || !0,
                breakTag = is_xhtml ? "<br />" : "<br>",
                text = (string + "").replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, "$1" + breakTag + "$2");
            return String(text)
        }
    }), app.filter("timeAgo", function() {
        return function(time) {
            return moment(time).fromNow()
        }
    }), app.filter("toMoney", ["$filter", function($filter) {
        return function(number, currency) {
            if (isNaN(number) || void 0 == typeof number || 0 == number) return "-";
            var cur = "EUR";
            return currency && (cur = currency), '<font class="currency">' + cur + "</font>" + $filter("number")(number, 2)
        }
    }]), app.filter("toDate", ["$filter", function() {
        return function(date) {
            return moment(date).format("MMM D, YYYY")
        }
    }]), app.filter("hexToRgb", function() {
        return function(hex) {
            var bigint = parseInt(hex, 16),
                r = bigint >> 16 & 255,
                g = bigint >> 8 & 255,
                b = 255 & bigint;
            return r + "," + g + "," + b
        }
    }), app.filter("code2Name", ["CountryService", function(CountryService) {
        return function(code) {
            return CountryService.getCountryName(code)
        }
    }]), app.controller("listLive", ["$scope", "$http", "appSettings", function($scope, $http) {
        $http.get("php/streams.php", {
            cache: !1
        }).then(function(res) {
            $scope.livestreams = res.data.streams
        }), $scope.thu = 8
    }]), app.controller("topGames", ["$scope", "$http", "appSettings", function($scope, $http, appSettings) {
        params = {
            limit: 6
        }, $http.get(appSettings.apiUri + "/games/top", {
            cache: !1,
            params: params
        }).then(function(res) {
            $scope.games = res.data.categories
        })
    }]), app.controller("listGames", ["$scope", "$http", "appSettings", function($scope, $http, appSettings) {
        params = {
            limit: 100
        }, $http.get(appSettings.apiUri + "/games/top", {
            cache: !1,
            params: params
        }).then(function(res) {
            $scope.games = res.data.categories
        })
    }]), app.factory("Globalmessage", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/globalmessage", {}, {
                get: {
                    method: "GET",
                    params: params
                }
            });
        return resource
    }]), app.factory("Auth", ["$http", "$state", "$rootScope", "$cookieStore", "appSettings", "$location", function($http, $state, $rootScope, $cookieStore, appSettings, $location) {
        var accessLevels = routingConfig.accessLevels,
            userRoles = routingConfig.userRoles;
        return $rootScope.accessLevels = accessLevels, $rootScope.userRoles = userRoles, {
            authorize: function(params, success, error) {
                void 0 === params.resource && (params.resource = "settings");
                var authToken = "";
                $rootScope.session && $rootScope.session.authToken && (authToken = $rootScope.session.authToken), $http.get(appSettings.apiUri + "/user/access/" + params.resource_id + "/" + authToken).success(function(roles) {
                    $rootScope.roles = roles, success(params.accessLevel & userRoles[roles[params.resource]])
                }).error(error)
            },
            login: function(user, success, error) {
                $http.post(appSettings.apiUri + "/auth/login", user).success(function(user) {
                    $rootScope.session = user.data, $cookieStore.put("hitbox", $rootScope.session), $cookieStore.put("hitbox.session", $rootScope.session), "function" == typeof amplify.store && "https" != $location.protocol() && amplify.store("hitbox.session", $rootScope.session), $rootScope.loggedIn = !0, $rootScope.userStatus = {
                        loggedIn: !0
                    }, success(user)
                }).error(error)
            },
            logout: function(user, success, error) {
                $http.post(appSettings.apiUri + "/logout", user).success(function() {
                    success()
                }).error(error)
            },
            accessLevels: accessLevels,
            userRoles: userRoles
        }
    }]), app.factory("Subscribed", function($rootScope, $resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/user/subscription/:channel/:authToken", {
                authToken: "@authToken",
                channel: "@channel"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                update: {
                    method: "PUT",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }), app.factory("Users", ["$rootScope", "$resource", "$translate", "appSettings", function($rootScope, $resource, $translate, appSettings) {
        var resource = $resource(appSettings.apiUri + "/user/list", {}, {
            get: {
                method: "GET",
                params: {},
                isArray: !1
            },
            search: {
                method: "GET",
                params: {},
                isArray: !0
            }
        });
        return resource
    }]), app.factory("MediaKey", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/mediakey/:channel", {
                channel: "@channel",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: {},
                    isArray: !1
                },
                update: {
                    method: "PUT",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("MediaStatus", ["$resource", "appSettings", function($resource, appSettings) {
        var resource = $resource(appSettings.apiUri + "/media/status/:media_id", {
            media_id: "@media_id"
        }, {
            get: {
                method: "GET",
                params: {},
                isArray: !1
            }
        });
        return resource
    }]), app.factory("MediaInfo", ["$resource", "appSettings", function($resource, appSettings) {
        var resource = $resource(appSettings.apiUri + "/mediainfo/live/:media_id", {
            media_id: "@media_id"
        }, {
            get: {
                method: "GET",
                params: {},
                isArray: !1
            }
        });
        return resource
    }]), app.factory("MediaAuth", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/auth/media/:media_type/:media_name", {
                media_name: "@media_name",
                media_type: "@media_type",
                authToken: "@authToken"
            }, {
                auth: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Teams", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/teams/:user_name", {
                user_name: "@user_name"
            }, {
                get: {
                    method: "GET",
                    params: {},
                    isArray: !1
                },
                search: {
                    method: "GET",
                    params: {},
                    isArray: !1
                },
                update: {
                    method: "PUT",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Forms", ["$resource", "$translate", "appSettings", function($resource, $translate, appSettings) {
        var user = {};
        return {
            verifyPassword: function(password, password2) {
                var error = {};
                return password.length < 6 ? (error.user_password = $translate("TEXT_PASSWORD_SHORT"), error) : password2 !== password ? (error.user_password2 = $translate("TEXT_PASSWORD_NOMATCH"), error) : {}
            },
            verifyUser: function(user_name) {
                var error = {};
                if (!(user_name.length > 2)) return error.user_name = $translate("TEXT_USERNAME_SHORT"), error;
                var User = $resource(appSettings.apiUri + "/user/:name");
                return user = User.get({
                    name: user_name
                }, function() {
                    return null != user.user_name ? (error.user_name = $translate("TEXT_USERNAME_TAKEN"), error) : void 0
                }), error
            },
            verifyEmail: function(email) {
                var error = {},
                    check = function() {
                        var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                        return re.test(email)
                    };
                return error.user_email = "", check(email) ? {} : (error.user_email = $translate("TEXT_EMAIL_INVALID"), error)
            },
            verifyDisplayName: function(display_name, name) {
                var error = {};
                return display_name.toLowerCase() != name.toLowerCase() && (error.user_display_name = "You can only change the case of your username"), error
            }
        }
    }]), app.factory("Games", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/games/:filter", {
                category_id: "@category_id",
                filter: "@filter",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: {},
                    isArray: !1
                },
                create: {
                    method: "POST",
                    params: params
                },
                update: {
                    method: "PUT",
                    params: params,
                    isArray: !0
                }
            });
        return resource
    }]), app.factory("Blacklist", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/chat/blacklist/:channel", {
                channel: "@channel",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: {},
                    isArray: !0
                },
                post: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Team", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/team/:team_name/:user_name", {
                team_name: "@team_name",
                user_name: "@user_name"
            }, {
                get: {
                    method: "GET",
                    params: {},
                    isArray: !1
                },
                create: {
                    method: "POST",
                    params: params
                },
                update: {
                    method: "PUT",
                    params: params,
                    isArray: !1
                },
                acceptMember: {
                    method: "UPDATE",
                    params: params,
                    isArray: !1
                },
                removeMember: {
                    method: "DELETE",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Game", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/game/:game_name", {
                game_name: "@game_name",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: {},
                    isArray: !1
                },
                create: {
                    method: "POST",
                    params: params,
                    isArray: !1
                },
                update: {
                    method: "PUT",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Recordings", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/recordings/:user_name", {
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    isArray: !0
                },
                update: {
                    method: "PUT",
                    params: params,
                    isArray: !1
                },
                remove: {
                    method: "DELETE",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Stats", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/stats/media/:media_id/:metric", {
                media_id: "@media_id",
                metric: "@metric"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                addview: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Message", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/message", {}, {
                send: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("GaStats", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/stats/google/:metric", {
                metric: "@metric"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Messages", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/message/inbox/:user_name", {
                user_name: "@user_name"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !0
                },
                "delete": {
                    method: "DELETE",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Commercials", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/ws/combreak/:channel/:count", {
                channel: "@channel",
                count: "@count"
            }, {
                trigger: {
                    method: "POST",
                    params: params,
                    isArray: !1
                },
                last: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("GeoIp", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/geoip", {}, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("PlayerConfig", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUriNonSecure + "/player/config/:media_type/:media_id?redis=true", {
                media_type: "@media_type",
                media_id: "@media_id"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("PlayerRecConfig", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUriNonSecure + "/player/recconfig/:media_name/:rec_session", {
                media_name: "@media_name",
                rec_session: "@rec_session"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Event", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/event/:event_name", {
                event_name: "@event_name"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("EventParticipants", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/event/participants/:event_name", {
                event_name: "@event_name"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                join: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("EventRankings", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/event/rankings/:event_name", {
                event_name: "@event_name"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("RestorePassword", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/user/password/restore", {
                restore_key: "@restore_key"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                create: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Report", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/report/:media_id", {
                media_id: "@media_id",
                media_type: "@media_type"
            }, {
                send: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("uploadYT", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/media/share/youtube/:media_id", {
                media_id: "@media_id",
                showHidden: !0
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                upload: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Partner", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/partners", {}, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                add: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("UserImages", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/upload/description/:user_name/:token", {
                user_name: "@user_name",
                token: "@token"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !0
                },
                remove: {
                    method: "DELETE",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Promotion", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/promo", {}, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !0
                }
            });
        return resource
    }]), app.factory("ChatEmotes", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {};
        return $resource(appSettings.apiUri + "/chat/emotes/:user_name", {
            user_name: "@user_name",
            authToken: "@authToken"
        }, {
            get: {
                method: "GET",
                params: params,
                isArray: !0
            }
        })
    }]), app.factory("SubscriptionInfo", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/subscription/info/:type/:type_id", {
                type: "@type",
                type_id: "@type_id"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("SubscriberBadges", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/mediabadges/:channel", {
                channel: "@channel"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("SubscriberEmotes", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/chat/icons/:channel", {
                channel: "@channel",
                premiumOnly: !0
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Subscription", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/subscription/:channel/:user_name", {
                channel: "@channel",
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                update: {
                    method: "PUT",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("SubscriptionList", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/subscriptionlist/:user_name", {
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("SubscriberList", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/subscriberlist/:user_name", {
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Payment", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/recurly/:type?rnd=" + Math.random(), {
                type: "@type"
            }, {
                success: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Paypal", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/paypal/init", {
                channel: "@channel",
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                init: {
                    method: "POST",
                    params: params,
                    isArray: !1
                },
                execute: {
                    method: "POST",
                    params: params,
                    isArray: !1,
                    url: appSettings.apiUri + "/paypal/execute"
                }
            });
        return resource
    }]), app.factory("Notifications", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/notifications", {
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                update: {
                    method: "PUT",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Browser", function() {
        var BrowserDetect = {
            init: function() {
                this.browser = this.searchString(this.dataBrowser) || "", this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || "", this.OS = this.searchString(this.dataOS) || ""
            },
            searchString: function(data) {
                for (var i = 0; i < data.length; i++) {
                    var dataString = data[i].string,
                        dataProp = data[i].prop;
                    if (this.versionSearchString = data[i].versionSearch || data[i].identity, dataString) {
                        if (-1 != dataString.indexOf(data[i].subString)) return data[i].identity
                    } else if (dataProp) return data[i].identity
                }
            },
            searchVersion: function(dataString) {
                var index = dataString.indexOf(this.versionSearchString);
                if (-1 != index) return parseFloat(dataString.substring(index + this.versionSearchString.length + 1))
            },
            dataBrowser: [{
                string: navigator.userAgent,
                subString: "Chrome",
                identity: "Chrome"
            }, {
                string: navigator.userAgent,
                subString: "OmniWeb",
                versionSearch: "OmniWeb/",
                identity: "OmniWeb"
            }, {
                string: navigator.vendor,
                subString: "Apple",
                identity: "Safari",
                versionSearch: "Version"
            }, {
                prop: window.opera,
                identity: "Opera",
                versionSearch: "Version"
            }, {
                string: navigator.vendor,
                subString: "iCab",
                identity: "iCab"
            }, {
                string: navigator.vendor,
                subString: "KDE",
                identity: "Konqueror"
            }, {
                string: navigator.userAgent,
                subString: "Firefox",
                identity: "Firefox"
            }, {
                string: navigator.vendor,
                subString: "Camino",
                identity: "Camino"
            }, {
                string: navigator.userAgent,
                subString: "Netscape",
                identity: "Netscape"
            }, {
                string: navigator.userAgent,
                subString: "MSIE",
                identity: "Explorer",
                versionSearch: "MSIE"
            }, {
                string: navigator.userAgent,
                subString: "Gecko",
                identity: "Mozilla",
                versionSearch: "rv"
            }, {
                string: navigator.userAgent,
                subString: "Mozilla",
                identity: "Netscape",
                versionSearch: "Mozilla"
            }],
            dataOS: [{
                string: navigator.platform,
                subString: "Win",
                identity: "Windows"
            }, {
                string: navigator.platform,
                subString: "Mac",
                identity: "Mac"
            }, {
                string: navigator.userAgent,
                subString: "iPhone",
                identity: "iPhone/iPod"
            }, {
                string: navigator.platform,
                subString: "Linux",
                identity: "Linux"
            }]
        };
        return BrowserDetect.init(), {
            getName: function() {
                return BrowserDetect.browser
            },
            getVersion: function() {
                return BrowserDetect.version
            },
            getOS: function() {
                return BrowserDetect.OS
            }
        }
    }), app.factory("VerifyEmail", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/verifyemail/:verifyToken", {
                verifyToken: "@verifyToken"
            }, {
                verify: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Ingests", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {};
        return $resource(appSettings.apiUri + "/streamcontrollist", {
            authToken: "@authToken"
        }, {
            get: {
                method: "GET",
                params: params,
                isArray: !0
            }
        })
    }]), app.factory("Banlist", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {};
        return $resource(appSettings.apiUri + "/banlist/:type/:value", {
            authToken: "@authToken",
            type: "@type",
            value: "@value",
            server_ip: "@server_ip"
        }, {
            add: {
                method: "PUT",
                params: params,
                isArray: !0
            }
        })
    }]), app.service("anchorSmoothScroll", function() {
        this.scrollTo = function(eID) {
            function currentYPosition() {
                return self.pageYOffset ? self.pageYOffset : document.documentElement && document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop ? document.body.scrollTop : 0
            }

            function elmYPosition(eID) {
                for (var elm = document.getElementById(eID), y = elm.offsetTop, node = elm; node.offsetParent && node.offsetParent != document.body;) node = node.offsetParent, y += node.offsetTop;
                return y
            }
            var startY = currentYPosition(),
                stopY = elmYPosition(eID),
                distance = stopY > startY ? stopY - startY : startY - stopY;
            if (100 > distance) return void scrollTo(0, stopY);
            var speed = Math.round(distance / 100);
            speed >= 20 && (speed = 20);
            var step = Math.round(distance / 25),
                leapY = stopY > startY ? startY + step : startY - step,
                timer = 0;
            if (stopY > startY)
                for (var i = startY; stopY > i; i += step) setTimeout("window.scrollTo(0, " + leapY + ")", timer * speed), leapY += step, leapY > stopY && (leapY = stopY), timer++;
            else
                for (var i = startY; i > stopY; i -= step) setTimeout("window.scrollTo(0, " + leapY + ")", timer * speed), leapY -= step, stopY > leapY && (leapY = stopY), timer++
        }
    }), app.directive("gamelist", function() {
        return {
            restrict: "E",
            scope: {
                filter: "@",
                limit: "@",
                publicLength: "=",
                liveonly: "@",
                type: "@"
            },
            templateUrl: function(element, attr) {
                switch (attr.type) {
                    case "list":
                        tpl = "partials/sub/listGames_list.html";
                        break;
                    case "grid":
                        tpl = "partials/sub/listGames_grid.html";
                        break;
                    default:
                        tpl = "partials/sub/listGames_grid.html"
                }
                return tpl
            },
            controller: function($scope, $http, $element, $attrs, Games, appSettings, $stateParams, $rootScope, DisplayService, $timeout, Analytics) {
                $scope.currentGameName = $stateParams.game_name, $scope.config = appSettings, $scope.getGames = function() {
                    params = {
                        filter: $scope.filter,
                        limit: $scope.limit,
                        liveonly: $scope.liveonly
                    }, GamesRes = Games.get(params, function(res) {
                        $scope.games = res.categories, void 0 !== $scope.publicLength && ($scope.publicLength = $scope.games.length)
                    })
                }, $scope.selectGame = function(game) {
                    DisplayService.navState.setGameObject(game), $timeout(function() {
                        window.scrollTo(0, 0)
                    }, 200), Analytics.trackEvent("user", "gameClicked", game.category_name)
                }, $scope.getGames(), $scope.$on("$stateChangeSuccess", function() {
                    $scope.currentGameName = $stateParams.game_name, $scope.getGames()
                }), $scope.browseCat = DisplayService.navState.getBrowseCat(), $scope.$on("navBrowseCatUpdated", function() {
                    $scope.browseCat = DisplayService.navState.getBrowseCat()
                })
            }
        }
    }), app.directive("teamlist", function() {
        return {
            restrict: "E",
            scope: {
                team: "=",
                search: "="
            },
            templateUrl: function(element, attr) {
                switch (attr.size) {
                    default: tpl = "partials/sub/listTeams.html"
                }
                return tpl
            },
            controller: function($scope, $timeout, $http, $element, $attrs, Teams, appSettings) {
                $scope.config = appSettings, $scope.$watch("[team, search]", function(newval, oldval) {
                    newval != oldval && ($scope.searchTimeout && $timeout.cancel($scope.searchTimeout), getTeams = function() {
                        Teams.get({
                            search: $scope.search
                        }, function(teams) {
                            $scope.teams = teams
                        })
                    }, $scope.search.length > 2 && ($scope.searchTimeout = $timeout(function() {
                        getTeams()
                    }, 300)))
                }, !0)
            }
        }
    }), app.directive("mediacarousel", function() {
        return {
            templateUrl: "partials/sub/mediacarousel.html",
            restrict: "E",
            transclude: !0,
            scope: {
                pages: "@",
                type: "@",
                filter: "@",
                lines: "@"
            },
            link: function(scope) {
                scope.medialist = [];
                for (var i = 1; i <= scope.pages; i++) scope.medialist.push({
                    site: i,
                    limit: "auto"
                })
            }
        }
    }), app.directive("bouncy", function() {
        return {
            templateUrl: "partials/sub/bouncy.html",
            restrict: "E"
        }
    }), app.directive("ngFocus", ["$parse", function($parse) {
        return function(scope, element, attr) {
            var fn = $parse(attr.ngFocus);
            element.bind("focus", function(event) {
                scope.$apply(function() {
                    fn(scope, {
                        $event: event
                    })
                })
            })
        }
    }]), app.directive("ngBlur", ["$parse", function($parse) {
        return function(scope, element, attr) {
            var fn = $parse(attr.ngBlur);
            element.bind("blur", function(event) {
                scope.$apply(function() {
                    fn(scope, {
                        $event: event
                    })
                })
            })
        }
    }]), app.directive("fileButton", function() {
        return {
            link: function(scope, element, attributes) {
                {
                    var el = angular.element(element);
                    el.children()[0]
                }
                el.css({
                    position: "relative",
                    overflow: "hidden"
                }), attributes.name || (attributes.name = "file");
                var fileInput = angular.element('<input type="file" name="' + attributes.name + '" />');
                fileInput.css({
                    position: "absolute",
                    top: 0,
                    left: 0,
                    "z-index": "2",
                    width: "100%",
                    height: "100%",
                    opacity: "0",
                    cursor: "pointer"
                }), el.append(fileInput)
            }
        }
    }), app.directive("fallbackSrc", function() {
        var fallbackSrc = {
            link: function(scope, iElement) {
                iElement.one("error", function() {
                    angular.element(this).attr("src", "/static/img/live/no-tn.jpg")
                })
            }
        };
        return fallbackSrc
    }), app.directive("selectOnClick", function() {
        return function(scope, element) {
            element.click(function() {
                element.select()
            })
        }
    }), app.directive("ngConfirmClick", [function() {
        return {
            priority: 100,
            restrict: "A",
            link: function(scope, element, attrs) {
                element.bind("click", function(e) {
                    var message = attrs.ngConfirmClick;
                    message && !confirm(message) && (e.stopImmediatePropagation(), e.preventDefault())
                })
            }
        }
    }]), app.directive("backImg", ["$rootScope", function($rootScope) {
        return function(scope, element, attrs) {
            attrs.$observe("backImg", function(value) {
                value != $rootScope.config.imgUrl && element.css({
                    "background-image": "url(" + value + ")",
                    "background-position": "center center",
                    "-webkit-background-size": "cover",
                    "-moz-background-size": "cover",
                    "background-size": "cover"
                })
            })
        }
    }]), app.directive("uploaddroparea", ["$dialog", function($dialog) {
        return {
            templateUrl: function() {
                return tpl = "partials/sub/drop_upload.html", tpl
            },
            scope: {
                udaUrl: "@",
                udaProgressCallback: "&",
                udaSuccessCallback: "&",
                udaDeleteCallback: "&",
                udaErrorCallback: "&",
                udaMethod: "@",
                udaDataName: "@",
                udaImage: "@udaImage",
                udaName: "@",
                udaFallbackImage: "@",
                udaUserName: "@",
                udaDelete: "@"
            },
            restrict: "E",
            replace: !0,
            transclude: !0,
            controller: function($scope, $upload, $stateParams, $rootScope) {
                $scope.showbutton = !1, $scope.uploading = !1, $scope.showdelete = !0, "false" === $scope.udaDelete && ($scope.showdelete = !1), $scope.image_background = null, $scope.fallback = !1, $scope.$watch("udaImage", function(newVal) {
                    "http://edge.sf.hitbox.tv" === newVal ? ($scope.image_background = $scope.udaFallbackImage, $scope.fallback = !0) : ($scope.image_background = $scope.udaImage, $scope.fallback = !1)
                }), $scope.uploadDrop = function($files) {
                    $scope.scb = $scope.udaSuccessCallback();
                    var user = $scope.udaUserName || $stateParams.user || $rootScope.session.user_name,
                        token = $rootScope.session.authToken;
                    if ($files.length) {
                        var file = $files[0];
                        ("image/png" == file.type || "image/jpg" == file.type || "image/jpeg" == file.type || "image/gif" == file.type) && ($scope.uploading = !0, $scope.upload = $upload.upload({
                            url: $scope.udaUrl + user + "/" + token,
                            method: "POST",
                            file: file,
                            fileFormDataName: $scope.udaDataName
                        }).progress(function() {}).success(function(data, status) {
                            $scope.uploading = !1, $scope.scb(data, status)
                        }).error(function(error) {
                            $scope.uploading = !1, $scope.udaErrorCallback(error)
                        }))
                    }
                }, $scope.deleteImage = function() {
                    var title = "Remove this image?",
                        msg = "",
                        btns = [{
                            result: !1,
                            label: "Cancel"
                        }, {
                            result: !0,
                            label: "Remove",
                            cssClass: "btn-red"
                        }];
                    $dialog.messageBox(title, msg, btns).open().then(function(result) {
                        result && $scope.udaDeleteCallback()
                    })
                }
            },
            link: function(scope, iElement) {
                iElement.bind("mouseover", function() {
                    scope.$apply(function() {
                        scope.showbutton = !0
                    })
                }), iElement.bind("mouseout", function() {
                    scope.$apply(function() {
                        scope.showbutton = !1
                    })
                }), scope.simulateUpload = function($event) {
                    var ele = angular.element($event.currentTarget);
                    ele.next().click()
                }
            }
        }
    }]), app.directive("userOptionsPopover", ["$compile", "$document", "$position", "$rootScope", "$timeout", "$location", "Team", "$dialog", "$state", "User", "$stateParams", function($compile, $document, $position, $rootScope, $timeout, $location, Team, $dialog, $state, User, $stateParams) {
        var _User = User;
        return {
            templateUrl: function() {
                return tpl = "partials/sub/options_user_popover.html", tpl
            },
            scope: {
                username: "@",
                teamname: "@",
                callbackKick: "&",
                showKick: "@"
            },
            restrict: "EA",
            replace: !0,
            transclude: !0,
            controller: function() {},
            link: function(scope, iElement) {
                scope.isOpen = !1;
                var $body, tooltip, html = '<div ng-show="isOpen" class="userPopover"><div><div class="logo" back-img="' + $rootScope.config.imgUrl + '{{user.user_logo}}"></div><div class="title" ><a ng-click="userpage($event)" class="name">{{username}}</a><a ng-click="userpage($event)" class="url">/{{username}}</a></div><div class="btns"><div ng-show="teamname"><a ng-click="kickuser($event)" ng-show="showKick == \'true\' && !myself">Remove from team</a></div></div></div>',
                    ang_html = angular.element(html),
                    compiled = $compile(ang_html),
                    mouseTimeout = null;
                scope.mouseInside = !1, scope.myself = !1, scope.user_name = "", ($stateParams.user || $rootScope.session) && (scope.user_name = $stateParams.user || $rootScope.session.user_name), scope.closeTimeout = null, scope.user = {}, iElement.bind("mouseover", function() {
                    scope.mouseInside = !0, scope.$apply(), scope.isOpen || null !== mouseTimeout || (mouseTimeout = $timeout(init, 10))
                }), iElement.bind("mouseleave", function() {
                    scope.mouseInside = !1, scope.$apply()
                }), scope.$watch("mouseInside", function(newVal) {
                    newVal === !1 && null === scope.closeTimeout && scope.isOpen ? scope.closeTimeout = $timeout(removeAllBind, 0) : newVal === !0 && null !== scope.closeTimeout && scope.isOpen && ($timeout.cancel(scope.closeTimeout), scope.closeTimeout = null)
                });
                var init = function() {
                        $timeout.cancel(mouseTimeout), mouseTimeout = null, scope.mouseInside && (removeAll(), show())
                    },
                    removeAllBind = function() {
                        $timeout.cancel(mouseTimeout), mouseTimeout = null, $timeout.cancel(scope.closeTimeout), scope.closeTimeout = null, removeAll()
                    },
                    removeAll = function() {
                        $rootScope.popOverWindows = $rootScope.popOverWindows || [];
                        for (var tempPop = null; $rootScope.popOverWindows.length;) tempPop = $rootScope.popOverWindows.pop(), tempPop.scope.isOpen = !1, tempPop.ele.remove()
                    };
                scope.close = function() {
                    removeAll()
                };
                scope.kickMemberDlg = null;
                var kickMemberFromTeam = function() {
                        if (null == scope.kickMemberDlg) {
                            var title = "Kick " + scope.username + " from team " + scope.teamname + " ?",
                                msg = "",
                                btns = [{
                                    result: !1,
                                    label: "Cancel"
                                }, {
                                    result: !0,
                                    label: "Kick",
                                    cssClass: "btn-red"
                                }],
                                teamParams = {
                                    team_name: scope.teamname,
                                    nocache: !0
                                };
                            scope.kickMemberDlg = $dialog.messageBox(title, msg, btns), scope.kickMemberDlg.open().then(function(result) {
                                scope.kickMemberDlg = null, result && (TeamRes = Team.get(teamParams, function(team) {
                                    teamParams = {
                                        authToken: $rootScope.session.authToken,
                                        team_name: team.info.group_name,
                                        user_name: scope.username,
                                        group_id: team.info.group_id
                                    }, Team.removeMember(teamParams, function() {
                                        scope.callbackKick()
                                    })
                                }))
                            })
                        }
                    },
                    show = function() {
                        tooltip = compiled(scope), _User.get({
                            user_name: scope.username
                        }, function(user) {
                            console.log(user), user.user_name && scope.mouseInside && (user.user_name == scope.user_name && (scope.myself = !0), scope.user = user, scope.showMe())
                        }, function() {}), scope.userpage = function($event) {
                            $event.stopPropagation(), $location.path("/" + scope.username)
                        }, scope.kickuser = function($event) {
                            $event.stopPropagation(), kickMemberFromTeam()
                        }, scope.promoteuser = function($event) {
                            $event.stopPropagation(), alert("Promote user " + scope.username + " to be admin of team " + scope.teamname)
                        }, scope.showMe = function() {
                            tooltip.css({
                                bottom: 0,
                                left: 0,
                                display: "block",
                                opacity: 1
                            }), $body = $body || $document.find("body"), console.log($body), $body.append(tooltip), position = $position.offset(iElement), ttWidth = 208, ttPosition = {
                                bottom: $(window).height() - position.top,
                                left: position.left + position.width / 2 - ttWidth / 2
                            }, ttPosition.bottom += "px", ttPosition.left += "px", tooltip.css(ttPosition), $rootScope.popOverWindows = $rootScope.popOverWindows || [];
                            var popOverObj = {
                                ele: tooltip,
                                scope: scope
                            };
                            $rootScope.popOverWindows.push(popOverObj), scope.isOpen = !0, tooltip.on("mouseleave", function($event) {
                                angular.element($event.target).scope().mouseInside = !1, angular.element($event.target).scope().$apply()
                            }), tooltip.on("mouseover", function($event) {
                                angular.element($event.target).scope().mouseInside = !0, angular.element($event.target).scope().$apply()
                            })
                        }
                    };
                scope.$on("$locationChangeSuccess", removeAllBind), scope.$on("$destroy", removeAllBind)
            }
        }
    }]), app.directive("focusOnShow", [function() {
        return {
            restrict: "A",
            link: function(scope, iElement) {
                scope.$watch(function() {
                    return iElement.is(":visible")
                }, function() {
                    iElement.is(":visible") && setTimeout(function() {
                        iElement.focus()
                    }, 50)
                })
            }
        }
    }]), app.directive("focusOn", [function() {
        return function(scope, elem, attr) {
            scope.$on(attr.focusOn, function() {
                elem[0].focus()
            })
        }
    }]), app.directive("triggerChange", ["$sniffer", function($sniffer) {
        return {
            link: function(scope, elem, attrs) {
                elem.bind("click", function() {
                    $(attrs.triggerChange).trigger($sniffer.hasEvent("input") ? "input" : "change")
                })
            },
            priority: 1
        }
    }]), app.directive("bndocumentclick", ["$document", "$rootScope", "$timeout", function($document) {
        return {
            restrict: "EA",
            link: function() {
                $document.on("click", function() {
                    for (var elements = document.getElementsByClassName("closeOnDocumentClick"), i = 0; i < elements.length; i++) {
                        var ele = angular.element(elements[i]);
                        ele && ele.scope() && ele.scope().hide()
                    }
                })
            }
        }
    }]), app.directive("divFromHeight", ["$rootScope", "$window", function($rootScope, $window) {
        return {
            restrict: "A",
            link: function(scope, iElement) {
                var putMagicHeight = function() {
                    var height = iElement.height();
                    $rootScope.magicHeight = height
                };
                putMagicHeight(), scope.$watch(function() {
                    putMagicHeight()
                }), angular.element($window).bind("resize", function() {
                    putMagicHeight()
                })
            }
        }
    }]), app.directive("divToHeight", ["$rootScope", function($rootScope) {
        return {
            restrict: "A",
            link: function(scope, iElement) {
                var getMagicHeight = function() {
                    var height = $rootScope.magicHeight,
                        parentHeight = iElement.parent().height();
                    parentHeight > height ? iElement.css("height", parentHeight) : iElement.css("height", height)
                };
                $rootScope.$watch("magicHeight", function() {
                    getMagicHeight()
                })
            }
        }
    }]), app.directive("compile", ["$compile", function($compile) {
        return function(scope, element, attrs) {
            scope.$watch(function(scope) {
                return scope.$eval(attrs.compile)
            }, function(value) {
                element.html(value), $compile(element.contents())(scope)
            })
        }
    }]), app.directive("heightWatch", [function() {
        return {
            restrict: "A",
            scope: {
                publicHeight: "="
            },
            link: function(scope, iElement, iAttrs) {
                scope[iAttrs.heightWatch] = iElement.height(), scope.$watch(function() {
                    return iElement.height()
                }, function(newValue) {
                    scope[iAttrs.heightWatch] = newValue, scope.publicHeight = newValue
                })
            }
        }
    }]), app.directive("tinyColorPicker", ["$timeout", function($timeout) {
        return {
            scope: {
                tcnColor: "=",
                tcnOnChange: "&"
            },
            restrict: "A",
            link: function(scope, iElement) {
                $timeout(function() {
                    var tiny = angular.element(iElement).tinycolorpicker();
                    tiny.bind("change", function(event, hex) {
                        "#000000" != hex && scope.tcnOnChange({
                            color: hex
                        })
                    })
                }, 20)
            }
        }
    }]), app.directive("scrollEmulator", ["$timeout", "DisplayService", "$rootScope", function($timeout, DisplayService, $rootScope) {
        return {
            restrict: "A",
            scope: {
                refreshOnChange: "=",
                tseActive: "@"
            },
            link: function(scope, element) {
                var refreshTimeout;
                scope.tseActive = !1, DisplayService.deviceSize.update(), scope.$watch("refreshOnChange", function(newVal, oldVal) {
                    newVal && newVal != oldVal && ($timeout.cancel(refreshTimeout), refreshTimeout = $timeout(function() {
                        scope.tseActive && $(element).TrackpadScrollEmulator("recalculate")
                    }, 50))
                }), $(element).find(".tse-scroll-content").on("scroll", function() {
                    $rootScope.$emit("tseScroll")
                }), scope.$on("isMobile", function() {
                    scope.tseActive && $(element).TrackpadScrollEmulator("destroy"), scope.tseActive = !1
                }), scope.$on("isTablet", function() {
                    scope.tseActive && $(element).TrackpadScrollEmulator("destroy"), scope.tseActive = !1
                }), scope.$on("isDesktop", function() {
                    scope.tseActive || ($(element).TrackpadScrollEmulator({
                        wrapContent: !1
                    }), $timeout(function() {
                        $(element).TrackpadScrollEmulator("recalculate")
                    }, 0)), scope.tseActive = !0
                })
            }
        }
    }]), app.directive("taggingArea", [function() {
        return {
            scope: {
                tagData: "="
            },
            restrict: "A",
            link: function($scope, $element) {
                $scope.tagEle = angular.element($element), $scope.$watch("tagData", function() {
                    $scope.tagEle.select2({
                        tags: $scope.tagData
                    }), $scope.tagEle.val($scope.tagData).trigger("change")
                }), $scope.updateData = function() {
                    $scope.tagData = $scope.tagEle.val()
                }, $element.on("$destroy", function() {
                    $scope.tagEle.select2("destroy")
                })
            }
        }
    }]), app.directive("ngFocusclass", [function() {
        var FOCUS_CLASS = "ng-focused";
        return {
            restrict: "A",
            require: "ngModel",
            link: function(scope, element, attrs, ctrl) {
                ctrl.$focused = !1, element.bind("focus", function() {
                    element.addClass(FOCUS_CLASS), scope.$apply(function() {
                        ctrl.$focused = !0
                    })
                }).bind("blur", function() {
                    element.removeClass(FOCUS_CLASS), scope.$apply(function() {
                        ctrl.$focused = !1
                    })
                })
            }
        }
    }]), app.directive("lazyLoad", ["$window", "$document", "$animate", "$rootScope", function($window, $document, $animate, $rootScope) {
        function LazyImage(element) {
            function isVisible(topFoldOffset, bottomFoldOffset) {
                if (!element.is(":visible")) return !1;
                null === height && (height = element.height());
                var top = element.offset().top,
                    bottom = top + height;
                return bottomFoldOffset >= top && top >= topFoldOffset || bottomFoldOffset >= bottom && bottom >= topFoldOffset || topFoldOffset >= top && bottom >= bottomFoldOffset
            }

            function render() {
                isRendered = !0, renderSource()
            }

            function setSource(newSource) {
                source = newSource, isRendered && renderSource()
            }

            function renderSource() {
                var img = $document[0].createElement("img");
                img.onload = function() {
                    element.css({
                        "background-image": "url(" + this.src + ")"
                    }), $animate.addClass(element, "loaded")
                }, img.onerror = function() {}, img.src = source
            }
            var source = null,
                isRendered = !1,
                height = null;
            return {
                isVisible: isVisible,
                render: render,
                setSource: setSource
            }
        }

        function link($scope, element, attributes) {
            var lazyImage = new LazyImage(element);
            lazyLoader.addImage(lazyImage), attributes.$observe("lazyLoad", function(newSource) {
                lazyImage.setSource(newSource)
            }), $scope.$on("$destroy", function() {
                lazyLoader.removeImage(lazyImage)
            })
        }
        var lazyLoader = function() {
            function addImage(image) {
                images.push(image), renderTimer || startRenderTimer(), isWatchingWindow || startWatchingWindow()
            }

            function removeImage(image) {
                for (var i = 0; i < images.length; i++)
                    if (images[i] === image) {
                        images.splice(i, 1);
                        break
                    }
                images.length || (clearRenderTimer(), stopWatchingWindow())
            }

            function checkImages() {
                for (var visible = [], hidden = [], windowHeight = win.height(), scrollTop = win.scrollTop(), topFoldOffset = scrollTop, bottomFoldOffset = topFoldOffset + windowHeight, i = 0; i < images.length; i++) {
                    var image = images[i];
                    image.isVisible(topFoldOffset, bottomFoldOffset) ? visible.push(image) : hidden.push(image)
                }
                for (var i = 0; i < visible.length; i++) visible[i].render();
                images = hidden, clearRenderTimer(), images.length || stopWatchingWindow()
            }

            function clearRenderTimer() {
                clearTimeout(renderTimer), renderTimer = null
            }

            function startRenderTimer() {
                renderTimer = setTimeout(checkImages, renderDelay)
            }

            function startWatchingWindow() {
                isWatchingWindow = !0, win.on("resize.lazyLoad", windowChanged), win.on("scroll.lazyLoad", windowChanged), $rootScope.$on("tseScroll", function() {
                    !renderTimer && isWatchingWindow && startRenderTimer()
                })
            }

            function stopWatchingWindow() {
                isWatchingWindow = !1, win.off("resize.lazyLoad"), win.off("scroll.lazyLoad")
            }

            function windowChanged() {
                renderTimer || startRenderTimer()
            }
            $rootScope.$on("lazyLoadManual", function() {
                startRenderTimer()
            });
            var images = [],
                renderTimer = null,
                renderDelay = 100,
                win = $($window),
                doc = $document,
                isWatchingWindow = (doc.height(), !1);
            return {
                addImage: addImage,
                removeImage: removeImage
            }
        }();
        return {
            link: link,
            restrict: "A"
        }
    }]), app.directive("playerSize", ["$rootScope", function() {
        return {
            restrict: "A",
            scope: {},
            link: function(scope, iElement) {
                var calculate = function() {
                    mHeight = window.innerHeight - 220, $(iElement).css({
                        maxHeight: mHeight
                    })
                };
                calculate(), $(window).resize(calculate)
            }
        }
    }]), app.directive("resizer", ["$document", "DisplayService", "$rootScope", "$timeout", function($document, DisplayService, $rootScope, $timeout) {
        return function($scope, $element, $attrs) {
            function resize(x) {
                var maxPixel = parseInt(window.innerWidth / 100 * $attrs.resizerMaxPercent),
                    diff = window.innerWidth - x <= maxPixel ? window.innerWidth - x : maxPixel,
                    minSize = !1;
                doResize && (maxPixel <= $attrs.resizerMinPixel ? (diff = $attrs.resizerMinPixel, minSize = !0) : (diff > maxPixel && (diff = parseInt($attrs.maxPixel), minSize = !1), diff < $attrs.resizerMinPixel && (diff = parseInt($attrs.resizerMinPixel), minSize = !0)), buffer = diff / window.innerWidth * 100, $scope.setValues(buffer))
            }

            function mousemove(event) {
                var x = event.pageX;
                resize(x)
            }

            function mouseup() {
                $document.unbind("mousemove", mousemove), $document.unbind("mouseup", mouseup)
            }
            $scope.chatOptions = DisplayService.chatOptions;
            var doResize = !0,
                buffer = 0,
                initialValue = 30;
            $scope.setValues = function(value) {
                console.log("resizing"), "undefined" != typeof $element && $element.css({
                    right: value + "%"
                }), $("#leftcolumn").css({
                    "padding-right": value + "%"
                }), $("#chat").css({
                    width: value + "%"
                }), $("#chat-tabs").css({
                    width: value + "%"
                }), $("#live-player").css({
                    right: value + "%"
                }), $(".offline-bg").css({
                    right: value + "%"
                }), $(".offline-cover").css({
                    right: value + "%"
                }), amplify.store("chatResize", value), $rootScope.$emit("chatResize")
            }, $(window).resize(function() {
                doResize = window.innerWidth <= 800 ? !1 : !0, resize($element.offset().left)
            }), $scope.$watch("chatOptions.chatState", function(newval, oldval) {
                newval != oldval && (0 == $scope.chatOptions.chatState ? (doResize = !1, $("#live-player").css({
                    right: 0
                }), $(".offline-bg").css({
                    right: 0
                }), $(".offline-cover").css({
                    right: 0
                })) : (doResize = !0, $("#live-player").css({
                    right: $("#chat").width() + "px"
                }), $(".offline-bg").css({
                    right: $("#chat").width() + "px"
                }), $(".offline-cover").css({
                    right: $("#chat").width() + "px"
                })))
            }), $element.on("click", function(event) {
                event.preventDefault(), event.stopPropagation()
            }), $element.on("mousedown", function(event) {
                event.preventDefault(), 1 == event.which && ($document.on("mousemove", mousemove), $document.on("mouseup", mouseup))
            }), $scope.$on("$destroy", function() {
                doResize = !1, $("#live-player").css({
                    right: 0
                }), $(".offline-bg").css({
                    right: 0
                }), $(".offline-cover").css({
                    right: 0
                }), $("#nav-right-container").css({
                    width: ""
                })
            }), $timeout(function() {
                $scope.setValues("function" == typeof amplify.store && amplify.store("chatResize") ? amplify.store("chatResize") : initialValue), $scope.chatOptions.chatState = !0
            }, 100)
        }
    }]), app.directive("negate", [function() {
        return {
            require: "ngModel",
            link: function(scope, element, attribute, ngModelController) {
                ngModelController.$isEmpty = function(value) {
                    return !!value
                }, ngModelController.$formatters.unshift(function(value) {
                    return !value
                }), ngModelController.$parsers.unshift(function(value) {
                    return !value
                })
            }
        }
    }]), app.directive("imageSlider", function($timeout, Promotion, $sce, $compile) {
        return {
            restrict: "AE",
            replace: !0,
            scope: {},
            link: function(scope, elem) {
                scope.slideList = [], scope.swipe = !1;
                var el = angular.element(elem);
                el.bind("click", function(e) {
                    scope.swipe === !0 && (e.stopPropagation(), e.preventDefault(), scope.swipe = !1)
                });
                var timer;
                Promotion.get({}, function(promo) {
                    scope.slideList = promo;
                    for (var i = 0; i < scope.slideList.length; i++) scope.slideList[i].html = $sce.trustAsHtml(scope.slideList[i].html), scope.slideList[i].visible = !1;
                    scope.slideList[0].visible = !0
                }), scope.currentIndex = 0, scope.oldIndex = 0;
                var indicator = $compile('<div class="carousel-indicator">\n<span ng-repeat="slide in slideList" ng-class="{active: $index==currentIndex}" ng-click="goToSlide($index)"></span></div>')(scope);
                elem.append(indicator), scope.goToSlide = function(index) {
                    scope.oldIndex = scope.currentIndex, scope.currentIndex = index
                }, scope.next = function() {
                    scope.oldIndex = scope.currentIndex, scope.currentIndex < scope.slideList.length - 1 ? scope.currentIndex++ : scope.currentIndex = 0
                }, scope.prev = function() {
                    scope.oldIndex = scope.currentIndex, scope.currentIndex > 0 ? scope.currentIndex-- : scope.currentIndex = scope.slideList.length - 1
                }, scope.swipeLeft = function() {
                    scope.swipe = !0, scope.prev()
                }, scope.swipeRight = function() {
                    scope.swipe = !0, scope.next()
                }, scope.stop = function() {
                    $timeout.cancel(timer)
                }, scope.start = function() {
                    sliderFunc()
                }, scope.$watch("currentIndex", function(newVal, oldVal) {
                    newVal != oldVal && (scope.slideList[scope.oldIndex].visible = !1, scope.slideList[scope.currentIndex].visible = !0)
                });
                var sliderFunc = function() {
                    timer = $timeout(function() {
                        scope.next(), sliderFunc()
                    }, 5e3)
                };
                sliderFunc(), scope.$on("$destroy", function() {
                    $timeout.cancel(timer)
                })
            },
            templateUrl: "partials/sub/home_slider.html"
        }
    });
var wasLive = !1;
$.ajaxSetup({
    cache: !0
}), app.factory("CastData", [function() {
    var castData = {
        session: null,
        showReceiverPicker: !1,
        receiverIcon: "off",
        showActivityControls: !1,
        showVideoPlayer: !0,
        showPlayIcons: !0,
        showCastIcons: !1,
        progressBarClass: null,
        progressBarPercent: 0,
        progressBarSeconds: 0,
        progressBarPromise: null,
        isPaused: !1,
        isPlaying: !0,
        showMute: !0,
        showUnmute: !1,
        mediaName: "",
        showDisplay: "on"
    };
    return castData
}]), app.service("CastService", [function() {
    var mediaUrl = "";
    return {
        setMediaUrl: function(url) {
            mediaUrl = url
        },
        getMediaUrl: function() {
            return mediaUrl
        }
    }
}]), app.controller("CastCtrl", ["$rootScope", "$scope", "$http", "$timeout", "CastData", "CastService", function($rootScope, $scope, $http, $timeout, CastData, CastService) {
    $scope.castData = CastData, playerScope = angular.element(".player").parent().scope(), $scope.resetMediaIcons = function() {
        angular.forEach($scope.movies, function(value, key) {
            $scope.movies[key].playClass = "play-icon", $scope.movies[key].glyphIcon = "glyphicon-play", $scope.movies[key].castClass = "cast-icon"
        })
    }, $scope.bootCast = function() {
        window.__onGCastApiAvailable = function(loaded, errorInfo) {
            loaded ? (console.log("chromecast found"), $scope.initializeApi()) : console.log(errorInfo)
        }
    }, $scope.initializeApi = function() {
        $scope.castData.sessionRequest = new chrome.cast.SessionRequest("76D3C0C9"), $scope.castData.apiConfig = new chrome.cast.ApiConfig($scope.castData.sessionRequest, $scope.sessionListener, $scope.receiverListener), chrome.cast.initialize($scope.castData.apiConfig, $scope.onInitSuccess, $scope.onCastError)
    }, $scope.onInitSuccess = function() {
        console.log("Init Success")
    }, $scope.sessionListener = function(e) {
        $f().stop(), $scope.castData.session = e, $scope.castData.receiverIcon = "on", $scope.castData.showVideoPlayer = !1, $scope.castData.showPlayIcons = !1, $scope.castData.showCastIcons = !0, $scope.castData.showActivityControls = !0, $scope.castData.selectedReceiverName = $scope.castData.session.receiver.friendlyName, $scope.castData.session.media.length > 0 && ($scope.checkMuteStatus($scope.castData.session.media[0]), $scope.checkPlayStatus($scope.castData.session.media[0]), angular.forEach($scope.movies, function(value, key) {
            $scope.movies[key].src == $scope.castData.session.media[0].media.customData.src && ($scope.movies[key] = $scope.castData.session.media[0].media.customData, $scope.castData.mediaName = $scope.castData.session.media[0].media.customData.name)
        }), $scope.castData.session.addMediaListener($scope.onMediaDiscovered), $scope.castData.session.addUpdateListener($scope.sessionUpdateListener), $scope.castData.session.media[0].addUpdateListener($scope.mediaUpdateListener)), $scope.castMovie(), $scope.$apply()
    }, $scope.receiverListener = function(e) {
        "available" === e && ($scope.castData.showReceiverPicker = !0, $scope.$apply())
    }, $scope.selectReceiver = function() {
        chrome.cast.requestSession($scope.sessionListener, $scope.onCastError)
    }, $scope.onMediaDiscovered = function() {
        $scope.castData.session.media[0].addUpdateListener($scope.mediaUpdateListener), $scope.castData.session.addUpdateListener($scope.sessionUpdateListener)
    }, $scope.sessionUpdateListener = function(isAlive) {
        isAlive || ($f().play(), $scope.resetMediaIcons(), $scope.resetProgressBar(), $scope.castData.session = null, $scope.castData.receiverIcon = "off", $scope.castData.showVideoPlayer = !0, $scope.castData.showPlayIcons = !0, $scope.castData.showCastIcons = !1, $scope.castData.showActivityControls = !1, $scope.castData.selectedReceiverName = null, $scope.castData.mediaName = "", $scope.$apply())
    }, $scope.mediaUpdateListener = function() {
        1 === $scope.castData.session.media.length ? ($scope.castData.progressBarSeconds = $scope.castData.session.media[0].currentTime, "PLAYING" == $scope.castData.session.media[0].playerState || ("PAUSED" == $scope.castData.session.media[0].playerState ? $scope.pauseProgressBar() : "IDLE" == $scope.castData.session.media[0].playerState && ("FINISHED" == $scope.castData.session.media[0].idleReason ? $scope.stopMedia() : $scope.pauseProgressBar()))) : $scope.stopSuccess()
    }, $scope.castMovie = function() {
        var src = CastService.mediaUrl,
            mediaInfo = new chrome.cast.media.MediaInfo(src);
        mediaInfo.contentType = "application/vnd.apple.mpegurl", src.match(/static\/videos\/vods/) ? (mediaInfo.contentType = "application/x-mpegurl", console.log("video for chromecast."), mediaInfo.streamType = chrome.cast.media.StreamType.LIVE, mediaInfo.autoplay = !0) : mediaInfo.streamType = chrome.cast.media.StreamType.LIVE;
        var request = new chrome.cast.media.LoadRequest(mediaInfo);
        request.autoplay = !0, request.currentTime = 0, $scope.castData.showActivityControls = !0, $scope.castData.session.loadMedia(request, $scope.onMediaDiscovered, $scope.onCastError), src.match(/static\/videos\/vods/) || $scope.castData.session.sendMessage("urn:x-cast:app.hitbox", $rootScope.channel.toLowerCase(), function() {
            console.log("info send")
        }, function() {
            console.log("info failed")
        })
    }, $scope.toggleDisplay = function(status) {
        $scope.castData.session.sendMessage("urn:x-cast:app.hitbox.toggle", status, function() {
            $scope.castData.showDisplay = status, console.log("toggle send " + status)
        }, function() {
            console.log("info failed")
        })
    }, $scope.sendCastMessage = function(namespace, message) {
        null != $scope.castData.session && $scope.castData.session.sendMessage(namespace, message, function() {
            console.log("send ok")
        }, function() {
            console.log("send not ok")
        })
    }, $scope.onCastError = function(e) {
        "session_error" == e.code.trim() && "No receiver for this session" == e.description.trim() ? $scope.sessionUpdateListener(!1) : console.log(e)
    }, $scope.checkMediaCommand = function(command) {
        return $scope.castData.session && 1 === $scope.castData.session.media.length && ($scope.castData.session.media[0].supportsCommand(command) || "play" == command || "stop" == command)
    }, $scope.stopMedia = function() {
        $scope.checkMediaCommand("stop") && ($scope.castData.session.media.length > 0 ? "IDLE" != $scope.castData.session.media[0].playerState && "FINISHED" != $scope.castData.session.media[0].idleReason ? $scope.castData.session.media[0].stop(null, $scope.stopSuccess, $scope.onCastError) : "IDLE" == $scope.castData.session.media[0].playerState && "FINISHED" == $scope.castData.session.media[0].idleReason && $scope.stopSuccess() : $scope.stopSuccess())
    }, $scope.stopSuccess = function() {
        $scope.castData.mediaName = "", $scope.castData.isPaused = !1, $scope.castData.isPlaying = !0, $scope.castData.showUnmute = !1, $scope.castData.showMute = !0, $scope.resetMediaIcons(), $scope.resetProgressBar(), $scope.$apply()
    }, $scope.playMedia = function() {
        $scope.checkMediaCommand("play") && $scope.castData.session.media[0].play(null, $scope.playSuccess, $scope.onCastError)
    }, $scope.playSuccess = function() {
        $scope.checkPlayStatus($scope.castData.session.media[0]), $scope.$apply()
    }, $scope.pauseMedia = function() {
        $scope.checkMediaCommand(chrome.cast.media.MediaCommand.PAUSE) && $scope.castData.session.media[0].pause(null, $scope.pauseSuccess, $scope.onCastError)
    }, $scope.pauseSuccess = function() {
        $scope.checkPlayStatus($scope.castData.session.media[0]), $scope.pauseProgressBar(), $scope.$apply()
    }, $scope.checkPlayStatus = function(media) {
        "PLAYING" == media.playerState ? ($scope.castData.isPaused = !1, $scope.castData.isPlaying = !0) : ($scope.castData.isPaused = !0, $scope.castData.isPlaying = !1), $scope.$apply()
    }, $scope.muteMedia = function() {
        if ($scope.checkMediaCommand(chrome.cast.media.MediaCommand.STREAM_MUTE)) {
            var curVolume = $scope.castData.session.media[0].volume;
            curVolume.muted = !0;
            var volumeRequest = new chrome.cast.media.VolumeRequest(curVolume);
            $scope.castData.session.media[0].setVolume(volumeRequest, $scope.muteSuccess, $scope.onCastError)
        }
    }, $scope.unmuteMedia = function() {
        if ($scope.checkMediaCommand(chrome.cast.media.MediaCommand.STREAM_MUTE)) {
            var curVolume = $scope.castData.session.media[0].volume;
            curVolume.muted = !1;
            var volumeRequest = new chrome.cast.media.VolumeRequest(curVolume);
            $scope.castData.session.media[0].setVolume(volumeRequest, $scope.muteSuccess, $scope.onCastError)
        }
    }, $scope.muteSuccess = function() {
        $scope.checkMuteStatus($scope.castData.session.media[0])
    }, $scope.checkMuteStatus = function(media) {
        media.volume.muted ? ($scope.castData.showUnmute = !0, $scope.castData.showMute = !1) : ($scope.castData.showUnmute = !1, $scope.castData.showMute = !0), $scope.$apply()
    }, $scope.changeVolume = function(level) {
        if ($scope.checkMediaCommand(chrome.cast.media.MediaCommand.STREAM_VOLUME)) {
            var curVolume = $scope.castData.session.media[0].volume;
            curVolume.level = level;
            var volumeRequest = new chrome.cast.media.VolumeRequest(curVolume);
            $scope.castData.session.media[0].setVolume(volumeRequest, $scope.volumeSuccess, $scope.onCastError)
        }
    }, $scope.volumeSuccess = function() {}, $scope.seekMedia = function(direction, seconds) {
        if ($scope.checkMediaCommand(chrome.cast.media.MediaCommand.SEEK)) {
            var curPosition = $scope.castData.progressBarSeconds,
                endPosition = $scope.castData.session.media[0].media.duration;
            "backward" == direction ? (curPosition -= seconds, 0 > curPosition && (curPosition = 0)) : "forward" == direction && (curPosition += seconds, curPosition > endPosition && (curPosition = endPosition)), $scope.pauseProgressBar(), $scope.castData.progressBarSeconds = curPosition;
            var seekRequest = new chrome.cast.media.SeekRequest;
            seekRequest.currentTime = curPosition, $scope.castData.session.media[0].seek(seekRequest, $scope.seekSuccess, $scope.onCastError)
        }
    }, $scope.seekPosition = function(event) {
        if ($scope.checkMediaCommand(chrome.cast.media.MediaCommand.SEEK)) {
            var endPosition = $scope.castData.session.media[0].media.duration,
                barWidth = event.srcElement.clientWidth;
            "progress-bar" == event.srcElement.className.trim() && (barWidth = event.srcElement.parentElement.clientWidth);
            var percent = event.offsetX / barWidth,
                newTime = endPosition * percent;
            $scope.castData.progressBarSeconds = newTime;
            var seekRequest = new chrome.cast.media.SeekRequest;
            seekRequest.currentTime = newTime, $scope.castData.session.media[0].seek(seekRequest, $scope.seekSuccess, $scope.onCastError)
        }
    }, $scope.seekSuccess = function() {}, $scope.updateProgressBar = function() {
        1 === $scope.castData.session.media.length ? ($scope.castData.progressBarSeconds += .1, $scope.castData.progressBarPercent = $scope.castData.progressBarSeconds / $scope.castData.session.media[0].media.duration * 100, $scope.castData.progressBarPercent >= 100 && $scope.pauseProgressBar()) : $scope.resetProgressBar()
    }, $scope.pauseProgressBar = function() {
        $scope.castData.progressBarPromise = null, $scope.animatedProgressBar()
    }, $scope.resetProgressBar = function() {
        $scope.castData.progressBarPromise = null, $scope.castData.progressBarSeconds = 0, $scope.castData.progressBarPercent = 0, $scope.castData.progressBarClass = null, $scope.nonanimatedProgressBar()
    }, $scope.animatedProgressBar = function() {
        $scope.castData.progressBarClass = "progress-striped active"
    }, $scope.nonanimatedProgressBar = function() {
        $scope.castData.progressBarClass = ""
    }, $scope.loadingProgressBar = function() {
        $scope.castData.progressBarPercent = 100, $scope.castData.progressBarClass = "progress-striped active"
    }, $scope.playMovie = function(movie) {
        var video = jQuery("#video");
        "glyphicon-play" == movie.glyphIcon ? (video.attr("src", movie.src), video.get(0).play(), $scope.resetMediaIcons(), movie.glyphIcon = "glyphicon-stop") : $scope.stopMovie()
    }, $scope.stopMovie = function() {
        var video = jQuery("#video");
        video.get(0).pause(), video.attr("src", ""), $scope.resetMediaIcons()
    }, $scope.bootCast()
}]), app.controller("BlacklistController", ["$scope", "$rootScope", "$stateParams", "Blacklist", "dialog", function($scope, $rootScope, $stateParams, Blacklist, dialog) {
    $scope.blacklist = {
        words: [],
        newwords: []
    }, $scope.saveBlacklist = function() {
        for (var words = $scope.blacklist.newwords.split(","), i = 0; i < words.length; i++) words[i] = words[i].toLowerCase();
        var bl_params = {
            channel: $stateParams.channel || $stateParams.user,
            authToken: $rootScope.session.authToken,
            blacklist: words
        };
        Blacklist.post(bl_params, function() {
            $scope.close()
        }, function() {
            $scope.close()
        })
    }, $scope.getBlacklist = function() {
        var bl_params = {
            channel: $stateParams.channel || $stateParams.user
        };
        Blacklist.get(bl_params, function(list) {
            $scope.blacklist.words = list
        }, function() {})
    }, $scope.getBlacklist(), $scope.close = function() {
        dialog.close()
    }, $scope.save = function() {
        $scope.saveBlacklist()
    }
}]), app.controller("cdnController", ["$scope", "$rootScope", "$state", "cdnService", "$stateParams", "Media", "CountryService", function($scope, $rootScope, $state, cdnService, $stateParams, Media, CountryService) {
    function createOptions(listName) {
        var _listName = listName,
            options = {
                placeholder: "cdns",
                connectWith: ".apps-container",
                activate: function() {
                    console.log("list " + _listName + ": activate")
                },
                beforeStop: function() {
                    console.log("list " + _listName + ": beforeStop")
                },
                change: function() {
                    console.log("list " + _listName + ": change")
                },
                create: function() {
                    console.log("list " + _listName + ": create")
                },
                deactivate: function() {
                    console.log("list " + _listName + ": deactivate")
                },
                out: function() {
                    console.log("list " + _listName + ": out")
                },
                over: function() {
                    console.log("list " + _listName + ": over")
                },
                receive: function() {
                    console.log("list " + _listName + ": receive")
                },
                remove: function() {
                    console.log("list " + _listName + ": remove")
                },
                sort: function() {
                    console.log("list " + _listName + ": sort")
                },
                start: function() {
                    console.log("list " + _listName + ": start")
                },
                stop: function() {
                    console.log("list " + _listName + ": stop")
                },
                update: function() {
                    console.log("list " + _listName + ": update")
                }
            };
        return options
    }
    CountryService.addCountry({
        code: "*",
        name: "Global"
    }), $scope.cdnList = [{
        cdn_id: 1,
        cdn_name: "hitbox"
    }], $scope.params = {
        media_name: $stateParams.user,
        media_type: "live",
        list: "list",
        authToken: $rootScope.session.authToken,
        nocache: !0,
        showHidden: !0,
        filter: "newfirst"
    }, $scope.updateSelect2 = function() {
        $scope.select2Country = {
            placeholder: "Country",
            allowClear: !1,
            multiple: !0,
            maximumSelectionSize: 200,
            data: function() {
                return {
                    results: $scope.countries
                }
            },
            initSelection: function(element, callback) {
                for (var countries = element.val().split(","), result = [], n = 0; n < countries.length; n++) result.push({
                    id: countries[n],
                    text: CountryService.getCountryName(countries[n])
                });
                callback(result)
            }
        }
    }, MediaRes = Media.get($scope.params, function(media) {
        media = media.livestream[0], $scope.media = media, $scope.params = {
            media_id: media.media_id,
            authToken: $rootScope.session.authToken
        }, cdnRes = cdnService.get($scope.params, function(cdns) {
            $scope.cdns = cdns.cdns.available, $scope.cdnList = cdns.cdns.enabled;
            var promise = CountryService.getCountries();
            promise.then(function(countries) {
                $scope.countries = countries
            }, function() {}, function() {}), $scope.updateSelect2()
        }, function() {})
    }, function() {}), $scope.sortingLog = [], $scope.countries = [], $scope.sortableOptionsList = [createOptions("A"), createOptions("B")], $scope.update = function() {
        payload = {
            available: $scope.cdns,
            enabled: $scope.cdnList,
            media_id: $scope.media.media_id,
            media_name: $scope.media.media_name,
            authToken: $rootScope.session.authToken
        }, cdnService.save(payload), $state.reload()
    }
}]), app.controller("ChatEmbedCtrl", ["$scope", "$rootScope", "$stateParams", "$timeout", "MediaStore", "Auth", "Analytics", function($scope, $rootScope, $stateParams, $timeout, MediaStore, Auth, Analytics) {
    var url = window.location != window.parent.location ? document.referrer : document.location;
    Analytics.trackEvent("embed", "chat", url), access = routingConfig.accessLevels, authToken = {}, $rootScope.loggedIn && (authToken = $scope.session.authToken), $scope.getMedia = function() {
        mediaParams = {
            media_name: $stateParams.channel,
            media_type: "live",
            showHidden: !0,
            authToken: authToken
        }, $scope.error = {}, MediaRes = MediaStore.get(mediaParams).then(function(media) {
            $scope.media = media.livestream[0], $rootScope.session && Auth.authorize({
                accessLevel: access.admin,
                resource: "account",
                resource_id: $scope.media.media_user_name
            }, function(auth) {
                auth && ($scope.isAdmin = !0)
            }, function() {
                $scope.isAdmin = !1
            })
        })
    }, $scope.getMedia()
}]), app.controller("chatScrollCtrl", ["$scope", "$rootScope", "$element", "$timeout", "ChatScroller", "Analytics", function($scope, $rootScope, $element, $timeout, ChatScroller, Analytics) {
    if (window.location != window.parent.location) {
        var url = window.location != window.parent.location ? document.referrer : document.location;
        Analytics.trackEvent("embed", "chat", url)
    }
    var el = $element[0];
    $scope.autoScroll = !0, $rootScope.autoScroll = !0, $scope.scroller = ChatScroller.scroller, $scope.$watch("scroller.autoScroll", function(newVal, oldVal) {
        "undefined" != typeof newVal && newVal != oldVal && ($scope.autoScroll = newVal, $rootScope.autoScroll = newVal)
    }), $element.on("scroll", function() {
        $scope.autoScroll || el.scrollHeight - el.scrollTop !== el.clientHeight || $scope.autoScroll || $scope.$apply(function() {
            $scope.autoScroll = !0, $rootScope.autoScroll = !0, $scope.scroller.autoScroll = !0
        }), $scope.$apply(function() {
            $scope.scrollPosition = el.scrollTop
        })
    }), $scope.$watch("scrollPosition", function(scrollold, scrollnew) {
        scrolldiff = scrollnew - scrollold, scrolldiff > 0 && $scope.autoScroll && ($scope.autoScroll = !1, $rootScope.autoScroll = !1, $scope.scroller.autoScroll = !1)
    }), $scope.$watch("autoScroll", function(newVal, oldVal) {
        "undefined" != typeof newVal && newVal != oldVal && $rootScope.autoScroll != newVal && ($rootScope.autoScroll = newVal)
    })
}]), app.controller("logScrollCtrl", ["$scope", "$rootScope", "$element", "$timeout", "LogScroller", "Analytics", function($scope, $rootScope, $element, $timeout, LogScroller) {
    var el = $element[0];
    $scope.autoScroll = !0, $rootScope.logAutoScroll = !0, $scope.scroller = LogScroller.scroller, $scope.$watch("scroller.autoScroll", function(newVal, oldVal) {
        "undefined" != typeof newVal && newVal != oldVal && ($scope.autoScroll = newVal, $rootScope.logAutoScroll = newVal)
    }), $element.on("scroll", function() {
        $scope.autoScroll || el.scrollHeight - el.scrollTop !== el.clientHeight || $scope.autoScroll || $scope.$apply(function() {
            $scope.autoScroll = !0, $rootScope.logAutoScroll = !0, $scope.scroller.autoScroll = !0
        }), $scope.$apply(function() {
            $scope.scrollPosition = el.scrollTop
        })
    }), $scope.$watch("scrollPosition", function(scrollold, scrollnew) {
        scrolldiff = scrollnew - scrollold, scrolldiff > 0 && $scope.autoScroll && ($scope.autoScroll = !1, $rootScope.logAutoScroll = !1, $scope.scroller.autoScroll = !1)
    }), $scope.$watch("autoScroll", function(newVal, oldVal) {
        "undefined" != typeof newVal && newVal != oldVal && $rootScope.logAutoScroll != newVal && ($rootScope.logAutoScroll = newVal)
    })
}]), app.controller("ChatCtrl", ["$scope", "$state", "$rootScope", "$compile", "$window", "$stateParams", "$cookieStore", "$timeout", "$element", "ChatManager", "Media", "appSettings", "Auth", "User", "ChatIcons", "ChatServers", "$dialog", "DisplayService", "ChatScroller", "LogScroller", "$interval", "SubscriptionInfo", "Subscribed", "$location", "Blacklist", "ChatEmotes", "SubscriberEmotes", "Following", "SubscriberBadges", "TwitterAccount", "TwitterPost", "MediaStore", "ChatSettings", function($scope, $state, $rootScope, $compile, $window, $stateParams, $cookieStore, $timeout, $element, ChatManager, Media, appSettings, Auth, User, ChatIcons, ChatServers, $dialog, DisplayService, ChatScroller, LogScroller, $interval, SubscriptionInfo, Subscribed, $location, Blacklist, ChatEmotes, SubscriberEmotes, Following, SubscriberBadges, TwitterAccount, TwitterPost, MediaStore, ChatSettings) {
    $scope.deviceSize = DisplayService.deviceSize, $scope.isMobile = !1, $scope.isEmbed = !0, $scope.deviceSize.update(), $rootScope.chatIgnoreList = [], $rootScope.$watch("mobileBrowser()", function(newVal) {
        "embedchat" != $state.current.section && ($scope.isMobile = newVal)
    }), $scope.$on("isMobile", function() {
        $scope.isMobile = "embedchat" == $state.current.section ? !1 : !0
    }), $scope.$on("isTablet", function() {
        $scope.isMobile = !1
    }), $scope.$on("isDesktop", function() {
        $scope.isMobile = !1
    }), $rootScope.twitterWidgetReady = !1, $scope.logChatlog = [], $scope.readyToConnect = !1;
    var textCount = 0,
        oldName = "";
    $scope.chatOptions = DisplayService.chatOptions, "undefined" == typeof $scope.loggedIn && ($scope.loggedIn = $rootScope.loggedIn), $scope.chatOptions.loggedIn = $scope.loggedIn, $scope.chat = {
        msgTxt: "",
        showEmotes: "defaultfaces"
    }, $scope.logScroller = LogScroller.scroller, $scope.scroller = ChatScroller.scroller;
    var authToken = {};
    $scope.session && (authToken = $scope.session.authToken), $scope.channel = $stateParams.channel || $stateParams.user, $scope.channel = $scope.channel ? $scope.channel.toLowerCase() : "", "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.ignoreList." + $scope.channel) && ($rootScope.chatIgnoreList = amplify.store("chat.ignoreList." + $scope.channel)), $rootScope.$watch("chatIgnoreList", function(newVal, oldVal) {
        "function" == typeof amplify.store && newVal && newVal != oldVal && amplify.store("chat.ignoreList." + $scope.channel, newVal)
    }, !0), $scope.hidePopoutButton = !1, "embedchat" == $state.current.section && ($scope.hidePopoutButton = !0), "embedchat" == $state.current.section && "true" != $stateParams.autoconnect && ($scope.showChatInitBtn = !0), $scope.hideControls = !1, "embedchat" == $state.current.section && "true" == $stateParams.mini && ($scope.hideControls = !0), $scope.blacklist = {
        words: []
    };
    var changefontSize = function() {
        $scope.setfontSize($scope.chatOptions.fontSize)
    };
    $scope.chatOptions.fontSizeSliderOptions = {
        orientation: "horizontal",
        min: 0,
        max: 4,
        steps: 1,
        range: "min",
        change: changefontSize,
        slide: changefontSize
    }, $scope.initOptions = function() {
        $scope.chatOptions.fontSizeSliderOptions = {
            orientation: "horizontal",
            min: 0,
            max: 4,
            steps: 1,
            range: "min",
            change: changefontSize,
            slide: changefontSize
        }
    }, $scope.tcn = {}, $scope.chatOptions.subEnabled = !1, $scope.chatOptions.subscriberImages = !1, $scope.heights = {
        chatHeight: 100,
        chatScroll: 0
    }, $scope.chatHeight = 0, $scope.chatHeight1 = 0, $scope.chatHeight2 = 0, $scope.messages = [], $scope.chatLogMessages = [], $scope.backMessages = [], $scope.showBanlist = !1, $scope.showIgnorelist = !1, $scope.chatOptions.subscriberMode = !1;
    new ngGridLayoutPlugin;
    $scope.readyToJoinChannel = !1, $scope.chatOptions.fontSize = "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.fontSize") ? amplify.store("chat.chatOptions.fontSize") : 1, $scope.chatOptions.timestamps = "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.timestamps") ? amplify.store("chat.chatOptions.timestamps") : !1, $scope.chatOptions.compact = "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.compact") ? amplify.store("chat.chatOptions.compact") : !0, $scope.chatOptions.dark = "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.dark") ? amplify.store("chat.chatOptions.dark") : !0, $scope.chatOptions.disableImages = "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.disableImages") ? amplify.store("chat.chatOptions.disableImages") : !1, $scope.popover = {
        user: {
            user_logo_small: appSettings.fallbackImages.userLogoSmall
        }
    }, $scope.userListFilterOptions = {
        filterText: "name:;role:;",
        useExternalFilter: !1
    }, $scope.role_select = {
        mod: !1,
        subscriber: !1,
        follower: !1,
        staff: !1,
        community: !1
    }, $scope.twitter_account = null, $scope.twitter_theme = "", $scope.showTwitter = !1, $rootScope.$watch("theme", function(newVal) {
        "dashboard" != $state.current.section && ("theme-dark" == newVal && ($scope.twitter_theme = "dark", $scope.reloadTwitterWidget()), "theme-light" == newVal && ($scope.twitter_theme = "", $scope.reloadTwitterWidget()))
    }), $scope.getChatlogCSV = function() {
        var finaldata = [
            [$scope.username],
            ["Activity Log"],
            ["Date", "Activity"]
        ];
        return finaldata = finaldata.concat($scope.logChatlog)
    }, $scope.reloadTwitterWidget = function() {
        $scope.showTwitter = !1, $timeout(function() {
            $scope.showTwitter = !0, "undefined" != typeof twttr && twttr.ready(function() {
                twttr.widgets.load()
            })
        }, 200)
    }, $scope.$watch("[chatHeight,chatHeight1]", function(newVal, oldVal) {
        newVal != oldVal && ($scope.chatHeight2 = $scope.chatHeight - $scope.chatHeight1, $scope.chatOptions.chatUsers && $scope.updateViewerListLayout())
    }, !0), $rootScope.$watch("autoScroll", function(newVal) {
        "undefined" != typeof newVal && ($scope.autoScroll = newVal, $scope.scroller.autoScroll = newVal, 1 == $scope.autoScroll && $scope.restoreChatMessages())
    }), $rootScope.$watch("logAutoScroll", function(newVal) {
        "undefined" != typeof newVal && ($scope.autoScroll = newVal, $scope.logScroller.autoScroll = newVal, 1 == $scope.autoScroll && $scope.restoreChatMessages())
    }), $scope.$watch("userLists.search", function(newVal, oldVal) {
        newVal != oldVal && ($scope.userListFilterOptions.filterText = "name:" + $scope.userLists.search + ";role:" + $scope.userLists.role)
    }), $scope.$watch("userLists.role", function(newVal, oldVal) {
        newVal != oldVal && ($scope.userListFilterOptions.filterText = "name:" + $scope.userLists.search + ";role:" + $scope.userLists.role)
    }), $scope.$watch("chatOptions.chatUsers", function(newVal) {
        1 == newVal && $scope.chatLoggedIn && (DisplayService.chatOptions.chatUsers = !0, $scope.getChannelUserList(!0), $scope.startUserListUpdateTimeout()), 0 == newVal && ($scope.stopUserListUpdateTimeout(), DisplayService.chatOptions.chatUsers = !1)
    }), $scope.$watch("chatOptions.chatState", function(newVal, oldVal) {
        newVal && newVal != oldVal && $scope.init(), 1 == newVal && "function" == typeof amplify.store && amplify.store("chat.chatOptions.chatState", !0), 0 == newVal && "function" == typeof amplify.store && amplify.store("chat.chatOptions.chatState", !1)
    }), $scope.$watch("chatOptions.timestamps", function(newVal) {
        newVal === !0 && "function" == typeof amplify.store && amplify.store("chat.chatOptions.timestamps", !0), newVal === !1 && "function" == typeof amplify.store && amplify.store("chat.chatOptions.timestamps", !1)
    }), $scope.$watch("chatOptions.compact", function(newVal) {
        newVal === !0 && "function" == typeof amplify.store && amplify.store("chat.chatOptions.compact", !0), newVal === !1 && "function" == typeof amplify.store && amplify.store("chat.chatOptions.compact", !1)
    }), $scope.$watch("chatOptions.dark", function(newVal) {
        newVal === !0 && "function" == typeof amplify.store && amplify.store("chat.chatOptions.dark", !0), newVal === !1 && "function" == typeof amplify.store && amplify.store("chat.chatOptions.dark", !1)
    }), $scope.$watch("chatOptions.disableImages", function(newVal) {
        newVal === !0 && "function" == typeof amplify.store && amplify.store("chat.chatOptions.disableImages", !0), newVal === !1 && "function" == typeof amplify.store && amplify.store("chat.chatOptions.disableImages", !1)
    }), $rootScope.$on("chatResize", function() {
        $scope.updateViewerListLayout()
    }), $scope.$watch("slowMode.slider", function(newVal, oldVal) {
        $scope.slowModeWatcher && newVal != oldVal && ($scope.slowMode.seconds = slowModeValues[$scope.slowMode.slider], null == slowModeTimeout ? slowModeTimeout = $timeout(function() {
            $scope.setSlowMode($scope.slowMode.seconds)
        }, 1e3) : ($timeout.cancel(slowModeTimeout), slowModeTimeout = $timeout(function() {
            $scope.setSlowMode($scope.slowMode.seconds)
        }, 1e3)))
    }), $scope.triggerBanlist = function() {
        $scope.role_select = {
            mod: !1,
            subscriber: !1,
            follower: !1,
            staff: !1,
            community: !1
        }, $scope.userLists.role = "", $scope.showIgnorelist = !1, $scope.showBanlist = !$scope.showBanlist, $rootScope.$emit("chatResize")
    }, $scope.triggerIgnorelist = function() {
        $scope.role_select = {
            mod: !1,
            subscriber: !1,
            follower: !1,
            staff: !1,
            community: !1
        }, $scope.userLists.role = "", $scope.showBanlist = !1, $scope.showIgnorelist = !$scope.showIgnorelist, $rootScope.$emit("chatResize")
    }, $scope.setSelectedRole = function(role) {
        if (!role) return $scope.role_select = {
            mod: !1,
            subscriber: !1,
            follower: !1,
            staff: !1,
            community: !1
        }, $scope.userLists.role = "", void $rootScope.$emit("chatResize");
        for (sel_role in $scope.role_select)
            if (sel_role == role) {
                if (1 == $scope.role_select[sel_role]) {
                    role = "";
                    break
                }
                $scope.role_select[sel_role] = !0
            } else $scope.role_select[sel_role] = !1;
        $scope.showBanlist = !1, $scope.showIgnorelist = !1, $scope.userLists.role = role, $rootScope.$emit("chatResize")
    }, $scope.doAutoScroll = function() {
        $scope.scroller.autoScroll = !0
    }, $scope.logDoAutoScroll = function() {
        $scope.logScroller.autoScroll = !0
    }, $scope.initChatTimeout = null, $scope.initChat = function() {
        ChatManager.conn ? $scope.connected = !0 : $scope.readyToConnect && !$scope.connecting ? ($scope.connecting = !0, ChatManager.init($scope.chatHost), $timeout.cancel($scope.initChatTimeout), $scope.initChatTimeout = null) : $scope.initChatTimeout = $timeout($scope.initChat, 2e3)
    }, $scope.shoutout = {
        twitter: {
            enabled: !1,
            active: !1,
            username: ""
        },
        message: "",
        loading: 0
    }, $scope.getTwitterAccount = function() {
        var fb_params = {
            user_name: $scope.session.user_name,
            authToken: $scope.session.authToken
        };
        TwitterAccount.get(fb_params, function() {
            $scope.shoutout.twitter.enabled = !0
        }, function() {})
    }, $scope.session && $scope.getTwitterAccount(), $scope.shoutOut = function($event) {
        $event.preventDefault(), $scope.shoutout.loading = 0;
        var msg = $scope.shoutout.message;
        if ($scope.shoutout.message = "@" + $scope.media.channel.twitter_account + " ", $scope.shoutout.twitter.enabled) {
            $scope.shoutout.loading++;
            var twitter_params = {
                user_name: $scope.session.user_name,
                authToken: $scope.session.authToken,
                message: msg
            };
            TwitterPost.post(twitter_params, function() {
                $scope.shoutout.loading--
            }, function() {
                $scope.shoutout.loading--
            })
        }
    }, $scope.connectTwitter = function() {
        var wnd = window.open("https://www.hitbox.tv/api/twitter/login?user_name=" + $scope.session.user_name + "&authToken=" + $scope.session.authToken, "_blank"),
            checkTwitterPopout = $interval(function() {
                (null == wnd || wnd.closed) && ($interval.cancel(checkTwitterPopout), $timeout(function() {
                    $scope.getTwitterAccount()
                }, 1500))
            }, 1e3)
    }, $scope.getEmotes = function() {
        var emoteParams = {
            user_name: $scope.session.user_name || "all",
            authToken: $scope.session.authToken
        };
        ChatEmotes.get(emoteParams, function(emotes) {
            $scope.chatEmotes = [];
            for (var i = 0; i < emotes.length; i++) {
                for (var haveCategory = !1, j = 0; j < $scope.chatEmotes.length; j++)
                    if ($scope.chatEmotes[j].name == emotes[i].category_name) {
                        $scope.chatEmotes[j].emotes.push(emotes[i]), haveCategory = !0;
                        break
                    }
                haveCategory || $scope.chatEmotes.push({
                    name: emotes[i].category_name,
                    icon: emotes[i].category_logo,
                    emotes: [emotes[i]]
                })
            }
        }, function() {})
    }, $scope.popoutChat = function() {
        var chatPopoutWindow = window.open(appSettings.baseUrl + "/embedchat/" + $scope.channel + "?autoconnect=true&", "_blank", "width=380,height=540"),
            checkPopoutChat = $interval(function() {
                (null == chatPopoutWindow || chatPopoutWindow.closed) && ($interval.cancel(checkPopoutChat), $scope.chatOptions.chatState = !0)
            }, 1e3);
        $scope.closeChat()
    }, $scope.showColorPicker = !1, $scope.colorPicker = function(color) {
        "function" == typeof amplify.store && amplify.store("chat.chatOptions.nameColor", color), $scope.nameColor = color, $scope.showColorPicker = !1
    }, $scope.tcn.pickColor = function(color) {
        $scope.colorPicker(color.substring(1))
    }, $scope.closeChat = function() {
        ChatManager.partChannel($scope.name, $scope.channel), $rootScope.chatState = !1, $scope.chatOptions.chatState = !1
    }, $scope.kickUser = function(name, channel, seconds) {
        var time = seconds ? seconds : 600;
        token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.kickUser(name, channel, time, token)
    }, $scope.banUser = function(name, channel) {
        token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.banUser(name, channel, token)
    }, $scope.banUserIp = function(name, channel) {
        token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.banUserIp(name, channel, token)
    }, $scope.unbanUserIp = function(name, channel) {
        token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.unbanUserIp(name, channel, token)
    }, $scope.makeMod = function(name, channel) {
        token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.makeMod(name, channel, token)
    }, $scope.removeMod = function(name, channel) {
        token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.removeMod(name, channel, token)
    }, $scope.unbanUser = function(name, channel) {
        token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.unbanUser(name, channel, token)
    }, $scope.ignoreUser = function(name) {
        -1 == $rootScope.chatIgnoreList.indexOf(name) && $rootScope.chatIgnoreList.push(name), $element.find("li.from_" + name).hide()
    }, $scope.unignoreUser = function(name) {
        $rootScope.chatIgnoreList.indexOf(name) > -1 && $rootScope.chatIgnoreList.splice($rootScope.chatIgnoreList.indexOf(name), 1), $element.find("li.from_" + name).show()
    }, $scope.getChannelUser = function(name, channel) {
        ChatManager.getChannelUser(name, channel)
    }, $scope.confirmIpBan = function(name) {
        $scope.banUserIp(name, $scope.channel), $scope.closeChatSettings()
    }, $scope.processUserOptions = function() {
        $scope.action.kick && $scope.kickUser($scope.popover.user.user_name, $scope.channel), $scope.action.ban && $scope.banUser($scope.popover.user.user_name, $scope.channel), $scope.action.unban && $scope.unbanUser($scope.popover.user.user_name, $scope.channel), $scope.action.mod && $scope.makeMod($scope.popover.user.user_name, $scope.channel), $scope.action.removemod && $scope.removeMod($scope.popover.user.user_name, $scope.channel), $scope.action.ignore ? ($scope.ignoreUser($scope.popover.user.user_name), $scope.popover.user.ignored = !0) : ($scope.unignoreUser($scope.popover.user.user_name), $scope.popover.user.ignored = !1), $scope.action.banip && $scope.banUserIp($scope.popover.user.user_name, $scope.channel), $scope.closeChatSettings(), $scope.action = {
            mod: !1,
            ban: !1,
            kick: !1,
            kicktime: 0,
            ignore: !1,
            unban: !1,
            banip: !1
        }
    }, $scope.connecting = !1, $scope.message = "", $scope.lastMessage = "", $scope.myMessages = [], $scope.myMessagesIndex = 0, $scope.chat.myMessagesPrev = function($event) {
        $event.preventDefault(), $scope.chat.msgTxt = $scope.myMessages[$scope.myMessagesIndex], $scope.myMessagesIndex !== $scope.myMessages.length - 1 && $scope.myMessagesIndex++
    }, $scope.chat.myMessagesNext = function($event) {
        $event.preventDefault(), $scope.chat.msgTxt = $scope.myMessages[$scope.myMessagesIndex], 0 != $scope.myMessagesIndex && $scope.myMessagesIndex--
    };
    var lastPartial = "",
        lastCitationUser = "",
        lastCitationIndex = 0,
        replaceInProgress = !1;
    $scope.chat.resetCitation = function() {
        replaceInProgress || (lastPartial = "", lastCitationUser = "", lastCitationIndex = 0)
    }, $scope.chat.tryCitateUser = function($event) {
        if (-1 != $scope.chat.msgTxt.lastIndexOf("@")) {
            var partial = "",
                replaceString = "";
            if ("" != lastPartial ? (partial = lastPartial, replaceString = lastCitationUser) : (partial = $scope.chat.msgTxt.substring($scope.chat.msgTxt.lastIndexOf("@") + 1), replaceString = partial), "" == partial) return;
            for (var i = lastCitationIndex; i < $scope.userLists.full.length; i++) {
                if (0 == $scope.userLists.full[i].name.toLowerCase().indexOf(partial.toLowerCase())) {
                    var user = $scope.userLists.full[i].name;
                    lastPartial = partial, lastCitationIndex = i + 1, lastCitationUser = user, replaceInProgress = !0, $scope.chat.msgTxt = $scope.chat.msgTxt.replace(replaceString, user), replaceInProgress = !1;
                    break
                }
                lastCitationIndex = 0
            }
            $event.preventDefault()
        }
    }, $scope.chat.prevent = function($event) {
        -1 != $scope.chat.msgTxt.lastIndexOf("@") && $event.preventDefault()
    }, $scope.chat.chatMsg = function($event) {
        var timeoutRegExp = /^\/timeout\s[a-zA-Z0-9\-]+(\s[0-9]+)?$/i,
            banRegExp = /^\/ban\s[a-zA-Z0-9\-]+$/i,
            unbanRegExp = /^\/unban\s[a-zA-Z0-9\-]+$/i,
            colorRegExp = /^\/color\s[a-zA-Z0-9\-]+$/i,
            msg = $scope.chat.msgTxt;
        if ("/reconnect" == msg) $scope.triggerReconnect();
        else if (!$scope.chatOptions.subscriberMode || $scope.subscribed || $scope.chatOptions.isAdmin)
            if (0 == msg.search(timeoutRegExp)) {
                var parts = msg.split(" "),
                    timeoutUser = parts[1],
                    timeoutSeconds = parts.length > 2 ? parts[2] : 600;
                $scope.kickUser(timeoutUser, $scope.channel, timeoutSeconds)
            } else if (0 == msg.search(banRegExp)) {
            var parts = msg.split(" "),
                banUser = parts[1];
            $scope.banUser(banUser, $scope.channel)
        } else if (0 == msg.search(unbanRegExp)) {
            var parts = msg.split(" "),
                banUser = parts[1];
            $scope.unbanUser(banUser, $scope.channel)
        } else if (0 == msg.search(colorRegExp)) {
            var parts = msg.split(" "),
                color = parts[1];
            switch (color) {
                case "red":
                    $scope.colorPicker("d45236");
                    break;
                case "blue":
                    $scope.colorPicker("5077d4");
                    break;
                case "green":
                    $scope.colorPicker("17bd60");
                    break;
                case "yellow":
                    $scope.colorPicker("b2b41e")
            }
        } else switch ($scope.chat.msgTxt) {
            default: if ("/" === $scope.chat.msgTxt.substring(0, 1)) break;if (!$scope.chatOptions.isAdmin) {
                for (var words = $scope.chat.msgTxt.split(" "), blacklisted = !1, i = 0; i < words.length; i++) - 1 != $scope.blacklist.words.indexOf(words[i].toLowerCase()) && ($scope.WsLog({
                    method: "infoMsg",
                    params: {
                        text: '"' + words[i] + '" is blacklisted on this channel.'
                    }
                }), blacklisted = !0);
                if (blacklisted) break
            }
            ChatManager.chatMsg($scope.name, $scope.channel, $scope.chat.msgTxt, $scope.nameColor);
            break;
            case "/clear":
                    $scope.messages = []
        } else $scope.LocalLog({
            text: "Subscriber Only Mode active."
        });
        $scope.myMessages.unshift($scope.chat.msgTxt), $scope.chat.msgTxt = "", $event.preventDefault()
    }, $scope.getChannelUserList = function(bShow) {
        bShow && ("function" == typeof amplify.store && amplify.store("chat.chatOptions.chatUserList", !0), ChatManager.getChannelUserList($scope.channel), $scope.startUserListUpdateTimeout())
    }, $scope.chatDisconnect = function() {
        ChatManager.disconnect()
    }, $scope.gotUserBanned = function(name) {
        if ($scope.autoScroll) var messages = $scope.messages;
        else var messages = $scope.backMessages;
        for (var i = messages.length - 1; i >= 0; i--) {
            var msg = messages[i];
            msg.name && !msg.action && msg.name == name && messages.splice(i, 1)
        }
    }, $scope.getSubMedia = function() {
        var submediaparams = {
            channel: $stateParams.channel || $stateParams.user
        };
        Emotes = SubscriberEmotes.get(submediaparams, function(emotes) {
            $scope.subEmotes = emotes.icons, $scope.noSubEmotes = !0;
            for (var prop in $scope.subEmotes)
                if ($scope.subEmotes.hasOwnProperty(prop)) {
                    $scope.noSubEmotes = !1, $scope.chat.showEmotes = "subscriberEmotes";
                    break
                }
        }, function() {}), Badges = SubscriberBadges.get(submediaparams, function(badges) {
            $scope.subBadges = badges.badges
        }, function() {})
    }, $scope.openLoginDialog = function() {
        $scope.opts = {}, $scope.opts = {
            backdrop: !0,
            keyboard: !0,
            dialogClass: "modal modal-login",
            cache: !1,
            backdropClick: !0,
            templateUrl: "partials/main/login.html",
            controller: "LoginDialogCtrl"
        }, $scope.openDialog = function() {
            var d = $dialog.dialog($scope.opts);
            d.open().then(function() {})
        }, $scope.openDialog()
    }, $scope.useEmote = function(emote) {
        return $rootScope.loggedIn ? ("undefined" == typeof $scope.chat.msgTxt && ($scope.chat.msgTxt = ""), " " == $scope.chat.msgTxt.charAt($scope.chat.msgTxt.length) ? $scope.chat.msgTxt += emote + " " : 0 == $scope.chat.msgTxt.length ? $scope.chat.msgTxt = emote + " " : $scope.chat.msgTxt += " " + emote + " ", void $scope.$broadcast("focusMsgTxt")) : void $scope.openLoginDialog()
    }, $scope.openBlacklistDlg = function() {
        $scope.opts = {
            backdrop: !0,
            keyboard: !0,
            dialogClass: "modal modal-blacklist",
            cache: !1,
            backdropClick: !0,
            templateUrl: "partials/sub/settings_blacklist_dlg.html",
            controller: "BlacklistController"
        };
        var d = $dialog.dialog($scope.opts);
        d.open().then(function() {})
    }, $scope.getBlacklist = function() {
        var bl_params = {
            channel: $stateParams.channel || $stateParams.user
        };
        Blacklist.get(bl_params, function(list) {
            $scope.blacklist.words = list
        }, function() {})
    }, $scope.showUsers = !1, $scope.stickyUserList = !1, $scope.$watch("chatOptions.stickyUsers", function(newVal, oldVal) {
        newVal != oldVal && (1 == newVal && "chat" == $scope.chatOptions.chatTab ? ($scope.showUsers = !0, $scope.stickyUserList = !0, $scope.setSelectedRole(), $rootScope.$emit("chatResize")) : 0 == newVal && "chat" == $scope.chatOptions.chatTab ? ($scope.showUsers = !1, $scope.stickyUserList = !1, $rootScope.$emit("chatResize")) : 1 == newVal && "users" == $scope.chatOptions.chatTab && ($scope.showUsers = !0, $scope.stickyUserList = !0, $scope.chatOptions.chatTab = "chat", $scope.setSelectedRole(), $rootScope.$emit("chatResize")), amplify.store("chat.chatOptions.stickyUsers", newVal))
    }), $scope.chatOptions.stickyUsers = "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.stickyUsers") && $rootScope.session ? amplify.store("chat.chatOptions.stickyUsers") : !1, $scope.chatOptions.chatTab = "chat", $scope.$watch("chatOptions.chatTab", function() {
        "users" == $scope.chatOptions.chatTab ? ($scope.chatOptions.chatUsers = !0, $scope.showUsers = !0, $scope.stickyUserList = !1) : "chat" == $scope.chatOptions.chatTab && 1 == $scope.chatOptions.stickyUsers ? ($scope.showUsers = !0, $scope.stickyUserList = !0, $scope.chatOptions.chatUsers = !0) : ($scope.showUsers = !1, $scope.stickyUserList = !1), "twitter" == $scope.chatOptions.chatTab && $scope.reloadTwitterWidget(), $rootScope.$emit("chatResize")
    }), $scope.chatOptions.subEnabled = !1, $scope.messages = [], $scope.backMessages = [], $scope.chatOptions.subscriberMode = !1, $scope.restoreChatMessages = function() {
        $scope.backMessages = $scope.backMessages.slice(-100), $scope.messages = $scope.messages.concat($scope.backMessages.splice(0)), $scope.messages = $scope.messages.slice(-100), $scope.backMessages = []
    };
    var highlightUser = function(text) {
            if (-1 !== text.toLowerCase().indexOf("@" + $scope.session.user_name.toLowerCase())) {
                var index_start = text.toLowerCase().indexOf("@" + $scope.session.user_name.toLowerCase()),
                    index_end = text.toLowerCase().indexOf("@" + $scope.session.user_name.toLowerCase()) + String("@" + $scope.session.user_name.toLowerCase()).length,
                    colored_username = '<span class="citation" style="color:#' + $scope.nameColor + "; border-color:#" + $scope.nameColor + '">@' + $scope.session.user_name + "</span>";
                text = text.slice(0, index_start) + colored_username + text.slice(index_end)
            }
            return text
        },
        boldifyMessage = function(text) {
            return 0 === text.toLowerCase().indexOf("** ") && (text = text.substring(3)), text
        },
        hightlightClass = function(text) {
            return 0 === text.toLowerCase().indexOf("** ") ? " hightlight" : ""
        };
    $scope.WsLog = function(text) {
        switch (textCount += 1, (json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params), params.id = $scope.messages.length + 1, method) {
            case "chatMsg":
                if ((!params.buffer || !$scope.bufferSent) && jQuery.inArray(params.name, $rootScope.chatIgnoreList)) {
                    if (params.buffersent && ($scope.bufferSent = !0), 1 == params.media) {
                        var imgStart = params.text.indexOf('<img src="');
                        if (-1 !== imgStart) {
                            var divStart = params.text.indexOf('<div class="image'),
                                prevText = params.text.substring(0, divStart),
                                tagEnd = params.text.lastIndexOf("/>"),
                                endText = params.text.substring(tagEnd + 2),
                                imgEnd = params.text.indexOf('"', imgStart + 10),
                                imageUrl = params.text.substring(imgStart + 10, imgEnd),
                                rnd = Math.floor(1e4 * Math.random() + 1);
                            params.text = $scope.chatOptions.disableImages ? prevText + '<a href="' + imageUrl + '" target="_blank">' + imageUrl + "</a>" + endText : prevText + '<a class="image" href="' + imageUrl + '" data-lightbox="image-' + rnd + '"><img src="' + imageUrl + '" /></a>' + endText
                        }
                    }
                    if (params.text = emotify(params.text), params.timeAgo = moment(1e3 * params.time).fromNow(), params.time = dateFormat(1e3 * params.time, "H:MM"), params.html = '<div class="', !params.isSubscriber || params.isOwner || params.isStaff || (params.html += "isSubscriber "), "user" == params.role && (params.html += "isMod ", params.html += hightlightClass(params.text)), params.isOwner && (params.html += "isOwner "), params.isStaff && !params.isOwner && (params.html += "isStaff ", params.html += hightlightClass(params.text)), params.isCommunity && !params.isOwner && (params.html += "isCommunity ", params.html += hightlightClass(params.text)), params.html += '">', params.name != oldName && (params.html += '<div class="title" style="border-color:#' + params.nameColor + '" ng-click="userClick(message.name, $event)" generic-popover gp-width="180" gp-height="420" gp-position="left" gp-template="partials/sub/chat_usercard.html" gp-on="click" gp-keep-open="true">', !params.isSubscriber || params.isOwner || params.isStaff || (params.html += '<span class="chat-badge chat-badge-sub" style="background-image:url(' + appSettings.imgUrl + params.image + ')" tooltip-placement="right" tooltip="Subscriber" tooltip-append-to-body="true"/></span>'), ("user" == params.role && !params.isStaff || "admin" == params.role && !params.isOwner && !params.isStaff) && (params.html += '<span class="chat-badge chat-badge-mod" tooltip-placement="right" tooltip="Moderator" tooltip-append-to-body="true"></span>'), params.isOwner && (params.html += '<span class="chat-badge chat-badge-owner" style="background-image:url(' + appSettings.imgUrl + params.image + ')" tooltip-placement="right" tooltip="Broadcaster" tooltip-append-to-body="true"/></span>'), params.isStaff && !params.isOwner && (params.html += '<span class="chat-badge chat-badge-staff icon-hitbox-icon-s icon-only" tooltip-placement="right" tooltip="hitbox Staff" tooltip-append-to-body="true"></span>'), params.isCommunity && !params.isOwner && (params.html += '<span class="chat-badge-community icon-community-badge iconOnly" tooltip-placement="right" tooltip="Community Ambassador" tooltip-append-to-body="true"></span>'), params.html += '<span class="name" style="color:#' + params.nameColor + "; border-color:#" + params.nameColor + '">' + params.name + "</span>", params.html += "</div>"), params.html += '<div class="message ', 1 == params.media && ($scope.chatOptions.disableImages || (params.html += "media")), $scope.session && (params.text = highlightUser(params.text)), ("user" == params.role || params.isStaff) && (params.text = boldifyMessage(params.text)), params.html += '"><div class="chat-timestamp">' + params.time + '</div><div class="chat-text">' + params.text + "</div></div></div>", params.buffersent && (params.html += '<div class="chat-buffer"><div>Last message: ' + params.timeAgo + "</div></div>"), $scope.autoScroll) var messages = $scope.messages;
                    else var messages = $scope.backMessages;
                    messages.push(params), oldName = params.name
                }
                break;
            case "infoMsg":
                if (params.time = dateFormat(1e3 * params.time, "H:MM"), "blacklist" == params.type) {
                    $scope.blacklist.words = params.blacklist;
                    break
                }
                "sub_images" == params.type && ($scope.chatOptions.subscriberImages = 1 == params.value ? !0 : !1), params.html = "", "isAdmin" === params.action && ($scope.chatOptions.isAdmin = !0), ("ban" == params.action || "kicked" == params.action) && $scope.gotUserBanned(params.name), params.name && (params.name = null), params.html += '<div class="chat-status-message"><span class="chat-timestamp">' + params.time + "</span>" + params.text + "</div>", oldName = "", $scope.messages.push(params);
                break;
            case "getViewers":
                $rootScope.viewers = params.viewers;
                break;
            case "updateUserList":
                $scope.getChannelUserList(!0);
                break;
            case "userList":
                $scope.userList = params.data, $scope.setUserList(params.data), $scope.viewerGridData = params.data.user;
                break;
            case "banList":
                $scope.banList = params.data, $scope.setUserList($scope.userList);
                break;
            case "userInfo":
                $scope.popover.user.role = params.role, $scope.popover.user.banned = params.banned, $scope.isIgnored($scope.popover.user.user_name) && ($scope.popover.user.ignored = !0);
                break;
            case "loginMsg":
                $scope.chatLoggedIn = !0, $scope.chatOptions.chatUsers && $scope.getChannelUserList(!0);
                break;
            case "chatLog":
                alert("hier")
        }
        $scope.messages = $scope.messages.slice(-100), ChatManager.refresh()
    }, $scope.isIgnored = function() {}, $scope.LocalLog = function(params) {
        params.html = '<div class="chat-status-message"><span class="chat-status-time"></span>' + params.text + "</div>", $scope.messages.push(params)
    };
    var sortUsersAlph = function(user_a, user_b) {
        var A = user_a.toLowerCase(),
            B = user_b.toLowerCase();
        return B > A ? -1 : A > B ? 1 : 0
    };
    $scope.upUserInViewerList = function(name) {
        return
    }, $scope.userLists = {
        broadcaster: [],
        admin: [],
        mod: [],
        user: [],
        full: [],
        banned: [],
        search: "",
        role: ""
    }, $scope.setUserList = function(data) {
        $scope.chatOptions.isAdmin && ($scope.chatGuests = data.Guests), $scope.userLists.full = [], $scope.userLists.banned = [];
        var channel = "";
        $stateParams.user && $stateParams.user.length && (channel = $stateParams.user), $stateParams.channel && $stateParams.channel.length && (channel = $stateParams.channel), data.admin.sort(sortUsersAlph);
        for (var i = 0; i < data.admin.length; i++) data.admin[i].toLowerCase() == channel.toLowerCase() && $scope.userLists.full.push({
            name: data.admin[i],
            type: 0,
            role: "broadcaster"
        });
        for (var i = 0; i < data.isStaff.length; i++) data.isStaff[i].toLowerCase() != channel.toLowerCase() && $scope.userLists.full.push({
            name: data.isStaff[i],
            type: 0,
            role: "staff"
        });
        for (var i = 0; i < data.isCommunity.length; i++) data.isCommunity[i].toLowerCase() != channel.toLowerCase() && $scope.userLists.full.push({
            name: data.isCommunity[i],
            type: 0,
            role: "community"
        });
        for (var i = 0; i < data.admin.length; i++)
            if (data.admin[i].toLowerCase() == channel.toLowerCase());
            else {
                for (var staff = !1, j = 0; j < data.isStaff.length; j++)
                    if (data.isStaff[j].toLowerCase() == data.admin[i].toLowerCase()) {
                        staff = !0;
                        break
                    }
                for (var community = !1, j = 0; j < data.isCommunity.length; j++)
                    if (data.isCommunity[j].toLowerCase() == data.admin[i].toLowerCase()) {
                        community = !0;
                        break
                    }
                staff || community || $scope.userLists.full.push({
                    name: data.admin[i],
                    type: 0,
                    role: "mod"
                })
            }
        data.user.sort(sortUsersAlph);
        for (var i = 0; i < data.user.length; i++) {
            for (var community = !1, j = 0; j < data.isCommunity.length; j++)
                if (data.isCommunity[j].toLowerCase() == data.user[i].toLowerCase()) {
                    community = !0;
                    break
                }
            community || $scope.userLists.full.push({
                name: data.user[i],
                type: 0,
                role: "mod"
            })
        }
        data.anon.sort(sortUsersAlph);
        for (var i = 0; i < data.anon.length; i++) $scope.userLists.full.push({
            name: data.anon[i],
            type: 0,
            role: "anon"
        });
        if ($scope.chatOptions.isSuperAdmin && !$scope.isChannelOwner && $scope.userList, $scope.banList && $scope.chatOptions.isAdmin) {
            $scope.banList.sort(sortUsersAlph);
            for (var i = 0; i < $scope.banList.length; i++) $scope.userLists.banned.push({
                name: $scope.banList[i],
                type: 0,
                role: "banned"
            })
        }
        for (var i = 0; i < $scope.userLists.full.length; i++) $scope.userLists.full[i].name == $scope.name && ($scope.userLists.full[i].color = $scope.nameColor), -1 != data.isSubscriber.indexOf($scope.userLists.full[i].name) && -1 == data.admin.indexOf($scope.userLists.full[i].name) && ($scope.userLists.full[i].subscriber = !0, $scope.userLists.full[i].role += " subscriber", $scope.userLists.full[i].image = appSettings.imgUrl + $scope.subBadges[0].badge_image), -1 != data.isFollower.indexOf($scope.userLists.full[i].name) && ($scope.userLists.full[i].follower = !0, $scope.userLists.full[i].role += " follower"), $scope.userLists.full[i].name.toLowerCase() == $scope.channel.toLowerCase() && ($scope.userLists.full[i].image = appSettings.imgUrl + $scope.media.channel.user_logo), data.isCommunity && -1 != data.isCommunity.indexOf($scope.userLists.full[i].name) && -1 != data.admin.indexOf($scope.userLists.full[i].name) && ($scope.userLists.full[i].role += " community")
    }, $scope.citateUser = function(user_name) {
        "undefined" == typeof $scope.chat.msgTxt && ($scope.chat.msgTxt = ""), " " == $scope.chat.msgTxt.charAt($scope.chat.msgTxt.length) ? $scope.chat.msgTxt += "@" + user_name + " " : 0 == $scope.chat.msgTxt.length ? $scope.chat.msgTxt = "@" + user_name + " " : $scope.chat.msgTxt += " @" + user_name + " ", $scope.chatOptions.chatTab = "chat", $scope.$broadcast("focusMsgTxt")
    }, $scope.userListRowClick = function(row, $event) {
        if ($event.preventDefault(), window.getSelection) {
            var sel = window.getSelection();
            sel.removeAllRanges()
        }
        var user_name = row.entity.name;
        1 == $event.ctrlKey ? $scope.citateUser(user_name) : $scope.userTooltip(user_name)
    }, $scope.userListObj = {
        userListRowClick: $scope.userListRowClick
    }, $scope.userClick = function(user_name, $event) {
        if ($event.preventDefault(), window.getSelection) {
            var sel = window.getSelection();
            sel.removeAllRanges()
        }
        1 == $event.ctrlKey ? $scope.citateUser(user_name) : $scope.userTooltip(user_name)
    };
    var layoutPlugin1 = new ngGridLayoutPlugin,
        layoutPlugin2 = new ngGridLayoutPlugin,
        layoutPluginTimeout = !1;
    if ($scope.updateViewerListLayout = function() {
            layoutPluginTimeout !== !1 && ($timeout.cancel(layoutPluginTimeout), layoutPluginTimeout = !1), layoutPluginTimeout = $timeout(function() {
                layoutPlugin1.updateGridLayout(), layoutPlugin2.updateGridLayout(), layoutPluginTimeout = !1
            }, 200)
        }, $scope.gridViewerList = {
            data: "userLists.full",
            columnDefs: [{
                field: "name",
                displayName: "name",
                cellTemplate: '<div class="ngCellText {{row.entity.role}}" ng-click="userListObj.userListRowClick(row, $event)" generic-popover gp-width="180" gp-height="200" gp-position="left" gp-template="partials/sub/chat_usercard.html" gp-on="click"><span class="badge-wrap"><span class="badge"></span><span class="badge-sub" style="background-image: url(\'{{row.entity.image}}\')"></span></span><span class="name" style="color: #{{row.entity.color}}">{{row.getProperty(col.field)}}</span></div>'
            }, {
                field: "role",
                displayName: "role",
                visible: !1
            }],
            multiSelect: !1,
            showFilter: !1,
            filterOptions: $scope.userListFilterOptions,
            enableSorting: !1,
            enableHighlighting: !1,
            enableCellSelection: !1,
            headerRowHeight: 0,
            rowHeight: 28,
            plugins: [layoutPlugin1],
            headerRowTemplate: '<div ng-style="{ height: col.headerRowHeight }" ng-repeat="col in renderedColumns" ng-class="col.colIndex()" class="ngHeaderCell" ng-header-cell ng-click="getChannelUserList(true)"></div>'
        }, $scope.gridBanList = {
            data: "userLists.banned",
            columnDefs: [{
                field: "name",
                displayName: "name",
                cellTemplate: '<div class="ngCellText {{row.entity.role}}" ng-click="userListObj.userListRowClick(row, $event)" generic-popover gp-width="180" gp-height="200" gp-position="left" gp-template="partials/sub/chat_usercard.html" gp-on="click"><span class="badge-wrap"><span class="badge"></span><span class="badge-sub" style="background-image: url(\'{{row.entity.image}}\')"></span></span><span class="name" style="color: #{{row.entity.color}}">{{row.getProperty(col.field)}}</span></div>'
            }, {
                field: "role",
                displayName: "role",
                visible: !1
            }],
            multiSelect: !1,
            showFilter: !1,
            enableSorting: !1,
            enableHighlighting: !1,
            enableCellSelection: !1,
            headerRowHeight: 0,
            rowHeight: 28,
            plugins: [layoutPlugin2],
            headerRowTemplate: '<div ng-style="{ height: col.headerRowHeight }" ng-repeat="col in renderedColumns" ng-class="col.colIndex()" class="ngHeaderCell" ng-header-cell ng-click="getChannelUserList(true)"></div>'
        }, $scope.gridIgnoreList = {
            data: "$root.chatIgnoreList",
            columnDefs: [{
                field: "name",
                displayName: "name",
                cellTemplate: '<div class="ngCellText {{row.entity}}" ng-click="userClick(row.entity, $event)" generic-popover gp-width="180" gp-height="200" gp-position="left" gp-template="partials/sub/chat_usercard.html" gp-on="click">{{row.entity}}</div>'
            }, {
                field: "role",
                displayName: "role",
                visible: !1
            }],
            multiSelect: !1,
            showFilter: !1,
            enableSorting: !1,
            enableHighlighting: !1,
            enableCellSelection: !1,
            headerRowHeight: 0,
            rowHeight: 28,
            plugins: [layoutPlugin2],
            headerRowTemplate: '<div ng-style="{ height: col.headerRowHeight }" ng-repeat="col in renderedColumns" ng-class="col.colIndex()" class="ngHeaderCell" ng-header-cell ng-click="getChannelUserList(true)"></div>'
        }, $scope.initUserlistSettings = function() {
            $scope.chatOptions.chatUsers = "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.chatUsers") ? amplify.store("chat.chatOptions.chatUsers") : !1, "dashboard" == $rootScope.section && ($scope.chatOptions.chatUsers = !0), $scope.$watch("chatOptions.chatUsers", function(newVal) {
                1 == newVal && amplify.store("chat.chatOptions.chatUsers", !0), 0 == newVal && amplify.store("chat.chatOptions.chatUsers", !1)
            })
        }, $scope.userListUpdateTimeout = null, $scope.startUserListUpdateTimeout = function() {
            null == $scope.userListUpdateTimeout && ($scope.userListUpdateTimeout = $timeout(function() {
                1 == $scope.chatOptions.chatUsers && $scope.chatLoggedIn && ($scope.getChannelUserList(!0), $scope.userListUpdateTimeout = null, $scope.startUserListUpdateTimeout())
            }, 6e4))
        }, $scope.stopUserListUpdateTimeout = function() {
            null != $scope.userListUpdateTimeout && ($timeout.cancel($scope.userListUpdateTimeout), $scope.userListUpdateTimeout = null)
        }, $scope.isChannelOwner = !1, $scope.chatSettings = !1, $scope.connected = !1, $scope.wasConnected = !1, $scope.reconnects = 0, $scope.chatServers = [], $scope.chatHostNumber = 0, $scope.chatLoggedIn = !1, $scope.chatOptions.isSuperAdmin = !1, $scope.subscribed = !1, $scope.action = {
            mod: !1,
            ban: !1,
            kick: !1,
            kicktime: 0,
            ignore: !1,
            unban: !1,
            banip: !1
        }, $rootScope.session && ($stateParams.channel && $rootScope.session.user_name.toLowerCase() == $stateParams.channel.toLowerCase() ? $scope.isChannelOwner = !0 : $stateParams.user && $rootScope.session.user_name.toLowerCase() == $stateParams.user.toLowerCase() && ($scope.isChannelOwner = !0), Subscribed.get({
            authToken: $rootScope.session.authToken,
            channel: $scope.channel
        }, function(access) {
            1 == access.isSubscriber && ($scope.subscribed = !0, $scope.chatOptions.subscribed = !0)
        }, function() {})), $scope.test = {
            test: function() {}
        }, $scope.sortUser = function(user_a, user_b) {
            return user_a.name < user_b.name ? -1 : user_a.name > user_b.name ? 1 : 0
        }, $scope.setfontSize = function(size) {
            "function" == typeof amplify.store && amplify.store("chat.chatOptions.fontSize", size), $scope.chatOptions.fontSize = size
        }, $scope.closeChatSettings = function() {
            $scope.chatSettings = !1, $scope.userSettings = !1, $scope.confirm_ban_ip = !1, $scope.action = {
                mod: !1,
                ban: !1,
                kick: !1,
                kicktime: 0,
                ignore: !1,
                unban: !1,
                banip: !1
            }
        }, $scope.chat.triggerChatSettings = function() {
            $scope.chatSettings ? $scope.closeChatSettings() : $scope.chatSettings = !0
        }, $scope.triggerReconnect = function() {
            ChatManager.disconnect()
        }, "video" == $state.current.section) return !1;
    $scope.slowMode = {
        seconds: 0,
        slider: 0
    };
    var slowModeTimeout = null;
    $scope.slowModeWatcher = !0;
    var slowModeValues = [0, 10, 30, 45, 60, 90, 120, 180, 300, 600];
    $scope.chatOptions.slowModeSliderOptions = {
        orientation: "horizontal",
        min: 0,
        max: slowModeValues.length - 1,
        steps: 1,
        range: "min"
    };
    var closeCallback = function() {
        $scope.connected = !1, $scope.connecting = !1, $scope.chatLoggedIn = !1, ChatManager.disconnect(), $timeout.cancel($scope.reconnectTimeout), $timeout.cancel($scope.initChatTimeout), $scope.initChatTimeout = null, $scope.reconnectTimeout = $timeout(function() {
            $scope.chatHost = $scope.getRandomChatHost(), $scope.initChat(), $scope.reconnectTimeout = null
        }, 3e3)
    };
    $scope.isFallbackServer = !1;
    var chatLogCallback = function(data) {
            log = angular.fromJson(data).params, log.time = moment(log.timestamp, "X").format("ddd, MMM Do H:mm"), $scope.logChatlog.push([log.time, log.text.replace(/<(|\/)user>/gi, "")]), regEx = /<user>(.*?)<\/user>/gm;
            for (var match; match = regEx.exec(log.text);) log.user = "'" + match[1] + "'", log.text = log.text.replace(/<user>/, '<user ng-click="userClick(' + log.user + ', $event)" generic-popover gp-width="180" gp-height="420" gp-position="right" gp-template="partials/sub/chat_usercard.html" gp-on="click" gp-keep-open="true">');
            info = log.popover ? '<div class="info icon-attention-circled" tooltip-placement="right" tooltip="' + log.popover + '" tooltip-append-to-body="false"></div>' : "", log.html = '<div class="chat-log-message"><span class="chat-log-time">' + log.time + " </span>" + log.text + "</div>" + info, $scope.chatLogMessages.push(log.html)
        },
        errorCallback = function(data) {
            $scope.connected = !1, $scope.connecting = !1, $scope.chatLoggedIn = !1, ChatManager.disconnect(), $timeout.cancel($scope.initChatTimeout), $scope.initChatTimeout = null, $timeout.cancel($scope.reconnectTimeout), $scope.reconnectTimeout = "fallback" != data || $scope.isFallbackServer ? $timeout(function() {
                $scope.isFallbackServer = !1, $scope.chatHost = $scope.getRandomChatHost(), $scope.initChat(), $scope.reconnectTimeout = null
            }, 3e3) : $timeout(function() {
                $scope.isFallbackServer = !0, $scope.chatHost = "http://fallback.chat.hitbox.tv", $scope.initChat(), $scope.reconnectTimeout = null
            }, 3e3)
        },
        msgCallback = function(msgTxt) {
            $scope.connected = !0, $scope.connecting = !1, $scope.WsLog(msgTxt)
        },
        slowMsgCallback = function(text) {
            $scope.slowModeWatcher = !1, (json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params), "undefined" != typeof params.slowTime ? ($scope.slowMode.seconds = params.slowTime, $scope.slowMode.slider = slowModeValues.indexOf($scope.slowMode.seconds), 0 == params.slowTime && ($scope.chatOptions.subscriberMode = !1)) : $scope.chatOptions.subscriberMode = !0, params.time = dateFormat(1e3 * params.timestamp, "H:MM"), params.html = "", params.name && (params.name = null), params.html += '<div class="chat-status-message"><span class="chat-status-time">' + params.time + "</span>" + params.text + "</div>", oldName = "", $scope.messages.push(params), $timeout(function() {
                $scope.slowModeWatcher = !0
            }, 500)
        },
        openCallback = function() {
            $scope.connected = !0, $scope.connecting = !1, ChatManager.refresh()
        },
        reconnectCallback = function() {
            $scope.triggerReconnect()
        };
    $scope.setSlowMode = function(seconds) {
        ChatManager.setSlowMode($scope.channel, seconds)
    }, $scope.setSubscriberMode = function() {
        var bOn = $scope.chatOptions.subscriberMode;
        $scope.slowModeWatcher && (bOn ? ChatManager.setSubscriberMode($scope.channel) : ChatManager.setSlowMode($scope.channel, 0))
    }, $scope.setSubscriberImages = function() {
        var bOn = $scope.chatOptions.subscriberImages;
        bOn ? ChatSettings.set({
            channel: $scope.channel,
            sub_images: !0
        }, function() {}, function() {
            $scope.chatOptions.subscriberImages = !1
        }) : ChatSettings.set({
            channel: $scope.channel,
            sub_images: !1
        }, function() {}, function() {
            $scope.chatOptions.subscriberImages = !0
        })
    }, $scope.getRandomChatHost = function() {
        var chatServerIP = $scope.chatServers[$scope.chatHostNumber];
        return $scope.chatHostNumber++, $scope.chatHostNumber >= $scope.chatServers.length && ($scope.chatHostNumber = 0), console.log(chatServerIP), chatServerIP
    }, ChatManager.refresh = function() {
        $scope.$$phase || $rootScope.$$phase || $scope.$apply()
    }, $scope.userTooltip = function(username) {
        $scope.tooltipLoading = !0, $scope.popover = {
            user: {
                user_logo_small: appSettings.fallbackImages.userLogoSmall
            }
        }, User.get({
            user_name: username
        }, function(user) {
            $scope.tooltipLoading = !1, $scope.getChannelUser(username, $scope.channel), $rootScope.popover_follow_id = user.user_name, $scope.popover.user = user, $scope.popover.isAdmin = $scope.chatOptions.isAdmin, $scope.chatOptions.isSuperAdmin && ($scope.popover.isSuperAdmin = !0), $scope.userSettings = !0, $scope.ban = !1, $scope.kick = !1, $scope.mod = !1, $scope.kicktime = 0, $scope.popover.confirm_ban_ip = !1, $scope.popover.user.ignored = $rootScope.chatIgnoreList.indexOf(username) > -1 ? !0 : !1
        })
    }, $scope.removeConnecting = function() {
        for (var i = $scope.messages.length - 1; i >= 0; i--) "connecting" == $scope.messages[i].action && $scope.messages.splice(i, 1)
    }, $scope.chatServerRetries = 0, $scope.initProcessing = !1, $scope.init = function() {
        $scope.initProcessing || ($scope.initProcessing = !0, ChatServers.get(function(chatServers) {
            for (var i = 0; i < chatServers.length; i++) {
                var url = "http://" + chatServers[i].server_ip;
                $scope.chatServers.push(url)
            }
            $scope.reconnectTimeout = null, $scope.chatHost = $scope.getRandomChatHost(), $scope.chatOptions.isAdmin = null, $scope.bufferSent = !1, access = routingConfig.accessLevels, $scope.name = $scope.name = $rootScope.session ? $rootScope.session.user_name : "UnknownSoldier", $scope.chat.msgTxt = "", "embedchat" == $state.current.section && ($rootScope.disableTop = !0), $rootScope.session ? Auth.authorize({
                accessLevel: access.user,
                resource: "chat",
                resource_id: $scope.channel
            }, function(auth) {
                auth ? ($scope.chatOptions.isAdmin = !0, $scope.initUserlistSettings(), auth === access.admin && ($scope.chatOptions.isSuperAdmin = !0), auth === access.community && ($scope.chatOptions.isSuperAdmin = !0), ChatSettings.get({
                    channel: $scope.channel
                }, function(settings) {
                    $scope.chatOptions.subscriberImages = settings.sub_images
                })) : $scope.chatOptions.isAdmin = !1
            }, function() {
                $scope.chatOptions.isAdmin = !1
            }) : $scope.chatOptions.isAdmin = !1, $scope.colorTable = ChatManager.colorTable, $scope.nameColor = "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.nameColor") ? amplify.store("chat.chatOptions.nameColor") : ChatManager.randomColor(), -1 == ChatManager.colorTable.indexOf($scope.nameColor) && ($scope.nameColor = "58ACFA"), $scope.tcn.nameColor = $scope.nameColor, token = $rootScope.session ? $rootScope.session.authToken : null, $scope.$watch("[chatOptions.isAdmin,connected]", function(newValue, oldValue) {
                (newValue[1] != oldValue[1] || newValue[0] != oldValue[0]) && $scope.connected && null != $scope.chatOptions.isAdmin && (ChatManager.joinChannel($scope.name, $scope.channel, token, $scope.chatOptions.isAdmin), $scope.chatLoggedIn = !0, ChatManager.refresh(), $scope.chatLoggedIn && !$scope.wasConnected && ($scope.removeConnecting(), $scope.WsLog({
                    method: "infoMsg",
                    params: {
                        text: "Connected."
                    }
                }), $scope.wasConnected = !0))
            }, !0), "embedchat" == $state.current.section && $scope.showChatInitBtn || $scope.initChat(), $scope.readyToConnect = !0, ChatManager.bind("open", openCallback), ChatManager.bind("error", errorCallback), ChatManager.bindsingle("chatMessage", msgCallback), ChatManager.bind("slowMessage", slowMsgCallback), ChatManager.bind("reconnectMessage", reconnectCallback), ChatManager.bind("close", closeCallback), ChatManager.bind("chatLog", chatLogCallback), $scope.initProcessing = !1
        }, function() {
            return $scope.chatServerRetries++, $scope.chatServerRetries > 2 ? void($scope.initProcessing = !1) : void $timeout(function() {
                $scope.init()
            }, 5e3)
        }))
    }, $scope.initMedia = function() {
        chatParams = {
            media_name: $scope.channel,
            media_type: "live",
            showHidden: !0,
            authToken: authToken,
            liveonly: !1
        }, MediaRes = Media.get(chatParams, function(media) {
            $scope.media_user_name = media.livestream[0].media_user_name, $scope.media = media.livestream[0], null == $scope.media.channel.twitter_account && ($scope.media.channel.twitter_account = "hitboxlive"), $scope.shoutout.message = "@" + $scope.media.channel.twitter_account + " ", $scope.twitter_account = $scope.media.channel.twitter_account, $timeout(function() {
                $rootScope.twitterWidgetReady = !0, $scope.reloadTwitterWidget()
            }, 200), $scope.channelBg = function() {
                return {
                    "background-image": "url(" + appSettings.imgUrl + media.livestream[0].media_bg_image + ")"
                }
            }, $scope.userImg = function() {
                return {
                    "background-image": "url(" + appSettings.imgUrl + $scope.media.channel.user_logo + ")"
                }
            }, ChatIcons.get({
                media_id: media.livestream[0].media_id
            }, function(icons) {
                emotify.emoticons(appSettings.imgUrl, icons.icons)
            })
        })
    }, $scope.init(), $scope.initMedia(), $scope.getSubMedia(), $scope.getEmotes(), $scope.getBlacklist(), $scope.LocalLog({
        text: "Connecting to the chat, this can take up to 30 seconds.",
        action: "connecting"
    }), $scope.$on("$stateChangeStart", function(event, toState) {
        0 != toState.name.indexOf("detail") && ($timeout.cancel($scope.reconnectTimeout), $scope.reconnectTimeout = null, $timeout.cancel($scope.initChatTimeout), $scope.initChatTimeout = null, ChatManager.unbind("chatMessage", msgCallback), ChatManager.unbind("slowMessage", slowMsgCallback), ChatManager.unbind("reconnectMessage", reconnectCallback), ChatManager.unbind("open", openCallback), ChatManager.unbind("close", closeCallback), ChatManager.unbind("error", errorCallback), ChatManager.unbind("chatLog", chatLogCallback), ChatManager.partChannel($scope.name, $scope.channel), ChatManager.disconnect())
    }), $scope.$on("$destroy", function() {
        $timeout.cancel($scope.reconnectTimeout), $timeout.cancel($scope.initChatTimeout), $scope.reconnectTimeout = null, $scope.initChatTimeout = null, ChatManager.unbindall(), ChatManager.partChannel($scope.name, $scope.channel), ChatManager.disconnect()
    })
}]), String.prototype.insert = function(index, string) {
    return index > 0 ? this.substring(0, index) + string + this.substring(index, this.length) : string + this
}, app.controller("ConnectionsController", function($scope, $rootScope, $stateParams, SubscriptionInfo, $state) {
    $scope.subEnabled = !1, $scope.showConnection = "following", $scope.sort = "date_added", $scope.reverse = !0, $state.current.subtab && ($scope.showConnection = $state.current.subtab), $scope.changeSort = function(value) {
        return $scope.sort == value ? void($scope.reverse = !$scope.reverse) : ($scope.sort = value, void($scope.reverse = "date_added" == value ? !0 : !1))
    }, $scope.isSubscriber = function() {
        subParams = {
            type: "channel",
            type_id: $stateParams.user
        }, SubRes = SubscriptionInfo.get(subParams, function(subscription) {
            $scope.subscription = subscription, $scope.subEnabled = !0
        }, function() {
            $scope.subEnabled = !1
        })
    }, $scope.isSubscriber()
}), app.controller("appController", ["$scope", "$rootScope", "$http", "$state", "$stateParams", "$cookieStore", "$translate", "$timeout", "$location", "$dialog", "appSettings", "Auth", "Browser", "$window", "$detection", "Globalmessage", "$sce", function($scope, $rootScope, $http, $state, $stateParams, $cookieStore, $translate, $timeout, $location, $dialog, appSettings, Auth, Browser, $window, $detection, Globalmessage, $sce) {
    if ($scope.$on("$stateChangeStart", function(next, current) {
            $timeout(function() {
                $rootScope.animation = current.animation
            }, 0)
        }), $scope.browser = {
            name: Browser.getName().toLowerCase()
        }, $rootScope.appSettings = appSettings, window.mobilecheck = function() {
            var check = !1;
            return function(a) {
                (/(ipad|android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|playstation|xbox one|wiiu|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) && (check = !0)
            }(navigator.userAgent || navigator.vendor || window.opera), check
        }, $rootScope.mobileBrowser = window.mobilecheck, $rootScope.isAndroid = $detection.isAndroid(), $rootScope.isIos = $detection.isiOS(), $rootScope.isWinphone = $detection.isWindowsPhone(), $rootScope.isBlackberry = $detection.isBB10(), "function" == typeof amplify.store && ("undefined" == typeof amplify.store("hitbox.session") || null == amplify.store("hitbox.session"))) try {
        var htbxSession = $cookieStore.get("hitbox.session");
        htbxSession && htbxSession.authToken && ($rootScope.session = htbxSession, $rootScope.loggedIn = htbxSession, $rootScope.userStatus = {
            loggedIn: !0
        }, $rootScope.$$phase || $rootScope.$apply()), "function" == typeof amplify.store && "https" != $location.protocol() && amplify.store("hitbox.session", htbxSession)
    } catch (e) {}
    if ($rootScope.isAndroid && "function" == typeof amplify.store && !amplify.store("androidPopup")) {
        var r = window.confirm("Get the Android app to watch hitbox anywhere.");
        amplify.store("androidPopup", !0), 1 == r && window.open("http://play.google.com/store/apps/details?id=hitbox.app", "_self")
    }
    if (!$rootScope.session && ($rootScope.session = "function" == typeof amplify.store && "undefined" != typeof amplify.store("hitbox.session") ? amplify.store("hitbox.session") : !1)) {
        var login_params = {
            authToken: $rootScope.session.authToken
        };
        $rootScope.session && $rootScope.session.app && (login_params.app = $rootScope.session.app), Auth.login(login_params, function() {}, function(data) {
            switch (data) {
                case "auth_failed":
                case "user_banned":
                case "no_account":
                    break;
                default:
                    return
            }
            $cookieStore.remove("hitbox"), $cookieStore.remove("hitbox.session"), "function" == typeof amplify.store && "undefined" != typeof amplify.store("hitbox.session") && amplify.store("hitbox.session", null), $rootScope.session = "", $rootScope.loggedIn = !1, $rootScope.userStatus = {
                loggedIn: !1
            }, $state.transitionTo($state.current, {}, {
                reload: !0,
                inherit: !1,
                notify: !1
            })
        })
    }
    Globalmessage.get(function(data) {
        if (data.message) {
            $rootScope.maintenanceMessage = $sce.trustAsHtml(data.message);
            var lastMessage = "function" == typeof amplify.store && "undefined" != typeof amplify.store("hitbox.maintenance.message") ? amplify.store("hitbox.maintenance.message") : "";
            data.message == lastMessage ? $rootScope.messageShow = "function" == typeof amplify.store && "undefined" != typeof amplify.store("hitbox.maintenance.show") ? amplify.store("hitbox.maintenance.show") : !0 : ($rootScope.messageShow = !0, amplify.store("hitbox.maintenance.message", data.message))
        }
    }, function() {}), $rootScope.$watch("messageShow", function() {
        0 == $rootScope.messageShow && amplify.store("hitbox.maintenance.show", !1)
    }), "https" != $location.protocol() && ($rootScope.loggedIn = $rootScope.session = "function" == typeof amplify.store && "undefined" != typeof amplify.store("hitbox.session") ? amplify.store("hitbox.session") : !1), $scope.languages = [{
        id: "en_US",
        name: "English"
    }, {
        id: "de_DE",
        name: "Deutsch"
    }], lang = "function" == typeof amplify.store && "undefined" != typeof amplify.store("hitbox.language") ? amplify.store("hitbox.language") : [], $scope.language = $scope.languages[0], angular.forEach($scope.languages, function(value, index) {
        lang == value.id && ($scope.language = $scope.languages[index])
    }), $scope.setLang = function(langKey) {
        $translate.uses(langKey)
    }, $scope.go = function(url, new_tab) {
        new_tab ? $window.open(url, "_blank") : $location.path(url)
    }, $scope.drawerOpen = !1, $scope.toggleDrawer = function() {
        $scope.drawerOpen = !$scope.drawerOpen
    }, $rootScope.config = appSettings, $rootScope.theme = "theme-dark", "function" == typeof amplify.store && amplify.store("display.theme") && ($rootScope.theme = amplify.store("display.theme"))
}]), app.controller("LoginCtrl", ["$scope", "$state", "$dialog", "$cookieStore", "$location", "$rootScope", "Analytics", "Auth", function($scope, $state, $dialog, $cookieStore, $location, $rootScope, Analytics, Auth) {
    $scope.dialog = !1, $scope.opts = {}, $scope.opts = {
        backdrop: !0,
        keyboard: !0,
        dialogClass: "modal modal-login",
        cache: !1,
        backdropClick: !0,
        templateUrl: "partials/main/login.html",
        controller: "LoginDialogCtrl"
    }, $scope.openDialog = function() {
        Analytics.trackEvent("interface", "popupLogin");
        var d = $dialog.dialog($scope.opts);
        $scope.dialog = d, d.open().then(function() {})
    }, $scope.logout = function() {
        Auth.logout($rootScope.session, function() {}, function() {}), $cookieStore.remove("hitbox.session"), $cookieStore.remove("hitbox"), $cookieStore.put("hitbox", null), "function" == typeof amplify.store && "undefined" != amplify.store("hitbox.session") && amplify.store("hitbox.session", null), "function" == typeof amplify.store && "undefined" != amplify.store("stats.selected_stats_series") && amplify.store("stats.selected_stats_series", null), "function" == typeof amplify.store && "undefined" != amplify.store("hitbox.br") && amplify.store("hitbox.br", null), $rootScope.session = "", $rootScope.loggedIn = !1, Analytics.trackEvent("user", "logout"), $state.transitionTo("home.root", {}, {
            reload: !0,
            inherit: !1,
            notify: !0
        })
    }
}]), app.controller("FeedBackDialogCtrl", ["$scope", "$dialog", "Analytics", function($scope, $dialog, Analytics) {
    $scope.opts = {}, $scope.opts = {
        backdrop: !0,
        keyboard: !1,
        dialogClass: "modal modal-feedback",
        cache: !1,
        backdropClick: !0,
        templateUrl: "partials/main/feedback.html",
        controller: "FeedbackController"
    }, $scope.openDialog = function() {
        Analytics.trackEvent("interface", "FeedbackDialog");
        var d = $dialog.dialog($scope.opts);
        d.open().then(function() {})
    }
}]), app.controller("BanUserDialogCtrl", ["$scope", "$dialog", function($scope, $dialog) {
    $scope.opts = {}, $scope.opts = {
        backdrop: !0,
        keyboard: !1,
        dialogClass: "modal modal-feedback",
        cache: !1,
        backdropClick: !0,
        templateUrl: "partials/main/banuser.html",
        controller: "BanUserController"
    }, $scope.openDialog = function() {
        var d = $dialog.dialog($scope.opts);
        d.open().then(function() {})
    }
}]), app.controller("ReportController", ["$scope", "report", function($scope, report) {
    console.log(report), $scope.report = report
}]), app.controller("BanUserController", ["$scope", "$rootScope", "$stateParams", "$timeout", "dialog", "Banlist", "Analytics", function($scope, $rootScope, $stateParams, $timeout, dialog, Banlist, Analytics) {
    $scope.error = {}, $scope.banForm = {
        reason: "Non-Gaming Content",
        length: -1,
        addtl_reason: ""
    }, $scope.ban_reasons = ["Non-Gaming Content", "Violence and Threats", "Sexual Content", "Impersonation", "Harassment", "Racisim/Hate Speech", "Privacy (publishing or posting other people's confidential information)", "Copyright Infringement", "Unlawful Use", "Ban Evasion"], $scope.ban_lengths = [{
        key: -1,
        value: "Warning (Drop Stream/Change Stream Key/Send Email)"
    }, {
        key: 0,
        value: "Indefinate"
    }, {
        key: 24,
        value: "24 Hours"
    }, {
        key: 72,
        value: "72 Hours"
    }], $scope.validate = function() {
        return !0
    }, $scope.send = function() {
        if ($scope.error = {}, $scope.validate()) {
            var params = $.extend({
                authToken: $rootScope.session.authToken,
                type: "user",
                value: $stateParams.channel
            }, $scope.banForm);
            $scope.$parent.ingest && $scope.$parent.ingest.server.server_ip && (params.server_ip = $scope.$parent.ingest.server.server_ip), Analytics.trackEvent("team", "banChannel"), Banlist.add(params), dialog.close()
        }
    }, $scope.close = function() {
        dialog.close()
    }
}]), app.controller("FeedbackController", ["$scope", "$rootScope", "$timeout", "dialog", "Message", "vcRecaptchaService", "Analytics", function($scope, $rootScope, $timeout, dialog, Message, vcRecaptchaService, Analytics) {
    $scope.forms = {}, $scope.error = {}, $scope.message = {
        message_from: "",
        message_email: "",
        message_body: ""
    }, $scope.sent = !1, $scope.message.message_categories = [{
        category_name: "General Feedback"
    }, {
        category_name: "Bug"
    }, {
        category_name: "Suggestion"
    }, {
        category_name: "Feature Request"
    }], $scope.select = "General Feedback", $scope.validate = function() {
        for (field in $scope.forms.feedbackForm) "$" != field[0] && $scope.forms.feedbackForm[field].$pristine && $scope.forms.feedbackForm[field].$setViewValue($scope.forms.feedbackForm[field].$modelValue)
    }, $rootScope.session && ($scope.message.message_from = $rootScope.session.user_name), $scope.send = function() {
        $scope.message.message_category = $scope.select, $scope.validate(), $scope.error = {}, $scope.forms.feedbackForm.$valid && ($scope.message.captcha = vcRecaptchaService.data(), Message.send($scope.message, function() {
            Analytics.trackEvent("user", "feedbackSend"), $scope.sent = !0, $timeout(function() {
                dialog.close()
            }, 800)
        }, function() {
            vcRecaptchaService.reload()
        }))
    }, $scope.setSelection = function(selection) {
        $scope.select = selection
    }, $scope.close = function() {
        dialog.close()
    }
}]), app.controller("ContentController", ["$scope", "$rootScope", "$state", "$stateParams", "$http", "$location", "User", "Forms", "Media", function($scope, $rootScope, $state, $stateParams) {
    switch ($scope.tab = $stateParams.tab, $stateParams.tab) {
        default:
            case "partnerprogram":
            $scope.tabFile = "partials/content/partnerprogram.html",
        $scope.tab = "partnerprogram"
    }
}]), app.controller("LegalController", ["$scope", "$rootScope", "$state", "$stateParams", "$http", "$location", "User", "Forms", "Media", function($scope, $rootScope, $state, $stateParams) {
    switch ($scope.tab = $stateParams.tab, $stateParams.tab) {
        default:
            case "terms-of-use":
            $scope.tabFile = "partials/content/legal/terms-of-use.html",
        $scope.tab = "terms-of-use";
        break;
        case "terms-of-sale":
                $scope.tabFile = "partials/content/legal/terms-of-sale.html",
            $scope.tab = "terms-of-sale";
            break;
        case "privacy-policy":
                $scope.tabFile = "partials/content/legal/privacy-policy.html",
            $scope.tab = "privacy-policy";
            break;
        case "imprint":
                $scope.tabFile = "partials/content/legal/imprint.html",
            $scope.tab = "imprint"
    }
}]), app.controller("followController", ["$scope", "$rootScope", "$state", "$stateParams", "Follow", "Following", "Analytics", function($scope, $rootScope, $state, $stateParams, Follow, Following, Analytics) {
    void 0 != $scope.session && ($scope.following = !1, $scope.popover_following = !1, $rootScope.$watch("follow_id", function() {
        $rootScope.follow_type && $rootScope.follow_id && (followParams = {
            type: $rootScope.follow_type,
            follow_id: $rootScope.follow_id,
            authToken: $scope.session.authToken,
            user_name: $scope.session.user_name
        }, FollowingRes = Following.get(followParams, function(data) {
            data.following && data.following.follower_user_id && ($scope.following = !0)
        }, function() {}))
    }), $rootScope.$watch("popover_follow_id", function() {
        $rootScope.popover_follow_id && ($scope.popover_following = !1, followParams = {
            type: "user",
            follow_id: $rootScope.popover_follow_id,
            authToken: $scope.session.authToken,
            user_name: $scope.session.user_name
        }, FollowingRes = Following.get(followParams, function(data) {
            data.following && data.following.follower_user_id && ($scope.popover_following = !0)
        }, function() {}))
    }), $scope.addFollow = function(type, follow_id, popover) {
        params = {
            type: type,
            follow_id: follow_id,
            authToken: $scope.session.authToken
        }, Follow.add(params, function() {
            popover ? $scope.popover_following = !0 : $scope.following = !0, Analytics.trackEvent("user", "follow")
        })
    }, $scope.unFollow = function(type, follow_id, popover) {
        params = {
            type: type,
            follow_id: follow_id,
            authToken: $scope.session.authToken
        }, Follow["delete"](params, function() {
            popover ? $scope.popover_following = !1 : $scope.following = !1, Analytics.trackEvent("user", "unfollow")
        })
    })
}]), app.controller("topFollowController", ["$scope", "$rootScope", function($scope, $rootScope) {
    $rootScope.follow_id = 308301, $rootScope.follow_type = "user"
}]), app.controller("LoginDialogCtrl", ["$scope", "$http", "$state", "$rootScope", "$cookieStore", "dialog", "$location", "Auth", "$FB", "RestorePassword", "Analytics", "$stateParams", function($scope, $http, $state, $rootScope, $cookieStore, dialog, $location, Auth, $FB, RestorePassword, Analytics, $stateParams) {
    function updateLoginStatus(more) {
        $FB.getLoginStatus(function(res) {
            $scope.loginStatus = res, "connected" == res.status && ($scope.oauth_access_token = res.authResponse.accessToken, $scope.oauth_uid = res.authResponse.userID, $scope.oauth_provider = "facebook"), (more || angular.noop)()
        })
    }

    function updateApiMe() {
        $FB.api("/me", function(res) {
            $scope.apiMe = res, $scope.login.login = $scope.apiMe && $scope.apiMe.username ? $scope.apiMe.username.replace(/\./g, "") : "", $scope.login.user_email = $scope.apiMe.email, $rootScope.fb = $scope.apiMe, $scope.doLogin()
        })
    }
    $scope.loggedIn = !1, $scope.loginFailed = !1, $scope.loginreset = {
        email: ""
    }, $scope.restore = !1, $scope.restoreFailed = !1, $scope.login = {
        login: "",
        pass: "",
        perm: "",
        forgot: !1
    }, $scope.session = {}, $scope.resetLogin = function() {
        params = {
            user_email: $scope.loginreset.email
        }, RestoreRes = RestorePassword.create(params, function() {
            $scope.restoreFailed = !1, $scope.restore = !0
        }, function() {
            $scope.restoreFailed = !0
        })
    }, $scope.doLogin = function(type) {
        $scope.oauth_access_token ? Auth.login({
            fb_oauth_token: $scope.oauth_access_token,
            rememberme: $scope.login.perm
        }, function() {
            $scope.loginFailed = !1, $rootScope.session.app = "facebook", "function" == typeof amplify.store && amplify.store("hitbox.session", $rootScope.session), $scope.close(), $state.transitionTo($state.current, $stateParams, {
                reload: !0,
                inherit: !0,
                notify: !0
            }), Analytics.trackEvent("user", "loginFacebookOK")
        }, function() {
            $scope.loginFailed = !1, $scope.close(), "signup" == $state.current.section ? $state.go("home.root") : $state.transitionTo($state.current, $stateParams, {
                reload: !0,
                inherit: !0,
                notify: !0
            }), Analytics.trackEvent("user", "loginFacebookError")
        }) : $scope.oauth_uid ? Auth.login({
            login: $scope.login.login,
            pass: $scope.login.pass,
            oauth_uid: $scope.oauth_uid,
            oauth_provider: $scope.oauth_provider,
            rememberme: $scope.login.perm
        }, function() {
            $scope.loginFailed = $scope.loginBanned = !1, $scope.close(), "signup" == $state.current.section ? $state.go("home.root") : $state.transitionTo($state.current, $stateParams, {
                reload: !0,
                inherit: !0,
                notify: !0
            })
        }, function(err) {
            "user_banned" == err ? ($scope.loginBanned = !0, $scope.loginFailed = !1) : ($scope.loginBanned = !1, $scope.loginFailed = !0), $rootScope.loggedIn = !1, $scope.oauth_uid && $scope.apiMe && "fb" == type && ($rootScope.fb = $scope.apiMe, $scope.close(), $location.path("/signup"))
        }) : Auth.login({
            login: $scope.login.login,
            pass: $scope.login.pass,
            oauth_uid: $scope.oauth_uid,
            oauth_provider: $scope.oauth_provider,
            rememberme: $scope.login.perm
        }, function() {
            $scope.loginFailed = $scope.loginBanned = !1, $scope.close(), "signup" == $state.current.section ? $state.go("home.root") : $state.transitionTo($state.current, $stateParams, {
                reload: !0,
                inherit: !0,
                notify: !0
            }), Analytics.trackEvent("user", "loginOK")
        }, function(err) {
            Analytics.trackEvent("user", "loginError"), "user_banned" == err ? ($scope.loginBanned = !0, $scope.loginFailed = !1) : ($scope.loginBanned = !1, $scope.loginFailed = !0), $rootScope.loggedIn = !1, $scope.oauth_uid && $scope.apiMe && "fb" == type && ($rootScope.fb = $scope.apiMe, $scope.close(), $location.path("/signup"))
        })
    }, $scope.FBlogin = function() {
        $FB.login(function(res) {
            res.authResponse && updateLoginStatus(updateApiMe)
        }, {
            scope: "email"
        })
    }, $scope.close = function() {
        dialog.close()
    }
}]), app.controller("signUpController", ["$scope", "$http", "$rootScope", "$stateParams", "$cookieStore", "$state", "$translate", "$location", "User", "Forms", "$FB", "Auth", "vcRecaptchaService", "$timeout", "Analytics", function($scope, $http, $rootScope, $stateParams, $cookieStore, $state, $translate, $location, User, Forms, $FB, Auth, vcRecaptchaService, $timeout, Analytics) {
    function updateLoginStatus(more) {
        $FB.getLoginStatus(function(res) {
            $scope.loginStatus = res, "connected" == res.status ? ($scope.login.oauth_uid = res.authResponse.userID, $scope.login.oauth_provider = "facebook", $scope.login.oauth_access_token = res.authResponse.accessToken, $scope.fb_connected = !0) : $scope.fb_connected = !1, (more || angular.noop)()
        })
    }

    function updateApiMe() {
        $FB.api("/me", function(res) {
            $scope.apiMe = res, $scope.login.user_name = $scope.apiMe && $scope.apiMe.username ? $scope.apiMe.username.replace(/\./g, "") : "", $scope.login.user_email = $scope.apiMe.email, $rootScope.fb = $scope.apiMe
        })
    }
    if ($rootScope.session) return void $state.go("home.root");
    $scope.fb_connected = !1, $scope.loading = !1, $scope.login = {
        user_email: "",
        user_password: "",
        user_password2: "",
        user_name: ""
    }, $stateParams.restorekey && ($scope.restore = !0), $scope.valid = !1, $scope.error = {
        name: {},
        email: {},
        password: {}
    }, $scope.verifyEmail = function() {
        $scope.login.user_email && $scope.login.user_email.length > 0 && ($scope.error.email = Forms.verifyEmail($scope.login.user_email))
    };
    var verifyUserTimeout = null;
    $scope.verifyUser = function() {
        $scope.login.user_name && $scope.login.user_name.length > 0 && (null != verifyUserTimeout && $timeout.cancel(verifyUserTimeout), verifyUserTimeout = $timeout(function() {
            $scope.error.name = Forms.verifyUser($scope.login.user_name)
        }, 1e3))
    }, $scope.verifyPassword = function() {
        $scope.login.user_password && $scope.login.user_password.length > 0 && !$scope.fb_connected && ($scope.error.password = Forms.verifyPassword($scope.login.user_password, $scope.login.user_password2))
    }, $scope.verifyInputs = function() {
        $scope.login.user_name && $scope.login.user_email && $scope.login.user_password && $scope.login.user_password2 && ($scope.valid = !0), $scope.fb_connected && $scope.login.user_name && $scope.login.user_email && ($scope.valid = !0), $scope.verifyEmail(), $scope.verifyPassword(), ($scope.error.name.user_name || $scope.error.email.user_email || $scope.error.password.user_password || $scope.error.password.user_password2) && ($scope.valid = !1)
    }, $scope.$watch("error", function(newVal) {
        (newVal.name.user_name || newVal.email.user_email || newVal.password.user_password || newVal.password.user_password2) && ($scope.valid = !1)
    }, !0), $scope.$watch("login", function() {
        $scope.verifyInputs()
    }, !0), $scope.doSignup = function() {
        $scope.verifyInputs(), $scope.valid !== !1 && ($scope.error = {
            name: {},
            email: {},
            password: {}
        }, $scope.loading = !0, $scope.login.captcha = vcRecaptchaService.data(), User.signup($scope.login, function() {
            $scope.doLogin(), Analytics.trackEvent("user", "signupOk")
        }, function(error) {
            switch (vcRecaptchaService.reload(), $scope.loading = !1, error.data) {
                case "username_too_short":
                    $scope.error.name.user_name = $translate("TEXT_USERNAME_SHORT"), Analytics.trackEvent("user", "signupErrorTooShort");
                    break;
                case "user_already_exists":
                    $scope.error.name.user_name = $translate("TEXT_USERNAME_TAKEN"), Analytics.trackEvent("user", "signupErrorNameTaken");
                    break;
                case "invalid_username":
                    $scope.error.name.user_name = $translate("TEXT_USERNAME_INVALID"), Analytics.trackEvent("user", "signupErrorNameInvalid");
                    break;
                case "invalid_email":
                    $scope.error.email.user_email = $translate("TEXT_EMAIL_INVALID"), Analytics.trackEvent("user", "signupErrorEmailInvalid");
                    break;
                case "email_in_use":
                    $scope.error.email.user_email = $translate("TEXT_EMAIL_IN_USE"), Analytics.trackEvent("user", "signupErrorEmailTaken");
                    break;
                case "password_too_short":
                    $scope.error.password.user_password = $translate("TEXT_PASSWORD_SHORT"), Analytics.trackEvent("user", "signupErrorPwdShort")
            }
        }))
    }, $scope.doLogin = function() {
        $scope.login.oauth_access_token ? Auth.login({
            fb_oauth_token: $scope.login.oauth_access_token,
            rememberme: $scope.login.perm
        }, function() {
            $rootScope.session.app = "facebook", "function" == typeof amplify.store && amplify.store("hitbox.session", $rootScope.session), $cookieStore.put("hitbox.session", $rootScope.session), $cookieStore.put("hitbox", $rootScope.session), $scope.loginFailed = !1, "undefined" != typeof $scope.close && $scope.close(), "signup" == $state.current.section ? $state.go("home.root") : $state.transitionTo($state.current, $state.$current.params, {
                reload: !0,
                inherit: !0,
                notify: !0
            })
        }, function(err) {
            console.log(err), $scope.loginFailed = !1, "undefined" != typeof $scope.close && $scope.close(), $state.transitionTo($state.current, $state.$current.params, {
                reload: !0,
                inherit: !0,
                notify: !0
            })
        }) : Auth.login({
            login: $scope.login.user_name,
            pass: $scope.login.user_password,
            oauth_uid: $scope.login.oauth_uid,
            oauth_provider: $scope.login.oauth_provider,
            rememberme: $scope.rememberme
        }, function() {
            $scope.loginFailed = !1, "undefined" != typeof $scope.close && $scope.close(), "signup" == $state.current.section ? $state.go("home.root") : $state.transitionTo($state.current, $state.$current.params, {
                reload: !0,
                inherit: !0,
                notify: !0
            })
        }, function() {})
    }, $scope.FBlogin = function() {
        $FB.login(function(res) {
            res.authResponse && updateLoginStatus(updateApiMe)
        }, {
            scope: "email"
        })
    }
}]), app.controller("ResetPasswordController", ["$scope", "$rootScope", "$stateParams", "$cookieStore", "$state", "$translate", "$location", "User", "Forms", "$FB", "Auth", function($scope, $rootScope, $stateParams, $cookieStore, $state, $translate, $location, User, Forms) {
    $scope.user_password = "", $scope.user_password2 = "", $scope.changed = !1, $scope.valid = !1, $scope.$watch("user_password", function() {
        $scope.verifyInputs()
    }), $scope.$watch("user_password2", function() {
        $scope.verifyInputs()
    }), $scope.verifyInputs = function() {
        $scope.error = {}, $scope.user_password && $scope.user_password2 ? ($scope.verifyPassword(), $scope.valid = $scope.error.user_password || $scope.error.user_password2 ? !1 : !0) : $scope.valid = !1
    }, $scope.verifyPassword = function() {
        $scope.user_password && $scope.user_password.length > 0 && ($scope.error = Forms.verifyPassword($scope.user_password, $scope.user_password2))
    }, $scope.changePassword = function() {
        $scope.verifyInputs(), $scope.valid !== !1 && (params = {
            restoreKey: $stateParams.restorekey,
            user_password: $scope.user_password,
            user_password2: $scope.user_password2
        }, UserRes = User.update(params, function() {
            $scope.changed = !0
        }))
    }
}]), app.controller("featuredAnimation", ["$scope", "$timeout", "appSettings", function($scope, $timeout, appSettings) {
    $scope.images = [{
        src: appSettings.staticUri + "/img/live/" + $scope.media.media_name + "_large_000.jpg"
    }, {
        src: appSettings.staticUri + "/img/live/" + $scope.media.media_name + "_large_001.jpg"
    }, {
        src: appSettings.staticUri + "/img/live/" + $scope.media.media_name + "_large_002.jpg"
    }, {
        src: appSettings.staticUri + "/img/live/" + $scope.media.media_name + "_large_003.jpg"
    }, {
        src: appSettings.staticUri + "/img/live/" + $scope.media.media_name + "_large_004.jpg"
    }, {
        src: appSettings.staticUri + "/img/live/" + $scope.media.media_name + "_large_005.jpg"
    }, {
        src: appSettings.staticUri + "/img/live/" + $scope.media.media_name + "_large_006.jpg"
    }, {
        src: appSettings.staticUri + "/img/live/" + $scope.media.media_name + "_large_007.jpg"
    }, {
        src: appSettings.staticUri + "/img/live/" + $scope.media.media_name + "_large_008.jpg"
    }, {
        src: appSettings.staticUri + "/img/live/" + $scope.media.media_name + "_large_009.jpg"
    }], $scope.imgIndex = 0
}]), app.controller("gameController", ["$scope", "$stateParams", "Game", "$rootScope", function($scope, $stateParams, Game, $rootScope) {
    params = {
        game_name: $stateParams.game_name,
        seo: "true"
    }, GameRes = Game.get(params, function(game) {
        $scope.game = game.category, $rootScope.meta = {}, $rootScope.meta.title = game.category ? game.category.category_name : "", $rootScope.meta.url = location.href, $rootScope.meta.image = game.category ? game.category.category_logo_large : "", $rootScope.meta.description = "Live streams and recordings about " + (game.category ? game.category.category_name : "all games")
    })
}]), app.controller("ScrollCtrl", function($scope, $location, anchorSmoothScroll) {
    $scope.gotoElement = function(eID) {
        anchorSmoothScroll.scrollTo(eID)
    }
}), app.controller("CouponController", ["$scope", "Coupon", "$rootScope", "User", function($scope, Coupon, $rootScope) {
    $scope.coupon = {
        code: ""
    }, $scope.sub_media_name = !1, $scope.coupon_error = !1, $scope.useCode = function() {
        var params = {
            authToken: $rootScope.session.authToken,
            user_name: $rootScope.session.user_name,
            code: $scope.coupon.code
        };
        Coupon.post(params, function(success) {
            $scope.sub_media_name = success.media_user_name
        }, function(error) {
            $scope.coupon_error = !0, console.log(error)
        })
    }
}]), app.controller("DashboardController", ["$scope", "$state", "$timeout", "$rootScope", "$stateParams", "$dialog", "Media", "Games", "Commercials", "MediaStatus", "uploadYT", "MediaKey", "appSettings", "FacebookPages", "Notifications", "$FB", "TwitterAccount", "TwitterPost", "SubscriptionInfo", "SubscriberEmotes", "SubscriberBadges", "FacebookPost", "ChatManager", "Blacklist", "DisplayService", "MediaInfo", "$interval", "CountryService", "GeoIp", "$stateParams", "MediaStore", "$window", function($scope, $state, $timeout, $rootScope, $stateParams, $dialog, Media, Games, Commercials, MediaStatus, uploadYT, MediaKey, appSettings, FacebookPages, Notifications, $FB, TwitterAccount, TwitterPost, SubscriptionInfo, SubscriberEmotes, SubscriberBadges, FacebookPost, ChatManager, Blacklist, DisplayService, MediaInfo, $interval, CountryService, GeoIp, $stateParams, MediaStore, $window) {
    $rootScope.theme = "theme-dark", $scope.chatOptions = DisplayService.chatOptions, $scope.hostMode = !1, $scope.raffleRunning = !1, $scope.pollRunning = !1, $scope.username = $stateParams.user, $window.document.title = $scope.username + "'s Dashboard || hitbox - Live! it up.", $scope.dashTab = "settings", stop = null, $scope.streamDetail = !1, $scope.ads = 3, $scope.counter = 90, $scope.ready = !1, $scope.actionId = {}, $scope.limit = 10, $scope.session = $rootScope.session, $scope.googleLoggedIn = !1, $scope.loaded = !1, $rootScope.hasMedia = !0, $rootScope.editor = {}, $scope.hadMedia = !1, $scope.agoCounter = 0, $scope.save = {
        save_status: "saved"
    };
    var authToken = "";
    $scope.session && $scope.session.authToken && (authToken = $scope.session.authToken), $rootScope.session && $rootScope.partner && ($scope.isPartner = !0), $scope.params = {
        media_name: $stateParams.user,
        media_type: "live",
        authToken: authToken,
        showHidden: !0,
        nocache: !0,
        filter: "newfirst",
        liveonly: !1
    }, $scope.share_link = "http://hitbox.tv/" + $stateParams.user, $scope.previewCollapse = !0, $scope.configCollapse = !0, $scope.socialCollapse = !0, $scope.motdCollapse = !0, $scope.pollCollapse = !1, $scope.raffleCollapse = !0, $scope.videoCollapse = !0, $scope.feedbackTimeout = null, $scope.shoutout = {
        facebook: {
            enabled: !1,
            active: !1
        },
        twitter: {
            enabled: !1,
            active: !1
        },
        message: "",
        loading: 0,
        autopost: !1
    }, $scope.displaySavedFeedback = function() {
        null === $scope.feedbackTimeout && ($scope.save.save_status = "saved")
    }, $scope.getMedia = function() {
        MediaRes = Media.get($scope.params, function(media) {
            angular.forEach(media.livestream, function(val, key) {
                media.livestream[key].media_relay = media.livestream[key].media_relay ? JSON.parse(media.livestream[key].media_relay) : {
                    justin: {
                        url: "",
                        key: "",
                        enabled: !1
                    },
                    ustream: {
                        url: "",
                        key: "",
                        enabled: !1
                    }
                }
            }), $scope.media = media, $scope.setShoutout(), $scope.getMediaInfo(), $scope.mediaCount = 0, media.livestream && ($scope.mediaCount = $scope.mediaCount + media.livestream.length), subParams = {
                type: "channel",
                type_id: $scope.media.livestream[0].media_user_id
            }, SubRes = SubscriptionInfo.get(subParams, function() {
                $scope.subEnabled = !0, $scope.chatOptions.subEnabled = !0, $scope.getSubMedia()
            }, function() {}), $scope.hadMedia = !0, $scope.countries = [], $scope.select2Country = {
                placeholder: "",
                allowClear: !1,
                multiple: !0,
                maximumSelectionSize: 2,
                data: function() {
                    return {
                        results: $scope.countries
                    }
                },
                initSelection: function(element, callback) {
                    for (var countries = $scope.media.livestream[0].media_countries, result = [], i = 0; i < countries.length; i++) result.push({
                        id: countries[i],
                        text: CountryService.getCountryName(countries[i])
                    });
                    callback(result)
                }
            };
            var promise = CountryService.getCountries();
            promise.then(function(countries) {
                $scope.countries = countries
            }, function() {}, function() {})
        }, function() {
            $scope.ready = !0, $scope.media = {}, $rootScope.hasMedia = !1
        })
    }, $scope.getMediaInfo = function() {
        if (1 != $scope.media.livestream[0].media_transcoding) return void($scope.mediaInfo = {
            quality: 0
        });
        var mi_params = {
            media_id: $scope.media.livestream[0].media_id
        };
        MediaInfo.get(mi_params, function(info) {
            var mediainfo = info.mediainfo;
            switch ($scope.mediaInfo = {
                quality: 0
            }, mediainfo.height >= 720 && mediainfo.height <= 1080 ? $scope.mediaInfo.height = {
                value: mediainfo.height,
                quality: 0
            } : mediainfo.height >= 480 && mediainfo.height < 720 ? ($scope.mediaInfo.height = {
                value: mediainfo.height,
                quality: 1
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 1)) : ($scope.mediaInfo.height = {
                value: mediainfo.height,
                quality: 2
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 2)), "h264" == mediainfo.vcodec ? $scope.mediaInfo.vcodec = {
                value: mediainfo.vcodec,
                quality: 0
            } : ($scope.mediaInfo.vcodec = {
                value: mediainfo.vcodec,
                quality: 2
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 2)), "aac" == mediainfo.acodec ? $scope.mediaInfo.acodec = {
                value: mediainfo.acodec,
                quality: 0
            } : "mp3" == mediainfo.acodec ? ($scope.mediaInfo.acodec = {
                value: mediainfo.acodec,
                quality: 1
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 1)) : ($scope.mediaInfo.acodec = {
                value: mediainfo.acodec,
                quality: 2
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 2)), mediainfo.vbitrate = Math.floor(mediainfo.vbitrate / 1024), mediainfo.vbitrate >= 2e3 && mediainfo.vbitrate <= 3500 ? $scope.mediaInfo.vbitrate = {
                value: mediainfo.vbitrate,
                quality: 0
            } : mediainfo.vbitrate >= 1e3 && mediainfo.vbitrate < 2e3 || mediainfo.vbitrate > 3500 ? ($scope.mediaInfo.vbitrate = {
                value: mediainfo.vbitrate,
                quality: 1
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 1)) : 0 == mediainfo.vbitrate ? ($scope.mediaInfo.vbitrate = {
                value: "Unknown",
                quality: 1
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 1)) : ($scope.mediaInfo.vbitrate = {
                value: mediainfo.vbitrate,
                quality: 2
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 2)), mediainfo.abitrate = Math.floor(mediainfo.abitrate / 1024), mediainfo.abitrate >= 96 && mediainfo.abitrate <= 320 ? $scope.mediaInfo.abitrate = {
                value: mediainfo.abitrate,
                quality: 0
            } : mediainfo.abitrate >= 64 && mediainfo.abitrate < 96 || mediainfo.abitrate > 320 ? ($scope.mediaInfo.abitrate = {
                value: mediainfo.abitrate,
                quality: 1
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 1)) : 0 == mediainfo.abitrate ? ($scope.mediaInfo.abitrate = {
                value: "Unknown",
                quality: 1
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 1)) : ($scope.mediaInfo.abitrate = {
                value: mediainfo.abitrate,
                quality: 2
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 2)), mediainfo.fps >= 25 && mediainfo.fps <= 30 ? $scope.mediaInfo.fps = {
                value: mediainfo.fps,
                quality: 0
            } : mediainfo.fps > 30 && mediainfo.fps <= 60 ? ($scope.mediaInfo.fps = {
                value: mediainfo.fps,
                quality: 1
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 1)) : ($scope.mediaInfo.fps = {
                value: mediainfo.fps,
                quality: 2
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 2)), "High" == mediainfo.profile ? $scope.mediaInfo.profile = {
                value: mediainfo.profile,
                quality: 0
            } : "Main" == mediainfo.profile ? ($scope.mediaInfo.profile = {
                value: mediainfo.profile,
                quality: 1
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 1)) : ($scope.mediaInfo.profile = {
                value: mediainfo.profile,
                quality: 2
            }, $scope.mediaInfo.quality = Math.max($scope.mediaInfo.quality, 2)), $scope.mediaInfo.width = {
                value: mediainfo.width,
                quality: 0
            }, $scope.mediaInfo.last_updated = moment(mediainfo.log_date).format("HH:MM - DD.MM.YY"), $scope.mediaInfo.quality > 0 && ($scope.streamDetail = !0), $scope.mediaInfo.quality) {
                case 0:
                    $scope.mediaInfo.quality_text = "Good";
                    break;
                case 1:
                    $scope.mediaInfo.quality_text = "Ok";
                    break;
                case 2:
                    $scope.mediaInfo.quality_text = "Bad"
            }
            $scope.startMediaInfoTimer()
        }, function() {})
    }, $scope.mediaInfoTimer = !1, $scope.getSubMedia = function() {
        var submediaparams = {
            channel: $stateParams.user
        };
        Emotes = SubscriberEmotes.get(submediaparams, function(emotes) {
            $scope.subEmotes = emotes.icons
        }, function() {}), Badges = SubscriberBadges.get(submediaparams, function(badges) {
            $scope.subBadges = badges.badges
        }, function() {})
    }, $scope.setShoutout = function() {
        $scope.shoutout.message = $scope.media.livestream[0].media_display_name + " - " + $scope.media.livestream[0].media_status + " http://hitbox.tv/" + $stateParams.user + " #hitboxlive"
    }, $scope.delayMedia = function() {
        stop = $timeout(function() {
            $scope.getMedia()
        }, 800)
    }, $scope.delayMedia(), $scope.titleEditTimeout = null, $scope.initUpdate = function() {
        null === $scope.titleEditTimeout ? ($scope.save.save_status = "none", $scope.titleEditTimeout = $timeout(function() {
            $timeout.cancel($scope.titleEditTimeout), $scope.titleEditTimeout = null, $scope.updateDashboard()
        }, 1e3)) : ($timeout.cancel($scope.titleEditTimeout), $scope.save.save_status = "none", $scope.titleEditTimeout = $timeout(function() {
            $timeout.cancel($scope.titleEditTimeout), $scope.titleEditTimeout = null, $scope.updateDashboard()
        }, 1e3))
    }, $scope.updateDashboard = function() {
        "saving" != $scope.save.save_status && ($scope.save.save_status = "saving", MediaRes.livestream = $scope.media.livestream, $scope.update())
    }, $scope.update = function() {
        MediaRes.$update($scope.params, function(success) {
            console.log(success), $scope.save.save_status = "saved"
        }, function(error) {
            $scope.save.save_status = "error", console.log(error)
        })
    }, comParams = {
        channel: $stateParams.user,
        count: $scope.ads,
        authToken: authToken
    }, comParamsGET = {
        channel: $stateParams.user,
        authToken: authToken
    }, Commercials.last(comParamsGET, function(latest) {
        $scope.agoCounter = latest.seconds_ago || 0, $scope.agoCounter > 7200 && ($scope.agoCounter = 0), latest.timeout > 0 ? ($scope.adRunning = !0, $scope.startTimer(), $scope.counter = latest.timeout) : $scope.adRunning = !1, latest.ad_count || ($scope.firstBreak = !0), $scope.agoCounter > 0 && $scope.startAgoTimer()
    }), $scope.$watch("ads", function(newValue) {
        newValue && ($scope.counter = 30 * $scope.ads, comParams.count = $scope.ads)
    }), $scope.counter = 0;
    var mytimeout = null,
        myagotimeout = null;
    $scope.onTimeout = function() {
        $scope.counter--, mytimeout = $timeout($scope.onTimeout, 1e3), $scope.counter <= 0 && ($scope.counter = 30 * $scope.ads, $scope.adRunning = !1, $scope.agoCounter = 0, $timeout.cancel(mytimeout), $timeout.cancel(myagotimeout), $scope.startAgoTimer())
    }, $scope.onAgoTimeout = function() {
        $scope.agoCounter++, $scope.agoCounterFormated = moment().subtract("seconds", $scope.agoCounter).fromNow(!0), myagotimeout = $timeout($scope.onAgoTimeout, 1e3)
    }, $scope.startAgoTimer = function() {
        $timeout($scope.onAgoTimeout, 1e3)
    }, $scope.startTimer = function() {
        $timeout($scope.onTimeout, 1e3)
    }, $scope.watchMedia = function() {
        $scope.mediaWatcher = $scope.$watch("media", function(newValue, oldValue) {
            newValue && newValue.livestream && newValue.livestream.length && $scope.media.livestream[0].media_id && newValue != oldValue && ($scope.mediaWatcher(), null == newValue.livestream[0].media_hidden && (newValue.livestream[0].media_hidden = !1), 1 == newValue.livestream[0].media_hidden && (newValue.livestream[0].media_hidden = !0), statusParams = {
                media_id: $scope.media.livestream[0].media_id
            }, $scope.onMediaPoller(), $scope.startMediaPoller(), $scope.watchMedia())
        }, !0)
    }, $scope.watchMedia(), $scope.onMediaPoller = function() {
        MediaStatus.get(statusParams, function(status) {
            $scope.mediastatus = status
        }, function(error) {
            console.log(error)
        })
    }, $scope.mediaPoller = void 0, $scope.startMediaPoller = function() {
        angular.isDefined($scope.mediaPoller) && $interval.cancel($scope.mediaPoller), $scope.mediaPoller = $interval($scope.onMediaPoller, 3e4)
    }, $scope.stopMediaPoller = function() {
        angular.isDefined($scope.mediaPoller) && ($interval.cancel($scope.mediaPoller), $scope.mediaPoller = void 0)
    }, $scope.initBreak = !1, $scope.commercialBreak = function() {
        $scope.startTimer(), $scope.agoCounter = 0, $scope.firstBreak = !1, $scope.initBreak = !0, Commercials.trigger(comParams, function() {
            $scope.startAgoTimer()
        }, function() {})
    }, comBreak = function(data) {
        data = JSON.parse(data), $scope.initBreak ? $scope.initBreak = !1 : ($scope.ads = data.params.count, $scope.counter = 30 * data.params.count, $scope.adRunning = !0, $scope.startTimer(), $scope.agoCounter = 0, $scope.firstBreak = !1)
    }, ChatManager.bind("comBreak", comBreak), $scope.$on("$stateChangeStart", function() {}), $scope.$on("$destroy", function() {
        ChatManager.unbind("comBreak", combreak)
    }), $scope.decAds = function() {
        $scope.ads > 1 && $scope.ads--
    }, $scope.incAds = function() {
        $scope.ads < 10 && $scope.ads++
    }, $scope.gameFormatResult = function(item) {
        return item.category_name
    }, $scope.gameFormatSelection = function(item) {
        return item.category_name
    }, $scope.$watch("media.livestream[0].media_category_id", function(newVal) {
        newVal && isNaN(newVal) && newVal.category_id && ($scope.media.livestream[0].media_category_id = newVal.category_id)
    }), $scope.$watch("mediastatus.media_is_live", function(newVal) {
        newVal && 1 == newVal ? $scope.getMediaInfo() : 0 == newVal && ($timeout.cancel($scope.mediaInfoTimer), $scope.mediaInfoTimer = !1)
    }), $scope.startMediaInfoTimer = function() {
        $scope.mediaInfoTimer || ($scope.mediaInfoTimer = $timeout($scope.getMediaInfo, 6e4))
    }, $scope.setMediaRecording = function() {
        1 == $scope.media.livestream[0].media_recording ? $scope.mediastatus && 1 != $scope.mediastatus.media_is_live && ($scope.media.livestream[0].media_recording = 0) : $scope.media.livestream[0].media_recording = 1
    }, $scope.select2Options = {
        placeholder: "Game or Category",
        allowClear: !1,
        minimumInputLength: 2,
        id: function(item) {
            return item.category_id
        },
        ajax: {
            url: appSettings.apiUri + "/games",
            dataType: "json",
            cache: !0,
            quietMillis: 400,
            data: function(term) {
                return {
                    q: term,
                    limit: 100
                }
            },
            results: function(data) {
                return {
                    results: data.categories
                }
            }
        },
        initSelection: function(element, callback) {
            var id = $(element).val();
            "" === id || isNaN(id) || $.ajax(appSettings.apiUri + "/game/" + id, {
                cache: !0,
                dataType: "json"
            }).done(function(data) {
                callback(data.category)
            })
        },
        formatResult: $scope.gameFormatResult,
        formatSelection: $scope.gameFormatSelection,
        escapeMarkup: function(m) {
            return m
        }
    }, $scope.$on("$destroy", function() {
        $timeout.cancel($scope.feedbackTimeout), $timeout.cancel($scope.titleEditTimeout), $timeout.cancel($scope.onTimeout), $timeout.cancel(stop), $scope.stopMediaPoller()
    }), $scope.getSocialAccounts = function() {
        var fb_params = {
            user_name: $stateParams.user,
            authToken: authToken
        };
        FacebookPages.get(fb_params, function(success) {
            success.pages && success.pages.length > 0 && ($scope.shoutout.facebook.enabled = !0, $scope.shoutout.facebook.active = !0)
        }, function() {}), TwitterAccount.get(fb_params, function() {
            $scope.shoutout.twitter.enabled = !0, $scope.shoutout.twitter.active = !0
        }, function() {})
    }, $scope.session && $scope.getSocialAccounts(), $scope.shoutOut = function() {
        $scope.shoutout.loading = 0;
        var msg = $scope.shoutout.message;
        if ($scope.shoutout.facebook.enabled && $scope.shoutout.facebook.active) {
            $scope.shoutout.loading++;
            var fb_params = {
                user_name: $scope.session.user_name,
                authToken: authToken,
                message: msg
            };
            FacebookPost.post(fb_params, function(success) {
                $scope.shoutout.loading--, console.log(success)
            }, function() {
                $scope.shoutout.loading--
            })
        }
        if ($scope.shoutout.twitter.enabled && $scope.shoutout.twitter.active) {
            $scope.shoutout.loading++;
            var twitter_params = {
                user_name: $scope.session.user_name,
                authToken: authToken,
                message: msg
            };
            TwitterPost.post(twitter_params, function() {
                $scope.shoutout.loading--
            }, function() {
                $scope.shoutout.loading--
            })
        }
    }, $scope.notLoggedInError = function() {
        var title = "You have been logged out.",
            msg = "Someone else might have logged in with this account.",
            btns = [{
                result: !0,
                label: "Please Login Again",
                cssClass: "btn-blue"
            }];
        $dialog.messageBox(title, msg, btns).open().then(function(result) {
            result && $scope.openLoginDialog()
        })
    }, $scope.openLoginDialog = function() {
        $scope.opts = {}, $scope.opts = {
            backdrop: !0,
            keyboard: !0,
            dialogClass: "modal modal-login",
            cache: !1,
            backdropClick: !0,
            templateUrl: "partials/main/login.html",
            controller: "LoginDialogCtrl"
        }, $scope.openDialog = function() {
            var d = $dialog.dialog($scope.opts);
            d.open().then(function() {})
        }, $scope.openDialog()
    };
    $scope.$on("$stateChangeStart", function() {
        $scope.stopMediaPoller()
    }), $scope.$on("$destroy", function() {
        $scope.stopMediaPoller()
    })
}]), app.controller("DetailController", ["$scope", "$rootScope", "$window", "$location", "$state", "$stateParams", "$http", "$timeout", "Media", "MediaStatus", "Report", "appSettings", "UserImages", "Auth", "Teams", "vcRecaptchaService", "SubscriptionInfo", "Payment", "Subscribed", "SubscriberEmotes", "SubscriberBadges", "Ingests", "Banlist", "ChatManager", "$sce", "DisplayService", "$dialog", "MediaViews", "GeoIp", "$cookieStore", "FollowerList", "FollowingList", "Analytics", "$interval", "PlaybackService", "MediaStore", function($scope, $rootScope, $window, $location, $state, $stateParams, $http, $timeout, Media, MediaStatus, Report, appSettings, UserImages, Auth, Teams, vcRecaptchaService, SubscriptionInfo, Payment, Subscribed, SubscriberEmotes, SubscriberBadges, Ingests, Banlist, ChatManager, $sce, DisplayService, $dialog, MediaViews, GeoIp, $cookieStore, FollowerList, FollowingList, Analytics, $interval, PlaybackService) {
    if ($scope.config = appSettings, $scope.chatOptions = DisplayService.chatOptions, $scope.channelOptions = DisplayService.channelOptions, $scope.deviceSize = DisplayService.deviceSize, $scope.playerOptions = DisplayService.playerState, $scope.hostMode = !1, "video" != $state.current.section && "embedvideo" != $state.current.section && PlaybackService.setMediaId($stateParams.channel), $scope.chatOptions.chatState = !1, $scope.section = $state.current.section, window.location != window.parent.location) {
        var url = window.location != window.parent.location ? document.referrer : document.location;
        Analytics.trackEvent("embed", "video", url)
    }
    $scope.followerList = [], $scope.videoCount = 0, $scope.subEnabled = !1, $scope.displayState = "loading", $scope.save = {
        save_status: "saved"
    }, $scope.errors = {}, $scope.description_upload_url = "", $scope.heights = {
        contentHeight: 0
    }, $scope.userContent = "", $scope.$watch("userContent", function(newVal, oldVal) {
        if (newVal && newVal != oldVal) {
            if ("chat" == newVal && $scope.isMobile && ($scope.chatOptions.chatState = !0), "chat" != newVal && $scope.isMobile && ($scope.chatOptions.chatState = !1), "video" == $state.current.section) var newSection = "video";
            else var newSection = "detail";
            var newState = newSection + "." + newVal;
            $state.go(newState)
        }
    }), $scope.userContent = $state.current.userContent, $scope.isMobile = !1, $scope.deviceSize.update(), $scope.$on("isMobile", function() {
        "channel" == $state.current.section && ($scope.isMobile = !0, $scope.chatOptions.chatTab = "chat", $scope.userContent = "chat", $state.go("detail.chat"))
    }), $scope.$on("isTablet", function() {
        "channel" == $state.current.section && ($scope.isMobile = !1, "chat" == $scope.userContent && ($scope.userContent = "profile"))
    }), $scope.$on("isDesktop", function() {
        "channel" == $state.current.section && ($scope.isMobile = !1, "chat" == $scope.userContent && ($scope.userContent = "profile"))
    }), $scope.followerOffset = 0, $scope.followerLimit = 100, $scope.followingOffset = 0, $scope.followingLimit = 100, $scope.followers_total = 0, $scope.following_total = 0, $scope.followerList = [], $scope.followingList = [], $scope.dropClient = function() {
        confirm("Are you sure you wish to drop this client?") && $http.get(appSettings.apiUri + "/drop/client/" + $scope.ingest.name, {
            params: {
                app: "push",
                server_ip: $scope.ingest.server.server_ip,
                authToken: $rootScope.session.authToken
            }
        }).success(function() {
            alert("Sucessfully dropped client.")
        }).error(function() {
            alert("There was a problem dropping the client.")
        })
    }, $scope.restartTranscodings = function() {
        confirm("Are you sure you want to restart transcodings?") && $http.get(appSettings.apiUri + "/transdrop/" + $scope.media.media_id, {
            params: {
                authToken: $rootScope.session.authToken
            }
        }).success(function() {
            alert("Sucessfully restarted transcodings.")
        }).error(function() {
            alert("There was a problem restarting the transcodings.")
        })
    }, $scope.ingest = !1;
    var updateIngests = function() {
        Ingests.get({
            authToken: $rootScope.session.authToken
        }, function(res) {
            angular.forEach(res, function(server) {
                angular.forEach(server.data.server.application[0].live.stream, function(stream) {
                    stream.name && $stateParams.channel && stream.name.toLowerCase() == $stateParams.channel.toLowerCase() && (stream.server = server, angular.isArray(stream.client) && (stream.client = stream.client.pop()), $scope.ingest = stream)
                })
            })
        })
    };
    "function" == typeof amplify.store && "undefined" != typeof amplify.store("geo") ? ($rootScope.geo = amplify.store("geo"), $scope.countryCode = $rootScope.geo.country_code) : GeoIp.get({}, function(geo) {
        $rootScope.geo = geo, $scope.countryCode = geo.country_code, "function" == typeof amplify.store && amplify.store("geo", geo)
    }, function() {}), access = routingConfig.accessLevels, $scope.fbShare = function() {
        Analytics.trackEvent("user", "facebookShare"), $window.open("https://www.facebook.com/sharer/sharer.php?u=" + $location.absUrl(), "", "width=626,height=436")
    }, $scope.tweet = function() {
        if (console.log($scope.media.media_status), console.log(encodeURI($scope.media.media_status)), Analytics.trackEvent("user", "twitterShare"), 1 == $scope.media_type_id) {
            var twitter_url = "https://twitter.com/share?url=" + $location.absUrl() + "&text=" + $scope.media.media_display_name + " - " + encodeURIComponent($scope.media.media_status) + "&hashtags=hitboxlive&via=hitboxlive";
            console.log(twitter_url), $window.open(twitter_url, "", "width=626,height=436")
        } else {
            var twitter_url = "https://twitter.com/share?url=" + $location.absUrl() + "&text=" + $scope.media.media_user_name + " - " + encodeURIComponent($scope.media.media_status) + "&hashtags=hitboxlive&via=hitboxlive";
            console.log(twitter_url), $window.open(twitter_url, "", "width=626,height=436")
        }
    }, $scope.reddit = function() {
        Analytics.trackEvent("user", "redditShare"), $window.open("http://www.reddit.com/submit?url=" + $location.absUrl() + "&title=" + $scope.media.media_display_name + " - " + encodeURI($scope.media.media_status), "", "width=800,height=600")
    }, $scope.showChat = function() {
        $rootScope.chatState = !0
    }, ("embedplayer" == $state.current.section || "embedvideo" == $state.current.section) && ($rootScope.detached = !0), $scope.updateViewers = function(viewers) {
        $scope.media.media_views = viewers
    }, authToken = {}, $rootScope.loggedIn && (authToken = $scope.session.authToken), $scope.trendingList = 0, $scope.medialist = [{
        site: 1,
        limit: "auto"
    }, {
        site: 2,
        limit: "auto"
    }, {
        site: 3,
        limit: "auto"
    }], $rootScope.follow_id = !1, $scope.mediaLifeTimeTimer = void 0, $scope.startMediaLifeTimeTimer = function() {
        angular.isDefined($scope.mediaLifeTimeTimer) || ($scope.mediaLifeTimeTimer = $interval($scope.updateMediaLifeTime, 6e4))
    }, $scope.stopMediaLifeTimeTimer = function() {
        angular.isDefined($scope.mediaLifeTimeTimer) && ($interval.cancel($scope.mediaLifeTimeTimer), $scope.mediaLifeTimeTimer = void 0)
    }, $scope.updateMediaLifeTime = function() {
        var now = moment.utc(),
            live = moment.utc($scope.media.media_live_since),
            diff = now.diff(live),
            duration = moment.duration(diff);
        $scope.media.media_live_time = Math.floor(duration.asHours()) + moment.utc(diff).format(":mm"), $scope.startMediaLifeTimeTimer()
    }, $scope.mediaPoller = null, $scope.getMedia = function(media_name) {
        mediaParams = {
            media_name: media_name ? media_name : $stateParams.channel,
            media_type: "live",
            showHidden: !0,
            authToken: authToken,
            liveonly: !1
        }, $scope.error = {}, MediaRes = Media.get(mediaParams, function(media) {
            if (!media || !media.livestream || !media.livestream.length) return void $scope.$parent.go("/404");
            if (null != media.livestream[0].user_banned && (!$rootScope.session || "1" != $rootScope.session.superadmin)) return void $scope.$parent.go("/" + media.livestream[0].media_user_name + "/banned");
            ("video" == $state.current.section || "embedvideo" == $state.current.section) && (media.livestream[0].media_is_live = 1), media.livestream[0].media_hosted_id && (media.livestream[0].media_is_live = media.livestream[0].media_hosted_media.livestream[0].media_is_live, $scope.hostMode = !0), $scope.media = media.livestream[0], $scope.media.media_views = ("" + $scope.media.media_views).replace(/\B(?=(\d{3})+(?!\d))/g, ","), (null == $scope.media.channel.twitter_account || 0 == $scope.media.channel.twitter_enabled || null == $scope.media.channel.twitter_enabled) && ($scope.media.channel.twitter_account = "hitboxlive");
            var now = moment().utc(),
                live = moment.utc($scope.media.media_live_since),
                diff = now.diff(live),
                duration = moment.duration(diff);
            $scope.media.media_live_time = Math.floor(duration.asHours()) + moment.utc(diff).format(":mm"), $scope.startMediaLifeTimeTimer();
            var hash = "";
            $scope.media.media_rec_session && (hash = "?" + $scope.media.media_rec_session.toString()), $scope.fbLikeUrl = $sce.trustAsResourceUrl("https://www.facebook.com/plugins/like.php?href=http://hitbox.tv/" + $stateParams.channel + hash + "&width=0&height=65&colorscheme=light&layout=button&action=&show_faces=false&send=false"), MediaViews.get({
                channel: $scope.media.media_name
            }, function(views) {
                $scope.media.total_live_views = !isNaN(parseFloat(views.total_live_views)) && isFinite(views.total_live_views) ? ("" + views.total_live_views).replace(/\B(?=(\d{3})+(?!\d))/g, ",") : 0
            }, function() {}), $scope.media.team_name && ($rootScope.team_name = $scope.media.team_name), $scope.media.media_description_md && ($scope.profileMD = $scope.media.media_description_md, $scope.profileMD = $scope.profileMD.replace(/<a /g, '<a target="_blank" '), $scope.profileMD = $sce.trustAsHtml($scope.profileMD)), $scope.session && ($scope.description_upload_url = "/api/upload/description/" + $scope.media.media_user_name + "/" + $scope.session.authToken), $scope.media.media_type = "live", $rootScope.follow_id = $scope.media.media_user_id, $rootScope.follow_type = "user", $rootScope.chatState = $scope.media.media_chat_enabled, $scope.linkUrl = "http://www.hitbox.tv/" + $scope.media.media_name, "video" == $state.current.section || "embedvideo" == $state.current.section || ($scope.embedPlayer = '<iframe width="640" height="360" src="http://www.hitbox.tv/embed/' + $scope.media.media_name + '" frameborder="0" allowfullscreen></iframe>', $scope.embedChat = '<iframe width="340" height="700" src="http://www.hitbox.tv/embedchat/' + $scope.media.media_name + '" frameborder="0" allowfullscreen></iframe>'), $scope.channelBg = function() {
                return "embedplayer" != $state.current.section && "embedvideo" != $state.current.section ? null != $scope.media.media_bg_image ? {
                    "background-image": "url(" + appSettings.imgUrl + $scope.media.media_bg_image + ")"
                } : {
                    "background-image": "url(" + appSettings.imgUrl + appSettings.fallbackImages.userCover + ")"
                } : void 0
            }, $scope.userImg = function() {
                return {
                    "background-image": "url(" + appSettings.imgUrl + $scope.media.channel.user_logo + ")"
                }
            }, $scope.setMeta($scope.media), $rootScope.session && Auth.authorize({
                accessLevel: access.admin,
                resource: "account",
                resource_id: $scope.media.media_user_name
            }, function(auth) {
                userParams = {
                    user_name: $scope.media.media_user_name,
                    token: authToken
                }, getUserImages = function() {
                    UserImages.get(userParams, function(images) {
                        $scope.userImages = images
                    }, function() {
                        $scope.userImages = []
                    })
                }, getUserImages(), auth && ($scope.isAdmin = !0)
            }, function() {
                $scope.isAdmin = !1
            }), subParams = {
                type: "channel",
                type_id: $scope.media.media_user_id
            }, SubRes = SubscriptionInfo.get(subParams, function(subscription) {
                $scope.subscription = subscription, $scope.subEnabled = !0, $scope.chatOptions.subEnabled = !0, ("embedplayer" == $state.current.section || "embedvideo" == $state.current.section) && $scope.getSubMedia();
                var restHost = $location.host();
                $rootScope.session ? $scope.subscribeUrl = "https://" + restHost + "/" + $scope.media.media_user_name + "/subscribe/" + $rootScope.session.user_name : ($scope.subscribeUrl = "https://" + restHost + "/" + $scope.media.media_user_name + "/subscribe/", $cookieStore.put("hitbox.session", null)), Subscribed.get({
                    authToken: authToken,
                    channel: $scope.media.media_user_name
                }, function(access) {
                    1 == access.isSubscriber && ($scope.subscribed = !0), 1 == access.isCanceled && ($scope.subscribedCanceled = !0), $scope.displayState = "data"
                }, function() {
                    $scope.displayState = "data"
                })
            }, function() {
                $scope.chatOptions.subEnabled = !1
            })
        }, function() {
            Analytics.trackEvent("error500", "MediaGet", JSON.stringify(mediaParams))
        })
    }, "video" == $state.current.section || "embedvideo" == $state.current.section ? $http.get(appSettings.apiUri + "/media/video/" + $stateParams.id + "?showHidden=true", {
        cache: !1
    }).success(function(data) {
        data.video && ($scope.media = data.video[0], PlaybackService.setMediaId($scope.media.media_id, "video"), $scope.media.media_description_md && ($scope.profileMD = $scope.media.media_description_md, $scope.profileMD = $scope.profileMD.replace(/<a /g, '<a target="_blank" '), $scope.profileMD = $sce.trustAsHtml($scope.profileMD)), $scope.media.media_type = "video", $scope.embedPlayer = '<iframe width="640" height="360" src="http://www.hitbox.tv/#!/embedvideo/' + $scope.media.media_id + '" frameborder="0" allowfullscreen></iframe>', $scope.embedChat = '<iframe width="340" height="700" src="http://www.hitbox.tv/#!/embedchat/' + $scope.media.media_id + '" frameborder="0" allowfullscreen></iframe>', $rootScope.follow_id = $scope.media.media_user_id, $rootScope.follow_type = "user", $scope.media.team_name && ($rootScope.team_name = $scope.media.team_name), $scope.setMeta($scope.media), "embedvideo" != $state.current.section && $scope.getMedia($scope.media.channel.user_name))
    }) : "recording" == $state.current.section || ($scope.getMedia(), $scope.mediaPoller && $timeout.cancel($scope.mediaPoller), isLive = 0, $scope.onMediaPoller = function() {
        return $scope.media && 1 == $scope.media.media_is_live ? void $timeout.cancel($scope.mediaPoller) : $scope.media ? (statusParams = {
            media_id: $scope.media.media_id
        }, PlaybackService.setMediaId(null), void MediaStatus.get(statusParams, function(status) {
            return 1 == status.media_is_live && (isLive += 1, isLive >= 1) ? ($scope.media.media_is_live = status.media_is_live, PlaybackService.setMediaId($scope.media.media_id), console.log("hidePlayer false from DetailController"), angular.element($("#live-player")).scope().hidePlayer = !1, void $timeout.cancel($scope.mediaPoller)) : ($timeout.cancel($scope.mediaPoller), void($scope.mediaPoller = $timeout($scope.onMediaPoller, 61e3)))
        })) : ($timeout.cancel($scope.mediaPoller), void($scope.mediaPoller = $timeout($scope.onMediaPoller, 61e3)))
    }, $timeout($scope.onMediaPoller, 61e3)), $scope.sendReport = function() {
        params = {
            reason: $scope.report.reason,
            message: $scope.report.message,
            media_type: $scope.media.media_type,
            media_id: $scope.media.media_id,
            captcha: vcRecaptchaService.data()
        }, ReportRes = Report.send(params, function() {
            $scope.report_sent = !0, null != $scope.reportDialog && $scope.reportDialog.close()
        }, function() {
            vcRecaptchaService.reload()
        }), Analytics.trackEvent("user", "reportSend")
    }, $scope.report = {
        reason: "",
        message: "",
        sendReport: $scope.sendReport
    }, $scope.reportDialog = null, $scope.initReport = function() {
        $rootScope.report = $scope.report, $scope.opts = {
            backdrop: !0,
            keyboard: !0,
            cache: !1,
            backdropClick: !0,
            templateUrl: "partials/sub/detail_report.html",
            controller: "ReportController",
            dialogClass: "modal report-modal",
            resolve: {
                report: function() {
                    return $scope.report
                }
            }
        }, $scope.openReportDialog = function() {
            $scope.reportDialog = $dialog.dialog($scope.opts), $scope.reportDialog.open()
        }, $scope.openReportDialog()
    }, $rootScope.session && "1" == $rootScope.session.superadmin && updateIngests(), $scope.update = function() {
        $scope.save.save_status = "saving", mediaParams.livestream = [], mediaParams.livestream[0] = $scope.media, mediaParams.authToken = authToken, Media.update(mediaParams, function(response) {
            $scope.media = response.livestream[0], $scope.media.media_description_md && ($scope.profileMD = $scope.media.media_description_md, $scope.profileMD = $scope.profileMD.replace(/<a /g, '<a target="_blank" '), $scope.profileMD = $sce.trustAsHtml($scope.profileMD)), $scope.session && ($scope.description_upload_url = "/api/upload/description/" + $scope.media.media_user_name + "/" + $scope.session.authToken), $scope.save.save_status = "saved", $scope.channelOptions.editProfile = !1
        })
    }, $scope.setMeta = function(media) {
        var desc = media.media_description;
        desc = desc.replace(/<.*?>/g, "").replace(/http(s|):\/\/.+?( |\n|\r)/g, "").replace(/\[.+?\]/g, "").substring(0, 200);
        var image;
        image = media && media.channel && media.channel.user_logo ? "http://edge.vie.hitbox.tv" + media.channel.user_logo : "http://www.hitbox.tv/img/logo-ico-g.png", $rootScope.meta = {
            type: "video",
            url: location.href,
            description: desc || null,
            stream: media.media_name || null,
            author: media.channel.user_name || "hitbox.tv",
            image: image,
            title: media.media_status || media.media_display_name || "hitbox.tv"
        }, !$rootScope.meta.description && media.category_name && ($rootScope.meta.description = media.media_display_name + " plays " + media.category_name)
    }, $scope.$watch("media", function(newValue) {
        newValue && ($rootScope.title = "video" == $scope.media.media_type ? $scope.media.media_user_name + " - " + $scope.media.media_status + " - hitbox" : $scope.media.media_user_name + " - hitbox")
    }, !0);
    var resourceUpdate = function(text) {
            (json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params);
            var media = params.text.media;
            if (media) {
                if ("1" == media.user_banned) return void $scope.$parent.go("/" + $scope.media.media_user_name + "/banned");
                $scope.$apply(function(scope) {
                    $.extend(scope.media, media)
                }), $rootScope.session && "1" == $rootScope.session.superadmin && updateIngests()
            }
        },
        hostModeUpdate = function(text) {
            if ((json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params), "off" == params.mode) {
                $scope.hostMode = !1;
                var media = params.text.media;
                $timeout(function() {
                    $scope.media.media_is_live = media.livestream[0].media_is_live
                }, 3e3)
            }
            if ("on" == params.mode) {
                $scope.hostMode = !0;
                var media = params.text.media;
                if (!media) return;
                $scope.media.media_is_live = media.livestream[0].media_is_live, $scope.media.media_hosted_media = media
            }
        };
    ChatManager.bind("resourceUpdate", resourceUpdate), ChatManager.bind("hostModeUpdate", hostModeUpdate), $scope.$on("$stateChangeStart", function(event, toState) {
        "video" == toState.section && ($rootScope.chatState = !1, $scope.chatOptions.chatState = !1), $timeout.cancel($scope.mediaPoller), $scope.stopMediaLifeTimeTimer()
    }), $scope.$on("$destroy", function() {
        ChatManager.unbind("resourceUpdate", resourceUpdate), ChatManager.unbind("hostModeUpdate", hostModeUpdate), $timeout.cancel($scope.mediaPoller), $scope.stopMediaLifeTimeTimer()
    }), $scope.getSubMedia = function() {
        var submediaparams = {
            channel: $stateParams.channel ? $stateParams.channel : $scope.media.media_user_name
        };
        Emotes = SubscriberEmotes.get(submediaparams, function(emotes) {
            $scope.subEmotes = emotes.icons
        }, function() {}), Badges = SubscriberBadges.get(submediaparams, function(badges) {
            $scope.subBadges = badges.badges
        }, function() {})
    }, $scope.gotoSubscribeUrl = function() {
        $state.go("subscribe", {
            channel: $scope.media.media_user_name
        })
    }, $scope.afterInject = function() {
        $scope.$apply()
    }, $scope.successHandler = function(token) {
        successParams = {
            type: "success",
            authToken: $scope.session.authToken,
            token: token
        }, Payment.success(successParams, function() {
            $scope.payment.success = !0
        }), $scope.$apply()
    }, $scope.cbuploadcover = function() {
        return function() {
            $scope.getMedia()
        }
    }, $scope.cbuploadlogo = function() {
        return function() {
            $scope.getMedia()
        }
    }, $scope.cberrorcover = function() {
        $scope.errors.user_cover = "Error uploading your file"
    }, $scope.cberrorlogo = function() {
        $scope.errors.user_logo = "Error uploading your file"
    }, $scope.deleteUserImage = function(image, $event) {
        $event.preventDefault();
        var title = "Delete this image from your profile?",
            msg = "",
            btns = [{
                result: !1,
                label: "Cancel"
            }, {
                result: !0,
                label: "Delete",
                cssClass: "btn-red"
            }];
        $dialog.messageBox(title, msg, btns).open().then(function(result) {
            if (result) {
                var deleteParams = {
                    user_name: $scope.media.media_user_name,
                    token: authToken,
                    image_id: image.image_id
                };
                UserImages.remove(deleteParams, function() {
                    getUserImages()
                }, function() {})
            }
        })
    }, $scope.uploadComplete = function(content, completed) {
        completed && content.length > 0 && getUserImages()
    }
}]), String.prototype.hashCode = function() {
    var hash = 0;
    if (0 == this.length) return hash;
    for (i = 0; i < this.length; i++) char = this.charCodeAt(i), hash = (hash << 5) - hash + char, hash &= hash;
    return hash
}, app.controller("errorController", ["$scope", "$rootScope", "Analytics", function($scope, $rootScope, Analytics) {
    $scope.$on("$stateChangeSuccess", function(event, toState, toParams, fromState, fromParams) {
        Analytics.trackEvent("error401", fromState.section, JSON.stringify({
            fromState: fromState,
            fromParams: fromParams
        })), console.log("401: " + fromState.section + " " + JSON.stringify({
            fromState: fromState,
            fromParams: fromParams
        }))
    })
}]), app.controller("error404Controller", ["$scope", "$rootScope", "Analytics", function($scope, $rootScope, Analytics) {
    $scope.$on("$stateChangeSuccess", function(event, toState, toParams, fromState, fromParams) {
        Analytics.trackEvent("error404", fromState.section, JSON.stringify({
            fromState: fromState,
            fromParams: fromParams
        })), console.log("404: " + fromState.section + " " + JSON.stringify({
            fromState: fromState,
            fromParams: fromParams
        }))
    })
}]), app.controller("EventController", ["$scope", "$compile", "$state", "$rootScope", "$stateParams", "Event", "EventParticipants", "EventRankings", "$sce", function($scope, $compile, $state, $rootScope, $stateParams, Event, EventParticipants, EventRankings, $sce) {
    $scope.joined = !1, $scope.authToken = $rootScope.session ? $rootScope.session.authToken : null, $scope.event_name = $stateParams.event_name, $scope.getParticipantCount = function() {
        params = {
            event_name: $scope.event_name,
            count: !0
        }, EventParticipants.get(params, function(count) {
            $scope.participantCount = count.count
        }, function() {})
    }, $scope.getParticipantCount(), $scope.$watch("joined", function() {
        $scope.event_name = $stateParams.event_name, params = {
            event_name: $scope.event_name,
            authToken: $scope.authToken
        }, EventRes = Event.get(params, function(event) {
            $scope.accepted = !1, $scope.event = event.event, $scope.joined = event.joined, $scope.event.event_html = $sce.trustAsHtml($scope.event.event_html)
        }, function() {}), EventRankRes = EventRankings.get(params, function(rankings) {
            $scope.allRankings = rankings, $scope.rankings = {}, $scope.rankings.overall = rankings.overall, $scope.myrank = $scope.authToken && rankings.myrank.week8 ? rankings.myrank.week8 : !1, $scope.overall = !0, $scope.currentWeek = 8
        })
    }), $scope.switchWeek = function(week) {
        switch (week) {
            case "overall":
                $scope.rankings.overall = $scope.allRankings.overall;
                break;
            case 1:
                $scope.rankings.overall = $scope.allRankings.weekly.week1;
                break;
            case 2:
                $scope.rankings.overall = $scope.allRankings.weekly.week2;
                break;
            case 3:
                $scope.rankings.overall = $scope.allRankings.weekly.week3;
                break;
            case 4:
                $scope.rankings.overall = $scope.allRankings.weekly.week4;
                break;
            case 5:
                $scope.rankings.overall = $scope.allRankings.weekly.week5;
                break;
            case 6:
                $scope.rankings.overall = $scope.allRankings.weekly.week6;
                break;
            case 7:
                $scope.rankings.overall = $scope.allRankings.weekly.week7;
                break;
            case 8:
                $scope.rankings.overall = $scope.allRankings.weekly.week8
        }
    }, $scope.joinEvent = function(accepted) {
        accepted && (params = {
            event_name: $scope.event_name,
            authToken: $scope.authToken
        }, EventPartRes = EventParticipants.join(params, function() {
            $scope.joined = !0
        }, function() {}))
    }
}]), app.controller("GameselectController", ["$scope", "$rootScope", "DisplayService", "MediaStore", function($scope, $rootScope, DisplayService, Media) {
    $scope.favoriteLength = 0, $scope.$on("navBrowseCatUpdated", function() {
        if ($scope.browseCat = DisplayService.navState.getBrowseCat(), $rootScope.session) {
            var media_params = {
                authToken: $rootScope.session.authToken,
                media_type: "live",
                list: "list",
                media: !0
            };
            Media.get(media_params).then(function(data) {
                data.livestream && data.livestream.length && ($scope.favoriteLength = data.livestream.length)
            }, function() {
                $scope.favoriteLength = 0
            })
        }
    })
}]), app.controller("HomeController", ["$scope", "$compile", "$rootScope", "$timeout", "Promotion", "$sce", "$location", "$stateParams", "appSettings", "Media", "MediaViews", "$window", "MediaStatus", "DisplayService", "$state", "PlaybackService", "Game", "MediaFeatured", function($scope, $compile, $rootScope, $timeout, Promotion, $sce, $location, $stateParams, appSettings, Media, MediaViews, $window, MediaStatus, DisplayService, $state, PlaybackService, Game, MediaFeatured) {
    DisplayService.deviceSize.update(), $scope.isMobile = !1, $scope.$on("isMobile", function() {
        $scope.isMobile = !0
    }), $scope.$on("isTablet", function() {
        $scope.isMobile = !1
    }), $scope.$on("isDesktop", function() {
        $scope.isMobile = !1
    }), $rootScope.$watch("mobileBrowser()", function(newVal) {
        $scope.isMobile = newVal
    }), $scope.loading = {
        live: !0,
        video: !1
    }, $scope.go = function(newState) {
        $state.go(newState)
    }, PlaybackService.setMediaId(null), $scope.getFeaturedMedia = function() {
        $scope.isMobile || MediaFeatured.get({}, function(data) {
            $scope.media = data, $rootScope.FeatureBackdrop = $sce.trustAsHtml(data.backdrop_html), type = data.livestream ? "live" : "video", PlaybackService.setMediaId($scope.media.media_name)
        }, function() {})
    }, $scope.getFeaturedMedia(), $scope.dummyLiveLength = 12, $scope.videoFilter = "weekly", $scope.navState = DisplayService.navState, $scope.browseCat = $state.current.browse, $scope.gameFilterId = "";
    var timeoutPromise, delayInMs = 500;
    $scope.$watch("tempGameFilter", function() {
        $scope.gameFilter = "", $timeout.cancel(timeoutPromise), timeoutPromise = $timeout(function() {
            null != $scope.tempGameFilter ? ($scope.processing = !0, Game.get({
                game_name: $scope.tempGameFilter,
                seo: "true"
            }, function(data) {
                data && data.category && data.category.category_name && ($scope.gameFilter = data.category.category_name, $scope.gameFilterId = data.category.category_id), $scope.processing = !1
            }, function() {
                $scope.processing = !1
            })) : $scope.gameFilterId = 0
        }, delayInMs)
    }), null != $scope.browseCat && $scope.navState.setBrowseCat($scope.browseCat), $scope.$on("$locationChangeSuccess", function() {
        $timeout(function() {
            $scope.browseCat = $state.current.browse, null != $scope.browseCat && $scope.navState.setBrowseCat($scope.browseCat), "favorite" == $scope.browseCat && $rootScope.session ? ($scope.videoFilter = "recent", $scope.followerId = $rootScope.session.user_id) : ($scope.videoFilter = "weekly", $scope.followerId = null), null != $stateParams.game_name && "undefined" != typeof $stateParams.game_name ? ($scope.tempGameFilter = $stateParams.game_name, $scope.navState.setGameName($scope.tempGameFilter)) : ($scope.tempGameFilter = null, $scope.gameFilter = null, $scope.gameFilterId = 0, $scope.dummyLiveLength = 12)
        }, 0)
    }), $scope.$on("navGameObjectUpdated", function() {
        var game = DisplayService.navState.getGameObject();
        $scope.dummyLiveLength = game.category_media_count
    }), null != $stateParams.game_name ? ($scope.tempGameFilter = $stateParams.game_name, $scope.navState.setGameName($scope.tempGameFilter)) : ($scope.tempGameFilter = null, $scope.gameFilter = null), "language" == $scope.browseCat && $stateParams.language && ($scope.mediaLanguage = $stateParams.language), "favorite" == $scope.browseCat && $rootScope.session ? ($scope.videoFilter = "recent", $scope.followerId = $rootScope.session.user_id) : ($scope.videoFilter = "weekly", $scope.followerId = null), $scope.initProcessing = function() {
        $scope.processing = !0
    }, $scope.gameThumbs = 11, $scope.getNumber = function(num) {
        return new Array(num)
    }, $scope.processing = !1, $scope.recentLimit = 10, $scope.popularLimit = 10, $scope.liveLimit = 10, $scope.recentLines = 3, $scope.popularLines = 2, $scope.liveLines = 10, $scope.toggleTrick = !1, $scope.trendingList = 0, $scope.latestList = 0, $scope.communityList = 0, $scope.featuredList = 0, $scope.dummylist = [], $scope.showHidden = $rootScope.session && "1" == $rootScope.session.superadmin, $scope.onlyHidden = !1, $rootScope.meta = {}, $scope.lists = {
        liveCount: 0,
        videoCount: 0
    }, $scope.liveCount = 0, $scope.followingCount = 0, $scope.videoCount = 0, $scope.sidebar = {
        favoriteLength: 0
    }, $scope.updateViewers = function(viewers) {
        $scope.media.media_views = ("" + viewers).replace(/\B(?=(\d{3})+(?!\d))/g, ","), $scope.$apply()
    }, $scope.setMeta = function(media) {
        var desc = media.media_description;
        desc = desc.replace(/<.*?>/g, "").replace(/http(s|):\/\/.+?( |\n|\r)/g, "").replace(/\[.+?\]/g, "").substring(0, 200);
        var image;
        image = media && media.channel && media.channel.user_logo ? "http://edge.vie.hitbox.tv" + media.channel.user_logo : "http://www.hitbox.tv/img/logo-ico-g.png", $rootScope.meta = {
            type: "video",
            url: location.href,
            description: desc || null,
            stream: media.media_name || null,
            author: media.channel.user_name || "hitbox.tv",
            image: image,
            title: media.media_status || media.media_display_name || "hitbox.tv"
        }, !$rootScope.meta.description && media.category_name && ($rootScope.meta.description = media.media_display_name + " plays " + media.category_name)
    }, $scope.checkSize = function() {
        $scope.isMobile = window.innerWidth <= 1023 ? !0 : !1
    }
}]), app.controller("HostingCtrl", ["$scope", "$rootScope", "$stateParams", "Media", "User", "Hosters", "$interval", function($scope, $rootScope, $stateParams, Media, User) {
    $scope.hostingCollapse = !0, $scope.host = {
        status: "off",
        hoster: "",
        error: !1
    }, $scope.startHosting = function() {
        $scope.host.status = "on", User.get({
            user_name: $scope.host.hoster
        }, function() {
            $scope.media.livestream[0].media_hosted_name = $scope.host.hoster, $scope.update(), $scope.$parent.hostMode = !0
        }, function(error) {
            console.log(error), $scope.host.status = "off", $scope.host.error = "User not found!"
        })
    }, $scope.stopHosting = function() {
        $scope.host.status = "off", $scope.media.livestream[0].media_hosted_name = "off", $scope.update(), $scope.$parent.hostMode = !1
    }, $scope.collapseHosting = function() {
        $scope.hostingCollapse = !$scope.hostingCollapse
    }, $scope.getMedia = function() {
        $scope.params = {
            media_name: $stateParams.user,
            media_type: "live",
            authToken: $rootScope.session.authToken,
            showHidden: !0,
            nocache: !0,
            filter: "newfirst",
            liveonly: !1
        }, MediaHostRes = Media.get($scope.params, function(media) {
            $scope.media = media, media.livestream[0].media_hosted_id && ($scope.host.hoster = media.livestream[0].media_hosted_media.livestream[0].media_name, $scope.host.status = "on", $scope.$parent.hostMode = !0)
        }, function(error) {
            console.log(error)
        })
    }, $scope.update = function() {
        $scope.params = {
            media_name: $stateParams.user,
            media_type: "live",
            authToken: $rootScope.session.authToken,
            showHidden: !0,
            nocache: !0,
            filter: "newfirst",
            liveonly: !1
        }, MediaHostRes.livestream = $scope.media.livestream, MediaHostRes.$update($scope.params, function() {
            $scope.getMedia()
        }, function(error) {
            console.log(error)
        })
    }, $scope.getMedia()
}]), app.controller("HostersCtrl", ["$scope", "$rootScope", "$stateParams", "$interval", "Hosters", function($scope, $rootScope, $stateParams, $interval, Hosters) {
    $scope.hosters = {
        list: []
    }, $scope.getHosters = function() {
        Hosters.get({
            user_name: $stateParams.user,
            authToken: $rootScope.session.authToken
        }, function(list) {
            $scope.hosters.list = list.hosters
        }, function() {})
    }, $scope.getHosters();
    var hostersInterval = $interval(function() {
        $scope.getHosters()
    }, 6e4);
    $scope.$on("destroy", function() {
        $interval.cancel(hostersInterval)
    })
}]), app.controller("MotdBroadcasterCtrl", ["$scope", "$rootScope", "$stateParams", "ChatManager", "$timeout", "Analytics", function($scope, $rootScope, $stateParams, ChatManager, $timeout, Analytics) {
    $scope.motdCollapse = !0, $scope.max_motd_length = 300, $scope.channel = $stateParams.channel || $stateParams.user, $scope.channel = $scope.channel.toLowerCase(), $scope.motd = {
        message: "",
        status: "none"
    }, $scope.start = function() {
        $scope.setMessage(), $scope.motd.status = "running", Analytics.trackEvent("chat", "motdSet")
    }, $scope.end = function() {
        $scope.clearMessage(), $scope.motd.status = "none", Analytics.trackEvent("chat", "motdRemoved")
    }, $scope.reset = function() {
        $scope.motd = {
            message: "",
            status: "none"
        }
    }, $scope.collapseMotd = function() {
        $scope.motdCollapse = !$scope.motdCollapse
    }, $scope.setMessage = function() {
        ChatManager.setMotd($scope.channel, $scope.motd.message, $scope.channel)
    }, $scope.clearMessage = function() {
        ChatManager.unsetMotd($scope.channel, $scope.channel)
    };
    var msgCallback = function(text) {
        switch ((json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params), method) {
            case "motdMsg":
                $scope.$apply(function() {
                    "" == params.text || "undefined" == typeof params.text ? $scope.motd.status = "none" : ($scope.motdCollapse && $scope.collapseMotd(), $scope.motd.message = params.text, $scope.motd.status = "running")
                })
        }
    };
    ChatManager.bind("motdMessage", msgCallback), $scope.$on("$stateChangeStart", function() {}), $scope.$on("$destroy", function() {
        ChatManager.unbind("motdMessage", msgCallback)
    })
}]), app.controller("MotdViewerCtrl", ["$scope", "$rootScope", "$stateParams", "ChatManager", "$timeout", "$sce", "ChatIcons", "appSettings", function($scope, $rootScope, $stateParams, ChatManager, $timeout, $sce, ChatIcons, appSettings) {
    function linkify(inputText) {
        var replacedText, replacePattern1, replacePattern2, replacePattern3;
        return replacePattern1 = /(\b(https?|ftp):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gim, replacedText = inputText.replace(replacePattern1, '<a href="$1" target="_blank">$1</a>'), replacePattern2 = /(^|[^\/])(www\.[\S]+(\b|$))/gim, replacedText = replacedText.replace(replacePattern2, '$1<a href="http://$2" target="_blank">$2</a>'), replacePattern3 = /(([a-zA-Z0-9\-\_\.])+@[a-zA-Z\_]+?(\.[a-zA-Z]{2,6})+)/gim, replacedText = replacedText.replace(replacePattern3, '<a href="mailto:$1">$1</a>')
    }
    ChatIcons.get({
        media_id: 0
    }, function(icons) {
        emotify.emoticons(appSettings.imgUrl, icons.icons)
    }), $scope.motd = {
        message: "",
        nameColor: "",
        status: "none",
        hidden: !1
    };
    var msgCallback = function(text) {
        switch ((json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params), method) {
            case "motdMsg":
                $scope.$apply(function() {
                    "" == params.text || "undefined" == typeof params.text ? ($scope.motd.status = "none", $scope.motd.hidden = !0) : ($scope.motd.status = "running", $scope.motd.message = $sce.trustAsHtml(emotify(linkify(params.text))), $scope.motd.nameColor = params.nameColor, $scope.motd.hidden = !1)
                })
        }
    };
    ChatManager.bind("motdMessage", msgCallback), $scope.$on("$stateChangeStart", function() {}), $scope.$on("$destroy", function() {
        ChatManager.unbind("motdMessage", msgCallback)
    })
}]), app.controller("NavController", ["$scope", "$rootScope", "$location", "$window", "Teams", "User", "$timeout", "DisplayService", "$stateParams", function($scope, $rootScope, $location, $window, Teams, User, $timeout, DisplayService, $stateParams) {
    $scope.navBrowse = !1, $scope.scrollPosition = 0, $scope.chatOptions = DisplayService.chatOptions, $scope.deviceSize = DisplayService.deviceSize, $scope.navState = DisplayService.navState, $scope.isMobile = !1, $scope.gotoTwitterWidget = function() {
        $rootScope.twitterWidgetReady && ($scope.chatOptions.chatTab = "twitter")
    }, $scope.$on("isMobile", function() {
        $scope.isMobile = !0
    }), $scope.$on("isTablet", function() {
        $scope.isMobile = !1
    }), $scope.$on("isDesktop", function() {
        $scope.isMobile = !1
    }), $scope.searchObject = {
        searchOpen: !1
    }, $scope.inputs = {
        searchString: ""
    }, $scope.theme_model = "theme-dark" == $rootScope.theme ? !0 : !1, $scope.$watch("theme_model", function(newVal) {
        1 == newVal ? ($rootScope.theme = "theme-dark", "function" == typeof amplify.store && amplify.store("display.theme", $rootScope.theme)) : 0 == newVal && ($rootScope.theme = "theme-light", "function" == typeof amplify.store && amplify.store("display.theme", $rootScope.theme))
    }), $scope.$on("navGameObjectUpdated", function() {
        var game = DisplayService.navState.getGameObject();
        $scope.gameFilterId = game.category_id
    }), $scope.openSearch = function() {
        "undefined" != typeof $scope.inputs.searchString && $scope.inputs.searchString.length >= 3 && ($scope.searchObject.searchOpen = !0)
    }, $scope.closeSearch = function() {
        $scope.searchObject.searchOpen = !1
    }, $scope.closePopover = function() {
        DisplayService.popoverState.destroy()
    }, $scope.browseType = "popular", $scope.navBrowseToggle = function() {
        $scope.navBrowse = $scope.navBrowse ? !1 : !0, $rootScope.$emit("lazyLoadManual")
    }, $scope.$on("navTabUpdated", function() {
        $scope.tab = $scope.navState.getTab()
    }), $scope.user = $stateParams.user ? {
        user_name: $stateParams.user
    } : {
        user_name: $rootScope.session.user_name
    }, $scope.recLines = 3, $scope.$on("$stateChangeStart", function(event, toState, toParams) {
        toParams.user && ($scope.user = {
            user_name: toParams.user
        }), $scope.searchObject.searchOpen = !1, $scope.navBrowse = !1
    }), $scope.searchTimeout = !1, $scope.$watch("inputs.searchString", function(newVal) {
        newVal && newVal.length >= 3 && ($scope.searchObject.searchOpen = !0, $scope.searchTimeout && ($timeout.cancel($scope.searchTimeout), $scope.searchTimeout = !1), $scope.searchTimeout = $timeout(function() {
            $scope.updateSearch()
        }, 500)), newVal && newVal.length <= 2 && $scope.searchTimeout && ($timeout.cancel($scope.searchTimeout), $scope.searchTimeout = !1)
    }), $scope.updateSearch = function() {
        $scope.search = $scope.inputs.searchString
    }, $scope.openDashboard = function(user) {
        $window.open("/dashboard/" + user, "", "width=1000,height=900")
    }, $scope.isPartner = !1, $rootScope.session && $rootScope.partner && ($scope.isPartner = !0), $scope.teams = [], $rootScope.session && $rootScope.session.user_name && $rootScope.session.authToken && (teamParams = {
        authToken: $rootScope.session.authToken,
        user_name: $rootScope.session.user_name,
        partner: !0
    }, TeamList = Teams.get(teamParams, function(teamlist) {
        if (teamlist.teams && teamlist.teams) {
            $scope.teams = [];
            for (var i = 0; i < teamlist.teams.length; i++) teamlist.teams[i].info.group_accepted && "admin" == teamlist.teams[i].info.group_role && $scope.teams.push({
                name: teamlist.teams[i].info.group_name,
                logo: teamlist.teams[i].info.group_logo_small
            })
        }
    }))
}]), app.controller("partnerPageController", ["$scope", "$rootScope", "Partner", function($scope, $rootScope, Partner) {
    $scope.success = !1, $scope.authToken = $rootScope.session ? $rootScope.session.authToken : null, Partner.get({
        authToken: $scope.authToken
    }, function() {
        $scope.success = !0
    }), $scope.partner = {
        authToken: $scope.authToken,
        partner_email: $rootScope.session ? $rootScope.session.user_email : "",
        partner_organization: "",
        partner_country: "",
        partner_facebook: "facebook.com/",
        partner_twitter: "twitter.com/",
        partner_youtube: "youtube.com/",
        partner_other: "",
        partner_website: "",
        partner_description: ""
    }, $scope.addPartner = function() {
        Partner.add($scope.partner, function() {
            $scope.success = !0
        })
    }
}]), app.controller("PlaybackController", ["$scope", "PlaybackService", "DisplayService", "MediaStore", "appSettings", "$rootScope", "$state", "$http", "MediaFeatured", "Media", "$interval", "ChatManager", "$timeout", function($scope, PlaybackService, DisplayService, MediaStore, appSettings, $rootScope, $state, $http, MediaFeatured, Media, $interval, ChatManager) {
    $scope.chatOptions = DisplayService.chatOptions, $scope.watchMedia = PlaybackService.getMediaId, $scope.deviceSize = DisplayService.deviceSize, $scope.hidePlayer = !1, $scope.$watch("watchMedia()", function(newVal, oldVal) {
        (newVal != oldVal || newVal) && ($scope.current_media_id = newVal, $scope.current_media_type = PlaybackService.getMediaType(), $scope.media = !1, $scope.current_media_id && $scope.getMedia())
    }), $scope.config = appSettings, $scope.isMobile = !1, $rootScope.$watch("mobileBrowser()", function(newVal) {
        $scope.isMobile = newVal
    }), $rootScope.$on("isMobile", function() {
        $scope.isMobile = !0
    }), $rootScope.$on("isTablet", function() {
        $scope.isMobile = !1
    }), $rootScope.$on("isDesktop", function() {
        $scope.isMobile = !1
    }), $scope.mediaLifeTimeTimer = void 0, $scope.startMediaLifeTimeTimer = function() {
        angular.isDefined($scope.mediaLifeTimeTimer) || ($scope.mediaLifeTimeTimer = $interval($scope.updateMediaLifeTime, 6e4))
    }, $scope.stopMediaLifeTimeTimer = function() {
        angular.isDefined($scope.mediaLifeTimeTimer) && ($interval.cancel($scope.mediaLifeTimeTimer), $scope.mediaLifeTimeTimer = void 0)
    }, $scope.updateMediaLifeTime = function() {
        var now = moment.utc(),
            live = moment.utc($scope.media.media_live_since),
            diff = now.diff(live),
            duration = moment.duration(diff);
        $scope.media.media_live_time = Math.floor(duration.asHours()) + moment.utc(diff).format(":mm"), $scope.startMediaLifeTimeTimer()
    }, $scope.getMedia = function() {
        "home" == $state.current.section && $scope.isMobile || (mediaParams = {
            media_name: $scope.current_media_id,
            media_type: $scope.current_media_type,
            showHidden: !0,
            liveonly: !1
        }, MediaRes = Media.get(mediaParams, function(media) {
            media && media.livestream && media.livestream.length && !media.livestream[0].media_hosted_media ? $scope.media = media.livestream[0] : media && media.video && media.video.length ? $scope.media = media.video[0] : media && media.livestream && media.livestream.length && media.livestream[0].media_hosted_media && ($scope.hostMode = !0, $scope.media = media.livestream[0].media_hosted_media.livestream[0], PlaybackService.setMediaId($scope.media.media_name)), $scope.hidePlayer = 0 == $scope.media.media_is_live || "home" === $state.current.section && $state.current.browse || "home" === $state.current.section && $scope.isMobile ? !0 : !1;
            var now = moment().utc(),
                live = moment.utc($scope.media.media_live_since),
                diff = now.diff(live),
                duration = moment.duration(diff);
            $scope.media.media_live_time = Math.floor(duration.asHours()) + moment.utc(diff).format(":mm"), diff = now.diff($scope.media.media_date_added), duration = moment.duration(diff), $scope.media.media_time_ago = duration.humanize() + " ago", $scope.startMediaLifeTimeTimer(), ChatManager.unbind("resourceUpdate", resourceUpdate), ChatManager.bind("resourceUpdate", resourceUpdate), ChatManager.unbind("hostModeUpdate", hostModeUpdate), ChatManager.bind("hostModeUpdate", hostModeUpdate)
        }, function() {
            $scope.hidePlayer = !0
        }))
    }, $scope.setupMedia = function() {}, $scope.userImg = function() {
        return $scope.media && $scope.media.channel ? {
            "background-image": "url(" + appSettings.imgUrl + $scope.media.channel.user_logo + ")"
        } : void 0
    }, $scope.updateViewers = function(viewers) {
        $scope.media.media_views = viewers, $scope.$$phase || $rootScope.$$phase || $scope.$apply()
    }, $scope.hostMode = !1;
    var resourceUpdate = function(text) {
            (json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params);
            var media = params.text.media;
            if (media) return "1" == media.user_banned ? void $scope.$parent.go("/" + $scope.media.media_user_name + "/banned") : void $scope.$apply(function(scope) {
                $.extend(scope.media, media)
            })
        },
        hostModeUpdate = function(text) {
            (json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params);
            var media = params.text.media;
            media && ("off" == params.mode && ($scope.hostMode = !1, $scope.media = media.livestream[0], PlaybackService.setMediaId($scope.media.media_name)), "on" == params.mode && ($scope.hostMode = !0, $scope.media = media.livestream[0], PlaybackService.setMediaId($scope.media.media_name)))
        };
    "home" === $state.current.section && $state.current.browse && ($scope.hidePlayer = !0), "home" === $state.current.section && ($scope.spotlight = !0), $scope.$on("$destroy", function() {
        ChatManager.unbind("resourceUpdate", resourceUpdate), ChatManager.unbind("hostModeUpdate", hostModeUpdate), PlaybackService.setMediaId(null)
    }), $scope.$on("$stateChangeStart", function(event, toState) {
        "video" === toState.section ? "video" : "live";
        "home" === toState.section && toState.browse && ($scope.hidePlayer = !0), "home" != toState.section || null != toState.browse || $scope.isMobile || ($scope.hidePlayer = !1), "home" == toState.section && $scope.isMobile && ($scope.hidePlayer = !0)
    })
}]), app.controller("PollBroadcasterCtrl", ["$scope", "$rootScope", "$stateParams", "ChatManager", "$timeout", "Following", "Analytics", function($scope, $rootScope, $stateParams, ChatManager, $timeout, Following, Analytics) {
    $scope.pollCollapse = !0;
    var max_poll_options = 11;
    $scope.max_poll_option_length = 100, $scope.max_poll_question_length = 140, $scope.max_poll_time_length = 10, $scope.channel = $stateParams.channel || $stateParams.user, $scope.channel = $scope.channel.toLowerCase();
    var uptime_timeout;
    $scope.onTimeout = function() {
        return "running" != $scope.poll.status ? void $timeout.cancel(uptime_timeout) : ($scope.$apply(function() {
            $scope.poll.countdown ? $scope.poll.uptime -= 1e3 : $scope.poll.uptime += 1e3
        }), $timeout.cancel(uptime_timeout), $scope.poll.uptime < 0 ? void $scope.pause() : void(uptime_timeout = $timeout($scope.onTimeout, 1e3)))
    }, $scope.accIsOpen = !0, $scope.pollRunning = !1, $scope.collapsePoll = function() {
        $scope.pollCollapse = !$scope.pollCollapse
    }, $scope.input_errors = {
        question: !0,
        choice: !0
    }, $scope.placeholders = {
        question: "Enter your poll question ...",
        choice: "Enter poll option ...",
        timetorun: "Time to in run in minutes (optional)",
        error: !1
    };
    var error_placeholders = {
            question: "You must enter a question!",
            choice: "Enter at least 2 options!"
        },
        setErrorQuestion = function() {
            $scope.placeholders.question = error_placeholders.question, $scope.placeholders.error_question = !0, $scope.placeholders.error = !0, $scope.input_errors.question = !0
        },
        setErrorOptions = function() {
            $scope.placeholders.choice = error_placeholders.choice, $scope.placeholders.error_options = !0, $scope.placeholders.error = !0, $scope.input_errors.choice = !0
        },
        resetErrors = function() {
            $scope.placeholders = {
                question: "Enter your poll question ...",
                choice: "Enter poll option ...",
                timetorun: "Time to in run in minutes (optional)",
                error: !1
            }
        };
    $scope.start = function() {
        var filteredChoices = filterChoices($scope.poll.choices);
        ("undefined" == typeof $scope.poll.question || "" === $scope.poll.question) && setErrorQuestion(), filteredChoices.length < 2 && setErrorOptions(), $scope.placeholders.error !== !0 && ($scope.poll.timetorun && ($scope.poll.countdown = !0, $scope.poll.uptime = 60 * $scope.poll.timetorun * 1e3, uptime_timeout = $timeout($scope.onTimeout, 1e3)), $scope.poll.choices = filteredChoices, token = $rootScope.session ? $rootScope.session.authToken : null, "running" === $scope.poll.status ? (ChatManager.endPoll($scope.channel, token), $scope.reset(), $scope.poll.status = "none") : (ChatManager.createPoll($scope.poll.question, $scope.poll.choices, $scope.channel, $scope.poll.subscriberOnly, $scope.poll.followerOnly), $scope.poll.status = "running"), Analytics.trackEvent("chat", "pollStarted"))
    }, $scope.pickWinner = function() {
        for (var isWinOptionSelected = !1, i = 0; i < $scope.poll.choices.length; i++)
            if (1 == $scope.poll.choices[i].win) {
                isWinOptionSelected = !0;
                break
            }
        return isWinOptionSelected ? void $scope.poll.winners.push({
            name: "testsieger",
            email: null
        }) : void alert("please select a winning answer first!")
    }, $scope.pause = function() {
        token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.pausePoll($scope.channel, token), $scope.poll.status = "paused"
    }, $scope.resume = function() {
        token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.startPoll($scope.channel, token), $scope.poll.status = "running", uptime_timeout = $timeout($scope.onTimeout, 1e3)
    }, $scope.end = function() {
        token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.endPoll($scope.channel, token);
        for (var i = 0; i < $scope.poll.choices.length; i++) $scope.poll.choices[i].votes = 0;
        $scope.poll.status = "none", $scope.poll.uptime = null, $scope.addChoice($scope.poll.choices.length - 1)
    }, $scope.reset = function() {
        $scope.poll = {
            question: "",
            price: "",
            choices: [{
                text: "",
                votes: 0
            }, {
                text: "",
                votes: 0
            }],
            timetorun: null,
            data: !1,
            status: "none",
            uptime: null,
            subscriberOnly: !1,
            followerOnly: !1
        }, resetErrors()
    }, $scope.reset(), $scope.addChoice = function(index) {
        index + 1 >= $scope.poll.choices.length && $scope.poll.choices.length < max_poll_options && $scope.poll.choices.push({
            text: "",
            votes: 0,
            win: !1
        })
    }, $scope.removeChoice = function(index) {
        $scope.poll.choices.length >= 2 && $scope.poll.choices.splice(index, 1)
    };
    var filterChoices = function(choices) {
        for (var filtered = new Array, i = 0; i < choices.length; i++)
            if ("" !== choices[i].text && void 0 !== choices[i].text) {
                var choice = choices[i];
                choice.text = choice.text.substring(0, $scope.max_poll_option_length), filtered.push(choices[i])
            }
        return filtered
    };
    $scope.$watch("poll.status", function(newVal) {
        "none" == newVal && ($scope.$parent.pollRunning = !1)
    }), $scope.$watch("poll.question", function() {
        void 0 === $scope.poll.question || "" === $scope.poll.question ? ($scope.poll.data = !0, $scope.input_errors.question = !0) : ($scope.poll.data = !1, $scope.input_errors.question = !1), resetErrors()
    }), $scope.$watch("[poll.choices]", function() {
        for (var choice_counter = 0, i = 0; i < $scope.poll.choices.length; i++) "" !== $scope.poll.choices[i].text && void 0 !== $scope.poll.choices[i].text && choice_counter++;
        choice_counter >= 2 ? ($scope.poll.data = !0, $scope.input_errors.choice = !1, resetErrors()) : ($scope.poll.data = !1, $scope.input_errors.choice = !0)
    }, !0), $scope.$watch("input_errors.question", function() {
        $scope.poll.start_button_disabled = $scope.input_errors.question === !1 && $scope.input_errors.choice === !1 ? !1 : !0
    }), $scope.$watch("input_errors.choice", function() {
        $scope.poll.start_button_disabled = $scope.input_errors.question === !1 && $scope.input_errors.choice === !1 ? !1 : !0
    });
    var msgCallback = function(text) {
        switch ((json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params), method) {
            case "pollMsg":
                if (params.subscriberOnly && ($scope.poll.subscriberOnly = !0), params.followerOnly && ($scope.poll.followerOnly = !0), "started" === params.status) {
                    var uptime = Math.round((new Date).getTime() - new Date(params.start_time).getTime());
                    $scope.$apply(function() {
                        $scope.poll.question = params.question, $scope.poll.votes = params.votes;
                        for (var i = 0; i < $scope.poll.choices.length; i++) $scope.poll.choices[i].votes = params.choices[i].votes, $scope.poll.choices[i].text = params.choices[i].text, $scope.poll.choices[i].barSize = function(index) {
                            return {
                                width: $scope.poll.choices[index].votes / $scope.poll.votes * 100 + "%",
                                opacity: $scope.poll.choices[index].votes / $scope.poll.votes * .7 + .2
                            }
                        };
                        null === $scope.poll.uptime && ($scope.poll.uptime = uptime, uptime_timeout = $timeout($scope.onTimeout, 1e3)), $scope.poll.status = "running", $scope.pollCollapse && ($scope.pollCollapse = !1), $scope.$parent.pollRunning = !0
                    })
                } else "ended" === params.status ? $scope.$apply(function() {
                    $timeout.cancel(uptime_timeout), uptime_timeout = null, $scope.poll.status = "none"
                }) : "paused" === params.status && $scope.$apply(function() {
                    $scope.poll.question = params.question, $scope.poll.choices = params.choices, $scope.poll.votes = params.votes;
                    for (var i = 0; i < $scope.poll.choices.length; i++) $scope.poll.choices[i].barSize = function(index) {
                        return {
                            width: $scope.poll.choices[index].votes / $scope.poll.votes * 100 + "%",
                            opacity: $scope.poll.choices[index].votes / $scope.poll.votes * .7 + .2
                        }
                    };
                    $timeout.cancel(uptime_timeout), uptime_timeout = null, $scope.poll.status = "paused", $scope.pollCollapse && ($scope.pollCollapse = !1), $scope.$parent.pollRunning = !0
                })
        }
    };
    ChatManager.bind("pollMessage", msgCallback), $scope.$on("$stateChangeStart", function() {}), $scope.$on("$destroy", function() {
        ChatManager.unbind("pollMessage", msgCallback)
    })
}]), app.controller("PollViewerCtrl", ["$scope", "$rootScope", "$stateParams", "ChatManager", "DisplayService", "Following", "Follow", "$cookieStore", "$location", "$window", function($scope, $rootScope, $stateParams, ChatManager, DisplayService, Following, Follow, $cookieStore, $location, $window) {
    "undefined" == typeof $scope.session && ($scope.session = $rootScope.session), $scope.chatOptions = DisplayService.chatOptions, $scope.subscriberOnly = !1, $scope.followerOnly = !1, $rootScope.$watch("chatState", function(newVal) {
        0 == newVal && $scope.$destroy()
    }), $scope.channel = $stateParams.channel || $stateParams.user, $scope.channel = $scope.channel.toLowerCase(), $scope.name = $scope.name = $rootScope.session ? $rootScope.session.user_name : "UnknownSoldier", $scope.pollRunning = !1, $scope.poll = {
        question: "",
        choices: [],
        selection: null,
        pollResults: !1,
        status: "none",
        vote_button_disabled: !0,
        nameColor: ""
    }, $scope.poll = {}, $scope.canVote = function() {
        return $scope.chatOptions.subscribed || !$scope.subscriberOnly || $scope.chatOptions.isSuperAdmin ? $scope.chatOptions.following || !$scope.followerOnly || $scope.chatOptions.isSuperAdmin ? "all" : "follow" : "subscribe"
    }, $scope.getFollowing = function() {
        var f_params = {
            type: "user",
            follow_id: $scope.channel,
            authToken: $rootScope.session.authToken,
            user_name: $rootScope.session.user_name
        };
        Following.get(f_params, function(following) {
            following.following && following.following.follow_id && ($scope.chatOptions.following = !0)
        }, function() {})
    }, $scope.getFollowing(), $scope.vote = function() {
        return "subscribe" == $scope.canVote() ? void $scope.gotoSubscribeUrl() : "follow" == $scope.canVote() ? void $scope.addFollowAndVote() : (token = $rootScope.session ? $rootScope.session.authToken : null, $scope.myVote = $scope.poll.selection, ChatManager.votePoll($scope.name, $scope.poll.selection, $scope.channel, token), void($scope.poll.pollResults = !0))
    }, $scope.addFollowAndVote = function() {
        params = {
            type: "user",
            follow_id: $scope.channel,
            authToken: $rootScope.session.authToken
        }, Follow.add(params, function() {
            $scope.chatOptions.following = !0, $scope.vote()
        })
    }, $scope.gotoSubscribeUrl = function() {
        var restHost = $location.host();
        if ($rootScope.session) {
            if ($scope.subscribeUrl = "https://" + restHost + "/" + $scope.channel + "/subscribe/" + $rootScope.session.user_name, "function" == typeof amplify.store && amplify.store("hitbox.session")) {
                var htbxSession = amplify.store("hitbox.session");
                $cookieStore.put("hitbox.session", htbxSession)
            }
        } else $scope.subscribeUrl = "https://" + restHost + "/" + $scope.medianame + "/subscribe/";
        $window.open($scope.subscribeUrl, "_blank")
    }, $scope.$watch("poll.selection", function(newValue) {
        null != newValue && ($scope.poll.vote_button_disabled = !1)
    }), $scope.$watch("poll.status", function() {});
    var msgCallback = function(text) {
        switch ((json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params), method) {
            case "pollMsg":
                "started" === params.status ? "running" === $scope.poll.status ? $scope.$apply(function() {
                    params.subscriberOnly && ($scope.subscriberOnly = !0), params.followerOnly && ($scope.followerOnly = !0), $scope.poll.question = params.question, $scope.poll.votes = params.votes, $scope.poll.nameColor = params.nameColor;
                    for (var max_votes = 0, max_id = 0, i = 0; i < $scope.poll.choices.length; i++) {
                        $scope.poll.choices[i].isMax = !1, $scope.poll.choices[i].votes = params.choices[i].votes, $scope.poll.choices[i].barSize = function(index) {
                            return {
                                width: $scope.poll.choices[index].votes / $scope.poll.votes * 100 + "%"
                            }
                        };
                        var percent = ($scope.poll.choices[i].votes / $scope.poll.votes * 100).toFixed(1);
                        $scope.poll.choices[i].percent = isNaN(percent) ? 0 : percent, $scope.poll.choices[i].votes > max_votes && (max_votes = $scope.poll.choices[i].votes, max_id = i)
                    }
                    $scope.poll.choices[max_id].isMax = !0, $scope.poll.isActive = !0
                }) : startPoll(params) : "ended" === params.status ? $scope.$apply(function() {
                    $scope.poll.status = "none"
                }) : "paused" === params.status && (startPoll(params), $scope.$apply(function() {
                    $scope.poll.pollResults = !0, $scope.poll.status = "paused"
                }))
        }
    };
    ChatManager.bind("pollMessage", msgCallback), $scope.$on("$stateChangeStart", function() {}), $scope.$on("$destroy", function() {
        ChatManager.unbind("pollMessage", msgCallback)
    });
    var startPoll = function(params) {
        $scope.$apply(function() {
            params.subscriberOnly && ($scope.subscriberOnly = !0), params.followerOnly && ($scope.followerOnly = !0), $scope.poll.question = params.question, $scope.poll.choices = params.choices, $scope.poll.votes = params.votes, $scope.poll.nameColor = params.nameColor;
            for (var max_votes = 0, max_id = 0, i = 0; i < $scope.poll.choices.length; i++) {
                $scope.poll.choices[i].barSize = function(index) {
                    return {
                        width: $scope.poll.choices[index].votes / $scope.poll.votes * 100 + "%"
                    }
                };
                var percent = ($scope.poll.choices[i].votes / $scope.poll.votes * 100).toFixed(1);
                $scope.poll.choices[i].percent = isNaN(percent) ? 0 : percent, $scope.poll.choices[i].votes > max_votes && (max_votes = $scope.poll.choices[i].votes, max_id = i)
            }
            $scope.poll.choices[max_id].isMax = !0, $scope.poll.isActive = !0, "paused" !== $scope.poll.status && ($scope.poll.pollResults = !1, $scope.poll.selection = null, $scope.poll.vote_button_disabled = !0), $scope.poll.pollResults = params.voters && -1 !== params.voters.indexOf($scope.name) ? !0 : !1, $scope.poll.status = "running"
        })
    }
}]);
var compareVotes = function(a, b) {
    return a.votes < b.votes ? 1 : a.votes > b.votes ? -1 : 0
};
app.controller("RaffleBroadcasterCtrl", ["$scope", "$rootScope", "$stateParams", "ChatManager", "$timeout", "Analytics", function($scope, $rootScope, $stateParams, ChatManager, $timeout, Analytics) {
        $scope.raffleCollapse = !0;
        var max_raffle_options = 11;
        $scope.max_raffle_option_length = 100, $scope.max_raffle_question_length = 140, $scope.max_raffle_prize_length = 100, $scope.max_raffle_time_length = 10, $scope.channel = $stateParams.channel || $stateParams.user, $scope.channel = $scope.channel.toLowerCase();
        var uptime_timeout;
        $scope.onTimeout = function() {
            return "running" != $scope.raffle.status ? void $timeout.cancel(uptime_timeout) : ($scope.$apply(function() {
                $scope.raffle.countdown ? $scope.raffle.uptime -= 1e3 : $scope.raffle.uptime += 1e3
            }), $timeout.cancel(uptime_timeout), $scope.raffle.uptime < 0 ? void $scope.pause() : void(uptime_timeout = $timeout($scope.onTimeout, 1e3)))
        }, $scope.winnerTimeout = null, $scope.bPickWinner = !0, $scope.startWinnerTimeout = function() {
            null == $scope.winnerTimeout && ($scope.bPickWinner = !1, $scope.winnerTimeout = $timeout(function() {
                $scope.bPickWinner = !0, $scope.winnerTimeout = null
            }, 2e3))
        }, $scope.accIsOpen = !0, $scope.raffleRunning = !1, $scope.raffle = {
            question: "",
            prize: "",
            choices: [{
                text: "",
                votes: 0
            }, {
                text: "",
                votes: 0
            }],
            timetorun: null,
            status: "none",
            data: !1,
            start_button_disabled: !0,
            uptime: null,
            winners: [],
            countdown: !1,
            subscriberOnly: !1,
            followerOnly: !1
        }, $scope.collapseRaffle = function() {
            $scope.raffleCollapse = !$scope.raffleCollapse
        }, $scope.$watch("raffle.status", function(newVal) {
            "none" == newVal && ($scope.$parent.raffleRunning = !1)
        }), $scope.input_errors = {
            question: !0,
            prize: !0,
            choice: !0
        }, $scope.placeholders = {
            question: "Enter a question ...",
            choice: "Enter an option ...",
            prize: "The giveaway is ...",
            timetorun: "Time to run in minutes (optional)",
            error: !1
        };
        var error_placeholders = {
                question: "You must enter a question!",
                prize: "No prize!",
                choice: "Enter at least 2 options!"
            },
            setErrorQuestion = function() {
                $scope.placeholders.question = error_placeholders.question, $scope.placeholders.error_question = !0, $scope.placeholders.error = !0, $scope.input_errors.question = !0
            },
            setErrorPrize = function() {
                $scope.placeholders.prize = error_placeholders.prize, $scope.placeholders.error_prize = !0, $scope.placeholders.error = !0, $scope.input_errors.prize = !0
            },
            setErrorOptions = function() {
                $scope.placeholders.choice = error_placeholders.choice, $scope.placeholders.error_options = !0, $scope.placeholders.error = !0, $scope.input_errors.choice = !0
            },
            resetErrors = function() {
                $scope.placeholders = {
                    question: "Enter a question ...",
                    choice: "Enter an option ...",
                    prize: "The giveaway is ...",
                    timetorun: "Time to run in minutes (optional)",
                    error: !1
                }
            };
        $scope.start = function() {
            var filteredChoices = filterChoices($scope.raffle.choices);
            ("undefined" == typeof $scope.raffle.question || "" === $scope.raffle.question) && setErrorQuestion(), filteredChoices.length < 1 && setErrorOptions(), ("undefined" == typeof $scope.raffle.prize || "" === $scope.raffle.prize) && setErrorPrize(), $scope.placeholders.error !== !0 && ($scope.raffle.timetorun && ($scope.raffle.countdown = !0, $scope.raffle.uptime = 60 * $scope.raffle.timetorun * 1e3, uptime_timeout = $timeout($scope.onTimeout, 1e3)), $scope.raffle.choices = filteredChoices, token = $rootScope.session ? $rootScope.session.authToken : null, "running" === $scope.raffle.status ? (ChatManager.endRaffle($scope.channel), $scope.reset(), $scope.raffle.status = "none") : (ChatManager.createRaffle($scope.raffle.question, $scope.raffle.choices, $scope.channel, $scope.raffle.prize, $scope.raffle.subscriberOnly, $scope.raffle.followerOnly), $scope.raffle.status = "running"), Analytics.trackEvent("chat", "raffleStarted"))
        }, $scope.waitForRaffleEnd = null, $scope.pickWinOption = function(index) {
            $scope.bPickWinner && ($scope.startWinnerTimeout(), "ended" == $scope.raffle.status ? ChatManager.winnerRaffle($scope.channel, index) : ($scope.waitForRaffleEnd = index, ChatManager.endRaffle($scope.channel, token), $scope.raffle.status = "ended"))
        }, $scope.pause = function() {
            token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.pauseRaffle($scope.channel, token), $scope.raffle.status = "paused"
        }, $scope.hide = function() {
            token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.hideRaffle($scope.channel, token), $scope.raffle.status = "hidden"
        }, $scope.resume = function() {
            token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.startRaffle($scope.channel, token), $scope.raffle.status = "running"
        }, $scope.end = function() {
            token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.endRaffle($scope.channel, token);
            for (var i = 0; i < $scope.raffle.choices.length; i++) $scope.raffle.choices[i].votes = 0;
            $scope.raffle.status = "ended", $scope.raffle.uptime = null, $scope.addChoice($scope.raffle.choices.length - 1)
        }, $scope.reset = function() {
            $scope.raffle = {
                question: "",
                prize: "",
                choices: [{
                    text: "",
                    votes: 0
                }, {
                    text: "",
                    votes: 0
                }],
                timetorun: null,
                data: !1,
                status: "none",
                uptime: null,
                winners: []
            }, $scope.winners = [], resetErrors(), $scope.hasWinner = !1, ChatManager.deleteRaffle($scope.channel)
        }, $scope.addChoice = function(index) {
            index + 1 >= $scope.raffle.choices.length && $scope.raffle.choices.length < max_raffle_options && $scope.raffle.choices.push({
                text: "",
                votes: 0,
                win: !1
            })
        }, $scope.removeChoice = function(index) {
            $scope.raffle.choices.length >= 2 && $scope.raffle.choices.splice(index, 1)
        };
        var filterChoices = function(choices) {
            for (var filtered = new Array, i = 0; i < choices.length; i++)
                if ("" !== choices[i].text && void 0 !== choices[i].text) {
                    var choice = choices[i];
                    choice.text = choice.text.substring(0, $scope.max_raffle_option_length), filtered.push(choices[i])
                }
            return filtered
        };
        $scope.$watch("raffle.question", function() {
            void 0 === $scope.raffle.question || "" === $scope.raffle.question ? ($scope.raffle.data = !0, $scope.input_errors.question = !0) : ($scope.raffle.data = !1, $scope.input_errors.question = !1), resetErrors()
        }), $scope.$watch("[raffle.choices]", function() {
            for (var choice_counter = 0, i = 0; i < $scope.raffle.choices.length; i++) "" !== $scope.raffle.choices[i].text && void 0 !== $scope.raffle.choices[i].text && choice_counter++;
            choice_counter >= 1 ? ($scope.raffle.data = !0, $scope.input_errors.choice = !1, resetErrors()) : ($scope.raffle.data = !1, $scope.input_errors.choice = !0)
        }, !0), $scope.$watch("input_errors.question", function() {
            $scope.raffle.start_button_disabled = $scope.input_errors.question === !1 && $scope.input_errors.choice === !1 ? !1 : !0
        }), $scope.$watch("input_errors.choice", function() {
            $scope.raffle.start_button_disabled = $scope.input_errors.question === !1 && $scope.input_errors.choice === !1 ? !1 : !0
        }), $scope.winners = [];
        var msgCallback = function(text) {
            switch ((json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params), method) {
                case "raffleMsg":
                    if (params.subscriberOnly && ($scope.raffle.subscriberOnly = !0), params.followerOnly && ($scope.raffle.followerOnly = !0), "started" === params.status) {
                        var uptime = Math.round((new Date).getTime() - new Date(params.start_time).getTime());
                        $scope.$apply(function() {
                            $scope.raffle.raffleResults = !1, $scope.raffle.question = params.question, $scope.raffle.prize = params.prize, $scope.raffle.choices = params.choices;
                            for (var i = 0; i < $scope.raffle.choices.length; i++) $scope.raffle.choices[i].barSize = function(index) {
                                return {
                                    width: $scope.raffle.choices[index].count / $scope.raffle.count * 100 + "%",
                                    opacity: $scope.raffle.choices[index].count / $scope.raffle.count * .7 + .2
                                }
                            };
                            null === $scope.raffle.uptime && ($scope.raffle.uptime = uptime, uptime_timeout = $timeout($scope.onTimeout, 1e3)), $scope.raffle.status = "running", $scope.raffleCollapse && ($scope.raffleCollapse = !1), $scope.$parent.raffleRunning = !0
                        })
                    } else "ended" === params.status ? $scope.$apply(function() {
                        $timeout.cancel(uptime_timeout), $scope.applyRaffle(params), $scope.raffle.status = "ended", null != $scope.waitForRaffleEnd && (ChatManager.winnerRaffle($scope.channel, $scope.waitForRaffleEnd), $scope.waitForRaffleEnd = null)
                    }) : "paused" === params.status ? $scope.$apply(function() {
                        $scope.applyRaffle(params), $scope.raffle.status = "paused"
                    }) : "deleted" === params.status ? $scope.$apply(function() {
                        $scope.raffle.status = "none"
                    }) : "hidden" === params.status && $scope.$apply(function() {
                        $scope.applyRaffle(params), $scope.raffle.status = "hidden"
                    });
                    break;
                case "winnerMsg":
                    params.forAdmin === !0 && params.winner_picked && -1 == $scope.winners.indexOf(params.winner_name) && $scope.$apply(function() {
                        $scope.hasWinner = !0, "undefined" == typeof $scope.raffle.winners[params.answer] && ($scope.raffle.winners[params.answer] = []), $scope.raffle.winners[params.answer].push({
                            name: params.winner_name,
                            email: params.winner_email
                        }), $scope.winners.push(params.winner_name), $scope.raffle.choices[params.answer].count > 0 && $scope.raffle.choices[params.answer].count--
                    })
            }
        };
        ChatManager.bind("raffleMessage", msgCallback), $scope.$on("$stateChangeStart", function() {
            ChatManager.unbind("raffleMessage", msgCallback)
        }), $scope.$on("$destroy", function() {
            ChatManager.unbind("raffleMessage", msgCallback)
        }), $scope.applyRaffle = function(params) {
            if (params.followerOnly && ($scope.raffle.followerOnly = !0), params.subscriberOnly && ($scope.raffle.subscriberOnly = !0), $scope.raffle.question = params.question, $scope.raffle.prize = params.prize, $scope.raffle.choices = params.choices, 1 == params.forAdmin)
                for (var i = 0; i < $scope.raffle.choices.length; i++) $scope.raffle.choices[i].barSize = function(index) {
                    return {
                        width: $scope.raffle.choices[index].count / $scope.raffle.count * 100 + "%",
                        opacity: $scope.raffle.choices[index].count / $scope.raffle.count * .7 + .2
                    }
                };
            $scope.raffleCollapse && ($scope.raffleCollapse = !1), $scope.$parent.raffleRunning = !0
        }
    }]), app.controller("RaffleViewerCtrl", ["$scope", "$rootScope", "$stateParams", "ChatManager", "DisplayService", "Following", "Follow", "$cookieStore", "$location", "$window", function($scope, $rootScope, $stateParams, ChatManager, DisplayService, Following, Follow, $cookieStore, $location, $window) {
        "undefined" == typeof $scope.session && ($scope.session = $rootScope.session), $scope.chatOptions = DisplayService.chatOptions, $scope.subscriberOnly = !1, $scope.followerOnly = !1, $rootScope.$watch("chatState", function(newVal) {
            0 == newVal && $scope.$destroy()
        }), $scope.voted = !1, $scope.channel = $stateParams.channel || $stateParams.user, $scope.channel = $scope.channel.toLowerCase(), $scope.name = $scope.name = $rootScope.session ? $rootScope.session.user_name : "UnknownSoldier", $scope.raffleRunning = !1, $scope.raffle = {}, $scope.canVote = function() {
            return $scope.chatOptions.subscribed || !$scope.subscriberOnly || $scope.chatOptions.isSuperAdmin ? $scope.chatOptions.following || !$scope.followerOnly || $scope.chatOptions.isSuperAdmin ? "all" : "follow" : "subscribe"
        }, $scope.getFollowing = function() {
            var f_params = {
                type: "user",
                follow_id: $scope.channel,
                authToken: $rootScope.session.authToken,
                user_name: $rootScope.session.user_name
            };
            Following.get(f_params, function(following) {
                following.following && following.following.follow_id && ($scope.chatOptions.following = !0)
            }, function() {})
        }, $scope.getFollowing(), $scope.vote = function() {
            return "subscribe" == $scope.canVote() ? void $scope.gotoSubscribeUrl() : "follow" == $scope.canVote() ? void $scope.addFollowAndVote() : (token = $rootScope.session ? $rootScope.session.authToken : null, ChatManager.voteRaffle($scope.name, $scope.raffle.selection, $scope.channel), $scope.voted = !0, void($scope.raffle.raffleResults = !0))
        }, $scope.addFollowAndVote = function() {
            params = {
                type: "user",
                follow_id: $scope.channel,
                authToken: $rootScope.session.authToken
            }, Follow.add(params, function() {
                $scope.chatOptions.following = !0, $scope.vote()
            })
        }, $scope.gotoSubscribeUrl = function() {
            var restHost = $location.host();
            if ($rootScope.session) {
                if ($scope.subscribeUrl = "https://" + restHost + "/" + $scope.channel + "/subscribe/" + $rootScope.session.user_name, "function" == typeof amplify.store && amplify.store("hitbox.session")) {
                    var htbxSession = amplify.store("hitbox.session");
                    $cookieStore.put("hitbox.session", htbxSession)
                }
            } else $scope.subscribeUrl = "https://" + restHost + "/" + $scope.medianame + "/subscribe/";
            $window.open($scope.subscribeUrl, "_blank")
        }, $scope.$watch("raffle.selection", function(newValue) {
            null != newValue && ($scope.raffle.vote_button_disabled = !1)
        }), $scope.$watch("raffle.status", function() {});
        var msgCallback = function(text) {
            if ((json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params), params.forAdmin !== !0) switch (method) {
                case "raffleMsg":
                    "started" === params.status ? "running" === $scope.raffle.status ? $scope.$apply(function() {
                        params.subscriberOnly && ($scope.subscriberOnly = !0), params.followerOnly && ($scope.followerOnly = !0), $scope.raffle.question = params.question, $scope.raffle.prize = params.prize, $scope.raffle.choices = params.choices, $scope.raffle.nameColor = params.nameColor
                    }) : "paused" === $scope.raffle.status ? ($scope.$apply(function() {
                        $scope.raffle.status = "running"
                    }), startRaffle(params)) : ($scope.$apply(function() {
                        $scope.raffle.status = "running", $scope.voted = !1
                    }), startRaffle(params)) : "ended" === params.status ? ($scope.$apply(function() {
                        $scope.raffle.status = "ended"
                    }), startRaffle(params)) : "paused" === params.status ? ($scope.$apply(function() {
                        $scope.raffle.status = "paused"
                    }), startRaffle(params)) : "delete" === params.status ? $scope.$apply(function() {
                        $scope.raffle = {}, $scope.raffle.status = "none"
                    }) : "hidden" === params.status && ($scope.raffle = {}, $scope.$apply(function() {
                        $scope.raffle.status = "none"
                    }));
                    break;
                case "winnerMsg":
                    $scope.$apply(function() {
                        $scope.raffle.isWinner = !0
                    })
            }
        };
        ChatManager.bind("raffleMessage", msgCallback), $scope.$on("$stateChangeStart", function() {}), $scope.$on("$destroy", function() {
            ChatManager.unbind("raffleMessage", msgCallback)
        });
        var startRaffle = function(params) {
            $scope.$apply(function() {
                params.subscriberOnly && ($scope.subscriberOnly = !0), params.followerOnly && ($scope.followerOnly = !0), $scope.raffle.question = params.question, $scope.raffle.prize = params.prize, $scope.raffle.choices = params.choices, $scope.raffle.nameColor = params.nameColor, $scope.raffle.raffleResults = !1, "paused" !== $scope.raffle.status && "ended" !== $scope.raffle.status && ($scope.raffle.raffleResults = !1, $scope.raffle.vote_button_disabled = !0), ("paused" === $scope.raffle.status || "ended" === $scope.raffle.status) && ($scope.raffle.raffleResults = !0), "undefined" != typeof params.answer && ($scope.voted = !0, $scope.raffle.raffleResults = !0, $scope.raffle.selection = params.answer), $scope.voted && ($scope.raffle.raffleResults = !0)
            })
        }
    }]), app.controller("AdminNavController", ["$scope", "$rootScope", "$state", "$stateParams", "appSettings", function($scope) {
        $scope.tabFile = "partials/sub/settings_admin_subscriptions.html", $scope.$watch("subtab", function(newVal, oldVal) {
            if (oldVal != newVal) switch (console.log($scope.subtab), $scope.subtab) {
                case "subscriptions":
                    $scope.tabFile = "partials/sub/settings_admin_subscriptions.html";
                    break;
                case "partnerships":
                    $scope.tabFile = "partials/sub/settings_admin_partnerships.html";
                    break;
                case "featured":
                    $scope.tabFile = "partials/sub/settings_admin_featuredmedia.html"
            }
        }, !0)
    }]), app.controller("AdminPartnershipController", ["$scope", "$rootScope", "$state", "$stateParams", "appSettings", "RevenuePlans", function($scope, $rootScope, $state, $stateParams, appSettings, RevenuePlans) {
        $scope.partner = {}, $scope.plan = {}, $scope.currencies = [{
            name: "EUR"
        }, {
            name: "USD"
        }], $scope.countries = [{
            name: "Austria,Germany,Switzerland"
        }, {
            name: "Australia,Belgium,Canada,Denmark,Finland,France,Luxembourg,Netherlands,Norway,Sweden,United Kingdom,United States"
        }, {
            name: "*"
        }], $scope.plan.plan_cpm = "0.00", $scope.userFormatResult = function(item) {
            return item.user_name
        }, $scope.userFormatSelection = function(item) {
            return item.user_name
        }, $scope.select2OptionsUser = {
            placeholder: "Username",
            allowClear: !1,
            minimumInputLength: 2,
            id: function(item) {
                return item.user_name
            },
            ajax: {
                url: appSettings.apiUri + "/user/list",
                dataType: "json",
                cache: !0,
                quietMillis: 400,
                data: function(term) {
                    return {
                        q: term,
                        limit: 1e3
                    }
                },
                results: function(data) {
                    return console.log(data), {
                        results: data
                    }
                }
            },
            formatResult: $scope.userFormatResult,
            formatSelection: $scope.userFormatSelection,
            escapeMarkup: function(m) {
                return m
            }
        }, $scope.teamFormatResult = function(item) {
            return item.group_name
        }, $scope.teamFormatSelection = function(item) {
            return item.group_name
        }, $scope.select2OptionsTeam = {
            placeholder: "Teamname",
            allowClear: !1,
            minimumInputLength: 2,
            id: function(item) {
                return item.group_name
            },
            ajax: {
                url: appSettings.apiUri + "/teamlist",
                dataType: "json",
                cache: !0,
                quietMillis: 400,
                data: function(term) {
                    return {
                        q: term,
                        limit: 100
                    }
                },
                results: function(data) {
                    return console.log(data), {
                        results: data.teams
                    }
                }
            },
            formatResult: $scope.teamFormatResult,
            formatSelection: $scope.teamFormatSelection,
            escapeMarkup: function(m) {
                return m
            }
        }, $scope.$watch("partner.user_name", function(newVal, oldVal) {
            oldVal != newVal && $scope.loadPartner("user", $scope.partner.user_name)
        }, !0), $scope.$watch("partner.team_name", function(newVal, oldVal) {
            oldVal != newVal && $scope.loadPartner("team", $scope.partner.team_name)
        }, !0), $scope.loadPartner = function(type, id) {
            $scope.partner.id = id, $scope.partner.type = type, $scope.params = {
                id: id,
                type: type,
                authToken: $rootScope.session.authToken
            }, RevenuePlans.get($scope.params, function(plans) {
                $scope.plans = plans.plans
            }, function() {})
        }, $scope.addPlan = function() {
            $scope.params = {
                id: $scope.partner.id,
                type: $scope.partner.type,
                authToken: $rootScope.session.authToken,
                plan: $scope.plan
            }, RevenuePlans.add($scope.params, function() {
                $scope.loadPartner($scope.partner.type, $scope.partner.id), $scope.plan = {}
            })
        }, $scope.deletePlan = function(plan_id) {
            $scope.params = {
                id: $scope.partner.id,
                type: $scope.partner.type,
                authToken: $rootScope.session.authToken,
                plan_id: plan_id
            }, RevenuePlans["delete"]($scope.params, function() {
                $scope.loadPartner($scope.partner.type, $scope.partner.id), $scope.plan = {}
            })
        }
    }]), app.controller("AdminSubscriptionController", ["$scope", "$rootScope", "$state", "$stateParams", "appSettings", "SubPlanAdmin", "ChatIcons", function($scope, $rootScope, $state, $stateParams, appSettings, SubPlanAdmin, ChatIcons) {
        function createOptions(listName) {
            var options = {
                placeholder: "benefits",
                connectWith: ".apps-container",
                activate: function() {},
                beforeStop: function() {},
                change: function() {},
                create: function() {},
                deactivate: function() {},
                out: function() {},
                over: function() {},
                receive: function() {},
                remove: function() {},
                sort: function() {},
                start: function() {},
                stop: function() {},
                update: function() {}
            };
            return options
        }
        $scope.partner = {}, $scope.currencies = ["EUR", "USD"], $scope.userFormatResult = function(item) {
            return item.user_name
        }, $scope.userFormatSelection = function(item) {
            return item.user_name
        }, $scope.select2OptionsUser = {
            placeholder: "Username",
            allowClear: !1,
            minimumInputLength: 2,
            id: function(item) {
                return item.user_name
            },
            ajax: {
                url: appSettings.apiUri + "/user/list",
                dataType: "json",
                cache: !0,
                quietMillis: 400,
                data: function(term) {
                    return {
                        q: term,
                        limit: 1e3
                    }
                },
                results: function(data) {
                    return console.log(data), {
                        results: data
                    }
                }
            },
            formatResult: $scope.userFormatResult,
            formatSelection: $scope.userFormatSelection,
            escapeMarkup: function(m) {
                return m
            }
        }, $scope.teamFormatResult = function(item) {
            return item.group_name
        }, $scope.teamFormatSelection = function(item) {
            return item.group_name
        }, $scope.select2OptionsTeam = {
            placeholder: "Teamname",
            allowClear: !1,
            minimumInputLength: 2,
            id: function(item) {
                return item.group_name
            },
            ajax: {
                url: appSettings.apiUri + "/teamlist",
                dataType: "json",
                cache: !0,
                quietMillis: 400,
                data: function(term) {
                    return {
                        q: term,
                        limit: 100
                    }
                },
                results: function(data) {
                    return console.log(data), {
                        results: data.teams
                    }
                }
            },
            formatResult: $scope.teamFormatResult,
            formatSelection: $scope.teamFormatSelection,
            escapeMarkup: function(m) {
                return m
            }
        }, $scope.$watch("partner.user_name", function(newVal, oldVal) {
            oldVal != newVal && $scope.loadSubscription("user", $scope.partner.user_name)
        }, !0), $scope.$watch("partner.team_name", function(newVal, oldVal) {
            oldVal != newVal && $scope.loadSubscription("team", $scope.partner.team_name)
        }, !0), $scope.loadSubscription = function(type, id) {
            $scope.cacheBuster = Number(new Date), $scope.partner.id = id, $scope.partner.type = type, $scope.params = {
                id: id,
                type: type,
                authToken: $rootScope.session.authToken
            }, SubPlanAdmin.get($scope.params, function(response) {
                $scope.subscription = response.subscription, $scope.subscription.emoji = {}, "team" == $scope.partner.type && ($scope.subscription.members_before = $scope.subscription.members_enabled)
            }, function() {})
        }, $scope.updatePlan = function() {
            $scope.params = {
                id: $scope.partner.id,
                type: $scope.partner.type,
                authToken: $rootScope.session.authToken,
                subscription: $scope.subscription
            }, SubPlanAdmin.update($scope.params, function() {
                $scope.loadSubscription($scope.partner.type, $scope.partner.id)
            }, function() {})
        }, $scope.addPlan = function() {
            $scope.params = {
                id: $scope.partner.id,
                type: $scope.partner.type,
                authToken: $rootScope.session.authToken,
                subscription: $scope.subscription
            }, SubPlanAdmin.add($scope.params, function() {
                $scope.loadSubscription($scope.partner.type, $scope.partner.id)
            }, function() {})
        }, $scope.addEmoji = function() {
            $scope.params = {
                media_id: $scope.subscription.user_name,
                icon_name: $scope.subscription.emoji.name,
                icon_path: $scope.subscription.emoji.file,
                authToken: $rootScope.session.authToken,
                icon_premium: 1
            }, ChatIcons.add($scope.params, function() {
                $scope.loadSubscription($scope.partner.type, $scope.partner.id)
            })
        }, $scope.sortableOptionsList = [createOptions("A"), createOptions("B")], $scope.membersOptionsList = [createOptions("A"), createOptions("B")], $scope.cbupload = function() {
            return function(data) {
                data.emoji && ($scope.subscription.emoji = {}, $scope.subscription.emoji.file = data.emoji.file, $scope.subscription.emoji.name = $scope.subscription.plan_prefix), data.emoji || $scope.loadSubscription($scope.partner.type, $scope.partner.id)
            }
        }
    }]), app.controller("AdminFeaturedController", ["$scope", "$rootScope", "$state", "$stateParams", "appSettings", "Media", "MediaFeatured", "$window", function($scope, $rootScope, $state, $stateParams, appSettings, Media, MediaFeatured, $window) {
        $scope.featured = {
            weight: 10,
            foreced: 0
        }, $scope.getMedia = function() {
            $scope.media = {}, $scope.params = {
                media_type: "live",
                authToken: $scope.session.authToken,
                nocache: !0,
                showHidden: !0,
                media_name: "list",
                liveonly: !1,
                featured: "list",
                limit: 1e4
            }, MediaRes = Media.get($scope.params, function(media) {
                $scope.media.livestream = media.livestream
            }), $scope.params.media_type = "video", MediaRes = Media.get($scope.params, function(media) {
                $scope.media.video = media.video
            })
        }, $scope.userFormatResult = function(item) {
            return item.media_name
        }, $scope.userFormatSelection = function(item) {
            return item.media_name
        }, $scope.select2OptionsUser = {
            placeholder: "Username",
            allowClear: !1,
            minimumInputLength: 2,
            id: function(item) {
                return item.media_id
            },
            ajax: {
                url: appSettings.apiUri + "/media/live/list",
                dataType: "json",
                cache: !0,
                quietMillis: 400,
                data: function(term) {
                    return {
                        search: term,
                        showHidden: !0,
                        liveonly: !1,
                        limit: 100
                    }
                },
                results: function(data) {
                    return console.log(data), {
                        results: data.livestream
                    }
                }
            },
            formatResult: $scope.userFormatResult,
            formatSelection: $scope.userFormatSelection,
            escapeMarkup: function(m) {
                return m
            }
        }, $scope.saveChanges = function(media) {
            params = {
                media_id: media.media_id,
                weight: media.media_featured_weight,
                forced: media.media_featured_forced,
                countries: media.media_featured_countries,
                featured: !0,
                authToken: $scope.session.authToken
            }, MediaFeatured.put(params, function() {
                $scope.getMedia()
            })
        }, $scope.featureChannel = function(featured) {
            params = {
                media_id: featured.media_id,
                weight: featured.weight,
                forced: featured.forced,
                countries: featured.countries,
                featured: !0,
                authToken: $scope.session.authToken
            }, MediaFeatured.put(params, function() {
                $scope.getMedia()
            }, function() {
                alert("Oops, something went wrong!")
            })
        }, $scope.removeMedia = function(media) {
            var deleteMedia = $window.confirm("Are you absolutely sure?");
            deleteMedia && (params = {
                media_id: media.media_id,
                authToken: $scope.session.authToken
            }, MediaFeatured["delete"](params, function() {
                $scope.getMedia()
            }, function() {
                alert("Oops, something went wrong!")
            }))
        };
        var isForced = function() {
            for (var i = 0; i < $scope.media.livestream.length; i++) {
                var media = $scope.media.livestream[i];
                if (1 == parseInt(media.media_featured_forced)) return !0
            }
            return !1
        };
        $scope.getScore = function(weight, forced) {
            var total = 0,
                score = 0;
            if (forced = parseInt(forced), isForced() && 1 != forced) return 0;
            for (var i = 0; i < $scope.media.livestream.length; i++) {
                var media = $scope.media.livestream[i];
                1 == media.media_is_live && (isForced() && 1 == parseInt(media.media_featured_forced) ? total += parseInt(media.media_featured_weight) : isForced() || (total += parseInt(media.media_featured_weight)))
            }
            return total > 0 && (score = Math.round(weight / total * 100 * 100) / 100), score
        }, $scope.getMedia()
    }]), app.controller("VideoEditorDialog", ["$scope", "$rootScope", "$dialog", function($scope, $rootScope, $dialog) {
        $scope.opts = {
            backdrop: !0,
            keyboard: !1,
            cache: !1,
            backdropClick: !0,
            templateUrl: "partials/sub/settings_editor_recording.html",
            controller: "VideoEditorController",
            dialogClass: "recordings-modal"
        }, $scope.openEditor = function() {
            var d = $dialog.dialog($scope.opts);
            d.open().then(function() {})
        }
    }]), app.controller("MediaEditorDialog", ["$scope", "$rootScope", "$dialog", function($scope, $rootScope, $dialog) {
        $scope.opts = {
            backdrop: !0,
            keyboard: !1,
            cache: !1,
            backdropClick: !0,
            templateUrl: "partials/sub/settings_editor_video.html",
            controller: "VideoEditorController",
            dialogClass: "videos-modal"
        }, $scope.openEditor = function() {
            var d = $dialog.dialog($scope.opts);
            d.open().then(function() {})
        }
    }]), app.controller("VideoEditorController", ["$scope", "$rootScope", "$state", "$stateParams", "$timeout", "Games", "Media", "appSettings", "VideoEditor", function($scope, $rootScope, $state, $stateParams, $timeout, Games, Media, appSettings, VideoEditor) {
        $scope.original = !0, $scope.authToken = $scope.session.authToken, $scope.VideoEditor = VideoEditor, $scope.$watch("VideoEditor.editor", function(newVal) {
            $scope.editor = newVal
        }), $scope.$watch("VideoEditor.showEditor", function(newVal) {
            $scope.showEditor = newVal
        }), Games.get({
            limit: 1e3
        }, function(games) {
            $scope.games = games
        }), $scope.hideEditor = function() {
            VideoEditor.editor = {}, VideoEditor.showEditorVideo = !1, VideoEditor.showEditorRec = !1
        }, hms = function(d) {
            d = Number(d);
            var h = Math.floor(d / 3600),
                m = Math.floor(d % 3600 / 60),
                s = Math.floor(d % 3600 % 60);
            return (h > 0 ? h + ":" : "") + (m > 0 ? (h > 0 && 10 > m ? "0" : "") + m + ":" : "0:") + (10 > s ? "0" : "") + s
        };
        var hmsToSeconds = function(str) {
            for (var p = str.toString().split(":"), s = 0, m = 1; p.length > 0;) s += m * parseInt(p.pop(), 10), m *= 60;
            return s
        };
        $scope.timeRange = [0, 100], $scope.rangeFormat = new Array, $scope.editor.tnIndex = 0, $scope.timestampExp = /([0-9]?[0-9]):([0-9]?[0-9])$/g, $scope.updateStartTime = function() {
            newStart = $scope.rangeSteps * (hmsToSeconds($scope.rangeFormat[0]) + 1), isNaN(newStart) && (newStart = 0), newStart > $scope.editor.rec_duration_sec && (newStart = 0), newStart < 0 && (newStart = 0), newStart > $scope.timeRange[1] && (newStart = $scope.timeRange[1] - $scope.rangeSteps), $scope.timeRange[0] = newStart, $scope.rangeFormat[0] = hms(Math.round($scope.editor.rec_duration_sec) * $scope.timeRange[0] / 100)
        }, $scope.updateEndTime = function() {
            newEnd = $scope.rangeSteps * (hmsToSeconds($scope.rangeFormat[1]) + 1), isNaN(newEnd) && (newEnd = 100), newEnd > 100 && (newEnd = 100), newEnd < $scope.timeRange[0] && (newEnd = $scope.timeRange[0] + $scope.rangeSteps), $scope.timeRange[1] = newEnd, $scope.rangeFormat[1] = hms(Math.round($scope.editor.rec_duration_sec) * $scope.timeRange[1] / 100)
        }, $scope.user_name = $stateParams.user, $scope.createVideo = function() {
            $scope.saved = !0, videoParams = {
                user_name: $scope.user_name,
                authToken: $scope.session.authToken,
                media_type: "video",
                media_description: $scope.editor.media_description,
                media_title: $scope.editor.rec_title,
                media_status: $scope.editor.rec_title,
                media_name: $scope.user_name,
                media_tags: $scope.editor.media_tags,
                media_hidden: $scope.editor.media_hidden,
                media_category_id: $scope.editor.rec_category_id,
                clip_duration: $scope.editor.clipDuration,
                clip_start: $scope.editor.clipStart,
                rec_session: $scope.editor.rec_session,
                original: $scope.original
            }, Media.create(videoParams, function() {
                $scope.hideEditor()
            }, function(error) {
                console.log(error), $scope.error.rec_title = "Title too short", $scope.saved = !1
            })
        }, $scope.saveVideo = function() {
            $scope.saved = !0, video = [], video[0] = $scope.editor, videoParams = {
                media_type: "video",
                media_name: $scope.editor.media_id,
                video: video,
                authToken: $rootScope.session.authToken
            }, Media.update(videoParams, function() {
                $scope.hideEditor()
            }, function() {
                $scope.saved = !1
            })
        }, $scope.$watch("[timeRange,editor,start,end]", function() {
            startDuration = Math.round($scope.editor.rec_duration_sec) * $scope.timeRange[0] / 100, endDuration = Math.round($scope.editor.rec_duration_sec) * $scope.timeRange[1] / 100, $scope.original = 0 == $scope.timeRange[0] && 100 == $scope.timeRange[1] ? !0 : !1, $scope.editor.clipDuration = endDuration - startDuration, $scope.editor.tnIndex = 0, $scope.start = $scope.editor.rec_duration_sec * $scope.timeRange[0] / 100, $scope.end = $scope.editor.rec_duration_sec * $scope.timeRange[1] / 100, $scope.editor.clipStart = startDuration, $scope.editor.clipStart = startDuration, $scope.rangeFormat[0] = hms(startDuration), $scope.rangeFormat[1] = hms(endDuration), $scope.rangeSteps = 100 / $scope.editor.rec_duration_sec, $scope.editor.rec_session && ($scope.editor.tnFolder = $scope.editor.rec_session.substring(0, 3))
        }, !0), $scope.seek = function(sec) {
            stop = $timeout(function() {
                $f("player") && $f("player").seek(sec)
            }, 300)
        }, $scope.$watch("[start,mousedown]", function() {
            $scope.start != $scope.startold && (stop && $timeout.cancel(stop), $scope.seek($scope.start), $scope.startold = $scope.start)
        }, !0), $scope.$watch("[end,mousedown]", function() {
            $scope.end != $scope.endold && (stop && $timeout.cancel(stop), $scope.seek($scope.end), $scope.endold = $scope.end)
        }, !0), $scope.gameFormatResult = function(item) {
            return item.category_name
        }, $scope.gameFormatSelection = function(item) {
            return item.category_name
        }, $scope.select2Options = {
            placeholder: "Select a Game",
            allowClear: !1,
            minimumInputLength: 2,
            id: function(item) {
                return item.category_id
            },
            ajax: {
                url: appSettings.apiUri + "/games",
                dataType: "json",
                cache: !0,
                quietMillis: 400,
                data: function(term) {
                    return {
                        q: term,
                        limit: 100
                    }
                },
                results: function(data) {
                    return {
                        results: data.categories
                    }
                }
            },
            initSelection: function(element, callback) {
                var id = $(element).val();
                "" === id || isNaN(id) || $.ajax(appSettings.apiUri + "/game/" + id, {
                    cache: !0,
                    dataType: "json"
                }).done(function(data) {
                    callback(data.category)
                })
            },
            formatResult: $scope.gameFormatResult,
            formatSelection: $scope.gameFormatSelection,
            escapeMarkup: function(m) {
                return m
            }
        }
    }]), app.controller("RecordingsSettingsController", ["$scope", "$rootScope", "$stateParams", "$state", "$dialog", "Recordings", "Media", "Games", "VideoEditor", "$timeout", function($scope, $rootScope, $stateParams, $state, $dialog, Recordings, Media, Games, VideoEditor, $timeout) {
        $scope.isLoading = !0, $rootScope.hasRecordings = !0, $scope.user_name = $stateParams.user, $scope.recLimit = 20, $scope.params = {
            user_name: $scope.user_name,
            authToken: $scope.session.authToken
        }, $scope.VideoEditor = VideoEditor, $scope.$watch("VideoEditor.editor", function(newVal) {
            $scope.editor = newVal
        }), $scope.$watch("VideoEditor", function() {
            $scope.showEditorRec = VideoEditor.showEditorRec, $scope.showEditorVideo = VideoEditor.showEditorVideo
        }, !0), $scope.hideEditor = function() {
            VideoEditor.editor = {}, VideoEditor.showEditorRec = !1, VideoEditor.showEditorVideo = !1
        }, $scope.nextPage = function() {
            $scope.recLimit = $scope.recLimit + 20
        }, $scope.$watch("[recLimit,recSearch]", function() {
            $scope.noSearchResult = !1, $scope.params.limit = $scope.recLimit, $scope.params.search = $scope.recSearch ? $scope.recSearch : "", "" === $scope.params.search ? $scope.getMedia() : $scope.delayMedia()
        }, !0);
        var stop = null;
        $scope.delayMedia = function() {
            $scope.noSearchResult = !0, $timeout.cancel(stop), stop = $timeout(function() {
                $scope.getMedia()
            }, 800)
        }, $scope.getMedia = function() {
            $scope.isLoading = !0, RecRes = Recordings.get($scope.params, function(recordings) {
                $scope.recordings = recordings;
                for (var i = 0; i < $scope.recordings.length; i++) $scope.recordings[i].rec_date_added_format = moment($scope.recordings[i].rec_date_added).format("MMMM D, YYYY HH:mm");
                $scope.recCount = recordings.length, $scope.isLoading = !1, $scope.recCount < 1 ? $rootScope.hasRecordings = !1 : $scope.hasRecordings = !0
            }, function() {
                $rootScope.hasRecordings = !1
            })
        }, $scope.orderProp = "media_date_added", $scope.orderName = "Newest", $scope.showEditorRec = VideoEditor.showEditorRec, $scope.editRec = function(index) {
            VideoEditor.editor = $scope.recordings[index], VideoEditor.showEditorRec = !0, $scope.showEditorRec = !0
        }, $scope.deleteRecordings = function() {
            var title = "Are you sure?",
                msg = "",
                btns = [{
                    result: !1,
                    label: "Cancel",
                    cssClass: "btnOutline"
                }, {
                    result: !0,
                    label: "Delete",
                    cssClass: "btn-red"
                }];
            $dialog.messageBox(title, msg, btns).open().then(function(result) {
                deleteParams = {
                    user_name: $scope.user_name,
                    authToken: $scope.session.authToken,
                    recordings: $scope.recordings,
                    action: "delete"
                }, result && Recordings.remove(deleteParams, function() {
                    $state.reload()
                })
            })
        }, $scope.deleteMsgBox = function(index) {
            var rec = $scope.recordings[index],
                title = "Are you sure you want to delete this recording?",
                msg = "",
                btns = [{
                    result: !1,
                    label: "Cancel",
                    cssClass: "btnOutline"
                }, {
                    result: !0,
                    label: "Delete",
                    cssClass: "btn-red"
                }];
            deleteParams = {
                user_name: $scope.user_name,
                authToken: $scope.session.authToken,
                rec_session: rec.rec_session
            }, $dialog.messageBox(title, msg, btns).open().then(function(result) {
                result && Recordings.remove(deleteParams, function() {
                    $scope.recordings.splice(index, 1)
                })
            })
        }
    }]), app.controller("FollowersSettingsController", function($scope, $rootScope, $stateParams, FollowerList) {
        $scope.displayState = "loading", $scope.followers = [], $scope.followers_total = 0, $scope.pages = {
            current: 1,
            max: 1
        }, $scope.changeSort = function(value) {
            return $scope.sort == value ? void($scope.reverse = !$scope.reverse) : ($scope.sort = value, void($scope.reverse = "date_added" == value ? !0 : !1))
        };
        var params = {
            user_name: $stateParams.user,
            authToken: $rootScope.session.authToken,
            nocache: !0,
            sort: "date_added",
            reverse: !1
        };
        $scope.sort = "date_added", $scope.$watch("sort", function(newVal) {
            params.sort = newVal, $scope.getFollowers()
        }), $scope.$watch("reverse", function(newVal) {
            params.reverse = newVal, $scope.getFollowers()
        }), $scope.getFollowers = function() {
            FollowerList.get(params, function(list) {
                $scope.followers = list.followers, $scope.followers_total = list.max_results, $scope.followers_total || ($scope.followers_total = 0), $scope.pages.max = parseInt($scope.followers_total / 100) + 1, $scope.displayState = list.followers.length ? "data" : "no_data"
            }, function() {
                $scope.displayState = "no_data"
            })
        }, $scope.getFollowers(), $scope.selectPage = function(page) {
            params.offset = 100 * (page - 1), $scope.getFollowers()
        }
    }), app.controller("FollowingSettingsController", function($scope, $rootScope, $state, $stateParams, Following, Follow, $timeout) {
        $scope.displayState = "loading", $scope.following_total = 0, $scope.following = [], $scope.pages = {
            current: 1,
            max: 1
        };
        var authToken = {};
        $rootScope.session && $rootScope.session.authToken && (authToken = $rootScope.session.authToken);
        var params = {
            type: "user",
            user_name: $stateParams.user,
            authToken: authToken,
            nocache: !0,
            sort: "date_added",
            reverse: !1
        };
        $scope.$watch("sort", function(newVal) {
            params.sort = newVal, $scope.getFollowing()
        }), $scope.$watch("reverse", function(newVal) {
            params.reverse = newVal, $scope.getFollowing()
        }), $scope.getFollowing = function() {
            Followingres = Following.getAll(params, function(list) {
                $scope.following = list.following, $scope.following_total = list.max_results, $scope.following_total || ($scope.following_total = 0), $scope.pages.max = parseInt($scope.following_total / 100) + 1, $scope.displayState = list.following.length ? "data" : "no_data"
            }, function() {
                $scope.displayState = "no_data"
            })
        }, $scope.getFollowing(), $scope.selectPage = function(page) {
            params.offset = 100 * (page - 1), $scope.getFollowing()
        }, $scope.updateFollowing = function() {
            $timeout(function() {
                Followingres.$update(params, function() {
                    $scope.getFollowing()
                }, function() {})
            }, 100)
        }, $scope.unFollowNow = function(type, follow_id) {
            unfollow_params = {
                type: type,
                follow_id: follow_id,
                authToken: $scope.session.authToken
            }, Follow["delete"](unfollow_params, function() {
                $scope.getFollowing()
            }, function() {})
        }
    }), app.controller("SettingsController", ["$scope", "$rootScope", "$state", "$stateParams", "$http", "$location", "User", "Forms", "Media", "Auth", "$timeout", "appSettings", "DisplayService", "$dialog", function($scope, $rootScope, $state, $stateParams, $http, $location, User, Forms, Media, Auth, $timeout, appSettings, DisplayService, $dialog) {
        $scope.navState = DisplayService.navState, $scope.navState.setTab(""), $scope.tab = $state.current.tab, $scope.subtab = $state.current.subtab, $scope.navState.setTab($scope.tab), $scope.showCancel = {}, $scope.save = {}, $scope.save_status = {}, $scope.editItem = {}, DisplayService.deviceSize.update(), $scope.$on("$stateChangeStart", function(event, toState) {
            $scope.tab = toState.tab, $scope.navState.setTab($scope.tab)
        }), $scope.edit = {
            editPassword: !1,
            editEmail: !1
        }, $scope.loggedIn || "settings" !== $state.current.section || (console.log("not logged in"), console.log("Access denied"), $location.url("/401")), params = {
            params: {
                token: $scope.session ? $scope.session.authToken : !1,
                nocache: !0
            }
        };
        var appResource = "desktop";
        $rootScope.session && $rootScope.session.app && (appResource = $rootScope.session.app), $http.get(appSettings.apiUri + "/auth/valid/" + appResource, params).success(function() {
            $scope.loadUser = function() {
                params = {
                    user_name: $stateParams.user,
                    token: $scope.session ? $scope.session.authToken : !1,
                    nocache: !0
                }, userResource = User.get(params, function(user) {
                    $scope.user = user, $scope.user.user_display_name = $scope.user.user_name, $scope.backup_username = $scope.user.user_display_name, $scope.backup_email = $scope.user.user_email, $scope.user.twitter_account = $scope.user.twitter_account ? "@" + $scope.user.twitter_account : "@", $scope.user.twitter_enabled = 1 == $scope.user.twitter_enabled ? !0 : !1, $scope.backup_twitter_account = $scope.user.twitter_account, $scope.error = {}
                }, function() {})
            }, $scope.checkTwitterButton = function() {
                $scope.user.twitter_enabled || $scope.saveUser()
            }, $scope.verifyPassword = function() {
                $scope.error = {}, $scope.user.user_password_new && $scope.user.user_password_new.length > 0 && ($scope.error = Forms.verifyPassword($scope.user.user_password_new, $scope.user.user_password2_new))
            }, $scope.verifyEmail = function() {
                $scope.error = {}, $scope.user.user_email && ($scope.error = Forms.verifyEmail($scope.user.user_email))
            }, $scope.verifyDisplayName = function() {
                $scope.error = {}, $scope.user.user_display_name && ($scope.error = Forms.verifyDisplayName($scope.user.user_display_name, $scope.user.user_name))
            }, $scope.cancel = function() {
                $scope.showCancel = {}, $scope.editItem = {}, $scope.save_status = {}, $scope.loadUser()
            }, $scope.uploadComplete = function(content, completed) {
                completed && content.length > 0 ? $scope.loadUser() : (params = {
                    authToken: $scope.session.authToken
                }, userResource.$update(params))
            };
            var relog = !1;
            $scope.saveUser = function(part) {
                $scope.showCancel[part] = !1, $scope.error.user_email || $scope.error.user_password || $scope.error.user_password_new || $scope.error.user_password2_new || $scope.error.user_display_name || ($scope.save_status[part] = "saving", params = {
                    authToken: $scope.session.authToken
                }, relog = !1, $scope.user.user_display_name != $scope.user.user_name && (params.user_display_name = $scope.user.user_display_name, relog = !0), userResource.$update(params, function() {
                    $scope.save_status[part] = "saved", $timeout($scope.afterUpdate, 2e3)
                }, function(error) {
                    switch (console.log(error), error.data) {
                        case "email_in_use":
                            $scope.error.user_email = "Email already in use.";
                            break;
                        case "invalid_original_password":
                            $scope.error.user_password = "Please provide your current password!";
                            break;
                        default:
                            $scope.error.user_email = ""
                    }
                    $scope.save_status[part] = "error"
                }))
            }, $scope.deleteMsgBox = function(part) {
                var title = "You have unsaved changes. Are you sure you want to continue?",
                    msg = "",
                    btns = [{
                        result: !1,
                        label: "Cancel",
                        cssClass: "btn-outline"
                    }, {
                        result: !0,
                        label: "Continue",
                        cssClass: "btn-blue"
                    }];
                $dialog.messageBox(title, msg, btns).open().then(function(result) {
                    result && ($scope.editItem = {}, $scope.editItem[part] = !0, $scope.save_status[part] = "save", $scope.showCancel[part] = !0, $scope.user.user_password = "", $scope.user.user_password_new = "", $scope.user.user_password2_new = "", $scope.user.user_display_name = $scope.backup_username, $scope.user.user_email = $scope.backup_email, $scope.user.twitter_account = $scope.backup_twitter_account)
                })
            }, $scope.switchOpen = function(part) {
                if (!$scope.editItem[part]) {
                    if (($scope.editItem.name || $scope.editItem.pwd || $scope.editItem.email || $scope.editItem.tw) && ($scope.backup_username != $scope.user.user_display_name || $scope.user.user_email != $scope.backup_email || $scope.user.twitter_account != $scope.backup_twitter_account || $scope.user.user_password || $scope.user.user_password_new || $scope.user.user_password2_new)) return void $scope.deleteMsgBox(part);
                    $scope.editItem = {}, $scope.editItem[part] = !0, $scope.save_status[part] = "save", $scope.showCancel[part] = !0
                }
            }, $scope.afterUpdate = function() {
                $scope.editItem = {}, $scope.showCancel = {}, $scope.save_status = {}, relog ? (relog = !1, Auth.login({
                    authToken: $rootScope.session.authToken
                }, function() {
                    $scope.loadUser()
                }, function() {
                    $cookieStore.remove("hitbox"), $cookieStore.remove("hitbox.session"), "function" == typeof amplify.store && amplify.store("hitbox.session", null), $rootScope.session = "", $rootScope.loggedIn = !1, $route.reload()
                })) : $scope.loadUser()
            }, $scope.cbupload = function() {
                return function() {
                    $scope.loadUser()
                }
            }, $scope.cbdelete = function() {
                return function() {
                    $scope.loadUser()
                }
            }, $scope.cberrorcover = function() {
                $scope.errors = {
                    user_cover: "Error uploading your image"
                }
            }, $scope.cberrorlogo = function() {
                $scope.errors = {
                    user_logo: "Error uploading your image"
                }
            }, $scope.loadUser()
        }).error(function() {
            console.log("Access denied"), $location.url("/401")
        })
    }]), app.controller("MediaSettingsController", ["$scope", "$state", "$timeout", "$rootScope", "$stateParams", "$dialog", "Media", "Games", "Commercials", "MediaStatus", "uploadYT", "MediaKey", "appSettings", "MediaFeatured", "VideoEditor", "Analytics", "PlaybackService", "Editors", "Editor", "$window", "ChatModerators", "Hosters", "SubscriptionInfo", "Ext1Status", function($scope, $state, $timeout, $rootScope, $stateParams, $dialog, Media, Games, Commercials, MediaStatus, uploadYT, MediaKey, appSettings, MediaFeatured, VideoEditor, Analytics, PlaybackService, Editors, Editor, $window, ChatModerators, Hosters, SubscriptionInfo, Ext1Status) {
        $scope.VideoEditor = VideoEditor, $scope.$watch("VideoEditor", function() {
            $scope.showEditorRec = VideoEditor.showEditorRec, $scope.showEditorVideo = VideoEditor.showEditorVideo
        }, !0);
        var stop = null;
        $scope.ads = 3, $scope.counter = 90, $scope.currentPage = 0, $scope.pageSize = 1, $scope.ready = !1, $scope.actionId = {}, $scope.limit = 10, $scope.session = $rootScope.session, $scope.googleLoggedIn = !1, $scope.loaded = !1, $rootScope.hasMedia = !0, $rootScope.editor = {}, $scope.hadMedia = !1, $rootScope.hasVideos = !0, $scope.isLoading = !0, $scope.save = {
            save_status: "saved"
        }, $scope.numberOfPages = function() {
            return Math.ceil($scope.media.livestream.length / $scope.pageSize)
        }, tab = $stateParams.tab || $state.current.tab, "livestreams" == tab ? $scope.params = {
            media_name: $stateParams.user,
            media_type: "live",
            authToken: $scope.session.authToken,
            nocache: !0,
            showHidden: !0,
            filter: "newfirst",
            liveonly: !1
        } : ("recordings" == tab || "videos" == tab) && ($scope.params = {
            media_name: $stateParams.user,
            media_type: "video",
            list: "list",
            limit: $scope.limit,
            authToken: $scope.session.authToken,
            nocache: !0,
            showHidden: !0,
            liveonly: !1
        }), $scope.feedbackTimeout = null, $scope.displaySavedFeedback = function() {
            null === $scope.feedbackTimeout && (console.log("saving done"), $scope.save.save_status = "saved")
        }, $scope.subEnabled = !1, $scope.g2aEnabled = !1, $scope.dashboards = [], $scope.getSubscriptionInfo = function() {
            subParams = {
                type: "channel",
                type_id: $stateParams.user
            }, SubscriptionInfo.get(subParams, function(subscription) {
                $scope.subEnabled = !0, $scope.subscription = subscription.subscription, $scope.g2aEnabled = 1 == $scope.subscription.plan.plan_g2a ? !0 : !1
            })
        }, $scope.triggerG2A = function() {
            $scope.g2aEnabled = !$scope.g2aEnabled;
            var g2aParams = {
                channel: $stateParams.user,
                authToken: $scope.session.authToken,
                enabled: $scope.g2aEnabled
            };
            Ext1Status.update(g2aParams, function() {}, function() {})
        }, $scope.getSubscriptionInfo(), $scope.getEditors = function() {
            Editors.get({
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken
            }, function(list) {
                $scope.editors.list = list.list
            }, function() {})
        }, $scope.getDashboards = function() {
            Editor.get({
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken
            }, function(list) {
                $scope.dashboards = list.list
            }, function() {})
        }, $scope.removeDashboard = function(index) {
            var removeMe = $scope.dashboards[index],
                params = {
                    user_name: removeMe.user_name,
                    authToken: $rootScope.session.authToken,
                    editor: $stateParams.user,
                    remove: !0
                };
            Editors.add(params, function() {
                $scope.dashboards.splice(index, 1)
            }, function() {})
        }, $scope.getHosters = function() {
            Hosters.get({
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken
            }, function(list) {
                $scope.hosters.list = list.hosters
            }, function() {})
        }, $scope.moderators = {
            list: [],
            newModerator: "",
            error: !1
        }, $scope.hosters = {
            list: []
        }, $scope.getModerators = function() {
            ChatModerators.get({
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken
            }, function(list) {
                $scope.moderators.list = list.moderators
            }, function() {})
        }, $scope.addModerator = function() {
            var params = {
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken,
                moderator: $scope.moderators.newModerator
            };
            ChatModerators.add(params, function() {
                $scope.moderators.list.push({
                    user_name: $scope.moderators.newModerator
                }), $scope.moderators.newModerator = ""
            }, function() {
                $scope.moderators.error = !0
            })
        }, $scope.removeModerator = function(index) {
            var removeMe = $scope.moderators.list[index],
                params = {
                    user_name: $stateParams.user,
                    authToken: $rootScope.session.authToken,
                    moderator: removeMe.user_name,
                    remove: !0
                };
            ChatModerators.add(params, function() {
                $scope.moderators.list.splice(index, 1)
            }, function() {})
        }, $scope.getEditors(), $scope.getDashboards(), $scope.getModerators(), $scope.getHosters(), $scope.userFormatResult = function(item) {
            return item.user_name
        }, $scope.userFormatSelection = function(item) {
            return item.user_name
        }, $scope.select2OptionsUser = {
            placeholder: "Username",
            allowClear: !1,
            minimumInputLength: 2,
            multiple: !0,
            id: function(item) {
                return item.user_name
            },
            ajax: {
                url: appSettings.apiUri + "/user/list",
                dataType: "json",
                cache: !1,
                quietMillis: 400,
                data: function(term) {
                    return {
                        q: term,
                        limit: 1e3
                    }
                },
                results: function(data) {
                    return {
                        results: data
                    }
                }
            },
            formatResult: $scope.userFormatResult,
            formatSelection: $scope.userFormatSelection,
            escapeMarkup: function(m) {
                return m
            }
        }, $scope.addEditor = function() {
            var params = {
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken,
                editor: $scope.editors.newEditor
            };
            Editors.add(params, function() {
                $scope.editors.list.push({
                    user_name: $scope.editors.newEditor
                }), $scope.editors.newEditor = ""
            }, function() {
                $scope.editors.error = !0
            })
        }, $scope.removeEditor = function(index) {
            var removeMe = $scope.editors.list[index],
                params = {
                    user_name: $stateParams.user,
                    authToken: $rootScope.session.authToken,
                    editor: removeMe.user_name,
                    remove: !0
                };
            Editors.add(params, function() {
                $scope.editors.list.splice(index, 1)
            }, function() {})
        }, $scope.openDashboard = function($event, user) {
            $event.preventDefault(), $window.open("/dashboard/" + user, "", "width=1000,height=900")
        }, $scope.editors = {
            list: [],
            newEditor: "",
            error: !1
        }, $scope.getNewStreamKey = function() {
            var title = "Are you sure you want to generate a new Stream Key?",
                msg = "",
                btns = [{
                    result: !1,
                    label: "Cancel"
                }, {
                    result: !0,
                    label: "Confirm",
                    cssClass: "btn-red"
                }];
            $dialog.messageBox(title, msg, btns).open().then(function(result) {
                if (result) {
                    var key_params = {
                        channel: $stateParams.user,
                        authToken: $scope.session.authToken
                    };
                    MediaKey.update(key_params, function(res) {
                        Analytics.trackEvent("stream", "newStreamKey"), $scope.media.livestream[0].media_key = res.streamKey, $scope.showkey = !0, $scope.$apply()
                    }, function() {})
                }
            })
        }, $scope.nextPage = function() {
            $scope.limit = $scope.limit + 10
        }, $scope.showEditorVideo = VideoEditor.showEditorVideo, $scope.editVideo = function(index) {
            PlaybackService.setMediaType = "video", VideoEditor.editor = $scope.media.video[index], VideoEditor.showEditorVideo = !0
        }, profiles = '[{"height":240,"bitrate":400,"checked":false},{"height":360,"bitrate":600,"checked":false},{"height":480,"bitrate":800,"checked":false},{"height":720,"bitrate":1800,"checked":false}]', $scope.profiles = JSON.parse(profiles), $scope.getMedia = function() {
            MediaRes = Media.get($scope.params, function(media) {
                if (angular.forEach(media.livestream, function(val, key) {
                        media.livestream[key].media_relay = media.livestream[key].media_relay ? JSON.parse(media.livestream[key].media_relay) : {
                            justin: {
                                url: "rtmp://live.justin.tv/app",
                                key: "",
                                enabled: !1
                            },
                            ustream: {
                                url: "",
                                key: "",
                                enabled: !1
                            }
                        }
                    }), $scope.media = media, $scope.media && $scope.media.livestream && $scope.media.livestream[0] && $scope.media.livestream[0].media_featured_weight && ($scope.media.livestream[0].media_featured_weight = parseInt($scope.media.livestream[0].media_featured_weight), $scope.media.livestream[0].media_featured_weight > 0 && ($scope.media.livestream[0].media_featured = 1)), $scope.mediaCount = 0, media.livestream && ($scope.mediaCount = $scope.mediaCount + media.livestream.length), media.video) {
                    $scope.mediaCount = media.video.length;
                    for (var i = 0; i < $scope.media.video.length; i++) $scope.media.video[i].media_date_added_format = moment($scope.media.video[i].media_date_added).format("MMMM D, YYYY HH:mm");
                    $scope.mediaCount || ($rootScope.hasVideos = !1)
                }
                $scope.hasMedia = !0, $scope.isLoading = !1
            }, function() {
                $scope.ready = !0, $scope.hasMedia = !1, $scope.isLoading = !1, $scope.media = {}, $rootScope.hasMedia = !1
            })
        }, $scope.delayMedia = function() {
            $scope.noSearchResult = !0, $timeout.cancel(stop), stop = $timeout(function() {
                $scope.getMedia()
            }, 800)
        }, $scope.$watch("[filter,limit,hiddenOnly,publicOnly,vodSearch,pushedYT]", function() {
            $scope.isLoading = !0, $scope.noSearchResult = !1, $scope.params.filter = $scope.filter ? $scope.filter : "recent", $scope.params.limit = $scope.limit ? $scope.limit : 10, $scope.params.hiddenOnly = $scope.hiddenOnly ? $scope.hiddenOnly : !1, $scope.params.publicOnly = $scope.publicOnly ? $scope.publicOnly : !1, $scope.params.search = $scope.vodSearch ? $scope.vodSearch : "", $scope.params.yt = $scope.pushedYT ? !0 : !1, "" === $scope.params.search ? $scope.getMedia() : $scope.delayMedia()
        }, !0), $scope.saveSettings = function() {
            "saving" != $scope.save.save_status && ($scope.save.save_status = "saving", MediaRes.livestream = $scope.media.livestream, $scope.update())
        }, $scope.update = function() {
            MediaRes.$update($scope.params, function() {
                $scope.save.save_status = "saved"
            }, function() {
                $scope.save.save_status = "error"
            })
        }, $scope.updateFeatured = function() {
            var featured_params = {
                media_id: $scope.media.livestream[0].media_id,
                featured: $scope.media.livestream[0].media_featured,
                weight: $scope.media.livestream[0].media_featured_weight,
                authToken: $rootScope.session.authToken
            };
            MediaFeatured.put(featured_params, function(success) {
                $scope.save.save_status = "saved", console.log(success)
            }, function(error) {
                $scope.save.save_status = "saved", console.log(error)
            })
        }, $scope.setMediaRecording = function() {
            1 == $scope.media.livestream[0].media_recording ? (1 != $scope.media.livestream[0].media_is_live && ($scope.media.livestream[0].media_recording = 0), Analytics.trackEvent("stream", "recording", "Off")) : ($scope.media.livestream[0].media_recording = 1, Analytics.trackEvent("stream", "recording", "On"))
        }, $scope.gameFormatResult = function(item) {
            return item.category_name
        }, $scope.gameFormatSelection = function(item) {
            return item.category_name
        }, $scope.$watch("media.livestream[0].media_category_id", function(newVal) {
            newVal && isNaN(newVal) && newVal.category_id && ($scope.media.livestream[0].media_category_id = newVal.category_id)
        }), $scope.select2Options = {
            placeholder: "Select a Game",
            allowClear: !1,
            minimumInputLength: 2,
            id: function(item) {
                return item.category_id
            },
            ajax: {
                url: appSettings.apiUri + "/games",
                dataType: "json",
                cache: !0,
                quietMillis: 400,
                data: function(term) {
                    return {
                        q: term,
                        limit: 100
                    }
                },
                results: function(data) {
                    return {
                        results: data.categories
                    }
                }
            },
            initSelection: function(element, callback) {
                var id = $(element).val();
                "" === id || isNaN(id) || $.ajax(appSettings.apiUri + "/game/" + id, {
                    cache: !0,
                    dataType: "json"
                }).done(function(data) {
                    callback(data.category)
                })
            },
            formatResult: $scope.gameFormatResult,
            formatSelection: $scope.gameFormatSelection,
            escapeMarkup: function(m) {
                return m
            }
        }, $scope.create = function() {
            liveParams = {
                user_name: $stateParams.user,
                authToken: $scope.session.authToken,
                media_type: "live",
                media_description: "",
                media_status: "My first hitbox Livestream",
                media_name: $stateParams.user,
                media_tags: $scope.media.media_tags,
                media_category_id: ""
            }, Media.create(liveParams, function(success) {
                console.log(success), $rootScope.session.livestream_count = 1, $state.transitionTo($state.current, $stateParams, {
                    reload: !0,
                    inherit: !0,
                    notify: !0
                })
            }, function(error) {
                console.log(error)
            })
        }, $scope.deleteMsgBox = function(index) {
            var media = $scope.media.video[index],
                title = "Are you sure you want to delete this video?",
                msg = "",
                btns = [{
                    result: !1,
                    label: "Cancel"
                }, {
                    result: !0,
                    label: "Delete",
                    cssClass: "btn-red"
                }];
            $scope.params.media_id = media.media_id, $dialog.messageBox(title, msg, btns).open().then(function(result) {
                result && MediaRes.$remove($scope.params, function() {
                    $state.reload()
                })
            })
        }, $scope.actionMsgBox = function(action) {
            var title = "Are you sure?",
                msg = "",
                btns = [{
                    result: !1,
                    label: "Cancel"
                }, {
                    result: !0,
                    label: "delete" == action ? "Delete" : "Save",
                    cssClass: "delete" == action ? "btn-red" : "btn-green"
                }];
            $dialog.messageBox(title, msg, btns).open().then(function(result) {
                result && ($scope.saved = !0, videoParams = {
                    media_type: "video",
                    video: $scope.media.video,
                    authToken: $rootScope.session.authToken,
                    action: action,
                    list: "list"
                }, Media.update(videoParams, function() {
                    $state.reload()
                }))
            })
        }, $scope.googleConnect = function() {
            opts = {
                backdrop: !0,
                keyboard: !1,
                cache: !1,
                backdropClick: !0,
                templateUrl: "partials/main/googleConnect.html",
                controller: "FeedbackController"
            };
            var d = $dialog.dialog(opts);
            d.open().then(function() {}), $rootScope.$watch("googleLoggedIn", function() {
                $rootScope.googleLoggedIn && d.close()
            })
        }, $scope.createDownload = function(index) {
            var media = $scope.media.video[index],
                title = "Are you sure you want to download this video?",
                msg = "",
                btns = [{
                    result: !1,
                    label: "Cancel"
                }, {
                    result: !0,
                    label: "Download",
                    cssClass: "btn-green"
                }];
            $scope.downloadParams = {}, $scope.downloadParams.media_id = media.media_id, $scope.downloadParams.authToken = $rootScope.session.authToken, $dialog.messageBox(title, msg, btns).open().then(function(result) {
                result && (createDownload.create($scope.downloadParams, function() {
                    var btns = [{
                            result: !1,
                            label: "OK",
                            cssClass: "btn-green"
                        }],
                        title = "Your request has been queued. A download link will be sent to your E-mail shortly. Thanks for your patience.";
                    $dialog.messageBox(title, msg, btns).open().then(function() {})
                }, function() {
                    var btns = [{
                            result: !1,
                            label: "OK"
                        }],
                        title = "Download failed.";
                    $dialog.messageBox(title, msg, btns).open().then(function() {})
                }), Analytics.trackEvent("stream", "downloadStarted"))
            })
        }, $scope.pushYT = function(index) {
            if (!$rootScope.googleLoggedIn) return void $scope.googleConnect();
            var media = $scope.media.video[index],
                title = "Are you sure you want to upload this video to Youtube?",
                msg = "",
                btns = [{
                    result: !1,
                    label: "Cancel"
                }, {
                    result: !0,
                    label: "Upload",
                    cssClass: "btn-green"
                }];
            $rootScope.googleParams.media_id = media.media_id, $dialog.messageBox(title, msg, btns).open().then(function(result) {
                result && (uploadYT.upload($rootScope.googleParams, function() {
                    var btns = [{
                            result: !1,
                            label: "OK",
                            cssClass: "btn-green"
                        }],
                        title = "Your video has been sent to YouTube. It may take a few minutes before it will show up in your YouTube listing.";
                    $dialog.messageBox(title, msg, btns).open().then(function() {})
                }, function() {
                    var btns = [{
                            result: !1,
                            label: "OK"
                        }],
                        title = "Push to Youtube failed.";
                    $dialog.messageBox(title, msg, btns).open().then(function() {})
                }), Analytics.trackEvent("stream", "youtubePush"))
            })
        }, $scope.$on("$destroy", function() {
            $timeout.cancel($scope.feedbackTimeout), $timeout.cancel($scope.titleEditTimeout), $timeout.cancel($scope.onTimeout), $timeout.cancel(stop)
        })
    }]), app.controller("NotificationsSettingsController", function($scope, $rootScope, $stateParams, Notifications) {
        var params = {
            user_name: $stateParams.user,
            authToken: $rootScope.session.authToken
        };
        $scope.getNotificationSettings = function() {
            Notifications.get(params, function(success) {
                $scope.notify_email = 1 == success.notify_email ? !0 : !1, $scope.notify_facebook = 1 == success.notify_facebook ? !0 : !1, $scope.push_facebook = 1 == success.push_facebook ? !0 : !1, $scope.push_twitter = 1 == success.push_twitter ? !0 : !1
            }, function() {})
        }, $scope.saveNotificationSettings = function() {
            var updateParams = {
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken,
                notify_email: $scope.notify_email ? 1 : 0,
                notify_facebook: $scope.notify_facebook ? 1 : 0,
                push_facebook: $scope.push_facebook ? 1 : 0,
                push_twitter: $scope.push_twitter ? 1 : 0
            };
            Notifications.update(updateParams, function() {}, function() {})
        }, $scope.getNotificationSettings()
    }), app.controller("RevenueStatsSettingsController", ["$scope", "$rootScope", "$stateParams", "$dialog", "Revenues", "GaStats", "$timeout", "$filter", "Browser", "$location", "$sce", "StreamStats", "Stats", "CountryService", function($scope, $rootScope, $stateParams, $dialog, Revenues, GaStats, $timeout, $filter, Browser, $location, $sce, StreamStats, Stats, CountryService) {
        $scope.browser = Browser.getName(), $scope.noRevenues = !0, $scope.noSubscriptions = !1, $scope.hasData = !1, $scope.button_selection = 1, $scope.processing = !1;
        var dateFormat = "YYYY-MM-DD";
        $scope.currency = "EUR", $scope.displayMode = "revenues", $scope.country_limit = 6;
        moment();
        $scope.worldmap = null, $scope.month_prev_prev = {
            text: moment().subtract("months", 2).format("MMMM"),
            number: moment().subtract("months", 2).month(),
            startDate: moment().subtract("months", 2).startOf("month").format(dateFormat),
            endDate: moment().subtract("months", 2).endOf("month").format(dateFormat)
        }, $scope.month_prev_prev_prev = {
            text: moment().subtract("months", 3).format("MMMM"),
            number: moment().subtract("months", 3).month(),
            startDate: moment().subtract("months", 3).startOf("month").format(dateFormat),
            endDate: moment().subtract("months", 3).endOf("month").format(dateFormat)
        }, $scope.month_last3 = {
            text: "Last 3 months",
            number: moment().subtract("months", 2).month(),
            startDate: moment().subtract("months", 2).startOf("month").format(dateFormat),
            endDate: moment().format(dateFormat)
        }, $scope.charts = {
            main: {},
            revenues: {},
            viewers: {}
        }, $scope.stats = {
            viewers: {},
            revenues: {}
        }, $scope.dates = {
            range: 30
        }, $scope.$watch("dates", function(newVal, oldVal) {
            newVal && newVal != oldVal && !$scope.processing && ($scope.button_selection = 0, $scope.stats.viewers.data = !1, $scope.dates.range = moment(newVal.endDate).diff(moment(newVal.startDate), "days"), $scope.getDate(newVal.startDate, newVal.endDate))
        }), $scope.$watch("displayMode", function(newVal, oldVal) {
            newVal && newVal != oldVal && !$scope.processing && $scope.getDate($scope.dates.startDate, $scope.dates.endDate)
        }), $scope.getDate = function(startDate, endDate) {
            var startDate = moment(startDate).format(dateFormat),
                endDate = moment(endDate).format(dateFormat);
            $scope.getCurrentDisplayModeStats(startDate, endDate)
        }, $scope.getLast7Days = function() {
            var startDate = moment().subtract("days", 8).format(dateFormat),
                endDate = moment().format(dateFormat);
            $scope.stats.viewers.data = !1, $scope.getCurrentDisplayModeStats(startDate, endDate)
        }, $scope.getLast30Days = function() {
            var startDate = moment().subtract("days", 30).format(dateFormat),
                endDate = moment().format(dateFormat);
            $scope.stats.viewers.data = !1, $scope.getCurrentDisplayModeStats(startDate, endDate)
        }, $scope.getLast90Days = function() {
            var startDate = moment().subtract("days", 90).format(dateFormat),
                endDate = moment().format(dateFormat);
            $scope.stats.viewers.data = !1, $scope.getCurrentDisplayModeStats(startDate, endDate)
        }, $scope.getCurrentMonth = function() {
            var startDate = moment().date(1).format(dateFormat),
                endDate = moment().format(dateFormat);
            $scope.stats.viewers.data = !1, $scope.getCurrentDisplayModeStats(startDate, endDate)
        }, $scope.getMonth = function(month) {
            var startDate = moment().month(month).date(1).format(dateFormat),
                endDate = moment().month(month + 1).date(1).subtract("days", 1).format(dateFormat);
            $scope.stats.viewers.data = !1, $scope.getCurrentDisplayModeStats(startDate, endDate)
        }, $scope.getLastMonth = function() {
            var startDate = moment().date(1).subtract("month", 1).format(dateFormat),
                endDate = moment().date(1).subtract("days", 1).format(dateFormat);
            $scope.stats.viewers.data = !1, $scope.getCurrentDisplayModeStats(startDate, endDate)
        }, $scope.displayMode = "revenues", $scope.setDisplayMode = function(mode) {
            $scope.displayMode = mode, "viewers" == mode && ($scope.viewerMode = "all"), ("revenues" == mode || "ads" == mode || "followers" == mode) && ($scope.viewerMode = ""), $scope.getDate($scope.dates.startDate, $scope.dates.endDate)
        }, $scope.getCurrentDisplayModeStats = function(startDate, endDate) {
            switch ($scope.displayMode) {
                case "revenues":
                    $scope.getRevenueStats(startDate, endDate);
                    break;
                case "views":
                    $scope.getViewStats(startDate, endDate);
                    break;
                case "viewers":
                    $scope.getViewerStats(startDate, endDate);
                    break;
                case "ads":
                    $scope.getAdStats(startDate, endDate);
                    break;
                case "followers":
                    $scope.getFollowerStats(startDate, endDate);
                    break;
                default:
                    $scope.getRevenueStats(startDate, endDate)
            }
        }, $scope.getFollowerStats = function(startDate, endDate) {
            $scope.processing = !0;
            var f_params = {
                media_id: $stateParams.user,
                authToken: $rootScope.session.authToken,
                metric: "followers",
                startDate: startDate,
                endDate: endDate
            };
            StatsRes = Stats.get(f_params, function(stats) {
                $scope.setupFollowerGraph(stats)
            }, function() {
                $scope.processing = !1
            })
        }, $scope.setupFollowerGraph = function(stats) {
            var range = "days";
            if (!stats || !stats.timeline) return void($scope.processing = !1);
            startDate = moment($scope.dates.startDate).format(dateFormat), endDate = moment($scope.dates.endDate).format(dateFormat), $scope.charts.followers = {
                data: [{
                    key: "",
                    color: "hsla(75,100%,35%,1)",
                    useInteractiveGuideline: !0,
                    values: []
                }]
            }, $scope.charts.followers.colorFunction = function() {
                return function() {
                    return "hsl(75,100%,35%)"
                }
            }, $scope.charts.followers.xFunction = function() {
                return function(d) {
                    return d[0]
                }
            }, $scope.charts.followers.yFunction = function() {
                return function(d) {
                    return d[1]
                }
            }, $scope.charts.followers.toolTipContentFunction = function() {
                return function(key, x, y) {
                    var day = moment(x, "MMM D").format("dddd");
                    return '<div class="value">' + y + "</div><div>" + day + ", " + x + "</div>"
                }
            }, $scope.charts.followers.yAxisTickFormat = function() {
                return function(d) {
                    return d
                }
            }, $scope.charts.followers.xAxisTickValuesFunction = function() {
                return function() {
                    return $scope.charts.followers.xAxisTickKeys
                }
            }, $scope.charts.followers.xAxisTickFormat = function() {
                return function(d) {
                    return $scope.charts.followers.xAxisTickValues[d.toString()]
                }
            }, $scope.charts.followers.xAxisTickValues = {}, $scope.charts.followers.xAxisTickKeys = [];
            var daily = stats.timeline,
                dateIterator = moment(startDate),
                lastDate = dateIterator,
                lastFollowers = 0;
            for (day in daily) {
                lastFollowers = daily[day].followers;
                break
            }
            for (var followerStart = lastFollowers; dateIterator < moment(endDate);) {
                var dateFormat = dateIterator.format("YYYY-MM-DDTHH:00:00+00:00");
                "undefined" != typeof daily[dateFormat] ? lastDate = dateIterator : daily[dateFormat] = {
                    followers: lastFollowers
                };
                var unix = moment(dateFormat).unix();
                $scope.charts.followers.data[0].values.push([unix, parseInt(daily[dateFormat].followers)]), $scope.charts.followers.xAxisTickKeys.push(unix), $scope.charts.followers.xAxisTickValues[unix.toString()] = moment(dateFormat).format("MMM D"), lastFollowers = parseInt(daily[dateFormat].followers), dateIterator = dateIterator.add(range, 1)
            }
            var followers_difference = lastFollowers - followerStart,
                followers_difference_html = $sce.trustAsHtml(followers_difference.toString());
            $scope.stats.max = followers_difference_html, $scope.stats.new_followers_html = followers_difference_html, $scope.stats.label_max = " new followers", $scope.processing = !1
        }, $scope.getRevenueStats = function(startDate, endDate) {
            $scope.processing = !0, $scope.dates.startDate = moment(startDate), $scope.dates.endDate = moment(endDate), endDate = moment(endDate).add("days", 1).format(dateFormat), params = {
                user: $stateParams.user,
                authToken: $rootScope.session.authToken,
                type: "channel",
                startDate: startDate,
                endDate: endDate
            }, RevStats = Revenues.get(params, function(stats) {
                if ($scope.hasData = !1, !stats.revenues || !stats.revenues.summary) return $scope.hasData = !1, $scope.processing = !1, $scope.noRevenues = !0, void $scope.setViewerMode("all");
                $scope.noRevenues = !1, $scope.stats.revenues.last_updated = moment(stats.revenues.summary.last_updated).format("MMM D YYYY"), $scope.charts.revenues.data = [{
                    key: "",
                    color: "hsla(75,100%,36%,.2)",
                    bar: !0,
                    values: [
                        []
                    ]
                }, {
                    key: "Total Earnings",
                    color: "hsl(75,100%,36%)",
                    values: [
                        []
                    ]
                }], $scope.charts.revenues.toolTipContentFunction = function() {
                    return function(key, x, y) {
                        if (key) return '<div class="value">' + y + "</div><div>" + $scope.charts.revenues.xAxisTickValues[$scope.charts.revenues.xAxisTickKeys[0]] + " - " + x + "</div>";
                        var day = moment(x, "MMM D").format("dddd");
                        return '<div class="value">' + y + "</div><div>" + day + ", " + x + "</div>"
                    }
                }, $scope.charts.revenues.xAxisTickValues = [], $scope.charts.revenues.xAxisTickKeys = [], $scope.revenues && $scope.revenues.summary && $scope.revenues.summary.currency && ($scope.currency = stats.revenues.summary.currency);
                moment(startDate), moment(endDate);
                if (null == stats.revenues || !stats.revenues.daily) return void($scope.processing = !1);
                null != $scope.worldmap && $scope.worldmap.series.regions[0].clear(), $scope.earned_total = 0, $scope.earned_max = 0, $scope.topCountriesMapData = [], $scope.topCountries = [], $scope.hasData = !0;
                var daily = stats.revenues.daily,
                    earned_total = 0,
                    earned_max = 0;
                for (day in daily) {
                    var unix = moment(day).unix();
                    $scope.charts.revenues.xAxisTickKeys.push(unix), $scope.charts.revenues.xAxisTickValues[unix.toString()] = moment(day).format("MMM D"), earned = daily[day].earnings, earned_total += earned, earned > earned_max && (earned_max = earned), $scope.charts.revenues.data[0].values.push([unix, earned]), $scope.charts.revenues.data[1].values.push([unix, earned_total])
                }
                $scope.earned_total = earned_total, $scope.earned_total_html = $sce.trustAsHtml($filter("toMoney")($scope.earned_total, $scope.currency)), $scope.earned_max = earned_max, $scope.earned_max_html = $sce.trustAsHtml($filter("toMoney")($scope.earned_max, $scope.currency)), $scope.stats.max = $scope.earned_max_html, $scope.stats.sum = $scope.earned_total_html, $scope.stats.label_max = " highest daily Earnings", $scope.stats.label_sum = "Total Revenues", $scope.stats.revenues.total = $scope.stats.sum, $scope.charts.revenues.totalTickFormat = function() {
                    return function(d) {
                        return $filter("toMoney")(d, $scope.currency)
                    }
                }, $scope.charts.revenues.dailyTickFormat = function() {
                    return function(d) {
                        return $filter("toMoney")(d, $scope.currency)
                    }
                }, $scope.charts.revenues.xAxisTickValuesFunction = function() {
                    return function() {
                        return $scope.charts.revenues.xAxisTickKeys
                    }
                }, $scope.charts.revenues.xAxisTickFormat = function() {
                    return function(d) {
                        return $scope.charts.revenues.xAxisTickValues[d.toString()]
                    }
                };
                var countries = stats.revenues.top.countries,
                    top_countries = [];
                $scope.topCountriesMapData = [];
                for (var country in countries) {
                    var countryCode = CountryService.getCountryCode(country);
                    100 * countries[country] / 100 > 0 && ($scope.topCountriesMapData[countryCode] = countries[country], top_countries.push({
                        country: country,
                        earnings: countries[country],
                        percent: 100 / $scope.earned_total * countries[country],
                        earnings_html: $sce.trustAsHtml($filter("toMoney")(countries[country], $scope.currency))
                    }))
                }
                $scope.topCountries = top_countries, $scope.countryListLimit = 6, $scope.videosListLimit = 6, $scope.contents = stats.revenues.top.content, $scope.contents.live ? ($scope.contents.live.percent = 100 / $scope.earned_total * $scope.contents.live.earnings, $scope.contents.live.earnings_html = $sce.trustAsHtml($filter("toMoney")($scope.contents.live.earnings, $scope.currency))) : $scope.contents.live = {
                    percent: 0,
                    earnings: 0,
                    earnings_html: 0
                }, $scope.contents.video ? ($scope.contents.video.percent = 100 / $scope.earned_total * $scope.contents.video.earnings, $scope.contents.video.earnings_html = $sce.trustAsHtml($filter("toMoney")($scope.contents.video.earnings, $scope.currency))) : $scope.contents.video = {
                    percent: 0,
                    earnings: 0,
                    earnings_html: 0
                }, $scope.noSubscriptions = !1, $scope.contents.subscriptions && $scope.contents.subscriptions.earnings > 0 ? ($scope.contents.subscriptions.percent = 100 / $scope.earned_total * $scope.contents.subscriptions.earnings, $scope.contents.subscriptions.earnings_html = $sce.trustAsHtml($filter("toMoney")($scope.contents.subscriptions.earnings, $scope.currency))) : $scope.noSubscriptions = !0, $scope.xFunctionCountry = function() {
                    return function(d) {
                        return d.key
                    }
                }, $scope.yFunctionCountry = function() {
                    return function(d) {
                        return d.y
                    }
                };
                var mapId = "#worldmap_countries";
                null != $scope.worldmap ? ($scope.worldmap.series.regions[0].clear(), $scope.worldmap.series.regions[0].setValues($scope.topCountriesMapData)) : $scope.worldmap = new jvm.WorldMap({
                    map: "world_mill_en",
                    container: $(mapId),
                    backgroundColor: "transparent",
                    series: {
                        regions: [{
                            values: $scope.topCountriesMapData,
                            scale: ["#bfd776", "#608000"],
                            normalizeFunction: "polynomial",
                            hoverOpacity: .6,
                            hoverColor: !1
                        }]
                    },
                    regionStyle: {
                        initial: {
                            fill: "rgba(255,255,255,.45)",
                            stroke: "none"
                        },
                        hover: {
                            "fill-opacity": .6
                        }
                    },
                    onRegionLabelShow: function(e, el, code) {
                        el.html($scope.topCountriesMapData[code] && $scope.topCountriesMapData[code] > 0 ? '<div><div class="value">' + $filter("toMoney")($scope.topCountriesMapData[code], $scope.currency) + "</div>" + el.html() + "<div>" : "")
                    }
                }), $timeout(function() {
                    $scope.worldmap.setSize()
                }, 300), $scope.processing = !1
            }, function() {
                console.log("Access denied"), $location.url("/401")
            })
        }, $scope.capitaliseFirstLetter = function(string) {
            return string.charAt(0).toUpperCase() + string.slice(1)
        }, $scope.otherCountriesEarnings = function() {
            return $scope.earned_total - filteredCountries[0] - filteredCountries[1] - filteredCountries[2] - filteredCountries[3] - filteredCountries[4]
        }, $scope.viewerMode = "none", $scope.setViewerMode = function(mode) {
            $scope.displayMode = "viewers", $scope.viewerMode = mode, $scope.setupStatsGraph($scope.stats.viewers.data)
        }, $scope.getAdStats = function(startDate, endDate) {
            $scope.viewerMode = "ads", $scope.stats.viewers.data ? $scope.setupStatsGraph($scope.stats.viewers.data) : $scope.getStreamStats(startDate, endDate)
        }, $scope.setupStatsGraph = function(stats) {
            startDate = moment($scope.dates.startDate).format(dateFormat), endDate = moment($scope.dates.endDate).format(dateFormat), $scope.hasData = !1, $scope.processing = !0, $scope.charts.viewers.data = [{
                key: "",
                color: "hsla(75,100%,36%,.2)",
                useInteractiveGuideline: !0,
                values: []
            }], $scope.xFunction = function() {
                return function(d) {
                    return d[0]
                }
            }, $scope.yFunction = function() {
                return function(d) {
                    return d[1]
                }
            }, $scope.charts.viewers.toolTipContentFunction = "ads" == $scope.viewerMode ? function() {
                return function(key, x, y) {
                    var day = moment(x, "MMM D").format("dddd");
                    return '<div class="value">' + y + "</div><div>" + day + ", " + x + "</div>"
                }
            } : function() {
                return function(key, x, y) {
                    var day = moment(x, "MMM D").format("dddd");
                    return '<div class="value">' + y + "</div><div>" + day + ", " + x + "</div>"
                }
            }, $scope.charts.viewers.yAxisTickFormat = function() {
                return function(d) {
                    return d
                }
            }, $scope.charts.viewers.xAxisTickValuesFunction = function() {
                return function() {
                    return $scope.charts.viewers.xAxisTickKeys
                }
            }, $scope.charts.viewers.xAxisTickFormat = function() {
                return function(d) {
                    return $scope.charts.viewers.xAxisTickValues[d.toString()]
                }
            }, $scope.charts.viewers.xAxisTickValues = {}, $scope.charts.viewers.xAxisTickKeys = [];
            moment(startDate), moment(endDate);
            switch (null != $scope.worldmap && $scope.worldmap.series.regions[0].clear(), $scope.stats.sum = 0, $scope.stats.max = 0, $scope.stats.topCountriesMapData = [], $scope.stats.topCountries = [], $scope.stats.label_sum = "", $scope.stats.label_max = " highest daily Viewers", $scope.viewerMode) {
                case "all":
                    $scope.stats.label_max = " peak concurrent Viewers";
                    break;
                case "follower":
                    $scope.stats.label_max = " peak concurrent Followers";
                    break;
                case "subscriber":
                    $scope.stats.label_max = " peak concurrent Subscribers";
                    break;
                case "registered":
                    $scope.stats.label_max = " peak concurrent registered Viewers";
                    break;
                case "android":
                    $scope.stats.label_max = " peak concurrent Android Viewers";
                    break;
                case "ios":
                    $scope.stats.label_max = " peak concurrent iOS Viewers";
                    break;
                case "web":
                    $scope.stats.label_max = " peak concurrent Web Viewers";
                    break;
                case "embed":
                    $scope.stats.label_max = " peak concurrent Embed Viewers";
                    break;
                case "ads":
                    $scope.stats.label_max = " maximum Ads per Day";
                    break;
                default:
                    $scope.stats.label_max = " peak concurrent Viewers"
            }
            $scope.hasData = !0;
            var daily = stats.timeline;
            daily && !daily[endDate + "T00:00:00+00:00"] && (daily[endDate + "T00:00:00+00:00"] = {
                ads: 0,
                chromecast: 0,
                embed: 0,
                follower: 0,
                ios: 0,
                registered: 0,
                subscriber: 0,
                viewer: 0,
                web: 0
            });
            var sum = 0,
                max = 0,
                currentDate = moment(startDate).subtract("days", 1).format(dateFormat);
            for (day in daily) {
                for (currentDate = moment(currentDate).add("days", 1).format(dateFormat); currentDate != moment(day).format(dateFormat) && currentDate != endDate;) {
                    var unix = moment(currentDate).unix();
                    $scope.charts.viewers.xAxisTickKeys.push(unix), $scope.charts.viewers.xAxisTickValues[unix.toString()] = moment(currentDate).format("MMM D"), $scope.charts.viewers.data[0].values.push([unix, 0]), currentDate = moment(currentDate).add("days", 1).format(dateFormat)
                }
                var unix = moment(day).unix();
                switch ($scope.charts.viewers.xAxisTickKeys.push(unix), $scope.charts.viewers.xAxisTickValues[unix.toString()] = moment(day).format("MMM D"), $scope.viewerMode) {
                    case "all":
                        value = daily[day].viewer;
                        break;
                    case "follower":
                        value = daily[day].follower;
                        break;
                    case "subscriber":
                        value = daily[day].subscriber;
                        break;
                    case "registered":
                        value = daily[day].registered;
                        break;
                    case "android":
                        value = daily[day].android;
                        break;
                    case "ios":
                        value = daily[day].ios;
                        break;
                    case "web":
                        value = daily[day].web;
                        break;
                    case "embed":
                        value = daily[day].embed;
                        break;
                    case "ads":
                        value = daily[day].ads;
                        break;
                    default:
                        value = daily[day].viewer
                }
                sum += value, value > max && (max = value), $scope.charts.viewers.data[0].values.push([unix, value])
            }
            "ads" == $scope.viewerMode && ($scope.stats.ads_total_html = $sce.trustAsHtml(sum.toString())), $scope.stats.sum = sum, $scope.stats.sum = $sce.trustAsHtml($scope.stats.sum.toString()), $scope.stats.sum = "", $scope.stats.max = max, $scope.stats.max = $sce.trustAsHtml($scope.stats.max.toString()), $scope.stats.viewers.total = $scope.stats.sum, $scope.stats.viewers.max = max, $scope.charts.viewers.barColor = function() {
                return function() {
                    return "hsl(75,100%,35%)"
                }
            }, $scope.processing = !1
        }, $scope.getViewerStats = function(startDate, endDate) {
            $scope.stats.viewers.data ? $scope.setupStatsGraph($scope.stats.viewers.data) : $scope.getStreamStats(startDate, endDate)
        }, $scope.getStreamStats = function(startDate, endDate) {
            $scope.processing = !0, $scope.stats.viewers = {}, $scope.dates = {
                startDate: moment(startDate),
                endDate: moment(endDate)
            }, params = {
                channel: $stateParams.user,
                authToken: $rootScope.session.authToken,
                startDate: startDate,
                endDate: endDate,
                range: "d"
            }, StreamStats.get(params, function(stats) {
                $scope.stats.viewers.data = stats, $scope.stats.viewers.ads_total = $sce.trustAsHtml(stats.totalads.toString()), $scope.setupStatsGraph(stats)
            }, function() {})
        }, $scope.getLast30Days(), $scope.barColor = function() {
            return function() {
                return "#0000FF"
            }
        }
    }]), app.controller("TeamRevenueStatsSettingsController", ["$scope", "$rootScope", "$stateParams", "$dialog", "Revenues", "GaStats", "$filter", "$location", "$sce", function($scope, $rootScope, $stateParams, $dialog, Revenues, GaStats, $filter, $location, $sce) {
        $scope.processing = !1;
        var dateFormat = "YYYY-MM-DD";
        $scope.showMonths = 3, $scope.month_last3 = {
            text: "Last 3 months",
            number: moment().subtract("months", 2).month(),
            startDate: moment().subtract("months", 2).startOf("month").format(dateFormat),
            endDate: moment().format(dateFormat)
        }, $rootScope.session || (console.log("Access denied"), $location.url("/401")), $scope.user = $stateParams.user || $rootScope.session.user_name, $scope.team_name = $stateParams.team, $scope.$watch("reloadStartDate", function(newVal, oldVal) {
            console.log($scope.reloadStartDate), newVal && newVal != oldVal && !$scope.processing && ($scope.button_selection = 0, $scope.getDate($scope.reloadStartDate, $scope.reloadEndDate))
        }), $scope.$watch("reloadEndDate", function(newVal, oldVal) {
            newVal && newVal != oldVal && !$scope.processing && ($scope.button_selection = 0, $scope.getDate($scope.reloadStartDate, $scope.reloadEndDate))
        }), $scope.getCurrentMonth = function() {
            var startDate = moment().date(1).format(dateFormat),
                endDate = moment().format(dateFormat);
            $scope.getDate(startDate, endDate)
        }, $scope.getLastMonth = function() {
            var startDate = moment().date(1).subtract("month", 1).format(dateFormat),
                endDate = moment().date(1).subtract("days", 1).format(dateFormat);
            $scope.getDate(startDate, endDate)
        }, $scope.getDate = function(startDate, endDate) {
            var startDate = moment(1e3 * startDate).format(dateFormat),
                endDate = moment(1e3 * endDate).format(dateFormat);
            console.log(startDate, endDate), $scope.getTeamStats(startDate, endDate)
        }, $scope.getLast31Days = function() {
            var startDate = moment().subtract("days", 31).format(dateFormat),
                endDate = moment().subtract("days", 1).format(dateFormat);
            $scope.getTeamStats(startDate, endDate)
        }, $scope.getLast90Days = function() {
            var startDate = moment().subtract("days", 90).format(dateFormat),
                endDate = moment().subtract("days", 1).format(dateFormat);
            $scope.getTeamStats(startDate, endDate)
        }, $scope.xFunction = function() {
            return function(d) {
                return d[0]
            }
        }, $scope.yFunction = function() {
            return function(d) {
                return d[1]
            }
        }, $scope.getStatsCSV = function() {
            console.log($scope.reloadStartDate);
            var startdate = $scope.reloadStartDate,
                enddate = $scope.reloadEndDate;
            $scope.reloadStartDate || (startdate = moment().subtract("days", 31), enddate = moment().subtract("days", 1));
            var finaldata = [
                [$scope.team.info.group_display_name],
                ["Team Statistics"],
                [moment(startdate).format("MMMM Do YYYY") + " - " + moment(enddate).format("MMMM Do YYYY")]
            ];
            $scope.currency && finaldata.push(["Total Revenues", $scope.revenue_sum.toString().replace(".", ",") || 0]);
            for (var key in $scope.team.members)
                if (finaldata.push([], [$scope.team.members[key].user_name]), finaldata.push(["Email", $scope.team.members[key].user_email]), finaldata.push(["Followers", $scope.team.members[key].followers]), finaldata.push(["Revenues", $scope.team.members[key].revenues_sum.toString().replace(".", ",") || 0, $scope.currency]), $scope.team.members[key].revenues_sum && $scope.team.members[key].revenues_sum > 0) {
                    finaldata.push(["Date", "Revenues", "Currency"]);
                    for (var i = 0; i < $scope.team.members[key].revenues.timeline.length; i++) finaldata.push([moment($scope.team.members[key].revenues.timeline[i][0]).format("MMMM Do YYYY"), $scope.team.members[key].revenues.timeline[i][1].toString().replace(".", ",") || 0, $scope.currency])
                }
            return finaldata
        }, $scope.yAxisTickFormat = function() {
            return function(d) {
                return $filter("toMoney")(d, $scope.currency)
            }
        }, $scope.xAxisTickFormat = function() {
            return function(d) {
                return $scope.xAxisTickValues[d.toString()]
            }
        }, $scope.max_revenues = 0, $scope.getTeamStats = function(startDate, endDate) {
            $scope.daterangeSetText && ($scope.daterangeSetText(new Date(startDate), new Date(endDate)), $scope.datepicker.DatePickerSetDate([new Date(startDate), new Date(endDate)], !0)), $scope.processing = !0, $scope.dates = {
                startDate: moment(startDate).utc(),
                endDate: moment(endDate).utc()
            }, endDate = moment(endDate).utc().add("days", 1).format(dateFormat), params = {
                user: $scope.team_name,
                authToken: $rootScope.session.authToken,
                type: "team",
                startDate: startDate,
                endDate: endDate
            }, RevStats = Revenues.get(params, function(stats) {
                if (!stats || !stats.team || !stats.team.members) return void($scope.processing = !1);
                $scope.xAxisTickKeys = [], $scope.xAxisTickValues = [], $scope.team = stats.team;
                for (var firstRun = !0, team_sum = 0, i = 0; i < $scope.team.members.length; i++) {
                    var chartSeries = [];
                    $scope.team.members[i].revenues && null != $scope.team.members[i].revenues && 403 != $scope.team.members[i].revenues && $scope.team.members[i].revenues.summary ? ($scope.currency = $scope.team.members[i].revenues.summary.currency, $scope.team.members[i].revenues_sum = $scope.team.members[i].revenues.summary.total_earnings, $scope.team.members[i].revenues.summary.total_earnings_html = $sce.trustAsHtml($filter("toMoney")($scope.team.members[i].revenues.summary.total_earnings, $scope.currency))) : ($scope.team.members[i].revenues_sum = 0, $scope.team.members[i].revenues = {
                        summary: {
                            total_earnings_html: $sce.trustAsHtml($filter("toMoney")(0, $scope.currency))
                        }
                    }), null == $scope.team.members[i].followers && ($scope.team.members[i].followers = 0), $scope.team.members[i].followers = parseInt($scope.team.members[i].followers);
                    var member_chart = [{
                            key: "",
                            color: "hsla(75,100%,38%,.2)",
                            useInteractiveGuideline: !0,
                            values: []
                        }],
                        member = $scope.team.members[i],
                        member_total = 0;
                    if (null != member.revenues && 403 != member.revenues) {
                        firstRun && ($scope.currency = member.revenues.summary.currency);
                        for (day in member.revenues.daily) {
                            var unix = moment(day).unix();
                            chartSeries.push([unix, member.revenues.daily[day].earnings]), firstRun && ($scope.xAxisTickKeys.push(unix), $scope.xAxisTickValues[unix.toString()] = moment(day).format("dddd, MMM D")), member_total += member.revenues.daily[day].earnings, member_chart[0].values.push([unix, member.revenues.daily[day].earnings]), $scope.max_revenues < member.revenues.daily[day].earnings && ($scope.max_revenues = member.revenues.daily[day].earnings)
                        }
                    }
                    member.chart = {
                        series: chartSeries
                    }, $scope.xAxisTickKeys.length && (firstRun = !1), 0 == member_total && (member_chart = !1), team_sum += member_total
                }
                $scope.revenue_sum = team_sum, $scope.revenue_sum_html = $sce.trustAsHtml($filter("toMoney")($scope.revenue_sum, $scope.currency)), console.log($scope.xAxisTickValues), console.log($scope.xAxisTickKeys), processing = !1;
                $scope.team.revenues = {
                    currency: $scope.currency
                }, $scope.processing = !1, $("#date-range-field").removeAttr("disabled")
            }, function() {
                console.log("Access denied"), $location.url("/401")
            })
        }, $scope.getLastMonth = function() {
            var startDate = moment().date(1).subtract("month", 1).format(dateFormat),
                endDate = moment().date(1).subtract("days", 1).format(dateFormat);
            $scope.getTeamStats(startDate, endDate)
        }, $scope.sort = "revenues_sum", $scope.reverse = !0, $scope.changeSort = function(value) {
            return $scope.sort == value ? void($scope.reverse = !$scope.reverse) : ($scope.sort = value, void($scope.reverse = "revenues_sum" == value ? !0 : !1))
        }, $scope.barColor = function() {
            return function() {
                return "hsla(75,100%,36%,.6)"
            }
        }, $scope.toolTipContentFunction = function() {
            return function(key, x, y) {
                return '<div class="value">' + y + "</div><div>" + x + "</div>"
            }
        }, $scope.getLast31Days(), $scope.button_selection = 1
    }]), Number.prototype.toMoney = function(decimals, decimal_sep, thousands_sep) {
        var n = this,
            c = isNaN(decimals) ? 2 : Math.abs(decimals),
            d = decimal_sep || ",",
            t = "undefined" == typeof thousands_sep ? "," : thousands_sep,
            sign = 0 > n ? "-" : "",
            i = parseInt(n = Math.abs(n).toFixed(c)) + "",
            j = (j = i.length) > 3 ? j % 3 : 0;
        return sign + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "")
    }, app.controller("SocialSettingsController", function($scope, $rootScope, $stateParams, FacebookPages, $FB, TwitterAccount, FacebookAccount, YoutubeAccount, Analytics, $timeout, $interval) {
        $scope.facebook = {
            pages: [],
            connected: !1
        }, $scope.twitter = {
            connected: !1
        }, $scope.youtube = {
            connected: !1
        }, $scope.getFBConnection = function() {
            var fb_params = {
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken
            };
            FacebookAccount.get(fb_params, function() {
                $scope.facebook.connected = !0
            }, function() {
                $scope.facebook.connected = !1
            }), FacebookPages.get(fb_params, function(success) {
                if (success.pages && success.pages.length > 0) {
                    $scope.facebook.pages = success.pages;
                    for (var i = 0; i < $scope.facebook.pages.length; i++) $scope.facebook.pages[i].selected = 1 == $scope.facebook.pages[i].selected ? !0 : !1;
                    $scope.facebook.connected = !0
                }
            }, function() {})
        }, $scope.connectFB = function() {
            $FB.login(function(res) {
                if (res.authResponse) {
                    console.log(res);
                    var facebook_params = {
                        user_name: $stateParams.user,
                        authToken: $rootScope.session.authToken,
                        fb_oauth_token: res.authResponse.accessToken
                    };
                    FacebookAccount.post(facebook_params, function() {
                        $scope.facebook.connected = !0, Analytics.trackEvent("stream", "FacebookConnectOk")
                    }, function() {
                        $scope.facebook.connected = !1, Analytics.trackEvent("stream", "FacebookConnectError")
                    })
                }
            }, {
                scope: "manage_pages,publish_stream"
            })
        }, $scope.saveFBPages = function() {
            for (var pages = [], i = 0; i < $scope.facebook.pages.length; i++) pages.push({
                id: $scope.facebook.pages[i].id,
                name: $scope.facebook.pages[i].name,
                selected: $scope.facebook.pages[i].selected ? 1 : 0,
                access_token: $scope.facebook.pages[i].access_token
            });
            var fb_put_params = {
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken,
                pages: pages
            };
            FacebookPages.save(fb_put_params, function() {}, function() {})
        }, $scope.getTwitterAccount = function() {
            var twitter_params = {
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken
            };
            TwitterAccount.get(twitter_params, function() {
                $scope.twitter.connected = !0
            }, function(error) {
                console.log(error)
            })
        }, $scope.connectTwitter = function() {
            if (0 == $scope.twitter.connected) var wnd = window.open("https://www.hitbox.tv/api/twitter/login?user_name=" + $stateParams.user + "&authToken=" + $rootScope.session.authToken, "_blank"),
                checkTwitterPopout = $interval(function() {
                    (null == wnd || wnd.closed) && ($interval.cancel(checkTwitterPopout), $scope.getTwitterAccount())
                }, 1e3);
            else $scope.verifyTwitter()
        }, $scope.verifyTwitter = function() {
            var twitter_params = {
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken
            };
            TwitterAccount.verify(twitter_params, function() {
                $scope.twitter.connected = !0, Analytics.trackEvent("stream", "TwitterConnectOk")
            }, function() {
                $scope.twitter.connected = !1, Analytics.trackEvent("stream", "TwitterConnectError")
            })
        }, $scope.connectYoutube = function() {
            0 == $scope.youtube.connected && window.open("https://test.dev.hitbox.tv/api/youtube/login?user_name=" + $stateParams.user + "&authToken=" + $rootScope.session.authToken, "_blank")
        }, $scope.getYoutubeAccount = function() {
            var youtube_params = {
                user_name: $stateParams.user,
                authToken: $rootScope.session.authToken
            };
            YoutubeAccount.get(youtube_params, function() {
                $scope.youtube.connected = !0, Analytics.trackEvent("stream", "YoutubeConnectOk")
            }, function() {
                Analytics.trackEvent("stream", "YoutubeConnectError"), $scope.youtube.connected = !1
            })
        }, $scope.getFBConnection(), $scope.verifyTwitter(), $scope.getYoutubeAccount()
    }), app.controller("StatsSettingsController", ["$scope", "$rootScope", "$stateParams", "$dialog", "Media", "GaStats", "Stats", function($scope, $rootScope, $stateParams, $dialog, Media, GaStats, Stats) {
        $scope.endDate = moment().format("YYYY-MM-DD"), $scope.startDate = moment().add("days", -14).format("YYYY-MM-DD"), $scope.changeDate = function(startDate, endDate) {
            $scope.startDate = startDate, $scope.endDate = endDate, $scope.charts = {}, $scope.stats = {}, $scope.$apply()
        }, $scope.charts = {}, $scope.stats = {}, $scope.$watch("[startDate, endDate]", function() {
            endDate = $scope.endDate, startDate = $scope.startDate, params = {
                media_id: $stateParams.user,
                authToken: $rootScope.session.authToken,
                metric: "visits",
                startDate: startDate,
                endDate: endDate
            }, GaStatsRes = GaStats.get(params, function(stats) {
                console.log(stats), $scope.stats.views = stats, $scope.charts.views = {
                    labels: stats.visits.date,
                    datasets: [{
                        fillColor: "rgba(97,188,0,0.3)",
                        strokeColor: "rgba(97,188,0,0.5)",
                        data: stats.visits.visits
                    }, {
                        fillColor: "rgba(24,172,210,0.3)",
                        strokeColor: "rgba(24,172,210,0.5)",
                        data: stats.visitors.visitors
                    }]
                }, stepWidth = Math.round(stats.visits.max / 10) + 1, $scope.charts.views.options = {
                    scaleOverride: !0,
                    scaleStartValue: 0,
                    scaleSteps: 10,
                    scaleStepWidth: stepWidth,
                    pointDot: !1,
                    datasetStrokeWidth: 1,
                    scaleGridLineColor: "hsl(0,0%,91%)",
                    bezierCurve: !1
                }
            }), params = {
                media_id: $stateParams.user,
                authToken: $rootScope.session.authToken,
                metric: "viewers",
                startDate: startDate,
                endDate: endDate
            }, StatsRes = Stats.get(params, function(stats) {
                console.log(stats), $scope.charts.viewers = {
                    labels: stats.timestamp,
                    datasets: [{
                        fillColor: "rgba(97,188,0,0.3)",
                        strokeColor: "rgba(97,188,0,0.5)",
                        data: stats.viewers
                    }]
                }, stepWidth = Math.round(stats.max / 10) + 1, $scope.charts.viewers.options = {
                    scaleOverride: !0,
                    scaleStartValue: 0,
                    scaleSteps: 10,
                    scaleStepWidth: stepWidth,
                    pointDot: !1,
                    datasetStrokeWidth: 1,
                    scaleGridLineColor: "hsl(0,0%,91%)",
                    bezierCurve: !1
                }
            }), params = {
                media_id: $stateParams.user,
                authToken: $rootScope.session.authToken,
                metric: "followers",
                startDate: startDate,
                endDate: endDate
            }, StatsRes = Stats.get(params, function(stats) {
                $scope.charts.followers = {
                    labels: stats.timestamp,
                    datasets: [{
                        fillColor: "rgba(24,172,210,0.3)",
                        strokeColor: "rgba(24,172,210,0.5)",
                        data: stats.followers
                    }]
                }, stepWidth = Math.round(stats.max / 10) + 1, $scope.charts.followers.options = {
                    scaleOverride: !0,
                    scaleStartValue: 0,
                    scaleSteps: 10,
                    scaleStepWidth: stepWidth,
                    pointDot: !1,
                    datasetStrokeWidth: 1,
                    scaleGridLineColor: "hsl(0,0%,91%)",
                    bezierCurve: !1
                }
            }), params = {
                media_id: $stateParams.user,
                authToken: $rootScope.session.authToken,
                metric: "topContent",
                startDate: startDate,
                endDate: endDate
            }, GaStatsRes = GaStats.get(params, function(stats) {
                $scope.charts.topContent = {
                    type: "Table",
                    displayed: !0,
                    cssStyle: "height:auto; width:100%;",
                    data: {
                        cols: [{
                            id: "content",
                            label: "Content",
                            type: "string"
                        }, {
                            id: "views",
                            label: "Views",
                            type: "number"
                        }],
                        rows: stats.content
                    }
                }
            }), params = {
                media_id: $stateParams.user,
                authToken: $rootScope.session.authToken,
                metric: "geo",
                startDate: startDate,
                endDate: endDate
            }, GaStatsRes = GaStats.get(params, function(stats) {
                $scope.charts.countries = {
                    type: "Table",
                    displayed: !0,
                    cssStyle: "height:auto; width:700px;",
                    data: {
                        cols: [{
                            id: "content",
                            label: "Country",
                            type: "string"
                        }, {
                            id: "views",
                            label: "Views",
                            type: "number"
                        }],
                        rows: stats.countries
                    }
                }
            })
        }, !0)
    }]), app.controller("SubscribersSettingsController", function($scope, $rootScope, $stateParams, SubscriberList) {
        $scope.displayState = "loading", $scope.subscribers_total = 0, $scope.subscribers = [], $scope.activeSubCount = 0, $scope.orderName = "Active", $scope.showActive = !0, $scope.showCanceled = !1, $scope.showExpired = !1, $scope.showAll = !1, $scope.setFilter = function(filter) {
            switch (filter) {
                case "active":
                    $scope.orderName = "Active", $scope.showActive = !0, $scope.showCanceled = !1, $scope.showExpired = !1, $scope.showAll = !1;
                    break;
                case "canceled":
                    $scope.orderName = "Canceled", $scope.showActive = !1, $scope.showCanceled = !0, $scope.showExpired = !1, $scope.showAll = !1;
                    break;
                case "expired":
                    $scope.orderName = "Expired", $scope.showActive = !1, $scope.showCanceled = !1, $scope.showExpired = !0, $scope.showAll = !1;
                    break;
                case "total":
                    $scope.orderName = "Total", $scope.showActive = !1, $scope.showCanceled = !1, $scope.showExpired = !1, $scope.showAll = !0
            }
        }, $scope.filterFunction = function(sub) {
            return $scope.showAll ? !0 : $scope.showCanceled ? 1 == sub.canceled ? !0 : !1 : $scope.showActive ? 0 == sub.timed_out ? !0 : !1 : $scope.showExpired ? 1 == sub.timed_out ? !0 : !1 : void 0
        }, params = {
            user_name: $stateParams.user,
            authToken: $rootScope.session.authToken,
            nocache: !0
        }, SubscriberList.get(params, function(list) {
            if ($scope.subscribers = list.subscribers, list.subscribers.length) {
                $scope.displayState = "data", $scope.subscribers_total = list.subscribers.length;
                for (var i = 0; i < $scope.subscribers.length; i++) {
                    $scope.subscribers[i].date_added = $scope.subscribers[i].sub_date_added, $scope.subscribers[i].date_valid = $scope.subscribers[i].sub_date_valid;
                    var date_valid = moment($scope.subscribers[i].date_valid),
                        right_now = moment();
                    right_now > date_valid ? ($scope.subscribers[i].timed_out = !0, $scope.subscribers[i].canceled = !0) : ($scope.subscribers[i].timed_out = !1, $scope.activeSubCount++)
                }
            } else $scope.displayState = "no_data"
        }, function() {
            $scope.displayState = "no_data"
        }), $scope.getcsv = function() {
            for (var finaldata = [
                    [$stateParams.user + " Subscriptions"],
                    ["Username", "Start of Subscription", "Subscription valid Until", "Active"]
                ], i = 0; i < $scope.subscribers.length; i++) {
                var active = "Yes";
                $scope.subscribers[i].canceled && (active = "No"), finaldata.push([$scope.subscribers[i].user_name, $scope.subscribers[i].sub_date_added, $scope.subscribers[i].sub_date_valid, active])
            }
            return finaldata
        }
    }), app.controller("SubscriptionsSettingsController", function($scope, $rootScope, $stateParams, SubscriptionList, SubscriberEmotes, SubscriberBadges) {
        $scope.displayState = "loading", $scope.subscriptions_total = 0, $scope.subscriptions = [], params = {
            user_name: $stateParams.user,
            authToken: $rootScope.session.authToken,
            nocache: !0
        }, SubscriptionList.get(params, function(list) {
            $scope.subscriptions = list.subscriptions, list.subscriptions.length ? ($scope.displayState = "data", $scope.subscriptions_total = list.subscriptions.length) : $scope.displayState = "no_data";
            for (var i = 0; i < $scope.subscriptions.length; i++) {
                $scope.subscriptions[i].subEmotes = SubscriberEmotes.get({
                    channel: $scope.subscriptions[i].user_name
                }), $scope.subscriptions[i].subBadges = SubscriberBadges.get({
                    channel: $scope.subscriptions[i].user_name
                }), $scope.subscriptions[i].date_valid = $scope.subscriptions[i].sub_date_valid;
                var date_valid = moment($scope.subscriptions[i].date_valid),
                    right_now = moment();
                right_now > date_valid ? ($scope.subscriptions[i].timed_out = !0, $scope.subscriptions[i].canceled = !0) : $scope.subscriptions[i].timed_out = !1
            }
        }, function() {
            $scope.displayState = "no_data"
        }), $scope.getSubMedia = function() {
            var submediaparams = {
                channel: $stateParams.channel
            };
            Emotes = SubscriberEmotes.get(submediaparams, function(emotes) {
                $scope.subEmotes = emotes.icons
            }, function() {}), Badges = SubscriberBadges.get(submediaparams, function(badges) {
                $scope.subBadges = badges.badges
            }, function() {})
        }
    }), app.controller("SpotlightController", ["$scope", "$rootScope", "Media", "Promotion", "$sce", "$timeout", "MediaFeatured", "DisplayService", "PlaybackService", function($scope, $rootScope, Media, Promotion, $sce, $timeout, MediaFeatured, DisplayService, PlaybackService) {
        $scope.isMobile, $scope.isTablet, $scope.deviceSize = DisplayService.deviceSize, $scope.$on("isMobile", function() {
            $scope.isMobile = !0, $scope.isTablet = !1
        }), $scope.$on("isTablet", function() {
            $scope.isMobile = !1, $scope.isTablet = !0
        }), $scope.$on("isDesktop", function() {
            $scope.isMobile = !1, $scope.isTablet = !1
        }), $scope.getFeaturedMedia = function() {
            MediaFeatured.get({}, function(data) {
                $scope.media = data, 0 == PlaybackService.getMediaId() && PlaybackService.setMediaId($scope.media.media_id)
            }, function() {})
        }, $scope.featuredList = 0, $scope.dummylist = [];
        var carouselCount = 0;
        $scope.$watch("featuredList", function(newVal) {
            0 > newVal ? $scope.featuredList = $scope.dummylist.length - 1 : newVal > $scope.dummylist.length - 1 && ($scope.featuredList = 0), carouselCount = $scope.featuredList
        }), $scope.switchPromo = function(index) {
            $scope.featuredList = index
        }, Promotion.get({}, function(promo) {
            $scope.dummylist = promo;
            for (var i = 0; i < $scope.dummylist.length; i++) $scope.dummylist[i].html = $sce.trustAsHtml($scope.dummylist[i].html);
            playCarousel = function() {
                carouselCount++, carouselCount > $scope.dummylist.length - 1 && (carouselCount = 0), $scope.featuredList = carouselCount, $scope.startCarousel()
            }, $scope.stopCarousel = function() {
                $timeout.cancel(timeout)
            }, $scope.startCarousel = function() {
                timeout = $timeout(playCarousel, 1e4)
            }, $scope.$on("$stateChangeStart", function() {
                $timeout.cancel(timeout)
            }), $scope.startCarousel()
        }), $scope.getFeaturedMedia()
    }]), app.controller("StatisticsCtrl", ["$scope", "$rootScope", "$stateParams", "$dialog", "Revenues", "GaStats", "$timeout", "$filter", "Browser", "$location", "$sce", "StreamStats", "Stats", "StreamOverallStats", "Auth", "CountryService", "User", "Analytics", function($scope, $rootScope, $stateParams, $dialog, Revenues, GaStats, $timeout, $filter, Browser, $location, $sce, StreamStats, Stats, StreamOverallStats, Auth, CountryService, User, Analytics) {
        $scope.showMonths = 3, $scope.endDate = moment.utc().endOf("day").unix(), $scope.startDate = moment.utc().startOf("day").subtract("month", 1).unix(), $scope.charts = {
            series: [],
            rangeCallback: function(min, max) {
                min = Math.round(min / 1e3), max = Math.round(max / 1e3), $scope.rangeCallback(min, max)
            },
            streamstats: {
                series: []
            },
            streamstatsupdate: {
                series: []
            },
            revenuestats: {
                series: [{
                    name: "Daily",
                    data: [],
                    type: "line"
                }, {
                    name: "Total",
                    data: [],
                    yAxis: 1,
                    type: "areaspline"
                }]
            },
            step: 864e5,
            hasRevenues: void 0,
            processing: 0
        }, $scope.stats = {
            revenues: {},
            overall: {}
        }, "function" == typeof amplify.store && ($scope.selected_stats_series = amplify.store("stats.selected_stats_series")), $scope.selected_stats_series || ($scope.selected_stats_series = {
            viewer: !0,
            viewer_avg: !1,
            follower: !1,
            registered: !1,
            embed: !1,
            subscriber: !1,
            android: !1,
            revenues_total: !1,
            revenues: !0,
            ios: !1,
            chromecast: !1,
            web: !1,
            views: !1,
            ads: !0
        }), $scope.selected_labels = {
            viewer: "Peak Viewers",
            viewer_avg: "Avg. Viewers",
            follower: "Followers",
            registered: "Registered",
            embed: "Embed",
            subscriber: "Subscriber",
            android: "Android",
            views: "Views",
            revenues_total: "Revenues Sum",
            revenues: "Revenues Daily",
            ios: !1,
            chromecast: "ChromeCast",
            web: !1,
            views: !1,
            ads: "Commerical Breaks"
        }, $scope.reloadStartDate = $scope.startDate, $scope.reloadEndDate = $scope.endDate, $scope.rangeUpdate = {
            min: 1e3 * $scope.startDate,
            max: 1e3 * $scope.endDate
        }, $scope.data = {
            revenues: {},
            streamstats: {},
            overallstats: {},
            min: 0,
            max: 0
        }, $scope.hasData = !1, $scope.noRevenues = void 0, $scope.worldmapRevenues = null, $scope.worldmapOverall = null, $scope.stats.overall.totalUniques = "-", $scope.stats.overall.totalViews = "-", $scope.stats.overall.totalViewtime = "-", $scope.stats.revenues.total = $sce.trustAsHtml("-"), $scope.firstRun = !0, $scope.$watch("[reloadStartDate, reloadEndDate]", function(newVal, oldVal) {
            newVal != oldVal && $scope.reloadData($scope.reloadStartDate, $scope.reloadEndDate)
        }, !0), $scope.$watch("[startDate, endDate]", function(newVal, oldVal) {
            newVal != oldVal && $scope.getStreamStats()
        }, !0), $scope.$watch("selected_stats_series", function(newVal, oldVal) {
            newVal && newVal != oldVal && $scope.setSelectedStatsSeries()
        }, !0), $scope.$watch("charts.processing", function(newVal, oldVal) {
            0 == newVal && newVal != oldVal && $scope.setSelectedStatsSeries()
        }), $scope.rangeButton = function(days) {
            $scope.reloadStartDate = moment.utc().startOf("day").subtract("days", days).unix(), $scope.reloadEndDate = moment.utc().endOf("day").unix();
            var startDate = moment.utc().startOf("day").subtract("days", days).toDate(),
                endDate = moment.utc().startOf("day").toDate();
            $scope.datepicker.DatePickerSetDate([startDate, endDate], !0), $scope.daterangeSetText(startDate, endDate), Analytics.trackEvent("stats", "rangeButtonClicked", days)
        }, $scope.rangeToday = function() {
            $scope.reloadStartDate = moment.utc().startOf("day").unix(), $scope.reloadEndDate = moment.utc().endOf("day").unix();
            var startDate = moment.utc().startOf("day").toDate(),
                endDate = startDate;
            $scope.datepicker.DatePickerSetDate([startDate], !0), $scope.daterangeSetText(startDate, endDate), Analytics.trackEvent("stats", "rangeTodayClicked")
        }, $scope.rangeYesterday = function() {
            $scope.reloadStartDate = moment.utc().startOf("day").subtract("days", 1).unix(), $scope.reloadEndDate = moment.utc().startOf("day").unix();
            var startDate = moment.utc().startOf("day").subtract("days", 1).toDate(),
                endDate = startDate;
            $scope.datepicker.DatePickerSetDate([startDate], !0), $scope.daterangeSetText(startDate, endDate), Analytics.trackEvent("stats", "rangeYesterdayClicked")
        }, $scope.rangeThisMonth = function() {
            $scope.reloadStartDate = moment.utc().startOf("month").unix(), $scope.reloadEndDate = moment.utc().endOf("day").unix();
            var startDate = moment.utc().startOf("month").toDate(),
                endDate = moment.utc().startOf("day").toDate();
            $scope.datepicker.DatePickerSetDate([startDate, endDate], !0), $scope.daterangeSetText(startDate, endDate), Analytics.trackEvent("stats", "rangeThisMonthClicked")
        }, $scope.rangeLastMonth = function() {
            $scope.reloadStartDate = moment.utc().startOf("month").subtract("days", 1).startOf("month").unix(), $scope.reloadEndDate = moment.utc().startOf("month").subtract("days", 1).unix();
            var startDate = moment.utc().startOf("month").subtract("days", 1).startOf("month").toDate(),
                endDate = moment.utc().startOf("month").subtract("days", 1).toDate();
            $scope.datepicker.DatePickerSetDate([startDate, endDate], !0), $scope.daterangeSetText(startDate, endDate), Analytics.trackEvent("stats", "rangeLastMonthClicked")
        }, $scope.rangeCallback = function(min, max) {
            $scope.$apply(function() {
                $scope.reloadStartDate = min, $scope.reloadEndDate = max
            })
        }, $scope.reloadData = function(startDate, endDate) {
            $scope.daterangeHide(), $scope.charts.streamstats.series = [], $scope.firstRun = !1, $scope.charts.processing = 3, $scope.stats.overall.totalUniques = "-", $scope.stats.overall.totalViews = "-", $scope.stats.overall.totalViewtime = "-", $scope.stats.revenues.total = $sce.trustAsHtml("-"), $scope.data.streamstats.totalads = "-", $scope.getStreamStats(startDate, endDate, $scope.charts.streamstats), $timeout(function() {
                $scope.getRevenuesStats(startDate, endDate, $scope.charts.streamstats, !0)
            }, 1), $scope.getOverallStats(startDate, endDate)
        }, $scope.setSelectedStatsSeries = function(target) {
            "function" == typeof amplify.store && amplify.store("stats.selected_stats_series", $scope.selected_stats_series);
            for (var target = $scope.charts.streamstats, i = 0; i < target.series.length; i++) "undefined" != typeof $scope.selected_stats_series[target.series[i].name] && (target.series[i].visible = $scope.selected_stats_series[target.series[i].name])
        }, $scope.getStats = function() {
            $scope.charts.processing = 3, $scope.data.min = $scope.startDate, $scope.data.max = $scope.endDate, $scope.getStreamStats($scope.startDate, $scope.endDate, $scope.charts.streamstats), $timeout(function() {
                $scope.getRevenuesStats($scope.startDate, $scope.endDate, $scope.charts.streamstats, !0)
            }, 1), $scope.getOverallStats($scope.startDate, $scope.endDate)
        }, $scope.getStreamStats = function(startDate, endDate, target) {
            params = {
                channel: $stateParams.user,
                authToken: $rootScope.session.authToken,
                startDate: 1e3 * startDate,
                endDate: 1e3 * endDate
            }, res = streamStats = StreamStats.get(params, function(stats) {
                var newSeries = [];
                $scope.charts.step = stats.step, stats = $scope.fillDataWithZeros(stats), $scope.data.streamstats = stats;
                var totalads = 0,
                    start = 1e3 * startDate,
                    end = 1e3 * endDate;
                if ($scope.data.streamstats.timeline.ads)
                    for (var i = 0; i < $scope.data.streamstats.timeline.ads.length; i++) $scope.data.streamstats.timeline.ads[i][0] >= start && $scope.data.streamstats.timeline.ads[i][0] <= end && (totalads += $scope.data.streamstats.timeline.ads[i][1]);
                $scope.data.streamstats.totalads = totalads;
                var i = 0;
                for (timeline in $scope.data.streamstats.timeline) "ads" == timeline ? newSeries[i] = {
                    name: timeline,
                    data: $scope.data.streamstats.timeline[timeline],
                    type: "column",
                    yAxis: 1
                } : "viewer" == timeline ? ($scope.hasData = !0, newSeries[i] = {
                    name: timeline,
                    data: $scope.data.streamstats.timeline[timeline],
                    type: "areaspline",
                    yAxis: 2
                }) : newSeries[i] = {
                    name: timeline,
                    data: $scope.data.streamstats.timeline[timeline],
                    type: "areaspline",
                    yAxis: 2
                }, i++;
                0 == newSeries.length && (newSeries = $scope.createEmptyData(newSeries));
                for (var i = 0; i < newSeries.length; i++) target.series[i] = newSeries[i];
                $timeout(function() {
                    $scope.charts.processing--
                }, 1)
            }, function() {
                $timeout(function() {
                    $scope.charts.processing--
                }, 1)
            })
        }, $scope.getStatsCSV = function() {
            var template = {
                    viewer: "Peak Viewers",
                    viewer_avg: "Avg. Viewers",
                    follower: "Followers",
                    registered: "Registered",
                    embed: "Embed",
                    subscriber: "Subscriber",
                    android: "Android",
                    ios: !1,
                    chromecast: "ChromeCast",
                    web: !1,
                    ads: "Commercial Breaks",
                    views: !1,
                    revenues: "Revenues",
                    revenues_total: !1
                },
                format = "MMMM Do YYYY",
                zerofill = "";
            moment($scope.charts.streamstats.series[0].data[0][0]).format("MMMM Do YYYY") == moment($scope.charts.streamstats.series[0].data[1][0]).format("MMMM Do YYYY") && (format = "MMMM Do YYYY, HH:mm", template.revenues = !1);
            for (var finaldata = [
                    [$stateParams.user],
                    ["Viewer Statistics"],
                    [moment(1e3 * $scope.reloadStartDate).format("MMMM Do YYYY") + " - " + moment(1e3 * $scope.reloadEndDate - 864e5).format("MMMM Do YYYY")]
                ], titel = ["Date"], data = [], i = 0; i < $scope.charts.streamstats.series.length; i++)
                if (template[$scope.charts.streamstats.series[i].name]) {
                    titel.push(template[$scope.charts.streamstats.series[i].name]);
                    for (var n = 0; n < $scope.charts.streamstats.series[i].data.length; n++) data[n] || (data[n] = [moment($scope.charts.streamstats.series[i].data[n][0]).format(format)]), data[n].push($scope.charts.streamstats.series[i].data[n][1].toString().replace(".", ",") || zerofill)
                }
            if ($scope.currency && (zerofill = "0"), $scope.currency && template.revenues) {
                titel.push("Currency");
                for (var n = 0; n < $scope.charts.streamstats.series[0].data.length; n++) data[n].length == titel.length - 1 ? data[n].push($scope.currency) : (data[n].push(0), data[n].push($scope.currency))
            }
            finaldata.push(titel), finaldata = finaldata.concat(data), finaldata.push([], [], [$stateParams.user], ["Viewer Statistics by Country"], [moment(1e3 * $scope.reloadStartDate).format("MMMM Do YYYY") + " - " + moment(1e3 * $scope.reloadEndDate - 864e5).format("MMMM Do YYYY")]), $scope.currency && finaldata.push(["Last Revenue Update: " + $scope.stats.revenues.last_updated]), finaldata.push(["Country", "Unique Viewers", "Views", "View Time in Hours"]), $scope.currency && finaldata[finaldata.length - 1].push("Revenues", "Currency");
            var tempdata = $scope.topCountriesMapData;
            for (var key in $scope.overallCountriesMapData) finaldata.push([CountryService.getCountryName(key), $scope.stats.overall.countries[key].uniques, $scope.stats.overall.countries[key].views, Math.round($scope.stats.overall.countries[key].viewtime / 3600, 2).toString().replace(".", ","), (tempdata[key] || zerofill).toString().replace(".", ","), $scope.currency || ""]), delete tempdata[key];
            for (var key in tempdata) finaldata.push([CountryService.getCountryName(key) || "Unknown", 0, 0, 0, (tempdata[key] || zerofill).toString().replace(".", ","), $scope.currency || ""]);
            return finaldata
        }, $scope.createEmptyData = function(series) {
            for (var end = 1e3 * $scope.reloadEndDate, cur = 1e3 * $scope.reloadStartDate, data = []; end > cur;) data.push([cur, 0]), cur += $scope.charts.step;
            for (var stats = $scope.charts.streamstats.series, i = 0; i < stats.length; i++) series[i] = {
                name: stats[i].name,
                data: data,
                type: stats[i].type,
                visible: stats[i].visible,
                yAxis: stats[i].yAxis
            };
            return series
        }, $scope.fillDataWithZeros = function(stats) {
            var result = {},
                end = 1e3 * $scope.reloadEndDate;
            for (timeline in stats.timeline) {
                var cur = 1e3 * $scope.reloadStartDate;
                result[timeline] = [];
                for (var i = 0; i < stats.timeline[timeline].length; i++) {
                    for (; cur < stats.timeline[timeline][i][0];) result[timeline].push([cur, 0]), cur += $scope.charts.step;
                    result[timeline].push(stats.timeline[timeline][i]), cur += $scope.charts.step
                }
                for (; end > cur;) result[timeline].push([cur, 0]), cur += $scope.charts.step
            }
            return stats.timeline = result, stats
        }, $scope.getOverallStats = function(startDate, endDate) {
            params = {
                channel: $stateParams.user,
                authToken: $rootScope.session.authToken,
                startDate: startDate,
                endDate: endDate
            }, res = StreamOverallStats.get(params, function(stats) {
                $scope.data.overallstats = stats, $scope.stats.overall = stats, $scope.stats.overall.totalViewtime = $scope.stats.overall.totalViewtime / 3600, $scope.setupOverallStatsData(stats), $timeout(function() {
                    $scope.charts.processing--
                }, 1)
            }, function() {
                $timeout(function() {
                    $scope.charts.processing--
                }, 1)
            })
        };
        var firstRevenueRun = !0;
        $scope.getRevenuesStats = function(startDate, endDate, target, updateData) {
            params = {
                type: "channel",
                user: $stateParams.user,
                authToken: $rootScope.session.authToken,
                startDate: startDate,
                endDate: endDate
            }, res = Revenues.get(params, function(stats) {
                if ($scope.data.revenues = stats.revenues, $scope.setupRevenuesStatsData(stats), !stats.revenues || !stats.revenues.timeline) return firstRevenueRun && ($scope.noRevenues = !0, $scope.charts.hasRevenues = !1, $scope.selected_stats_series.ads = !1, $scope.selected_stats_series.revenues = !1, $scope.selected_stats_series.revenues_total = !1, $scope.selected_labels.ads = !1, $scope.selected_labels.revenues = !1, $scope.selected_labels.revenues_total = !1), void $timeout(function() {
                    $scope.charts.processing--
                }, 1);
                $scope.selected_stats_series.ads = !0, $scope.selected_stats_series.revenues = !0, $scope.hasData = !0, updateData && (target.series[12] = {
                    name: "revenues",
                    data: stats.revenues.timeline,
                    type: "column",
                    visible: !0
                }, target.series[13] = {
                    name: "revenues_total",
                    data: [],
                    type: "line",
                    visible: !1
                });
                var sum = 0,
                    start = 1e3 * startDate;
                firstRevenueRun = !1;
                for (var end = 1e3 * endDate, i = 0; i < stats.revenues.timeline.length; i++) stats.revenues.timeline[i][0] >= start && stats.revenues.timeline[i][0] <= end && (sum += stats.revenues.timeline[i][1], updateData && target.series[13].data.push([stats.revenues.timeline[i][0], sum]));
                $scope.stats.revenues.total = $sce.trustAsHtml($filter("toMoney")(sum, $scope.currency)), $timeout(function() {
                    $scope.charts.processing--
                }, 1)
            }, function() {
                firstRevenueRun && ($scope.noRevenues = !0, $scope.charts.hasRevenues = !1, $scope.selected_stats_series.ads = !1, $scope.selected_stats_series.revenues = !1, $scope.selected_stats_series.revenues_total = !1, $scope.selected_labels.ads = !1, $scope.selected_labels.revenues = !1, $scope.selected_labels.revenues_total = !1), $timeout(function() {
                    $scope.charts.processing--
                }, 1)
            })
        }, $scope.setupOverallStatsData = function(stats) {
            var countries = stats.countries;
            $scope.overallCountriesMapData = [];
            for (var country in countries) {
                var countryCode = country;
                "NULL" != countryCode && ($scope.overallCountriesMapData[countryCode] = countries[country].views)
            }
            var mapId = "#worldmap_countries_overall";
            null != $scope.worldmapOverall ? ($scope.worldmapOverall.series.regions[0].clear(), $scope.worldmapOverall.series.regions[0].setValues($scope.overallCountriesMapData)) : $scope.worldmapOverall = new jvm.WorldMap({
                map: "world_mill_en",
                container: $(mapId),
                backgroundColor: "transparent",
                series: {
                    regions: [{
                        values: $scope.overallCountriesMapData,
                        scale: ["#bfd776", "#608000"],
                        normalizeFunction: "polynomial",
                        hoverOpacity: .6,
                        hoverColor: !1
                    }]
                },
                regionStyle: {
                    initial: {
                        fill: "rgba(200,200,200,.35)",
                        stroke: "none"
                    },
                    hover: {
                        "fill-opacity": .6
                    }
                },
                onRegionLabelShow: function(e, el, code) {
                    try {
                        el.html($scope.stats.overall.countries[code] && $scope.stats.overall.countries[code].views ? '<div><div class="value"><div>' + CountryService.getCountryName(code) + "</div><div>Views: " + $scope.stats.overall.countries[code].views + "</div><div>Uniques: " + $scope.stats.overall.countries[code].uniques + "</div><div>Viewtime: " + $filter("number")($scope.stats.overall.countries[code].viewtime / 3600, 2) + "h</div></div></div>" : "")
                    } catch (e) {}
                }
            }), $timeout(function() {
                $scope.worldmapOverall.setSize()
            }, 1e3)
        }, $scope.setupRevenuesStatsData = function(stats) {
            if (null != $scope.worldmapRevenues && $scope.worldmapRevenues.series.regions[0].clear(), $scope.earned_total = 0, $scope.earned_max = 0, $scope.topCountriesMapData = [], $scope.topCountries = [], !stats || !stats.revenues || !stats.revenues.summary) return $scope.contents = [], $scope.contents.live = {
                percent: 0,
                earnings: 0,
                earnings_html: $sce.trustAsHtml($filter("toMoney")(0, $scope.currency))
            }, $scope.contents.video = {
                percent: 0,
                earnings: 0,
                earnings_html: $sce.trustAsHtml($filter("toMoney")(0, $scope.currency))
            }, void($scope.noSubscriptions || ($scope.contents.subscriptions = {
                percent: 0,
                earnings: 0,
                earnings_html: $sce.trustAsHtml($filter("toMoney")(0, $scope.currency))
            }));
            $scope.stats.revenues.last_updated = moment.utc(stats.revenues.summary.last_updated).format("MMM D YYYY"), stats.revenues && stats.revenues.summary && stats.revenues.summary.currency && ($scope.currency = stats.revenues.summary.currency), $scope.hasData = !0;
            for (var daily = stats.revenues.timeline, earned_total = 0, earned_max = 0, i = 0; i < daily.length; i++) earned = daily[i][1], earned_total += earned, earned > earned_max && (earned_max = earned);
            $scope.earned_total = earned_total, $scope.earned_max = earned_max, $scope.stats.max = $scope.earned_max_html, $scope.stats.sum = $scope.earned_total_html, $scope.stats.label_max = " highest daily Earnings", $scope.stats.label_sum = "Total Revenues";
            var countries = stats.revenues.top.countries,
                top_countries = [];
            $scope.topCountriesMapData = [];
            for (var country in countries) {
                var countryCode = CountryService.getCountryCode(country);
                "United Kingdom" == country && (countryCode = CountryService.getCountryCode("Great Britain")), 100 * countries[country] / 100 > 0 && ($scope.topCountriesMapData[countryCode] = countries[country], top_countries.push({
                    country: country,
                    earnings: countries[country],
                    percent: 100 / $scope.earned_total * countries[country],
                    earnings_html: $sce.trustAsHtml($filter("toMoney")(countries[country], $scope.currency))
                }))
            }
            $scope.topCountries = top_countries, $scope.countryListLimit = 6, $scope.videosListLimit = 6, $scope.contents = stats.revenues.top.content, $scope.contents.live ? ($scope.contents.live.percent = 100 / $scope.earned_total * $scope.contents.live.earnings, $scope.contents.live.earnings_html = $sce.trustAsHtml($filter("toMoney")($scope.contents.live.earnings, $scope.currency))) : $scope.contents.live = {
                percent: 0,
                earnings: 0,
                earnings_html: $sce.trustAsHtml($filter("toMoney")(0, $scope.currency))
            }, $scope.contents.video ? ($scope.contents.video.percent = 100 / $scope.earned_total * $scope.contents.video.earnings, $scope.contents.video.earnings_html = $sce.trustAsHtml($filter("toMoney")($scope.contents.video.earnings, $scope.currency))) : $scope.contents.video = {
                percent: 0,
                earnings: 0,
                earnings_html: $sce.trustAsHtml($filter("toMoney")(0, $scope.currency))
            }, $scope.noSubscriptions = !1, $scope.contents.subscriptions && $scope.contents.subscriptions.earnings > 0 ? ($scope.contents.subscriptions.percent = 100 / $scope.earned_total * $scope.contents.subscriptions.earnings, $scope.contents.subscriptions.earnings_html = $sce.trustAsHtml($filter("toMoney")($scope.contents.subscriptions.earnings, $scope.currency))) : $scope.noSubscriptions = !0;
            var mapId = "#worldmap_countries_revenues";
            null != $scope.worldmapRevenues ? ($scope.worldmapRevenues.series.regions[0].clear(), $scope.worldmapRevenues.series.regions[0].setValues($scope.topCountriesMapData)) : $scope.worldmapRevenues = new jvm.WorldMap({
                map: "world_mill_en",
                container: $(mapId),
                backgroundColor: "transparent",
                series: {
                    regions: [{
                        values: $scope.topCountriesMapData,
                        scale: ["#bfd776", "#608000"],
                        normalizeFunction: "polynomial",
                        hoverOpacity: .6,
                        hoverColor: !1
                    }]
                },
                regionStyle: {
                    initial: {
                        fill: "rgba(200,200,200,.35)",
                        stroke: "none"
                    },
                    hover: {
                        "fill-opacity": .6
                    }
                },
                onRegionLabelShow: function(e, el, code) {
                    el.html($scope.topCountriesMapData[code] && $scope.topCountriesMapData[code] > 0 ? '<div><div class="value">' + $filter("toMoney")($scope.topCountriesMapData[code], $scope.currency) + "</div>" + el.html() + "<div>" : "")
                }
            }), $timeout(function() {
                $scope.worldmapRevenues.setSize()
            }, 1e3)
        }, $scope.getStats()
    }]), app.controller("SubNotifyCtrl", ["$scope", "$rootScope", "$stateParams", "ChatManager", "$timeout", function($scope, $rootScope, $stateParams, ChatManager) {
        $scope.lastSubscriber = !1;
        var subNotifyMsg = function(text) {
            (json = angular.fromJson(text)) ? (method = json.method, params = json.params) : (method = text.method, params = text.params), $scope.lastSubscriber = {}, $scope.$apply(function() {
                $scope.lastSubscriber.name = params.subscriber
            })
        };
        ChatManager.bind("subNotifyMessage", subNotifyMsg), $scope.$on("$stateChangeStart", function() {}), $scope.$on("$destroy", function() {
            ChatManager.unbind("subNotifyMessage", subNotifyMsg)
        }), $scope.sn = {
            close: function() {
                $scope.lastSubscriber = !1
            }
        }
    }]), app.controller("SubscriptionController", function($scope, $rootScope, $stateParams, Media, SubscriptionInfo, Payment, $timeout, $location, Subscription, Auth, SubscriberEmotes, SubscriberBadges, Paypal, $window, $cookieStore, $log, Analytics, $state, Ext1Voucher, Xsolla, $sce, $interval) {
        var authToken = {};
        $scope.waitingForPaypal = !1, $scope.waitingForXsolla = !1, $scope.alreadySubscribed = !1;
        var access = routingConfig.accessLevels;
        $scope.g2aVoucher = {
            available: !1,
            desired: !0
        }, $state.params.user || $rootScope.loggedIn || ($cookieStore.remove("hitbox"), $cookieStore.remove("hitbox.session"), "function" == typeof amplify.store && "undefined" != typeof amplify.store("hitbox.session") && amplify.store("hitbox.session", null), $rootScope.session = "", $rootScope.loggedIn = !1), !$state.params.user && $rootScope.loggedIn && ($location.path("/" == $location.path().charAt($location.path().length - 1) ? $location.path() + $rootScope.session.user_name : $location.path() + "/" + $rootScope.session.user_name), $state.params.user = $rootScope.session.user_name), $scope.init = function() {
            authToken = $rootScope.session.authToken, $scope.user = $state.params.user, $scope.paypal_data = JSON.stringify({
                channel: $state.params.channel,
                authToken: $scope.session.authToken,
                user: $scope.user
            }), Auth.authorize({
                accessLevel: access.admin,
                resource: "account",
                resource_id: $state.params.user
            }, function(auth) {
                if (auth && $state.params.token) {
                    $scope.g2aVoucher.available = !1, $scope.waitingForPaypal = !0;
                    var paypal_params = {
                        authToken: $scope.session.authToken,
                        user_name: $state.params.user,
                        channel: $state.params.channel,
                        token: $state.params.token
                    };
                    Paypal.execute(paypal_params, function(success) {
                        "success" == success.payment && ($scope.payment.success = !0, $scope.waitingForPaypal = !1, Analytics.trackEvent("payment", "paypalOK"))
                    }, function() {
                        $scope.waitingForPaypal = !1, Analytics.trackEvent("payment", "paypalError")
                    })
                }
            }, function() {
                $location.path("/401")
            })
        }, $state.params.user && $rootScope.loggedIn && $scope.init(), $scope.getMedia = function() {
            mediaParams = {
                media_name: $state.params.channel,
                media_type: "live",
                showHidden: !0
            }, MediaRes = Media.get(mediaParams, function(media) {
                $scope.media = media.livestream[0], $scope.getSubInfo()
            })
        }, $scope.$watch("g2aVoucher.desired", function(newVal, oldVal) {
            if ("undefined" != typeof newVal && newVal != oldVal) {
                var g2aParams = {
                    channel: $state.params.channel,
                    user_name: $state.params.user,
                    authToken: authToken,
                    enabled: newVal
                };
                Ext1Voucher.enable(g2aParams, function() {}, function() {})
            }
        }), $scope.getSubscription = function() {
            subParams = {
                channel: $state.params.channel,
                user_name: $state.params.user,
                authToken: authToken
            }, SubRes = Subscription.get(subParams, function() {
                $scope.alreadySubscribed = !0, $scope.g2aVoucher.available = !1, $scope.waitingForXsolla = !1
            }, function() {
                console.log("no subscription found"), $scope.waitingForXsolla = !1
            })
        }, $scope.getSubInfo = function() {
            subParams = {
                type: "channel",
                type_id: $scope.media.media_user_id
            }, SubRes = SubscriptionInfo.get(subParams, function(subscription) {
                $scope.subscription = subscription.subscription, $scope.discountedPrice = (.75 * subscription.subscription.plan.plan_charge).toFixed(2), $scope.recurly = subscription.recurly, $scope.getSubMedia(), 1 == $scope.subscription.plan.plan_g2a && ($scope.g2aVoucher.available = !0), $rootScope.loggedIn && $scope.getSubscription()
            }, function() {
                console.log("no subscriptions for channel " + $scope.media.media_display_name), $location.path("/401")
            })
        }, $scope.getSubMedia = function() {
            var submediaparams = {
                channel: $state.params.channel
            };
            Emotes = SubscriberEmotes.get(submediaparams, function(emotes) {
                $scope.subEmotes = emotes.icons
            }, function() {}), Badges = SubscriberBadges.get(submediaparams, function(badges) {
                $scope.subBadges = badges.badges
            }, function() {})
        }, $scope.initRecurly = function() {
            Recurly.config({
                subdomain: "hitbox",
                currency: "EUR"
            }), Recurly.buildSubscriptionForm({
                target: "#recurlyForm",
                planCode: $scope.subscription.plan.plan_id,
                currency: $scope.subscription.plan.plan_currency,
                successHandler: $scope.successHandler,
                signature: $scope.recurly.signature,
                afterInject: $scope.afterInject,
                enableCoupons: !1,
                addressRequirement: "none",
                account: {
                    firstName: "",
                    lastName: "",
                    email: $rootScope.session.user_email
                },
                billingInfo: {
                    cardNumber: "",
                    CVV: ""
                }
            }), Analytics.trackEvent("payment", "recurlyStarted")
        }, $scope.getMedia(), $scope.afterInject = function() {
            $scope.$apply()
        }, $scope.payment = {}, $scope.successHandler = function(token) {
            successParams = {
                type: "success",
                authToken: $scope.session.authToken,
                user_name: $state.params.user,
                channel: $state.params.channel,
                token: token
            }, Payment.success(successParams, function() {
                Analytics.trackEvent("payment", "recurlyOK"), console.log("payment success"), $scope.payment.success = !0
            }, function() {
                console.log("payment error"), Analytics.trackEvent("payment", "recurlyError")
            }), $scope.$apply()
        };
        $scope.gotoChannel = function() {
            $timeout(function() {
                console.log("redirecting to " + $scope.media.media_name), $location.path("/" + $scope.media.media_name)
            }, 3e4)
        }, $scope.initPaypal = function() {
            var paypalParams = {
                channel: $state.params.channel,
                authToken: $scope.session.authToken,
                user_name: $state.params.user
            };
            Paypal.init(paypalParams, function(success) {
                console.log(success), success.token && $scope.redirectToPaypal(success.token), Analytics.trackEvent("payment", "paypalStarted")
            }, function() {})
        }, $scope.initXsolla = function() {
            xsolla_params = {
                authToken: $scope.session.authToken,
                user_name: $state.params.user,
                channel: $state.params.channel
            }, Xsolla.create(xsolla_params, function(success) {
                $scope.xsollaToken = success.token;
                var xsolla_base_url = "https://secure.xsolla.com/paystation2/?access_token=";
                $scope.xsollaUrl = $sce.trustAsResourceUrl(xsolla_base_url + $scope.xsollaToken), $scope.xsollaPopoutUrl = xsolla_base_url + $scope.xsollaToken
            }, function() {})
        }, $scope.popoutXsolla = function() {
            var xsollaPopoutWindow = window.open($scope.xsollaPopoutUrl, "_blank", "width=1000,height=720");
            $scope.waitingForXsolla = !0;
            var checkPopoutXsolla = $interval(function() {
                (null == xsollaPopoutWindow || xsollaPopoutWindow.closed) && ($interval.cancel(checkPopoutXsolla), $scope.getSubscription())
            }, 1e3)
        }, $scope.redirectToPaypal = function(token) {
            var paypal_url = "https://www.paypal.com/cgi-bin/webscr?cmd=_express-checkout&token=" + token + "&useraction=continue";
            $window.location.href = paypal_url
        }, $scope.paymentMethod = "pp"
    }), app.controller("SubscriptionCancelController", function($scope, $rootScope, $stateParams, Media, SubscriptionInfo, Subscription, Payment, $timeout, $location, Subscribed, $dialog, Auth, SubscriberEmotes, SubscriberBadges, $state) {
        var authToken = {},
            access = routingConfig.accessLevels;
        $rootScope.loggedIn && (authToken = $rootScope.session.authToken, Auth.authorize({
            accessLevel: access.admin,
            resource: "account",
            resource_id: $state.params.user
        }, function(auth) {
            auth || $location.path("/401")
        }, function() {
            $location.path("/401")
        })), $scope.canceled = !1, $scope.error_cancel = !1, $scope.getMedia = function() {
            mediaParams = {
                media_name: $state.params.channel,
                media_type: "live",
                showHidden: !0
            }, MediaRes = Media.get(mediaParams, function(media) {
                $scope.media = media.livestream[0], $scope.getSubscription()
            })
        }, $scope.getSubscription = function() {
            subParams = {
                channel: $state.params.channel,
                user_name: $state.params.user,
                authToken: authToken
            }, SubRes = Subscription.get(subParams, function(subscription) {
                $scope.getSubMedia(), $scope.subscription = subscription, 1 == subscription.cancel && ($scope.canceled = !0)
            }, function() {
                console.log("no subscription to cancel"), $location.path("/401")
            })
        }, $scope.getMedia(), $scope.getSubMedia = function() {
            var submediaparams = {
                channel: $state.params.channel
            };
            Emotes = SubscriberEmotes.get(submediaparams, function(emotes) {
                $scope.subEmotes = emotes.icons
            }, function() {}), Badges = SubscriberBadges.get(submediaparams, function(badges) {
                $scope.subBadges = badges.badges
            }, function() {})
        }, $scope.cancelSubscription = function() {
            var title = "Do you really want to cancel your subscription to " + $scope.media.media_display_name,
                msg = "",
                btns = [{
                    result: !1,
                    label: "No",
                    cssClass: "btn-green"
                }, {
                    result: !0,
                    label: "Yes",
                    cssClass: "btn-red"
                }];
            $dialog.messageBox(title, msg, btns).open().then(function(result) {
                result && (subParams = {
                    sub_id: $scope.subscription.sub_id,
                    authToken: authToken,
                    user_name: $state.params.user,
                    channel: $state.params.channel,
                    cancel: !0
                }, $scope.comment && (subParams.comment = $scope.comment), SubRes = Subscription.update(subParams, function(sub) {
                    sub ? ($scope.error_cancel = !1, $scope.canceled = !0) : $scope.error_cancel = !0
                }, function() {
                    $scope.error_cancel = !0
                }))
            })
        };
        $scope.gotoChannel = function() {
            $timeout(function() {
                console.log("redirecting to " + $scope.media.media_name), $location.path("/" + $scope.media.media_name)
            }, 3e4)
        }
    }), app.controller("TeamController", ["$scope", "$rootScope", "$stateParams", "Team", "$location", "DisplayService", function($scope, $rootScope, $stateParams, Team, $location, DisplayService) {
        $scope.team_name = $stateParams.team || $rootScope.team_name, $scope.filter_team_name = $scope.team_name, $scope.deviceSize = DisplayService.deviceSize, $scope.isMobile, $scope.deviceSize.update();
        var teamParams = {};
        $scope.errors = {}, $scope.lists = {
            liveCount: 0,
            videoCount: 0
        }, $scope.loading = {
            live: !0,
            video: !1
        }, $scope.videoFilter = "recent", $scope.userIsAdmin = !1, $scope.userListCallback = function(user) {
            for (var i = 0; i < $scope.team.media.livestream.length; i++)
                if ($scope.team.media.livestream[i].media_name == user.user_name) {
                    $scope.media = $scope.team.media.livestream[i];
                    break
                }
            $scope.filter_user_name = user.user_name, $scope.filter_team_name = null
        }, $scope.userCallback = function(user_name) {
            $scope.user_name = user_name
        }, $scope.getTeam = function() {
            $scope.teamResource = Team.get({
                team_name: $scope.team_name
            }, function(team) {
                if ("undefined" == typeof team.info) return void $location.url("/404");
                $scope.team = team;
                for (var i = 0; i < team.members.length; i++)
                    if (team.members[i].user_name == $scope.user && "admin" == team.members[i].group_role) {
                        $scope.userIsAdmin = !0;
                        break
                    }
            })
        }, "undefined" == typeof $scope.team_name ? $rootScope.$watch("team_name", function(newVal) {
            newVal && ($scope.team_name = newVal, $scope.filter_team_name = $scope.team_name, $scope.getTeam())
        }) : $scope.getTeam(), ($stateParams.user || $rootScope.session) && ($scope.user = $stateParams.user || $rootScope.session.user_name, teamParams.authToken = $scope.session.authToken, teamParams.user_name = $scope.user), $scope.cbcoversuccess = function() {
            return function(data) {
                return data.cover && data.cover.cover ? ($scope.team.info.group_cover = data.cover.cover, teamParams.team_name = $scope.team.info.group_name, teamParams.nocache = !0, void $scope.teamResource.$update(teamParams, function() {
                    $scope.getTeam()
                }, function() {
                    $scope.errors.team_cover = "Error while setting a new cover image"
                })) : void($scope.errors.team_cover = "Error while setting a new cover")
            }
        }, $scope.cblogosuccess = function() {
            return function(data) {
                return data.logo && data.logo.small && data.logo.large ? ($scope.team.info.group_logo_small = data.logo.small, $scope.team.info.group_logo_large = data.logo.large, teamParams.team_name = $scope.team.info.group_name, teamParams.nocache = !0, void $scope.teamResource.$update(teamParams, function() {
                    $scope.getTeam()
                }, function() {
                    $scope.errors.team_logo = "Error while setting a new logo image"
                })) : void($scope.errors.team_logo = "Error while setting a new logo image")
            }
        }, $scope.cbdeletelogo = function() {
            teamParams.team_name = $scope.team.info.group_name;
            var deleteParams = {
                authToken: teamParams.authToken,
                action: "delete_logo",
                team_name: teamParams.team_name,
                user_name: teamParams.user_name
            };
            $scope.teamResource.$update(deleteParams, function() {
                $scope.getTeam()
            }, function() {
                $scope.errors.team_logo = "Could not delete logo"
            })
        }, $scope.cbdeletecover = function() {
            teamParams.team_name = $scope.team.info.group_name;
            var deleteParams = {
                authToken: teamParams.authToken,
                action: "delete_cover",
                team_name: teamParams.team_name,
                user_name: teamParams.user_name
            };
            $scope.teamResource.$update(deleteParams, function() {
                $scope.getTeam()
            }, function() {
                $scope.errors[index].team_cover = "Could not delete cover image"
            })
        }
    }]), app.controller("TeamsSettingsController", ["$scope", "$http", "$state", "$translate", "$stateParams", "$timeout", "$upload", "appSettings", "Team", "User", "Teams", "$dialog", "$window", function($scope, $http, $state, $translate, $stateParams, $timeout, $upload, appSettings, Team, User, Teams, $dialog) {
        $scope.user_name = $stateParams.user, $scope.group = {}, $scope.team = !1, $scope.create = !1, $scope.invited = [], $scope.invites = [], $scope.errors = [], $scope.usercount = [], $scope.new_team_errors = {}, $scope.max_length_team_name = 32, $scope.max_length_team_display_name = 32, $scope.resetErrors = function() {
            $scope.errors = [];
            for (var i = 0; i < $scope.teamlist.teams.length; i++) {
                var error = new Object;
                error = {
                    team_display_name: !1,
                    team_description: !1,
                    team_logo: !1,
                    team_cover: !1,
                    invite: !1
                }, $scope.errors.push(error)
            }
            $scope.new_team_errors.team_name = !1, $scope.new_team_errors.team_description = !1
        }, $scope.new_team = {
            group: {}
        }, $scope.$watch("selected", function(newValue) {
            newValue && ($scope.invited.push(newValue), $scope.selected = "")
        }), $scope.users = function(userName) {
            return userName.length < 3 ? !1 : $http.get(appSettings.apiUri + "/user/list/?q=" + userName).then(function(response) {
                return users = [], angular.forEach(response.data, function(val) {
                    users.push(val.user_name)
                }, this), users
            })
        }, getTeamList = function() {
            teamParams = {
                authToken: $scope.session.authToken,
                user_name: $scope.user_name,
                nocache: !0
            }, TeamList = Teams.get(teamParams, function(teamlist) {
                teamlist.teams && teamlist.teams ? teamlist.teams.sort($scope.sortTeams) : teamlist.teams = [], $scope.teamlist = teamlist, $scope.invites = [], $scope.team_titles = [];
                for (var i = 0; i < teamlist.teams.length; i++) {
                    var invite = {
                        show: !1,
                        name: ""
                    };
                    $scope.team_titles.push({
                        name: "teamFormTitle" + i
                    }), $scope.invites.push(invite), $scope.usercount.push(0)
                }
                $scope.resetErrors(), $scope.new_team = {
                    group: {}
                }
            })
        }, getTeamList(), $scope.setDefaultTeam = function(index) {
            team = $scope.teamlist.teams[index], defaultTeamParams = {
                authToken: $scope.session.authToken,
                user_name: $scope.user_name,
                group_id: team.info.group_id
            }, User.setDefaultTeam(defaultTeamParams, function() {
                getTeamList()
            }, function() {})
        }, $scope.acceptInvite = function(index) {
            team = $scope.teamlist.teams[index], teamParams = {
                authToken: $scope.session.authToken,
                team_name: team.info.group_name,
                user_name: $scope.user_name,
                group_id: team.info.group_id
            }, Team.acceptMember(teamParams, function() {
                getTeamList()
            }, function() {})
        }, $scope.declineInvite = function(index) {
            team = $scope.teamlist.teams[index], teamParams = {
                authToken: $scope.session.authToken,
                team_name: team.info.group_name,
                user_name: $scope.user_name,
                group_id: team.info.group_id
            }, Team.removeMember(teamParams, function() {
                getTeamList()
            })
        }, $scope.decline = function(index) {
            team = $scope.teamlist.teams[index];
            var title = "Decline invite to: " + team.info.group_name,
                msg = "",
                btns = [{
                    result: !1,
                    label: "Cancel"
                }, {
                    result: !0,
                    label: "Decline",
                    cssClass: "btn-red"
                }];
            $dialog.messageBox(title, msg, btns).open().then(function(result) {
                result && $scope.declineInvite(index)
            })
        }, $scope.leaveTeam = function(index) {
            team = $scope.teamlist.teams[index];
            var title = "Leave team: " + team.info.group_name,
                msg = "",
                btns = [{
                    result: !1,
                    label: "Cancel",
                    cssClass: "btnNone"
                }, {
                    result: !0,
                    label: "Leave",
                    cssClass: "btn-red"
                }];
            $dialog.messageBox(title, msg, btns).open().then(function(result) {
                result && $scope.declineInvite(index)
            })
        }, $scope.disband = function(index) {
            team = $scope.teamlist.teams[index];
            var title = "Delete team " + team.info.group_name + "?",
                msg = "",
                btns = [{
                    result: !1,
                    label: "Cancel",
                    cssClass: "btnNone"
                }, {
                    result: !0,
                    label: "Delete",
                    cssClass: "btn-red"
                }];
            $dialog.messageBox(title, msg, btns).open().then(function(result) {
                result && $scope.disbandTeam(index)
            })
        }, $scope.disbandTeam = function(index) {
            team = $scope.teamlist.teams[index], teamParams.team_name = team.info.group_name, teamParams.nocache = !0, teamParams.partner && delete teamParams.partner, TeamRes = Team.get(teamParams, function(team) {
                teamParams.team_name = team.info.group_name, teamParams.nocache = !0;
                var deleteParams = {
                    authToken: teamParams.authToken,
                    action: "delete_team",
                    team_name: teamParams.team_name,
                    user_name: teamParams.user_name
                };
                TeamRes.$update(deleteParams, function() {
                    getTeamList(), $scope.resetErrors()
                }, function() {
                    $scope.errors[index].team_disband = "Could not disband team " + team.info.group_name
                })
            })
        }, $scope.getTeam = function(teaminfo) {
            team_name = teaminfo.group_name, $scope.teamRole = teaminfo.group_role, $scope.create = !1, $scope.team_name = team_name, teamParams.team_name = team_name, teamParams.nocache = !0, TeamRes = Team.get(teamParams, function(team) {
                $scope.team = team
            })
        }, $scope.cbcoversuccess = function(index) {
            return function(data) {
                return data.cover && data.cover.cover ? (team = $scope.teamlist.teams[index], teamParams.team_name = team.info.group_name, teamParams.nocache = !0, teamParams.partner && delete teamParams.partner, void(TeamRes = Team.get(teamParams, function(team) {
                    console.log(teamParams), console.log(team), $scope.team = team, $scope.team.info.group_cover = data.cover.cover, teamParams.team_name = team.info.group_name, teamParams.nocache = !0, TeamRes.$update(teamParams, function() {
                        getTeamList(), $scope.error = !1
                    }, function(error, index) {
                        $scope.errors[index].team_cover = "Error while setting a new cover image"
                    })
                }))) : void($scope.errors[index].team_cover = "Error while setting a new cover")
            }
        }, $scope.cblogosuccess = function(index) {
            return function(data, status) {
                return console.log(data), console.log(status), data.logo && data.logo.small && data.logo.large ? (team = $scope.teamlist.teams[index], teamParams.team_name = team.info.group_name, teamParams.nocache = !0, teamParams.partner && delete teamParams.partner, void(TeamRes = Team.get(teamParams, function(team) {
                    $scope.team = team, $scope.team.info.group_logo_small = data.logo.small, $scope.team.info.group_logo_large = data.logo.large, teamParams.team_name = team.info.group_name, teamParams.nocache = !0, console.log(teamParams), TeamRes.$update(teamParams, function() {
                        getTeamList(), $scope.resetErrors()
                    }, function() {
                        $scope.errors[index].team_logo = "Error while setting a new logo image"
                    })
                }))) : void($scope.errors[index].team_logo = "Error while setting a new logo image")
            }
        }, $scope.cbsaveteam = function(index) {
            var changedTeam = $scope.teamlist.teams[index];
            teamParams.team_name = changedTeam.info.group_name, teamParams.nocache = !0, teamParams.partner && delete teamParams.partner, TeamRes = Team.get(teamParams, function(team) {
                teamParams.team_name = team.info.group_name, teamParams.nocache = !0, team.info.group_display_name = changedTeam.info.group_display_name.substring(0, $scope.max_length_team_display_name), team.info.group_text = changedTeam.info.group_text, TeamRes.$update(teamParams, function() {
                    getTeamList(), $scope.error = !1
                }, function(error) {
                    $scope.verifyRes(error, index)
                })
            })
        }, $scope.verifyRes = function(error) {
            switch (error.data) {
                case "invalid_groupname":
                    $scope.new_team_errors.team_name = $translate("TEXT_TEAM_NAME_INVALID");
                    break;
                case "name_too_short":
                    $scope.new_team_errors.team_name = $translate("TEXT_TEAM_NAME_TOO_SHORT");
                    break;
                case "display_name_too_short":
                    $scope.new_team_errors.team_name = $translate("TEXT_TEAM_DISPLAY_NAME_TOO_SHORT");
                    break;
                case "text_required":
                    $scope.new_team_errors.team_description = $translate("TEXT_TEAM_TEXT_REQUIRED");
                    break;
                case "group_taken":
                    $scope.new_team_errors.team_name = $translate("TEXT_TEAM_TAKEN");
                    break;
                case "invalid_display_name":
                    $scope.new_team_errors.team_display_name = "Invalid Team Name"
            }
        }, $scope.cbkickuser = function() {
            getTeamList()
        }, $scope.cbdeletelogo = function(index) {
            var changedTeam = $scope.teamlist.teams[index];
            teamParams.team_name = changedTeam.info.group_name, teamParams.nocache = !0, teamParams.partner && delete teamParams.partner, TeamRes = Team.get(teamParams, function(team) {
                teamParams.team_name = team.info.group_name, teamParams.nocache = !0;
                var deleteParams = {
                    authToken: teamParams.authToken,
                    action: "delete_logo",
                    team_name: teamParams.team_name,
                    user_name: teamParams.user_name
                };
                TeamRes.$update(deleteParams, function() {
                    getTeamList(), $scope.resetErrors()
                }, function() {
                    $scope.errors[index].team_logo = "Could not delete logo"
                })
            })
        }, $scope.cbdeletecover = function(index) {
            var changedTeam = $scope.teamlist.teams[index];
            teamParams.team_name = changedTeam.info.group_name, teamParams.nocache = !0, teamParams.partner && delete teamParams.partner, TeamRes = Team.get(teamParams, function(team) {
                teamParams.team_name = team.info.group_name, teamParams.nocache = !0;
                var deleteParams = {
                    authToken: teamParams.authToken,
                    action: "delete_cover",
                    team_name: teamParams.team_name,
                    user_name: teamParams.user_name
                };
                TeamRes.$update(deleteParams, function() {
                    getTeamList(), $scope.resetErrors()
                }, function() {
                    $scope.errors[index].team_cover = "Could not delete cover image"
                })
            })
        }, $scope.promoteUser = function() {
            ({
                authToken: teamParams.authToken,
                action: "promote_user",
                team_name: teamParams
            })
        }, $scope.createTeam = function() {
            $scope.resetErrors(), createParams = {
                authToken: $scope.session.authToken,
                group_user_name: $scope.user_name,
                group_name: $scope.new_team.group.group_name,
                group_text: $scope.new_team.group.group_text,
                group_display_name: $scope.new_team.group.group_display_name
            };
            var index = $scope.teamlist.teams.length;
            Team.create(createParams, function() {
                getTeamList(), $scope.invited = [], $scope.team = !1, $scope.create = !1, $scope.resetErrors(), $scope.create_team_success.success = !0
            }, function(error) {
                $scope.verifyRes(error, index)
            })
        }, $scope.newTeamDlg = null, $scope.openNewTeamDlg = function() {
            if (null != $scope.newTeamDlg) return void console.log("new team dialog already open");
            console.log("creating new team dialog"), $scope.create_team_success = {
                success: !1
            };
            var options = {
                backdrop: !0,
                keyboard: !0,
                cache: !1,
                backdropClick: !0,
                resolve: {
                    create: function() {
                        return $scope.cbcreateteam
                    },
                    errors: function() {
                        return $scope.new_team_errors
                    },
                    success: function() {
                        return $scope.create_team_success
                    }
                },
                templateUrl: "partials/sub/new_team.html",
                controller: "NewTeamDialogCtrl"
            };
            $scope.newTeamDlg = $dialog.dialog(options), $scope.newTeamDlg.open().then(function(result) {
                $scope.newTeamDlg = null, !result
            })
        }, $scope.cbcreateteam = function(new_team) {
            $scope.new_team.group.group_name = new_team.name.substring(0, $scope.max_length_team_name), $scope.new_team.group.group_text = new_team.description, $scope.new_team.group.group_display_name = new_team.display_name.substring(0, $scope.max_length_team_display_name), $scope.createTeam()
        }, $scope.addUserSubmit = function(event, index) {
            var user_name = $scope.invites[index].name;
            "" != user_name && (event.preventDefault(), $scope.loading = !0, User.get({
                user_name: user_name
            }, function(user) {
                return user.user_name ? ($scope.resetErrors(), $scope.resetInvites(), void $scope.inviteUserToTeam(index, user_name)) : ($scope.errors[index].invite = 'Could not find user "' + user_name + '"', void $scope.resetInvites())
            }, function() {
                $scope.errors[index].invite = 'Error inviting user "' + user_name + '"', $scope.resetInvites()
            }))
        }, $scope.resetInvites = function() {
            $scope.invites = [];
            for (var i = 0; i < $scope.teamlist.teams.length; i++) {
                var invite = {
                    show: !1,
                    name: ""
                };
                $scope.invites.push(invite), $scope.loading = !1
            }
        }, $scope.inviteUserToTeam = function(index, user_name) {
            var ele = angular.element(document.getElementById("addUserPopoverId"));
            team = $scope.teamlist.teams[index], teamParams.team_name = team.info.group_name, teamParams.nocache = !0, teamParams.partner && delete teamParams.partner, console.log(teamParams), TeamRes = Team.get(teamParams, function(team) {
                $scope.team = team, console.log(teamParams), teamParams.team_name = team.info.group_name, teamParams.nocache = !0, $scope.team.invites = [], $scope.team.invites.push(user_name), console.log(TeamRes), TeamRes.$update(teamParams, function() {
                    ele.scope().hide(), getTeamList()
                }, function() {
                    $scope.errors[index].invite = "Could not invite member " + user_name
                })
            })
        }, $scope.checkDisplayName = function(data, index) {
            var pattern = /[^a-zA-Z0-9<>]/g;
            team = $scope.teamlist.teams[index];
            var name = team.info.group_name;
            return data = data.replace(pattern, ""), null === name.match(pattern) && data.toLowerCase() == name.toLowerCase() ? !0 : "You can not add or delete characters or numbers."
        }, $scope.teamSortAccepted = function(team_a, team_b) {
            return team_a.info.group_accepted - team_b.info.group_accepted
        }, $scope.teamSortId = function(team_a, team_b) {
            return team_a.info.group_id - team_b.info.group_id
        }, $scope.sortTeams = function(team_a, team_b) {
            return team_a.info.group_accepted && !team_b.info.group_accepted ? 1 : !team_a.info.group_accepted && team_b.info.group_accepted ? -1 : team_a.info.group_id > team_b.info.group_id ? -1 : team_a.info.group_id < team_b.info.group_id ? 1 : 0
        }
    }]), app.controller("NewTeamDialogCtrl", ["$scope", "create", "errors", "success", "dialog", function($scope, create, errors, success, dialog) {
        $scope.errors = errors, $scope.cbcreate = create, $scope.success = success, $scope.$watch("success", function(newVal) {
            newVal.success === !0 && dialog.close()
        }, !0), $scope.$watch("new_team.display_name", function(newVal) {
            if (newVal) {
                var pattern = /[^a-zA-Z0-9<>]/g;
                $scope.new_team.name = newVal.replace(pattern, "").toLowerCase()
            }
        }), $scope.new_team = {
            name: "",
            display_name: "",
            description: ""
        }, $scope.create = function(new_team) {
            $scope.cbcreate(new_team)
        }, $scope.cancel = function() {
            console.log("closing new team dialog"), $scope.errors.team_name = !1, $scope.errors.team_description = !1, dialog.close()
        }
    }]), app.controller("UnsubscribeNewsletterController", ["$scope", "$location", function($scope, $location) {
        Analytics.trackEvent("newsletter", "Unsubscribe"), $scope.goToHome = function() {
            $location.path("/"), $scope.$apply()
        }
    }]), app.controller("VerifyEmailController", ["$scope", "$rootScope", "$location", "$window", "User", "$stateParams", "VerifyEmail", "Analytics", function($scope, $rootScope, $location, $window, User, $stateParams, VerifyEmail, Analytics) {
        Analytics.trackEvent("user", "emailVerified"), params = {
            verifyToken: $stateParams.token
        }, VerifyRes = VerifyEmail.verify(params, function(res) {
            $scope.user_name = res.user.user_name
        }), $scope.goToHome = function() {
            $location.path("/"), $scope.$apply()
        }
    }]), app.controller("VideoManagerController", ["$scope", "PlaybackService", function($scope) {
        $scope.content = "videosContent"
    }]), app.directive("browsewidget", [function() {
        return {
            restrict: "E",
            templateUrl: function() {
                var tpl = "partials/directives/browse_widget.html";
                return tpl
            },
            controller: function($scope, $rootScope, Games, appSettings, Analytics) {
                $scope.config = appSettings, $scope.liveLength = 0, $scope.followingLength = 0, $scope.gameFilterId = 0, $scope.browseCat = "", $scope.currentGameName = "", Analytics.trackEvent("user", "seeMoreOpen"), $scope.$watch("browseCat", function(newVal) {
                    "favorite" == newVal && ($scope.currentGameName = "")
                }), $rootScope.session && ($scope.followerId = $rootScope.session.user_id), params = {
                    filter: "",
                    limit: 11,
                    liveonly: !0
                }, Games.get(params, function(games) {
                    $scope.games = games.categories
                }, function(error) {
                    console.log(error)
                }), $scope.selectGame = function(game) {
                    $scope.browseCat = "", $scope.currentGameName = game.category_seo_key, $scope.gameFilterId = game.category_id
                }
            },
            link: function() {}
        }
    }]), app.directive("viewerChart", ["$timeout", function() {
        return {
            restrict: "AE",
            scope: {
                series: "=",
                min: "@",
                max: "@",
                rangeCallback: "&",
                update: "=",
                revenues: "=",
                processing: "@",
                theme: "@"
            },
            templateUrl: function() {
                return tpl = "partials/directives/viewer_chart.html", tpl
            },
            link: function($scope) {
                $scope.style = {
                    height: 750
                }, $scope.chart = null, $scope.updated = !1, $scope.settingExtremes = !1;
                var firstrun = !0;
                $scope.$watch("[series]", function(newVal, oldVal) {
                    newVal && newVal != oldVal && $scope.initChart()
                }, !0), $scope.$watch("processing", function(newVal) {
                    0 == newVal && (null != $scope.chart && $scope.chart.hideLoading(), $("#date-range-field").removeAttr("disabled"))
                });
                var yAxis1 = [{
                        labels: {
                            align: "right",
                            x: -3
                        },
                        title: {
                            text: "Viewers",
                            textAlign: "left",
                            rotation: 0,
                            align: "high",
                            offset: -550,
                            y: 12
                        },
                        min: 0
                    }],
                    yAxis2 = [{
                        labels: {
                            align: "right",
                            x: -3
                        },
                        title: {
                            text: "Revenues",
                            textAlign: "left",
                            rotation: 0,
                            align: "high",
                            offset: -585,
                            y: 12
                        },
                        min: 0,
                        height: "30%",
                        lineWidth: 2
                    }, {
                        labels: {
                            align: "right",
                            x: -3
                        },
                        title: {
                            text: "Commercial Breaks",
                            textAlign: "left",
                            align: "high",
                            rotation: 0,
                            offset: -585,
                            y: 12
                        },
                        min: 0,
                        top: "35%",
                        height: "30%",
                        lineWidth: 2
                    }, {
                        labels: {
                            align: "right",
                            x: -3
                        },
                        title: {
                            text: "Viewers",
                            rotation: 0,
                            align: "high",
                            textAlign: "left",
                            offset: -585,
                            y: 12
                        },
                        min: 0,
                        top: "70%",
                        height: "30%",
                        lineWidth: 2
                    }];
                $scope.yAxis = yAxis2, $scope.$watch("theme", function() {
                    $scope.initChart()
                }), $scope.$watch("revenues", function(newVal) {
                    "undefined" != typeof newVal && (newVal ? ($scope.yAxis = yAxis2, $scope.style.height = 750) : ($scope.yAxis = yAxis1, $scope.style.height = 300), $scope.initChart())
                }), $scope.$watch("processing", function(newVal, oldVal) {
                    0 == newVal && newVal != oldVal ? (firstrun = !1, $scope.chart && $scope.chart.hideLoading()) : newVal > 0 && newVal != oldVal && $scope.chart && $scope.chart.showLoading("Loading data ...")
                }), $scope.$watch("update", function(newVal, oldVal) {
                    if (newVal && newVal != oldVal) {
                        $scope.updated = !0;
                        for (var i = 0; i < $scope.update.length; i++) $scope.chart.series[i] && $scope.update[i] && ($scope.chart.series[i].setData($scope.update[i].data, !1, !1, !1), $scope.chart.series[i].setVisible($scope.update[i].visible, !1));
                        if ($scope.revenues === !1)
                            for (var i = 0; i < $scope.series.length; i++) 1 == $scope.series[i].yAxis && ($scope.series[i].yAxis = 0), 2 == $scope.series[i].yAxis && ($scope.series[i].yAxis = 0)
                    }
                }, !0), $scope.initChart = function() {
                    if (!$scope.updated) {
                        if ($scope.revenues === !1)
                            for (var i = 0; i < $scope.series.length; i++) 1 == $scope.series[i].yAxis && ($scope.series[i].yAxis = 0, $scope.series[i].visible = !1), 2 == $scope.series[i].yAxis && ($scope.series[i].yAxis = 0);
                        var chartCfg = {
                            chart: {
                                renderTo: "chartContainerViewer",
                                spacing: 0,
                                marginRight: 0,
                                marginTop: 0,
                                pinchType: "none",
                                width: 1e3,
                                panning: !1
                            },
                            rangeSelector: {
                                enabled: !1
                            },
                            navigator: {
                                adaptToUpdatedData: !1,
                                baseSeries: 0,
                                enabled: !1
                            },
                            title: {},
                            xAxis: {
                                type: "datetime",
                                maxPadding: 0,
                                minPadding: 0,
                                dateTimeLabelFormats: {
                                    month: "%e. %b",
                                    year: "%b"
                                },
                                title: {},
                                events: {
                                    afterSetExtremes: function(e) {
                                        $scope.processing > 0 || $scope.rangeCallback({
                                            min: e.min,
                                            max: e.max
                                        })
                                    }
                                },
                                tickColor: "transparent"
                            },
                            yAxis: $scope.yAxis,
                            tooltip: {
                                crosshairs: [!0]
                            },
                            series: $scope.series,
                            plotOptions: {
                                area: {
                                    fillOpacity: "0.3"
                                },
                                series: {
                                    dataLabels: {
                                        enabled: !1
                                    },
                                    dataGrouping: {
                                        approximation: "high"
                                    }
                                }
                            },
                            scrollbar: {
                                liveRedraw: !1,
                                enabled: !1
                            },
                            credits: {
                                enabled: !1
                            }
                        };
                        "theme-dark" == $scope.theme && Highcharts.setOptions({
                            colors: ["hsla(75,100%,50%,.5)", "hsla(200,50%,40%,.5)", "hsla(200,80%,40%,.5)", "hsla(25,80%,40%,.5)", "hsla(180,80%,30%,.5)", "hsla(200,50%,25%,.5)", "hsla(25,50%,40%,.5)", "hsla(75,100%,50%,.5)"],
                            plotOptions: {
                                area: {
                                    fillOpacity: "0.35"
                                },
                                areaspline: {
                                    fillOpacity: "0.35"
                                },
                                column: {
                                    borderRadius: 1
                                }
                            },
                            chart: {
                                style: {
                                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                                    fontSize: "16px"
                                },
                                plotBackgroundColor: "transparent",
                                backgroundColor: "transparent"
                            },
                            xAxis: {
                                gridLineColor: "transparent",
                                gridLineWidth: 1,
                                labels: {
                                    style: {
                                        color: "hsl(0,0%,50%)"
                                    }
                                },
                                lineColor: "transparent",
                                tickColor: "transparent",
                                title: {
                                    style: {
                                        color: "hsl(0,0%,50%)",
                                        fontWeight: "bold",
                                        fontSize: "14px",
                                        fontFamily: '"Helvetica Neue", Helvetica, sans-serif'
                                    }
                                }
                            },
                            yAxis: {
                                gridLineColor: "hsl(0,0%,25%)",
                                labels: {
                                    style: {
                                        color: "hsl(0,0%,70%)"
                                    }
                                },
                                lineColor: "transparent",
                                minorTickInterval: null,
                                tickColor: "hsl(0,0%,50%)",
                                tickWidth: 1,
                                title: {
                                    style: {
                                        color: "hsl(0,0%,80%)",
                                        fontWeight: "bold",
                                        fontSize: "16px",
                                        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                                        textAlign: "left",
                                        transform: "translate(-400px, 8px)"
                                    }
                                }
                            },
                            loading: {
                                style: {
                                    position: "absolute",
                                    backgroundColor: "#292929",
                                    opacity: 1,
                                    textAlign: "center"
                                }
                            },
                            tooltip: {
                                borderColor: "rgba(0,0,0, 0.1)",
                                style: {
                                    padding: "10px 20px 20px 20px",
                                    fontSize: "14px",
                                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif'
                                }
                            }
                        }), "theme-light" == $scope.theme && Highcharts.setOptions({
                            colors: ["hsla(75,100%,40%,.5)", "hsla(200,50%,40%,.5)", "hsla(200,80%,40%,.5)", "hsla(25,80%,40%,.5)", "hsla(180,80%,40%,.5)", "hsla(200,50%,35%,.5)", "hsla(25,50%,35%,.5)", "hsla(75,100%,35%,.5)"],
                            plotOptions: {
                                area: {
                                    fillOpacity: "0.35"
                                },
                                areaspline: {
                                    fillOpacity: "0.35"
                                },
                                column: {
                                    borderRadius: 1
                                }
                            },
                            chart: {
                                style: {
                                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                                    fontSize: "16px"
                                },
                                plotBackgroundColor: "transparent",
                                backgroundColor: "transparent"
                            },
                            xAxis: {
                                gridLineColor: "transparent",
                                gridLineWidth: 1,
                                labels: {
                                    style: {
                                        color: "hsl(0,0%,50%)"
                                    }
                                },
                                lineColor: "transparent",
                                tickColor: "transparent",
                                title: {
                                    style: {
                                        color: "hsl(0,0%,50%)",
                                        fontWeight: "bold",
                                        fontSize: "14px",
                                        fontFamily: '"Helvetica Neue", Helvetica, sans-serif'
                                    }
                                }
                            },
                            yAxis: {
                                gridLineColor: "hsl(0,0%,95%)",
                                labels: {
                                    style: {
                                        color: "hsl(0,0%,30%)"
                                    }
                                },
                                lineColor: "transparent",
                                minorTickInterval: null,
                                tickColor: "hsl(0,0%,50%)",
                                tickWidth: 1,
                                title: {
                                    style: {
                                        color: "hsl(0,0%,30%)",
                                        fontWeight: "bold",
                                        fontSize: "16px",
                                        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                                        textAlign: "left",
                                        transform: "translate(-400px, 8px)"
                                    }
                                }
                            },
                            loading: {
                                style: {
                                    position: "absolute",
                                    backgroundColor: "#ffffff",
                                    opacity: 1,
                                    textAlign: "center"
                                }
                            },
                            tooltip: {
                                borderColor: "rgba(0,0,0, 0.1)",
                                style: {
                                    padding: "10px 20px 20px 20px",
                                    fontSize: "14px",
                                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif'
                                }
                            }
                        }), $scope.chart = new Highcharts.StockChart(chartCfg), firstrun && $scope.chart.showLoading("Loading data ...")
                    }
                }
            }
        }
    }]), app.directive("teamChart", ["$timeout", function() {
        return {
            restrict: "AE",
            scope: {
                series: "=",
                min: "@",
                max: "@",
                processing: "@",
                theme: "@",
                id: "@"
            },
            templateUrl: function() {
                return tpl = "partials/directives/team_chart.html", tpl
            },
            link: function($scope) {
                $scope.style = {
                    height: 150
                }, $scope.chart = null, $scope.updated = !1, $scope.settingExtremes = !1, $scope.$watch("series", function(newVal, oldVal) {
                    newVal && newVal != oldVal && $scope.initChart()
                }, !0), $scope.yAxis = [{
                    labels: {
                        align: "right",
                        x: -3
                    },
                    title: {
                        text: "Viewers",
                        rotation: 0,
                        align: "high",
                        x: 0,
                        y: 0
                    },
                    offset: 0,
                    min: 0
                }], $scope.$watch("theme", function() {
                    $scope.initChart()
                }), $scope.finalseries = [{
                    name: "Revenues",
                    type: "line",
                    visible: !0,
                    yAxis: 0,
                    data: []
                }];
                for (var i = 0; i < $scope.series.length; i++) $scope.finalseries[0].data.push([1e3 * $scope.series[i][0], $scope.series[i][1]]);
                $scope.initChart = function() {
                    var chartCfg = {
                        chart: {
                            renderTo: "chartContainerViewer" + $scope.id,
                            spacing: 0,
                            marginRight: 0,
                            marginTop: 0,
                            pinchType: "none",
                            width: 350,
                            panning: !1
                        },
                        rangeSelector: {
                            enabled: !1
                        },
                        navigator: {
                            adaptToUpdatedData: !1,
                            baseSeries: 0,
                            enabled: !1
                        },
                        title: {},
                        xAxis: {
                            type: "datetime",
                            maxPadding: 0,
                            minPadding: 0,
                            dateTimeLabelFormats: {
                                month: "%e. %b",
                                year: "%b"
                            },
                            title: {},
                            tickColor: "transparent"
                        },
                        yAxis: $scope.yAxis,
                        tooltip: {
                            crosshairs: [!0]
                        },
                        series: $scope.finalseries,
                        plotOptions: {
                            area: {
                                fillOpacity: "0.3"
                            },
                            series: {
                                dataLabels: {
                                    enabled: !1
                                },
                                dataGrouping: {
                                    approximation: "high"
                                }
                            }
                        },
                        scrollbar: {
                            liveRedraw: !1,
                            enabled: !1
                        },
                        credits: {
                            enabled: !1
                        }
                    };
                    "theme-dark" == $scope.theme && Highcharts.setOptions({
                        colors: ["hsla(75,100%,50%,.5)", "hsla(200,50%,40%,.5)", "hsla(200,80%,40%,.5)", "hsla(25,80%,40%,.5)", "hsla(180,80%,30%,.5)", "hsla(200,50%,25%,.5)", "hsla(25,50%,40%,.5)", "hsla(75,100%,50%,.5)"],
                        plotOptions: {
                            area: {
                                fillOpacity: "0.35"
                            },
                            areaspline: {
                                fillOpacity: "0.35"
                            },
                            column: {
                                borderRadius: 1
                            }
                        },
                        chart: {
                            style: {
                                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                                fontSize: "16px"
                            },
                            plotBackgroundColor: "transparent",
                            backgroundColor: "transparent"
                        },
                        xAxis: {
                            gridLineColor: "transparent",
                            gridLineWidth: 1,
                            labels: {
                                style: {
                                    color: "hsl(0,0%,50%)"
                                }
                            },
                            lineColor: "transparent",
                            tickColor: "transparent",
                            title: {
                                style: {
                                    color: "hsl(0,0%,50%)",
                                    fontWeight: "bold",
                                    fontSize: "14px",
                                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif'
                                }
                            }
                        },
                        yAxis: {
                            gridLineColor: "hsl(0,0%,25%)",
                            labels: {
                                style: {
                                    color: "hsl(0,0%,70%)"
                                }
                            },
                            lineColor: "transparent",
                            minorTickInterval: null,
                            tickColor: "hsl(0,0%,50%)",
                            tickWidth: 1,
                            title: {
                                style: {
                                    color: "hsl(0,0%,80%)",
                                    fontWeight: "bold",
                                    fontSize: "16px",
                                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                                    textAlign: "left",
                                    transform: "translate(-400px, 8px)"
                                }
                            }
                        },
                        loading: {
                            style: {
                                position: "absolute",
                                backgroundColor: "transparent",
                                opacity: 1,
                                textAlign: "center"
                            }
                        },
                        tooltip: {
                            borderColor: "rgba(0,0,0, 0.1)",
                            style: {
                                padding: "10px 20px 20px 20px",
                                fontSize: "14px",
                                fontFamily: '"Helvetica Neue", Helvetica, sans-serif'
                            }
                        }
                    }), "theme-light" == $scope.theme && Highcharts.setOptions({
                        colors: ["hsla(75,100%,40%,.5)", "hsla(200,50%,40%,.5)", "hsla(200,80%,40%,.5)", "hsla(25,80%,40%,.5)", "hsla(180,80%,40%,.5)", "hsla(200,50%,35%,.5)", "hsla(25,50%,35%,.5)", "hsla(75,100%,35%,.5)"],
                        plotOptions: {
                            area: {
                                fillOpacity: "0.35"
                            },
                            areaspline: {
                                fillOpacity: "0.35"
                            },
                            column: {
                                borderRadius: 1
                            }
                        },
                        chart: {
                            style: {
                                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                                fontSize: "16px"
                            },
                            plotBackgroundColor: "transparent",
                            backgroundColor: "transparent"
                        },
                        xAxis: {
                            gridLineColor: "transparent",
                            gridLineWidth: 1,
                            labels: {
                                style: {
                                    color: "hsl(0,0%,50%)"
                                }
                            },
                            lineColor: "transparent",
                            tickColor: "transparent",
                            title: {
                                style: {
                                    color: "hsl(0,0%,50%)",
                                    fontWeight: "bold",
                                    fontSize: "14px",
                                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif'
                                }
                            }
                        },
                        yAxis: {
                            gridLineColor: "hsl(0,0%,95%)",
                            labels: {
                                style: {
                                    color: "hsl(0,0%,30%)"
                                }
                            },
                            lineColor: "transparent",
                            minorTickInterval: null,
                            tickColor: "hsl(0,0%,50%)",
                            tickWidth: 1,
                            title: {
                                style: {
                                    color: "hsl(0,0%,30%)",
                                    fontWeight: "bold",
                                    fontSize: "16px",
                                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                                    textAlign: "left",
                                    transform: "translate(-400px, 8px)"
                                }
                            }
                        },
                        loading: {
                            style: {
                                position: "absolute",
                                backgroundColor: "transparent",
                                opacity: 1,
                                textAlign: "center"
                            }
                        },
                        tooltip: {
                            borderColor: "rgba(0,0,0, 0.1)",
                            style: {
                                padding: "10px 20px 20px 20px",
                                fontSize: "14px",
                                fontFamily: '"Helvetica Neue", Helvetica, sans-serif'
                            }
                        }
                    }), $scope.chart = new Highcharts.StockChart(chartCfg)
                }
            }
        }
    }]), app.directive("daterange", ["Analytics", function(Analytics) {
        return {
            restrict: "E",
            transclude: !0,
            templateUrl: function() {
                return tpl = "partials/sub/daterange.html", tpl
            },
            controller: function($scope) {
                $scope.daterangeHide = function() {
                    $("#date-range-field").attr("disabled", "disabled")
                }, $scope.daterangeSetText = function(startDate, endDate) {
                    $("#date-range-field span").text(startDate.getMonthName(!1) + " " + startDate.getDate() + ", " + startDate.getFullYear() + " - " + endDate.getMonthName(!1) + " " + endDate.getDate() + ", " + endDate.getFullYear())
                };
                var to = new Date,
                    from = new Date(to.getTime() - 26784e5);
                $scope.calendarClick = 0, $scope.datepicker = $("#datepicker-calendar").DatePicker({
                    inline: !0,
                    date: [from, to],
                    calendars: $scope.showMonths,
                    mode: "range",
                    current: new Date(to.getFullYear(), to.getMonth() - 1, 1),
                    onChange: function(dates) {
                        $scope.calendarClick++, $scope.calendarClick < 2 || ($scope.calendarClick = 0, $scope.$apply(function() {
                            $scope.reloadStartDate = new Date(dates[0]).setUTCHours(0, 0, 0, 0) / 1e3 + 86400, $scope.reloadEndDate = new Date(dates[1]).setUTCHours(0, 0, 0, 0) / 1e3 + 86400
                        }), $("#datepicker-calendar").hide(), $scope.datepickerOpen = !1, $scope.$apply(), $("#date-range-field span").text(dates[0].getMonthName(!1) + " " + dates[0].getDate() + ", " + dates[0].getFullYear() + " - " + dates[1].getMonthName(!1) + " " + dates[1].getDate() + ", " + dates[1].getFullYear()), Analytics.trackEvent("stats", "rangeSelected"))
                    }
                }), $("#date-range-field span").text(from.getMonthName(!1) + " " + from.getDate() + ", " + from.getFullYear() + " - " + to.getMonthName(!1) + " " + to.getDate() + ", " + to.getFullYear()), $("#date-range-field").bind("click", function() {
                    return console.log("click"), $("#date-range-field").attr("disabled") ? !1 : ($("#datepicker-calendar").toggle(function() {
                        $scope.datepickerOpen = "block" == $("#datepicker-calendar").css("display") ? !0 : !1, $scope.$apply()
                    }), !1)
                }), $scope.datepicker.hide(), $("#date-range-field").attr("disabled", "disabled")
            }
        }
    }]), app.directive("singledate", [function() {
        return {
            restrict: "A",
            link: function() {
                jQuery.curCSS = jQuery.css, $("#plan-date").DatePicker({
                    mode: "single",
                    inline: !1,
                    starts: 1,
                    calendars: 3,
                    position: "bottom",
                    onBeforeShow: function() {
                        if ($("#plan-date").val()) {
                            var dates = $("#plan-date").val().split(/(\-| )/);
                            $("#plan-date").DatePickerSetDate(new Date(dates[0], dates[2] - 1, dates[4]), !0)
                        }
                    },
                    onChange: function(date, el) {
                        $(el).val(date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate() + " 00:00:00"), $(el).DatePickerHide()
                    }
                })
            }
        }
    }]), app.directive("detailScroll", ["$rootScope", "$window", "$timeout", "$stateParams", "DisplayService", function($rootScope, $window, $timeout, $stateParams, DisplayService) {
        return {
            link: function($scope) {
                var timeoutPromise, scrollPosition = 0,
                    scrolling = !1,
                    margin = 0,
                    playerMinimized = !1;
                $scope.isMobile, $scope.chatOptions = DisplayService.chatOptions, $scope.deviceSize = DisplayService.deviceSize, $scope.playerOptions = DisplayService.playerState, $scope.$on("isMobile", function() {
                    $scope.isMobile = !0, $("#detail-scroll-element").scrollTop(0), $scope.resetTransform("#detail-meta"), $scope.resetTransform("#live-player"), $scope.resetTransform(".player-wrapper"), $(".player-wrapper").css({
                        width: ""
                    })
                }), $scope.$on("isTablet", function() {
                    $scope.isMobile = !1, $("#detail-scroll-element").scrollTop(0)
                }), $scope.$on("isDesktop", function() {
                    $("#detail-scroll-element").scrollTop(0), $scope.isMobile = !1
                }), $scope.setTransform = function(obj, x, y, z) {
                    $(obj).css("-webkit-transform", "translate3d(" + x + "," + y + "," + z + ")"), $(obj).css("transform", "translate3d(" + x + "," + y + "," + z + ")")
                }, $("#live-player").bind("mousewheel", function() {
                    scrolling || ($("#live-player").addClass("noPointer"), scrolling = !0), $timeout.cancel(timeoutPromise), timeoutPromise = $timeout(function() {
                        $("#live-player").removeClass("noPointer"), scrolling = !1
                    }, 200)
                }), $scope.resetTransform = function(obj) {
                    $(obj).css("-webkit-transform", ""), $(obj).css("transform", "")
                };
                var playerScroll, initialHeight, targetHeight = 160,
                    infoboxHeight = 160,
                    reDraw = function() {
                        if (margin = 0, initialHeight = $("#detail-player").innerHeight() + infoboxHeight, playerScroll = initialHeight - targetHeight, 0 > scrollPosition && (scrollPosition = 0), playerScroll > scrollPosition) playerMinimized = !1, $scope.playerOptions.playerMinimized = !1, $(".player-wrapper").css({
                            width: ""
                        }), $("#detail-infobox").removeClass("scrolled"), $("#hosting").removeClass("scrolled"), $scope.setTransform(".player-wrapper", 0, 0, 0), $scope.setTransform("#live-player", 0, "-" + scrollPosition + "px", 0), $scope.setTransform("#detail-player", 0, 0, 0), $scope.setTransform("#detail-meta", 0, 0, 0);
                        else {
                            playerMinimized = !0, $scope.playerOptions.playerMinimized = !0, 0 == $scope.chatOptions.chatState && (margin = 20), $("#detail-infobox").addClass("scrolled"), $("#hosting").addClass("scrolled"), $scope.setTransform(".player-wrapper", 0, infoboxHeight + "px", 0), $scope.setTransform("#live-player", "-" + margin + "px", "-" + playerScroll + "px", 0), $scope.setTransform("#detail-player", 0, scrollPosition - playerScroll + targetHeight + "px", 0), $scope.setTransform("#detail-meta", 0, scrollPosition - playerScroll + "px", 0);
                            var newWidth = targetHeight / 9 * 16;
                            $(".player-wrapper").css({
                                width: newWidth
                            })
                        }
                    };
                $scope.scrollTop = function() {
                    $scope.isMobile || $("#detail-scroll-element").animate({
                        scrollTop: 0
                    })
                }, $scope.scrollToContent = function() {
                    if (!$scope.isMobile) {
                        var posTop = $("#detail-player").innerHeight() + infoboxHeight - targetHeight;
                        $("#detail-scroll-element").animate({
                            scrollTop: posTop
                        })
                    }
                }, $("#detail-scroll-element").on("scroll", function() {
                    scrollPosition = $(this).scrollTop(), $scope.isMobile || reDraw()
                }), $scope.$watch(function() {
                    return angular.element(document.querySelector("#detail-player")).height()
                }, function(newVal, oldVal) {
                    newVal != oldVal && ($scope.isMobile || reDraw())
                }), $scope.$on("$destroy", function() {
                    $("#live-player").css({
                        "margin-right": ""
                    }), $scope.setTransform(".player-wrapper", 0, 0, 0), $scope.setTransform("#live-player", 0, 0, 0), $scope.setTransform("#detail-player", 0, 0, 0), $scope.setTransform("#detail-meta", 0, 0, 0), $(".player-wrapper").css({
                        width: ""
                    })
                })
            }
        }
    }]), app.directive("followbutton", [function() {
        return {
            restrict: "E",
            scope: {
                followId: "@",
                followType: "@"
            },
            templateUrl: function() {
                var tpl = "partials/directives/follow_button.html";
                return tpl
            },
            replace: !0,
            controller: function($scope, $rootScope, $state, $stateParams, Follow, Following, Analytics) {
                $scope.loggedIn = !1, $scope.session = $rootScope.session, $scope.session && $scope.session.authToken && ($scope.following = !1, $scope.loggedIn = !0, $scope.$watch("followId", function() {
                    $scope.followId && ($scope.followType || ($scope.followType = "user"), followParams = {
                        type: $scope.followType,
                        follow_id: $scope.followId,
                        authToken: $scope.session.authToken,
                        user_name: $scope.session.user_name
                    }, FollowingRes = Following.get(followParams, function(data) {
                        data.following && data.following.follower_user_id && ($scope.following = !0)
                    }, function() {}))
                }), $scope.addFollow = function() {
                    params = {
                        type: $scope.followType,
                        follow_id: $scope.followId,
                        authToken: $scope.session.authToken
                    }, Follow.add(params, function() {
                        $scope.following = !0, Analytics.trackEvent("user", "follow")
                    })
                }, $scope.unFollow = function() {
                    params = {
                        type: $scope.followType,
                        follow_id: $scope.followId,
                        authToken: $scope.session.authToken
                    }, Follow["delete"](params, function() {
                        $scope.following = !1, Analytics.trackEvent("user", "unfollow")
                    })
                })
            },
            link: function() {}
        }
    }]), app.directive("followinglist", [function() {
        return {
            scope: {
                publicLength: "="
            },
            restrict: "E",
            templateUrl: function() {
                var tpl = "partials/sub/list_following.html";
                return tpl
            },
            replace: !0,
            controller: function($scope, $rootScope, $state, $stateParams, Media, appSettings) {
                $scope.config = appSettings, $scope.media = [], $scope.getMedia = function() {
                    if ($rootScope.session) {
                        var follow_id = $rootScope.session.user_id,
                            params = {
                                follower_id: follow_id,
                                liveOnly: !1
                            };
                        Media.get(params, function(media) {
                            if ($scope.media = media.livestream, $scope.following = [], $scope.following_offline = [], $scope.liveCount = 0, $scope.media)
                                for (var i = 0; i < $scope.media.length; i++) {
                                    $scope.media[i].playing_now = $scope.media[i].media_id == $scope.currentMediaId ? !0 : !1;
                                    var now = moment.utc(),
                                        live = moment.utc($scope.media[i].media_live_since),
                                        diff = now.diff(live),
                                        duration = moment.duration(diff);
                                    $scope.media[i].media_live_time = Math.floor(duration.asHours()) + moment.utc(diff).format(":mm"), 1 == $scope.media[i].media_is_live ? ($scope.following.push($scope.media[i]), $scope.liveCount++) : $scope.following_offline.push($scope.media[i])
                                }
                            void 0 !== $scope.publicLength && ($scope.publicLength = $scope.liveCount)
                        }, function(error) {
                            console.log(error)
                        })
                    } else void 0 !== $scope.publicLength && ($scope.publicLength = 0)
                }, $scope.getMedia(), $scope.$on("$stateChangeSuccess", function() {
                    $scope.getMedia()
                })
            },
            link: function() {}
        }
    }]), app.directive("homeScroll", ["$rootScope", "$window", "$timeout", "$stateParams", "$state", "DisplayService", function($rootScope, $window, $timeout, $stateParams, $state) {
        return {
            link: function($scope) {
                var timeoutPromise, sideBar, navBar, spotlight, spotlightHeight, lastScrollTop = 0,
                    scrolling = !1,
                    scrollSideBar = !1,
                    fixedToBottom = !1,
                    fixedToTop = !1,
                    animateSideBar = !0,
                    noSpotlight = !1,
                    sideBarOffset = 0,
                    setTransform = function(obj, x, y, z) {
                        $(obj).css("-webkit-transform", "translate3d(" + x + "," + y + "," + z + ")"), $(obj).css("transform", "translate3d(" + x + "," + y + "," + z + ")")
                    },
                    resetTransform = function(obj) {
                        $(obj).css("-webkit-transform", ""), $(obj).css("transform", "")
                    },
                    setAnmimaton = function(obj) {
                        $(obj).css("-webkit-transition", "all ease 0.3s"), $(obj).css("transition", "all ease 0.3s")
                    },
                    resetAnmimaton = function(obj) {
                        $(obj).css("-webkit-transition", ""), $(obj).css("transition", "")
                    };
                $("#live-player").bind("mousewheel", function() {
                    scrolling || ($("#live-player").addClass("noPointer"), scrolling = !0), $timeout.cancel(timeoutPromise), timeoutPromise = $timeout(function() {
                        $("#live-player").removeClass("noPointer"), scrolling = !1
                    }, 200)
                }), $timeout(function() {
                    sideBar = $("#home-sidebar"), navBar = $("#nav"), spotlight = $(".home-spotlight"), thumbs = $("#home-thumbs"), sideBar.bind("mousewheel", function() {
                        scrolling || (sideBar.addClass("noPointer"), scrolling = !0), $timeout.cancel(timeoutPromise), timeoutPromise = $timeout(function() {
                            sideBar.removeClass("noPointer"), scrolling = !1
                        }, 200)
                    })
                }, 0);
                var browseStartAnimation = function() {
                        $timeout(function() {
                            setAnmimaton("#live-player"), setAnmimaton(".tse-content"), setTransform("#live-player", 0, "-" + spotlight.outerHeight() + "px", 0), setTransform(".tse-content", 0, "-" + spotlight.outerHeight() + "px", 0)
                        }, 0), $timeout(function() {
                            resetAnmimaton("#live-player"), resetAnmimaton(".tse-content"), resetTransform("#live-player"), resetTransform(".tse-content"), $("#live-player").css({
                                display: "none"
                            }), $(".home-spotlight").css({
                                display: "none"
                            })
                        }, 450)
                    },
                    browseEndAnimation = function() {
                        $timeout(function() {
                            setTransform(".tse-content", 0, "-" + spotlight.outerHeight() + "px", 0), setTransform("#live-player", 0, "-" + spotlight.outerHeight() + "px", 0), $(".home-spotlight").css({
                                display: ""
                            }), $("#live-player").css({
                                display: ""
                            })
                        }, 0), $timeout(function() {
                            setAnmimaton(".tse-content"), setAnmimaton("#live-player"), setTransform(".tse-content", 0, 0, 0), setTransform("#live-player", 0, 0, 0)
                        }, 100), $timeout(function() {
                            resetAnmimaton(".tse-content"), resetAnmimaton("#live-player"), resetTransform(".tse-content"), resetTransform("#live-player")
                        }, 450)
                    };
                $scope.$on("$stateChangeStart", function(event, toState, toParams, fromState) {
                    $("#home-scroll-element").animate({
                        scrollTop: 0
                    }), null != toState.browse && null == fromState.browse ? (noSpotlight = !0, browseStartAnimation()) : null == toState.browse && null != fromState.browse ? (noSpotlight = !1, browseEndAnimation()) : noSpotlight = !0
                }), null != $state.current.browse && (noSpotlight = !0, $("#live-player").css({
                    display: "none"
                }), $(".home-spotlight").css({
                    display: "none"
                })), $("#home-scroll-element").on("scroll", function() {
                    spotlightHeight = noSpotlight ? 0 : spotlight.outerHeight(), st = $(this).scrollTop(), $("#live-player").css({
                        transform: "translate3d(0,-" + st + "px,0)",
                        "-webkit-transform": "translate3d(0,-" + st + "px,0)"
                    }), animateSideBar && (st > lastScrollTop ? scrollSideBar ? (fixedToTop && (sideBar.css({
                        position: "absolute",
                        bottom: "",
                        top: st - spotlightHeight
                    }), fixedToTop = !1), !fixedToBottom && sideBar.outerHeight() + sideBar.offset().top <= window.innerHeight && (sideBar.css({
                        position: "fixed",
                        top: "",
                        bottom: 0
                    }), fixedToBottom = !0)) : !fixedToTop && sideBar.offset().top <= navBar.outerHeight() - sideBarOffset && (sideBar.css({
                        position: "fixed",
                        top: navBar.outerHeight() - sideBarOffset
                    }), fixedToTop = !0) : (fixedToTop && st <= spotlightHeight && (sideBar.css({
                        position: "",
                        top: ""
                    }), fixedToTop = !1), !fixedToTop && scrollSideBar && (fixedToBottom ? (sideBar.css({
                        position: "absolute",
                        bottom: "",
                        top: st + $window.innerHeight - sideBar.outerHeight() - spotlightHeight - navBar.outerHeight()
                    }), fixedToBottom = !1) : sideBar.offset().top >= navBar.outerHeight() && st >= spotlightHeight && (sideBar.css({
                        position: "fixed",
                        top: navBar.outerHeight()
                    }), fixedToTop = !0)))), lastScrollTop = st
                }), $scope.$on("$destroy", function() {
                    resetAnmimaton("#live-player"), resetAnmimaton(".tse-content"), resetTransform("#live-player"), resetTransform(".tse-content"), $(".home-spotlight").css({
                        display: ""
                    }), $("#live-player").css({
                        transform: "",
                        "-webkit-transform": "",
                        display: ""
                    })
                })
            }
        }
    }]), app.directive("medialist", function() {
        return {
            restrict: "E",
            scope: {
                type: "@",
                filter: "@",
                limit: "@",
                start: "@",
                offset: "@",
                size: "@",
                lines: "@",
                lineoffset: "@",
                page: "@",
                game: "@",
                user: "@",
                teamName: "@",
                followerId: "@",
                search: "=",
                publicLength: "=",
                liveOnly: "@",
                showMore: "@",
                showHidden: "=",
                onlyHidden: "=",
                fast: "@",
                processing: "=",
                waitFor: "@",
                autosize: "@",
                grouped: "=",
                language: "@"
            },
            transclude: !0,
            templateUrl: function(element, attr) {
                switch (attr.type) {
                    default: suffix = "Live";
                    break;
                    case "video":
                            suffix = "Video"
                }
                switch (attr.size) {
                    case "mid":
                        tpl = "partials/sub/list" + suffix + ".html";
                        break;
                    case "large":
                        tpl = "partials/sub/listLiveLarge.html";
                        break;
                    case "featured":
                        tpl = "partials/sub/listFeatured.html";
                        break;
                    case "list":
                        tpl = "partials/sub/list" + suffix + "List.html"
                }
                return tpl
            },
            controller: function($scope, $rootScope, $timeout, $http, $element, $animate, $attrs, Media, Team, appSettings, $state, PlaybackService, Analytics) {
                $scope.team_name = null, $scope.teamName && ($scope.team_name = $scope.teamName), $scope.config = appSettings, $scope.resetting = !1, $scope.show_more = {
                    show: !1
                }, $scope.setMedia = function(id, type) {
                    PlaybackService.setMediaId(id, type)
                }, $scope.playback = PlaybackService, $scope.$watch("playback.getMediaId()", function(newVal) {
                    if ($scope.currentMediaId = newVal, $scope.media && $scope.media.length)
                        for (var i = 0; i < $scope.media.length; i++) $scope.media[i].playing_now = $scope.media[i].media_id == $scope.currentMediaId ? !0 : !1
                }), searchTimeout = !1, $scope.getWidth = function() {
                    return $(window).width()
                }, $scope.getListWidth = function() {
                    return $element.parent().width()
                }, "auto" === $scope.limit && $scope.$watch($scope.getWidth, function() {}), window.onresize = function() {
                    $scope.$apply()
                }, $scope.showmore = function() {
                    $scope.lines = parseInt($scope.lines) + parseInt($scope.lineoffset), $scope.limit = $scope.limit + $scope.start, Analytics.trackEvent("user", "showMoreMedialistClicked")
                }, $scope.$watch("media", function(newVal) {
                    newVal && (void 0 !== $scope.publicLength && ($scope.publicLength = $scope.media.length), $scope.media.length < $scope.listlimit ? $scope.show_more.show = !1 : "true" === $scope.showMore && ($scope.show_more.show = !0))
                }, !0);
                var sortRecent = function(a, b) {
                    return a.media_date_added < b.media_date_added ? 1 : a.media_date_added > b.media_date_added ? -1 : 0
                };
                $scope.calculateLimit = function() {
                    var totalWidth = $scope.getListWidth() + 20,
                        thumbWidth = 290,
                        count = parseInt(totalWidth / thumbWidth) * $scope.lines;
                    return count
                }, $scope.$on("$stateChangeStart", function(event, toState, toParams, fromState, fromParams) {
                    (fromParams.game_name != toParams.game_name || fromState.browse != toState.browse) && ($scope.resetting = !0)
                }), $scope.$watch("[limit, game, search, animate, type, showHidden, onlyHidden,user,filter,followerId, teamName]", function() {
                    if ($scope.waitFor) {
                        if ("search" == $scope.waitFor && "" == $scope[$scope.waitFor]) return void($scope.media = []);
                        if ("undefined" == typeof $scope[$scope.waitFor] || "" == $scope[$scope.waitFor]) return
                    }
                    $scope.teamName && "string" == typeof $scope.teamName && ($scope.team_name = $scope.teamName), "undefined" == typeof $scope.start && ($scope.start = 0), void 0 !== $scope.processing && ($scope.processing = !0), $scope.listlimit = $scope.autosize ? $scope.calculateLimit() : $scope.limit, params = {
                        media_type: $scope.type,
                        media_name: $scope.user || "list",
                        list: $scope.user ? "list" : null,
                        limit: $scope.listlimit,
                        start: $scope.start,
                        offset: $scope.offset,
                        size: $scope.size,
                        filter: $scope.filter,
                        team_name: $scope.team_name,
                        game: $scope.game,
                        follower_id: $scope.followerId,
                        search: $scope.search,
                        showHidden: $scope.showHidden,
                        hiddenOnly: $scope.onlyHidden,
                        media: !0,
                        grouped: $scope.grouped,
                        liveonly: $scope.liveOnly
                    }, "" == $scope.game && (params.game = null), $scope.liveOnly && "false" == $scope.liveOnly && (params.liveonly = !1), $scope.language && 2 == $scope.language.length && (params.language = $scope.language), "live" == $scope.type && $rootScope.session && "1" == $rootScope.session.superadmin && (params.authToken = $rootScope.session.authToken), $scope.teamName ? MediaRes = Team.get(params, function(res) {
                        if ($scope.media = [], $scope.team = res, "video" == $scope.type ? ($scope.media = $scope.team.media.video, $scope.filter && "recent" == $scope.filter && ($scope.media = $scope.media.sort(sortRecent))) : $scope.media = $scope.team.media.livestream, $scope.media)
                            for (var i = 0; i < $scope.media.length; i++) {
                                $scope.media[i].playing_now = $scope.media[i].media_id == $scope.currentMediaId ? !0 : !1;
                                var now = moment.utc(),
                                    live = moment.utc($scope.media[i].media_live_since),
                                    diff = now.diff(live),
                                    duration = moment.duration(diff);
                                $scope.media[i].media_live_time = Math.floor(duration.asHours()) + moment.utc(diff).format(":mm"), diff = now.diff($scope.media[i].media_date_added), duration = moment.duration(diff), $scope.media[i].media_time_ago = duration.humanize() + " ago"
                            } else $scope.media = [];
                        void 0 !== $scope.processing && ($scope.processing = !1)
                    }, function() {
                        void 0 !== $scope.processing && ($scope.processing = !1)
                    }) : ($scope.fast && "true" == $scope.fast && (params.fast = !0), Media.get(params, function(res) {
                        if ($scope.media = [], "video" == $scope.type ? ($scope.media = res.video, $scope.media ? $scope.media.length < $scope.limit ? "true" === $scope.showMore && ($scope.show_more.show = !1) : "true" === $scope.showMore && ($scope.show_more.show = !0) : "true" === $scope.showMore && ($scope.show_more.show = !1)) : ($scope.media = res.livestream, $scope.media ? $scope.media.length < $scope.limit ? "true" === $scope.showMore && ($scope.show_more.show = !1) : "true" === $scope.showMore && ($scope.show_more.show = !0) : "true" === $scope.showMore && ($scope.show_more.show = !1)), $scope.media)
                            for (var i = 0; i < $scope.media.length; i++) {
                                $scope.media[i].playing_now = $scope.media[i].media_id == $scope.currentMediaId ? !0 : !1;
                                var now = moment.utc(),
                                    live = moment.utc($scope.media[i].media_live_since),
                                    diff = now.diff(live),
                                    duration = moment.duration(diff);
                                $scope.media[i].media_live_time = Math.floor(duration.asHours()) + moment.utc(diff).format(":mm"), diff = now.diff($scope.media[i].media_date_added), duration = moment.duration(diff), $scope.media[i].media_time_ago = duration.humanize() + " ago"
                            } else $scope.media = [];
                        void 0 !== $scope.processing && ($scope.processing = !1), $scope.resetting = !1
                    }, function() {
                        void 0 !== $scope.processing && ($scope.processing = !1)
                    }))
                }, !0)
            },
            link: function(scope) {
                scope.$watch("game", function() {})
            }
        }
    }), app.directive("dummylist", [function() {
        return {
            restrict: "E",
            transclude: !0,
            scope: {
                length: "@"
            },
            templateUrl: function() {
                return tpl = "partials/directives/dummy_list.html", tpl
            },
            controller: function($scope, $rootScope, $timeout, $element) {
                for (var backList = [], i = 0; 100 > i; i++) backList.push({});
                $scope.getListWidth = function() {
                    return $element.parent().width()
                }, $scope.getElementCount = function() {
                    var totalWidth = $scope.getListWidth() + 20,
                        thumbWidth = 290,
                        count = parseInt(totalWidth / thumbWidth);
                    return count
                }, $scope.initDummylist = function(count) {
                    $scope.dummylist = backList.slice(0, count)
                }, $scope.length && $scope.initDummylist($scope.length), $scope.$watch("length", function(newVal, oldVal) {
                    newVal && newVal != oldVal && $scope.initDummylist(newVal)
                })
            }
        }
    }]), app.directive("mediaplayer", function() {
        var mobile = window.mobilecheck(),
            playerSuffix = "",
            bufferCount = 0,
            clipId = 0,
            resetTimeout = !1,
            failoverTimeout = !1,
            playTimeout = !1,
            clicks = 0,
            cdnRoundTrip = 0,
            bitrate = 3e3,
            failover = !1;
        return {
            templateUrl: function(element, attr) {
                switch (playerSuffix = "", "true" == attr.embed && (playerSuffix = "Embed"), "true" == attr.spotlight && (playerSuffix = "Spotlight"), mobile) {
                    case !0:
                        tpl = "partials/sub/detailPlayerMobile.html";
                        break;
                    case !1:
                        tpl = "partials/sub/detailPlayer" + playerSuffix + ".html"
                }
                return tpl
            },
            restrict: "E",
            scope: {
                mediaid: "=",
                autoplay: "@",
                embed: "@",
                dashboard: "@",
                spotlight: "=",
                type: "@"
            },
            controller: function($scope, $sce, $window, $location, $document, $timeout, $stateParams, $rootScope, $http, $element, $modal, Media, MediaAuth, PlayerConfig, Stats, appSettings, CastService, Fullscreen, ViewerManager, SubscriptionInfo, Subscribed, $cookieStore, $state, PlaybackService, MediaFeatured, DisplayService, Fluentd) {
                function hms2seconds(str) {
                    for (var p = str.split(":"), s = 0, m = 1; p.length > 0;) s += m * parseInt(p.pop(), 10), m *= 60;
                    return s
                }
                $scope.loading = !1, $scope.blockFailover = !1, $scope.playerOptions = DisplayService.playerState;
                var mediaplayer = $element.find(".mediaplayer"),
                    mediaWrapper = $element.find("#mediaplayer"),
                    mediaControls = $element.find(".mediaControls"),
                    get = ($(".track"), $location.search());
                $scope.isMobile = !1, $scope.$on("isMobile", function() {
                    $scope.isMobile = !0
                }), $scope.$on("isTablet", function() {
                    $scope.isMobile = !1
                }), $scope.$on("isDesktop", function() {
                    $scope.isMobile = !1
                }), get.popout ? ($scope.popout = !0, $("body").css("overflow", "hidden")) : $scope.popout = !1, $scope.stateClass = $state.current.section, $scope.$on("$stateChangeStart", function(event, toState) {
                    var mediaType = ($location.search(), "video" === toState.section ? "video" : "live");
                    $scope.type = mediaType, $scope.stateClass = toState.section, $scope.switched = !1, $scope.playerisloading = !1, $timeout.cancel(playTimeout), $timeout.cancel(failoverTimeout), $timeout.cancel(resetTimeout)
                }), $scope.auth = !0, $scope.config = appSettings, $scope.ready = !0, $scope.autoplay = "true" === get.autoplay ? !0 : !1, $scope.playerVolume = 0, $scope.isFullscreen = !1, $scope.playerControls = !1, $scope.controlsEnabled = !0, $scope.mouseevents = 0, "true" == $scope.embed && ($scope.playerisloading = !1), $scope.setPlayerDimension = function() {
                    "true" != $scope.embed ? (mediaplayer.height("100%"), mediaplayer.width("100%"), mediaControls.width("100%"), mediaWrapper.height("100%"), mediaWrapper.width("100%")) : (mediaplayer.height(window.innerHeight), mediaplayer.width(window.innerWidth), mediaControls.width(window.innerWidth), mediaWrapper.height(window.innerHeight), mediaWrapper.width(window.innerWidth))
                }, $scope.$watch($scope.setPlayerDimension, function() {}), window.onresize = function() {
                    $scope.$apply()
                }, authToken = {}, $scope.$watch("mediaid", function(newVal) {
                    if ($scope.isMobile = $rootScope.mobileBrowser(), "home" == $state.current.section && $scope.isMobile) return $scope.playerConfig = {}, void($scope.media = null);
                    if ("undefined" != typeof newVal) {
                        if (null == newVal) return $scope.playerConfig = {}, void($scope.media = null);
                        if ($scope.media = null, $scope.loading = !0, "undefined" == typeof $scope.type && ($scope.type = PlaybackService.getMediaType()), $scope.mediaid) {
                            if ($scope.autoplay = "true" === get.autoplay ? !0 : !1, $scope.qos = "true" === get.qos ? !0 : !1, get.s && ($scope.startat = hms2seconds(get.s)), get.t) {
                                $scope.startat = hms2seconds(get.t);
                                var matches = get.t.match(/^(?:(\d+)h)?(?:(\d+)m)?(?:(\d+)s)?$/);
                                matches && ($scope.startat = parseInt(matches[3] || 0) + 60 * parseInt(matches[2] || 0) + 60 * parseInt(matches[1] || 0) * 60)
                            }
                            authToken = $rootScope.session ? $rootScope.session.authToken : null, params = {
                                media_name: $scope.mediaid,
                                media_type: $scope.type,
                                showHidden: !0,
                                autoPlay: $scope.autoplay,
                                authToken: authToken
                            }, MediaRes = Media.get(params, function(media) {
                                if (media.video ? $scope.media = media.video[0] : media.livestream && ($scope.media = media.livestream[0]), $scope.media) {
                                    var now = moment.utc(),
                                        live = moment.utc($scope.media.media_live_since),
                                        diff = now.diff(live),
                                        duration = moment.duration(diff);
                                    $scope.media.media_live_time = Math.floor(duration.asHours()) + moment.utc(diff).format(":mm"), "live" == $scope.type ? ($scope.media.channelUrl = $sce.trustAsResourceUrl("http://www.hitbox.tv/" + $scope.media.media_name), $scope.posterUrl = "http://edge.sf.hitbox.tv/static/img/media/live/" + $scope.media.media_name + "_mid_000.jpg") : ($scope.media.channelUrl = $sce.trustAsResourceUrl("http://www.hitbox.tv/video/" + $scope.media.media_id), $scope.posterUrl = "http://edge.sf.hitbox.tv/static/img/media/videos/" + $scope.media.media_name.substr(0, 3) + "/" + $scope.media.media_name + "_large_000.jpg"), MediaAuthRes = function() {
                                        params = {
                                            media_name: $scope.media.media_name,
                                            media_type: $scope.type,
                                            authToken: authToken,
                                            mediaPassword: $scope.mediaPassword
                                        }, MediaAuth.auth(params, function() {
                                            $scope.auth = !0, ("true" == $scope.embed && "true" == get.autoplay || "true" != $scope.embed) && $scope.loadPlayer()
                                        }, function() {
                                            $scope.loading = !1, $scope.auth = !1, $scope.enterPassword = function(password) {
                                                $scope.mediaPassword = password, MediaAuthRes()
                                            }
                                        })
                                    }, 1 == $scope.media.media_password_protected ? MediaAuthRes() : ($scope.auth = !0, $scope.loadPlayer())
                                }
                            })
                        }
                    }
                }), $scope.toggleFullscreen = function() {
                    if (Fullscreen.isEnabled()) $scope.isFullscreen = !1, Fullscreen.cancel();
                    else {
                        if ("settings" === $state.current.section) return Fullscreen.enable(document.getElementsByClassName("video-editor")[0]), void($scope.isFullscreen = !0);
                        Fullscreen.enable("true" == $scope.embed ? document.getElementById("mediaplayer") : document.getElementsByClassName("player-wrapper")[0]), $scope.isFullscreen = !0
                    }
                }, Fullscreen.$on("FBFullscreen.change", function(evt, isFullscreenEnabled) {
                    $scope.isFullscreen = isFullscreenEnabled
                }), $scope.doubleClickFullscreen = function() {
                    return "home" != $state.current.section || $scope.isFullscreen ? (clicks++, 1 == clicks && setTimeout(function() {
                        clicks = 0
                    }, 300), void(clicks > 1 && $scope.toggleFullscreen())) : void("video" == $scope.type ? $state.go("video", {
                        id: $scope.media.media_id
                    }) : $state.go("detail", {
                        channel: $scope.media.media_name
                    }))
                }, $scope.toggleSettings = function() {
                    $scope.playerSettings = !$scope.playerSettings
                }, $scope.startHideTimer = function(delay) {
                    $scope.controlsTimeout = $timeout(function() {
                        $scope.playerControls = !1, $scope.playerSettings = !1, $element.css({
                            cursor: "none"
                        })
                    }, delay)
                }, $scope.onmouseMove = function(delay) {
                    $scope.mouseevents++, $scope.mouseevents >= 10 ? ($scope.playerControls = !0, $scope.mouseevents = 0, $element.css({
                        cursor: "default"
                    }), $scope.controlsTimeout && $timeout.cancel($scope.controlsTimeout)) : 1 == $scope.mouseevents && ($scope.controlsTimeout && $timeout.cancel($scope.controlsTimeout), $scope.startHideTimer(delay))
                }, $scope.onmouseOut = function(delay) {
                    $scope.controlsTimeout && $timeout.cancel($scope.controlsTimeout), $scope.startHideTimer(delay)
                }, $scope.enableControls = function() {
                    $scope.controlsEnabled = !0, $scope.$apply()
                }, $scope.disableControls = function() {
                    $scope.controlsEnabled = !1, $scope.blockFailover = !0, $scope.$apply()
                }, $scope.onAdsTimeout = function() {
                    $scope.adscounter--, adstimeout = $timeout($scope.onAdsTimeout, 1e3), $scope.adscounter <= 0 && $scope.closeadsOverlay()
                }, $scope.stopAdsTimeout = function() {
                    $timeout.cancel(adstimeout)
                }, $scope.adsOverlay = function() {
                    $scope.playerBlack = !0, $scope.adscounter = 30, adstimeout = $timeout($scope.onAdsTimeout, 1e3)
                }, $scope.closeadsOverlay = function() {
                    $scope.playerBlack = !1, $scope.stopAdsTimeout()
                }, $scope.openPlayerOverlay = function() {
                    $scope.playerOverlay = !0, $scope.overlayCounter = parseInt($scope.media.media_start_in_sec) + 30, overlaytimeout = $timeout($scope.onOverlayTimeout, 1e3)
                }, $scope.closePlayerOverlay = function() {
                    $scope.playerOverlay = !1, $timeout.cancel(overlaytimeout)
                }, $scope.onOverlayTimeout = function() {
                    $scope.overlayCounter--, overlaytimeout = $timeout($scope.onOverlayTimeout, 1e3), $scope.overlayCounter <= 0 && ($f("player").play(), $scope.closePlayerOverlay())
                }, $scope.updateViewers = function(viewers) {
                    $scope.media.media_views = viewers
                }, $scope.disableLoading = function() {
                    $scope.playerisloading = !1, $scope.$apply()
                }, loadPlayer = function() {
                    if ($scope.media) {
                        if ($scope.media.media_start_in_sec > 0 && $scope.openPlayerOverlay(), $scope.switched = !1, subParams = {
                                type: "channel",
                                type_id: $scope.media.media_user_id
                            }, $scope.playerisloading = !0, $scope.playerConfig = {}, SubRes = SubscriptionInfo.get(subParams, function(subscription) {
                                $scope.subscription = subscription, $scope.subEnabled = !0;
                                var restHost = $location.host();
                                $scope.subscribeUrl = $rootScope.session ? "https://" + restHost + "/" + $scope.media.media_user_name + "/subscribe/" + $rootScope.session.user_name : "https://" + restHost + "/" + $scope.media.media_user_name + "/subscribe/", $scope.gotoSubscribeUrl = function() {
                                    $window.location.href = $scope.subscribeUrl
                                }, $scope.openPaywall = function() {
                                    $scope.paywall = !0
                                }, $scope.closePaywall = function() {
                                    $scope.paywall = !1
                                }, Subscribed.get({
                                    authToken: authToken,
                                    channel: $scope.media.media_user_name
                                }, function(access) {
                                    1 == access.isSubscriber && ($scope.subscribed = !0), 1 == access.isCanceled && ($scope.subscribedCanceled = !0), $scope.displayState = "data"
                                }, function() {
                                    $scope.displayState = "data", "video" == $scope.type && 1 == $scope.subscription.subscription.plan.plan_videos && $scope.openPaywall()
                                })
                            }, function() {
                                $scope.subEnabled = !1
                            }), castScope = angular.element("#receiverPicker").scope(), passArg = null, embedArg = !1, $scope.mediaPassword && (passArg = $scope.mediaPassword), "true" == $scope.embed && (embedArg = !0), configParams = {
                                media_type: $scope.type,
                                media_id: $scope.mediaid,
                                embed: embedArg,
                                popout: get.popout,
                                autoplay: get.autoplay,
                                showHidden: !0,
                                mediaPassword: passArg,
                                redis: !0,
                                authToken: authToken,
                                subscribed: $scope.subscribed,
                                qos: $scope.qos,
                                no_interruption: $scope.spotlight
                            }, $scope.dashboard && "true" == $scope.dashboard && (configParams.dashboard = "true"), $scope.spotlight && "true" == $scope.spotlight && (configParams.featured = "true"), "function" == typeof amplify.store && amplify.store("hitbox.br")) {
                            var htbxBr = amplify.store("hitbox.br");
                            $cookieStore.put("hitbox.br", htbxBr)
                        }
                        PlayerConfig.get(configParams, function(config) {
                            $scope.playerConfig = config, "live" == $scope.type ? ($scope.media.channelUrl = $sce.trustAsResourceUrl("http://www.hitbox.tv/" + $scope.media.media_name), $scope.media.media_mobile_name = config.clip.bitrates[0].url, $scope.posterUrl = "http://edge.sf.hitbox.tv/static/img/media/live/" + $scope.media.media_name + "_mid_000.jpg", media_mobile_url = "http://api.hitbox.tv/player/hls/" + $scope.media.media_name + ".m3u8", $scope.media_mobile_url = $sce.trustAsResourceUrl(media_mobile_url), $scope.media_mobile_url_chromecast = "http://api.hitbox.tv/player/hls/" + $scope.media.media_name + ".m3u8") : ($scope.media.channelUrl = $sce.trustAsResourceUrl("http://www.hitbox.tv/video/" + $scope.media.media_id), $scope.media.media_mobile_name = config.clip.bitrates[0].url, $scope.posterUrl = "http://edge.sf.hitbox.tv/static/img/media/videos/" + $scope.media.media_name.substr(0, 3) + "/" + $scope.media.media_name + "_large_000.jpg", media_mobile_url = "http://edge.bf.hitbox.tv/static/videos/vods" + config.clip.bitrates[0].url, $scope.media_mobile_url = $sce.trustAsResourceUrl(media_mobile_url), $scope.media_mobile_url_chromecast = "http://edge.hls.vods.hitbox.tv/static/videos/vods" + config.clip.bitrates[0].url), $rootScope.channel = $scope.media.media_name, CastService.mediaUrl = $scope.media_mobile_url_chromecast;
                            var referrer = "";
                            if (startFailover = function(delay) {
                                    $timeout.cancel(failoverTimeout), failoverTimeout = $timeout(function() {
                                        console.log("Failover logic started"), failover = !0
                                    }, delay)
                                }, resetBuffercount = function(delay) {
                                    resetTimeout || (resetTimeout = $timeout(function() {
                                        console.log("Reset Buffercount: " + bufferCount), bufferCount = 0, resetTimeout = !1
                                    }, delay))
                                }, forcePlay = function(delay) {
                                    0 == delay && playTimeout && ($timeout.cancel(playTimeout), playTimeout = !1), playTimeout || (playTimeout = $timeout(function() {
                                        console.log("Forcing replay: " + bufferCount), switchCDN(config), playTimeout = !1
                                    }, delay))
                                }, $scope.forcePlayForced = function() {
                                    $scope.blockFailover = !1, $scope.loading && forcePlay(0)
                                }, switchCDN = function() {
                                    return cdnRoundTrip > config.settings.max_roundtrips ? !1 : void($scope.blockFailover || (bufferCount = 0, currentClipId = clipId, clipId += 1, console.log("clipId: " + clipId), clipId >= config.cdns.length && (clipId = 0, cdnRoundTrip += 1), clip = player.getClip() || !1, clip.bitrates = config.cdns[clipId].bitrates, clip.netConnectionUrl = config.cdns[clipId].netConnectionUrl, clip.rtmpSubscribe = config.cdns[clipId].rtmpSubscribe, bitrate = amplify.store("hitbox.br"), mapped = !1, angular.forEach(clip.bitrates, function(br) {
                                        return br.bitrate == bitrate ? (mapped = !0, void(item = br)) : void(altitem = br)
                                    }), mapped || (item = altitem), clip.url = item.url, clip.provider = item.provider, player.play(clip), $timeout.cancel(resetTimeout), forcePlay(config.settings.play_timeout), syslog = {
                                        url: $window.location.href,
                                        severity: "info",
                                        facility: "player",
                                        event: "cdnSwitch",
                                        source: $scope.media.media_name,
                                        netConnectionUrl: clip.netConnectionUrl,
                                        bitrate: $scope.playerConfig.bitrate,
                                        countryCode: config.plugins.pingback.countryCode,
                                        ip: config.plugins.pingback.ip,
                                        cdn_id: config.plugins.pingback.cdn_id
                                    }, Fluentd.post(syslog)))
                                }, $scope.switchCDN = function() {
                                    switchCDN()
                                }, config.clip.metaData = !1, $scope.addview = function() {
                                    statsParams = {
                                        media_id: $scope.mediaid
                                    }, StatsRes = Stats.addview(statsParams)
                                }, $scope.popoutPlayer = function() {
                                    $f("player").stop();
                                    var popout = window.open("/embed/" + $scope.media.media_name + "?popout=true&autoplay=true", "", "toolbar=no,location=no,status=no,menubar=no,scrollbars=no,width=768,height=432,top=100,left=100");
                                    popout.onbeforeunload = function() {
                                        $f("player").play()
                                    }
                                }, $scope.popoutChat = function() {
                                    $window.open("/embedchat/" + $scope.media.media_name + "?autoconnect=true", "", "width=380,height=540")
                                }, mobile || "true" === get.mobile) ViewerManager.refresh = function() {
                                $scope.$$phase || $scope.$apply()
                            }, openCallback = function() {
                                ViewerManager.joinChannel("UnknownSoldier", $scope.media.media_name, "", !1), ViewerManager.refresh()
                            }, msgCallback = function(text) {
                                (json = angular.fromJson(text.data)) ? (method = json.method, params = json.params, angular.element($("#detail-infobox")).scope().media.media_views = params.viewers, angular.element($("#detail-infobox")).scope().$apply()) : (method = text.method, params = text.params)
                            }, ViewerManager.bind("open", openCallback), ViewerManager.bind("chatMessage", msgCallback), ViewerManager.init(config.plugins.pingback.wsUrl), $scope.$on("$destroy", function() {
                                ViewerManager.partChannel("UnknownSoldier", $scope.media.media_name), ViewerManager.unbind("chatMessage", msgCallback), ViewerManager.unbind("open", openCallback), ViewerManager.disconnect()
                            }), $scope.$on("$stateChangeStart", function() {
                                ViewerManager.partChannel("UnknownSoldier", $scope.media.media_name), ViewerManager.unbind("chatMessage", msgCallback), ViewerManager.unbind("open", openCallback), ViewerManager.disconnect()
                            }), document.getElementById("mobilePlayer").play();
                            else {
                                embedArg || (config.plugins.layer = {
                                    url: "flowplayer.content-3.2.8.swf",
                                    width: "100%",
                                    top: 0,
                                    bottom: 0,
                                    border: 0,
                                    height: "100%",
                                    zIndex: 1,
                                    opacity: 0,
                                    onClick: function() {
                                        clicks++, 1 == clicks && setTimeout(function() {
                                            clicks = 0
                                        }, 300), clicks > 1 && $scope.toggleFullscreen()
                                    }
                                }), config.clip.onStart = function() {
                                    "video" == $scope.type && ($scope.startat > 0 && player.seek($scope.startat), $scope.addview()), $scope.playerisloading = !1, $scope.$apply()
                                }, config.onBufferEmpty = function() {
                                    clip = player.getClip(), syslog = {
                                        url: $window.location.href,
                                        severity: "info",
                                        facility: "player",
                                        event: "bufferEmpty",
                                        source: $scope.media.media_name,
                                        netConnectionUrl: clip.netConnectionUrl,
                                        bitrate: $scope.playerConfig.bitrate,
                                        countryCode: config.plugins.pingback.countryCode,
                                        ip: config.plugins.pingback.ip,
                                        cdn_id: config.plugins.pingback.cdn_id
                                    }, Fluentd.post(syslog), $scope.loading = !0, resetBuffercount(config.settings.reset_timeout), failover && (bufferCount += 1), bufferCount > config.settings.max_buffer_count && "video" != $scope.type && switchCDN()
                                }, config.onBufferFull = function() {
                                    clip = player.getClip(), syslog = {
                                        url: $window.location.href,
                                        severity: "info",
                                        facility: "player",
                                        event: "bufferFull",
                                        source: $scope.media.media_name,
                                        netConnectionUrl: clip.netConnectionUrl,
                                        bitrate: $scope.playerConfig.bitrate,
                                        countryCode: config.plugins.pingback.countryCode,
                                        ip: config.plugins.pingback.ip,
                                        cdn_id: config.plugins.pingback.cdn_id
                                    }, Fluentd.post(syslog), $scope.loading = !1, $timeout.cancel(playTimeout), player.getPlugin("info").hide(), $scope.closePlayerOverlay(), $scope.playerisloading = !1, $scope.$apply()
                                }, config.clip.onUpdate = function() {}, config.onBeforeLoad = function() {}, config.onUnLoad = function() {
                                    $scope.$apply()
                                }, config.onStreamSwitchBegin = function() {}, config.onLoad = function() {
                                    $scope.switched = !1, castVolumeTimeout = !1, $scope.dashboard && "true" == $scope.dashboard, $scope.startHideTimer(8e3), $scope.playerInitialized = !0, $scope.playerVolume = player.getVolume(), changeVolume = function() {
                                        castVolume = $scope.playerVolume / 100, $timeout.cancel(castVolumeTimeout), castVolumeTimeout = $timeout(function() {
                                            $f("player").setVolume($scope.playerVolume), window.chrome && chrome.cast && chrome.cast.isAvailable && castScope.changeVolume(Math.round(10 * castVolume) / 10), castVolumeTimeout = !1
                                        }, 300)
                                    }, $scope.sliderOptions = {
                                        orientation: "horizontal",
                                        min: 0,
                                        max: 100,
                                        steps: 1,
                                        range: "min",
                                        change: changeVolume,
                                        slide: changeVolume
                                    }, $scope.$apply()
                                }, config.clip.onBeforeBegin = function(clip) {
                                    "video" != $scope.type && (1 == config.settings.enabled && startFailover(config.settings.start_timeout), clip.live && forcePlay(config.settings.play_timeout), $scope.switched || ($scope.switched = !0, "channel" != $state.current.section ? $scope.brSwitch(1e3, !1) : $scope.brSwitch(amplify.store("hitbox.br"))))
                                }, "live" == $scope.type && (config.plugins.pingback.referrer = referrer), config.plugins.menu = null, $scope.brSwitch = function(bitrate, store) {
                                    return bitrate || (bitrate = 2e3, config.settings.default_br > 0 && (bitrate = config.settings.default_br)), store && amplify.store("hitbox.br", bitrate), clip = player.getClip(), mapped = !1, angular.forEach(clip.bitrates, function(br) {
                                        return br.bitrate == bitrate ? (mapped = !0, void(brItem = br)) : void 0
                                    }), mapped ? ($scope.playerConfig.bitrate = brItem.bitrate, $scope.playerConfig.label = brItem.label, clip.url = brItem.url, clip.provider = brItem.provider, $scope.playerisloading = !0, $f("player").play(clip), $timeout(function() {
                                        $scope.playerisloading = !1, $scope.$apply()
                                    }, 1e3), void(bufferCount = 0)) : void $scope.brSwitch(clip.bitrates[0].bitrate, !1)
                                };
                                var player = $f("player", {
                                    src: appSettings.playerUrl + "/static/player/flowplayer/flowplayer.commercial-3.2.16.swf",
                                    wmode: "opaque"
                                }, config).controls("playerControls", {
                                    media_name: $scope.media.media_name,
                                    media_type: $scope.type
                                });
                                player.load()
                            }
                        }, function(error) {
                            console.log(error)
                        })
                    }
                }, $scope.loadPlayer = loadPlayer
            },
            link: function(scope, element) {
                element.removeClass("mediaplayer")
            }
        }
    }), app.directive("genericPopover", function($compile, $templateCache, $timeout, $window, DisplayService, $rootScope) {
        return {
            restrict: "A",
            transclude: !0,
            scope: !0,
            template: "<span ng-transclude></span>",
            link: function($scope, $elem, $attrs) {
                var isMobile = !1,
                    tooltip = !1,
                    padding = 15,
                    ttDelay = 200,
                    ttPrio = $attrs.gpPosition,
                    ttWidth = $attrs.gpWidth,
                    ttHeight = $attrs.gpHeight,
                    ttClasses = [],
                    keepOpen = $attrs.gpKeepOpen;
                "undefined" != typeof $attrs.gpClasses && (ttClasses = JSON.parse($attrs.gpClasses)), $scope.popoverState = DisplayService.popoverState, isMobile = $scope.popoverState.isMobile(), angular.element($window).on("resize", function() {
                    isMobile = $scope.popoverState.isMobile()
                });
                var clicked = !1,
                    visible = !1;
                $rootScope.$on("PopoverUpdated", function() {
                    0 != $scope.popoverState.get() || clicked || $scope.remove_tooltip()
                });
                var activeTemplate = $templateCache.get($attrs.gpTemplate);
                if ($scope.remove_tooltip = function() {
                        tooltip && "undefined" != typeof tooltip && (tooltip.remove(), visible = !1)
                    }, $scope.togglePopover = function() {
                        clicked = !0, $scope.popoverState.get() && $scope.popoverState.set(!1), visible ? $scope.remove_tooltip() : (tooltip = angular.element(isMobile ? '<div id="tooltip">' + activeTemplate + '<div class="actions"><div class="close-button menu-item" ng-click="remove_tooltip()">Close</div></div></div>' : '<div id="tooltip">' + activeTemplate + '<div class="arrow"></div></div>'), $e = $compile(tooltip)($scope), tooltip.replaceWith($e), $scope.init_tooltip(), $scope.popoverState.set(!0), visible = !0), clicked = !1
                    }, $scope.calculatePosition = function() {
                        if (vLeft = $elem.offset().left - $(window).scrollLeft(), vTop = $elem.offset().top - $(window).scrollTop(), wHeight = $(window).height(), wWidth = $(window).width(), tooltip.removeClass(), tooltip.css({
                                right: "initial",
                                left: "initial",
                                top: "initial",
                                bottom: "initial"
                            }), isMobile) {
                            tooltip.css({
                                left: 0
                            }), tooltip.css({
                                right: 0
                            }), tooltip.addClass("mobile"), vTop <= 50 ? tooltip.css({
                                top: 50
                            }) : (tooltip.css({
                                bottom: 0
                            }), tooltip.addClass("anim-start"), tooltip.addClass("animate"), $timeout(function() {
                                tooltip.removeClass("anim-start"), tooltip.addClass("animate")
                            }, 0));
                            for (c in ttClasses) tooltip.addClass(ttClasses[c])
                        } else if ("left" == ttPrio || "right" == ttPrio) "left" == ttPrio ? vLeft + $elem.outerWidth() / 2 < ttWidth ? (pos_left = vLeft + $elem.outerWidth() + padding, tooltip.css({
                            left: pos_left
                        }), tooltip.addClass("right")) : (pos_right = wWidth - vLeft + padding, tooltip.css({
                            right: pos_right
                        }), tooltip.addClass("left")) : "right" == ttPrio && (wWidth - vLeft - $elem.outerWidth() / 2 < ttWidth ? (pos_right = wWidth - vLeft + padding, tooltip.css({
                            right: pos_right
                        }), tooltip.addClass("left")) : (pos_left = vLeft + $elem.outerWidth() + padding, tooltip.css({
                            left: pos_left
                        }), tooltip.addClass("right"))), wHeight - vTop - $elem.outerHeight() / 2 < ttHeight ? (pos_bottom = wHeight - (vTop + $elem.outerHeight() / 2) - padding, tooltip.css({
                            bottom: pos_bottom
                        }), tooltip.addClass("shift-bottom")) : (pos_top = vTop + $elem.outerHeight() / 2 - padding, tooltip.css({
                            top: pos_top
                        }), tooltip.addClass("shift-top"));
                        else {
                            tooltip.css({
                                width: ttWidth
                            }), "bottom" == ttPrio ? wHeight - vTop - $elem.outerHeight() / 2 < ttHeight ? (pos_bottom = wHeight - vTop + padding, tooltip.css({
                                bottom: pos_bottom
                            }), tooltip.addClass("top")) : (pos_top = vTop + $elem.outerHeight() + padding, tooltip.css({
                                top: pos_top
                            }), tooltip.addClass("bottom")) : vTop + $elem.outerHeight() / 2 < ttHeight ? (pos_top = vTop + $elem.outerHeight() + padding, tooltip.css({
                                top: pos_top
                            }), tooltip.addClass("bottom")) : (pos_bottom = wHeight - vTop + 20, tooltip.css({
                                bottom: pos_bottom
                            }), tooltip.addClass("top")), vLeft + $elem.outerWidth() / 2 < ttWidth / 2 ? (pos_left = vLeft + $elem.outerWidth() / 2 - padding, tooltip.addClass("shift-right")) : wWidth - vLeft - $elem.outerWidth() / 2 < ttWidth / 2 ? (pos_left = vLeft - ttWidth + $elem.outerWidth() / 2 + padding, tooltip.addClass("shift-left")) : pos_left = vLeft + $elem.outerWidth() / 2 - ttWidth / 2, tooltip.css({
                                left: pos_left
                            });
                            for (c in ttClasses) tooltip.addClass(ttClasses[c])
                        }
                    }, $scope.checkHover = function() {
                        var timeoutPromise;
                        $timeout.cancel(timeoutPromise), timeoutPromise = $timeout(function() {
                            hoverElement || hoverTooltip || $scope.remove_tooltip()
                        }, ttDelay)
                    }, $scope.init_tooltip = function() {
                        $timeout(function() {
                            tooltip.appendTo("body")
                        }, 0), tooltip.click(function(e) {
                            e.stopPropagation()
                        }), "mouseover" == $attrs.gpOn && tooltip.mouseout(function() {
                            hoverTooltip = !1, $scope.checkHover()
                        }).mouseover(function() {
                            hoverTooltip = !0
                        }), $scope.popoverState.set(!0), visible = !0, tooltip.css({
                            minWidth: ttWidth,
                            minHeight: ttHeight
                        }), $scope.calculatePosition(), $rootScope.$on("tseScroll", function() {
                            !keepOpen && visible && $scope.calculatePosition()
                        }), $rootScope.$on("chatResize", function() {
                            !keepOpen && visible && $scope.calculatePosition()
                        })
                    }, $elem.click(function(e) {
                        e.stopPropagation()
                    }), "click" == $attrs.gpOn) $elem.on("click", function($event) {
                    1 != $event.ctrlKey && $scope.togglePopover()
                });
                else if ("mouseover" == $attrs.gpOn) {
                    $elem.on("mouseover", function() {
                        visible || (tooltip = angular.element('<div id="tooltip">' + activeTemplate + '<div class="arrow"></div></div>'), $e = $compile(tooltip)($scope), tooltip.replaceWith($e), $scope.init_tooltip())
                    });
                    var hoverElement = !1,
                        hoverTooltip = !1;
                    $elem.mouseout(function() {
                        hoverElement = !1, $scope.checkHover()
                    }).mouseover(function() {
                        hoverElement = !0
                    })
                }
            }
        }
    }), app.directive("recplayer", function() {
        var playerSuffix = (window.mobilecheck(), ""),
            clicks = 0;
        return {
            templateUrl: function() {
                return tpl = "partials/sub/detailPlayer" + playerSuffix + ".html", tpl
            },
            restrict: "E",
            scope: {
                recSession: "=",
                mediaId: "="
            },
            controller: function($scope, $timeout, $stateParams, $rootScope, $http, $element, $modal, PlayerRecConfig, appSettings, Fullscreen) {
                $element.find(".mediaplayer");
                $scope.autoplay = !1, $scope.$watch("mediaId", function() {
                    loadPlayer()
                }), $scope.startHideTimer = function(delay) {
                    $scope.controlsTimeout = $timeout(function() {
                        $scope.playerControls = !1, $scope.playerSettings = !1
                    }, delay)
                }, $scope.mouseevents = 0, $scope.recplayer = !0, $scope.onmouseMove = function(delay) {
                    $scope.mouseevents++, $scope.mouseevents >= 10 ? ($scope.playerControls = !0, $scope.mouseevents = 0, $scope.controlsTimeout && $timeout.cancel($scope.controlsTimeout)) : 1 == $scope.mouseevents && ($scope.controlsTimeout && $timeout.cancel($scope.controlsTimeout), $scope.startHideTimer(delay))
                }, $scope.onmouseOut = function(delay) {
                    $scope.controlsTimeout && $timeout.cancel($scope.controlsTimeout), $scope.startHideTimer(delay)
                }, loadPlayer = function() {
                    $scope.playerInitialized = !0, $scope.controlsEnabled = !0, $scope.playerControls = !0, $scope.auth = !0, $scope.mediaid = $scope.mediaId, configParams = {
                        rec_session: $scope.recSession,
                        media_name: $scope.mediaId
                    }, PlayerRecConfig.get(configParams, function(config) {
                        config.onLoad = function() {
                            castVolumeTimeout = !1, $scope.startHideTimer(8e3), $scope.playerInitialized = !0, $scope.playerVolume = player.getVolume(), changeVolume = function() {
                                castVolume = $scope.playerVolume / 100, castVolumeTimeout || (castVolumeTimeout = $timeout(function() {
                                    castVolumeTimeout = !1, player.setVolume($scope.playerVolume)
                                }, 300))
                            }, $scope.sliderOptions = {
                                orientation: "horizontal",
                                min: 0,
                                max: 100,
                                steps: 1,
                                range: "min",
                                change: changeVolume,
                                slide: changeVolume
                            }, $scope.$apply()
                        };
                        var player = flowplayer("player", {
                            src: appSettings.playerUrl + "static/player/flowplayer/flowplayer.commercial-3.2.16.swf",
                            wmode: "opaque"
                        }, config).controls("playerControls", {
                            media_type: "video"
                        });
                        player.load()
                    })
                }, $scope.toggleFullscreen = function() {
                    Fullscreen.isEnabled() ? (document.getElementsByClassName("rec-player-plus-timeline")[0].className = "rec-player-plus-timeline", $scope.isFullscreen = !1, Fullscreen.cancel()) : (Fullscreen.enable(document.getElementsByClassName("rec-player-plus-timeline")[0]), document.getElementsByClassName("rec-player-plus-timeline")[0].className = document.getElementsByClassName("rec-player-plus-timeline")[0].className + " fullscreen", $scope.isFullscreen = !0)
                }, Fullscreen.$on("FBFullscreen.change", function(evt, isFullscreenEnabled) {
                    $scope.isFullscreen = isFullscreenEnabled, document.getElementsByClassName("rec-player-plus-timeline")[0].className = isFullscreenEnabled ? document.getElementsByClassName("rec-player-plus-timeline")[0].className + " fullscreen" : "rec-player-plus-timeline"
                }), $scope.doubleClickFullscreen = function() {
                    clicks++, 1 == clicks && setTimeout(function() {
                        clicks = 0
                    }, 300), clicks > 1 && $scope.toggleFullscreen()
                }, $scope.loadPlayer = loadPlayer, loadPlayer()
            },
            link: function(scope, element) {
                element.removeClass("mediaplayer")
            }
        }
    }), app.directive("subbutton", [function() {
        return {
            restrict: "E",
            templateUrl: function() {
                var tpl = "partials/directives/subscribe_button.html";
                return tpl
            },
            scope: {
                medianame: "@",
                hidePopover: "@",
                openInNewWindow: "@",
                customLabel: "@",
                displayName: "@"
            },
            replace: !0,
            controller: function($scope, $rootScope, $stateParams, $window, $cookieStore, $location, SubscriptionInfo, Subscribed, SubscriberEmotes, SubscriberBadges, Analytics) {
                $scope.displayState = "", $scope.subEnabled = !1, $scope.subscribed = !1, $scope.subscribedCanceled = !1, $scope.subEmotes = [], $scope.subBadges = [], $scope.displayPopover = !0, $scope.hide = !1, $scope.newWindow = !1, $scope.g2aEnabled = !1, $scope.subscribeLabel = "Subscribe", $scope.authToken = $rootScope.session ? $rootScope.session.authToken : null, $scope.getSubInfo = function() {
                    subParams = {
                        type: "channel",
                        type_id: $stateParams.user || $stateParams.channel
                    }, SubscriptionInfo.get(subParams, function(subscription) {
                        $scope.subscription = subscription, $scope.subEnabled = !0, 1 == $scope.subscription.subscription.plan.plan_g2a && ($scope.g2aEnabled = !0);
                        var restHost = $location.host();
                        if ($rootScope.session) {
                            if ($scope.subscribeUrl = "https://" + restHost + "/" + $scope.medianame + "/subscribe/" + $rootScope.session.user_name, "function" == typeof amplify.store && amplify.store("hitbox.session")) {
                                var htbxSession = amplify.store("hitbox.session");
                                $cookieStore.put("hitbox.session", htbxSession)
                            }
                        } else $scope.subscribeUrl = "https://" + restHost + "/" + $scope.medianame + "/subscribe/"
                    }, function() {
                        $scope.subEnabled = !1
                    })
                }, $scope.getSubscribed = function() {
                    Subscribed.get({
                        authToken: $scope.authToken,
                        channel: $scope.medianame
                    }, function(access) {
                        1 == access.isSubscriber && ($scope.subscribed = !0), 1 == access.isCanceled && ($scope.subscribedCanceled = !0), $scope.displayState = "data"
                    }, function() {
                        $scope.displayState = "data"
                    })
                }, $scope.getSubMedia = function() {
                    var submediaparams = {
                        channel: $stateParams.channel ? $stateParams.channel : $scope.medianame
                    };
                    Emotes = SubscriberEmotes.get(submediaparams, function(emotes) {
                        $scope.subEmotes = emotes.icons
                    }, function() {}), Badges = SubscriberBadges.get(submediaparams, function(badges) {
                        $scope.subBadges = badges.badges
                    }, function() {})
                }, $scope.gotoSubscribeUrl = function() {
                    Analytics.trackEvent("payment", "subButtonClicked"), $scope.newWindow ? $window.open($scope.subscribeUrl, "_blank") : $window.location.href = $scope.subscribeUrl
                }, $scope.$watch("medianame", function(newVal) {
                    newVal && $scope.getSubInfo()
                }), $scope.$watch("subEnabled", function(newVal) {
                    newVal && 1 == newVal && ($scope.getSubscribed(), $scope.getSubMedia())
                }), $scope.$watch("hidePopover", function(newVal) {
                    newVal && "true" == newVal && ($scope.displayPopover = !1)
                }), $scope.$watch("hideOnSubscribed", function(newVal) {
                    newVal && "true" == newVal && ($scope.hide = !0)
                }), $scope.$watch("openInNewWindow", function(newVal) {
                    newVal && "true" == newVal && ($scope.newWindow = !0)
                }), $scope.$watch("customLabel", function(newVal) {
                    newVal && ($scope.subscribeLabel = newVal)
                })
            },
            link: function() {}
        }
    }]), app.directive("userlist", function() {
        return {
            restrict: "E",
            scope: {
                teaminit: "@",
                team: "=",
                search: "=",
                event: "=",
                publicLength: "=",
                showInvited: "@",
                showUserOptions: "@",
                showTeamOptions: "@",
                showKick: "@",
                callbackKick: "&",
                sort: "@",
                type: "@",
                callback: "&"
            },
            templateUrl: function(element, attr) {
                switch (attr.size) {
                    default: tpl = "partials/sub/listUsers.html"
                }
                switch (attr.type) {
                    case "team":
                        tpl = "partials/sub/listUsersTeam.html";
                        break;
                    case "live":
                        tpl = "partials/sub/listUserOnlyLive.html";
                        break;
                    default:
                        tpl = "partials/sub/listUsers.html"
                }
                return tpl
            },
            controller: function($scope, $timeout, $http, $element, $attrs, Team, Users, Event, appSettings, Analytics) {
                $scope.filterInvited = function(user) {
                    return "true" === $scope.showInvited ? !0 : user.group_accepted === !0 ? !0 : $scope.search ? !0 : !1
                }, $scope.userCallback = function(user) {
                    $scope.callback && "function" == typeof $scope.callback && $scope.callback({
                        user: user
                    })
                }, $scope.config = appSettings, $scope.$watch("users", function(newVal) {
                    if (newVal && void 0 !== $scope.publicLength)
                        if ("true" === $scope.showInvited) $scope.publicLength = $scope.users.length;
                        else {
                            $scope.publicLength = 0;
                            for (var i = 0; i < $scope.users.length; i++) $scope.users[i].group_accepted === !0 && $scope.publicLength++
                        }
                }, !0), $scope.sortUserType = function(user_a, user_b) {
                    if ($scope.sort && "live" == $scope.sort) {
                        if (1 == user_a.is_live && 0 == user_b.is_live) return -1;
                        if (0 == user_a.is_live && 1 == user_b.is_live) return 1
                    }
                    return "admin" == user_a.group_role && "admin" != user_b.group_role ? -1 : "admin" != user_a.group_role && "admin" == user_b.group_role ? 1 : user_a.group_accepted && !user_b.group_accepted ? -1 : !user_a.group_accepted && user_b.group_accepted ? 1 : 0
                }, $scope.$watch("[team, search, event, teaminit]", function(newval) {
                    newval && ($scope.searchTimeout && $timeout.cancel($scope.searchTimeout), getTeam = function(teamname) {
                        Team.get({
                            team_name: teamname
                        }, function(res) {
                            $scope.users = res.members, $scope.users.sort($scope.sortUserType)
                        })
                    }, getUsers = function() {
                        Users.search({
                            q: $scope.search
                        }, function(users) {
                            $scope.users = users
                        })
                    }, $scope.team ? getTeam($scope.team) : $scope.teaminit ? getTeam($scope.teaminit) : $scope.search ? $scope.searchTimeout = $timeout(function() {
                        getUsers(), Analytics.trackEvent("user", "searching", $scope.search)
                    }, 300) : $scope.event && Event.get({
                        event_name: $scope.event
                    }, function(event) {
                        $scope.users = event.event.participants
                    }))
                }, !0)
            }
        }
    }), app.factory("cdnService", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/delivery/cdn", {
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: {},
                    isArray: !1
                },
                save: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("ChatIcons", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/chat/icons/:media_id", {
                media_id: "@media_id"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                add: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("ChatServers", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/chat/servers?redis=true", {}, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !0
                }
            });
        return resource
    }]), app.factory("ChatModerators", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/chat/moderators/:user_name", {
                user_name: "@user_name"
            }, {
                add: {
                    method: "POST",
                    params: params,
                    isArray: !1
                },
                remove: {
                    method: "DELETE",
                    params: params,
                    isArray: !1
                },
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.service("ChatManager", function() {
        var callbacks = {},
            chain = [];
        return {
            init: function(url) {
                var self = this;
                failover = function() {
                    comsole.log("failover"), console.log(self.chatHostFailover)
                }, this.conn = io.connect(url, {
                    "force new connection": !0,
                    reconnect: !1,
                    "connect timeout": 12e3
                }), this.conn.on("message", function(evt) {
                    dispatch("message", evt)
                }), this.conn.on("disconnect", function() {
                    console.log("disconnect"), this.conn = !1, dispatch("close", null)
                }), this.conn.on("connect", function() {
                    console.log("connect"), dispatch("open", null)
                }), this.conn.on("error", function(error) {
                    console.log("error"), this.conn = !1, this.disconnect(), error && error.target ? dispatch("error", "fallback") : dispatch("error", null)
                });
                var dispatch = function(event_name, message) {
                    if ("message" === event_name) switch ((json = angular.fromJson(message)) ? (method = json.method, params = json.params) : (method = message.method, params = message.params), method) {
                        case "serverMsg":
                            if (event_name = "serverMessage", "undefined" != typeof params.type) switch (params.type) {
                                case "resourceUpdate":
                                    event_name = "resourceUpdate";
                                    break;
                                case "reconnect":
                                    event_name = "reconnectMessage";
                                    break;
                                case "hostModeUpdate":
                                    event_name = "hostModeUpdate";
                                    break;
                                case "comBreak":
                                    event_name = "comBreak"
                            }
                            break;
                        case "chatMsg":
                            event_name = "chatMessage";
                            break;
                        case "pollMsg":
                            event_name = "pollMessage";
                            break;
                        case "infoMsg":
                            event_name = "undefined" == typeof params.type || "subChannel" != params.type && "subAdmin" != params.type ? "chatMessage" : "subNotifyMessage";
                            break;
                        case "updateUserList":
                            event_name = "chatMessage";
                            break;
                        case "userList":
                            event_name = "chatMessage";
                            break;
                        case "userInfo":
                            event_name = "chatMessage";
                            break;
                        case "banList":
                            event_name = "chatMessage";
                            break;
                        case "loginMsg":
                            event_name = "chatMessage";
                            break;
                        case "raffleMsg":
                            event_name = "raffleMessage";
                            break;
                        case "winnerMsg":
                            event_name = "raffleMessage";
                            break;
                        case "motdMsg":
                            event_name = "motdMessage";
                            break;
                        case "slowMsg":
                            event_name = "slowMessage";
                            break;
                        case "chatLog":
                            event_name = "chatLog"
                    }
                    var chain = callbacks[event_name];
                    if ("undefined" != typeof chain && 0 != chain.length)
                        for (var i = 0; i < chain.length; i++) chain[i](message)
                };
                return !0
            },
            disconnect: function() {
                this.conn && this.conn.disconnect(), this.conn = !1
            },
            bind: function(event_name, callback) {
                return callbacks[event_name] = callbacks[event_name] || [], callbacks[event_name].push(callback), this
            },
            bindsingle: function(event_name, callback) {
                return callbacks[event_name] = [], callbacks[event_name].push(callback), this
            },
            unbind: function(event_name, callback) {
                var chain = callbacks[event_name];
                if ("undefined" != typeof chain)
                    for (var i = chain.length; i--;) chain[i] === callback && chain.splice(i, 1)
            },
            unbindall: function() {
                chain = [], callbacks = {}
            },
            getChannelUserList: function(channel) {
                this.sendMessage({
                    method: "getChannelUserList",
                    params: {
                        channel: channel
                    }
                })
            },
            getChannelUser: function(name, channel) {
                this.sendMessage({
                    method: "getChannelUser",
                    params: {
                        channel: channel,
                        name: name
                    }
                })
            },
            chatMsg: function(name, channel, msgTxt, nameColor) {
                msgTxt.length > 0 && this.sendMessage({
                    method: "chatMsg",
                    params: {
                        channel: channel,
                        name: name,
                        nameColor: nameColor,
                        text: msgTxt
                    }
                })
            },
            getViewers: function() {},
            joinChannel: function(name, channel, token, isAdmin) {
                this.sendMessage({
                    method: "joinChannel",
                    params: {
                        channel: channel,
                        name: name,
                        token: token,
                        isAdmin: isAdmin
                    }
                })
            },
            makeMod: function(name, channel, token) {
                this.sendMessage({
                    method: "makeMod",
                    params: {
                        channel: channel,
                        name: name,
                        token: token
                    }
                })
            },
            removeMod: function(name, channel, token) {
                this.sendMessage({
                    method: "removeMod",
                    params: {
                        channel: channel,
                        name: name,
                        token: token
                    }
                })
            },
            kickUser: function(name, channel, time, token) {
                this.sendMessage({
                    method: "kickUser",
                    params: {
                        channel: channel,
                        name: name,
                        token: token,
                        timeout: time
                    }
                })
            },
            banUser: function(name, channel, seconds, token) {
                this.sendMessage({
                    method: "banUser",
                    params: {
                        channel: channel,
                        name: name,
                        token: token
                    }
                })
            },
            unbanUser: function(name, channel, token) {
                this.sendMessage({
                    method: "unbanUser",
                    params: {
                        channel: channel,
                        name: name,
                        token: token
                    }
                })
            },
            banUserIp: function(name, channel, token) {
                this.sendMessage({
                    method: "banUser",
                    params: {
                        channel: channel,
                        name: name,
                        token: token,
                        banIP: !0
                    }
                })
            },
            unbanUserIp: function(name, channel, token) {
                this.sendMessage({
                    method: "unbanUser",
                    params: {
                        channel: channel,
                        name: name,
                        token: token
                    }
                })
            },
            partChannel: function(name, channel) {
                this.sendMessage({
                    method: "partChannel",
                    params: {
                        channel: channel,
                        name: name
                    }
                }), this.disconnect()
            },
            createPoll: function(question, choices, channel, subonly, followonly) {
                this.sendMessage({
                    method: "createPoll",
                    params: {
                        channel: channel,
                        question: question,
                        choices: choices,
                        subscriberOnly: subonly,
                        followerOnly: followonly,
                        start_time: new Date,
                        nameColor: "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.nameColor") ? amplify.store("chat.chatOptions.nameColor") : this.randomColor()
                    }
                })
            },
            endPoll: function(channel, token) {
                this.sendMessage({
                    method: "endPoll",
                    params: {
                        channel: channel,
                        token: token
                    }
                })
            },
            pollStatus: function(channel, token) {
                this.sendMessage({
                    method: "pollStatus",
                    params: {
                        channel: channel,
                        token: token
                    }
                })
            },
            votePoll: function(name, index, channel, token) {
                this.sendMessage({
                    method: "votePoll",
                    params: {
                        name: name,
                        channel: channel,
                        choice: index,
                        token: token
                    }
                })
            },
            startPoll: function(channel, token) {
                this.sendMessage({
                    method: "startPoll",
                    params: {
                        channel: channel,
                        token: token
                    }
                })
            },
            pausePoll: function(channel, token) {
                this.sendMessage({
                    method: "pausePoll",
                    params: {
                        channel: channel,
                        token: token
                    }
                })
            },
            createRaffle: function(question, choices, channel, price, subonly, followonly) {
                this.sendMessage({
                    method: "createRaffle",
                    params: {
                        channel: channel,
                        question: question,
                        prize: price,
                        choices: choices,
                        subscriberOnly: subonly,
                        followerOnly: followonly,
                        start_time: new Date,
                        nameColor: "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.nameColor") ? amplify.store("chat.chatOptions.nameColor") : this.randomColor()
                    }
                })
            },
            endRaffle: function(channel) {
                this.sendMessage({
                    method: "endRaffle",
                    params: {
                        channel: channel
                    }
                })
            },
            startRaffle: function(channel) {
                this.sendMessage({
                    method: "startRaffle",
                    params: {
                        channel: channel
                    }
                })
            },
            pauseRaffle: function(channel) {
                this.sendMessage({
                    method: "pauseRaffle",
                    params: {
                        channel: channel
                    }
                })
            },
            voteRaffle: function(name, index, channel) {
                this.sendMessage({
                    method: "voteRaffle",
                    params: {
                        name: name,
                        channel: channel,
                        choice: index
                    }
                })
            },
            winnerRaffle: function(channel, index) {
                this.sendMessage({
                    method: "winnerRaffle",
                    params: {
                        channel: channel,
                        answer: index
                    }
                })
            },
            deleteRaffle: function(channel) {
                this.sendMessage({
                    method: "cleanupRaffle",
                    params: {
                        channel: channel
                    }
                })
            },
            hideRaffle: function(channel) {
                this.sendMessage({
                    method: "hideRaffle",
                    params: {
                        channel: channel
                    }
                })
            },
            setMotd: function(channel, msg, name) {
                this.sendMessage({
                    method: "motdMsg",
                    params: {
                        channel: channel,
                        name: name,
                        nameColor: "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.nameColor") ? amplify.store("chat.chatOptions.nameColor") : this.randomColor(),
                        text: msg,
                        time: new Date
                    }
                })
            },
            unsetMotd: function(channel, name) {
                this.sendMessage({
                    method: "motdMsg",
                    params: {
                        channel: channel,
                        name: name,
                        nameColor: "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.nameColor") ? amplify.store("chat.chatOptions.nameColor") : this.randomColor(),
                        text: "",
                        time: new Date
                    }
                })
            },
            setSlowMode: function(channel, seconds) {
                this.sendMessage({
                    method: "slowMode",
                    params: {
                        channel: channel,
                        time: seconds
                    }
                })
            },
            setSubscriberMode: function(channel) {
                this.sendMessage({
                    method: "slowMode",
                    params: {
                        channel: channel,
                        subscriber: !0,
                        rate: 0
                    }
                })
            },
            sendMessage: function(event) {
                this.conn && this.conn.emit("message", event)
            },
            colorTable: ["FFFFFF", "D45236", "D35635", "D35C33", "D36132", "D36730", "D26E2F", "D0782C", "CF7E2B", "CE8328", "CC8A27", "CA9024", "C89623", "C59D22", "C1A61F", "BDA91E", "B9AD1E", "B5B11E", "B2B41E", "ADB61E", "A7B71E", "A0B91F", "9ABB21", "94BB22", "8DBD23", "86BD25", "80BE26", "79BE29", "70BE2B", "65BE2E", "5BBE31", "53BE34", "4ABF39", "42BF3D", "39BF42", "31BE46", "26BE50", "1FBD54", "1BBD5A", "17BD60", "13BD67", "10BC6D", "0EBC73", "0CBC7C", "0CBC82", "0CBC87", "0CBC8D", "0EBC90", "0EBA94", "10BB9A", "13BA9F", "15B9A2", "18B7A7", "16B8A6", "19B7AB", "1CB4AD", "1DB3B1", "21AFB6", "23AEB9", "26AABB", "29A8BE", "2CA6C1", "2EA3C3", "319EC6", "3599C9", "3894CB", "3B91CC", "3D8ECE", "408ACF", "4287D0", "4484D1", "4880D2", "4A7DD2", "4C7AD3", "5077D4", "5274D4", "5572D5", "5770D5", "586DD4", "5E6AD4", "6166D4", "6465D3", "6662D2", "6B5FD1", "6E5DD0", "7159CE", "7756CB", "7C53C9", "8051C7", "854EC5", "8A4BC2", "8E49C0", "9347BD", "9943BA", "9D41B7", "A23FB4", "A63CB2", "A93BAF", "AE39AE", "B038AC"],
            randomColor: function() {
                var color = this.colorTable[Math.floor(Math.random() * this.colorTable.length)];
                return "function" == typeof amplify.store && amplify.store("chat.chatOptions.nameColor", color), color
            }
        }
    }), app.factory("ChatSettings", ["$resource", "appSettings", "$rootScope", function($resource, appSettings, $rootScope) {
        if (void 0 === $rootScope.session) var params = {};
        else var params = {
            authToken: $rootScope.session.authToken
        };
        var resource = $resource(appSettings.apiUri + "/chat/settings/:channel", {
            channel: "@channel"
        }, {
            get: {
                method: "GET",
                params: params,
                isArray: !1
            },
            set: {
                method: "POST",
                params: params,
                isArray: !1
            }
        });
        return resource
    }]), app.service("CountryService", ["$q", "GeoIp", function($q, GeoIp) {
        var service = {};
        service.addCountry = function(country) {
            countries.push(country)
        }, service.getCountryCode = function(country_name) {
            for (var i = 0; i < countries.length; i++)
                if (countries[i].name == country_name) return countries[i].code
        }, service.getCountryName = function(country_code) {
            for (var i = 0; i < countries.length; i++)
                if (countries[i].code == country_code) return countries[i].name;
            return "Unknown"
        }, service.getCountries = function() {
            function doit() {
                var deferred = $q.defer();
                return GeoIp.get({}, function(ip) {
                    ip.country_code && countries.unshift({
                        code: ip.country_code,
                        name: ip.country_name
                    });
                    for (var i = 0; i < countries.length; i++) {
                        var country = {};
                        country.id = countries[i].code, country.text = countries[i].name, countriesnew.push(country)
                    }
                    deferred.resolve(countriesnew)
                }, function() {
                    deferred.resolve(countries)
                }), deferred.promise
            }
            var countriesnew = [],
                promise = doit();
            return promise
        };
        var countries = [{
            code: "AF",
            name: "Afghanistan"
        }, {
            code: "AX",
            name: "Aland Islands"
        }, {
            code: "AL",
            name: "Albania"
        }, {
            code: "DZ",
            name: "Algeria"
        }, {
            code: "AS",
            name: "American Samoa"
        }, {
            code: "AD",
            name: "Andorra"
        }, {
            code: "AO",
            name: "Angola"
        }, {
            code: "AI",
            name: "Anguilla"
        }, {
            code: "AQ",
            name: "Antarctica"
        }, {
            code: "AG",
            name: "Antigua and Barbuda"
        }, {
            code: "AR",
            name: "Argentina"
        }, {
            code: "AM",
            name: "Armenia"
        }, {
            code: "AW",
            name: "Aruba"
        }, {
            code: "AU",
            name: "Australia"
        }, {
            code: "AT",
            name: "Austria"
        }, {
            code: "AZ",
            name: "Azerbaijan"
        }, {
            code: "BS",
            name: "Bahamas"
        }, {
            code: "BH",
            name: "Bahrain"
        }, {
            code: "BD",
            name: "Bangladesh"
        }, {
            code: "BB",
            name: "Barbados"
        }, {
            code: "BY",
            name: "Belarus"
        }, {
            code: "BE",
            name: "Belgium"
        }, {
            code: "BZ",
            name: "Belize"
        }, {
            code: "BJ",
            name: "Benin"
        }, {
            code: "BM",
            name: "Bermuda"
        }, {
            code: "BT",
            name: "Bhutan"
        }, {
            code: "BO",
            name: "Bolivia"
        }, {
            code: "BA",
            name: "Bosnia and Herzegovina"
        }, {
            code: "BW",
            name: "Botswana"
        }, {
            code: "BV",
            name: "Bouvet Island"
        }, {
            code: "BR",
            name: "Brazil"
        }, {
            code: "IO",
            name: "British Indian Ocean Territory"
        }, {
            code: "BN",
            name: "Brunei Darussalam"
        }, {
            code: "BG",
            name: "Bulgaria"
        }, {
            code: "BF",
            name: "Burkina Faso"
        }, {
            code: "BI",
            name: "Burundi"
        }, {
            code: "KH",
            name: "Cambodia"
        }, {
            code: "CM",
            name: "Cameroon"
        }, {
            code: "CA",
            name: "Canada"
        }, {
            code: "CV",
            name: "Cape Verde"
        }, {
            code: "KY",
            name: "Cayman Islands"
        }, {
            code: "CF",
            name: "Central African Republic"
        }, {
            code: "A1",
            name: "Anonymous Proxy"
        }, {
            code: "O1",
            name: "Other Country"
        }, {
            code: "A2",
            name: "Satellite Provider"
        }, {
            code: "CW",
            name: "Curacao"
        }, {
            code: "EU",
            name: "Europe"
        }, {
            code: "TD",
            name: "Chad"
        }, {
            code: "CL",
            name: "Chile"
        }, {
            code: "CN",
            name: "China"
        }, {
            code: "CX",
            name: "Christmas Island"
        }, {
            code: "CC",
            name: "Cocos (Keeling) Islands"
        }, {
            code: "CO",
            name: "Colombia"
        }, {
            code: "KM",
            name: "Comoros"
        }, {
            code: "CG",
            name: "Congo"
        }, {
            code: "CD",
            name: "Congo, The Democratic Republic of the"
        }, {
            code: "CK",
            name: "Cook Islands"
        }, {
            code: "CR",
            name: "Costa Rica"
        }, {
            code: "CI",
            name: "CÃ´te d'Ivoire"
        }, {
            code: "HR",
            name: "Croatia"
        }, {
            code: "CU",
            name: "Cuba"
        }, {
            code: "CY",
            name: "Cyprus"
        }, {
            code: "CZ",
            name: "Czech Republic"
        }, {
            code: "DK",
            name: "Denmark"
        }, {
            code: "DJ",
            name: "Djibouti"
        }, {
            code: "DM",
            name: "Dominica"
        }, {
            code: "DO",
            name: "Dominican Republic"
        }, {
            code: "EC",
            name: "Ecuador"
        }, {
            code: "EG",
            name: "Egypt"
        }, {
            code: "SV",
            name: "El Salvador"
        }, {
            code: "GQ",
            name: "Equatorial Guinea"
        }, {
            code: "ER",
            name: "Eritrea"
        }, {
            code: "EE",
            name: "Estonia"
        }, {
            code: "ET",
            name: "Ethiopia"
        }, {
            code: "FK",
            name: "Falkland Islands (Malvinas)"
        }, {
            code: "FO",
            name: "Faroe Islands"
        }, {
            code: "FJ",
            name: "Fiji"
        }, {
            code: "FI",
            name: "Finland"
        }, {
            code: "FR",
            name: "France"
        }, {
            code: "GF",
            name: "French Guiana"
        }, {
            code: "PF",
            name: "French Polynesia"
        }, {
            code: "TF",
            name: "French Southern Territories"
        }, {
            code: "GA",
            name: "Gabon"
        }, {
            code: "GM",
            name: "Gambia"
        }, {
            code: "GE",
            name: "Georgia"
        }, {
            code: "DE",
            name: "Germany"
        }, {
            code: "GH",
            name: "Ghana"
        }, {
            code: "GI",
            name: "Gibraltar"
        }, {
            code: "GR",
            name: "Greece"
        }, {
            code: "GL",
            name: "Greenland"
        }, {
            code: "GD",
            name: "Grenada"
        }, {
            code: "GP",
            name: "Guadeloupe"
        }, {
            code: "GU",
            name: "Guam"
        }, {
            code: "GT",
            name: "Guatemala"
        }, {
            code: "GG",
            name: "Guernsey"
        }, {
            code: "GN",
            name: "Guinea"
        }, {
            code: "GW",
            name: "Guinea-Bissau"
        }, {
            code: "GY",
            name: "Guyana"
        }, {
            code: "HT",
            name: "Haiti"
        }, {
            code: "HM",
            name: "Heard Island and McDonald Islands"
        }, {
            code: "VA",
            name: "Holy See (Vatican City State)"
        }, {
            code: "HN",
            name: "Honduras"
        }, {
            code: "HK",
            name: "Hong Kong"
        }, {
            code: "HU",
            name: "Hungary"
        }, {
            code: "IS",
            name: "Iceland"
        }, {
            code: "IN",
            name: "India"
        }, {
            code: "ID",
            name: "Indonesia"
        }, {
            code: "IR",
            name: "Iran, Islamic Republic of"
        }, {
            code: "IQ",
            name: "Iraq"
        }, {
            code: "IE",
            name: "Ireland"
        }, {
            code: "IM",
            name: "Isle of Man"
        }, {
            code: "IL",
            name: "Israel"
        }, {
            code: "IT",
            name: "Italy"
        }, {
            code: "JM",
            name: "Jamaica"
        }, {
            code: "JP",
            name: "Japan"
        }, {
            code: "JE",
            name: "Jersey"
        }, {
            code: "JO",
            name: "Jordan"
        }, {
            code: "KZ",
            name: "Kazakhstan"
        }, {
            code: "KE",
            name: "Kenya"
        }, {
            code: "KI",
            name: "Kiribati"
        }, {
            code: "KP",
            name: "Korea, Democratic People's Republic of"
        }, {
            code: "KR",
            name: "Korea, Republic of"
        }, {
            code: "KW",
            name: "Kuwait"
        }, {
            code: "KG",
            name: "Kyrgyzstan"
        }, {
            code: "LA",
            name: "Lao People's Democratic Republic"
        }, {
            code: "LV",
            name: "Latvia"
        }, {
            code: "LB",
            name: "Lebanon"
        }, {
            code: "LS",
            name: "Lesotho"
        }, {
            code: "LR",
            name: "Liberia"
        }, {
            code: "LY",
            name: "Libyan Arab Jamahiriya"
        }, {
            code: "LI",
            name: "Liechtenstein"
        }, {
            code: "LT",
            name: "Lithuania"
        }, {
            code: "LU",
            name: "Luxembourg"
        }, {
            code: "MO",
            name: "Macao"
        }, {
            code: "MK",
            name: "Macedonia, The Former Yugoslav Republic of"
        }, {
            code: "MG",
            name: "Madagascar"
        }, {
            code: "MW",
            name: "Malawi"
        }, {
            code: "MY",
            name: "Malaysia"
        }, {
            code: "MV",
            name: "Maldives"
        }, {
            code: "ML",
            name: "Mali"
        }, {
            code: "MT",
            name: "Malta"
        }, {
            code: "MH",
            name: "Marshall Islands"
        }, {
            code: "MQ",
            name: "Martinique"
        }, {
            code: "MR",
            name: "Mauritania"
        }, {
            code: "MU",
            name: "Mauritius"
        }, {
            code: "YT",
            name: "Mayotte"
        }, {
            code: "MX",
            name: "Mexico"
        }, {
            code: "FM",
            name: "Micronesia, Federated States of"
        }, {
            code: "MD",
            name: "Moldova"
        }, {
            code: "MC",
            name: "Monaco"
        }, {
            code: "MN",
            name: "Mongolia"
        }, {
            code: "ME",
            name: "Montenegro"
        }, {
            code: "MS",
            name: "Montserrat"
        }, {
            code: "MA",
            name: "Morocco"
        }, {
            code: "MZ",
            name: "Mozambique"
        }, {
            code: "MM",
            name: "Myanmar"
        }, {
            code: "NA",
            name: "Namibia"
        }, {
            code: "NR",
            name: "Nauru"
        }, {
            code: "NP",
            name: "Nepal"
        }, {
            code: "NL",
            name: "Netherlands"
        }, {
            code: "AN",
            name: "Netherlands Antilles"
        }, {
            code: "NC",
            name: "New Caledonia"
        }, {
            code: "NZ",
            name: "New Zealand"
        }, {
            code: "NI",
            name: "Nicaragua"
        }, {
            code: "NE",
            name: "Niger"
        }, {
            code: "NG",
            name: "Nigeria"
        }, {
            code: "NU",
            name: "Niue"
        }, {
            code: "NF",
            name: "Norfolk Island"
        }, {
            code: "MP",
            name: "Northern Mariana Islands"
        }, {
            code: "NO",
            name: "Norway"
        }, {
            code: "OM",
            name: "Oman"
        }, {
            code: "PK",
            name: "Pakistan"
        }, {
            code: "PW",
            name: "Palau"
        }, {
            code: "PS",
            name: "Palestinian Territory, Occupied"
        }, {
            code: "PA",
            name: "Panama"
        }, {
            code: "PG",
            name: "Papua New Guinea"
        }, {
            code: "PY",
            name: "Paraguay"
        }, {
            code: "PE",
            name: "Peru"
        }, {
            code: "PH",
            name: "Philippines"
        }, {
            code: "PN",
            name: "Pitcairn"
        }, {
            code: "PL",
            name: "Poland"
        }, {
            code: "PT",
            name: "Portugal"
        }, {
            code: "PR",
            name: "Puerto Rico"
        }, {
            code: "QA",
            name: "Qatar"
        }, {
            code: "RE",
            name: "RÃ©union"
        }, {
            code: "RO",
            name: "Romania"
        }, {
            code: "RU",
            name: "Russian Federation"
        }, {
            code: "RW",
            name: "Rwanda"
        }, {
            code: "BL",
            name: "Saint BarthÃ©lemy"
        }, {
            code: "SH",
            name: "Saint Helena"
        }, {
            code: "KN",
            name: "Saint Kitts and Nevis"
        }, {
            code: "LC",
            name: "Saint Lucia"
        }, {
            code: "MF",
            name: "Saint Martin"
        }, {
            code: "PM",
            name: "Saint Pierre and Miquelon"
        }, {
            code: "VC",
            name: "Saint Vincent and the Grenadines"
        }, {
            code: "WS",
            name: "Samoa"
        }, {
            code: "SM",
            name: "San Marino"
        }, {
            code: "ST",
            name: "Sao Tome and Principe"
        }, {
            code: "SA",
            name: "Saudi Arabia"
        }, {
            code: "SN",
            name: "Senegal"
        }, {
            code: "RS",
            name: "Serbia"
        }, {
            code: "SC",
            name: "Seychelles"
        }, {
            code: "SL",
            name: "Sierra Leone"
        }, {
            code: "SG",
            name: "Singapore"
        }, {
            code: "SK",
            name: "Slovakia"
        }, {
            code: "SI",
            name: "Slovenia"
        }, {
            code: "SB",
            name: "Solomon Islands"
        }, {
            code: "SO",
            name: "Somalia"
        }, {
            code: "ZA",
            name: "South Africa"
        }, {
            code: "GS",
            name: "South Georgia and the South Sandwich Islands"
        }, {
            code: "ES",
            name: "Spain"
        }, {
            code: "LK",
            name: "Sri Lanka"
        }, {
            code: "SD",
            name: "Sudan"
        }, {
            code: "SR",
            name: "Suriname"
        }, {
            code: "SJ",
            name: "Svalbard and Jan Mayen"
        }, {
            code: "SZ",
            name: "Swaziland"
        }, {
            code: "SE",
            name: "Sweden"
        }, {
            code: "CH",
            name: "Switzerland"
        }, {
            code: "SY",
            name: "Syrian Arab Republic"
        }, {
            code: "TW",
            name: "Taiwan, Province of China"
        }, {
            code: "TJ",
            name: "Tajikistan"
        }, {
            code: "TZ",
            name: "Tanzania, United Republic of"
        }, {
            code: "TH",
            name: "Thailand"
        }, {
            code: "TL",
            name: "Timor-Leste"
        }, {
            code: "TG",
            name: "Togo"
        }, {
            code: "TK",
            name: "Tokelau"
        }, {
            code: "TO",
            name: "Tonga"
        }, {
            code: "TT",
            name: "Trinidad and Tobago"
        }, {
            code: "TN",
            name: "Tunisia"
        }, {
            code: "TR",
            name: "Turkey"
        }, {
            code: "TM",
            name: "Turkmenistan"
        }, {
            code: "TC",
            name: "Turks and Caicos Islands"
        }, {
            code: "TV",
            name: "Tuvalu"
        }, {
            code: "UG",
            name: "Uganda"
        }, {
            code: "UA",
            name: "Ukraine"
        }, {
            code: "AE",
            name: "United Arab Emirates"
        }, {
            code: "UK",
            name: "United Kingdom"
        }, {
            code: "GB",
            name: "Great Britain"
        }, {
            code: "US",
            name: "United States"
        }, {
            code: "UM",
            name: "United States Minor Outlying Islands"
        }, {
            code: "UY",
            name: "Uruguay"
        }, {
            code: "UZ",
            name: "Uzbekistan"
        }, {
            code: "VU",
            name: "Vanuatu"
        }, {
            code: "VE",
            name: "Venezuela"
        }, {
            code: "VN",
            name: "Viet Nam"
        }, {
            code: "VG",
            name: "Virgin Islands, British"
        }, {
            code: "VI",
            name: "Virgin Islands, U.S."
        }, {
            code: "WF",
            name: "Wallis and Futuna"
        }, {
            code: "EH",
            name: "Western Sahara"
        }, {
            code: "YE",
            name: "Yemen"
        }, {
            code: "ZM",
            name: "Zambia"
        }, {
            code: "ZW",
            name: "Zimbabwe"
        }];
        return service
    }]), app.factory("Coupon", function($rootScope, $resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/coupon", {
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                post: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }), app.service("DisplayService", ["$rootScope", "$window", "$timeout", function($rootScope, $window, $timeout) {
        var _playerState = {
                current: "",
                height: 0,
                width: 0,
                playerMinimized: !1
            },
            _navState = {
                currentTab: "",
                browseCat: "",
                game: "",
                gameObject: {}
            },
            _popoverState = {
                visible: !1,
                mobile: !1
            },
            _deviceSize = {
                isMobile: !1,
                isTablet: !1,
                initial: !0,
                breakPointMobile: 800,
                breakPointTablet: 1023
            },
            _chatOptions = {
                subEnabled: !1,
                chatUser: !1,
                disableImages: !1,
                chatState: !0,
                chatVisible: !0
            },
            _channelOptions = {
                editProfile: !1
            };
        _chatOptions.chatState = "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.chatState") ? amplify.store("chat.chatOptions.chatState") : !0, _chatOptions.chatVisible = "function" == typeof amplify.store && "undefined" != typeof amplify.store("chat.chatOptions.chatVisible") ? amplify.store("chat.chatOptions.chatVisible") : !0, _chatOptions.setChatState = function(chatState) {
            _chatOptions.chatState = chatState, "function" == typeof amplify.store && amplify.store("chat.chatOptions.chatState", chatState)
        }, _chatOptions.setChatVisible = function(chatVisible) {
            _chatOptions.chatVisible = chatVisible, "function" == typeof amplify.store && amplify.store("chat.chatOptions.chatVisible", chatVisible)
        }, _deviceSize.checkSize = function() {
            winWidth = getWidth(), winWidth <= _deviceSize.breakPointMobile ? (!_deviceSize.isMobile || _deviceSize.initial) && (_deviceSize.isMobile = !0, _deviceSize.isTablet = !1, $rootScope.$broadcast("isMobile"), _deviceSize.initial = !1) : winWidth <= _deviceSize.breakPointTablet ? (!_deviceSize.isTablet || _deviceSize.initial) && (_deviceSize.isMobile = !1, _deviceSize.isTablet = !0, $rootScope.$broadcast("isTablet"), _deviceSize.initial = !1) : (_deviceSize.isMobile || _deviceSize.initial) && (_deviceSize.isMobile = !1, _deviceSize.isTablet = !1, $rootScope.$broadcast("isDesktop"), _deviceSize.initial = !1)
        }, _deviceSize.update = function() {
            $timeout(function() {
                _deviceSize.initial = !0, _deviceSize.checkSize()
            }, 0)
        }, _popoverState.destroy = function() {
            _popoverState.visible = !1, $rootScope.$broadcast("PopoverUpdated")
        }, _popoverState.checkSize = function() {
            _popoverState.mobile = getWidth() <= 600 ? !0 : !1
        }, _popoverState.set = function(value) {
            _popoverState.visible != value && (_popoverState.visible = value, $rootScope.$broadcast("PopoverUpdated"))
        }, _popoverState.get = function() {
            return _popoverState.visible
        }, _popoverState.isMobile = function() {
            return _popoverState.checkSize(), _popoverState.mobile
        }, _navState.setTab = function(value) {
            _navState.currentTab = value, $rootScope.$broadcast("navTabUpdated")
        }, _navState.getTab = function() {
            return _navState.currentTab
        }, _navState.setBrowseCat = function(value) {
            _navState.browseCat = value, $rootScope.$broadcast("navBrowseCatUpdated")
        }, _navState.getBrowseCat = function() {
            return _navState.browseCat
        }, _navState.setGameName = function(value) {
            _navState.game = value, $rootScope.$broadcast("navGameUpdated")
        }, _navState.getGameName = function() {
            return _navState.game
        }, _navState.setGameObject = function(value) {
            _navState.gameObject = value, $rootScope.$broadcast("navGameObjectUpdated")
        }, _navState.getGameObject = function() {
            return _navState.gameObject
        }, _playerState.setState = function(value) {
            switch (value) {
                case "minimized":
                    _playerState.current = "minimized";
                    break;
                case "thumbnail":
                    _playerState.current = "thumbnail";
                    break;
                case "spotlight":
                    _playerState.current = "spotlight";
                    break;
                default:
                    _playerState.current = ""
            }
        }, _playerState.getState = function() {
            return _playerState.current
        }, _playerState.setDimensions = function(width, height) {
            _playerState.width = width, _playerState.height = height, $rootScope.$broadcast("PlayerDimensionChanged")
        }, _playerState.getDimensions = function() {
            return _playerState.width
        };
        var timeoutPromise, getWidth = function() {
                return $window.innerWidth
            },
            w = angular.element($window);
        return w.on("resize", function() {
            console.log("resize"), $timeout.cancel(timeoutPromise), timeoutPromise = $timeout(function() {
                _deviceSize.checkSize(), console.log("debounced resize")
            }, 50)
        }), w.bind("click", function() {
            _popoverState.destroy()
        }), $rootScope.$on("$stateChangeStart", function() {
            _popoverState.destroy()
        }), {
            chatOptions: _chatOptions,
            channelOptions: _channelOptions,
            deviceSize: _deviceSize,
            popoverState: _popoverState,
            navState: _navState,
            playerState: _playerState
        }
    }]), app.service("ChatScroller", [function() {
        var _scroller = {
            autoScroll: !0
        };
        return {
            scroller: _scroller
        }
    }]), app.service("LogScroller", [function() {
        var _scroller = {
            autoScroll: !0
        };
        return {
            scroller: _scroller
        }
    }]), app.factory("Editors", ["$rootScope", "$resource", "$translate", "appSettings", function($rootScope, $resource, $translate, appSettings) {
        if (void 0 === $rootScope.session) var params = {};
        else var params = {
            authToken: $rootScope.session.authToken
        };
        var resource = $resource(appSettings.apiUri + "/editors/:user_name", {
            user_name: "@user_name",
            authToken: "@authToken"
        }, {
            add: {
                method: "POST",
                params: params,
                isArray: !1
            },
            remove: {
                method: "DELETE",
                params: params,
                isArray: !1
            },
            list: {
                method: "GET",
                params: params,
                isArray: !1
            }
        });
        return resource
    }]), app.factory("Editor", ["$rootScope", "$resource", "$translate", "appSettings", function($rootScope, $resource, $translate, appSettings) {
        if (void 0 === $rootScope.session) var params = {};
        else var params = {
            authToken: $rootScope.session.authToken
        };
        var resource = $resource(appSettings.apiUri + "/editor/:user_name", {
            user_name: "@user_name",
            authToken: "@authToken"
        }, {
            list: {
                method: "GET",
                params: params,
                isArray: !1
            }
        });
        return resource
    }]), app.factory("MediaFeatured", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/mediafeatured", {}, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                put: {
                    method: "POST",
                    params: params,
                    isArray: !1
                },
                "delete": {
                    method: "DELETE",
                    params: params,
                    isArray: !1
                },
                check: {
                    method: "GET",
                    params: {
                        media_id: "@media_id"
                    },
                    url: appSettings.apiUri + "/mediafeatured/:media_id",
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Follow", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/follow", {
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: {},
                    isArray: !1
                },
                add: {
                    method: "POST",
                    params: params,
                    isArray: !1
                },
                "delete": {
                    method: "DELETE",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Following", ["$resource", "appSettings", function($resource, appSettings) {
        var resource = $resource(appSettings.apiUri + "/following/:type/:follow_id", {
            type: "@type",
            follow_id: "@follow_id",
            authToken: "@authToken"
        }, {
            get: {
                method: "GET",
                params: {},
                isArray: !1
            },
            getAll: {
                method: "GET",
                params: {},
                isArray: !1
            },
            update: {
                method: "PUT",
                params: {},
                isArray: !1
            }
        });
        return resource
    }]), app.factory("FollowerList", ["$resource", "appSettings", function($resource, appSettings) {
        var resource = $resource(appSettings.apiUri + "/followers/user/:user_name", {
            user_name: "@user_name",
            authToken: "@authToken"
        }, {
            get: {
                method: "GET",
                params: {},
                isArray: !1
            }
        });
        return resource
    }]), app.factory("FollowingList", ["$resource", "appSettings", function($resource, appSettings) {
        var resource = $resource(appSettings.apiUri + "/following/user", {
            user_name: "@user_name"
        }, {
            get: {
                method: "GET",
                params: {},
                isArray: !1
            }
        });
        return resource
    }]), app.factory("Hosters", ["$rootScope", "$resource", "$translate", "appSettings", function($rootScope, $resource, $translate, appSettings) {
        if (void 0 === $rootScope.session) var params = {};
        else var params = {
            authToken: $rootScope.session.authToken
        };
        var resource = $resource(appSettings.apiUri + "/hosters/:user_name", {
            user_name: "@user_name",
            authToken: "@authToken"
        }, {
            get: {
                method: "GET",
                params: params,
                isArray: !1
            }
        });
        return resource
    }]), app.factory("Media", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/media/:media_type/:media_name/:list", {
                media_name: "@media_name",
                media_type: "@media_type",
                list: "@list",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: {},
                    isArray: !1
                },
                create: {
                    method: "POST",
                    params: params,
                    isArray: !1
                },
                update: {
                    method: "PUT",
                    params: params,
                    isArray: !1
                },
                remove: {
                    method: "DELETE",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("MediaStore", ["$rootScope", "Media", "$q", function($rootScope, User, $q) {
        var resource = {},
            mediaStore = {};
        return resource.get = function(params, success, error) {
            paramString = JSON.stringify(params).hashCode;
            var deferred = $q.defer(),
                promise = deferred.promise;
            return "undefined" != typeof mediaStore[paramString] && 1 != params.nocache ? mediaStore[paramString] : (mediaStore[paramString] = promise, User.get(params, function(response) {
                "function" == typeof success && success(response), deferred.resolve(response)
            }, function(response) {
                "function" == typeof error && error(response), deferred.reject(response)
            }), promise)
        }, resource
    }]), String.prototype.hashCode = function() {
        var i, chr, len, hash = 0;
        if (0 == this.length) return hash;
        for (i = 0, len = this.length; len > i; i++) chr = this.charCodeAt(i), hash = (hash << 5) - hash + chr, hash |= 0;
        return hash
    }, app.factory("PlaybackService", [function() {
        var _data = {
                media_type: "live",
                media_id: 0
            },
            _methods = {
                setMediaId: function(media_id, media_type) {
                    _data.media_type = "undefined" != typeof media_type ? media_type : "live", _data.media_id = media_id
                },
                getMediaId: function() {
                    return _data.media_id
                },
                getMediaType: function() {
                    return _data.media_type
                }
            };
        return _methods
    }]), app.factory("Fluentd", ["$rootScope", "$resource", "appSettings", function($rootScope, $resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.fluentdUri + "/", {}, {
                post: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("Revenues", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/revenues/:type/:user", {
                type: "@type",
                user: "@user"
            }, {
                get: {
                    method: "GET",
                    params: params
                }
            });
        return resource
    }]), app.factory("RevenuePlans", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/revenueplans/:type/:id", {
                type: "@type",
                id: "@id"
            }, {
                get: {
                    method: "GET",
                    params: params
                },
                add: {
                    method: "POST",
                    params: params
                },
                "delete": {
                    method: "DELETE",
                    params: params
                }
            });
        return resource
    }]), app.factory("FacebookPages", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/facebook/pages", {
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                save: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("FacebookAccount", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/facebook", {
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                post: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("FacebookPost", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/facebook/post", {
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                post: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("TwitterAccount", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/social/twitter", {
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                },
                verify: {
                    method: "GET",
                    params: params,
                    isArray: !1,
                    url: appSettings.apiUri + "/twitter/verify"
                }
            });
        return resource
    }]), app.factory("YoutubeAccount", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/social/youtube", {
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("TwitterPost", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/twitter/post", {
                user_name: "@user_name",
                authToken: "@authToken"
            }, {
                post: {
                    method: "POST",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.factory("StreamStats", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {};
        return $resource(appSettings.apiUri + "/streamstats/:channel/:startDate/:endDate/:range", {
            authToken: "@authToken",
            channel: "@channel",
            startDate: "@startDate",
            endDate: "@endDate",
            range: "@range"
        }, {
            get: {
                method: "GET",
                params: params,
                isArray: !1
            }
        })
    }]), app.factory("StreamOverallStats", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {};
        return $resource(appSettings.apiUri + "/streamoverallstats/:channel/:startDate/:endDate", {
            authToken: "@authToken",
            channel: "@channel",
            startDate: "@startDate",
            endDate: "@endDate"
        }, {
            get: {
                method: "GET",
                params: params,
                isArray: !1
            }
        })
    }]), app.factory("SubPlanAdmin", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/subadmin/plan/:type/:id", {
                type: "@type",
                id: "@id"
            }, {
                get: {
                    method: "GET",
                    params: params
                },
                add: {
                    method: "POST",
                    params: params
                },
                update: {
                    method: "PUT",
                    params: params
                }
            });
        return resource
    }]), app.factory("Ext1Voucher", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/ext1/:channel/:user_name", {
                channel: "@channel",
                user_name: "@user_name"
            }, {
                get: {
                    method: "GET",
                    params: params
                },
                enable: {
                    method: "POST",
                    params: params
                }
            });
        return resource
    }]), app.factory("Ext1Status", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/ext1status/:channel", {
                channel: "@channel"
            }, {
                get: {
                    method: "GET",
                    params: params
                },
                update: {
                    method: "POST",
                    params: params
                }
            });
        return resource
    }]), app.factory("User", ["$rootScope", "$resource", "$translate", "appSettings", function($rootScope, $resource, $translate, appSettings) {
        if (void 0 === $rootScope.session) var params = {};
        else var params = {
            authToken: $rootScope.session.authToken
        };
        var resource = $resource(appSettings.apiUri + "/user/:user_name", {
            user_name: "@user_name",
            authToken: "@authToken"
        }, {
            get: {
                method: "GET",
                params: params,
                isArray: !1
            },
            update: {
                method: "PUT",
                params: params
            },
            signup: {
                method: "POST",
                params: {},
                isArray: !1,
                url: appSettings.apiUriNonSecure + "/user"
            },
            setDefaultTeam: {
                method: "POST",
                params: {},
                isArray: !1,
                url: appSettings.apiUri + "/user/:user_name/team/default"
            }
        });
        return resource
    }]), app.factory("UserStore", ["$rootScope", "User", "$q", function($rootScope, User, $q) {
        var resource = {},
            users = {};
        return resource.get = function(name) {
            var deferred = $q.defer(),
                promise = deferred.promise;
            return "undefined" != typeof users[name] ? deferred.resolve(users[name]) : User.get({
                user_name: name
            }, function(response) {
                response.user_id ? (users[name] = response, deferred.resolve(response)) : deferred.reject(response)
            }, function(response) {
                deferred.reject(response)
            }), promise
        }, resource
    }]), app.service("VideoEditor", [function() {
        var res = {
            editor: {},
            showEditor: !1
        };
        return res
    }]), app.service("ViewerManager", function() {
        var callbacks = {};
        return {
            init: function(url) {
                var self = this;
                try {
                    this.conn = "function" == typeof MozWebSocket ? new MozWebSocket(url) : new WebSocket(url)
                } catch (e) {
                    return console.log(e), !1
                }
                this.conn.onmessage = function(evt) {
                    dispatch("message", evt)
                }, this.conn.onclose = function() {
                    this.conn = !1, dispatch("close", null)
                }, this.conn.onopen = function() {
                    dispatch("open", null), self.refresh && self.refresh()
                }, this.conn.onerror = function() {
                    dispatch("error", null)
                };
                var dispatch = function(event_name, message) {
                    if (self.refresh && self.refresh(), "message" === event_name) switch ((json = angular.fromJson(message.data)) ? (method = json.method, params = json.params) : (method = message.method, params = message.params), method) {
                        case "chatMsg":
                            event_name = "chatMessage";
                            break;
                        case "infoMsg":
                            event_name = "chatMessage"
                    }
                    var chain = callbacks[event_name];
                    "undefined" != typeof chain && 0 != chain.length && (console.log(event_name), chain[0](message))
                };
                return !0
            },
            disconnect: function() {
                this.conn && (this.conn.disconnect(), this.conn = !1)
            },
            bind: function(event_name, callback) {
                return callbacks[event_name] = callbacks[event_name] || [], callbacks[event_name].push(callback), this
            },
            unbind: function(event_name, callback) {
                var chain = callbacks[event_name];
                if ("undefined" != typeof chain)
                    for (var i = 0; i < chain.length; i++)
                        if (chain[i] === callback) {
                            chain.splice(i, 1);
                            break
                        }
            },
            chatMsg: function(name, channel, msgTxt, nameColor) {
                msgTxt.length > 0 && this.sendMessage({
                    method: "chatMsg",
                    params: {
                        channel: channel,
                        name: name,
                        nameColor: nameColor,
                        text: msgTxt
                    }
                })
            },
            joinChannel: function(name, channel, token, isAdmin) {
                console.log("joinChannel"), this.sendMessage({
                    method: "joinChannel",
                    params: {
                        channel: channel,
                        name: name,
                        token: token,
                        isAdmin: isAdmin
                    }
                })
            },
            partChannel: function(name, channel) {
                this.sendMessage({
                    method: "partChannel",
                    params: {
                        channel: channel,
                        name: name
                    }
                })
            },
            sendMessage: function(event) {
                this.conn && this.conn.send(JSON.stringify(event))
            }
        }
    }), app.factory("MediaViews", ["$resource", "appSettings", function($resource, appSettings) {
        var resource = $resource(appSettings.apiUri + "/media/views/:channel", {
            channel: "@channel"
        }, {
            get: {
                method: "GET",
                params: {},
                isArray: !1
            }
        });
        return resource
    }]), app.factory("Xsolla", ["$resource", "appSettings", function($resource, appSettings) {
        var params = {},
            resource = $resource(appSettings.apiUri + "/xsolla", {
                authToken: "@authToken"
            }, {
                get: {
                    method: "GET",
                    params: {},
                    isArray: !1
                },
                create: {
                    method: "POST",
                    params: params,
                    isArray: !1
                },
                "delete": {
                    method: "DELETE",
                    params: params,
                    isArray: !1
                }
            });
        return resource
    }]), app.directive("googleplus", function() {
        return {
            restrict: "E",
            template: "<span></span>",
            replace: !0,
            link: function(scope, element, attrs) {
                attrs.$set("class", "g-signin"), attrs.$set("data-clientid", attrs.clientid + ".apps.googleusercontent.com");
                var defaults = {
                    callback: "signinCallback",
                    cookiepolicy: "single_host_origin",
                    scope: "https://gdata.youtube.com",
                    width: "wide",
                    isSignedOut: !0
                };
                signinCallback = function(data) {
                        scope.googleParams = {
                            access_token: data.access_token,
                            refresh_token: data.refresh_token,
                            token_type: "Bearer",
                            expires_in: data.expires_in,
                            id_token: data.id_token,
                            created: data.issued_at,
                            access_type: "offline"
                        }, scope.googleLoggedIn = data.access_token ? !0 : !1, scope.$apply()
                    }, angular.forEach(Object.getOwnPropertyNames(defaults), function(propName) {
                        attrs.hasOwnProperty("data-" + propName) || attrs.$set("data-" + propName, defaults[propName])
                    }),
                    function() {
                        var po = document.createElement("script");
                        po.type = "text/javascript", po.async = !0, po.src = "https://apis.google.com/js/client:plusone.js";
                        var s = document.getElementsByTagName("script")[0];
                        s.parentNode.insertBefore(po, s)
                    }()
            },
            controller: function($rootScope, $scope) {
                $scope.$watch("googleLoggedIn", function() {
                    $rootScope.googleParams = $scope.googleParams, $rootScope.googleLoggedIn = $scope.googleLoggedIn
                })
            }
        }
    }), ! function(a) {
        "use strict";
        a.module("vcRecaptcha", [])
    }(angular),
    function(a, b) {
        "use strict";
        var c = a.module("vcRecaptcha");
        c.service("vcRecaptchaService", ["$timeout", "$log", function(a) {
            var c;
            return {
                create: function(a, d, e, f) {
                    c = e, f.callback = e, b.create(d, a, f)
                },
                reload: function(d) {
                    b.reload(d && "t"), a(c, 1e3)
                },
                data: function() {
                    return {
                        response: b.get_response(),
                        challenge: b.get_challenge()
                    }
                },
                destroy: function() {
                    b.destroy()
                }
            }
        }])
    }(angular, Recaptcha),
    function(a, b) {
        "use strict";
        var c = a.module("vcRecaptcha");
        c.directive("vcRecaptcha", ["$log", "$timeout", "vcRecaptchaService", function(a, c, d) {
            return {
                restrict: "A",
                require: "?ngModel",
                link: function(a, e, f, g) {
                    if (!f.hasOwnProperty("key") || 40 !== f.key.length) throw 'You need to set the "key" attribute to your public reCaptcha key. If you don\'t have a key, please get one from https://www.google.com/recaptcha/admin/create';
                    var h, i, j = function() {
                            g && g.$setViewValue({
                                response: h.val(),
                                challenge: i.val()
                            })
                        },
                        k = function() {
                            var a = e.find("input");
                            i = angular.element(a[0]), h = angular.element(a[1]), j()
                        },
                        l = function() {
                            k(), h.bind("keyup", function() {
                                a.$apply(j)
                            }), g && (g.$render = function() {
                                h.val(g.$viewValue.response), i.val(g.$viewValue.challenge)
                            }), e.bind("click", function() {
                                c(function() {
                                    a.$apply(k)
                                }, 1e3)
                            })
                        };
                    b.reload, d.create(e[0], f.key, l, {
                        tabindex: f.tabindex,
                        theme: f.theme,
                        lang: f.lang || null
                    })
                }
            }
        }])
    }(angular, Recaptcha),
    function(amplify, undefined) {
        function createFromStorageInterface(storageType, storage) {
            store.addType(storageType, function(key, value, options) {
                var storedValue, parsed, i, remove, ret = value,
                    now = (new Date).getTime();
                if (!key) {
                    ret = {}, remove = [], i = 0;
                    try {
                        for (key = storage.length; key = storage.key(i++);) rprefix.test(key) && (parsed = JSON.parse(storage.getItem(key)), parsed.expires && parsed.expires <= now ? remove.push(key) : ret[key.replace(rprefix, "")] = parsed.data);
                        for (; key = remove.pop();) storage.removeItem(key)
                    } catch (error) {}
                    return ret
                }
                if (key = "__amplify__" + key, value === undefined) {
                    if (storedValue = storage.getItem(key), parsed = storedValue ? JSON.parse(storedValue) : {
                            expires: -1
                        }, !(parsed.expires && parsed.expires <= now)) return parsed.data;
                    storage.removeItem(key)
                } else if (null === value) storage.removeItem(key);
                else {
                    parsed = JSON.stringify({
                        data: value,
                        expires: options.expires ? now + options.expires : null
                    });
                    try {
                        storage.setItem(key, parsed)
                    } catch (error) {
                        store[storageType]();
                        try {
                            storage.setItem(key, parsed)
                        } catch (error) {
                            throw store.error()
                        }
                    }
                }
                return ret
            })
        }
        var store = amplify.store = function(key, value, options) {
            var type = store.type;
            return options && options.type && options.type in store.types && (type = options.type), store.types[type](key, value, options || {})
        };
        store.types = {}, store.type = null, store.addType = function(type, storage) {
            store.type || (store.type = type), store.types[type] = storage, store[type] = function(key, value, options) {
                return options = options || {}, options.type = type, store(key, value, options)
            }
        }, store.error = function() {
            return "amplify.store quota exceeded"
        };
        var rprefix = /^__amplify__/;
        for (var webStorageType in {
                localStorage: 1,
                sessionStorage: 1
            }) try {
            window[webStorageType].setItem("__amplify__", "x"), window[webStorageType].removeItem("__amplify__"), createFromStorageInterface(webStorageType, window[webStorageType])
        } catch (e) {}
        if (!store.types.localStorage && window.globalStorage) try {
                createFromStorageInterface("globalStorage", window.globalStorage[window.location.hostname]), "sessionStorage" === store.type && (store.type = "globalStorage")
            } catch (e) {}! function() {
                if (!store.types.localStorage) {
                    var div = document.createElement("div"),
                        attrKey = "amplify";
                    div.style.display = "none", document.getElementsByTagName("head")[0].appendChild(div);
                    try {
                        div.addBehavior("#default#userdata"), div.load(attrKey)
                    } catch (e) {
                        return void div.parentNode.removeChild(div)
                    }
                    store.addType("userData", function(key, value, options) {
                        div.load(attrKey);
                        var attr, parsed, prevValue, i, remove, ret = value,
                            now = (new Date).getTime();
                        if (!key) {
                            for (ret = {}, remove = [], i = 0; attr = div.XMLDocument.documentElement.attributes[i++];) parsed = JSON.parse(attr.value), parsed.expires && parsed.expires <= now ? remove.push(attr.name) : ret[attr.name] = parsed.data;
                            for (; key = remove.pop();) div.removeAttribute(key);
                            return div.save(attrKey), ret
                        }
                        if (key = key.replace(/[^\-._0-9A-Za-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c-\u200d\u203f\u2040\u2070-\u218f]/g, "-"), key = key.replace(/^-/, "_-"), value === undefined) {
                            if (attr = div.getAttribute(key), parsed = attr ? JSON.parse(attr) : {
                                    expires: -1
                                }, !(parsed.expires && parsed.expires <= now)) return parsed.data;
                            div.removeAttribute(key)
                        } else null === value ? div.removeAttribute(key) : (prevValue = div.getAttribute(key), parsed = JSON.stringify({
                            data: value,
                            expires: options.expires ? now + options.expires : null
                        }), div.setAttribute(key, parsed));
                        try {
                            div.save(attrKey)
                        } catch (error) {
                            null === prevValue ? div.removeAttribute(key) : div.setAttribute(key, prevValue), store.userData();
                            try {
                                div.setAttribute(key, parsed), div.save(attrKey)
                            } catch (error) {
                                throw null === prevValue ? div.removeAttribute(key) : div.setAttribute(key, prevValue), store.error()
                            }
                        }
                        return ret
                    })
                }
            }(),
            function() {
                function copy(obj) {
                    return obj === undefined ? undefined : JSON.parse(JSON.stringify(obj))
                }
                var memory = {},
                    timeout = {};
                store.addType("memory", function(key, value, options) {
                    return key ? value === undefined ? copy(memory[key]) : (timeout[key] && (clearTimeout(timeout[key]), delete timeout[key]), null === value ? (delete memory[key], null) : (memory[key] = value, options.expires && (timeout[key] = setTimeout(function() {
                        delete memory[key], delete timeout[key]
                    }, options.expires)), value)) : copy(memory)
                })
            }()
    }(this.amplify = this.amplify || {}),
    function(window, angular, undefined) {
        "use strict";
        angular.module("ui.sortable", []).value("uiSortableConfig", {}).directive("uiSortable", ["uiSortableConfig", "$timeout", "$log", function(uiSortableConfig, $timeout, $log) {
            return {
                require: "?ngModel",
                scope: {
                    ngModel: "=",
                    uiSortable: "="
                },
                link: function(scope, element, attrs, ngModel) {
                    function combineCallbacks(first, second) {
                        return second && "function" == typeof second ? function(e, ui) {
                            first(e, ui), second(e, ui)
                        } : first
                    }

                    function getSortableWidgetInstance(element) {
                        var data = element.data("ui-sortable");
                        return data && "object" == typeof data && "ui-sortable" === data.widgetFullName ? data : null
                    }

                    function hasSortingHelper(element, ui) {
                        var helperOption = element.sortable("option", "helper");
                        return "clone" === helperOption || "function" == typeof helperOption && ui.item.sortable.isCustomHelperUsed()
                    }

                    function isFloating(item) {
                        return /left|right/.test(item.css("float")) || /inline|table-cell/.test(item.css("display"))
                    }

                    function getElementScope(elementScopes, element) {
                        for (var result = null, i = 0; i < elementScopes.length; i++) {
                            var x = elementScopes[i];
                            if (x.element[0] === element[0]) {
                                result = x.scope;
                                break
                            }
                        }
                        return result
                    }

                    function afterStop(e, ui) {
                        ui.item.sortable._destroy()
                    }
                    var savedNodes, opts = {},
                        directiveOpts = {
                            "ui-floating": undefined
                        },
                        callbacks = {
                            receive: null,
                            remove: null,
                            start: null,
                            stop: null,
                            update: null
                        },
                        wrappers = {
                            helper: null
                        };
                    return angular.extend(opts, directiveOpts, uiSortableConfig, scope.uiSortable), angular.element.fn && angular.element.fn.jquery ? (ngModel ? (scope.$watch("ngModel.length", function() {
                        $timeout(function() {
                            getSortableWidgetInstance(element) && element.sortable("refresh")
                        }, 0, !1)
                    }), callbacks.start = function(e, ui) {
                        if ("auto" === opts["ui-floating"]) {
                            var siblings = ui.item.siblings(),
                                sortableWidgetInstance = getSortableWidgetInstance(angular.element(e.target));
                            sortableWidgetInstance.floating = isFloating(siblings)
                        }
                        ui.item.sortable = {
                            model: ngModel.$modelValue[ui.item.index()],
                            index: ui.item.index(),
                            source: ui.item.parent(),
                            sourceModel: ngModel.$modelValue,
                            cancel: function() {
                                ui.item.sortable._isCanceled = !0
                            },
                            isCanceled: function() {
                                return ui.item.sortable._isCanceled
                            },
                            isCustomHelperUsed: function() {
                                return !!ui.item.sortable._isCustomHelperUsed
                            },
                            _isCanceled: !1,
                            _isCustomHelperUsed: ui.item.sortable._isCustomHelperUsed,
                            _destroy: function() {
                                angular.forEach(ui.item.sortable, function(value, key) {
                                    ui.item.sortable[key] = undefined
                                })
                            }
                        }
                    }, callbacks.activate = function(e, ui) {
                        savedNodes = element.contents();
                        var placeholder = element.sortable("option", "placeholder");
                        if (placeholder && placeholder.element && "function" == typeof placeholder.element) {
                            var phElement = placeholder.element();
                            phElement = angular.element(phElement);
                            var excludes = element.find('[class="' + phElement.attr("class") + '"]:not([ng-repeat], [data-ng-repeat])');
                            savedNodes = savedNodes.not(excludes)
                        }
                        var connectedSortables = ui.item.sortable._connectedSortables || [];
                        connectedSortables.push({
                            element: element,
                            scope: scope
                        }), ui.item.sortable._connectedSortables = connectedSortables
                    }, callbacks.update = function(e, ui) {
                        if (!ui.item.sortable.received) {
                            ui.item.sortable.dropindex = ui.item.index();
                            var droptarget = ui.item.parent();
                            ui.item.sortable.droptarget = droptarget;
                            var droptargetScope = getElementScope(ui.item.sortable._connectedSortables, droptarget);
                            ui.item.sortable.droptargetModel = droptargetScope.ngModel, element.sortable("cancel")
                        }
                        hasSortingHelper(element, ui) && !ui.item.sortable.received && "parent" === element.sortable("option", "appendTo") && (savedNodes = savedNodes.not(savedNodes.last())), savedNodes.appendTo(element), ui.item.sortable.received && (savedNodes = null), ui.item.sortable.received && !ui.item.sortable.isCanceled() && scope.$apply(function() {
                            ngModel.$modelValue.splice(ui.item.sortable.dropindex, 0, ui.item.sortable.moved)
                        })
                    }, callbacks.stop = function(e, ui) {
                        !ui.item.sortable.received && "dropindex" in ui.item.sortable && !ui.item.sortable.isCanceled() ? scope.$apply(function() {
                            ngModel.$modelValue.splice(ui.item.sortable.dropindex, 0, ngModel.$modelValue.splice(ui.item.sortable.index, 1)[0])
                        }) : "dropindex" in ui.item.sortable && !ui.item.sortable.isCanceled() || hasSortingHelper(element, ui) || savedNodes.appendTo(element), savedNodes = null
                    }, callbacks.receive = function(e, ui) {
                        ui.item.sortable.received = !0
                    }, callbacks.remove = function(e, ui) {
                        "dropindex" in ui.item.sortable || (element.sortable("cancel"), ui.item.sortable.cancel()), ui.item.sortable.isCanceled() || scope.$apply(function() {
                            ui.item.sortable.moved = ngModel.$modelValue.splice(ui.item.sortable.index, 1)[0]
                        })
                    }, wrappers.helper = function(inner) {
                        return inner && "function" == typeof inner ? function(e, item) {
                            var innerResult = inner(e, item);
                            return item.sortable._isCustomHelperUsed = item !== innerResult, innerResult
                        } : inner
                    }, scope.$watch("uiSortable", function(newVal) {
                        var sortableWidgetInstance = getSortableWidgetInstance(element);
                        sortableWidgetInstance && angular.forEach(newVal, function(value, key) {
                            return key in directiveOpts ? ("ui-floating" !== key || value !== !1 && value !== !0 || (sortableWidgetInstance.floating = value), void(opts[key] = value)) : (callbacks[key] ? ("stop" === key && (value = combineCallbacks(value, function() {
                                scope.$apply()
                            }), value = combineCallbacks(value, afterStop)), value = combineCallbacks(callbacks[key], value)) : wrappers[key] && (value = wrappers[key](value)), opts[key] = value, void element.sortable("option", key, value))
                        })
                    }, !0), angular.forEach(callbacks, function(value, key) {
                        opts[key] = combineCallbacks(value, opts[key]), "stop" === key && (opts[key] = combineCallbacks(opts[key], afterStop))
                    })) : $log.info("ui.sortable: ngModel not provided!", element), void element.sortable(opts)) : void $log.error("ui.sortable: jQuery should be included before AngularJS!")
                }
            }
        }])
    }(window, window.angular), ! function() {
        "use strict";
        var t = angular.module("adaptive.detection", []);
        t.provider("$detection", [function() {
            this.userAgent = navigator.userAgent, this.setUserAgent = function(t) {
                this.userAgent = t
            }, this.$get = function() {
                var t = this.userAgent;
                return {
                    getUserAgent: function() {
                        return t
                    },
                    isiOS: function() {
                        return /(iPad|iPhone|iPod)/gi.test(t)
                    },
                    isAndroid: function() {
                        return /(Android)/gi.test(t)
                    },
                    isWindowsPhone: function() {
                        return /(IEMobile)/gi.test(t)
                    },
                    isBB10: function() {
                        return /(BB10)/gi.test(t)
                    }
                }
            }
        }])
    }(), angular.module("toggle-switch", ["ng"]).directive("toggleSwitch", function() {
        return {
            restrict: "EA",
            replace: !0,
            require: "ngModel",
            scope: {
                disabled: "@",
                onLabel: "@",
                offLabel: "@",
                knobLabel: "@",
                inverseMode: "@"
            },
            template: '<div role="radio" class="toggle-switch" ng-class="{ \'disabled\': disabled, \'switch-off\': !model, \'switch-on\': model }"><div><span class="switch-left" ng-bind="onLabel"></span><span class="knob"><div></div></span><span class="switch-right" ng-bind="offLabel"></span></div></div>',
            link: function(scope, element, attrs, ngModelCtrl) {
                attrs.onLabel || (attrs.onLabel = "On"), attrs.offLabel || (attrs.offLabel = "Off"), attrs.knobLabel || (attrs.knobLabel = "Â "), attrs.disabled || (attrs.disabled = !1), element.on("click", function() {
                    scope.$apply(scope.toggle)
                }), ngModelCtrl.$formatters.push(function(modelValue) {
                    return modelValue
                }), ngModelCtrl.$parsers.push(function(viewValue) {
                    return viewValue
                }), ngModelCtrl.$render = function() {
                    scope.isValue = ngModelCtrl.$viewValue, scope.model = scope.isValue, attrs.inverseMode && (scope.model = !scope.model)
                }, scope.toggle = function() {
                    scope.disabled || (scope.model = !scope.model, scope.isValue = !scope.isValue, ngModelCtrl.$setViewValue(scope.isValue))
                }
            }
        }
    }), angular.module("app").run(["$templateCache", function($templateCache) {
        "use strict";
        $templateCache.put("partials/sub/add_user.html", '<div class="addUserPopover closeOnDocumentClick" id="addUserPopoverId" ng-click="$event.stopPropagation()">\n    <label ng-hide="errors[$index].invite">Add a member</label>\n	<label class="errorMsg" ng-show="errors[$index].invite">{{errors[$index].invite}}</label>\n    <div class="cf">\n        <input type="text" placeholder="Enter a hitbox username ..." ng-model="invites[$index].name" ui-keypress="{enter:\'addUserSubmit($event, $index)\'}" focus-on-show/>\n    	<button class="btn-green" ng-click="addUserSubmit($event, $index)">Add</button>\n    </div>\n<!--\n	<div class="btns">\n    	<button class="btnNone" ng-click="resetInvites();hide()">Cancel</button>\n	</div>\n-->\n</div>'), $templateCache.put("partials/sub/bouncy.html", '<div class="bouncy">\r\n    <div class="bouncy1"></div>\r\n    <div class="bouncy2"></div>\r\n    <div class="bouncy3"></div>\r\n</div>'), $templateCache.put("partials/sub/chart_test.html", '<div id="chartContainer" style="width:100%; height:400px;"></div>'), $templateCache.put("partials/sub/chat_chat.html", '<!-- chat messages -->\r\n<div class="chatwrapper">\r\n\r\n	<section class="chat-messages" ng-class="{compact: chatOptions.compact, normal: !chatOptions.compact, timestamps: chatOptions.timestamps}" height-watch public-height="heights.chatScroll">\r\n		<div class="chat-scrollwrapper tse-scrollable" scroll-emulator>\r\n			<div class="tse-scroll-content" ng-controller="chatScrollCtrl" scroll-glue ng-model="autoScroll">\r\n	        	<div class="tse-content tse-content-chat">\r\n					<ul ng-mousedown="mouseDown($event)" class="chatBody" ng-class="\'fontSize\' + chatOptions.fontSize">\r\n					    <li ng-repeat="message in messages" class="from_{{message.name}} chat-message-animated" compile="message.html"></li>\r\n					</ul>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<div class="scrollDown icon-down-1" ng-click="doAutoScroll()" ng-show="!scroller.autoScroll"></div>\r\n	</section>\r\n\r\n	<!-- INPUT -->\r\n	<div class="chat-input-wrap nono">\r\n		<div class="chat-input-inner-wrap">\r\n			<div class="chat-input"\r\n				ng-if="!loggedIn"\r\n				ng-controller="LoginCtrl" \r\n				ng-click="openDialog()">\r\n				Sign in to chat ...\r\n			</div>\r\n		    <textarea id="chat-input"\r\n		    	ng-if="loggedIn"\r\n		    	class="chat-input flex-row" \r\n		    	ng-model="chat.msgTxt" \r\n		    	maxlength="300" \r\n		    	required \r\n		    	placeholder="Post a message ..." \r\n		    	ui-keypress="{enter:\'chat.chatMsg($event)\'}" \r\n		    	ui-keydown="{tab:\'chat.prevent($event)\'}"\r\n		    	ui-keyup="{tab:\'chat.tryCitateUser($event)\'}"\r\n		    	ng-change="chat.resetCitation()"\r\n		    	ng-disabled="!chatLoggedIn" \r\n		    	focus-on="focusMsgTxt" \r\n		    	msd-elastic>\r\n		    </textarea>\r\n			<div class="chat-input-btn emote-btn icon-emoticon icon-only"\r\n		    	gp-classes=\'["emote-menu"]\' \r\n		    	generic-popover \r\n		    	gp-width="300" \r\n		    	gp-height="200" \r\n		    	gp-position="top" \r\n		    	gp-template="partials/sub/chat_emotes.html" \r\n		    	gp-on="click">\r\n		    </div>\r\n			<div class="chat-input-btn mod-btn" \r\n			 	ng-if="chatOptions.isAdmin" \r\n				generic-popover \r\n				gp-width="220" \r\n				gp-height="200" \r\n				gp-position="top" \r\n				gp-template="partials/sub/chat_mod.html" \r\n				gp-classes=\'["nono","chat-mod","chat-settings"]\'\r\n				gp-on="click">\r\n			</div>\r\n			<div class="chat-input-btn settings-btn icon-dots-v icon-only"  \r\n				generic-popover \r\n				gp-width="220" \r\n				gp-height="200" \r\n				gp-position="top" \r\n				gp-template="partials/sub/chat_settings.html" \r\n				gp-classes=\'["nono","chat-settings"]\'\r\n				gp-on="click">\r\n		    </div>\r\n	    </div>\r\n	</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n'), $templateCache.put("partials/sub/chat_emotes.html", '<div class="emote-container">\n	<!-- subscriber emotes -->\n	<div class="subscriber-emotes" ng-class="{notSubscribed:!subscribed}" ng-if="!noSubEmotes" ng-show="chat.showEmotes==\'subscriberEmotes\'">\n		<div class="title">{{channel}}\'s Subscriber Emotes</div>\n        <div ng-if="!subscribed && !chatOptions.isSuperAdmin && !isChannelOwner">\n            <div class="pick-emote disabled" ng-repeat="emote in subEmotes">\n                <img ng-src="{{config.imgUrl}}{{emote[0]}}" />\n            </div>\n            <subbutton medianame="{{channel}}" hide-popover="true" custom-label="Subscribe to use"></subbutton>\n        </div>\n        <div ng-if="subscribed || isChannelOwner || chatOptions.isSuperAdmin">\n            <div class="pick-emote" ng-repeat="emote in subEmotes" ng-click="useEmote(emote[1]);remove_tooltip()">\n                <img ng-src="{{config.imgUrl}}{{emote[0]}}" />\n            </div>\n        </div>\n    </div>\n	<!-- emote groups -->\n    <div ng-repeat="emotes in chatEmotes" ng-show="chat.showEmotes==emotes.name">\n        <!-- emotes -->\n        <div class="pick-emote" ng-repeat="emote in emotes.emotes" ng-click="useEmote(emote.icon_short);remove_tooltip()">\n            <img ng-src="{{config.imgUrl}}{{emote.icon_path}}" />\n        </div>\n	</div>\n</div>		            	\n<div class="emote-nav">\n	<!-- sub bagde -->\n	<div ng-if="!noSubEmotes" ng-class="{active:chat.showEmotes==\'subscriberEmotes\'}"\n		ng-click="chat.showEmotes=\'subscriberEmotes\'">\n        <img ng-src="{{config.imgUrl}}{{subBadges[0].badge_image}}" />\n    </div>\n	<!-- emote group icons -->\n	<div ng-repeat="emotes in chatEmotes" ng-class="{active:chat.showEmotes==emotes.name}"\n		ng-click="chat.showEmotes = emotes.name">\n    	<img ng-src="{{config.imgUrl}}{{emotes.icon}}" />\n	</div>\n</div>\n\n<!-- standard emotes -->\n<!--\n<div ng-repeat="emotes in chatEmotes">\n	<img ng-src="{{config.imgUrl}}{{emotes.icon}}" ng-click="useEmote(emote.icon_short)" />\n    <div class="pick-emote" ng-repeat="emote in emotes.emotes">\n        <img ng-src="{{config.imgUrl}}{{emote.icon_path}}" ng-click="useEmote(emote.icon_short)" />\n    </div>\n</div>\n-->\n<!-- subscriber emotes -->\n<!--\n<div class="subscriber-emotes" ng-class="{notSubscribed:!subscribed}" ng-if="chatOptions.subEnabled" ng-hide="subEmotes.length == 0">\n    <div ng-if="!subscribed && !chatOptions.isSuperAdmin && !isChannelOwner">\n    	<img ng-src="{{config.imgUrl}}{{subBadges[0].badge_image}}" />\n        <div class="pick-emote disabled" ng-repeat="emote in subEmotes">\n            <img ng-src="{{config.imgUrl}}{{emote[0]}}" ng-click="$event.stopPropagation()" />\n        </div>\n        <subbutton medianame="{{channel}}" hide-popover="true" open-in-new-window="true" custom-label="Subscribe to use"></subbutton>\n    </div>\n    <div ng-if="subscribed || isChannelOwner || chatOptions.isSuperAdmin">\n        <div class="pick-emote" ng-repeat="emote in subEmotes">\n            <img ng-src="{{config.imgUrl}}{{emote[0]}}" ng-click="useEmote(emote[1])" />\n        </div>\n    </div>\n</div>\n-->\n'), $templateCache.put("partials/sub/chat_follow.html", '<div class="embed-infobar">\n	<div class="right">\n	    <followbutton follow-id="{{media.media_user_id}}"></followbutton>\n	    <div class="subscribe" ng-show="subEnabled">\n	        <button class="button-rounded btn-green isNotSubscribed"\n	            ng-hide="subscribed || displayState == \'loading\'"  \n	            ng-click="gotoSubscribeUrl()">\n	            Subscribe<div></div></button>\n	        <button class="button-rounded icon-ok btn-green isSubscribed"\n	            ng-show="subscribed && displayState == \'data\'" \n	            ng-click="$event.stopPropagation()">\n	            Subscribed</button>\n	    </div>\n	</div> \n	<div class="title">\n		<div class="name">{{media.media_display_name}}</div>\n	</div>   \n</div>'), $templateCache.put("partials/sub/chat_mod.html", '<div id="chatModPopoverId">\r\n\r\n    <label class="new-switch" ng-click="openBlacklistDlg()">\r\n      <span>Word Blacklist</span>\r\n    </label>\r\n\r\n    <label class="slider-wrap slowMode">\r\n        <div>\r\n            <span>Slow Mode:</span>\r\n            <span>{{slowMode.seconds < 1 ? \'OFF\' : \' \'+slowMode.seconds+\' seconds\'}}{{slowMode.seconds > 1 ? \'\' : \'\'}}</span>\r\n        </div>\r\n        <div class="settings-slider-wrap">\r\n            <div ui-slider="chatOptions.slowModeSliderOptions" ng-model="slowMode.slider" class="slowMode-slider settings-slider"></div>\r\n        </div>\r\n    </label>\r\n\r\n    <label class="new-switch" ng-show="chatOptions.subEnabled" tooltip="Takes a few seconds to enable">\r\n        <span>Subscriber Only</span>\r\n        <toggle-switch \r\n            ng-change="setSubscriberMode()"\r\n            ng-model="chatOptions.subscriberMode"\r\n            type="checkbox" \r\n            on-label="On"\r\n            off-label="Off">\r\n        </toggle-switch>\r\n    </label>\r\n\r\n    <label class="new-switch" ng-show="chatOptions.subEnabled" tooltip="Allow subscribers to post images">\r\n        <span>Subscriber Images</span>\r\n        <toggle-switch \r\n            ng-change="setSubscriberImages()"\r\n            ng-model="chatOptions.subscriberImages"\r\n            type="checkbox" \r\n            on-label="On"\r\n            off-label="Off">\r\n        </toggle-switch>\r\n    </label>\r\n\r\n</div>'), $templateCache.put("partials/sub/chat_motd.html", '<div class="motd">\n    <div class="poll-close icon-cancel nono" ng-click="motd.hidden=true"></div>\n    \n<!--\n    <div class="poll-user" ng-style="{\'background\':\'rgba(\' + (motd.nameColor | hexToRgb) +\',.2)\' }">\n        <img ng-src="{{config.imgUrl}}{{media.channel.user_logo}}" />\n        <span ng-style="{\'color\': \'#\' + motd.nameColor}">{{media.media_display_name}}</span>\n    </div>\n-->\n    <div class="poll-question" ng-bind-html="motd.message" ng-class="\'fontSize\' + chatOptions.fontSize"></div>\n</div>'), $templateCache.put("partials/sub/chat_poll.html", '<div class="poll" ng-class="{pollResults:poll.pollResults}">\n    <!-- minimise btn -->\n    <div class="poll-close icon-up nono" ng-click="pollMinimise=!pollMinimise" ng-class="{minimised:pollMinimise}"></div>\n    <!-- minimised msg -->\n    <div ng-show="pollMinimise" ng-click="pollMinimise=false">\n        <div class="poll-minimised-msg">A poll is running</div>\n    </div>\n    <!-- poll -->\n    <div ng-hide="pollMinimise">\n        <div class="poll-question">{{poll.question}}</div>\n        <form name="startForm" role="form" ng-submit="vote()" novalidate>\n            <div class="item-wrap">\n                <div class="item nono" ng-repeat="choice in poll.choices" ng-class="{\'winner\':choice.isMax,\'userpick\':$index == myVote}">\n                    <label class="radiobutton">\n                        <input type="radio" id="{{$index}}" ng-model="poll.selection" value="{{$index}}" name="poll_selection" ng-disabled="poll.pollResults"/>\n                        <div>{{choice.text}}</div>\n                    </label>\n                    <div class="bar">\n                        <div ng-show="poll.pollResults" ng-style="choice.barSize($index)"></div>\n                    </div>\n                    <div class="votes" ng-show="poll.pollResults">\n                        <span>{{choice.percent}}%</span>\n                    </div>\n                </div>\n            </div>\n            <div class="poll-buttons" ng-hide="poll.pollResults || poll.status == \'paused\'">\n                <!-- logged out -->\n                <div class="btn button-rounded btn-green" ng-controller="LoginCtrl" ng-click="openDialog()" ng-if="!loggedIn">Log in to Vote</div>\n                <!-- logged in -->\n                <button class="button-rounded btn-green" \n                	type="submit" \n                	ng-if="loggedIn" \n                	ng-disabled="poll.vote_button_disabled" \n                	ng-class="{\'disabled\':poll.vote_button_disabled}" ng-show="canVote() == \'all\'">Vote</button>\n                <button class="button-rounded btn-green" \n                	type="submit" \n                	ng-if="loggedIn" \n                	ng-disabled="poll.vote_button_disabled" \n                	tooltip="By taking part in this poll you follow {{channel}}\'s channel"\n                	tooltip-placement="top"\n                	ng-class="{\'disabled\':poll.vote_button_disabled}" ng-show="canVote() == \'follow\'">Follow & Vote</button>\n                <button class="button-rounded btn-green" \n                	type="submit" \n                	ng-if="loggedIn" \n                	ng-disabled="poll.vote_button_disabled" \n                	tooltip="Subscribe to {{channel}}\'s channel to take part in this poll"\n                	tooltip-placement="top"\n                	ng-class="{\'disabled\':poll.vote_button_disabled}" ng-show="canVote() == \'subscribe\'">Subscribe & Vote</button>\n            </div>\n            <div class="poll-ended-note" ng-show="poll.status == \'paused\'">Poll ended</div>\n            {{poll.uptime}}\n        </form>\n    </div>\n</div>\n'), $templateCache.put("partials/sub/chat_raffle.html", '<div ng-class="{minimised:raffleMinimise, raffleResults:raffle.raffleResults}" class="poll raffle">\r\n    <!-- minimise btn -->\r\n    <div class="poll-close icon-up nono" ng-click="raffleMinimise=!raffleMinimise" ng-class="{minimised:raffleMinimise}"></div>\r\n    <!-- minimised msg -->\r\n    <div ng-show="raffleMinimise" ng-click="raffleMinimise=false">\r\n        <div class="poll-minimised-msg">A giveaway is running</div>\r\n    </div>\r\n    <!-- raffle -->\r\n    <div ng-hide="raffleMinimise">\r\n        <!--\r\n<div class="poll-user" ng-style="{\'background\':\'rgba(\' + (raffle.nameColor | hexToRgb) +\',.2)\' }">\r\n            <img ng-src="{{config.imgUrl}}{{media.channel.user_logo}}" />\r\n            <span ng-style="{\'color\': \'#\' + raffle.nameColor}">{{media.media_display_name}}</span>\r\n        </div>\r\n-->\r\n        <div>\r\n            <div class="poll-question">{{raffle.question}}</div>\r\n            <div class="poll-prize-head">Win:</div>\r\n            <div class="poll-prize">{{raffle.prize}}</div>\r\n        </div>        \r\n        <form name="startForm" role="form" ng-submit="vote()" novalidate ng-hide="raffle.status == \'paused\' || raffle.status == \'ended\'">\r\n            <div class="item-wrap">\r\n                <div class="item nono" ng-repeat="choice in raffle.choices" ng-class="{winner:choice.isMax}">\r\n                    <label class="radiobutton">\r\n                        <input type="radio" id="{{$index}}" ng-model="raffle.selection" value="{{$index}}" name="raffle_selection" ng-disabled="raffle.raffleResults" />\r\n                        <div>{{choice.text}}</div>\r\n                    </label>\r\n                    <div class="bar"></div>\r\n                </div>\r\n            </div>\r\n            <div class="poll-buttons" ng-hide="raffle.raffleResults || raffle.status == \'paused\' || raffle.status == \'ended\'">\r\n                <!-- logged out -->\r\n                <div class="btn btn-green" ng-controller="LoginCtrl" ng-click="openDialog()" ng-if="!loggedIn">Log in to Vote</div>\r\n                <!-- logged in -->\r\n                <button class="button-rounded btn-green" \r\n                	type="submit" \r\n                	ng-if="loggedIn" \r\n                	ng-disabled="raffle.vote_button_disabled" \r\n                	ng-class="{\'disabled\':raffle.vote_button_disabled}" ng-show="canVote() == \'all\'">Vote to Win</button>\r\n                <button class="button-rounded btn-green" \r\n                	type="submit" \r\n                	ng-if="loggedIn" \r\n                	ng-disabled="raffle.vote_button_disabled" \r\n                	tooltip="By taking part in this raffle you follow {{channel}}\'s channel"\r\n                	tooltip-placement="top"\r\n                	ng-class="{\'disabled\':raffle.vote_button_disabled}" ng-show="canVote() == \'follow\'">Follow & Vote</button>\r\n                <button class="button-rounded btn-green" \r\n                	type="submit" \r\n                	ng-if="loggedIn" \r\n                	ng-disabled="raffle.vote_button_disabled" \r\n                	tooltip="Subscribe to {{channel}}\'s channel to take part in this giveaway"\r\n                	tooltip-placement="top"\r\n                	ng-class="{\'disabled\':raffle.vote_button_disabled}" ng-show="canVote() == \'subscribe\'">Subscribe & Vote</button>\r\n            </div>\r\n        </form>\r\n        <div class="poll-ended-msg" ng-show="raffle.status == \'paused\'">\r\n            Voting is over. Winners are drawn ...\r\n        </div>\r\n        <div class="poll-ended-msg" ng-show="raffle.status == \'ended\' && !raffle.isWinner">\r\n            <!-- You did not win. -->\r\n            Giveaway ended.\r\n        </div>\r\n        <div class="poll-winner-msg" ng-show="raffle.isWinner">\r\n            You won!\r\n            <div class="note">{{media.media_display_name}} got your email and will contact you.</div>\r\n        </div>\r\n    </div>\r\n</div>'), $templateCache.put("partials/sub/chat_sbnt.html", '<div class="sbnt">\n    <div class="sbnt-logo" style="background-image:url({{$parent.config.imgUrl}}{{$parent.subBadges[0].badge_image}})"></div>\n    <span class="sbnt-name">{{lastSubscriber.name}}</span>\n    <span class="sbnt-msg">just subscribed!</span>\n    <div class="poll-close icon-cancel nono" ng-click="sn.close()"></div>\n</div>'), $templateCache.put("partials/sub/chat_settings.html", '<div id="chatSettingsPopoverId">\r\n    <div style="position:absolute;display:block;top:0;bottom:0;left:0;right:0;" ng-if="!loggedIn" ng-controller="LoginCtrl" ng-click="openDialog()"></div>\r\n\r\n    <div id="colorPicker">\r\n\r\n        <div class="colorPickerColors cf" ng-show="showColorPicker" ng-click="showColorPicker=!showColorPicker">\r\n          <div ng-click="colorPicker(color)" ng-repeat="color in colorTable" ng-style="{\'background-color\':\'#\'+color}"></div>\r\n        </div>\r\n        <a class="color" ng-click="showColorPicker=!showColorPicker">\r\n            <span ng-style="{\'color\':\'#\'+nameColor}">Your Nick Color</span>\r\n            <div ng-style="{\'background-color\':\'#\'+nameColor}"></div>\r\n        </a>\r\n\r\n       \r\n    </div>\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n    <label class="slider-wrap fontSize">\r\n        <div>A</div>\r\n        <div ui-slider="chatOptions.fontSizeSliderOptions" ng-model="chatOptions.fontSize" class="fontSize-slider settings-slider"></div>\r\n        <div>A</div>\r\n    </label>\r\n\r\n    <label class="new-switch">\r\n        <span>Images</span>\r\n        <toggle-switch \r\n            ng-model="chatOptions.disableImages"\r\n            type="checkbox" \r\n            on-label="Show"\r\n            off-label="Block"\r\n            inverse-mode="true">\r\n        </toggle-switch>\r\n    </label>\r\n\r\n    <label class="new-switch">\r\n        <span>Timestamps</span>\r\n        <toggle-switch \r\n            ng-model="chatOptions.timestamps"\r\n            type="checkbox" \r\n            on-label="Show"\r\n            off-label="Hide">\r\n        </toggle-switch>\r\n    </label>\r\n\r\n    <label class="new-switch">\r\n        <span>Display Mode</span>\r\n        <toggle-switch class="toggle-switch-wide"\r\n            ng-model="chatOptions.compact"\r\n            type="checkbox" \r\n            on-label="Compact"\r\n            off-label="Normal">\r\n        </toggle-switch>\r\n    </label>\r\n<!--\r\n    <label>\r\n        <input ng-model="chatOptions.dark" type="checkbox" />\r\n        <div><div></div></div>\r\n        <span>Dark Mode</span>\r\n    </label>\r\n-->\r\n    \r\n    <label class="new-switch" ng-if="!detached" ng-click="popoutChat(); chat.triggerChatSettings(); remove_tooltip()" ng-hide="hidePopoutButton">\r\n      <span>Popout Chat</span>\r\n    </label>\r\n\r\n<!--     <label ng-if="!detached" ng-click="closeChat(); chat.triggerChatSettings()">\r\n      <span>Hide Chat</span>\r\n    </label> -->\r\n</div>'), $templateCache.put("partials/sub/chat_usercard.html", '\r\n<div class="chat-user-popover" ng-class="{isLoading:tooltipLoading}">\r\n	<a class="user" href="/{{popover.user.user_name}}" target="_blank">\r\n		<img class="logo round" src="{{config.imgUrl}}{{popover.user.user_logo_small}}" />\r\n		<div class="name">{{popover.user.user_name}}</div>\r\n	</a>\r\n	<div class="followers icon-heart">{{popover.user.followers}}</div>\r\n	<followbutton class="follow-btn" follow-id="{{popover.user.user_id}}"></followbutton>\r\n\r\n	<div class="menu-items" ng-show="!tooltipLoading">\r\n		<a class="menu-item" \r\n			ng-click="citateUser(popover.user.user_name); processUserOptions(); remove_tooltip()" \r\n			ng-show="session.user_name!=popover.user.user_name">\r\n			@Mention\r\n		</a>\r\n		<a class="menu-item" \r\n			ng-click="action.unban=true;processUserOptions()"\r\n			ng-if="session.user_name!=popover.user.user_name && popover.user.role!=\'admin\' && popover.user.banned && popover.isAdmin">\r\n			Unban\r\n		</a>\r\n\r\n		<div ng-if="((session.user_name!=popover.user.user_name && popover.user.role!=\'admin\' && !popover.user.banned) || (popover.isSuperAdmin && popover.user.role!=\'admin\')) && !popover.user.banned">\r\n		    <a class="menu-item" \r\n		    	ng-click="action.ignore=true;processUserOptions()" ng-show="!popover.user.ignored">\r\n		    	Ignore\r\n		    </a>\r\n		    <a class="menu-item" \r\n		    	ng-click="action.ignore=false;processUserOptions()" ng-show="popover.user.ignored">\r\n		    	Unignore\r\n		    </a>\r\n		    <span ng-show="((popover.isAdmin  && popover.user.role!=\'admin\' && popover.user.role!=\'user\') || (popover.isSuperAdmin && popover.user.role!=\'admin\')) && !popover.user.banned">\r\n		        <a class="menu-item" \r\n		        	ng-click="action.kick=true;processUserOptions()">\r\n		        	Timeout\r\n		        </a>\r\n		        <a class="menu-item" \r\n		        	ng-click="action.ban=true;processUserOptions()">\r\n		        	Ban\r\n		        </a>\r\n		    </span>\r\n		        <a class="menu-item" \r\n		        	ng-click="action.mod=true;processUserOptions()" \r\n		        	ng-show="(popover.isSuperAdmin && popover.user.role!=\'admin\' && popover.user.role!=\'user\' ) && !popover.user.banned">\r\n		        	Make Moderator\r\n		        </a>\r\n		        <a class="menu-item" \r\n		        	ng-click="action.removemod=true;processUserOptions()" \r\n		        	ng-show="(popover.isSuperAdmin && popover.user.role==\'user\' ) && !popover.user.banned">\r\n		        	Remove Moderator\r\n		        </a>\r\n		    <section ng-show="popover.isSuperAdmin && popover.user.role!=\'admin\'">\r\n		        <span class="cf">\r\n		            <button type="button" ng-disabled="action.mod" id="banUserIp" ng-click="action.banip = true" class="btn ipBanBtn" ng-hide="action.banip">IP Ban</button>\r\n		            <button type="button" ng-show="action.banip" ng-click="confirmIpBan(popover.user.user_name)" class="btn-red ipBanConfirmBtn">Confirm</button>\r\n		            <button type="button" ng-show="action.banip" ng-click="action.banip = false" class="btn ipBanConfirmBtn">Cancel</button>\r\n		        </span>\r\n		    </section>\r\n		</div>\r\n	</div>\r\n</div>\r\n'), $templateCache.put("partials/sub/chat_userlist.html", '<div class="userlist-header">\n	<div class="header-inner">\n		<div class="search-wrap">\n			<input class="search" type="text" ng-model="userLists.search" placeholder="Search" />\n		</div>\n		<div class="filters">\n			<label class="moderators"\n				tooltip="Show only Moderators"\n				tooltip-placement="bottom"\n				tooltip-append-to-body="true">\n				<input type="checkbox" ng-click="setSelectedRole(\'mod\')" ng-model="role_select.mod" />\n				<span class="">M</span>\n			</label>	\n			<label class="staff"\n				tooltip="Show only Staff"\n				tooltip-placement="bottom"\n				tooltip-append-to-body="true">\n				<input type="checkbox" ng-click="setSelectedRole(\'staff\')" ng-model="role_select.staff" />\n				<span class="icon-hitbox-icon-s"></span>\n			</label>	\n			<label class="staff"\n				tooltip="Show only Ambassadors"\n				tooltip-placement="bottom"\n				tooltip-append-to-body="true">\n				<input type="checkbox" ng-click="setSelectedRole(\'community\')" ng-model="role_select.community" />\n				<span class="">A</span>\n			</label>	\n			<label class="subscribers"\n				tooltip="Show only Subscribers"\n				tooltip-placement="bottom"\n				tooltip-append-to-body="true">\n				<input type="checkbox" ng-click="setSelectedRole(\'subscriber\')" ng-model="role_select.subscriber" />\n				<span class="">S</span>\n			</label>\n			<label class="followers"\n				tooltip="Show only Followers"\n				tooltip-placement="bottom"\n				tooltip-append-to-body="true">\n				<input type="checkbox" ng-click="setSelectedRole(\'follower\')" ng-model="role_select.follower" />\n				<span class="icon-heart-outline"></span>\n			</label>\n			<label class="ignored"\n				tooltip="Show Ignorelist"\n				tooltip-placement="bottom"\n				tooltip-append-to-body="true">\n				<input type="checkbox" ng-click="triggerIgnorelist()" ng-model="showIgnorelist"/>\n				<span class="icon-ignore"></span>\n			</label>\n			<label class="banned"\n				ng-show="chatOptions.isAdmin"\n				tooltip="Show Banlist"\n				tooltip-placement="bottom"\n				tooltip-append-to-body="true">\n				<input type="checkbox" ng-click="triggerBanlist()"ng-model="showBanlist"/>\n				<span class="icon-user-blocked"></span>\n			</label>\n			<span ng-if="chatOptions.isSuperAdmin" class="guests"\n				tooltip="Guests"\n				tooltip-placement="bottom"\n				tooltip-append-to-body="true">{{chatGuests}}</span>\n		</div>\n		<div class="pin-wrap">\n			<label class="pin"\n				ng-show="!detached && (chatOptions.chatTab==\'users\' || stickyUserList)"\n				tooltip="Pin next to chat"\n				tooltip-placement="bottom"\n				tooltip-append-to-body="true">\n				<input ng-model="chatOptions.stickyUsers" type="checkbox"/>\n				<span class="icon-pin"></span>\n			</label>\n		</div>\n	</div>	\n</div>\n<div class="userlist-grid" ng-grid="gridViewerList" ng-show="!showBanlist && !showIgnorelist"></div>\n<div class="userlist-grid" ng-grid="gridBanList" ng-show="showBanlist"></div>\n<div class="userlist-grid" ng-grid="gridIgnoreList" ng-show="showIgnorelist"></div>\n   \n'), $templateCache.put("partials/sub/dateRangePicker.html", '    <div ng-show="visible" class="angular-date-range-picker__picker">\n        \n\n        <div class="angular-date-range-picker__timesheet">\n             <button ng-click="move(-1, $event)" class="angular-date-range-picker__prev-month">&#9664;</button>n\n\n            <div ng-repeat="month in months" class="angular-date-range-picker__month">\n                \n\n                <div class="angular-date-range-picker__month-name">\n                    {{ month.name }}\n                </div>\n\n                <table class="angular-date-range-picker__calendar">\n                    <tr>\n                        <th ng-repeat="day in month.weeks[1]" class="angular-date-range-picker__calendar-weekday">{{ day.date.format("dd") }}</th>\n                    </tr>\n\n                    <tr ng-repeat="week in month.weeks">\n                        <td class="angular-date-range-picker__calendar-day" ng-class=\'{"angular-date-range-picker__calendar-day-selected": day.selected, "angular-date-range-picker__calendar-day-disabled": day.disabled}\' ng-repeat="day in week" ng-click="select(day, $event)">{{ day.date.date() }}</td>\n                    </tr>\n                </table>\n            </div> <button ng-click="move(+1, $event)" class="angular-date-range-picker__next-month">&#9654;</button>n\n        </div>\n\n        <div class="angular-date-range-picker__panel">\n             Select range:  <button ng-click="ok($event)" class="angular-date-range-picker__apply">Apply</button> <a href="#" ng-click="hide($event)" class="angular-date-range-picker__cancel">cancel</a>\n        </div>\n    </div>\n'), $templateCache.put("partials/sub/daterange.html", '<div id="date-range">\r\n    <div id="date-range-field" ng-class="{active:datepickerOpen}">\r\n        <span></span>\r\n        <div class="icon-down"></div>\r\n    </div>\r\n    <div id="datepicker-calendar"></div>\r\n</div>\r\n'), $templateCache.put("partials/sub/detailPlayer.html", '<div id="mediaplayer" class="{{stateClass}} nono" ng-class="{\'minimized\': playerOptions.playerMinimized}">\n	<!-- Player -->\n    <!--\n	<div ng-show="loading" class="loading">\n		<div class="icon-spin-1"></div>\n	</div>\n	-->\n	<div class="mediaplayer" id="player">\n		<div ng-if="!auth && mediaid" ng-include="\'partials/sub/playerPassword.html\'"></div>\n	</div>\n	<!-- loading -->\n	<div id="player-loading" class="player-show-animated" ng-show="playerisloading==true && media.media_is_live==1">\n		<div class="player-loading-logo round" style="background-image: url({{config.imgUrl}}{{media.channel.user_logo}})"></div>\n		<svg height="130" width="130" id="player-loading-spinner" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n			<circle opacity=".2" cx="65" cy="65" r="64" stroke="white" stroke-width="3" fill="transparent" />\n			<path fill="white" d="M64.3,0v2C99.4,2,128,30.6,128,65.7h2C130,29.4,100.6,0,64.3,0z">\n				<animateTransform attributeName="transform" type="rotate" from="0 65 65" to="360 65 65" dur="1.3s" repeatCount="indefinite" />\n			</path>    \n			<path fill="white" d="M64.3,0v2C99.4,2,128,30.6,128,65.7h2C130,29.4,100.6,0,64.3,0z">\n				<animateTransform attributeName="transform" type="rotate" from="0 65 65" to="360 65 65" dur="1.5s" repeatCount="indefinite" />\n			</path> \n			<path fill="white" d="M64.3,0v2C99.4,2,128,30.6,128,65.7h2C130,29.4,100.6,0,64.3,0z">\n				<animateTransform attributeName="transform" type="rotate" from="0 65 65" to="360 65 65" dur="2s" repeatCount="indefinite" />\n			</path>\n		</svg>\n		<div class="player-loading-status">loading stream</div>   \n	</div>	\n	<!-- Controls -->\n	<div id="media-controls" ng-show="playerInitialized && controlsEnabled" ng-mousemove="onmouseMove(4000)" ng-mouseout="onmouseOut(1000)">\n		<!-- gradient background: spotlight, embed -->\n		<div class="player-grad"></div>\n		<!-- paywall -->\n		<div ng-if="subEnabled && !subscribed && paywall" class="player-overlay" ng-include="\'partials/sub/detailPlayerPaywall.html\'"></div>\n\n		<div ng-if="playerOverlay" class="player-overlay" ng-include="\'partials/sub/detailPlayerOverlay.html\'"></div>\n		<div ng-if="playerBlack" class="player-overlay" ng-include="\'partials/sub/detailPlayerBlack.html\'"></div>\n		<!-- fullscreen hitarea -->\n		<div ng-click="doubleClickFullscreen()" class="player-full-hitarea" ng-show="playerControls"></div>\n		<!-- controls bar -->\n		<div id="player-controls-bar" class="player-show-animated" ng-show="playerControls">\n			<!-- play/pause, volume mute -->\n			<div id="playerControls"></div>\n			<!-- volume slider -->\n			<div id="player-volume-slider" ui-slider="sliderOptions" ng-model="playerVolume"></div>\n			<!-- right -->\n			<div id="player-controls-right">\n				<!-- quality indicator & menu -->\n				<span class="player-quality-wrap" ng-click="toggleSettings()" ng-show="type==\'live\' && playerConfig.clip.bitrates.length > 1"> \n					<div class="player-quality-button">  \n						<span class="player-quality-icon bars-{{(playerConfig.settings.delBitrates.length) ? playerConfig.clip.bitrates.length : playerConfig.clip.bitrates.length - 1}}" ng-show="playerConfig.bitrate<5000">\n							<span ng-repeat="bitrate in playerConfig.clip.bitrates" ng-class="{\'active\': playerConfig.bitrate==bitrate.bitrate && bitrate.bitrate<5000}" ng-show="bitrate.bitrate<5000"></span>\n						</span>\n						{{playerConfig.label}}\n					</div>\n					<div class="player-controls-menu player-show-animated nono" ng-show="playerSettings">\n						<a ng-repeat="bitrate in playerConfig.settings.delBitrates" ng-click="openPaywall()">{{bitrate.label}}</a>\n						<a ng-repeat="bitrate in playerConfig.clip.bitrates.slice().reverse()" ng-click="brSwitch(bitrate.bitrate,true)" ng-class="{\'bitrateSelected\': playerConfig.bitrate == bitrate.bitrate}">{{bitrate.label}}</a>\n					</div>\n				</span>\n				<!-- popout chat -->\n				<!-- <a class="playericon-chat" ng-show="type==\'live\'" ng-click="popoutChat(\'{{media.media_name}}\');"></a> -->\n				<!-- popout -->\n				<a class="player-popout" ng-show="type==\'live\' && !popout && !dashboard" ng-click="popoutPlayer(\'{{media.media_name}}\');">\n					<div class="player-tooltip">Popout</div>\n				</a>\n				<!-- fullscreen -->\n				<a class="player-fullscreen" ng-click="toggleFullscreen()" ng-class="{active:isFullscreen}" ng-hide="dashboard">\n					<div class="player-tooltip">Fullscreen</div>\n				</a>\n				<!-- chromecast -->\n				<a class="playericon-cast {{castData.receiverIcon}}" ng-show="castData.showReceiverPicker && !recplayer && !dashboard" id="receiverPicker" ng-controller="CastCtrl" ng-click="selectReceiver()">\n					<div class="player-tooltip">Cast to Tv</div>\n				</a>\n			</div>\n		</div>\n	</div>\n</div>\n'), $templateCache.put("partials/sub/detailPlayerBlack.html", '<div class="paywall-close icon-close" ng-click="closeadsOverlay()"></div>\r\n<div class="paywall-content-wrap">\r\n	<div class="paywall-content">\r\n		<div class="paywall-title-black">\r\n			Sorry, we are unable to load a message from our sponsors.\r\n		</div>\r\n		<div class="paywall-title-black-sub">\r\n			If you use ad-blocking software, please disable it to allow {{media.media_name}} to continue stream the best live gaming content.\r\n		</div>\r\n		<!-- {{adscounter}}  -->\r\n	</div>\r\n</div>'), $templateCache.put("partials/sub/detailPlayerEmbed.html", '<div id="mediaplayer" class="embed-player">\n	<div id="player" style="background-image: url({{config.imgUrl}}{{media.media_thumbnail_large}})" ng-show="media.media_name && media.media_is_live!=0">\n		<div ng-if="!auth && media.media_name" ng-include="\'partials/sub/playerPassword.html\'"></div>\n		<!-- live channel meta -->\n		<div ng-show="!autoplay && media && media.media_is_live>0 && !playerisloading" class="player-play" ng-click="loadPlayer()">\n			<!-- play button -->\n			<div class="playericon-play" ng-show="auth"></div>\n		</div>\n\n		<!-- channel meta -->\n		<div id="player-channel-meta">\n			<div class="player-channel-live">Live</div>\n			<a class="player-channel-logo round" ng-href="{{media.channelUrl}}" target="_blank" style="background-image: url({{config.imgUrl}}{{media.channel.user_logo}})"></a>\n			<a class="player-channel-name" ng-href="{{media.channelUrl}}" target="_blank">{{media.media_display_name}}</a>\n			<div class="player-channel-status">{{media.media_status}}</div>\n			<span class="player-channel-viewers" ng-show="media.media_views">{{media.media_views}}&nbsp;View{{media.media_type_id==1 ? \'er\' : \'\'}}{{media.media_views!=1 ? \'s\' : \'\'}}</span>\n			<a class="player-channel-game" ng-href="/game/{{media.category_seo_key}}" target="_blank">{{media.category_name}}</a>\n		</div>\n	</div>\n\n	<!-- offline -->\n	<div id="player-channel-offline" ng-show="media.media_is_live!=1 && media">\n		<a class="player-channel-logo round" ng-href="{{media.channelUrl}}" target="_blank" style="background-image: url({{config.imgUrl}}{{media.channel.user_logo}})"></a>\n		<a class="player-channel-name" ng-href="{{media.channelUrl}}" target="_blank">{{media.media_display_name}}</a>\n		<div class="player-channel-status">is offline</div>   \n	</div>\n\n	<!-- loading -->\n	<div id="player-loading" class="player-show-animated" ng-show="playerisloading==true && media.media_is_live==1">\n		<div class="player-loading-logo round" style="background-image: url({{config.imgUrl}}{{media.channel.user_logo}})"></div>\n		<svg height="130" width="130" id="player-loading-spinner" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n			<circle opacity=".2" cx="65" cy="65" r="64" stroke="white" stroke-width="3" fill="transparent" />\n			<path fill="white" d="M64.3,0v2C99.4,2,128,30.6,128,65.7h2C130,29.4,100.6,0,64.3,0z">\n				<animateTransform attributeName="transform" type="rotate" from="0 65 65" to="360 65 65" dur="1.3s" repeatCount="indefinite" />\n			</path>    \n			<path fill="white" d="M64.3,0v2C99.4,2,128,30.6,128,65.7h2C130,29.4,100.6,0,64.3,0z">\n				<animateTransform attributeName="transform" type="rotate" from="0 65 65" to="360 65 65" dur="1.5s" repeatCount="indefinite" />\n			</path> \n			<path fill="white" d="M64.3,0v2C99.4,2,128,30.6,128,65.7h2C130,29.4,100.6,0,64.3,0z">\n				<animateTransform attributeName="transform" type="rotate" from="0 65 65" to="360 65 65" dur="2s" repeatCount="indefinite" />\n			</path>\n		</svg>\n		<div class="player-loading-status">loading stream</div>   \n	</div>\n\n	<!-- channel meta -->\n	<div id="player-channel-meta" ng-show="playerControls">\n		<div class="player-channel-live">Live</div>\n		<a class="player-channel-logo round" ng-href="{{media.channelUrl}}" target="_blank" style="background-image: url({{config.imgUrl}}{{media.channel.user_logo}})"></a>\n		<a class="player-channel-name" ng-href="{{media.channelUrl}}" target="_blank">{{media.media_display_name}}</a>\n		<div class="player-channel-status">{{media.media_status}}</div>\n		<span class="player-channel-viewers" ng-show="media.media_views">{{media.media_views}}&nbsp;Viewer{{media.media_views!=1 ? \'s\' : \'\'}}</span>\n		<a class="player-channel-game" ng-href="/game/{{media.category_seo_key}}" target="_blank">{{media.category_name}}</a>\n	</div>\n\n	<!-- hitbox logo -->\n	<a class="playericon-hitbox" ng-show="auth && controlsEnabled && embed" ng-href="{{media.channelUrl}}" target="_blank" ng-class="{withControls:playerControls}"></a>\n\n	<!-- Controls -->\n	<div id="media-controls" ng-show="playerInitialized && controlsEnabled" ng-mousemove="onmouseMove(4000)" ng-mouseout="onmouseOut(1000)">\n		<!-- gradient background: spotlight -->\n		<div class="player-grad"></div>\n		<!-- fullscreen hitarea -->\n		<a ng-show="embed && playerControls" ng-href="{{media.channelUrl}}" target="_blank" class="player-full-hitarea"></a>\n		<!-- paywall -->\n		<div ng-if="subEnabled && !subscribed && paywall" class="player-overlay" ng-include="\'partials/sub/detailPlayerPaywall.html\'"></div>\n\n		<div ng-if="playerOverlay" class="player-overlay" ng-include="\'partials/sub/detailPlayerOverlay.html\'"></div>\n\n		<!-- controls bar -->\n		<div id="player-controls-bar" class="player-show-animated" ng-show="playerControls">\n			<!-- play/pause, volume mute -->\n			<div id="playerControls"></div>\n			<!-- volume slider -->\n			<div id="player-volume-slider" ui-slider="sliderOptions" ng-model="playerVolume"></div>\n			<!-- right -->\n			<div id="player-controls-right">\n				<!-- quality indicator & menu -->\n				<span class="player-quality-wrap" ng-click="toggleSettings()" ng-show="type==\'live\' && playerConfig.clip.bitrates.length > 1">   \n					<span class="player-quality-icon bars-{{(playerConfig.settings.delBitrates.length) ? playerConfig.clip.bitrates.length : playerConfig.clip.bitrates.length - 1}}" ng-show="playerConfig.bitrate<5000">\n						<span ng-repeat="bitrate in playerConfig.clip.bitrates" ng-class="{\'active\': playerConfig.bitrate==bitrate.bitrate && bitrate.bitrate<5000}" ng-show="bitrate.bitrate<5000"></span>\n					</span>\n					{{playerConfig.label}}\n					<div class="player-controls-menu player-show-animated nono" ng-show="playerSettings">\n						<a ng-repeat="bitrate in playerConfig.settings.delBitrates" ng-click="openPaywall()">{{bitrate.label}}</a>\n						<a ng-repeat="bitrate in playerConfig.clip.bitrates.slice().reverse()" ng-click="brSwitch(bitrate.bitrate,true)" ng-class="{\'bitrateSelected\': playerConfig.bitrate == bitrate.bitrate}">{{bitrate.label}}</a>\n					</div>\n				</span>\n				<!-- popout chat -->\n				<a class="playericon-chat" ng-show="type==\'live\'" ng-click="popoutChat(\'{{media.media_name}}\');">\n					<div class="player-tooltip">Open Chat</div>\n				</a>\n				<!-- popout -->\n				<a class="player-popout" ng-show="type==\'live\' && !popout" ng-click="popoutPlayer(\'{{media.media_name}}\');">\n					<div class="player-tooltip">Popout</div>\n				</a>\n				<!-- fullscreen -->\n				<a class="player-fullscreen" ng-click="toggleFullscreen()" ng-class="{active:isFullscreen}">\n					<div class="player-tooltip">Fullscreen</div>\n				</a>\n				<!-- chromecast -->\n				<a class="playericon-cast {{castData.receiverIcon}}" ng-show="castData.showReceiverPicker" id="receiverPicker" ng-controller="CastCtrl" ng-click="selectReceiver()">\n					<div class="player-tooltip">Cast to Tv</div>\n				</a>\n			</div>\n		</div>\n	</div>\n</div>'), $templateCache.put("partials/sub/detailPlayerMobile.html", '<div class="mediaplayer" id="player">\n<!--\n<a href="{{media_mobile_url}}">{{media_mobile_url}}</a>\n-->\n\n<video id="mobilePlayer" ng-src="{{media_mobile_url}}" poster="{{posterUrl}}" height="100%" width="100%" controls autoplay="" webkit-playsinline="webkit-playsinline" image-fit="contain"></video>\n</div>\n<div ng-show="castData.showReceiverPicker" id="receiverPicker" ng-controller="CastCtrl">\n	<a href="javascript:;" ng-click="selectReceiver()"><img ng-src="test/chromecast/img/icons/drawable-hdpi/ic_media_route_{{castData.receiverIcon}}_holo_light.png"></a>\n	<br>\n	<a ng-show="castData.showCastIcons" ng-click="castMovie()" href="{{movie.src}}">[cast]</a>\n</div>'), $templateCache.put("partials/sub/detailPlayerOverlay.html", '<div class="paywall-close icon-close" ng-click="closePlayerOverlay()"></div>\r\n<div class="paywall-content-wrap">\r\n	<div class="paywall-content">\r\n		<div class="paywall-title">This broadcast starts shortly. Thanks for your patience!</span></div>\r\n	</div>\r\n</div>'), $templateCache.put("partials/sub/detailPlayerPaywall.html", '<div class="paywall-close icon-close" ng-click="closePaywall()"></div>\n<div class="paywall-content-wrap">\n	<div class="paywall-content">\n		<div class="paywall-title">Subscribe to <span>{{media.media_type_id==1?media.media_display_name:media.media_user_name}}</span></div>\n		<div class="paywall-features-wrap">\n			<span ng-repeat="benefit in subscription.subscription.benefits" class="paywall-feature"><span>{{benefit.text}}</span></span>\n		</div>\n		<div class="paywall-price">monthly {{subscription.subscription.plan.plan_currency}} {{subscription.subscription.plan.plan_charge}}</div>\n		<a ng-if="embed" href="{{subscribeUrl}}" target="_blank">\n			<button class="btn-green paywall-button">Subscribe</button>\n		</a>\n		<button ng-if="!embed" class="btn-green paywall-button" ng-click="gotoSubscribeUrl()">Subscribe</button>\n	</div>\n</div>'), $templateCache.put("partials/sub/detailPlayerSpotlight.html", '<div id="mediaplayer">\r\n    <!-- Player -->\r\n    <div class="mediaplayer" id="player">\r\n        <div ng-if="!auth && mediaid" ng-include="\'partials/sub/playerPassword.html\'"></div>\r\n    </div>\r\n\r\n    <div class="player-spotlight-overlay" ng-click="go(media.channelUrl)" ng-mousemove="onmouseMove(4000)" ng-mouseout="onmouseOut(1000)">\r\n        <div class="user-logo round" lazy-load="{{config.imgUrl}}{{media.channel.user_logo_small}}"></div>\r\n        <div class="title">\r\n            <div class="user-name">{{media.media_display_name}}</div>\r\n            <div class="user-status">{{media.media_status}}</div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Controls -->\r\n    <div class="mediaControls spotlight-controls" ng-mousemove="onmouseMove(4000)" ng-mouseout="onmouseOut(1000)">\r\n        <div class="controlswrapper" ng-show="!playerControls">\r\n            <div class="controlsBar">\r\n\r\n                <div class="controlsRight">\r\n                    <div id="playerControls" class="playerControls"></div>\r\n                    <div ui-slider="sliderOptions" ng-model="playerVolume" style="width:60px;margin-left:48px;"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="controlswrapper" ng-show="playerControls">\r\n            <a class="" ng-href="{{media.channelUrl}}" style="position:absolute;display:block;top:0;bottom:0;width:100%"></a>\r\n\r\n            <div class="controlsBar">\r\n                <div id="playerControls" class="playerControls"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n'), $templateCache.put("partials/sub/detail_content_follower.html", '<section class="follower">\r\n    <ul class="userlist">\r\n        <li ng-repeat="follow in followerList" class="cf">\r\n            <a href="/{{follow.user_name}}">\r\n                <img class="userlist-logo round" ng-src="{{config.imgUrl}}{{follow.user_logo_small}}" />\r\n                <div class="userlist-name">{{follow.user_name}}</div>\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <div ng-click="getFollowers()" ng-show="followerList.length < followers_total">... more</div>\r\n        </li>\r\n    </ul>\r\n</section>\r\n'), $templateCache.put("partials/sub/detail_content_following.html", '<section class="following">\r\n    <ul class="userlist">\r\n        <li ng-repeat="user in followingList" class="cf">\r\n            <a href="/{{user.user_name}}">\r\n                <img class="userlist-logo round" ng-src="{{config.imgUrl}}{{user.user_logo_small}}" />\r\n                <div class="userlist-name">{{user.user_name}}</div>\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <div ng-click="getFollowingList()" ng-show="followingList.length < following_total">... more</div>\r\n        </li>\r\n    </ul>\r\n</section>\r\n'), $templateCache.put("partials/sub/detail_content_team.html", '<section ng-controller="TeamController" class="detail-team">\r\n\r\n    <div class="team-infobox">\r\n        <div class="team-meta">\r\n            <div class="team-cover-wrap">\r\n                <div class="team-cover" ng-if="team.info.group_cover" ng-style="{\'background-image\' : \'url(\' + config.imgUrl + team.info.group_cover + \')\'}"></div>\r\n                <div class="team-cover" ng-if="team.info.group_cover == \'\' || team.info.group_cover == null" ng-style="{\'background-image\' : \'url(\' + config.imgUrl + config.fallbackImages.teamCover + \')\'}"></div>            \r\n            </div>\r\n            <img class="team-logo round" ng-if="team.info.group_logo_large" ng-src="{{config.imgUrl}}{{team.info.group_logo_large}}" ng-click="go(\'/team/\'+media.team_name)" />\r\n            <img class="team-logo round" ng-if="team.info.group_logo_large == \'\' || team.info.group_logo_large == null" ng-src="{{config.imgUrl}}{{config.fallbackImages.teamLogo}}" ng-click="go(\'/team/\'+media.team_name)" />\r\n            <div class="team-name">\r\n                <a href="/team/{{media.team_name}}">{{team.info.group_name}}</a>\r\n            </div>\r\n            <div class="team-description">\r\n                {{team.info.group_text}}\r\n            </div>\r\n        </div>\r\n        <div class="team-members">\r\n            <userlist team="team_name" show-user-options="true"></userlist>\r\n        </div>\r\n    </div>\r\n    <div class="team-thumbs">\r\n        <div ng-show="lists.liveCount>0">\r\n            <h1>Live now</h1>\r\n            <mediaList type="live" limit="" filter="" size="mid" team-name="{{team_name}}" wait-for="teamName" live-only="true" public-length="lists.liveCount"></mediaList>\r\n        </div>\r\n        <div ng-show="lists.videoCount>0">\r\n            <h1>Videos</h1>\r\n            <mediaList type="video" limit="5" filter="recent" size="mid" team-name="{{team_name}}" wait-for="teamName" public-length="lists.videoCount"></mediaList>\r\n        </div>\r\n        <div ng-show="videoCount<=0">\r\n            <h1>No Videos</h1>\r\n        </div>\r\n    </div>\r\n\r\n</section>\r\n'), $templateCache.put("partials/sub/detail_content_video.html", '<section class="detail-videos">\r\n    <div class="video-filter">\r\n        <a class="tab-item" ng-click="videoFilter=\'recent\'" ng-class="{active:videoFilter==\'recent\'}">Recent</a>\r\n        <a class="tab-item" ng-click="videoFilter=\'popular\'" ng-class="{active:videoFilter==\'popular\'}">Most Popular</a>\r\n    </div>\r\n    <mediaList type="video" limit="12" show-more="true" filter="{{videoFilter}}" page="{{list.site}}" size="mid" lines="2" user="{{media.media_user_name}}" wait-for="user"></mediaList>\r\n</section>\r\n'), $templateCache.put("partials/sub/detail_infobox.html", '<div id="detail-infobox">\n\n    <div class="viewers">\n        <span tooltip="current viewers" tooltip-placement="top" tooltip-append-to-body="true" ng-hide="media.media_is_live==0">{{media.media_views | number}}</span><span ng-show="media.media_type == \'video\'">&nbsp;View{{media.media_views!=1 ? \'s\' : \'\'}}</span>\n    </div> \n\n	<div class="channel-meta">\n		<a class="logo round" href="/{{media.media_user_name}}" ng-style="userImg()"></a>\n		<a class="name" href="/{{media.media_user_name}}">{{media.media_display_name}}</a>\n	</div>\n\n    <div class="stream-meta">\n        <div class="status" ng-show="media.media_is_live">\n            <span>{{media.media_status}}</span>\n        </div>\n        <div class="sub" ng-hide="media.media_is_live==0">\n            <span class="time" ng-show="media.media_type_id == 1">Live for {{media.media_live_time}}h</span>\n            <span class="date" ng-if="media.media_type_id == 2">{{media.media_time_ago}}</span>\n            <a class="game" ng-show="media.category_name" ui-sref="browse-game({game_name: media.category_seo_key})">{{media.category_name}}</a>\n        </div>\n        <!--\n        <div class="views" ng-show="media.media_type == \'video\'">\n            <span>{{media.media_views}}</span> \n            <span>View{{media.media_views!=1 ? \'s\' : \'\'}}</span>\n        </div> \n        -->\n    </div>\n\n    <!--    \n    <div class="buttons">\n        <followbutton follow-id="{{media.media_user_id}}"></followbutton>\n        <subbutton medianame="{{media.media_name}}"></subbutton>\n    </div> \n    -->\n\n</div>'), $templateCache.put("partials/sub/detail_more_popover.html", '<!-- \n<div class="social">\n    <label>Share to:</label>\n    <div ng-click="fbShare()" class="share-facebook"></div>\n    <div ng-click="tweet()" class="share-twitter"></div>\n    <div ng-click="reddit()" class="share-reddit"></div>\n</div> \n-->\n<div class="url">\n    <label>Link</label>\n    <textarea class="link" ng-model="meta.url" readonly="true" onClick="this.select();"></textarea>\n</div>\n<div class="url">\n    <label>Embed Stream</label>\n    <textarea class="embed" ng-model="embedPlayer" readonly="true" onClick="this.select();"></textarea>\n</div>\n<div class="url">\n    <label>Embed Chat</label>\n    <textarea class="embed" ng-model="embedChat" readonly="true" onClick="this.select();"></textarea>\n</div>\n<!-- \n<div class="twBtn">\n    <a href="https://twitter.com/hitboxlive" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false">@hitboxlive folgen</a>\n    <script async src="//platform.twitter.com/widgets.js"></script>\n</div>\n<div class="fbBtn">\n    <iframe src="{{fbLikeUrl}}" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:100px; height:30px;" allowTransparency="true"></iframe>\n</div>      \n -->\n<a class="menu-item icon-flag" ng-click="initReport()">Report</a>\n\n<div ng-if="$root.session && $root.session.superadmin == \'1\'">\n	<div ng-if="ingest" class="ingest">\n		<div>IP Address: {{ingest.client.address}}</div>\n		<div>Client: {{ingest.client.flashver}}</div>\n		<div>Video: {{ingest.meta.video}}</div>\n		<div>Audio: {{ingest.meta.audio}}</div>\n		<div>Resolution: {{ingest.meta.width}}x{{ingest.meta.height}}</div>\n		<div>FPS: {{ingest.meta.framerate}}</div>\n	</div>\n	<a class="menu-item" ng-click="$rootScope.session.user_name = media.media_user_name; go(\'/settings/\' + media.media_user_name + \'/livestreams\', true)">Channel Settings</a>\n	<a class="menu-item" ng-click="restartTranscodings(this)">Restart Transcodings</a>\n	<a class="menu-item" ng-click="dropClient(this)">Drop Client</a>\n	<a class="menu-item" ng-controller="BanUserDialogCtrl" ng-click="openDialog()" class="btn-red">Warn/Ban User</a>\n</div>'), $templateCache.put("partials/sub/detail_profile.html", '<section class="profile">\n    <!-- infobox mobile -->\n    <div class="" ng-if="isMobile" ng-include="\'partials/sub/detail_infobox.html\'"></div>\n    <div class="profile-head-mobile" ng-show="isMobile"><!-- Profile --></div>\n    <!-- edit profile -->\n    <div ng-if="$parent.isAdmin">\n        <button class="edit btn-blue" ng-if="!channelOptions.editProfile" ng-click="channelOptions.editProfile=true">Edit</button>\n        \n        <div class="profile-edit-wrap cf" ng-if="channelOptions.editProfile && !saved">\n\n            <form accept-charset="UTF-8" class="" name="DescUploadForm" ng-upload action="{{description_upload_url}}" novalidate>\n                <div class="cf">\n                    <!-- submit form -->\n                    <span class="info">Put your profile information into the box below.\n                        <br />You can format text and add images and links <a href="http://help.hitbox.tv/customer/portal/articles/1431375-your-profile-page" target="_blank">using markdown</a>.</span>\n                    <br />\n                    <br />\n                    <!--START show when image uploaded -->\n                    <div class="imageUrl">\n                        <div class="info" ng-show="userImages">Copy the image\'s path and paste it below at the desired position.</div>\n                        <div ng-repeat="image in userImages" class="flex-row">\n                            <input class="flex-grow" type="text" value="![img]({{appSettings.imgUrl}}{{image.image_path}})" />\n                            <button class="delete-btn icon-cancel icon-only btn-none" ng-click="deleteUserImage(image, $event)"></button>\n                        </div>\n                        <div file-button class="icon-upload btn uploadBtn">Select Image</div>\n                        <input type="submit" class="uploadBtn" value="Upload" upload-submit="uploadComplete(contents, completed)" />\n                    </div>\n                </div>\n            </form>\n            <form accept-charset="UTF-8" class="" name="livestreamForm" novalidate>\n\n                <button class="btn-green done" type="submit" ng-click="update($event)" ng-class="{\'disabled\':save.save_status == \'saved\'}">\n                    <span class="icon-spin-1 animate-spin icon-only" ng-show="save.save_status == \'saving\'"></span>\n                    <span ng-show="save.save_status == \'saved\'">Done</span>\n                    <span ng-show="save.save_status == \'error\'">Error saving</span>\n                    <span ng-show="save.save_status == \'none\'">Save</span>\n                </button>\n\n                <textarea class="profile-textarea" name="media_description" ng-model="media.media_description" ng-change="save.save_status = \'none\'"></textarea>\n            </form>\n\n        </div>\n    </div>\n    <div ng-if="!channelOptions.editProfile" class="profile-markdown" ng-bind-html="profileMD"></div>\n</section>\n'), $templateCache.put("partials/sub/detail_report.html", '<div class="modalClose" ng-click="close()">&times;</div>\r\n<form class="report-form">\r\n    <section class="head">Report this User or Video:</section>\r\n    <section class="inputs cf">\r\n        <div class="">\r\n            <!-- <div class="subHead">Reason:</div> -->\r\n            <ul class="radioBtns">\r\n                <li>\r\n                    <input type="radio" name="report-radio" id="r-r-1" value="Copyright Infringement" ng-model="report.reason" />\r\n                    <label for="r-r-1">Copyright Infringement</label>\r\n                </li>\r\n                <li>\r\n                    <input type="radio" name="report-radio" id="r-r-4" value="Non-Gaming Content" ng-model="report.reason" />\r\n                    <label for="r-r-4">Non-Gaming Content</label>\r\n                </li>\r\n                <li>\r\n                    <input type="radio" name="report-radio" id="r-r-2" value="Self-Harm" ng-model="report.reason" />\r\n                    <label for="r-r-2">Self-Harm</label>\r\n                </li>\r\n                <li>\r\n                    <input type="radio" name="report-radio" id="r-r-5" value="Harassment" ng-model="report.reason" />\r\n                    <label for="r-r-5">Harassment</label>\r\n                </li>\r\n                <li>\r\n                    <input type="radio" name="report-radio" id="r-r-6" value="Staff Impersonation" ng-model="report.reason" />\r\n                    <label for="r-r-6">Staff Impersonation</label>\r\n                </li>\r\n                <li>\r\n                    <input type="radio" name="report-radio" id="r-r-7" value="Spam" ng-model="report.reason" />\r\n                    <label for="r-r-7">Spam</label>\r\n                </li>\r\n                <li>\r\n                    <input type="radio" name="report-radio" id="r-r-8" value="Other Terms-of-Service Violation" ng-model="report.reason" />\r\n                    <label for="r-r-8">Other Terms-of-Service Violation</label>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div class="">\r\n            <!-- <div class="subHead">Message:\r\n                <span>(required)</span>\r\n            </div> -->\r\n            <textarea name="message" id="" placeholder="Message" ng-model="report.message"></textarea>\r\n        </div>\r\n    </section>\r\n    <!--\r\n    <section class="note">\r\n        We review reports to determine whether there has been a violation of the <a href="/content/terms">terms of service</a>, \r\n        or it is inappropriate for other viewers. (Abuse of this feature is a violation of the <a href="/content/terms">terms of service</a>.)\r\n    </section>\r\n    -->\r\n\r\n    <section class="submitWrap">\r\n        <div class="human">Please prove you are human</div>\r\n        <div vc-recaptcha class="captchaWrap" theme="white" key="6LciNPASAAAAAIvWyHGAOQUE0E0wiKvI1XkIHHHq"></div>\r\n        <button class="btn-green" ng-click="report.sendReport()">Send report</button>\r\n    </section>\r\n</form>\r\n'), $templateCache.put("partials/sub/drawer.html", '\n\n\n\n\n\n<mediaList id="live-list" \n	type="live" \n	limit="30"\n	filter="popular" \n	page="1" \n	size="list" \n	lines="{{liveLines}}" \n	lineoffset="2" \n	show-more="true" \n	fast="" \n	follower-id="{{followerId}}" \n	show-hidden="showHidden" \n	only-hidden="onlyHidden" \n	game="{{gameFilter}}" \n	processing="loading.live">\n</mediaList>'), $templateCache.put("partials/sub/drop_upload.html", '<div class="uploadImg" \n    ng-file-drop="uploadDrop($files)" \n    ng-file-drag-over-class="uploadDragOver" \n    ng-class="{\'uploadLoading\': uploading}">\n    \n\n\n\n        \n    <div ng-if="fallback && udaName==\'Cover\'" class="addImage add-cover">\n        <button class="" ng-click="simulateUpload($event)" tooltip-placement="top" tooltip="Upload a JPG. Maximum Filesize: 500kb. Aspect Ratio: 16:9 format. Recomended: 1920x1080" tooltip-append-to-body="true">Add a cover</button>\n        <input type="file" ng-file-select="uploadDrop($files)">\n    </div>\n\n    <div ng-if="fallback && udaName==\'Logo\'">\n        <div class="add-logo">\n            <div ng-click="simulateUpload($event)" tooltip-placement="top" tooltip="Upload a JPG or PNG max.500kb and min. 200x200pixels" tooltip-append-to-body="true">Add image</div>\n            <input type="file" ng-file-select="uploadDrop($files)">\n        </div>\n    </div>\n\n    <li ng-if="!fallback" class="dropdown changeImage " ng-show="showbutton">\n        <button class="dropdown-toggle icon-pencil icon-only btnTransDark"></button>\n        <ul class="dropdown-menu">\n            <li>\n                <a ng-click="simulateUpload($event)">Upload ...\n                <div class="tip">\n                    JPG or PNG<br />\n                    max. 500kb<br />\n                    min. {{udaName==\'Cover\' ? \'1600x900\' : \'200x200\'}}px\n                </div>\n                </a>\n                <input type="file" ng-file-select="uploadDrop($files)">\n<!--                 <div class="tip">Jpg or png. Max filesize 500kb</div> -->\n            </li>\n            <li ng-show="showdelete">\n                <a ng-click="deleteImage()" ng-show="showbutton">Remove ...</a>\n            </li>\n        </ul>\n    </li>\n\n    <div class="loadAnim"><div class="icon-spin-1"></div></div>\n    <div class="dashedLine"></div>\n    <div class="image" back-img="{{image_background}}"></div>\n</div>'), $templateCache.put("partials/sub/footer.html", '<div class="{{section}}-width">\n	<div class="footer-main">\n		<div class="footer-row-1">\n			<div class="promo">\n				<div>\n					<a href="http://switch.to.hitbox.tv" class="highlight header" target="_blank">Make the Switch!</a>\n				</div>\n				<div class="small">\n					You can do much more.\n				</div>\n				<br>\n				<div>\n					<a href="content/partnerprogram" class="highlight header" target="_blank">Partner Program</a>\n				</div>\n				<div class="small">\n					Grow and serve your community <br />with exclusive features.\n				</div>\n			</div>\n\n			<div class="social">\n				<div>\n					<a href="http://blog.hitbox.tv" class="icon-hitbox-icon-s highlight" target="_blank">Blog</a>\n				</div>\n				<div>\n					<a href="http://facebook.com/hitboxlive" class="icon-facebook-squared" target="_blank">Facebook</a>\n				</div>\n				<div>\n					<a href="http://twitter.com/hitboxlive" class="icon-twitter" target="_blank">Twitter</a>\n				</div>     \n			</div>\n\n			<div class="support">\n				<div>\n					<a ng-controller="FeedBackDialogCtrl" ng-click="openDialog()" class="icon-megaphone">Feedback</a>\n				</div>\n				<div>\n					<a href="http://help.hitbox.tv" class="icon-help-circled" target="_blank">Help &amp; Support</a>\n				</div>  \n			</div>\n		</div>\n\n\n\n		<div class="footer-row-2">\n	    	<!-- <div class="small">Get the mobile app</div> -->\n	    	<!-- <a href="https://play.google.com/store/apps/details?id=hitbox.app&hl=en" target="_blank" class="img-link gplay"></a> -->\n	    	<div class="masthead">\n	    		<span class="copy">Â© hitbox 2015</span>\n	    		<a href="legal/terms-of-use">Terms</a>\n	    		<a href="legal/privacy-policy">Policy</a>\n	    		<a href="legal/imprint">Imprint</a> \n	    	</div>\n	    </div>\n\n	<!--     <div class="left">\n	        <div class="links">   \n	            <a href="http://developers.hitbox.tv/">Developers</a>   \n	            <div class="btn-wrap">\n	                <a href="https://twitter.com/hitboxlive" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false">@hitboxlive folgen</a>\n	                <script src="//platform.twitter.com/widgets.js"></script>\n	            </div>\n	            <div class="btn-wrap">\n	                <iframe src="https://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fhitbox.tv&amp;width&amp;layout=button&amp;action=like&amp;show_faces=false&amp;share=false&amp;height=20&amp;appId=177611159072832" scrolling="no" frameborder="0" style="border:none; overflow:hidden; height:20px;width:100px" allowTransparency="true"></iframe>\n	            </div>\n	        </div>\n	    </div> -->\n	</div>\n</div>'), $templateCache.put("partials/sub/hitbox-icon.html", '<svg class="hitbox-icon" x="0px" y="0px" viewBox="-201 251.3 209 290.7" xml:space="preserve">\n	<polygon class="rightleg" points="-92.2,542 -34.1,509 -34.1,472.2 -92.2,495.6 "/>\n	<polygon class="rightarm" points="-26.6,354.5 8,358.9 8,448.6 -26.6,461.2 "/>\n	<polygon class="torso" points="-96.5,345.7 -158.9,353.6 -158.9,463.9 -96.5,486.5 -34.1,463.9 -34.1,353.6 "/>\n	<polygon class="leftleg" points="-158.9,472.2 -100.7,495.6 -100.7,541.9 -158.9,509 "/>\n	<polygon class="leftarm" points="-201,358.9 -166.4,354.5 -166.4,461.2 -201,448.7 "/>\n	<polygon class="head" points="-96.7,251.3 -151.3,276.1 -151.3,345 -96.7,336.3 -41.7,345 -41.7,276.2 "/>\n</svg>'), $templateCache.put("partials/sub/home_sidebar.html", '<div id="home-sidebar">\n	<!-- games  -->\n	<div class="browse-games" ng-class="{active:browseCat}">\n		<div class="browse-games-thumbs cf">\n			<!-- following icon logged OUT -->\n			<ul class="game-thumbs grid" ng-hide="loggedIn">\n				<li class="following-cover none"\n					generic-popover \n					gp-width="300" \n					gp-height="400"\n					gp-position="right" \n					gp-template="partials/sub/popover_follow_loggedout.html" \n					gp-classes=\'["popover-follow","nono"]\' \n					gp-on="click">\n					<a>\n						<div class="heart icon-heart"></div>\n					</a>\n				</li>\n			</ul>\n			<!-- following icon logged IN -->\n			<ul class="game-thumbs grid" ng-show="loggedIn" ng-class="{active:browseCat==\'favorite\'}" controller="FavoriteController">\n				<li class="following-cover" ng-class="{active:browseCat==\'favorite\', none:sidebar.favoriteLength<1}">\n					<a ui-sref="browse-favorite">\n						<div class="heart icon-heart"></div>\n						<div class="counter">{{sidebar.favoriteLength > 0 ? sidebar.favoriteLength : \'\'}}<!-- <div>Live</div> --></div>\n						<div class="title">Channels <br> You Follow</div>\n					</a>\n				</li>\n			</ul>\n			<!-- games -->\n			<gamelist type="grid" filter="" limit="11" liveonly="true" ng-click="$parent.initProcessing()"></gamelist>\n		</div>\n		<div class="browse-games-dummies cf">\n			<ul class="game-thumbs grid">\n				<li class="" ng-repeat="i in getNumber(12) track by $index"></li>\n			</ul>			\n		</div>\n		<div class="show-more" ng-click="">\n			<a ui-sref="games({})">Show All Live Games</a>\n		</div>\n	</div>\n	<!-- following -->\n	<div class="browse-following">\n<!-- 		<div class="signin-invitation-banner" ng-show="!loggedIn">\n			Sign In to:\n			Follow channels you like\n			<span ng-controller="LoginCtrl" ng-click="openDialog()">\n				Sign in to follow\n			</span>\n		</div> -->\n		<div class="" ng-show="loggedIn && sidebar.favoriteLength>0">\n			<a class="header icon-right" ui-sref="browse-favorite">Live Channels you Follow</a>\n            <div class="box">\n				<followinglist public-length="sidebar.favoriteLength"></followinglist>\n			</div>\n		</div>\n	</div>\n	<!-- social  -->\n\n</div>\n'), $templateCache.put("partials/sub/home_slider.html", '<div class="slider" ng-mouseover="stop()" ng-mouseout="start()" ng-swipe-left="swipeLeft()" ng-swipe-right="swipeRight()">\n	<div class="arrows">\n		<div ng-click="prev()" class="arrow arrowLeft icon-left-big"></div> \n		<div ng-click="next()" class="arrow arrowRight icon-right-big"></div>\n	</div>\n	<div class="slide" ng-repeat="item in slideList" ng-show="item.visible">\n		<div ng-include="item.src" ng-if="item.src"></div>\n		<div ng-if="item.html" ng-bind-html="item.html"></div>\n	</div>\n</div>'), $templateCache.put("partials/sub/listFeatured.html", '<ul class="featUl">\n    <li ng-repeat="media in media" class="">\n        <a href="/{{media.media_name}}">\n            <div class="featImgWrap">\n                <img fallback-src="/static/img/live/no-tn.jpg" ng-src="{{images[imgIndex].src}}" class="featImg unselectable" ng-controller="featuredAnimation" />\n            </div>\n            <div class="featMeta">\n                <div class="featStatus"><div>{{media.media_display_name}} </div>{{media.media_status | truncate:70}}</div>\n                <div class="featMetaSmall"><span>playing</span> {{media.category_name}}</div>\n                <div class="featMetaSmall">{{media.media_views | number}} <span>are watching</span></div>\n            </div>\n        </a>\n    </li>\n</ul>'), $templateCache.put("partials/sub/listGames_grid.html", '<ul class="game-thumbs grid" ng-class="{\'gameSelected\': $parent.browseCat == \'game\'}">\n	<!-- games -->	\n	<li ng-repeat="game in games"\n		ng-class="{\'active\': currentGameName == game.category_seo_key}" ng-click="selectGame(game)">\n		<a ui-sref="browse-game({game_name:game.category_seo_key})">\n			<div class="gt-img" lazy-load="{{config.imgUrl}}{{game.category_logo_large}}"></div>\n			<div class="gt-title">\n				<div class="gt-name">{{game.category_name}}</div>\n				<div class="gt-stats">\n					<div class="icon-videocam" ng-if="$root.session && $root.session.superadmin == \'1\'">{{game.category_media_count | number}}</div>\n					<div class="icon-eye">{{game.category_viewers | number}}</div>\n				</div>\n			</div>\n		</a>\n	</li>\n</ul>'), $templateCache.put("partials/sub/listGames_list.html", '<ul class="game-thumbs list" ng-class="{\'gameSelected\': $parent.browseCat == \'game\'}">\n	<!-- games -->	\n	<li ng-repeat="game in games" \n		class="cf" \n		ui-sref="browse-game({game_name:game.category_seo_key})"\n		ng-class="{\'active\': currentGameName == game.category_seo_key}" \n		ng-click="selectGame(game)">\n		<div class="gt-img" lazy-load="{{config.imgUrl}}{{game.category_logo_large}}"></div>\n		<div class="gt-title">\n			<div class="gt-name">{{game.category_name}}</div>\n			<div class="gt-stats">\n				<div class="icon-videocam" ng-if="$root.session && $root.session.superadmin == \'1\'">{{game.category_media_count | number}}</div>\n				<div class="icon-eye">{{game.category_viewers | number}}</div>\n			</div>\n		</div>\n	</li>\n</ul>'), $templateCache.put("partials/sub/listLive.html", '<ul class="t1 live">\n    <li ng-repeat="media in media" class="live-list item_{{$index}}" ng-class="{hidden:media.media_hidden, playing_now: media.playing_now}" ng-hide="resetting">\n        <div class="t-wrap" ui-sref="detail({channel: media.media_name})">\n            <div class="t-fallback"></div>\n            <!-- <div class="t-play"></div> -->\n            <div class="t-img" lazy-load="{{config.imgUrl}}{{media.media_thumbnail_large}}"></div>\n            <div class="t-viewers">{{media.media_views | number}}</div>\n            <div class="t-grad"></div>\n            <div class="t-logo round" lazy-load="{{config.imgUrl}}{{media.channel.user_logo_small}}"></div>\n            <img class="t-flag t-flag-{{$index}}" ng-repeat="country in media.media_countries" src="{{config.imgUrl}}/static/img/flags/{{country|lowercase}}.svg" tooltip="{{country|code2Name}}" tooltip-append-to-body="true" tooltip-placement="top" />\n        </div>\n        <div class="t-meta">\n            <a class="t-name" ui-sref="detail({channel: media.media_name})">{{media.media_display_name}}</a>\n            <a class="t-status" ui-sref="detail({channel: media.media_name})">{{media.media_status | truncate:75 }}</a>\n            <a class="t-game" ui-sref="browse-game({game_name: media.category_seo_key})" ng-click="$event.stopPropagation();">{{media.category_name}}</a>\n        </div>\n    </li>\n<!--     <li class="t-more" ng-click="showmore()" ng-show="show_more.show && !processing && !resetting">\n        <div class="t-wrap">\n            <div>Show More</div>\n        </div>\n    </li>\n    <li class="live-list" ng-show="processing || resetting">\n        <div class="t-wrap">\n            <div ng-include="\'partials/sub/hitbox-icon.html\'"></div>\n        </div>\n    </li> -->\n</ul>\n<div class="t-show-more" ng-show="show_more.show && !processing && !resetting">\n	<a ng-click="showmore()">Show more</a>\n</div>'), $templateCache.put("partials/sub/listLive2.html", '<ul>\n    <li ng-repeat="media in media" class="t2Li" id="" ng-class="">\n        <a href="/{{media.media_display_name}}">\n            <img ng-src="{{config.imgUrl}}{{media.media_thumbnail}}" class="t2Img" ng-mouseover="mouseover()" ng-mouseout="mouseout()" />\n            <img ng-src="{{media.channel.user_logo_small}}" class="t2Logo" ng-class="t2Logo">\n        	<div class="t2MetaWrap" ng-class="t2MetaWrap">\n                <div class="t2Meta">\n                    <div class="t2ChannelGame"> | {{media.category_name}}</div>\n                    <div class="t2Viewers">{{media.media_views}}</div>\n  		            <div class="t2Status">{{media.media_display_name}} - {{media.media_status | truncate:90}}</div>\n                </div>\n            </div>\n        </a>\n    </li>\n</ul>'), $templateCache.put("partials/sub/listLiveLarge.html", '<ul class="tUl t2">\n    <li ng-repeat="media in media" class="tLi item_{{$index}}" ng-class="">\n        <a href="/{{media.media_display_name}}">\n            <div class="tImgWrap">\n                <img fallback-src="/static/img/live/no-tn.jpg" ng-src="{{config.imgUrl}}{{media.media_thumbnail}}" class="tImg" ng-mouseover="mouseover()" ng-mouseleave="mouseout()" />\n            </div>\n            <div class="tMetaWrap" ng-class="">\n                <img fallback-src="/static/img/channel/Markus_51b9242fb1138_small.jpg" ng-src="{{media.channel.user_logo_small}}" class="tLogo" ng-class="">\n                <div class="tMeta">\n  		            <div class="tStatus"><span>{{media.media_display_name}}</span>{{media.media_status | truncate:90}}</div>\n                    <div class="tMetaSmall"><span>{{media.media_views}}</span>{{media.category_name}}</div>\n                </div>\n            </div>\n        </a>\n    </li>\n</ul>'), $templateCache.put("partials/sub/listLiveList.html", '<ul class="t3">\n    <li ng-repeat="media in media" class="item_{{$index}}" id="" ng-class="">\n        <a href="/{{media.media_name}}">\n            <div class="tImgWrap">\n                <div class="highlight"></div>\n                <div class="tPlay icon-play"></div>\n                <div class="tLogo round" lazy-load="{{config.imgUrl}}{{media.channel.user_logo_small}}"></div>\n                <div class="tImgRatio">\n                    <div class="tImg" lazy-load="{{config.imgUrl}}{{media.media_thumbnail}}"></div>\n                </div>\n            </div>\n            <div class="tViewers">{{media.media_views | number}}</div>\n            <div class="tMeta">\n                <div class="tName">{{media.media_display_name}}</div>\n                <!-- <div class="tStatus">{{media.media_status | truncate:45}}</div> -->\n                <div class="tStatus">Live for {{media.media_live_time}}</div>\n                \n                <div class="tMetaSmall">{{media.category_name}}</div>\n            </div>\n        </a>\n    </li>\n</ul>'), $templateCache.put("partials/sub/listTeams.html", '<ul class="team-list">\n    <li ng-repeat="team in teams.teams">\n        <a href="/team/{{team.info.group_name}}">\n            <img class="logo round" ng-src="{{config.imgUrl}}{{team.info.group_logo_small}}" fallback-src="{{config.imgUrl}}/static/img/generic/team_logo.jpg" />\n            <div class="name">{{team.info.group_name}}</div>\n        </a>\n    </li>\n</ul>'), $templateCache.put("partials/sub/listUserOnlyLive.html", '<ul class="t1">\n    <li ng-repeat="media in media" ui-animate class="item_{{$index}}">\n        <div class="tMetaWrap">\n            <div class="tLogo round" ng-style="{\'background-image\':\'url(\' + config.imgUrl + media.channel.user_logo_small + \')\'}"></div>\n            <div class="tMeta">\n                <a href="/{{media.media_name}}" class="tName">{{media.media_display_name}}<span class="flag flag-br"></span></a>\n                <a href="/{{media.media_name}}" class="tStatus">{{media.media_status | truncate:75 }}</a>\n                <a href="/{{media.category_seo_name}}" class="tGame"><!-- {{media.media_views | number}}  -->{{media.category_name}}</a>\n            </div>\n        </div>\n    </li>\n</ul>\n'), $templateCache.put("partials/sub/listUsers.html", '<ul class="userlist">\n    <li ng-repeat="user in users | filter:filterInvited">\n        <a href="/{{user.user_name}}">\n            <user-options-popover ng-if="showUserOptions == \'true\' && showKick == \'true\'" username="{{user.user_name}}" teamname="{{$parent.teaminit}}" show-kick="true" callback-kick="callbackKick()">\n                <img class="userlist-logo round" ng-src="{{config.imgUrl}}{{user.user_logo}}" ng-class="{\'notaccepted\' : user.group_accepted == false}">\n                <div class="userlist-name">{{user.user_name}}</div>\n            </user-options-popover>\n            <user-options-popover ng-if="showUserOptions == \'true\' && showKick != \'true\'" username="{{user.user_name}}" teamname="{{$parent.teaminit}}" ng-if="showUserOptions == \'true\'">\n                <img class="userlist-logo round" ng-src="{{config.imgUrl}}{{user.user_logo}}" ng-class="{\'notaccepted\' : user.group_accepted == false}">\n                <div class="userlist-name">{{user.user_name}}</div>\n            </user-options-popover>\n            <div ng-if="showUserOptions != \'true\'">\n            	<img class="userlist-logo round" ng-src="{{config.imgUrl}}{{user.user_logo}}" fallback-src="{{config.imgUrl}}/static/img/generic/user_logo.jpg" ng-class="{\'notaccepted\' : user.group_accepted == false}">\n                <div class="userlist-name">{{user.user_name}}</div>\n            </div>\n        </a>\n    </li>\n</ul>\n'), $templateCache.put("partials/sub/listUsersTeam.html", '<ul class="userlist-team">\r\n    <li ng-repeat="user in users | filter:filterInvited" ng-class="{isLive:user.is_live}">\r\n        <a href="/{{user.user_name}}">\r\n            <user-options-popover ng-if="showUserOptions == \'true\' && showKick == \'true\'" username="{{user.user_name}}" teamname="{{$parent.teaminit}}" show-kick="true" callback-kick="callbackKick()">\r\n                <img class="userlist-logo round" ng-src="{{config.imgUrl}}{{user.user_logo}}" ng-class="{\'notaccepted\' : user.group_accepted == false}">\r\n                <div class="userlist-name">{{user.user_name}}</div>\r\n            </user-options-popover>\r\n            <user-options-popover ng-if="showUserOptions == \'true\' && showKick != \'true\'" username="{{user.user_name}}" teamname="{{$parent.teaminit}}" ng-if="showUserOptions == \'true\'">\r\n                <img class="userlist-logo round" ng-src="{{config.imgUrl}}{{user.user_logo}}" ng-class="{\'notaccepted\' : user.group_accepted == false}">\r\n                <div class="userlist-name">{{user.user_name}}</div>\r\n            </user-options-popover>\r\n            <div ng-if="showUserOptions != \'true\'">\r\n            	<img class="userlist-logo round" ng-src="{{config.imgUrl}}{{user.user_logo}}" fallback-src="{{config.imgUrl}}/static/img/generic/user_logo.jpg" ng-class="{\'notaccepted\' : user.group_accepted == false}">\r\n                <div class="userlist-name">{{user.user_name}}</div>\r\n            </div>\r\n        </a>\r\n        <!-- <div class="show-btn icon-right-big" ng-click="userCallback(user)"></div> -->\r\n    </li>\r\n</ul>\r\n'), $templateCache.put("partials/sub/listVideo.html", '<ul class="t1 video">\n    <li ng-repeat="media in media" class="item_{{$index}}" ui-sref="video({id:media.media_id})" ng-hide="resetting">\n        <div class="t-wrap">\n            <div class="t-fallback"></div>\n            <div class="t-duration">{{media.media_duration_format}}</div>\n            <div class="t-img" lazy-load="{{config.imgUrl}}{{media.media_thumbnail}}"></div>\n            <div class="t-grad"></div>\n        </div>\n        <div class="t-meta">\n            <a class="t-status" ui-sref="video({id:media.media_id})">{{media.media_status | truncate:75 }}</a>\n            <div class="t-logo round" lazy-load="{{config.imgUrl}}{{media.channel.user_logo_small}}"></div>\n            <a class="t-name" ui-sref="detail({channel: media.media_user_name})">{{media.media_display_name}}</a>\n            <span class="t-viewers">{{media.media_views | number}}&nbsp;View{{media.media_views!=1 ? \'s\' : \'\'}}</span>\n            <span class="t-date">{{media.media_time_ago}}</span>\n        </div>\n    </li>\n<!--     <li class="t-more" ng-click="showmore()" ng-show="show_more.show && !processing && !resetting">\n        <div class="t-wrap">\n            <div>Show More</div>\n        </div>\n    </li> -->\n</ul>\n<div class="t-show-more" ng-show="show_more.show && !processing && !resetting">\n    <a ng-click="showmore()">Show more</a>\n</div>'), $templateCache.put("partials/sub/listVideoList.html", '<ul class="t3 video">\n    <li ng-repeat="media in media" ui-animate class="item_{{$index}}">\n        <a href="/video/{{media.media_id}}">\n            <div class="tImgWrap">\n                <div class="highlight"></div>\n                <div class="tPlay icon-play"></div>\n                <div class="tImgRatio">\n                    <img fallback-src="/static/img/live/no-tn.jpg" ng-src="{{config.imgUrl}}{{media.media_thumbnail}}" class="tImg" />\n                </div>\n                <div class="tDuration icon-clock">{{media.media_duration_format}}</div>\n            </div>\n            <!-- <img ng-src="{{media.channel.user_logo_small}}" class="tLogo" ng-class="tLogo"> -->\n            <div class="tMeta">\n                <div class="tStatus">{{media.media_status | truncate:45}}</div>\n                <span class="tName">{{media.media_user_name}}</span>\n                <!-- <span class="tMetaSmall">{{media.category_name}}</span> -->\n                <span class="tMetaSmall">{{media.media_views | number}}&nbsp;View{{media.media_views!=1 ? \'s\' : \'\'}}</span>\n                <span class="tMetaSmall">{{media.media_time_ago}}</span>\n            </div>\n        </a>\n    </li>\n</ul>'), $templateCache.put("partials/sub/list_following.html", '<div class="list-following">\n	<a ng-repeat="media in following | orderBy:media_is_live:true | limitTo:25" ui-sref="detail({channel: media.media_name})" ng-class="{\'live\' : media.media_is_live}">\n		<div class="f-logo round" lazy-load="{{config.imgUrl}}{{media.channel.user_logo_small}}">\n			<div class="f-live">Live</div>\n		</div>\n		<!-- <div class="f-viewers">{{media.media_views | number}}</div> -->\n		<div class="f-name">{{media.media_display_name}}</div>\n		<!-- <div class="tStatus">{{media.media_status | truncate:45}}</div> -->\n		<div class="f-time" ng-show="media.media_is_live">Live for {{media.media_live_time}}h</div>\n		<!-- <div class="f-game">{{media.category_name}}</div> -->\n	</a>\n\n<!-- 	<div class="f-more" ng-click="">\n		Show More\n	</div> -->\n\n<!-- 	<ul>\n		<li ng-repeat="media in following_offline | orderBy:media_is_live:true | limitTo:25" class="" ui-sref="detail({channel: media.media_name})">\n			<div class="f-logo round" lazy-load="{{config.imgUrl}}{{media.channel.user_logo_small}}"></div>\n			<div class="f-name">{{media.media_display_name}}</div>\n			<div class="f-time">Offline</div>\n		</li>\n	</ul> -->\n\n</div>'), $templateCache.put("partials/sub/livePlayer.html", '<div id="live-player" class="{{$root.section}}" ng-class="{\'full-width\':chatOptions.chatState == 0}" ng-show="!hidePlayer">\n	<div id="player-box" player-size>\n		<div class="player-wrapper">\n		    <mediaplayer mediaid="current_media_id" spotlight="spotlight"></mediaplayer>\n		</div>\n	</div>\n	<div id="infobox-wrapper" ng-show="!isMobile" ng-include="\'partials/sub/detail_infobox.html\'"></div>\n	<div ng-bind-html="$parent.FeatureBackdrop"></div>\n</div>'), $templateCache.put("partials/sub/mediacarousel.html", ""), $templateCache.put("partials/sub/nav.html", '<div id="nav" class="{{$root.section}} nono" ng-class="{\'no-chat\':chatOptions.chatState == false}" ng-controller="NavController">\n	<!-- <div class="{{$root.section}}-width"> -->\n	<div class="">\n		<!-- \n\n			left mobile menu \n\n		-->\n<!-- 	    <div id="nav-drawer-btn" \n		    ng-show="isMobile"\n	    	class="icon-menu fltL" \n	    	ng-click="toggleDrawer()">\n	    </div> -->\n		<!-- \n\n			logo \n\n		-->	    \n	    <div id="nav-logo">\n	    	<a ui-sref="home.root">\n			    <!-- <span class="icon-hitbox-logo"></span> -->\n			    <!-- <span class="beta">preview</span> -->\n			</a>\n	    </div>\n		<!-- \n\n			channel browse \n\n		-->\n		<div id="nav-browse" ng-show="(section==\'channel\' || section==\'video\') && !isMobile && !searchObject.searchOpen">\n			<a ng-click="navBrowseToggle()" ng-class="{active:navBrowse}">\n		    	See More<span class="icon-down"></span>\n		    </a>\n		    <div class="nav-show-animated" ng-if="navBrowse" >\n			    <section class="nav-browse-overlay theme-dark">\n			    	<div class="nav-overlay-close icon-close" ng-click="navBrowseToggle()"></div>\n					<browsewidget></browsewidget>\n				</section>\n				<div class="nav-browse-hitarea" ng-click="navBrowseToggle()"></div>\n			</div>\n        </div>\n		<!-- \n\n			chat tabs\n\n		-->\n	    <div id="chat-tabs" class="line-color nono" ng-if="section==\'channel\'" ng-hide="chatOptions.chatState==0">\n	    	<div class="chat-tab-chat" ng-class="{active:chatOptions.chatTab==\'chat\'}" ng-click="chatOptions.chatTab=\'chat\'">\n		        Chat\n	        </div>\n	        <div class="chat-tab-users" ng-class="{active:chatOptions.chatTab==\'users\'}" ng-click="chatOptions.chatTab=\'users\'" ng-if="loggedIn">\n		        <span class="icon-user icon-only"></span>\n	        </div>\n	        <div class="chat-tab-users" ng-controller="LoginCtrl" ng-click="openDialog()"  ng-if="!loggedIn">\n		        <span class="icon-user icon-only"></span>\n	        </div>\n	        <div class="chat-tab-tweets" ng-class="{active:chatOptions.chatTab==\'twitter\'}" ng-click="gotoTwitterWidget()">\n	        	Tweets\n	        </div>\n	    </div>\n	    <div id="chat-hide-btn" \n	    	class="icon-right icon-only" \n	    	ng-if="media.media_type != \'video\' && section == \'channel\'" \n	    	ng-show="chatOptions.chatState" \n	    	ng-click="chatOptions.chatState = false">\n	    </div>\n        <div id="chat-show-btn" \n        	class="icon-left" \n        	ng-if="media.media_type != \'video\' && section == \'channel\'" \n        	ng-hide="chatOptions.chatState" \n        	ng-click="chatOptions.chatState = true">\n        	Show Chat\n        </div>\n		<!-- \n\n			social links \n\n		-->\n		<div id="nav-social" ng-hide="section==\'settings\' || section==\'channel\'|| isMobile"\n				generic-popover \n				gp-width="400" \n				gp-height="160" \n				gp-position="bottom" \n				gp-template="partials/sub/nav_social_popover.html" \n				gp-classes=\'["nav-social-popover"]\'\n				gp-on="mouseover">\n		    <span class="fb icon-facebook-squared"></span>\n		    <span class="tw icon-twitter"></span>\n		    <!-- <span class="arrow icon-down-open"></span> -->\n		</div>		\n		<!-- \n\n			search \n\n		-->\n		<div id="nav-search" ng-include="\'partials/sub/nav_search.html\'" ng-hide="section==\'settings\' || isMobile"></div>\n        <!-- \n    \n        	settings \n\n        -->\n	    <div id="nav-settings" ng-if="section==\'settings\'" ng-include="\'partials/sub/nav_settings.html\'"></div>\n	    <!-- \n\n	    	sign in / user \n\n	    -->\n	    <div id="nav-user">\n			<!--  sign in  -->\n			<button class="nav-signin-btn btn-blue"\n				ng-if="!loggedIn" \n				ng-controller="LoginCtrl"  \n				ng-click="openDialog()" \n				generic-popover \n				gp-width="180" \n				gp-height="130" \n				gp-position="bottom" \n				gp-template="partials/sub/nav_signin_popover.html" \n				gp-classes=\'["signin-popover"]\'\n				gp-on="mouseover">\n				Sign in	\n			</button>\n			<!--  user  -->\n			<div ng-if="loggedIn" class="user"\n				generic-popover \n				gp-width="220" \n				gp-height="300" \n				gp-position="bottom" \n				gp-template="partials/sub/nav_user_popover.html" \n				gp-classes=\'["user-popover"]\'\n				gp-on="click">\n				<div ng-if="!$root.isHTTPS_page">\n					<!-- <span class="username">{{session.user_name}}</span> -->\n					<img class="round" ng-src="{{config.imgUrl}}{{session.user_logo_small }}">\n					<!-- <span class="arrow icon-down-open"></span> -->\n				</div>\n				<div ng-if="$root.isHTTPS_page">\n					<!-- <span class="username">{{session.user_name}}</span> -->\n					<img class="round" src="/secureedge{{session.user_logo_small}}">\n					<!-- <span class="arrow icon-down-open"></span> -->\n				</div>\n\n			</div>\n		</div>\n	</div>\n</div>'), $templateCache.put("partials/sub/nav_search.html", '<div class="input-wrap">\n	<div class="icon-search"></div>\n	<input type="text" id="searchField" placeholder="" ng-model="inputs.searchString" class="search" ng-click="openSearch()" ng-class="{active:searchObject.searchOpen}" ui-keydown="{esc:\'searchObject.searchOpen = false;\'}"/>\n	<div class="clear icon-cancel-circled" ng-click="inputs.searchString=\'\';closeSearch();" ng-show="inputs.searchString.length>0"></div>\n</div>\n<div class="search-results nav-show-animated" ng-show="searchObject.searchOpen" ui-keydown="{esc:\'searchObject.searchOpen = false;\'}">\n	<div class="header">\n		<span class="title">Search for:</span>\n		<input type="text" ng-model="inputs.searchString" class="search-term" />\n		<div class="nav-overlay-close icon-close" ng-click="closeSearch()"></div>\n	</div>\n	<div class="results-column-headers results-columns">\n		<div class="">\n			<h3>{{ \'HEAD_LIVE_NOW\' | translate}}</h3>\n		</div>  \n		<div class="">\n			<h3>Channels</h3>\n		</div>\n		<div class="">\n			<h3>Teams</h3>\n		</div> \n		<div class="">\n			<h3>{{ \'LABEL_RECORDINGS\' | translate}}</h3>\n		</div>\n	</div>\n	<div class="tse-scrollable search-scroll" scroll-emulator>\n    	<div class="tse-scroll-content">\n        	<div class="tse-content">\n        		<div class="results-wrap results-columns">\n					<div class="">\n						<h3>{{ \'HEAD_LIVE_NOW\' | translate}}</h3>\n						<mediaList type="live" limit="60" filter="popular" search="search" wait-for="search" size="mid" lines=""></mediaList>\n					</div>  \n					<div class="">\n						<h3>Channels</h3>\n						<userlist search="search"></userlist>\n					</div>\n					<div class="">\n						<h3>Teams</h3>\n						<teamlist search="search"></teamlist>\n					</div> \n					<div class="">\n						<h3>{{ \'LABEL_RECORDINGS\' | translate}}</h3>\n						<mediaList type="video" limit="30" filter="popular" search="search" wait-for="search" size="list" lines=""></mediaList>\n					</div>\n				</div>\n			</div>\n		</div>\n	</div>\n</div>'), $templateCache.put("partials/sub/nav_settings.html", '<div ng-controller="NavController">\n    <ul class="settingsNav settingsNavWrap nono">\n        <!-- NO livestream set up-->\n        <li ng-show="session.livestream_count<1 && roles.livestreams"\n            ng-class="{active: tab==\'livestreams\'}"\n            >\n            <a ui-sref="settings.livestreams({user: user.user_name})">Livestream Setup</a>\n        </li>\n        <!-- livestream set up -->\n        <li ng-show="session.livestream_count>0 && roles.livestreams"\n            ng-class="{active: tab==\'livestreams\'}"\n            >\n            <a ui-sref="settings.livestreams({user: user.user_name})">Livestream Settings</a>\n        </li>\n        <li ng-show="session.livestream_count>0 && roles.recordings"\n            ng-class="{active: tab==\'recordings\' || tab==\'videos\'}"\n            >\n            <a ui-sref="settings.videos({user: user.user_name})">{{ \'TEXT_VIDEO_MANAGER\' | translate }}</a>\n        </li>\n        <li ng-show="session.livestream_count>0 && roles.statistics"\n            ng-class="{active: tab == \'statistics\' || tab==\'revenues\'}" \n            >\n            <a ui-sref="settings.statistics({user: user.user_name})">{{ \'TEXT_STATISTICS\' | translate }} <span ng-show="user.user_partner">& Revenues</span></a>\n        </li>\n<!--         <li ng-if="session.user_partner"\n            ng-class="{active: tab == \'statistics\'}" \n            ng-click="go(\'/settings/\'+user.user_name+\'/invoices\')">\n            Invoices\n        </li> -->\n        <li ng-show="roles.teams"\n            ng-class="{active: tab == \'teams\'}" \n            >\n            <a ui-sref="settings.teams({user: user.user_name})">{{ \'TEXT_TEAMS\' | translate }}</a>\n        </li>\n        <li ng-show="roles.account"\n            ng-class="{active: tab == \'connections\'}" \n            >\n            <a ui-sref="settings.connections({user: user.user_name})">Connections</a>\n        </li>\n        <li ng-show="roles.account" \n            ng-class="{active: tab==\'account\'}"\n            >\n            <a ui-sref="settings.account({user: user.user_name})">Account</a>\n        </li>\n        <li ng-show="roles.superadmin" \n            ng-class="{active: tab==\'admin\'}"\n            >\n            <a ng-click="go(\'/settings/\'+user.user_name+\'/admin\')">Admin</a>\n        </li>\n    </ul>\n</div>'), $templateCache.put("partials/sub/nav_settings_admin.html", ""), $templateCache.put("partials/sub/nav_signin_popover.html", '<div class="signin btn-blue" ng-controller="LoginCtrl" ng-click="openDialog()">\n	Sign In\n</div>\n<a class="signup" href="/signup">\n	<span>New Here?</span>\n	<div>Create Account</div>\n</a>'), $templateCache.put("partials/sub/nav_social_popover.html", '<div class="title">Follow hitbox</div>\n<div class="sub">for the latest news and updates</div>\n\n<section class="fb">\n	<div>\n		<iframe src="//www.facebook.com/plugins/like.php?href=https%3A%2F%2Fwww.facebook.com%2Fhitboxlive&amp;width&amp;layout=button_count&amp;action=like&amp;show_faces=false&amp;share=false&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; height:21px;" allowTransparency="true"></iframe>\n	</div>      \n	<a href="http://www.facebook.com/hitboxlive" target="_blank" class="btn btn-facebook icon-facebook-squared">hitboxlive</a>\n</section>\n\n<section class="tw">\n	<div>\n	    <a href="https://twitter.com/hitboxlive" class="twitter-follow-button" data-show-count="true" data-show-screen-name="false">@hitboxlive folgen</a>\n	    <script async src="//platform.twitter.com/widgets.js"></script>\n	</div>\n	<a href="http://www.twitter.com/hitboxlive" target="_blank" class="btn btn-twitter icon-twitter">@hitboxlive</a>\n</section>'), $templateCache.put("partials/sub/nav_user_popover.html", '<!--  \n    user  \n-->\n<div class="user-menu menu" ng-controller="NavController">\n	<div class="user">\n		<a ui-sref="detail({channel: session.user_name})">\n			<img class="logo round" ng-src="{{config.imgUrl}}{{ session.user_logo_small }}">\n		</a>\n		<a ui-sref="detail({channel: session.user_name})" class="name">{{session.user_name}}</a> \n		<div class="followers icon-heart">{{session.followers}}</div>\n		<div class="logout icon-logout" ng-controller="LoginCtrl" ng-click="logout();closePopover()"></div>\n	</div>\n	<!-- NO livestream set up-->\n	<div ng-show="session.livestream_count<1">\n		<a class="menu-item" ui-sref="settings.livestreams({user: session.user_name})">Set up your livestream</a>\n	</div>\n	<!-- livestream set up -->\n	<div ng-if="session.livestream_count>0">\n		<a class="menu-item" ng-click="openDashboard(session.user_name)">Dashboard</a>\n		<a class="menu-item" ui-sref="settings.livestreams({user: session.user_name})">Livestream Settings</a>\n		<a class="menu-item" ui-sref="settings.videos({user: session.user_name})">Video Manager</a>\n		<a class="menu-item" ui-sref="settings.statistics({user: session.user_name})">Statistics</a>\n		<!--         <a ng-if="session.user_partner" class="" href="/settings/{{session.user_name}}/invoices">Invoices</a> -->\n	</div>\n	<a class="menu-item" ui-sref="settings.teams({user: session.user_name})">Teams</a>\n	<a class="menu-item" ui-sref="settings.connections({user: session.user_name})">Connections</a>\n	<a class="menu-item" ui-sref="settings.account({user: session.user_name})">Account</a>\n\n	<label class="new-switch color-switch">\n		<span>Theme</span>\n		<toggle-switch \n			ng-model="theme_model"\n			type="checkbox" \n			on-label="Dark"\n		    off-label="Light">\n		</toggle-switch>\n	</label>\n</div>\n<!--  \n    teams  \n-->\n<div class="team-menu" ng-if="teams.length">\n	<div class="title">Team Manager</div>\n	<a class="team"	ui-sref="teammanager({team: team.name})" ng-repeat="team in teams">\n		<img class="logo round" ng-src="{{config.imgUrl}}{{ team.logo }}">\n		<div class="name">{{team.name}}</div>\n	</a>\n</div>'), $templateCache.put("partials/sub/new_team.html", '<div class="newTeamWrap"> \n    <form accept-charset="UTF-8" class="form_enclosed formL" name="teamForm" novalidate> \n        <label ng-hide="errors.team_name">Enter the name of your new team:\n            <div class="note">Name can contain spaces, punctuation, upper and lower case.</div>\n        </label> \n        <label ng-show="errors.team_name" class="errorMsg">{{errors.team_name}}</label> \n        <label ng-show="errors.team_display_name" class="errorMsg">{{errors.team_display_name}}</label>\n        <input placeholder="Team name" class="text" name="group_name" type="text" ng-model="new_team.display_name" required ng-class="{error: errors.team_name}" /> \n        <div class="team-url" collapse="!new_team.name">Team Page URL: www.hitbox.tv/{{new_team.name}}</div>\n        <label ng-hide="errors.team_description">Add a short description</label> \n        <label ng-show="errors.team_description" class="errorMsg">{{errors.team_description}}</label> \n        <textarea placeholder="Description" class="desc" ng-class="{error: errors.team_description}" name="group_text" ng-model="new_team.description"></textarea> \n        <div class="btns"> \n            <button class="btn-outline" ng-click="cancel()">Cancel</button> \n            <button class="btn-green" value="{{ \'LABEL_SAVE\' | translate }}" ng-click="create(new_team)">Continue</button> \n        </div> \n    </form> \n</div>'), $templateCache.put("partials/sub/options_user_popover.html", "<div ng-transclude></div>"), $templateCache.put("partials/sub/playerControls.html", '<div class="mediaControls" ng-show="playerInitialized" ng-mousemove="onmouseMove(4000)" ng-mouseout="onmouseMove(500)">\n	<div class="settingsMenu" ng-show="playerSettings">\n		<div class="mediaOptions">\n			<div id="playerOptions" style="display:none">\n			    <a href="{bitrate}">{label}&nbsp;&nbsp;</a>\n			</div>\n		</div>\n		<div class="settingsLabel">&nbsp;&nbsp;Quality:</div>\n	</div>	\n\n	<div class="controlsBar">\n\n		<div class="controlsLeft">\n			<div id="playerControls" class="playerControls"></div>\n			<div ui-slider="sliderOptions" ng-model="playerVolume" style="width:60px;margin-left:48px;"></div>\n		</div>\n\n		<div class="controlsRight">\n			<span ng-show="" id="receiverPicker" ng-controller="CastCtrl" class="chromecast">\n				<a href="javascript:;" ng-click="selectReceiver()"><img ng-src="test/chromecast/img/icons/drawable-hdpi/ic_media_route_{{castData.receiverIcon}}_holo_light.png" height="30"></a>\n				<a ng-show="!castData.showCastIcons" ng-click="castMovie()"><img ng-src="test/chromecast/img/icons/drawable-hdpi/ic_media_route_{{castData.receiverIcon}}_holo_light.png" height="30"></a>			\n			</span>\n			<a class="fullscreen" ng-class="{playericonExpand: !isFullscreen, playericonContract: isFullscreen}" ng-click="toggleFullscreen()"></a>\n			<a class="playerPopout playericon-newtab" ng-click="popoutPlayer(\'{{media.media_name}}\');"></a>\n			<a class="playerSettings" ng-click="toggleSettings()"></a>\n			<a class="chatPopout"></a>\n		</div>\n	</div>\n</div>'), $templateCache.put("partials/sub/playerPassword.html", '<div class="mediaplayerModal">\n    <div class="head">\n        Password required\n    </div>\n  <form>\n      <input type="text" placeholder="Stream password" autofocus="autofocus" ng-model="mediaPassword" />\n      <button type="submit" class="btn-green" ng-click="enterPassword(mediaPassword)">Submit</button>\n  </form>\n</div>'), $templateCache.put("partials/sub/popover_delay.html", '<a class="menu-item" ng-click="media.media_live_delay=0; save.save_status = \'none\'; remove_tooltip()">No Delay</a>\n<a class="menu-item" ng-click="media.media_live_delay=60; save.save_status = \'none\'; remove_tooltip()">1 Minute</a>\n<a class="menu-item" ng-click="media.media_live_delay=120; save.save_status = \'none\'; remove_tooltip()">2 Minutes</a>\n<a class="menu-item" ng-click="media.media_live_delay=300; save.save_status = \'none\'; remove_tooltip()">5 Minutes</a>\n<a class="menu-item" ng-click="media.media_live_delay=600; save.save_status = \'none\'; remove_tooltip()">10 Minutes</a>\n<a class="menu-item" ng-click="media.media_live_delay=900; save.save_status = \'none\'; remove_tooltip()">15 Minutes</a>\n<a class="menu-item" ng-click="media.media_live_delay=1800; save.save_status = \'none\'; remove_tooltip()">30 Minutes</a>\n'), $templateCache.put("partials/sub/popover_follow_loggedout.html", '<!-- offline following banner -->\n<div class="follow-banner">\n	<div class="icon-heart heart-bg icon-only"></div>\n	<div class="icon-heart heart-small icon-only"></div>\n	<div class="header">Keep track of your <br>favorite channels</div>\n	<div class="buttons">\n		<div>\n			<button class="btn-outline" ng-controller="LoginCtrl" ng-click="openDialog()">\n				Sign In\n			</button>\n		</div>\n		<div>\n			<div class="small">\n				New here?\n			</div>\n			<button class="btn-outline" ng-click="go(\'/signup\')" target="_blank">\n				Create Account\n			</button>\n		</div>\n<!-- 		<div>\n			<a class="btn-outline phone" href="https://play.google.com/store/apps/details?id=hitbox.app&hl=en" target="_blank">\n				<div>Get Notifications on your <br>Android Phone</div>\n			</a>\n		</div> -->\n	</div>\n</div>'), $templateCache.put("partials/sub/settings_account.html", '<div class="settings-livestream-width" ng-controller="ScrollCtrl">\r\n    <form accept-charset="UTF-8" class="form_enclosed formL accountDetails" name="accountForm" novalidate>\r\n       <!-- <a ng-click="gotoElement(\'channel\')">Go to your Channel</a> -->\r\n\r\n        <section class="account-details username cf">\r\n            <div class="header cf">\r\n                <h1>Profile Picture</h1>\r\n                <div class="logo round">\r\n                    <div class="logoError" ng-show="errors.user_logo">{{errors.user_logo}}</div>\r\n                    <uploaddroparea uda-image="{{config.imgUrl}}{{user.user_logo}}" uda-success-callback="cbupload()" class="userLogo" uda-data-name="file" uda-url="/api/upload/account/" uda-name="logo" uda-fallback-image="{{config.imgUrl}}{{config.fallbackImages.userLogo}}" uda-delete="false" uda-error-callback="cberrorcover()">\r\n                    </uploaddroparea>\r\n                </div>\r\n            </div>\r\n        </section>  \r\n             \r\n        <!-- username -->\r\n\r\n        <section class="account-details username cf">\r\n            <div class="header cf" ng-click="switchOpen(\'name\')">\r\n                <h1>Username</h1>\r\n                <div class="edit icon-pencil" ng-hide="editItem[\'name\']">Edit</div>\r\n                <input name="display_name" type="text"\r\n                    class="name" \r\n                    ng-class="{disabled:!editItem[\'name\'], error:error.user_display_name}"\r\n                    placeholder="{{user.user_name}}" \r\n                    ng-model="user.user_display_name"  \r\n                    ng-change="verifyDisplayName()" \r\n                    ng-disabled="!editItem[\'name\']"\r\n                    required />\r\n            </div>\r\n            <div class="collapsible" ng-show="editItem[\'name\']">\r\n                <div ng-show="error.user_display_name" class="error-msg">{{error.user_display_name}}</div>\r\n                <div ng-show="editItem[\'name\'] && !error.user_display_name" class="note">You can change letter cases.</div>\r\n                <div class="buttons">\r\n                    <button ng-click="cancel(\'name\')" ng-show="showCancel[\'name\']">Cancel</button>\r\n                    <button class="submitBtn {{save_status[\'name\']}}" ng-click="saveUser(\'name\')" ng-class="{\'disabled\':error.user_display_name || user.user_display_name == backup_username}">\r\n                        <span class="saved">All Saved</span>\r\n                        <span class="save">Save</span>\r\n                        <bouncy class="saving"></bouncy>\r\n                        <div class="error">Sorry, an error occurred. Please try again.<div>If the problem persists, <a ng-controller="FeedBackDialogCtrl" ng-click="openDialog()">report here</a>.</div></div>\r\n                    </button>\r\n                </div> \r\n            </div>\r\n        </section>        \r\n       \r\n       <!-- email -->\r\n\r\n        <section class="account-details email cf">\r\n            <div class="header cf" ng-click="switchOpen(\'email\')">\r\n                <h1>Email</h1>\r\n                <div class="edit icon-pencil" ng-hide="editItem[\'email\']">Edit</div>\r\n                <input name="email" type="text"\r\n                        class="email text email-bck" \r\n                        ng-class="{disabled:!editItem[\'email\'], error:error.user_email}"\r\n                        placeholder="{{ \'LABEL_EMAIL\' | translate }}" \r\n                        ng-model="user.user_email"  \r\n                        ng-change="verifyEmail()"\r\n                        ng-disabled="!editItem[\'email\'] "\r\n                        required />\r\n            </div>\r\n            <div class="collapsible" ng-show="editItem[\'email\']" >\r\n                <div ng-show="error.user_email" class="error-msg error-email">{{error.user_email}}</div>\r\n                <div class="note" ng-hide="!editItem[\'email\']">Please enter your password to update your email</div>\r\n                <input name="password" type="password" \r\n                    class="password text" \r\n                    ng-class="{error:error.user_password}"\r\n                    placeholder="Current {{ \'LABEL_PASSWORD\' | translate }}" \r\n                    ng-model="user.user_password"\r\n                    ng-change="verifyPassword()" \r\n                    required />\r\n                <div ng-show="error.user_password" class="error-msg">{{error.user_password}}</div>\r\n                <div class="buttons">\r\n                    <button ng-click="cancel(\'email\')" ng-show="showCancel[\'email\']">Cancel</button>\r\n                    <button class="submitBtn {{save_status[\'email\']}}" ng-click="saveUser(\'email\')" ng-class="{\'disabled\':error.user_email || user.user_email == backup_email || !user.user_password}">\r\n                        <span class="saved">All Saved</span>\r\n                        <span class="save">Save</span>\r\n                        <span class="saving"></span>\r\n                        <div class="error">Sorry, an error occurred. Please try again.<div>If the problem persists, <a ng-controller="FeedBackDialogCtrl" ng-click="openDialog()">report here</a>.</div></div>\r\n                    </button>\r\n                </div> \r\n            </div>  \r\n        </section>\r\n        \r\n        <!-- password -->\r\n        \r\n        <section class="account-details password">\r\n            <div class="header cf" ng-click="switchOpen(\'pwd\')">\r\n                <h1>Password</h1>\r\n                <input name="password" type="password" ng-show="editItem[\'pwd\'] || error.user_password_new || error.user_password2_new"\r\n                    class="password text" \r\n                    ng-class="{error:error.user_password}"\r\n                    placeholder="Current" \r\n                    ng-model="user.user_password"\r\n                    ng-change="verifyPassword()" \r\n                    required />\r\n                <div class="edit icon-pencil" ng-hide="editItem[\'pwd\'] || error.user_password_new || error.user_password2_new" ng-click="switchOpen(\'pwd\')">Edit</div>\r\n            </div>\r\n            <div class="collapsible" ng-show="editItem[\'pwd\'] || error.user_password_new || error.user_password2_new">\r\n                <div ng-show="error.user_password" class="error-msg">{{error.user_password}}</div>\r\n                <input type="password" \r\n                    class="password text" \r\n                    ng-class="{error:error.user_password_new}"\r\n                    placeholder="New" \r\n                    ng-model="user.user_password_new" ng-blur="verifyPassword()"  \r\n                    ng-change="verifyPassword()" \r\n                    required />\r\n                <div ng-show="error.user_password" class="error-msg">{{error.user_password}}</div>\r\n                <input type="password" \r\n                    class="password text"\r\n                    ng-class="{error:error.user_password2_new}" \r\n                    placeholder="Re-type New" \r\n                    ng-model="user.user_password2_new" \r\n                    ng-change="verifyPassword()"  \r\n                    ng-change="" \r\n                    required />\r\n                <div ng-show="error.user_password2" class="error-msg">{{error.user_password2}}</div>\r\n                <div class="buttons">\r\n                    <button ng-click="cancel(\'pwd\')" ng-show="showCancel[\'pwd\']">Cancel</button>\r\n                    <button class="submitBtn {{save_status[\'pwd\']}}" ng-click="saveUser(\'pwd\')" ng-class="{\'disabled\':error.user_password_new || error.user_password2 || !user.user_password || !user.user_password_new || !user.user_password2_new}">\r\n                        <span class="saved">All Saved</span>\r\n                        <span class="save">Save</span>\r\n                        <span class="saving"></span>\r\n                        <div class="error">Sorry, an error occurred. Please try again.<div>If the problem persists, <a ng-controller="FeedBackDialogCtrl" ng-click="openDialog()">report here</a>.</div></div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <br><br><br><br><br>\r\n\r\n        <div ng-show="true" id="channel">    \r\n            <h1>Your Channel</h1>\r\n            <section>\r\n                <div class="cf row">\r\n                    <a ng-href="/{{user.user_name}}">Edit your profile and offline cover</a>\r\n                </div>\r\n                <div class="cf row">\r\n                    <label class="fltL">\r\n                        Twitter Feed\r\n                        <span>Add your twitter feed to your channel.</span>\r\n                    </label>\r\n                    <div class="switch nono fltR" ng-class="{switchOFF: !user.twitter_enabled}" ng-click="user.twitter_enabled=!user.twitter_enabled;checkTwitterButton()"><span>On</span><span>Off</span></div>\r\n                </div>\r\n                <div ng-show="user.twitter_enabled" class="twitter">\r\n                    <div class="cf row">\r\n                        <label class="fltL">\r\n                            <span>Enter your twitter name. e.g. @hitboxlive</span>\r\n                        </label>\r\n                        <input type="text" class="text twitter fltR" placeholder="@hitboxlive" ng-model="user.twitter_account" ng-click="switchOpen(\'tw\')" />\r\n                    </div>\r\n                    <div class="buttons">\r\n                        <button ng-click="cancel(\'tw\')" ng-show="showCancel[\'tw\']">Cancel</button>\r\n                        <button class="submitBtn {{save_status[\'tw\']}}" ng-click="saveUser(\'tw\')" ng-class="{\'disabled\':user.twitter_account == backup_twitter_account}">\r\n                            <span class="saved">All Saved</span>\r\n                            <span class="save">Save</span>\r\n                            <span class="saving"></span>\r\n                            <div class="error">Sorry, an error occurred. Please try again.<div>If the problem persists, <a ng-controller="FeedBackDialogCtrl" ng-click="openDialog()">report here</a>.</div></div>\r\n                        </button>\r\n                    </div>   \r\n                </div>\r\n            </section>\r\n        </div>\r\n\r\n        <h1>Connect Social Networks</h1>\r\n        <section class="networks" ng-controller="SocialSettingsController">\r\n            <div class="cf row">\r\n                <label class="fltL">\r\n                    Facebook\r\n                    <span>Post messages to your wall via the dashboard</span>\r\n                </label>\r\n                <button class="icon-fb fb fltR" ng-class="{connected:facebook.connected}" ng-click="connectFB()">Connect{{facebook.connected ? \'ed\' : \'\'}}</button>\r\n            </div>\r\n            <div class="fb-pages" ng-show="facebook.pages.length>0">\r\n                <span>Select the facebook pages you want to post to:</span>\r\n                <div ng-repeat="page in facebook.pages">\r\n                    <div class="switch nono fltL" ng-class="{switchOFF: !page.selected}" \r\n        				ng-click="page.selected=!page.selected; saveFBPages()"><span>on</span><span>off</span></div>\r\n                    <span>{{page.name}}</span>\r\n                </div>\r\n            </div>\r\n            <div class="cf row">\r\n                <label class="fltL">\r\n                    Twitter\r\n                    <span>Send tweets via the dashboard</span>\r\n                </label>\r\n                <button class="icon-twitter tw fltR" ng-class="{connected:twitter.connected}" ng-click="connectTwitter()">Connect{{twitter.connected ? \'ed\' : \'\'}}</button>\r\n            </div>\r\n            <!--\r\n            <div class="cf row">\r\n                <label class="fltL">\r\n                    Youtube\r\n                    <span>Upload videos to your youtube channel</span>\r\n                </label>\r\n                <button class="icon-youtube yt fltR" ng-class="{connected:youtube.connected}" ng-click="connectYoutube()">Connect{{youtube.connected ? \'ed\' : \'\'}}</button>\r\n            </div>\r\n        -->\r\n        </section>        \r\n\r\n        <h1>Notifications</h1>\r\n        <section ng-controller="NotificationsSettingsController">\r\n            <div class="cf row">\r\n                <label class="fltL">\r\n                    Receive an email when a channel I follow goes live\r\n                    <a ng-href="/settings/{{user.user_name}}/connections/following">You can set it for each channel individually <u>here</u>.</a>\r\n                </label>\r\n                <div class="switch nono fltR" ng-class="{switchOFF: !notify_email}" \r\n    				ng-click="notify_email=!notify_email; saveNotificationSettings()"><span>On</span><span>Off</span></div>\r\n            </div>\r\n            <div class="cf row">\r\n                <label class="fltL">\r\n                    Post to my Facebook pages when I go live\r\n                    <span>You can connect your Facebook pages in "Connect Social Networks".</span>\r\n                </label>\r\n                <div class="switch nono fltR" ng-class="{switchOFF: !push_facebook}" \r\n                    ng-click="push_facebook=!push_facebook; saveNotificationSettings()"><span>On</span><span>Off</span></div>\r\n            </div>\r\n            <div class="cf row">\r\n                <label class="fltL">\r\n                    Post to my Twitter account when I go live\r\n                    <span>You can connect your Twitter account in "Connect Social Networks".</span>\r\n                </label>\r\n                <div class="switch nono fltR" ng-class="{switchOFF: !push_twitter}" \r\n                    ng-click="push_twitter=!push_twitter; saveNotificationSettings()"><span>On</span><span>Off</span></div>\r\n            </div>\r\n        </section>\r\n\r\n             \r\n    </form>\r\n</div>\r\n'), $templateCache.put("partials/sub/settings_admin.html", '<br><BR>\r\n<div ng-controller="AdminNavController">\r\n        <a ng-show="session.superadmin"\r\n            ng-class="{active: subtab == \'subscriptions\'}" \r\n            ng-click="subtab=\'subscriptions\'">\r\n            Subscriptions\r\n        </a>\r\n        |\r\n        <a ng-show="session.superadmin" \r\n            ng-class="{active: subtab==\'account\'}"\r\n            ng-click="subtab=\'partnerships\'">\r\n            Partnerships\r\n        </a>\r\n        |\r\n        <a ng-show="session.superadmin" \r\n            ng-class="{active: subtab==\'featured\'}"\r\n            ng-click="subtab=\'featured\'">\r\n            Featured Media\r\n        </a>        \r\n        \r\n        <div ng-show="session.superadmin" ng-class="tab" ng-include="tabFile"></div>\r\n</div>'), $templateCache.put("partials/sub/settings_admin_featuredmedia.html", '<br><br>\r\n<div ng-controller="AdminFeaturedController">\r\n	<h1>Featured Media</h1> | Filter: <a ng-click="liveonly=!liveonly">Toggle Live</a>\r\n\r\n	<div>\r\n		<!--\r\n		<input ui-select2="select2OptionsUser" class="category" ng-model="partner.user_name" class="fltL" style="display:inline-block; width:30%;" />\r\n		-->\r\n	</div>\r\n	<br>\r\n	<b>\r\n	<span style="display:inline-block; width:200px;">Channel</span>\r\n	<span style="display:inline-block; width:100px;">Weight</span>\r\n	<span style="display:inline-block; width:100px;">Est. global score</span>\r\n	<span style="display:inline-block; width:100px;">Countries</span>\r\n	<span style="display:inline-block; width:100px;">Forced</span>\r\n	<span style="display:inline-block; width:100px;">isLive</span>\r\n	<span style="display:inline-block; width:100px;">Action</span>\r\n	</b>\r\n	<hr>\r\n	<div ng-hide="media.livestream">Loading...</div>\r\n	<div ng-repeat="live in media.livestream" style="width:100%" ng-hide="liveonly">\r\n		<span style="display:inline-block; width:200px;">{{live.media_name}}</span>\r\n		<span style="display:inline-block; width:100px;"><input type="text" ng-model="live.media_featured_weight"/></span>\r\n		<span style="display:inline-block; width:100px;">{{(live.media_is_live == 1) ? getScore(live.media_featured_weight,live.media_featured_forced) : 0}} %</span>\r\n		<span style="display:inline-block; width:100px;"><input type="text" ng-model="live.media_featured_countries"/></span>\r\n		<span style="display:inline-block; width:100px;"><input type="checkbox" ng-model="live.media_featured_forced" ng-true-value="1" ng-false-value="0"></span>\r\n		<span style="display:inline-block; width:100px;">{{(live.media_is_live == 1) ? \'true\' : \'false\'}}</span>\r\n		<button ng-click="saveChanges(live)">Save</button>\r\n		<button ng-click="removeMedia(live)">Remove</button>\r\n	</div>\r\n	<hr>\r\n	<br>\r\n	<div style="width:300px;display:inline-block;margin-right:10px;">\r\n		<b>New featured live channel</b>\r\n		<br><br>\r\n		<input ui-select2="select2OptionsUser" class="category" ng-model="featured.media_id" class="fltL" style="display:inline-block;width:100%" />\r\n		<br><br>Weight<br>\r\n		<input type="text" ng-model="featured.weight" placeholder="Weight"/>\r\n		<br><br>Countries (eg. US,DE,AT)<br>\r\n		<input type="text" ng-model="featured.countries" placeholder="Countries"/>\r\n		<br><br>\r\n		<button ng-click="featureChannel(featured)">Add live channel</button>\r\n	</div>\r\n	<!--\r\n	<br><br>\r\n	<hr>\r\n	<br>\r\n	<div style="width:300px;display:inline-block;">\r\n		<b>New featured video</b>\r\n		<br><br>\r\n		<input type="text" ng-model="featured.media_id" placeholder="Video / Media ID"/>\r\n		<br><br>\r\n		<input type="text" ng-model="featured.weight" placeholder="Weight"/>\r\n		<br><br>\r\n		<button ng-click="featureChannel(featured)">Add video</button>\r\n	</div>\r\n	-->\r\n</div>'), $templateCache.put("partials/sub/settings_admin_partnerships.html", '<div ng-controller="AdminPartnershipController">\r\n	<div>\r\n		<input ui-select2="select2OptionsUser" class="category" ng-model="partner.user_name" class="fltL" style="display:inline-block; width:30%;" />\r\n		or\r\n		<input ui-select2="select2OptionsTeam" class="category" ng-model="partner.team_name" class="fltR" style="display:inline-block; width:30%;" />\r\n\r\n	</div>\r\n\r\n	<br />\r\n	<br />\r\n\r\n	<div ng-show="plans">\r\n		<h2>Current Plans ({{partner.type}}: {{partner.id}})</h2>\r\n		<section>\r\n			<div ng-repeat="plan in plans">\r\n				<input type="text" ng-model="plan.plan_countries" style="display:inline-block; width:50%;" disabled="disabled"/>\r\n				<input type="text" ng-model="plan.plan_currency" style="display:inline-block; width:10%" disabled="disabled" />\r\n				<input type="text" ng-model="plan.plan_cpm" style="display:inline-block; width:10%;" disabled="disabled" />\r\n				<input type="text" ng-model="plan.plan_date_added" style="display:inline-block; width:18%;" disabled="disabled" />\r\n				<button style="display:inline-block; width:10%;" ng-click="deletePlan({{plan.plan_id}})">Delete Plan</button>\r\n			</div>\r\n		</section>\r\n		<br>\r\n		<h2>New Plan</h2>\r\n		<section>\r\n			<select ng-model="plan.country" ng-options="country.name for country in countries" style="display:inline-block; width:60%"></select>\r\n			<select ng-model="plan.currency" ng-options="currency.name for currency in currencies" style="display:inline-block; width:10%"></select>\r\n			<input type="text" ng-model="plan.plan_cpm" style="display:inline-block; width:10%;" />\r\n			<input type="text" ng-model="plan.plan_date_added" singledate id="plan-date" style="display:inline-block; width:18%;" />\r\n			<button ng-click="addPlan()">Add Plan</button>\r\n		</section>\r\n	</div>\r\n\r\n</div>'), $templateCache.put("partials/sub/settings_admin_subscriptions.html", '<div ng-controller="AdminSubscriptionController">\r\n	<div>\r\n		<input ui-select2="select2OptionsUser" class="category" ng-model="partner.user_name" class="fltL" style="display:inline-block; width:30%;" />\r\n		or\r\n		<input ui-select2="select2OptionsTeam" class="category" ng-model="partner.team_name" class="fltR" style="display:inline-block; width:30%;" />\r\n	</div>\r\n	<br /><br />\r\n	<div ng-if="subscription.user_name">\r\n		<div>\r\n			<h2>Subscription details ({{partner.type}}: {{partner.id}})</h2>\r\n			<section>\r\n				Price: <input type="text" ng-model="subscription.plan_charge" style="display:inline-block; width:10%;" />\r\n				Currency: <select ng-model="subscription.plan_currency" ng-options="currency for currency in currencies" style="display:inline-block; width:10%"></select>\r\n				Share %: <input type="text" ng-model="subscription.plan_share" style="display:inline-block; width:10%;" />\r\n				Emoji prefix: <input type="text" ng-model="subscription.plan_prefix" style="display:inline-block; width:10%;" />\r\n				<br />\r\n				Ad-free: <div class="switch nono" ng-class="{switchOFF: subscription.plan_ads != 1}" ng-click="subscription.plan_ads=!subscription.plan_ads"><span>On</span><span>Off</span></div>\r\n				HD-Paywall: <div class="switch nono" ng-class="{switchOFF: subscription.plan_hd != 1}" ng-click="subscription.plan_hd=!subscription.plan_hd"><span>On</span><span>Off</span></div>\r\n				Video-Paywall: <div class="switch nono" ng-class="{switchOFF: subscription.plan_videos != 1}" ng-click="subscription.plan_videos=!subscription.plan_videos"><span>On</span><span>Off</span></div>\r\n				Recurring Payment: <div class="switch nono" ng-class="{switchOFF: subscription.plan_recurring != 1}" ng-click="subscription.plan_recurring=!subscription.plan_recurring"><span>On</span><span>Off</span></div>\r\n			<section>\r\n		</div>\r\n		<button ng-if="!subscription.plan_id" style="width:15%;" ng-click="addPlan()">Create Plan</button>\r\n\r\n		<div ng-if="partner.type==\'team\'">\r\n			<div>\r\n				<h2>Members available</h2>\r\n		        <section>\r\n		                <div ui-sortable="membersOptionsList[0]" class="apps-container screen" ng-model="subscription.members_available">\r\n		                	<div class="cdns" ng-repeat="member in subscription.members_available">{{member.user_name}}</div>\r\n		                </div>\r\n		        </section>\r\n	    	</div>\r\n	    	<div>\r\n	        <h2>Members enabled</h2>\r\n		        <section>\r\n		                <div ui-sortable="membersOptionsList[1]" class="apps-container screen" ng-model="subscription.members_enabled">\r\n		                	<div class="cdns" ng-repeat="member in subscription.members_enabled">{{member.user_name}}</div>\r\n		                </div>\r\n		        </section>\r\n			</div>				\r\n		</div>\r\n		\r\n		<div ng-if="subscription.plan_id">\r\n			<div class="fltL" style="width:30%;border-right:1px solid #000">\r\n				<h2>Benefits available</h2>\r\n		        <section>\r\n		                <div ui-sortable="sortableOptionsList[0]" class="apps-container screen" ng-model="subscription.benefits_available">\r\n		                  <div class="cdns" ng-repeat="benefit in subscription.benefits_available">{{benefit.sb_name}}</div>\r\n		                </div>\r\n		        </section>\r\n	    	</div>\r\n	    	<div class="fltL" style="width:20%;border-right:1px solid #000">\r\n	        <h2>Benefits enabled</h2>\r\n		        <section>\r\n		                <div ui-sortable="sortableOptionsList[1]" class="apps-container screen" ng-model="subscription.benefits_enabled">\r\n		                  <div class="cdns" ng-repeat="benefit in subscription.benefits_enabled">\r\n		                    {{benefit.sb_name}}\r\n		                  </div>\r\n		                </div>\r\n		        </section>\r\n			</div>		\r\n			<div class="fltL" style="width:10%;border-right:1px solid #000">\r\n				<h2>Badge</h2>\r\n				<section ng-if="subscription.badge_image">\r\n	                <uploaddroparea uda-image="{{config.imgUrl}}{{subscription.badge_image}}" uda-success-callback="cbupload()" class="userLogo" uda-data-name="file" uda-url="/api/upload/badge/" uda-name="logo" uda-fallback-image="/img/addemote.png" uda-delete="false" uda-error-callback="cberrorcover()" style="background-color:transparent;height:80px; width:80px;" uda-user-name="{{subscription.user_name}}">\r\n	                </uploaddroparea>\r\n				</section>\r\n				<section ng-if="!subscription.badge_image">\r\n	                <uploaddroparea uda-image="/img/addemote.png" uda-success-callback="cbupload()" class="userLogo" uda-data-name="file" uda-url="/api/upload/badge/" uda-name="logo" uda-fallback-image="/img/addemote.png" uda-delete="false" uda-error-callback="cberrorcover()" style="background-color:transparent; height:80px; width:80px;" uda-user-name="{{subscription.user_name}}">\r\n	                </uploaddroparea>\r\n				</section>\r\n			</div>\r\n			<div class="fltL" style="width:25%;border-right:1px solid #000">\r\n				<h2>Emojis</h2>\r\n				<section>\r\n					<div ng-repeat="icon in subscription.icons" class="fltL">\r\n						<img src="http://edge.sf.hitbox.tv{{icon.icon_path}}" width="32" />\r\n					</div>\r\n	                <uploaddroparea uda-image="/img/addemote.png" uda-success-callback="cbupload()" class="userLogo fltL" uda-data-name="file" uda-url="/api/upload/emoji/" uda-name="logo" uda-fallback-image="{{config.imgUrl}}{{config.fallbackImages.userLogo}}" uda-delete="false" uda-error-callback="cberrorcover()" style="background-color:transparent;height:32px; width:32px;margin:2px;" uda-user-name="{{subscription.user_name}}">\r\n	                </uploaddroparea>\r\n	                <br clear="both">\r\n	                <div ng-show="subscription.emoji.file" align="center">\r\n	                	<img src="{{config.imgUrl}}{{subscription.emoji.file}}" />\r\n	                	<input type="text" ng-model="subscription.emoji.name" placeholder="Emoji handle" style="display:inline-block;"/>\r\n	                	<button style="display:inline-block;" ng-click="addEmoji()">Save & Add</button>\r\n	            	</div>\r\n\r\n	            	<br clear="both">\r\n\r\n				</section>\r\n			</div>\r\n			<br clear="both">\r\n			<button ng-if="subscription.plan_id" style="width:15%;" ng-click="updatePlan()">Save Plan</button>\r\n    	</div>\r\n	</div>\r\n</div>'), $templateCache.put("partials/sub/settings_blacklist_dlg.html", '<div class="modalClose" ng-click="close()">&times;</div>\r\n	<div class="form_enclosed">\r\n		<div class="head">Word Blacklist</div>\r\n		<div class="info">Add words below (type and hit return) to have them blacklisted for all users in your chat. <br />Changes are in effect after a few seconds.</div>\r\n		<textarea tagging-area tag-data="blacklist.words" ng-model="blacklist.newwords"></textarea>\r\n		<div class="buttons">\r\n		  <div ng-click="close()">Cancel</div>\r\n		  <div class="btn btn-green" ng-click="save()">Save</div>\r\n		</div>\r\n	</div>\r\n</div>\r\n'), $templateCache.put("partials/sub/settings_chat.html", '<div class="" ng-controller="">\n    <form>\n        <section class="desc">\n            <label>\n                Banned words \n                <span class="icon-help-circled"\n                    tooltip-placement="top" \n                    tooltip="Enter comma separated words to be filtered from your chat"\n                    tooltip-append-to-body="true"></span>\n            </label>\n            <textarea name="" ng-model=""></textarea>\n        </section>\n\n        <section class="streamDetails cf">\n            <div class="fltL">\n                <label>Meme Emotes</label>\n                <div class="switch nono" ng-class="{switchOFF: !chat.memes}" ng-click="chat.memes=!chat.memes"><span>On</span><span>Off</span></div>\n            </div>\n        </section>\n        <div class="submitWrap">\n            <input type="submit" \n                class="btn btn-green" \n                value="{{ \'LABEL_SAVE\' | translate }}" \n                upload-submit="uploadComplete(contents, completed)" />\n        </div>\n    </form>\n</div>'), $templateCache.put("partials/sub/settings_connections.html", '<div class="connections nono" ng-class="{withSubscribers:subEnabled}" ng-controller="ConnectionsController">\r\n    <!-- following -->\r\n    <section class="following-wrap" ng-controller="FollowingSettingsController">\r\n        <div class="key-metric-box" ng-class="{active:showConnection==\'following\'}" ng-click="$parent.showConnection=\'following\'" >\r\n            <div class="value">{{following_total}}</div>\r\n            <div class="title">Following</div>\r\n        </div>\r\n        <div class="content-wrap" ng-switch on="displayState" ng-show="$parent.showConnection==\'following\'">\r\n            <div class="loadAnim" ng-switch-when="loading"><div class="icon-spin-1"></div></div>\r\n            <div ng-switch-when="no_data" class="message-big">\r\n                <div>\r\n                    <h1>You don\'t follow any Channels</h1> \r\n                </div>\r\n            </div>\r\n            <div ng-switch-when="data">\r\n                <ul class="list-header nono">\r\n                    <li >\r\n                        <div class="col-1"></div>\r\n                        <div class="col-2">\r\n                            <div class="sort" ng-click="changeSort(\'user_name\')" ng-class="{\'sortDown\': sort==\'user_name\' && !reverse, \'sortUp\': sort==\'user_name\' && reverse}">Name</div>\r\n                            <!--<input type="search" ng-model="followSearch" placeholder="Search" class="filter ng-pristine ng-valid">-->\r\n                        </div>\r\n                        <div class="col-3">\r\n                            <div class="sort" ng-click="changeSort(\'date_added\')" ng-class="{\'sortDown\': sort==\'date_added\' && !reverse, \'sortUp\': sort==\'date_added\' && reverse}">Followed</div>\r\n                        </div>\r\n                        <div class="col-4">\r\n                            <div class="sort" ng-click="changeSort(\'follower_notify\')" ng-class="{\'sortDown\': sort==\'follower_notify\' && !reverse, \'sortUp\': sort==\'follower_notify\' && reverse}">Email notification</div>\r\n                        </div>\r\n                        <div class="col-5"></div>\r\n                    </li>\r\n                </ul>\r\n                <form name="followForm">\r\n                <ul class="list-content">\r\n                    <li ng-repeat="user in following | orderBy:sort:reverse">\r\n                        <div class="col-1">\r\n                            <a href="/{{user.user_name}}">\r\n                                <img class="user-logo round" ng-src="{{config.imgUrl}}{{user.user_logo_small}}" />\r\n                            </a>\r\n                        </div>\r\n                        <div class="col-2">\r\n                            <a href="/{{user.user_name}}" class="name">{{user.user_name}}</a>\r\n                            <div class="text-small icon-heart">{{user.followers}}</div>\r\n                        </div>\r\n                        <div class="col-3">\r\n                            <span class="text-small">{{user.date_added | toDate}}</span>\r\n                        </div>\r\n                        <div class="col-4">\r\n                            <span class="checkbox-bell icon-only" \r\n                                tooltip-placement="left" \r\n                                tooltip="Email notification:{{user.follower_notify==1?\'ON\':\'OFF\'}}" \r\n                                tooltip-popup-delay=\'300\'\r\n                                tooltip-append-to-body="true">\r\n                                <input id="follow_id_{{$index}}" type="checkbox" ng-model="user.follower_notify" ng-true-value="1" ng-false-value="0" ng-change="updateFollowing()"/>\r\n                                <label for="follow_id_{{$index}}"></label>\r\n                            </span>\r\n                        </div>                            \r\n                        <div class="col-5">\r\n                            <span class="icon-close iconColor unfollow" ng-click="unFollowNow(\'user\',user.user_id)" tooltip-placement="left" tooltip="Unfollow" tooltip-popup-delay=\'300\' tooltip-append-to-body="true"></span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                    <!--\r\n                    <div class="submitWrap">\r\n                        <button class="submitBtn {{save.save_status}}" ng-click="update($event)">\r\n                            <span class="icon-spin-1 animate-spin icon-only saving" ng-show="save.save_status == \'saving\'"></span>\r\n                            <span class="saved" ng-show="save.save_status == \'saved\'">All Saved</span>\r\n                            <span class="save" ng-show="save.save_status == \'none\'">Save</span>\r\n                            <div class="error" ng-show="save.save_status == \'error\'">Sorry, an error occurred. Please try again.<div>If the problem persists, <a ng-controller="FeedBackDialogCtrl" ng-click="openDialog()">report here</a>.</div></div>\r\n                        </button>\r\n                    </div>\r\n                -->\r\n            </form>\r\n            <center ng-show="pages.max > 1">\r\n                <pagination current-page="pages.current" max-size="10" boundary-links="true" rotate="false" num-pages="pages.max" on-select-page="selectPage(page)"/>\r\n            </center>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- followers -->\r\n<section class="follower-wrap" ng-controller="FollowersSettingsController">\r\n    <div class="key-metric-box" ng-class="{active:showConnection==\'follower\'}" ng-click="$parent.showConnection=\'follower\'">\r\n        <div class="value">{{followers_total}}</div>\r\n        <div class="title">Followers</div>\r\n    </div>\r\n    <div class="content-wrap" ng-switch on="displayState" ng-show="$parent.showConnection==\'follower\'">\r\n        <div class="loadAnim" ng-switch-when="loading"><div class="icon-spin-1"></div></div>\r\n        <div ng-switch-when="no_data" class="message-big">\r\n            <div>\r\n                <h1>No one is following you.</h1> \r\n            </div>\r\n        </div>\r\n        <div ng-switch-when="data">\r\n                <!--\r\n                <div class="followerChart" ng-controller="StatsSettingsController" ng-show="followers.length>8">\r\n                    <canvas linechart options="charts.followers.options" data="charts.followers" width="800" height="100">\r\n                </div>\r\n            -->\r\n            <ul class="list-header nono">\r\n                <li>\r\n                    <div class="col-1"></div>\r\n                    <div class="col-2">\r\n                        <div class="sort" ng-click="changeSort(\'user_name\')" ng-class="{\'sortDown\': sort==\'user_name\' && !reverse, \'sortUp\': sort==\'user_name\' && reverse}">Name</div>\r\n                            <!--\r\n                            <input type="search" ng-model="followSearch" placeholder="Search" class="filter ng-pristine ng-valid">\r\n                        -->\r\n                    </div>\r\n                    <div class="col-3">\r\n                        <div class="sort" ng-click="changeSort(\'date_added\')" ng-class="{\'sortDown\': sort==\'date_added\' && !reverse, \'sortUp\': sort==\'date_added\' && reverse}">Followed</div>\r\n                    </div>\r\n                    <div class="col-4">\r\n                        <div class="sort" ng-click="changeSort(\'follower_notify\')" ng-class="{\'sortDown\': sort==\'follower_notify\' && !reverse, \'sortUp\': sort==\'follower_notify\' && reverse}"><span class="icon-bell"></span></div>\r\n                        <span></span></div>\r\n                    </li>\r\n                </ul>\r\n                <form name="followForm">\r\n                    <ul class="list-content">\r\n                        <li ng-repeat="follow in followers | orderBy:sort:reverse">\r\n                            <div class="col-1">\r\n                                <a href="/{{follow.user_name}}">\r\n                                    <img class="user-logo round" ng-src="{{config.imgUrl}}{{follow.user_logo_small}}" />\r\n                                </a>\r\n                            </div>\r\n                            <div class="col-2">\r\n                                <a href="/{{follow.user_name}}" class="name">{{follow.user_name}}</a>\r\n                                <div class="text-small icon-heart">{{follow.followers}}</div>\r\n                            </div>\r\n                            <div class="col-3">\r\n                                <span class="text-small">{{follow.date_added | toDate}}</span>\r\n                            </div>\r\n                            <div class="col-4">\r\n                                <div class="iconColor" ng-class="{\'icon-ok\':follow.follower_notify==1}"></div>\r\n                            </div>                            \r\n                        </li>\r\n                    </ul>\r\n                </form>\r\n                <center ng-show="pages.max > 1">\r\n                    <pagination current-page="pages.current" max-size="10" boundary-links="true" rotate="false" num-pages="pages.max" on-select-page="selectPage(page)"/>\r\n                </center>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <!-- subscriptions -->\r\n    <section class="subscriptions-wrap" ng-controller="SubscriptionsSettingsController">\r\n        <div class="key-metric-box" ng-class="{active:showConnection==\'subscription\'}" ng-click="$parent.showConnection=\'subscription\'">\r\n            <div class="value">{{subscriptions_total}}</div>\r\n            <div class="title">Subscriptions</div>\r\n        </div>\r\n        <div class="content-wrap" ng-switch on="displayState" ng-show="$parent.showConnection==\'subscription\'">\r\n            <div ng-switch-when="loading" class="loadAnim">\r\n                <div class="icon-spin-1"></div>\r\n            </div>\r\n            <div ng-switch-when="no_data" class="message-big">\r\n                <div>\r\n                    <h1>You have no subscriptions.</h1> \r\n                </div>\r\n            </div>\r\n            <div ng-switch-when="data">\r\n                <div ng-repeat="sub in subscriptions" class="userCard-wrap">\r\n                    <div class="userCard-wrapHeader"> \r\n                        Channel Subscription\r\n                        <span class="canceled" ng-show="sub.canceled">Canceled</span>\r\n                    </div>\r\n                    <div class="userCard userSubscriptionCard">\r\n                        <a href="/{{sub.user_name}}"\r\n                            ng-if="sub.user_cover" \r\n                            class="userCard-cover" \r\n                            back-img="{{config.imgUrl}}{{sub.user_cover}}"></a>\r\n                        <a href="/{{sub.user_name}}" \r\n                            ng-if="sub.user_cover == null" \r\n                            class="userCard-cover" \r\n                            back-img="{{config.imgUrl}}{{config.fallbackImages.userCover}}"></a>\r\n                        </a>\r\n                        <div class="userCard-content">\r\n                            <a href="/{{sub.user_name}}" class="userCard-logo-wrap round">\r\n                                <div class="round" ng-if="sub.user_logo" back-img="{{config.imgUrl}}{{sub.user_logo}}"></div>\r\n                                <div class="round" ng-if="sub.user_logo == \'\'" back-img="{{config.imgUrl}}{{config.fallbackImages.userLogo}}"></div>\r\n                            </a>\r\n                            <div class="userCard-title">\r\n                                <a class="userCard-name" href="/{{sub.user_name}}">{{sub.user_name}}</a>\r\n                                <!-- <a class="userCard-url" href="/{{sub.user_name}}">hitbox.tv/{{sub.user_name}}</a> -->\r\n                            </div>\r\n                            <div class="userCard-benefits sub-benefits sub-benefit-emotes">\r\n                                <!-- <div class="sub-benefit-head">Benefits include:</div> -->\r\n                                <!-- <span ng-repeat="benefit in sub.benefits" class="sub-benefit-text"><span>{{benefit.text}}</span></span> -->\r\n                                <!-- text -->\r\n                                <div class="emotes cf">\r\n                                    <div class="head">Chat Emotes</div>\r\n                                    <div class="emotes-wrap">\r\n                                        <img ng-src="{{config.imgUrl}}{{sub.subBadges.badges[0].badge_image}}" tooltip-placement="top" tooltip="Chat Badge" />   \r\n                                        <img ng-repeat="emote in sub.subEmotes.icons" ng-src="{{config.imgUrl}}{{emote[0]}}" tooltip-placement="top" tooltip="{{emote[1]}}" />    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="userCard-sub">\r\n                            <span>{{sub.canceled ? \'Current term ends:\' : \'Renews:\'}}</span>\r\n                            <span>{{sub.sub_date_valid | toDate }}</span>\r\n                            <div class="dropdown userCard-options">\r\n                                <div class="dropdown-toggle icon-cog icon-only"></div>\r\n                                <ul class="dropdown-menu">\r\n                                    <li>\r\n                                        <div class="userCard-options-plan">Monthly subscription price:</div> \r\n                                        <div class="userCard-options-price">{{sub.plan_currency}} {{sub.plan_charge}}</div>\r\n                                    </li>\r\n                                    <li ng-hide="sub.canceled">\r\n                                        <a ng-click="go(\'/\'+sub.user_name+\'/cancel/\'+session.user_name)">Edit</a>\r\n                                    </li>\r\n                                    <li ng-show="sub.canceled">\r\n                                        <span class="userCard-options-plan">Renewable after: {{sub.sub_date_valid | toDate }}</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <!-- subscribers -->\r\n    <section class="subscribers-wrap" ng-controller="SubscribersSettingsController" ng-if="subEnabled">\r\n        <div class="key-metric-box" ng-class="{active:$parent.showConnection==\'subscribers\'}" ng-click="$parent.$parent.showConnection=\'subscribers\'">\r\n            <div class="value">{{activeSubCount}}</div>\r\n            <div class="title">Subscribers</div>\r\n            <div class="csv-download" ng-if="subscribers" tooltip-placement="top" tooltip="Download your Subscriber List" tooltip-append-to-body="true">\r\n                <div ng-csv="getcsv()" field-separator=";" filename="subscriber.csv">\r\n                    <span>CSV</span>\r\n                    <div class="dl-button icon-download-alt"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="content-wrap" ng-switch on="displayState" ng-show="$parent.$parent.showConnection==\'subscribers\'">\r\n            <div class="loadAnim" ng-switch-when="loading"><div class="icon-spin-1"></div></div>\r\n            <div ng-switch-when="no_data" class="message-big">\r\n                <div>\r\n                    <h1>You have no subscribers.</h1> \r\n                </div>\r\n            </div>\r\n            <div ng-switch-when="data">\r\n                <ul class="list-header nono">\r\n                    <li>\r\n                        <div class="col-1"></div>\r\n                        <div class="col-2">\r\n                            <div class="sort" ng-click="changeSort(\'user_name\')" ng-class="{\'sortDown\': sort==\'user_name\' && !reverse, \'sortUp\': sort==\'user_name\' && reverse}">Name</div>\r\n                            <!--\r\n                            <input type="search" ng-model="followSearch" placeholder="Search" class="filter ng-pristine ng-valid">\r\n                            -->\r\n                            <span class="sub-filter-label">Filter Subscribers:</span>\r\n                            <div class="dropdown subFilter">\r\n                                <div class="list-filter-btn" dropdown-toggle>\r\n                                    {{orderName}} ({{filteredList.length}})\r\n                                    <span class="icon-down-dir iconR"></span>\r\n                                </div>\r\n                                <ul class="dropdown-menu">\r\n                                    <li><a ng-class="{active: showActive}" ng-click="setFilter(\'active\');">Active</a></li>\r\n                                    <li><a ng-class="{active: showCanceled}" ng-click="setFilter(\'canceled\');">Canceled</a></li>\r\n                                    <li><a ng-class="{active: showExpired}" ng-click="setFilter(\'expired\');">Expired</a></li>\r\n                                    <li><a ng-class="{active: showAll}" ng-click="setFilter(\'total\');">Total</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-3">\r\n                            <div class="sort" ng-click="changeSort(\'date_added\')" ng-class="{\'sortDown\': sort==\'date_added\' && !reverse, \'sortUp\': sort==\'date_added\' && reverse}">Subscribed</div>\r\n                        </div>\r\n                        <div class="col-4">\r\n                            <div class="sort" ng-click="changeSort(\'date_valid\')" ng-class="{\'sortDown\': sort==\'date_valid\' && !reverse, \'sortUp\': sort==\'date_valid\' && reverse}">Valid until</div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                <form name="followForm">\r\n                    <ul class="list-content">\r\n                        <li ng-repeat="sub in ($parent.filteredList = (subscribers | orderBy:sort:reverse | filter:filterFunction)) " ng-class="{canceled:sub.canceled==true, expired:sub.timed_out==true}">\r\n                            <div class="col-1">\r\n                                <a href="/{{sub.user_name}}">\r\n                                    <img class="user-logo round" ng-src="{{config.imgUrl}}{{sub.user_logo_small}}" />\r\n                                </a>\r\n                            </div>\r\n                            <div class="col-2">\r\n                                <a href="/{{sub.user_name}}" class="name">{{sub.user_name}}</a>\r\n                                <div class="text-small icon-heart">{{sub.followers}}</div>\r\n                            </div>\r\n                            <div class="col-3">\r\n                                <span class="text-small">{{sub.sub_date_added | toDate}}</span>\r\n                            </div>\r\n                            <div class="col-4">\r\n                                <span class="text-small">{{sub.sub_date_valid | toDate}}</span>\r\n                                <div class="text-canceled">Canceled</div>\r\n                                <div class="text-expired">Expired</div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</div>'), $templateCache.put("partials/sub/settings_editor_recording.html", '<div class="videoEditorWrap" ng-controller="VideoEditorController">\n    <div class="video-editor recordings-editor cf">\n        <div class="cf">\n            <div class="icon-close" ng-click="hideEditor()"></div>\n        </div>\n        <div class="row1 cf">\n            <div class="colL cf">\n                <div class="rec-player-plus-timeline" ng-class="{fullscreen: isFullscreen}">\n                    <div class="player">\n                        <recplayer media-id="editor.rec_name" rec-session="editor.rec_session"></recplayer>\n                    </div>\n\n                    <div class="timeline nono" ng-show="editor.rec_name">\n\n                        <div class="frames">\n                            <div ng-repeat="n in [0,1,2,3,4,5,6,7,8,9]" ng-style="{\'background-image\' : \'url(\'+config.imgUrl+\'/static/img/media/videos/\' + editor.tnFolder + \'/\' + editor.rec_session + \'_small_00\' + $index + \'.jpg)\'}"></div>\n                        </div>\n\n                        <div ui-slider="{range: true}" min="0" max="100" step="0.0001" use-decimals ng-model="timeRange"></div>\n\n                        <div class="trimLimit" ng-if="timeRange[0]<timeRange[1]">\n                            <br />\n                            <br />\n                            <div class="trimmer trimmerStart">\n                                <div class="time">\n                                    <div class="icon-left-dir icon-only" ng-if="timeRange[0]>=1" ng-click="timeRange[0] = timeRange[0] - rangeSteps"></div>\n                                    <input class="timeInput" type="text" ng-model="rangeFormat[0]" ui-keypress="{enter:\'updateStartTime($event)\'}"></input>\n                                    <div class="icon-right-dir icon-only" ng-if="timeRange[0]<=99" ng-click="timeRange[0] = timeRange[0] + rangeSteps"></div>\n                                </div>\n                            </div>\n                            <div class="trimmer trimmerEnd">\n                                <div class="time">\n                                    <div class="icon-left-dir icon-only" ng-if="timeRange[1]>=1" ng-click="timeRange[1] = timeRange[1] - rangeSteps"></div>\n                                    <input class="timeInput" type="text" ng-model="rangeFormat[1]" ui-keypress="{enter:\'updateEndTime($event)\'}"></input>\n                                    <div class="icon-right-dir icon-only" ng-if="timeRange[1]<=99" ng-click="timeRange[1] = timeRange[1] + rangeSteps"></div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n            <div class="colR cf">\n                <div class="meta cf">\n                    <form accept-charset="UTF-8" class="form_enclosed formL" name="recordingsForm" novalidate>\n                        <label>{{ \'LABEL_TITLE\' | translate }}</label>\n                        <div ng-show="error.rec_title" class="input-help">{{error.rec_title}}</div>\n                        <input class="text" name="rec_title" type="text" ng-model="editor.rec_title" required />\n\n                        <label>{{ \'LABEL_DESCRIPTION\' | translate }}</label>\n                        <textarea name="media_description" ng-model="editor.media_description"></textarea>\n\n                        <label>Game</label>\n                        <input ui-select2="select2Options" ng-model="editor.rec_category_id" />\n                        <!--\n                        <select ui-select2 ng-model="editor.rec_category_id">\n                            <option ng-repeat="game in games.categories" value="{{game.category_id}}">{{game.category_name}}</option>\n                        </select>\n                    -->\n\n                        <!--  <label>{{ \'LABEL_TAGS\' | translate }}</label>\n                        <input class="text" name="media_tags" type="text" ng-model="editor.media_tags" required /> -->\n\n                        <div class="cf switches">\n                            <label>\n                                <input ng-model="editor.media_hidden" ng-true-value="1" type="checkbox" />\n                                <div>\n                                    <div></div>\n                                </div>\n                                <span>Private</span>\n                            </label>\n                        </div>\n\n                        <div class="thumbWrap cf">\n                            <label>Thumbnail</label>\n                            <img class="thumb" ng-src="{{config.imgUrl}}{{editor.thumbnail}}" alt="" />\n                            <!--\n                            <button class="btnOutline">Select New</button>\n                            <button class="btnOutline">Upload Custom</button>\n                            -->\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class="row2">\n            <div class="colL">\n                <dl class="details cf">\n                    <dt>Recorded:</dt>\n                    <dd>{{editor.rec_date_added}}</dd>\n                    <dt>Duration:</dt>\n                    <dd>{{editor.rec_duration}}</dd>\n                </dl>\n                <dl class="details cf">\n                    <dt>Dimensions:</dt>\n                    <dd>{{editor.rec_info.width}} x {{editor.rec_info.height}}</dd>\n                    <dt>Bitrate:</dt>\n                    <dd>{{editor.rec_bitrate / 1000 | number:0}} kbps</dd>\n                    <dt>Framerate:</dt>\n                    <dd>{{editor.rec_info.r_frame_rate}} fps</dd>\n                </dl>\n            </div>\n            <div class="colR">\n                <button class="btnOutline" ng-click="hideEditor()">Cancel</button>\n                <button ng-show="saved" class="btnOutline btnDisabled" disabled="disabled">Saving...</button>\n                <input ng-show="!saved" type="submit" class="btn btn-green" value="{{ \'BTN_SAVE_AS_VIDEO\' | translate }}" ng-click="createVideo(rec)" />\n            </div>\n        </div>\n    </div>\n</div>\n'), $templateCache.put("partials/sub/settings_editor_video.html", '<div class="videoEditorWrap" ng-controller="VideoEditorController">\n    <div class="video-editor cf">\n        <div class="cf">\n            <div class="icon-close" ng-click="hideEditor()"></div>\n        </div>\n        <div class="row1">\n            <div class="colL">\n                <div class="player center">\n                    <mediaplayer type="video" mediaid="editor.media_id" autoplay="false"></mediaplayer>\n                </div>\n<!--                 <div class="timeline nono" ng-if="editor.rec_name">\n                \n                    <div class="frames">\n                        <div ng-repeat="n in [0,1,2,3,4,5,6,7,8,9]" ng-style="{\'background-image\' : \'url(\'+config.imgUrl+\'/static/img/live/\' + editor.rec_session + \'_small_00\' + $index + \'.jpg)\'}"></div>\n                    </div>\n                    \n                    <div ui-slider="{range: true}" min="0" max="100" step="0.0001" use-decimals ng-model="timeRange"></div>\n                    \n                    <div class="trimLimit" ng-if="timeRange[0]<timeRange[1]">\n                        <br /><br />\n                        <div class="trimmer trimmerStart">\n                            <div class="time">\n                                <div class="icon-left-dir icon-only" ng-if="timeRange[0]>=1" ng-click="timeRange[0] = timeRange[0] - rangeSteps"></div>\n                                <span>{{rangeFormat[0]}}</span>\n                                <div class="icon-right-dir icon-only" ng-if="timeRange[0]<=99" ng-click="timeRange[0] = timeRange[0] + rangeSteps"></div>\n                            </div>\n                        </div>\n                        <div class="trimmer trimmerEnd">\n                            <div class="time">\n                                <div class="icon-left-dir icon-only" ng-if="timeRange[1]>=1" ng-click="timeRange[1] = timeRange[1] - rangeSteps"></div>\n                                <span>{{rangeFormat[1]}}</span>\n                                <div class="icon-right-dir icon-only" ng-if="timeRange[1]<=99" ng-click="timeRange[1] = timeRange[1] + rangeSteps"></div>\n                            </div>\n                        </div>\n                    </div>                \n                    \n                </div> -->\n            </div>\n            <div class="colR">\n                <div class="meta cf">\n                    <form accept-charset="UTF-8" class="form_enclosed formL" name="recordingsForm" novalidate>\n                        <label>{{ \'LABEL_TITLE\' | translate }}</label>\n                        <div ng-show="error.rec_title" class="input-help">{{error.rec_title}}</div>            \n                        <input class="text" name="rec_title" type="text" ng-model="editor.media_status" required />\n                     \n                        <label>{{ \'LABEL_DESCRIPTION\' | translate }}</label>\n                        <textarea name="media_description" ng-model="editor.media_description"></textarea>\n           \n                        <label>Game</label>\n                        <input ui-select2="select2Options" ng-model="editor.media_category_id" />\n\n                        <!-- <label>{{ \'LABEL_TAGS\' | translate }}</label>\n                        <input class="text" name="media_tags" type="text" ng-model="editor.media_tags" required /> -->\n                        \n                        <div class="cf switches">\n                            <label>\n                                <input ng-model="editor.media_hidden" ng-true-value="1" type="checkbox" />\n                                <div><div></div></div>\n                                <span>Private</span>\n                            </label>\n                        </div>\n                        <!--\n                        <h1>Thumbnail Preview</h1>\n                        <div class="thumbWrap cf">\n                            <img class="thumb" ng-src="{{editor.media_thumbnail}}" alt="" />\n                        </div>\n                        -->\n                    </form> \n                </div>\n            </div>\n        </div>\n        <div class="row2">\n            <div class="colL">\n            </div>\n            <div class="colR">\n                <button class="btn-outline" ng-click="hideEditor()">Cancel</button>\n                <button ng-show="saved" class="btn-green btn-disabled" disabled="disabled">Saving...</button>\n                <input ng-show="!saved" type="submit" class="btn btn-green" value="Save" ng-click="saveVideo(media)" />\n            </div>\n        </div>\n    </div>\n</div>'), $templateCache.put("partials/sub/settings_livestreams.html", '<div class="settings-livestream settings-livestream-width" ng-controller="MediaSettingsController">\n    <!-- \n    \n    EXISTING LIVESTREAMS \n    \n    -->\n    <div ng-repeat="media in media.livestream">\n        <div class="" ng-if="media.media_id">\n            <form ng-show="mediaCount>0" accept-charset="UTF-8" class="form_enclosed settings-form" name="livestreamForm" novalidate>\n                <section>\n                    <header>\n                        <h1>Title & Game</h1>\n                    </header>\n                    <ul>\n                        <li>\n                            <label ng-class="{error: error.media_status}">\n                                Stream Title <span ng-show="error.media_status">{{error.media_status}}</span>\n                            </label>\n                            <div>\n                                <input type="text" name="media_status" placeholder="" ng-model="media.media_status" required ng-class="{error: error.media_status}" ng-change="save.save_status = \'none\'" />\n                            </div>\n                        </li>\n                        <li>\n                            <label>\n                                Game played\n                            </label>\n                            <div>\n                                <!--\n                                <select ui-select2="{allowClear: true}" ng-model="media.media_category_id" ng-change="save.save_status = \'none\'">\n                                    <option ng-repeat="game in games.categories" value="{{game.category_id}}">{{game.category_name}}</option>\n                                </select>-->\n                                <input ui-select2="select2Options" ng-model="media.media_category_id" ng-click="save.save_status = \'none\'" />\n                            </div>\n                        </li>\n                    </ul>\n                </section>\n\n                <!-- <a href="/{{session.user_name}}">Edit your profile description</a> -->\n\n\n                <section class="stream-settings">\n                    <header class="sectionTitle cf">\n                        <h1>Stream Details</h1>\n                        <!-- <h3><a href="/{{media.media_name}}">hitbox.tv/{{media.media_name | nl2br}}</a></h3> -->\n                        <!-- <h3 class="fltR">For a detailed setup guide see our <a class="cGreen" href="http://help.hitbox.tv/customer/portal/topics/575577" target="_blank">help section</a>.</h3> -->\n                    </header>\n                    <ul>\n                        <li>\n                            <label>RTMP Url</label>\n                            <div>\n                                <input type="text" value="rtmp://live.hitbox.tv/push" readonly="readonly" select-on-click />\n                            </div>\n                        </li>\n\n                        <li class="stream-key">\n                            <label>Stream Key</label>\n                            <div>\n                                <input ng-show="showkey" value="{{media.media_name + \'?key=\' + media.media_key}}" readonly="readonly" select-on-click />\n                                <div class="btn show" ng-click="showkey=!showkey">{{showkey ? \'Hide\' : \'Show\'}}</div>\n                                <div class="btn" ng-click="getNewStreamKey()">Generate New</div>\n                            </div>\n                        </li>\n\n                        <li>\n                            <label>Visibility</label>\n                            <div>\n                                <div class="switch nono" ng-class="{switchOFF: media.media_hidden}" ng-click="media.media_hidden=!media.media_hidden;save.save_status = \'none\'"><span>Visible</span><span>Hidden</span>\n                                </div>\n                            </div>\n                        </li>\n\n                        <li>\n                            <label>Recordings<span class="icon-help-circled" tooltip="Record your broadcasts. Stream must be offline to switch." tooltip-placement="top"></span>\n                            </label>\n                            <div>\n                                <div class="switch nono" ng-class="{switchOFF: media.media_recording != 1}" ng-click="setMediaRecording()"><span>On</span><span>Off</span>\n                                </div>\n                            </div>\n                        </li>\n\n                        <li>\n                            <label>Delay</label>\n                            <div>\n                                <div class="btn" ng-class="{\'btn-green\':(media.media_live_delay>0)}" generic-popover gp-width="150" gp-template="partials/sub/popover_delay.html" gp-position="top" gp-classes=\'["nono"]\' gp-on="click">\n                                    {{(media.media_live_delay>0) ? media.media_live_delay/60 + \' min\' : \'No delay\'}}\n                                    <span class="icon-down iconR"></span>\n                                </div>\n                            </div>\n                        </li>\n\n                        <li ng-if="roles.superadmin==\'admin\'">\n                            <label>Transcoding</label>\n                            <div>\n                                <div class="switch nono" ng-class="{switchOFF: media.media_transcoding!=1}" ng-click="media.media_transcoding=1-media.media_transcoding;save.save_status = \'none\'"><span>On</span><span>Off</span>\n                                </div>\n                            </div>\n                        </li>\n<!--\n                        <li class="stream-featured" ng-if="roles.superadmin==\'admin\'">\n                            <label>Featured</label>\n                            <div>\n                                <div class="switch nono" ng-class="{switchOFF: media.media_featured!=1}" ng-click="media.media_featured=!media.media_featured;save.save_status = \'none\'"><span>On</span><span>Off</span>\n                                </div>\n                                <input class="featured" type="number" ng-model="media.media_featured_weight" />\n                            </div>\n                        </li>\n-->\n\n                        <li ng-if="roles.partner==\'admin\'" class="pass">\n                            <label>Private Streaming</label>\n                            <div>\n                                <!--<div class="switch nono" ng-class="{switchOFF: !media.media_password || showPass}" \n                                        ng-click="showPass=!showPass"><span>On</span><span>Off</span></div>\n                                <input ng-show="media.media_password || showPass" ng-model="media.media_password" placeholder="Stream Password" />-->\n                                <input type="text" ng-model="media.media_password" placeholder="Stream Password" ng-change="save.save_status = \'none\'" />\n                            </div>\n                        </li>\n                        <!--    \n                        <li ng-if="roles.partner==\'admin\'">\n                            <label>Enable DVR (Beta)</label>\n                            <input type="checkbox" ng-model="media.media_dvr" ng-checked="media.media_dvr==1" ng-true-value="1" ng-false-value="0" />\n                        </li>\n                        -->\n                    </ul>\n                </section>\n                <section class="dashboard-editing">\n                    <header class="sectionTitle cf">\n                        <h1>Hosters</h1>\n                    </header>\n                    <ul>\n                        <li ng-show="hosters.list.length == 0">\n                                Your channel is not getting hosted right now.\n                        </li>\n                        <li ng-show="hosters.list.length > 0">\n                            <label>\n                                Your Hosters:\n                                <span class="note icon-attention-circled">These people are supporting you by hosting your Stream right now.</span>\n                            </label>\n                            <div class="dashboard-editing-list">\n                                <div ng-repeat="hoster in hosters.list">\n                                    <a target="_blank" href="/{{hoster.user_name}}"><img class="round" src="{{config.imgUrl}}{{hoster.user_logo}}" alt="" />{{hoster.user_name}}</a>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                    \n                </section>\n                <section class="dashboard-editing">\n                    <header class="sectionTitle cf">\n                        <h1>Dashboard Editing</h1>\n                    </header>\n                    <ul>\n                        <li>\n                            <label>\n                                You have access to:\n                            </label>\n                            <div class="dashboard-editing-list">\n                                <div>\n                                    <a target="_blank" href="/{{session.user_name}}"><img class="round" src="{{config.imgUrl}}{{session.user_logo}}" alt="" />{{session.user_name}}\'s</a>\n                                    <a class="dashboard-editing-link" target="_blank" href="/dashboard/{{session.user_name}}" ng-click="openDashboard($event, session.user_name)">Dashboard</a>\n                                    <span>(Yours)</span>\n                                </div>\n                                <div ng-repeat="dashboard in dashboards" ng-show="dashboard.user_name">\n                                    <a target="_blank" href="/{{dashboard.user_name}}"><img class="round" src="{{config.imgUrl}}{{dashboard.user_logo}}" alt="" />{{dashboard.user_name}}\'s</a>\n                                    <a class="dashboard-editing-link" target="_blank" href="/dashboard/{{dashboard.user_name}}" ng-click="openDashboard($event, dashboard.user_name)">Dashboard</a>\n                                    <button class="btn-none fltR icon-close" ng-click="removeDashboard($index)" tooltip="Remove Me"></button>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                    <ul>\n                        <li>\n                            <label>\n                                Your Editors:\n                                <span class="note icon-attention-circled">Editors can edit your stream info and sticky chat message, run polls & giveaways and post to your connected social networks. They can also edit and create videos.</span>\n                            </label>\n                            <div class="dashboard-editing-list">\n                                <div ng-repeat="editor in editors.list">\n                                    <a target="_blank" href="/{{editor.user_name}}"><img class="round" src="{{config.imgUrl}}{{editor.user_logo}}" alt="" />{{editor.user_name}}</a>\n                                    <button class="btn-none fltR icon-close" ng-click="removeEditor($index)" tooltip="Remove Editor"></button>\n                                </div>\n                            </div>\n                            <div class="editors-add">\n                                <div class="error" ng-show="editors.error">Sorry. This user does not exist.</div>\n                                <div class="editors-input-wrap">\n                                    <input type="text" ng-model="editors.newEditor" ui-keypress="{enter:\'addEditor()\'}" placeholder="Enter a hitbox username ..." ng-change="editors.error=false"/>\n                                    <button ng-click="addEditor()">Add</button>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                    \n                </section>\n                <section class="dashboard-editing">\n                    <header class="sectionTitle cf">\n                        <h1>Chat Moderators</h1>\n                    </header>\n                    <ul>\n                        <li>\n                            <label>\n                                Your Moderators:\n                                <span class="note icon-attention-circled">Moderators can timeout/ban unwanted users.</span>\n                            </label>\n                            <div class="dashboard-editing-list">\n                                <div ng-repeat="moderator in moderators.list">\n                                    <a target="_blank" href="/{{moderator.user_name}}"><img class="round" src="{{config.imgUrl}}{{moderator.user_logo}}" alt="" />{{moderator.user_name}}</a>\n                                    <button class="btn-none fltR icon-close" ng-click="removeModerator($index)" tooltip="Remove Moderator"></button>\n                                </div>\n                            </div>\n                            <div class="editors-add">\n                                <div class="error" ng-show="moderators.error">Sorry. This user does not exist.</div>\n                                <div class="editors-input-wrap">\n                                    <input type="text" ng-model="moderators.newModerator" ui-keypress="{enter:\'addModerator()\'}" placeholder="Enter a hitbox username ..." ng-change="moderators.error=false"/>\n                                    <button ng-click="addModerator()">Add</button>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                    \n                </section>\n                <section class="stream-settings subscription" ng-show="subEnabled">\n                    <header class="sectionTitle cf">\n                        <h1>G2A Gift Card for Subscribers</h1>\n                    </header>\n                    <ul>\n                        <li>\n                            <label>Your Subscribers will receive a G2A.com Gift Card</label>\n                            <div>\n                                <div class="switch nono" ng-class="{switchOFF: !g2aEnabled}" ng-click="triggerG2A()">\n                                    <span>On</span><span>Off</span>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n\n                </section>\n                <div class="settings-save-bar">\n                    <div class="settings-livestream-width">\n                        <button class="submitBtn {{save.save_status}}" ng-click="saveSettings()">\n                            <span class="saved">All Saved</span>\n                            <span class="save">Save</span>\n                            <bouncy class="saving"></bouncy>\n                            <div class="error">Sorry, an error occurred. Please try again.\n                                <div>If the problem persists, <a ng-controller="FeedBackDialogCtrl" ng-click="openDialog()">report here</a>.</div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- \n    \n    NEW LIVESTREAM \n    \n    -->\n    <div class="livestream-setup" ng-if="ready">\n        <h1>Set up your Livestream</h1>\n        <div class="sub"><span class="num">1.</span> Download and install one of the following Broadcast Tools:</div>\n        <div class="tools">\n            <div class="tool cf">\n                <a class="xsplit" href="http://www.xsplit.com/hitbox/signup" target="_blank">\n                        XSplit Broadcaster\n                        <div>www.xsplit.com/hitbox/signup</div>\n                    </a>\n                <a class="btn" href="https://www.xsplit.com/hitbox/signup" target="_blank">Download</a>\n            </div>\n            <div class="tool cf">\n                <a class="obs" href="http://obsproject.com/" target="_blank">\n                        Open Broadcaster Software\n                        <div>www.obsproject.com</div>\n                    </a>\n                <a class="btn" href="http://obsproject.com/download" target="_blank">Download</a>\n            </div>\n        </div>\n        <div class="sub"><span class="num">2.</span> Configure XSplit or OBS with these Settings:</div>\n        <div class="setup-info">\n            <dl>\n                <dt>CBR</dt>\n                <dd>ON</dd>\n            </dl>\n            <dl>\n                <dt>CFR<span>OBS only</span>\n                </dt>\n                <dd>ON</dd>\n            </dl>\n            <dl>\n                <dt>Keyframe Interval</dt>\n                <dd>2</dd>\n            </dl>\n            <dl>\n                <dt>Audio Codec</dt>\n                <dd>AAC</dd>\n            </dl>\n            <dl>\n                <dt>Preset</dt>\n                <dd>veryfast</dd>\n            </dl>\n        </div>\n        <div class="sub">\n            <span class="num">3.</span> See our Step by Step\n            <a href="http://help.hitbox.tv/customer/portal/topics/575577-how-to-stream/articles" target="_blank">Setup Instructions</a>\n        </div>\n        <form class="form_enclosed" name="livestreamForm" novalidate>\n\n\n            <!--                 <h1>Title & Game</h1>\n                <section>\n                    <label ng-class="{error: error.media_status}">\n                        Stream Title <span ng-show="error.media_status">{{error.media_status}}</span>\n                    </label>\n                    <input type="text" name="media_status" placeholder="" ng-model="media.media_status" required ng-class="{error: error.media_status}"/>\n                </section>\n                <section>\n                    <label>\n                        Game played\n                    </label>\n                    <input ui-select2="select2Options" ng-model="media.media_category_id"/>\n                </section>\n                <input type="hidden" name="media_description" ng-model="media.media_description" value=""/> -->\n\n            <div class="submitWrap">\n                <button type="submit" class="submitBtn" ng-click="create()">Continue</button>\n            </div>\n        </form>\n    </div>\n\n\n    <div ng-controller="cdnController" ng-if="roles.superadmin==\'admin\'">\n\n        <h1>CDNs available</h1>\n        <section>\n            <div ui-sortable="sortableOptionsList[0]" class="apps-container screen" ng-model="cdns">\n                <div class="cdns" ng-repeat="cdn in cdns" ng-show="!cdn.used">{{cdn.cdn_name}}</div>\n            </div>\n        </section>\n        <br>\n        <h1>CDNs enabled</h1>\n        <section>\n            <div ui-sortable="sortableOptionsList[1]" class="apps-container screen" ng-model="cdnList">\n                <div class="cdn-list" ng-repeat="cdn in cdnList" ng-if="cdn.cdn_id">\n                    {{cdn.cdn_name}}\n                    <input class="category" ui-select2="select2Country" ng-model="cdn.cdn_countries" />\n                </div>\n            </div>\n        </section>\n\n        <button class="submitBtn none" ng-click="update()">\n            <span class="save">Save</span>\n        </button>\n\n    </div>\n\n</div>\n'), $templateCache.put("partials/sub/settings_recordings.html", '<div ng-controller="RecordingsSettingsController" ng-switch on="hasRecordings">\r\n    <!-- no recordings -->\r\n    <div ng-switch-when="false" class="message-big">\r\n        <div ng-if="hasMedia">\r\n            <h1>No new recordings to edit!</h1>\r\n        </div>\r\n        <div ng-if="!hasMedia">\r\n            <h1>You have no recordings or videos.</h1> \r\n            <button class="btn-blue" ng-click="go(\'/settings/\'+user.user_name+\'/livestreams\')">\r\n                Start your stream and Live! it up.\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- recordings -->\r\n    <div ng-switch-default>\r\n        <div class="pageHeader">\r\n            <!--\r\n            <button class="btnOutline" ng-click="rec.selectAll=true">Select All</button>\r\n            <button class="btnOutline" \r\n                ng-disabled="selectAll" \r\n                ng-class="{btnDisabled: !selectAll, btnHoverRed: !selectAll}"\r\n                ng-click="deleteRecordings()">Delete</button>\r\n                -->\r\n            <div class="recAlert icon-attention">Recordings will be deleted after 14 days.</div>\r\n        </div>\r\n        <div class="inner" ng-controller="VideoEditorDialog">\r\n            <div ng-repeat="rec in recordings" ng-class="{selected: rec.selected, saved:rec.rec_saved_media_id}" class="list-item">\r\n                <div class="recItemInner">\r\n                    <!--\r\n                    <span class="checkbox checkbox-round">\r\n                        <input type="checkbox" ng-model="rec.selected" ng-click="selectAll=true" id="select{{$index}}" />\r\n                        <label for="select{{$index}}"></label>\r\n                    </span>\r\n                    -->\r\n                    <div class="thumbnailWrap nono">\r\n                        <div class="btnsOverlay">\r\n                            <button class="btn-blue" ng-click="editRec({{$index}});openEditor();">Edit & Save XXX</button><!--<a href="{{rec.rec_download_link}}" target="_blank"><button class="icon-download-alt icon-only" ng-click=""></button></a>--><button class="icon-trash icon-only btnHoverRed" ng-click="deleteMsgBox({{$index}})"></button>\r\n                        </div>\r\n                        <img fallback-src="/static/img/live/no-tn.jpg" src="{{config.imgUrl}}{{rec.thumbnail}}" />\r\n                    </div>\r\n                    <div class="meta">\r\n                        <ul class="metaTop">\r\n                            <li class="status">{{rec.rec_title}}</li>\r\n                            <!-- <li class="description">{{rec.media_description}}</li> -->\r\n                            <!-- <li class="game">{{rec.rec_category_name}}Gamename</li> -->\r\n                            <li class="duration">{{rec.rec_duration}}</li>\r\n                            <li class="date">{{rec.rec_date_added}}</li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li class="saved icon-ok" ng-show="rec.rec_saved_media_id">Clip saved</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n            <button class="showMore" ng-hide="recCount<=recLimit || !recordings" ng-click="nextPage()">Show more</button>     \r\n        </div>      \r\n    </div>\r\n</div>\r\n'), $templateCache.put("partials/sub/settings_revenues.html", '<div ng-controller="RevenueStatsSettingsController" class="revenues">\r\n    <div class="inner" ng-class="{\'statsLoading\': processing, \'noData\': !hasData}">\r\n        <!-- date select -->\r\n        <div class="dateRangeWrap cf">\r\n            <a ng-click="button_selection=3;getLast7Days()" ng-class="{\'active\': button_selection==3 }">Last 7 Days</a>\r\n            <a ng-click="button_selection=1;getLast30Days()" ng-class="{\'active\': button_selection==1 }">Last 30 Days</a>\r\n            <a ng-click="button_selection=2;getLast90Days()" ng-class="{\'active\': button_selection==2 }">Last 90 Days</a>\r\n            <div class="inputWrap">\r\n                <input type="daterange" ng-model="dates" format="MMM D YYYY" class="pull-right">\r\n                <div class="icon-down"></div>\r\n            </div>\r\n        </div>\r\n        <!-- key values -->\r\n        <div></div>\r\n        <div class="key-values flex-row">\r\n            \r\n            <div class="flex-grow key-values-concurrents">\r\n                <div class="key-values-title" ng-click="setViewerMode(\'all\')">Concurrent Viewers</div>\r\n                <div class="flex-row">\r\n                    <a class="flex-grow" ng-class="{active: viewerMode == \'all\' }" ng-click="setViewerMode(\'all\')">All</a>\r\n                    <a class="flex-grow" ng-class="{active: viewerMode == \'follower\'}" ng-click="setViewerMode(\'follower\')">Followers</a>\r\n                    <a ng-class="{active: viewerMode == \'subscriber\'}" ng-click="setViewerMode(\'subscriber\')">Subscribers</a>\r\n                    <a class="flex-grow" ng-class="{active: viewerMode == \'registered\'}" ng-click="setViewerMode(\'registered\')">Registered</a>\r\n                    <a class="flex-grow" ng-class="{active: viewerMode == \'android\'}" ng-click="setViewerMode(\'android\')">Android</a>\r\n                    <!--<a ng-class="{active: viewerMode == \'ios\'}" ng-click="setViewerMode(\'ios\')">iOS</a>-->\r\n                    <a class="flex-grow" ng-class="{active: viewerMode == \'web\'}" ng-click="setViewerMode(\'web\')">Web</a>\r\n                    <a class="flex-grow" ng-class="{active: viewerMode == \'embed\'}" ng-click="setViewerMode(\'embed\')">Embed</a>\r\n                </div>\r\n            </div>\r\n            <!-- ads -->\r\n            <div class="flex-grow key-values-ads" ng-click="setDisplayMode(\'ads\');" ng-class="{active: displayMode == \'ads\'}">\r\n                <div class="key-values-title">Commercials triggered</div>\r\n                <div class="total" ng-bind-html="stats.ads_total_html"></div>\r\n            </div>\r\n            <!-- ads -->\r\n            <div class="flex-grow key-values-followers" ng-click="setDisplayMode(\'followers\');" ng-class="{active: displayMode == \'followers\'}">\r\n                <div class="key-values-title">New Followers</div>\r\n                <div class="total" ng-bind-html="stats.new_followers_html"></div>\r\n            </div>\r\n            <!-- revenues -->\r\n            <div class="flex-grow key-values-revenues" ng-click="setDisplayMode(\'revenues\');" ng-class="{active: displayMode == \'revenues\'}" ng-hide="noRevenues">\r\n                <div class="key-values-title">Revenues <div class="update">Last Update: {{stats.revenues.last_updated}}</div></div>\r\n                <div class="total"><span ng-bind-html="stats.revenues.total"></span></div>\r\n            </div>\r\n            \r\n        </div>\r\n        <!-- main bar & line chart -->\r\n        <div class="mainChart">\r\n            <div class="noDataMsg" ng-hide="processing || hasData">\r\n                <img src="{{config.imgUrl}}/static/img/generic/surprised2.svg" />\r\n                <div>No data</div>\r\n                <div class="note">Revenue statistics are available the following day.</div>\r\n            </div>\r\n            <div class="loadAnim" ng-show="processing">\r\n                <div class="icon-spin-1"></div>\r\n            </div>\r\n            <div class="chartContent" ng-show="hasData">\r\n                <label class="value1">\r\n                    <span>\r\n                        <span ng-bind-html=\'stats.max\'></span>{{stats.label_max}}</span>\r\n                </label>\r\n                <label class="value2" ng-show="displayMode == \'revenues\'">\r\n                    <span>{{stats.label_sum}}\r\n                        <span ng-bind-html=\'stats.sum\'></span>\r\n                    </span>\r\n                </label>\r\n                <nvd3-line-plus-bar-chart id="mainChart" data="charts.revenues.data" interactive="true" tooltips="true" xaxistickvalues="charts.revenues.xAxisTickValuesFunction()" xaxistickformat="charts.revenues.xAxisTickFormat()" showxaxis="true" showyaxis="false" y1axistickformat="charts.revenues.dailyTickFormat()" y2axistickformat="charts.revenues.totalTickFormat()" width="" height="320" margin="{left:15,top:35,bottom:25,right:15}" tooltipcontent="charts.revenues.toolTipContentFunction()" ng-show="displayMode == \'revenues\'">\r\n                    <svg></svg>\r\n                </nvd3-line-plus-bar-chart>\r\n                <nvd3-discrete-bar-chart data="charts.viewers.data" id="barChart" reducexticks="true" width="" height="320" margin="{left:15,top:35,bottom:25,right:15}" x="xFunction()" y="yFunction()" xaxistickvalues="charts.viewers.xAxisTickValuesFunction()" xaxistickformat="charts.viewers.xAxisTickFormat()" interactive="true" tooltips="true" color="charts.viewers.barColor()" yaxistickformat="charts.viewers.yAxisTickFormat()" tooltipcontent="charts.viewers.toolTipContentFunction()" showxaxis="true" noData="" ng-show="displayMode == \'viewers\' || displayMode == \'ads\'" objectEquality="true">\r\n                    <svg></svg>\r\n                </nvd3-discrete-bar-chart>\r\n                <nvd3-line-chart data="charts.followers.data" id="lineChart" width="" height="320" margin="{left:15,top:35,bottom:25,right:15}" xaxistickformat="charts.followers.xAxisTickFormat()" yaxistickformat="charts.followers.yAxisTickFormat()" showxaxis="true" showyaxis="false" interactive="true" tooltips="true" tooltipcontent="charts.followers.toolTipContentFunction()" color="charts.viewers.colorFunction()" isArea="true" ng-show="displayMode == \'followers\'">\r\n                    <svg></svg>\r\n                </nvd3-discrete-bar-chart>\r\n            </div>\r\n        </div>\r\n        <div class="stats-note" ng-show="displayMode!=\'revenues\' && viewerMode!=\'all\'">Data available since July 15th</div>\r\n\r\n        <!-- GEO world map -->\r\n        <div class="worldmapWrap" ng-show="displayMode == \'revenues\'">\r\n            <div class="noDataMsg" ng-hide="processing || hasData">\r\n                <div>No data</div>\r\n            </div>\r\n            <div class="loadAnim" ng-show="processing">\r\n                <!-- <div class="icon-spin-1"></div> -->\r\n            </div>\r\n            <div ng-show="hasData" id="worldmap_countries" class="chartContent"></div>\r\n        </div>\r\n        <!-- GEO list -->\r\n        <div class="countryListWrap" ng-show="displayMode == \'revenues\'">\r\n            <div class="noDataMsg" ng-hide="processing || hasData">\r\n                <div>No data</div>\r\n            </div>\r\n            <div class="loadAnim" ng-show="processing">\r\n                <!-- <div class="icon-spin-1"></div> -->\r\n            </div>\r\n            <ul ng-show="hasData" class="list countryList chartContent">\r\n                <li ng-repeat="top in (filteredCountries = (topCountries | orderBy:\'earnings\':true | limitTo:countryListLimit))">\r\n                    <ul class="cf">\r\n                        <li class="title">{{top.country}}</li>\r\n                        <li class="change green"></li>\r\n                        <li class="percent">{{top.percent | number:2}}%</li>\r\n                        <li class="value">\r\n                            <span ng-bind-html=\'top.earnings_html\'></span>\r\n                        </li>\r\n                    </ul>\r\n                    <div class="bar" ng-style="{\'width\' : top.percent + \'%\'}"></div>\r\n                </li>\r\n                <li class="showMore" ng-hide="countryListLimit>6" ng-click="countryListLimit=150">Show more</li>\r\n                <li class="showMore" ng-show="countryListLimit>6" ng-click="countryListLimit=6">Show less</li>\r\n            </ul>\r\n        </div>\r\n        <!-- content -->\r\n        <div class="contentListWrap" ng-show="displayMode == \'revenues\'">\r\n            <div class="noDataMsg" ng-hide="processing || hasData">\r\n                <div>No data</div>\r\n            </div>\r\n            <div class="loadAnim" ng-show="processing">\r\n                <!-- <div class="icon-spin-1"></div> -->\r\n            </div>\r\n            <ul ng-show="hasData" class="list contentList chartContent">\r\n                <li>\r\n                    <ul class="cf">\r\n                        <li class="title">Livestream</li>\r\n                        <li class="change green"></li>\r\n                        <li class="percent">{{contents[\'live\'].percent | number:2}}%</li>\r\n                        <li class="value">\r\n                            <span ng-bind-html=\'contents["live"].earnings_html\'></span>\r\n                        </li>\r\n                    </ul>\r\n                    <div class="bar" ng-style="{\'width\' : contents[\'live\'].percent + \'%\'}"></div>\r\n                </li>\r\n                <li ng-hide="noSubscriptions">\r\n                    <ul class="cf">\r\n                        <li class="title">Subscriptions</li>\r\n                        <li class="change green"></li>\r\n                        <li class="percent">{{contents[\'subscriptions\'].percent | number:2}}%</li>\r\n                        <li class="value">\r\n                            <span ng-bind-html=\'contents["subscriptions"].earnings_html\'></span>\r\n                        </li>\r\n                    </ul>\r\n                    <div class="bar" ng-style="{\'width\' : contents[\'subscriptions\'].percent + \'%\'}"></div>\r\n                </li>\r\n                <li class="videosTotal">\r\n                    <ul class="cf">\r\n                        <li class="title">Videos</li>\r\n                        <li class="change green"></li>\r\n                        <li class="percent">{{contents[\'video\'].percent | number:2}}%</li>\r\n                        <li class="value">\r\n                            <span ng-bind-html=\'contents["video"].earnings_html\'></span>\r\n                        </li>\r\n                    </ul>\r\n                    <div class="bar" ng-style="{\'width\' : contents[\'video\'].percent + \'%\'}"></div>\r\n                </li>\r\n                <!--\r\n                <li class="videos" ng-repeat="video in (filteredVideos = (topVideos | orderBy:\'earnings\':true | limitTo:videosListLimit))">\r\n                    <ul class="cf">\r\n                        <li class="title"><a href="/video/{{video.id}}" target="_blank">{{video.title}}</a></li>\r\n                        <li class="value">{{video.earnings|toMoney:currency}}</li>\r\n                    </ul>\r\n                </li>\r\n-->\r\n                <!--\r\n                <li class="videos">\r\n                    <ul class="cf">\r\n                        <li class="title">Others</li>\r\n                        <li class="value">{{other_videos|toMoney:currency}}</li>\r\n                    </ul>\r\n                </li>\r\n-->\r\n                <!--\r\n                <li class="showMore" ng-hide="videosListLimit>6" ng-click="videosListLimit=150">Show more</li>\r\n                <li class="showMore" ng-show="videosListLimit>6" ng-click="videosListLimit=6">Show less</li>\r\n-->\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n'), $templateCache.put("partials/sub/settings_statistics.html", '<div ng-controller="StatisticsCtrl" class="revenues">\n    <div class="inner">\n        <!-- \n            Viewer Chart\n        -->\n        <div class="date-range-bar nono">\n            <span ng-click="rangeButton(62)">Last 2 Months</span>\n            <span ng-click="rangeLastMonth()">Last Month</span>\n            <span ng-click="rangeThisMonth()">This Month</span>\n            <span ng-click="rangeButton(7)">Last 7 Days</span>\n            <span ng-click="rangeYesterday()">Yesterday</span>\n            <span ng-click="rangeToday()">Today</span>\n            <daterange></daterange>\n        </div>\n        <!-- \n            key values \n        -->\n        <div ng-show="hasData || charts.processing">\n            <div class="key-metrics-wrap cf">\n                <!-- viewers -->\n                <div class="stats-metric viewers">\n                    <div class="title">Unique Visitors</div>\n                    <div class="value">{{stats.overall.totalUniques | number:0}}</div>\n                </div>\n                <!-- views -->\n                <div class="stats-metric views-total">\n                    <div class="title">Views</div>\n                    <div class="value">{{stats.overall.totalViews | number:0}}</div>\n                </div>\n                <!-- views -->\n                <div class="stats-metric viewed-hours">\n                    <div class="title">Viewed Hours</div>\n                    <div class="value">{{stats.overall.totalViewtime | number:2}}</div>\n                </div>\n                <!-- commercials -->\n                <div class="stats-metric commercials" ng-hide="noRevenues">\n                    <div class="title">Commercial Breaks</div>\n                    <div class="value">{{data.streamstats.totalads | number:0}}</div>\n                </div>\n                <!-- revenues -->\n                <div class="stats-metric revenues" ng-hide="noRevenues">\n                    <div class="title">Revenues\n                        <span class="update">Last Revenue Update: {{stats.revenues.last_updated}}</span>\n                    </div>\n                    <div class="value" ng-bind-html="stats.revenues.total"></div>\n                </div>\n            </div>\n            <!-- select metrics menu -->\n            <div class="dropdown display-setting">\n                <div class="dropdown-toggle">Select metrics\n                    <span class="icon-down"></span>\n                </div>\n                <div class="dropdown-menu select-metrics switches nono" ng-click="$event.stopPropagation()">\n                    <div ng-repeat="(key, prop) in selected_stats_series track by key">\n                        <label ng-hide="selected_labels[key] === false">\n                            <input ng-model="selected_stats_series[key]" type="checkbox" />\n                            <div>\n                                <div></div>\n                            </div>\n                            <span>{{selected_labels[key]}}</span>\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div class="csv-download" tooltip-placement="left" tooltip="Download your Channel Statistic" tooltip-append-to-body="true" ng-hide="charts.processing || !charts.streamstats.series.length">\n                <div ng-csv="getStatsCSV()" field-separator=";" filename="statistics.csv">\n                    <span>CSV</span>\n                    <div class="dl-button icon-download-alt"></div>\n                </div>\n            </div>\n            <!-- CHART -->\n            <div class="mainChart chartContent">\n                <div viewer-chart series="charts.streamstats.series" update="charts.streamstatsupdate.series" min="data.min" max="data.max" range-callback="charts.rangeCallback(min, max)" revenues="charts.hasRevenues" processing="{{charts.processing}}" theme="{{$root.theme}}">\n                </div>\n            </div>\n            <!-- \n            Revenue Chart \n        -->\n            <!--\n        <div class="mainChart chartContent" ng-if="displayMode == \'revenues\'">\n            <div revenue-chart series="charts.revenuestats.series" min="data.min" max="data.max" range-callback="charts.rangeCallback(min, max)">\n            </div>\n        </div>\n    -->\n            <!-- Ads Chart -->\n            <!--\n        <div class="mainChart chartContent" style="max-width: 70em; padding: 2em;" ng-if="displayMode == \'ads\'">\n            <div ad-chart series="charts.adstats.series" min="data.min" max="data.max">\n            </div>\n        </div>\n    -->\n            <!-- Follower Chart -->\n            <!--\n        <div class="mainChart chartContent" style="max-width: 70em; padding: 2em;" ng-if="displayMode == \'followers\'">\n            <div follower-chart series="charts.followerstats.series" min="data.min" max="data.max">\n            </div>\n        </div>\n    -->\n\n            <div class="cf">\n\n                <!-- GEO world map Views -->\n                <div class="fltL stats-map-wrap">\n                    <div class="stats-title">Viewer Map</div>\n                    <div class="worldmapWrap">\n                        <div class="loadAnim" ng-show="charts.processing">\n                            <div class="icon-spin-1"></div>\n                        </div>\n                        <div id="worldmap_countries_overall" class="worldmap"></div>\n                    </div>\n                </div>\n                <!-- GEO world map Revenues -->\n                <div class="fltR stats-map-wrap" ng-hide="noRevenues">\n                    <div class="stats-title">Revenues Map</div>\n                    <div class="worldmapWrap">\n                        <div class="loadAnim" ng-show="charts.processing">\n                            <div class="icon-spin-1"></div>\n                        </div>\n                        <!--<div id="worldmap_countries_revenues" class="chartContent"></div>-->\n                        <div id="worldmap_countries_revenues" class="worldmap"></div>\n                    </div>\n                </div>\n            </div>\n            <div class="cf">\n                <!-- GEO list Revenues -->\n                <div class="countryListWrap fltL" ng-hide="noRevenues">\n                    <div class="loadAnim" ng-show="charts.processing">\n                       <div class="icon-spin-1"></div>\n                    </div>\n                    <div class="stats-title">Revenues by Country</div>\n                    <ul class="list countryList chartContent" ng-show="!charts.processing">\n                        <li ng-repeat="top in (filteredCountries = (topCountries | orderBy:\'earnings\':true | limitTo:countryListLimit))">\n                            <ul class="cf">\n                                <li class="title">{{top.country}}</li>\n                                <li class="change green"></li>\n                                <li class="percent">{{top.percent | number:2}}%</li>\n                                <li class="value">\n                                    <span ng-bind-html=\'top.earnings_html\'></span>\n                                </li>\n                            </ul>\n                            <div class="bar" ng-style="{\'width\' : top.percent + \'%\'}"></div>\n                        </li>\n                        <li class="showMore" ng-hide="countryListLimit>6" ng-click="countryListLimit=150">Show more</li>\n                        <li class="showMore" ng-show="countryListLimit>6" ng-click="countryListLimit=6">Show less</li>\n                    </ul>\n                </div>\n                <!-- content -->\n                <div class="contentListWrap fltR" ng-hide="noRevenues">\n                    <div class="loadAnim" ng-show="charts.processing">\n                        <div class="icon-spin-1"></div>\n                    </div>\n                    <div class="stats-title">Revenues by Content</div>\n                    <ul class="list contentList chartContent" ng-show="!charts.processing">\n                        <li>\n                            <ul class="cf">\n                                <li class="title">Livestream</li>\n                                <li class="change green"></li>\n                                <li class="percent">{{contents[\'live\'].percent | number:2}}%</li>\n                                <li class="value">\n                                    <span ng-bind-html=\'contents["live"].earnings_html\'></span>\n                                </li>\n                            </ul>\n                            <div class="bar" ng-style="{\'width\' : contents[\'live\'].percent + \'%\'}"></div>\n                        </li>\n                        <li ng-hide="noSubscriptions">\n                            <ul class="cf">\n                                <li class="title">Subscriptions</li>\n                                <li class="change green"></li>\n                                <li class="percent">{{contents[\'subscriptions\'].percent | number:2}}%</li>\n                                <li class="value">\n                                    <span ng-bind-html=\'contents["subscriptions"].earnings_html\'></span>\n                                </li>\n                            </ul>\n                            <div class="bar" ng-style="{\'width\' : contents[\'subscriptions\'].percent + \'%\'}"></div>\n                        </li>\n                        <li class="videosTotal">\n                            <ul class="cf">\n                                <li class="title">Videos</li>\n                                <li class="change green"></li>\n                                <li class="percent">{{contents[\'video\'].percent | number:2}}%</li>\n                                <li class="value">\n                                    <span ng-bind-html=\'contents["video"].earnings_html\'></span>\n                                </li>\n                            </ul>\n                            <div class="bar" ng-style="{\'width\' : contents[\'video\'].percent + \'%\'}"></div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="inner" ng-show="!hasData && !charts.processing">\n        No Data available\n    </div>\n</div>\n'), $templateCache.put("partials/sub/settings_teams.html", '<div class="inner" ng-controller="TeamsSettingsController">\r\n    <!-- \r\n    \r\n    EXISTING TEAMS \r\n    \r\n    -->\r\n    <div ng-repeat="teamlist in teamlist.teams" class="itemWrap" ng-init="{}" ng-class="{invitation:!teamlist.info.group_accepted}">\r\n        <div class="itemInnerWrap cf">\r\n            <div class="invite" ng-if="!teamlist.info.group_accepted">\r\n                <div class="msg">Invitation<div>from {{teamlist.info.group_display_name}}</div></div>\r\n                <!-- <div class="name">{{teamlist.info.group_display_name}}</div>   -->\r\n                <div class="btns">\r\n                    <button type="submit" class="btn btn-outline" ng-click="decline({{$index}})">Decline</button>\r\n                    <button type="submit" class="btn btn-green" ng-click="acceptInvite({{$index}})">Join</button>\r\n                </div>\r\n            </div>\r\n            <div class="item team-item">\r\n                <div class="header">\r\n                    <div class="coverError" ng-show="errors[$index].team_cover">{{errors[$index].team_cover}}</div>\r\n                    <div class="logoError" ng-show="errors[$index].team_logo">{{errors[$index].team_logo}}</div>\r\n                    <div ng-if="teamlist.info.group_role == \'admin\'" class="uploadWrap">\r\n                        <uploaddroparea uda-image="{{config.imgUrl}}{{teamlist.info.group_cover}}" uda-success-callback="cbcoversuccess($index)" class="cover" uda-data-name="cover" uda-url="/api/upload/team/" uda-delete-callback="cbdeletecover($index)" uda-name="Cover" uda-fallback-image="{{config.imgUrl}}{{config.fallbackImages.teamCover}}">\r\n                        </uploaddroparea>\r\n                        <uploaddroparea uda-image="{{config.imgUrl}}{{teamlist.info.group_logo_large}}" uda-success-callback="cblogosuccess($index)" class="logo round" uda-data-name="file" uda-url="/api/upload/team/" uda-delete-callback="cbdeletelogo($index)" uda-name="Logo" uda-fallback-image="{{config.imgUrl}}{{config.fallbackImages.teamLogo}}">\r\n                        </uploaddroparea>\r\n                    </div>\r\n                    <div ng-if="teamlist.info.group_role != \'admin\'">\r\n                        <a href="/team/{{teamlist.info.group_name}}">\r\n                            <div ng-if="teamlist.info.group_cover" class="cover" back-img="{{config.imgUrl}}{{teamlist.info.group_cover}}">\r\n                            </div>\r\n                            <div ng-if="teamlist.info.group_cover == \'\'" class="cover" back-img="{{config.imgUrl}}{{config.fallbackImages.teamCover}}">\r\n                            </div>\r\n                        </a>\r\n                        <a href="/team/{{teamlist.info.group_name}}">\r\n                            <div ng-if="teamlist.info.group_logo_large" class="logo round" back-img="{{config.imgUrl}}{{teamlist.info.group_logo_large}}">\r\n                            </div>\r\n                            <div ng-if="teamlist.info.group_logo_large == \'\'" class="logo round" back-img="{{config.imgUrl}}{{config.fallbackImages.teamLogo}}">\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <div class="grad"></div>\r\n                </div>\r\n                <div class="content">\r\n                    <div class="title">\r\n                        <div ng-if="teamlist.info.group_role == \'admin\'">\r\n\r\n                            <span class="name" ng-click="myForm.$show()" editable-text="teamlist.info.group_display_name" e-form="myForm" onbeforesave="checkDisplayName($data, $index)" onaftersave="cbsaveteam($index)">{{teamlist.info.group_display_name}}</span>\r\n\r\n                            <span class="edit icon-pencil" ng-click="myForm.$show()" ng-show="!myForm.$visible" tooltip-placement="top" tooltip="Change the appearance of your Team-name" tooltip-append-to-body="true" tooltip-popup-delay=\'300\'></span>\r\n\r\n                            <div ng-show="errors[$index].team_display_name" class="editable-error">{{errors[$index].team_display_name}}</div>\r\n                            <div ng-show="myForm.$visible" class="tip icon-attention-circled">Team name is: <span>{{teamlist.info.group_name}}</span>. You can change cases or add spaces and punctuation.</div>\r\n                        </div>\r\n                        <div class="name" ng-if="teamlist.info.group_role == \'member\'">{{teamlist.info.group_display_name}}</div>\r\n                        <div>\r\n                            <a class="url" href="/team/{{teamlist.info.group_name}}">hitbox.tv/team/{{teamlist.info.group_name}}</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class="description">\r\n                        <!-- <label>Description</label> -->\r\n                        <div ng-show="errors[$index].team_description" class="editable-error">{{errors[$index].team_description}}</div>\r\n                        <span tooltip-placement="top" tooltip="Change short description" tooltip-append-to-body="true" tooltip-popup-delay=\'300\' editable-textarea="teamlist.info.group_text" onaftersave="cbsaveteam($index)" ng-if="teamlist.info.group_role == \'admin\'">{{teamlist.info.group_text}}</span>\r\n                        <span ng-if="teamlist.info.group_role == \'member\'">{{teamlist.info.group_text}}</span>\r\n                    </div>\r\n                    <div class="users cf">\r\n                        <!-- <label>Members<span>{{usercount[$index]}}</span></label> -->\r\n                        <userlist class="userListWrap" \r\n                            ng-if="teamlist.info.group_role == \'admin\'"\r\n                            show-user-options="true" \r\n                            teaminit="{{teamlist.info.group_name}}" \r\n                            public-length="usercount[$index]" \r\n                            show-invited="true" \r\n                            show-kick="true"  \r\n                            callback-kick="cbkickuser()">\r\n                        </userlist>\r\n                        <userlist class="userListWrap" \r\n                            ng-if="teamlist.info.group_role != \'admin\' && teamlist.info.group_accepted"\r\n                            show-user-options="true" \r\n                            teaminit="{{teamlist.info.group_name}}" \r\n                            public-length="usercount[$index]" >\r\n                        </userlist>\r\n                        <userlist class="userListWrap" \r\n                            ng-if="!teamlist.info.group_accepted"\r\n                            show-user-options="true" \r\n                            teaminit="{{teamlist.info.group_name}}" \r\n                            public-length="usercount[$index]" >\r\n                        </userlist>\r\n                        <div class="addUser">    \r\n                            <button class="btn-outline round" ng-if="teamlist.info.group_role == \'admin\'" \r\n                                bs-popover="\'partials/sub/add_user.html\'" \r\n                                data-unique="1" \r\n                                data-placement="top" \r\n                                tooltip-placement="top" \r\n                                tooltip="Add a member" \r\n                                tooltip-popup-delay=\'300\' \r\n                                ng-click="$event.stopPropagation()">\r\n                                <div class="{{loading ? \'icon-spin-1\' : \'icon-plus\'}} icon-only"></div>\r\n                            </button>\r\n                        </div>\r\n\r\n<!--                         <div class="addUser">    \r\n                            <button class="btn-outline round" \r\n                            ng-if="teamlist.info.group_role == \'admin\'"\r\n                            generic-popover \r\n                            gp-width="310" \r\n                            gp-height="100" \r\n                            gp-template="partials/sub/add_user.html" \r\n                            gp-classes=\'["team-add-user-popover","nono"]\' \r\n                            gp-on="click">\r\n                            <div class="{{loading ? \'icon-spin-1\' : \'icon-plus\'}} icon-only"></div></button>\r\n                        </div> -->\r\n                                \r\n                    </div>\r\n                </div>\r\n				<div class="options" ng-if="teamlist.info.group_accepted">\r\n					<div class="fltL">\r\n						<span ng-show="teamlist.info.group_default">This is your default team</span>\r\n						<a ng-hide="teamlist.info.group_default" ng-click="setDefaultTeam($index);">Make default team</a>\r\n					</div>\r\n					<div class="fltR">\r\n						<a class="disband" ng-if="teamlist.info.group_role==\'member\'" ng-click="leaveTeam({{$index}})">Leave</a>\r\n                        <a class="disband" ng-if="teamlist.info.group_role==\'admin\'" ng-click="disband($index)">Disband Team</a>\r\n					</div>\r\n				</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- \r\n    \r\n        NEW TEAM BUTTON \r\n    \r\n    -->\r\n    <div class="itemWrap">\r\n        <div class="createTeam">\r\n            <button ng-show="!create" class="btn-green icon-plus" ng-click="openNewTeamDlg()">Create a new Team</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n'), $templateCache.put("partials/sub/settings_videos.html", '<div class="video-manager-videos" ng-controller="VideoManagerController" ng-switch on="content">\n\n    <div class="key-metrics-wrap">\n        <div class="key-metric-box" ng-class="{active : content == \'videosContent\'}" ng-click="content = \'videosContent\'">\n            <div class="value">{{following_total}}</div>\n            <div class="title">Videos</div>\n        </div>\n        <div class="key-metric-box" ng-class="{active : content == \'recordingsContent\'}" ng-click="content = \'recordingsContent\'">\n            <div class="value">{{following_total}}</div>\n            <div class="title">Recordings</div>\n        </div>\n    </div>\n    <!-- videos -->\n    <div ng-switch-when="videosContent" ng-controller="MediaSettingsController">\n        <div ng-hide="showEditorVideo">\n\n            <!-- no videos -->\n            <div >\n                <ul class="list-header">\n                    <li ng-show="hasMedia || noSearchResult">\n                        <!--<div class="col0">\n                        \n                        <span class="checkbox">\n                            <input type="checkbox" id="selectAll" ng-model="listRow.selectAll"  />\n                            <label for="selectAll"></label>\n                        </span>\n                        \n                    </div>-->\n                        <div class="col-1">\n                            <!--\n                        <span class="dropdown listAction">\n                            <button dropdown-toggle\n                                 class="btnOutline"\n                                 ng-disabled="!media.selected" \n                                 ng-class="{\'btnDisabled\' : !media.selected}">\n                                Action<span class="icon-down-dir iconR"></span></button>\n                                <ul class="dropdown-menu">\n                                    <li><a ng-click="actionMsgBox(\'public\')">Public</a></li>\n                                    <li><a ng-click="actionMsgBox(\'private\')">Private</a></li>\n                                    <li class="divider"></li>\n                                    <li><a ng-click="actionMsgBox(\'delete\')">Delete</a></li>\n                                </ul>\n                        </span>\n                        -->\n                        </div>\n                        <div class="col-2">\n                            <input type="search" ng-model="vodSearch" placeholder="Search" class="filter" />\n                        </div>\n                        <div class="col-3">\n                            <span class="dropdown list-filter">\n                                <div class="list-filter-btn" dropdown-toggle>\n                                    View:\n                                    <span>{{orderName}}</span>\n                                    <span class="icon-down-dir iconR"></span>\n                                </div>\n                                <ul class="dropdown-menu">\n                                    <li><a ng-class="{active:orderProp==\'media_date_added\'}" ng-click="filter=\'recent\';orderProp=\'media_date_added\';reverse=true;orderName=\'Newest\'">Newest</a>\n                                    </li>\n                                    <li><a ng-class="{active:orderProp==\'media_views\'}" ng-click="filter=\'popular\';orderProp=\'media_views\';orderName=\'Most Viewed\'">\n                                        Most Viewed</a>\n                                    </li>\n                                    <li class="divider"></li>\n                                    <!-- filter -->\n                                    <li><a ng-class="{active:publicOnly}" ng-click="hiddenOnly=false;pushedYT=false;publicOnly=!publicOnly">Public</a>\n                                    </li>\n                                    <li><a ng-class="{active:hiddenOnly}" ng-click="publicOnly=false;pushedYT=false;hiddenOnly=!hiddenOnly">Private</a>\n                                    </li>\n                                    <li class="divider"></li>\n                                    <li><a ng-class="{active:pushedYT}" ng-click="publicOnly=false;hiddenOnly=false;pushedYT=!pushedYT">Pushed to Youtube</a>\n                                    </li>\n                                </ul>\n                            </span>\n                        </div>\n                    </li>\n                </ul>\n                <div style="display:none;">\n                    <googleplus clientid="324846633868-jb2lh2e2l84n41b0i4o3i7h2ckrr4ipp" ng-hide="googlehide=true"></googleplus>\n                </div>\n                <div ng-show="!hasMedia && noSearchResult && !isLoading" class="message-big">\n                    <h1>No Videos found</h1>\n                </div>\n                <div ng-show="!hasMedia && !noSearchResult && !isLoading" class="message-big">\n                    <h1>You have no saved Videos</h1>\n<!--                 <button class="btn-blue" ng-click="go(\'/settings/\'+user.user_name+\'/recordings\')">\n                    but some recordings that wait for editing</button>\n                </button> -->\n                </div>\n \n\n                <ul class="list-content" ng-controller="MediaEditorDialog">\n                    <li ng-repeat="media in media.video" ng-class="{\'selected\': media.selected, \'processing\':media.media_processing}" class="nono cf list-item">\n                        <!--<div class="col0">\n                        \n                        <span class="checkbox">\n                            <input type="checkbox" ng-model="media.selected" id="select{{$index}}" />\n                            <label for="select{{$index}}"></label>\n                        </span>\n                        \n                    </div>-->\n                        <div class="col-1">\n                            <a href="/video/{{media.media_id}}">\n                                <div class="thumbnailWrap">\n                                    <div class="processingMsg">\n                                        <span class="icon-spin3 animate-spin"></span>\n                                        <span>Processing</span>\n                                    </div>\n                                    <div class="icon-play icon-only"></div>\n                                    <img fallback-src="/static/img/live/no-tn.jpg" ng-src="{{config.imgUrl}}{{media.media_thumbnail}}" />\n                                </div>\n                            </a>\n                        </div>\n                        <div class="meta col-2">\n                            <div class="status"><a href="/video/{{media.media_id}}">{{media.media_status}}</a>\n                            </div>\n                            <div class="description">{{media.media_description}}</div>\n                            <div class="game">{{media.category_name}}</div>\n                            <!-- <div class="tags">{{media.media_tags}}</div> -->\n                            <div class="buttons" ng-hide="media.media_processing">\n                                <button class="" ng-click="editVideo({{$index}});">Edit</button>\n                                <button class="icon-down-dir icon-only"\n                                    generic-popover \n                                    gp-width="200" \n                                    gp-height="350" \n                                    gp-template="partials/sub/settings_videos_actions_popover.html" \n                                    gp-classes=\'["detail-more-popover","nono"]\' \n                                    gp-on="click">\n                                </button>\n                                <button class="cancel btnOutline" ng-click="deleteMsgBox({{$index}})" ng-if="media.media_processing">Cancel</button>\n                            </div>\n                        </div>\n                        <div class="meta col-3">\n                            <div class="views">\n                                <span>{{media.media_views | number}}</span>\n                                <span>Views</span>\n                            </div>\n                            <div class="duration">{{media.media_duration_format}}</div>\n                            <div class="date">{{media.media_date_added_format}}</div>\n                            <div class="icons">\n                                <div ng-show="media.media_hidden" class="icon-lock icon-only" tooltip-popup-delay=\'300\' tooltip-append-to-body=\'true\' tooltip-placement="top" tooltip=\'Private\'></div>\n                                <div ng-show="media.media_yt_upload_status==1" class="icon-youtube icon-only" tooltip-popup-delay=\'300\' tooltip-append-to-body=\'true\' tooltip-placement="top" tooltip=\'Pushed to YouTube\'></div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n                <bouncy ng-if="isLoading"></bouncy>\n                <button class="showMore" ng-hide="mediaCount<limit || !media.video" ng-click="nextPage()">Show more</button>\n            </div>\n        </div>\n        <div ng-include="\'partials/sub/settings_editor_video.html\'" ng-show="showEditorVideo"></div>\n    </div>\n    <!-- \n        recordings\n    -->\n    <div ng-switch-when="recordingsContent" ng-controller="RecordingsSettingsController">\n        <div ng-hide="showEditorRec">\n\n            <div>\n                <div class="page-header">\n                    <div class="rec-alert icon-attention">Recordings will be deleted after 14 days.</div>\n                </div>\n\n                <ul class="list-header">\n                    <li ng-show="hasRecordings || noSearchResult">\n                        <!--<div class="col0">\n                                \n                        <span class="checkbox">\n                            <input type="checkbox" id="selectAll" ng-model="listRow.selectAll"  />\n                            <label for="selectAll"></label>\n                        </span>\n                        \n                    </div>-->\n                        <div class="col-1">\n                            <!--\n                        <span class="dropdown listAction">\n                            <button dropdown-toggle\n                                 class="btnOutline"\n                                 ng-disabled="!media.selected" \n                                 ng-class="{\'btnDisabled\' : !media.selected}">\n                                Action<span class="icon-down-dir iconR"></span></button>\n                                <ul class="dropdown-menu">\n                                    <li><a ng-click="actionMsgBox(\'public\')">Public</a></li>\n                                    <li><a ng-click="actionMsgBox(\'private\')">Private</a></li>\n                                    <li class="divider"></li>\n                                    <li><a ng-click="actionMsgBox(\'delete\')">Delete</a></li>\n                                </ul>\n                        </span>\n                        -->\n                        </div>\n                        <div class="col-2">\n <!--                           <input type="search" ng-model="recSearch" placeholder="Search" class="filter" />-->\n                        </div>\n                        <div class="col-3">\n                        </div>\n                    </li>\n                </ul>\n                <div ng-show="!hasRecordings && noSearchResult && !isLoading" class="message-big">\n                    <h1>No Recordings found</h1>\n                </div>\n                <bouncy ng-if="isLoading"></bouncy>\n                <div ng-show="!hasRecordings && !noSearchResult && !isLoading" class="message-big">\n                    <h1>You have no Recordings.</h1>\n<!--                 <button class="btn-blue" ng-click="go(\'/settings/\'+user.user_name+\'/recordings\')">\n                    but some recordings that wait for editing</button>\n                </button> -->\n                </div>\n\n                <ul class="list-content" ng-controller="VideoEditorDialog">\n                    <li ng-repeat="rec in recordings" ng-class="{selected: rec.selected, saved:rec.rec_saved_media_id}" class="nono cf">\n                        <!--<div class="col0">\n                        \n                        <span class="checkbox">\n                            <input type="checkbox" ng-model="media.selected" id="select{{$index}}" />\n                            <label for="select{{$index}}"></label>\n                        </span>\n                        \n                    </div>-->\n                        <div class="col-1">\n                            \n                            <div>\n                                <div class="thumbnailWrap">\n                                    <div class="saved-check icon-ok">Clip saved</div>\n                                    <div class="processingMsg">\n                                        <span class="icon-spin3 animate-spin"></span>\n                                        <span>Processing</span>\n                                    </div>\n                                    <!--<div class="icon-play icon-only" ng-click="editVideo({{$index}});"></div>-->\n                                    <img fallback-src="/static/img/live/no-tn.jpg" ng-src="{{config.imgUrl}}{{rec.thumbnail}}" />\n                                </div>\n                            </div>\n                        </div>\n                        <div class="meta col-2">\n                            <div class="status">{{rec.rec_title}}</div>\n                            <div class="game">{{rec.category_name}}</div>\n                            <button class="cancel btnOutline" ng-click="deleteMsgBox({{$index}})" ng-if="media.media_processing">Cancel</button>\n                            <div class="buttons">\n                                <button class="btn-blue" ng-click="editRec({{$index}});">Edit & Save</button>\n                                <button class="icon-trash icon-only btn-hover-red" ng-click="deleteMsgBox({{$index}})"></button>\n                            </div>\n                        </div>\n                        <div class="meta col-3">\n                            <div class="duration">{{rec.rec_duration}}</div>\n                            <div class="date">{{rec.rec_date_added_format}}</div>\n                        </div>\n                    </li>\n                </ul>\n                <button class="showMore" ng-hide="recCount<recLimit || !recordings" ng-click="nextPage()">Show more</button>\n\n    <!-- \n                <div class="recItem" ng-repeat="rec in recordings" ng-class="{selected: rec.selected, saved:rec.rec_saved_media_id}">\n                    <div class="recItemInner">\n                        <div class="thumbnailWrap nono">\n                            <div class="btnsOverlay">\n                                <button class="btn-blue" ng-click="editRec({{$index}})">Edit & Save</button>\n                                <button class="icon-trash icon-only btn-hover-red" ng-click="deleteMsgBox({{$index}})"></button>\n                            </div>\n                            <img fallback-src="/static/img/live/no-tn.jpg" src="{{config.imgUrl}}{{rec.thumbnail}}" />\n                        </div>\n                        <div class="meta">\n                            <ul class="metaTop">\n                                <li class="status">{{rec.rec_title}}</li>\n                                <li class="duration">{{rec.rec_duration}}</li>\n                                <li class="date">{{rec.rec_date_added}}</li>\n                            </ul>\n                            <ul>\n                                <li class="saved icon-ok" ng-show="rec.rec_saved_media_id">Clip saved</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <button class="showMore" ng-hide="recCount<=recLimit || !recordings" ng-click="nextPage()">Show more</button>\n    -->\n                \n            </div>\n        </div>\n        <div ng-include="\'partials/sub/settings_editor_recording.html\'" ng-show="showEditorRec"></div>\n    </div>\n</div>\n            \n            \n\n'), $templateCache.put("partials/sub/settings_videos_actions_popover.html", '<a class="menu-item" ng-click="editVideo({{$index}});">Info & Settings</a>\n<a class="menu-item" ng-show="media.channel.user_partner" href="{{media.media_download_link}}" target="_blank">Download</a>\n<a class="menu-item" ng-click="pushYT({{$index}})">Push to Youtube</a>\n<a class="menu-item" ng-click="deleteMsgBox({{$index}})">Delete</a>'), $templateCache.put("partials/sub/settings_videos_sort_popover.html", "<a class=\"menu-item\" ng-class=\"{active:orderProp=='media_date_added'}\" ng-click=\"filter='recent';orderProp='media_date_added';reverse=true;orderName='Newest'\">Newest</a>\n<a class=\"menu-item\" ng-class=\"{active:orderProp=='media_views'}\" ng-click=\"filter='popular';orderProp='media_views';orderName='Most Viewed'\">Most Viewed</a>\n" + '<a class="menu-item" ng-class="{active:publicOnly}" ng-click="hiddenOnly=false;pushedYT=false;publicOnly=!publicOnly">Public</a>\n<a class="menu-item" ng-class="{active:hiddenOnly}" ng-click="publicOnly=false;pushedYT=false;hiddenOnly=!hiddenOnly">Private</a>\n<a class="menu-item" ng-class="{active:pushedYT}" ng-click="publicOnly=false;hiddenOnly=false;pushedYT=!pushedYT">Pushed to Youtube</a>\n'), $templateCache.put("partials/sub/subscription_popover.html", '<div class="sub-pop closeOnDocumentClick" \n    id="subscriptionPopoverId" \n    ng-click="$event.stopPropagation()">\n<!--     <div class="cover" ng-style="{\'background-image\' : \'url(\' + config.imgUrl + media.media_bg_image + \')\'}"></div> -->\n    <div class="sub-pop-header">\n        <div class="name">{{displayName}}</div>\n        <div class="type">Channel Subscription</div>\n        <div class="price">{{subscription.subscription.plan.plan_currency}} 4.99</div>        \n    </div>\n\n    <div class="sub-benefits">\n        <div class="emotes cf">\n            <div class="head">Chat Emotes</div>\n            <div class="emotes-wrap">\n                <img ng-src="{{$root.config.imgUrl}}{{subBadges[0].badge_image}}" tooltip-placement="top" tooltip="Chat Badge" />    \n                <img ng-repeat="emote in subEmotes" ng-src="{{$root.config.imgUrl}}{{emote[0]}}" tooltip-placement="top" tooltip="{{emote[1]}}" /> \n            </div>   \n        </div>\n        <div class="g2a" ng-show="!subscribed && g2aEnabled">\n            <div class="head"><strong>Free</strong> Gift Card</div>\n            <div class="card">\n                <div class="title">Gift Card</div>\n                <div class="price">{{subscription.subscription.plan.plan_currency}} 4.99</div>\n            </div>    \n        </div>\n    </div>\n\n    <div ng-show="subscribed && !subscribedCanceled" class="sub-pop-0">You are subscribed.</div>\n    <div ng-show="subscribedCanceled" class="sub-pop-1">You canceled your subscription.</div>\n</div>'), $templateCache.put("partials/sub/topListLive.html", '\n\n\n\n\n\n\n\n<ul>\n	<li ng-repeat="livestream in livestreams | limitTo:thu" ui-animate class="tLi" id="" ng-class="">\n	    <div class="ratio169"></div>\n        <a href="/{{livestream.channel.name}}">\n            <img ng-src="{{livestream.preview.large}}" class="tImg">\n            <img ng-src="{{livestream.channel.logo}}" class="tLogo" ng-class="tLogo">\n            <div class="tMetaWrap" ng-class="tnMetaWrap">\n            	<div class="tMeta">\n                    <div class="tViewers">{{livestream.viewers}}</div>\n            		<div class="tStatus"><span>{{livestream.channel.display_name}}</span> &#149; {{livestream.channel.status}}</div>\n                    <div class="tChannelGame">{{livestream.game}}</div>\n                </div>\n            </div>\n        </a>\n    </li>\n</ul>\n\n<button ng-click="thu=thu+8">more</button>'), $templateCache.put("partials/index.html", '<!doctype html>\n<html ng-app="app" ng-controller="appController" class="{{browser.name}}">\n\n<head>\n    <title ng-bind="(title || \'hitbox - Live! it up.\')"></title>\n    <meta charset="utf-8">\n    <meta name="fragment" content="!" />\n    <meta name="google" value="notranslate">\n    <meta property="fb:app_id" content="203160066526888" />\n    <meta content="app-id=930371982" name="apple-itunes-app" />\n    <meta property="og:type" content="{{meta.type || \'video\'}}" />\n    <meta property="og:url" content="{{meta.url || \'http://www.hitbox.tv\'}}" />\n    <meta property="og:title" content="{{meta.title || \'hitbox -\\\'Live! it up.\\\'\'}}" />\n    <meta property="og:image" content="{{meta.image || \'http://www.hitbox.tv/img/hitbox-og.jpg\'}}" />\n    <meta property="og:ttl" content="5" />\n    <meta property="fb:admins" content="1387826554" />\n    <meta name="author" content="{{meta.author || \'hitbox.tv\'}}">\n    <meta name="title" content="{{meta.title || \'hitbox -\\\'Live! it up.\\\'\'}}">\n    <meta name="description" content="{{meta.description || \'hitbox is a service where you can watch live broadcasts of video games in high quality with near-to-no-delay. Watch, chat, and interact with people passionate about gaming.\'}}">\n    <meta name="medium" content="video">\n    <meta name="keywords" content="live, stream, games, {{meta.title || \'hitbox\'}}, {{meta.author || \'hitbox.tv\'}}">\n    <meta name=\'rating\' content=\'general\'>\n    <meta property="og:description" content="{{meta.description || \'hitbox is a service where you can watch live broadcasts of video games in high quality with near-to-no-delay. Watch, chat, and interact with people passionate about gaming.\'}}">\n    <meta property="og:site_name" content="hitbox.tv">\n    <meta ng-if="meta.stream" property="al:android:url" content="http://www.hitbox.tv/embed/{{meta.stream}}">\n    <meta property="al:android:app_name" content="hitbox">\n    <meta property="al:android:package" content="hitbox.app">\n    <meta name="twitter:image" content="{{meta.image || \'http://www.hitbox.tv/img/logo-ico-g.png\'}}">\n    <meta ng-if="meta.stream" name="twitter:url" content="http://www.hitbox.tv/{{meta.stream}}">\n    <meta ng-if="meta.stream" name="twitter:card" content="player">\n    <meta name="twitter:title" content="{{meta.title || \'hitbox -\\\'Live! it up.\\\'\'}}">\n    <meta name="twitter:app:name:googleplay" content="hitbox">\n    <meta name="twitter:app:id:googleplay" content="hitbox.app">\n    <meta ng-if="meta.stream" name="twitter:app:url:googleplay" content="http://www.hitbox.tv/{{meta.stream}}">\n    <meta name="twitter:site" content="@hitboxlive">\n    <meta name="twitter:description" content="{{meta.description || \'hitbox is a service where you can watch live broadcasts of video games in high quality with near-to-no-delay. Watch, chat, and interact with people passionate about gaming.\'}}">\n\n    <meta ng-if="meta.stream" property="og:video" content="http://www.hitbox.tv/embed/{{meta.stream}}">\n    <meta ng-if="meta.stream" property="og:video:type" content="application/x-shockwave-flash">\n    <meta ng-if="meta.stream" property="og:video:width" content="480">\n    <meta ng-if="meta.stream" property="og:video:height" content="270">\n    <meta ng-if="meta.stream" name="twitter:player" content="http://www.hitbox.tv/{{meta.stream}}">\n    <meta ng-if="meta.stream" name="twitter:player:width" content="480">\n    <meta ng-if="meta.stream" name="twitter:player:height" content="270">\n\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n\n    <style>\n    [ng\\:cloak],\n    [ng-cloak],\n    .ng-cloak {\n        display: none !important;\n    }\n    </style>\n    <base href="/" />\n    <!--(if target dev)>\n    <link rel="stylesheet" href="css/styles.css">\n    <!(endif)-->\n    <!--(if target testserver)>\n    <link rel="stylesheet" href="dist/main.min.css">\n    <!(endif)-->\n    <!--(if target production)>\n    <link rel="stylesheet" href="dist/main.min.css">\n    <!(endif)-->\n    <link rel="shortcut icon" href="favicon.ico">\n    <script async>\n    window.twttr = (function(d, s, id) {\n        var t, js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) return;\n        js = d.createElement(s);\n        js.id = id;\n        js.src = "https://platform.twitter.com/widgets.js";\n        fjs.parentNode.insertBefore(js, fjs);\n        return window.twttr || (t = {\n            _e: [],\n            ready: function(f) {\n                t._e.push(f)\n            }\n        });\n    }(document, "script", "twitter-wjs"));\n    </script>\n</head>\n\n<body ng-class="{maintenance : $root.messageShow,drawerOpen:drawerOpen}" bgcolor="#212121" class="{{section}} {{(loggedIn)? \'loggedIn\' : \'loggedOut\'}} {{theme}} {{mobileBrowser}}" bndocumentclick>\n    <div ng-cloak ng-if="!detached && $root.messageShow" id="message" class="global-message">\n        <div class="">\n            <div class="icon-cancel close" ng-click="$root.messageShow=false"></div>\n            <div class="message" ng-bind-html="$root.maintenanceMessage"></div>\n        </div>\n    </div>\n    <!--<div id="nav" ng-if="!detached && section != \'channel\'" ng-include="\'partials/sub/nav.html\'"></div>-->\n    <div ui-view="viewNav" class="view-nav"></div>\n    <!--<div id="gameselect" ng-if="!detached" class="home-browse" ng-show="section ==\'home\'" ng-include="\'partials/sub/home_gamebar.html\'"></div>-->\n    <!-- <div ui-view="viewGameBrowse"></div> -->\n    <!--<div id="spotlight" ng-if="!detached && section ==\'home\'" ng-include="\'partials/sub/home_spotlight.html\'"></div>    -->\n    <!-- <div ui-view="viewSpotlight"></div>   -->\n    <div ui-view="viewPlayer" class="view-player"></div>\n    <div ui-view="viewChat" class="view-chat"></div>\n    <!--<div id="currentview" ng-if="!detached" ng-view class="view {{animation}}" ng-class="{drawerOpen:drawerOpen}"></div>-->\n    <div id="currentview" class="view {{section}}" ui-view="viewMain"></div>\n    <!--<div id="drawer" ng-show="drawerOpen" ng-if="!detached" ng-include="\'partials/sub/drawer.html\'"></div>-->\n    <!--<div id="drawer" ui-view="viewDrawer"></div>-->\n    <!--<div ng-if="detached" ng-view class="embedView"></div>-->\n    <script type="text/javascript" src="//www.google.com/recaptcha/api/js/recaptcha_ajax.js"></script>\n    <script type="text/javascript" async src="//www.gstatic.com/cv/js/sender/v1/cast_sender.js"></script>\n    <!--(if target dev)>\n    <script src="assets/app.js"></script>\n    <!(endif)-->\n    <!--(if target testserver)>\n    <script src="dist/hitbox-ui.min.js"></script>\n    <!(endif)-->\n    <!--(if target production)>\n    <script src="dist/hitbox-ui.min.js"></script>\n    <!(endif)-->\n\n    <!--(if target dev)>\n    <script src="https://local.dev.hitbox.tv:35730/livereload.js"></script>\n    <!(endif)-->\n</body>\n\n</html>\n'), $templateCache.put("partials/main/401.html", '<div class="page" ng-controller="errorController">\n    <div class="pageerror">\n        <div class="errorcode">401</div>\n        <div class="line1">Sorry, something went wrong.</div>\n        <div class="line2">Coming here too often? <a ng-controller="FeedBackDialogCtrl" ng-click="openDialog()">Tell us!</a></div>\n    </div>\n</div>'), $templateCache.put("partials/main/404.html", '<div class="page" ng-controller="error404Controller">\n    <div class="pageerror">\n        <div class="errorcode">404</div>\n        <div class="line1">Sorry, i don\'t know where that is. </div>\n    </div>\n</div>'), $templateCache.put("partials/main/banned.html", '<div class="page">\n    <div class="pageerror">\n        <div class="line1">This channel has been closed due to terms of service violations.</div>\n    </div>\n</div>'), $templateCache.put("partials/main/banuser.html", '<div class="feedback">\n    <form accept-charset="UTF-8" class="form_enclosed formL" name="feedbackForm" novalidate>\n        <section>\n            <label for="banForm.reason">Reason</label>\n            <div ng-show="error.reason" class="input-help">{{error.reason}}</div>\n            <select ui-select2 ng-model="banForm.reason">\n                <option ng-repeat="category in ban_reasons" value="{{category}}">{{category}}</option>\n            </select>\n        </section>\n        \n        <section>\n            <label for="banForm.length">Length</label>\n            <div ng-show="error.length" class="input-help">{{error.length}}</div>\n            <select ui-select2 ng-model="banForm.length">\n                <option ng-repeat="length in ban_lengths" value="{{length.key}}">{{length.value}}</option>\n            </select>\n        </section>\n        \n        <section>\n            <label for="banForm.addtl_reason">Reason</label>\n            <div ng-show="error.addtl_reason" class="input-help">{{error.addtl_reason}}</div>\n            <textarea placeholder="Detailed Explanation for Ban" class="desc" name="addtl_reason" ng-model="banForm.addtl_reason"></textarea>\n        </section>\n\n        <div class="submitWrap">\n            <input type="submit" class="btn btn-red" ng-value="banForm.length == -1 ? \'Warn User\' : \'Ban User\'" ng-click="send()" />\n        </div>\n    </form>\n</div>'), $templateCache.put("partials/main/chat.html", '<div id="mobile-layout">\n    <div class="player-layout"></div>\n    <div class="nav-layout"></div>\n    <div class="chat-mobile-wrapper">\n        <div id="chat" ng-controller="ChatCtrl" ng-hide="chatOptions.chatState==0" class="{{$root.section}}">\n            <div class="embed-chat-connect" ng-show="showChatInitBtn">\n                <button class="btn-blue" ng-click="initChat(); showChatInitBtn = false;">Connect to chat</button>\n            </div>\n            <div ng-if="media.media_type != \'video\'" id="chat-resizer" class="detail-hide-on-mobile" resizer resizer-width="9" resizer-min-pixel="300" resizer-max-percent="40">\n            </div>\n            <div class="chat-main" height-watch public-height="heights.chatHeight">\n                <table ng-if="chatOptions.chatState" border="0" cellpadding="0" cellspacing="0" ng-hide="chatOptions.chatTab!=\'chat\'" class="chat-table" border="0" cellpadding="0" cellspacing="0" ng-class="{\'sticky-users\': stickyUserList}">\n                    <!-- sticky message -->\n                    <tr class="chat-row1" ng-show="(motd.status == \'running\' && !motd.hidden) && !hideControls" ng-controller="MotdViewerCtrl">\n                        <td class="chat-sticky" ng-include="\'partials/sub/chat_motd.html\'"></td>\n                    </tr>\n                    <!-- poll -->\n                    <tr class="chat-row1 chatPoll" ng-show="(poll.status == \'running\' || poll.status == \'paused\' || poll.status == \'ended\')  && !hideControls" ng-controller="PollViewerCtrl">\n                        <td class="pollWrap" ng-include="\'partials/sub/chat_poll.html\'"></td>\n                    </tr>\n                    <!-- raffle -->\n                    <tr class="chat-row1 chatPoll" ng-show="(raffle.status == \'running\' || raffle.status == \'paused\' || raffle.status == \'ended\')  && !hideControls" ng-controller="RaffleViewerCtrl">\n                        <td class="pollWrap" ng-include="\'partials/sub/chat_raffle.html\'"></td>\n                    </tr>\n                    <!-- subscriber notice -->\n                    <tr class="chat-row1" ng-controller="SubNotifyCtrl" ng-show="lastSubscriber && !hideControls">\n                        <td class="chat-sbnt" ng-include="\'partials/sub/chat_sbnt.html\'"></td>\n                    </tr>\n                    <!-- chat -->\n                    <tr class="chat-row2">\n                        <td class="chat" ng-include="\'partials/sub/chat_chat.html\'"></td>\n                    </tr>\n                </table>\n\n                <div class="chat-userlist hide-on-mobile" ng-include="\'partials/sub/chat_userlist.html\'" ng-class="{\'sticky-users\': stickyUserList}" ng-if="showUsers">\n                </div>\n\n                <!-- twitter -->\n                <div class="chat-twitter-wrap" ng-show="chatOptions.chatTab==\'twitter\'">\n                    <a class="twitter-timeline" id="detail-twitter-timeline" href="http://twitter.com/{{media.channel.twitter_account}}" data-theme="{{twitter_theme}}" height="{{heights.chatHeight-50}}" data-link-color="#999999" data-chrome="noheader nofooter noborders transparent" data-screen-name="{{media.channel.twitter_account}}" data-widget-id="494844360114974720" ng-if="twitterWidgetReady">Tweets by @{{media.channel.twitter_account}}</a>\n                    <div class="chat-input-wrap">\n                        <div class="chat-input-inner-wrap">\n                            <div ng-if="!loggedIn" ng-controller="LoginCtrl" ng-click="openDialog()" class="chat-input">\n                                Sign in to Tweet to @{{media.channel.twitter_account}} ...\n                            </div>\n                            <textarea ng-if="loggedIn && shoutout.twitter.enabled" id="twitter-input" class="chat-input" maxlength="300" required ng-model="shoutout.message" ui-keypress="{enter:\'shoutOut($event)\'}" placeholder="Tweet to @{{media.channel.twitter_account}}" ng-disabled="" focus-on="focusMsgTxt" msd-elastic>\n                            </textarea>\n                            <div ng-if="loggedIn && !shoutout.twitter.enabled" ng-click="connectTwitter()" class="chat-input">\n                                Connect your Twitter Account to Tweet to @{{media.channel.twitter_account}} ...\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!--\n                <script>\n                window.twttr = (function(d, s, id) {\n                    var t, js, fjs = d.getElementsByTagName(s)[0];\n                    if (d.getElementById(id)) return;\n                    js = d.createElement(s);\n                    js.id = id;\n                    js.src = "http://platform.twitter.com/widgets.js";\n                    fjs.parentNode.insertBefore(js, fjs);\n                    return window.twttr || (t = {\n                        _e: [],\n                        ready: function(f) {\n                            t._e.push(f)\n                        }\n                    });\n                }(document, "script", "twitter-wjs"));\n                </script>\n            -->\n            </div>\n        </div>\n    </div>\n</div>\n'), $templateCache.put("partials/main/content.html", '<div class="page page-content {{tab}} static" ng-controller="ContentController">\n	<div ng-include="tabFile"></div>\n</div>'), $templateCache.put("partials/main/coupon.html", '<div ng-controller="CouponController" class="coupon-page">\r\n\r\n    <h1 class="icon-hitbox-logo">Coupon</h1>\r\n\r\n    <button class="sign-in btn-blue" ng-if="!loggedIn" ng-controller="LoginCtrl" ng-click="openDialog()">\r\n        Sign in to use your coupon\r\n    </button>\r\n\r\n    <div ng-if="loggedIn">\r\n        \r\n        <!-- input & error - hide on sucess -->\r\n        <div ng-hide="sub_media_name">\r\n\r\n            <div ng-show="coupon_error" class="coupon-error">\r\n                Your coupon code seems to be incorrect.\r\n            </div>\r\n\r\n            <div class="input-wrap">\r\n                <input type="text" ng-model="coupon.code" placeholder="Enter Code ..."></input>\r\n                <div class="submit btn btn-input" ng-click="useCode()">Submit</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- sucess -->\r\n        <div ng-show="sub_media_name">\r\n            <div class="coupon-success">\r\n                You are now subscribed to <br> {{sub_media_name}}\r\n            </div>\r\n            <a ui-sref="detail({channel:sub_media_name})">Go to {{sub_media_name}}\'s channel</a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n'), $templateCache.put("partials/main/dashboard.html", '<div class="dash" ng-controller="DashboardController">\r\n    <div class="navbar">\r\n        <div class="dash-tab-settings" ng-class="{active:dashTab==\'settings\'}" ng-click="dashTab=\'settings\'">\r\n            {{username}}\'s Dashboard\r\n        </div>\r\n        <div class="dash-tab-log" ng-class="{active:dashTab==\'log\'}" ng-click="dashTab=\'log\'">\r\n            Activity Log\r\n        </div>\r\n    </div>\r\n    <div class="dash-settings">\r\n        <div class="colL nono" ng-show="dashTab==\'settings\'">\r\n            <!--      \r\n                hostmode warning \r\n            -->\r\n            <section ng-show="hostMode">\r\n                <div class="hostmode">You are in host mode !</div>\r\n            </section>\r\n            <!--      \r\n                header & preview \r\n            -->\r\n            <section class="">\r\n                <div class="head flex-row offline" ng-hide="mediastatus.media_is_live==1">\r\n                    <div class="title flex-grow">Offline</div>\r\n                    <div class="right">\r\n                        <a class="fltR icon-help-circled" href="http://help.hitbox.tv/customer/portal/topics/575577" target="_blank">How to stream</a>\r\n                    </div>\r\n                </div>\r\n                <div class="head flex-row" ng-show="mediastatus.media_is_live==1">\r\n                    <div class="title flex-grow" ng-click="previewCollapse=!previewCollapse">\r\n                        <span class="status">Live</span>\r\n                        <span class="viewers icon-user">{{mediastatus.media_views}}</span>\r\n                    </div>\r\n                    <div class="right" ng-click="previewCollapse=!previewCollapse">\r\n                        Preview\r\n                        <span ng-show="previewCollapse" class="icon-down"></span>\r\n                        <span ng-hide="previewCollapse" class="icon-up"></span>\r\n                    </div>\r\n                </div>\r\n                <div class="content preview" collapse="previewCollapse">\r\n                    <div class="video-player">\r\n                        <mediaplayer ng-if="!previewCollapse" type="live" mediaid="media.livestream[0].media_id" dashboard="true"></mediaplayer>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <!--      \r\n                stream config WHEN TRANSCODINGS & live\r\n            -->\r\n            <section class="config" ng-if="media.livestream[0].media_transcoding==1 && mediastatus.media_is_live==1">\r\n                <div class="head trans-cubic flex-row" ng-class="{orange:mediaInfo.quality == 1,red:mediaInfo.quality == 2}" ng-click="configCollapse=!configCollapse">\r\n                    <div class="title flex-grow">\r\n                        Stream Configuration: <span class="config-value">{{mediaInfo.quality_text}}</span>\r\n                    </div>\r\n                    <div class="right">\r\n                        <span>Details</span>\r\n                        <span ng-show="configCollapse" class="icon-down"></span>\r\n                        <span ng-hide="configCollapse" class="icon-up"></span>\r\n                    </div>\r\n                </div>\r\n                <div class="content" collapse="configCollapse">\r\n                    <div class="video cf">\r\n                        <div class="content-head">Video</div>\r\n                        <div class="label">\r\n                            <div>Mode</div>\r\n                            <div>Keyframe Interval</div>\r\n                            <div>Resolution</div>\r\n                            <div>Bitrate</div>\r\n                            <div>Fps</div>\r\n                            <div>Codec</div>\r\n                            <div>Encoding Profile</div>\r\n                        </div>\r\n                        <div class="values">\r\n                            <div class="blue">\r\n                                <span tooltip="Encoding Mode must be CBR" tooltip-placement="right"><span>Always use</span> CBR</span>\r\n                            </div>\r\n                            <div class="blue">\r\n                                <span tooltip="Keyframe Interval must be 2 seconds" tooltip-placement="right"><span>Always use</span> 2sec</span>\r\n                            </div>\r\n                            <div ng-class="{orange:mediaInfo.height.quality == 1,red:mediaInfo.height.quality == 2}">\r\n                                <span tooltip="Video Height must be 720px - 1080px" tooltip-placement="right">\r\n                                {{mediaInfo.width.value}}x{{mediaInfo.height.value}}px\r\n                                <span class="icon-attention-circled"></span></span>\r\n                            </div>\r\n                            <div ng-class="{orange:mediaInfo.vbitrate.quality == 1,red:mediaInfo.vbitrate.quality == 2}">\r\n                                <span tooltip="Bitrate must be 2000 - 3500 kbit" tooltip-placement="right">\r\n                                {{mediaInfo.vbitrate.value}}\r\n                                <span class="icon-attention-circled"></span></span>\r\n                            </div>\r\n                            <div ng-class="{orange:mediaInfo.fps.quality == 1,red:mediaInfo.fps.quality == 2}">\r\n                                <span tooltip="Framerate must be 25 - 30 Fps" tooltip-placement="right">\r\n                                {{mediaInfo.fps.value}}\r\n                                <span class="icon-attention-circled"></span></span>\r\n                            </div>\r\n                            <div ng-class="{orange:mediaInfo.vcodec.quality == 1,red:mediaInfo.vcodec.quality == 2}">\r\n                                <span tooltip="Codec must be \'h264/x264\'" tooltip-placement="right">\r\n                                {{mediaInfo.vcodec.value}}\r\n                                <span class="icon-attention-circled"></span></span>\r\n                            </div>\r\n                            <div ng-class="{orange:mediaInfo.profile.quality == 1,red:mediaInfo.profile.quality == 2}">\r\n                                <span tooltip="Encoding Profile must be \'High\'" tooltip-placement="right">\r\n                                {{mediaInfo.profile.value}}\r\n                                <span class="icon-attention-circled"></span></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="audio cf">\r\n                        <div class="content-head">Audio</div>\r\n                        <div class="">\r\n                            <div class="label">\r\n                                <div>Bitrate</div>\r\n                                <div>Codec</div>\r\n                            </div>\r\n                            <div class="values">\r\n                                <div ng-class="{orange:mediaInfo.abitrate.quality == 1,red:mediaInfo.abitrate.quality == 2}">\r\n                                    <span tooltip="Bitrate must be 96 - 320 kbit" tooltip-placement="right">\r\n                                    {{mediaInfo.abitrate.value}}\r\n                                    <span class="icon-attention-circled"></span></span>\r\n                                </div>\r\n                                <div ng-class="{orange:mediaInfo.acodec.quality == 1,red:mediaInfo.acodec.quality == 2}">\r\n                                    <span tooltip="Codec must be \'aac\'" tooltip-placement="right">\r\n                                    {{mediaInfo.acodec.value}}\r\n                                    <span class="icon-attention-circled"></span></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="extra">\r\n                        <div class="updated">To update you must restart your stream.</div>\r\n                        <a href="http://help.hitbox.tv/customer/portal/articles/1320322" target="_blank" class="icon-help-circled">XSplit Setup</a>\r\n                        <a href="http://help.hitbox.tv/customer/portal/articles/1320003" target="_blank" class="icon-help-circled">OBS Setup</a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <!--    TITLE, GAME inputs    -->\r\n            <section class="inputs" ng-class="{islive:mediastatus.media_is_live == 1}">\r\n                <div class="content">\r\n                    <div ng-repeat="media in media.livestream">\r\n                        <form accept-charset="UTF-8" class="form_enclosed formL" name="livestreamForm" novalidate ng-show="$index==0 && media">\r\n                            <div class="textarea-wrap">\r\n                                <div class="label">Stream Title</div>\r\n                                <textarea name="media_status" placeholder="Stream title" ng-model="media.media_status" ui-keypress="{enter:\'updateDashboard()\'}" ng-change="save.save_status = \'none\'" class="stream-title" ng-class="{bigger:media.media_status.length>65}" msd-elastic></textarea>\r\n                            </div>\r\n                            <div class="item">\r\n                                <div class="label">Game played</div>\r\n                                <div class="icon-attention-circled" tooltip="Select the game you are currently playing." tooltip-placement="right" tooltip-append-to-body="true"></div>\r\n                                <input ui-select2="select2Options" class="category" ng-model="media.media_category_id" ng-click="save.save_status = \'none\'" />\r\n                            </div>\r\n                            <div class="item" ng-class="{secondCountry:secondCountry}">\r\n                                <div class="label">\r\n                                    Your Country / Languages\r\n                                </div>\r\n                                <div class="icon-attention-circled" tooltip="Select your home country or language. You can select 2. They will show up next to your profile image." tooltip-placement="right" tooltip-append-to-body="true"></div>\r\n                                <input class="country" ui-select2="select2Country" ng-model="media.media_countries" ng-click="save.save_status = \'none\'" />\r\n                            </div>\r\n                            <div class="switches switches-dark visibility">\r\n                                <div class="icon-attention-circled" tooltip="If hidden your channel will not be publicly listed" tooltip-placement="right" tooltip-append-to-body="true"></div>\r\n                                <label>\r\n                                    <input ng-model="media.media_hidden" negate type="checkbox" ng-change="save.save_status = \'none\'" />\r\n                                    <div>\r\n                                        <div></div>\r\n                                    </div>\r\n                                    <span>\r\n                                        <font ng-show="media.media_hidden">Channel is hidden</font>\r\n                                        <font ng-hide="media.media_hidden">Channel is visible</font>\r\n                                    </span>\r\n                                </label>\r\n                            </div>\r\n                            <!--\r\n                            <div class="item settings">\r\n                                <div>Stream: \r\n                                <div class="switch nono" ng-class="{switchOFF: media.media_hidden}" \r\n                                    ng-click="media.media_hidden=!media.media_hidden;save.save_status = \'none\'">\r\n                                    <span>Visible</span><span>Hidden</span></div></div>\r\n\r\n                                <div ng-show="isPartner">Recordings:\r\n                                <div class="switch nono dash-rec" \r\n                                    ng-class="{switchOFF: media.media_recording != 1}" ng-click="setMediaRecording();save.save_status = \'none\'">\r\n                                    <span>On</span><span>Off</span></div>\r\n                                    <span class="icon-help-circled" \r\n                                        tooltip="Record your broadcasts. Stream must be offline to switch." \r\n                                        tooltip-placement="right" \r\n                                        tooltip-append-to-body="true"></span></div>\r\n                            </div>\r\n    -->\r\n                            <div class="buttons">\r\n                                <button class="btn-green" ng-click="updateDashboard()" ng-class="{\'disabled\':save.save_status == \'saved\'}">\r\n                                    <span class="icon-spin-1 animate-spin icon-only" ng-show="save.save_status == \'saving\'"></span>\r\n                                    <span ng-show="save.save_status == \'saved\'">Saved</span>\r\n                                    <span ng-show="save.save_status == \'error\'">Error saving</span>\r\n                                    <span ng-show="save.save_status == \'none\'">Save</span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <!-- commercial break -->\r\n            <section class="comm nono" ng-class="{commRunning:adRunning, pushy: agoCounter>1200 && !adRunning}">\r\n                <div collapse="agoCounter<900" ng-hide="agoCounter<=0">\r\n                    <div class="comm-note icon-emo-unhappy">You had no commercial break for {{agoCounterFormated}}</div>\r\n                </div>\r\n                <div collapse="agoCounter>=900" ng-hide="agoCounter<=0">\r\n                    <div class="comm-note">Last commercial break {{agoCounterFormated}} ago</div>\r\n                </div>\r\n                <div class="comm-cards">\r\n                    <div class="card2 trans-cubic">\r\n                        <span>Commercial break: {{counter}}sec</span>\r\n                    </div>\r\n                    <div class="card1 trans-cubic">\r\n                        <div class="plus-minus icon-minus-circled" ng-click="decAds()" ng-disabled="ads<2"></div>\r\n                        <button class="btn-green adBtn" ng-click="adRunning=true; commercialBreak();">\r\n                            <span>Run {{ads}} Ad{{ads>1 ? \'s\' : \'\'}}</span>\r\n                            <!-- <span class="time">&#126; {{ads*30}}sec</span> -->\r\n                        </button>\r\n                        <div class="plus-minus icon-plus-circled" ng-click="incAds()" ng-disabled="ads>9"></div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <!-- social shout out -->\r\n            <section class="social" ng-class="{collapsed:socialCollapse}">\r\n                <div class="head nono flex-row">\r\n                    <div class="title flex-grow" ng-click="socialCollapse=!socialCollapse">\r\n                        Social Media Post</div>\r\n                    <div class="right">\r\n                        <span ng-show="socialCollapse" class="icon-down" ng-click="socialCollapse=!socialCollapse"></span>\r\n                        <span ng-hide="socialCollapse" class="icon-up" ng-click="socialCollapse=!socialCollapse"></span>\r\n                    </div>\r\n                </div>\r\n                <div class="content" collapse="socialCollapse">\r\n                    <!--\r\n                    <div>Autopost:\r\n                    <div class="switch nono" ng-class="{switchOFF: !shoutout.autopost}" ng-click="shoutout.autopost=!shoutout.autopost"><span>On</span><span>Off</span></div> <span class="icon-help-circled" tooltip="Automatically post to your connected social networks on going live." tooltip-placement="right" tooltip-append-to-body="true"></span></div>\r\n                -->\r\n                    <form name="" novalidate class="flex-row">\r\n                        <textarea name="message" autocomplete="off" spellcheck="false" maxlength="140" ng-model="shoutout.message" class="flex-grow" ng-class="{bigger:shoutout.message.length>65}" focus-on="!socialCollapse" msd-elastic></textarea>\r\n                        <div class="buttons-right">\r\n                            <div class="social-icons">\r\n                                <div class="icon-facebook-squared icon-only fb" ng-if="shoutout.facebook.enabled" ng-class="{\'disabled\':!shoutout.facebook.active}" ng-disabled="!shoutout.facebook.enabled" ng-click="shoutout.facebook.active = !shoutout.facebook.active"></div>\r\n                                <a class="icon-facebook-squared icon-only fb disabled" ng-if="!shoutout.facebook.enabled" tooltip-placement="top" tooltip="Connect your Facebook Account" tooltip-append-to-body="true" href="/settings/{{session.user_name}}/account" target="_blank"></a>\r\n                                <div class="icon-twitter icon-only tw" ng-if="shoutout.twitter.enabled" ng-class="{\'disabled\':!shoutout.twitter.active}" ng-disabled="!shoutout.twitter.enabled" ng-click="shoutout.twitter.active = !shoutout.twitter.active"></div>\r\n                                <a class="icon-twitter icon-only tw disabled" ng-if="!shoutout.twitter.enabled" tooltip-placement="top" tooltip="Connect your Twitter Account" tooltip-append-to-body="true" href="/settings/{{session.user_name}}/account" target="_blank"></a>\r\n                            </div>\r\n                            <button class="btn-green post" ng-class="{\'disabled\':(!shoutout.facebook.active && !shoutout.twitter.active) || shoutout.message == \'\'}" ng-click="shoutOut()">\r\n                                <span ng-show="shoutout.loading == 0">Post</span>\r\n                                <span class="icon-spin-1 animate-spin icon-only" ng-show="shoutout.loading > 0"></span>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n\r\n            <!-- sticky chat message -->\r\n            <section ng-controller="MotdBroadcasterCtrl" class="sticky {{motd.status}}" ng-class="{islive:motd.status==\'running\', collapsed:motdCollapse}">\r\n                <div class="head nono flex-row">\r\n                    <div class="title flex-grow" ng-click="collapseMotd()" ng-disabled="motd.status == \'running\'">\r\n                        Sticky Chat Message</div>\r\n                    <div class="right">\r\n                        <span class="reset" ng-click="reset()" ng-show="motd.data == true">Reset</span>\r\n                        <span ng-show="motdCollapse" class="icon-down" ng-click="collapseMotd()"></span>\r\n                        <span ng-hide="motdCollapse" class="icon-up" ng-click="collapseMotd()"></span>\r\n                    </div>\r\n                </div>\r\n                <div class="content" collapse="motdCollapse">\r\n                    <form name="startForm" role="form" novalidate ng-hide="started" class="flex-row">\r\n                        <textarea name="message" placeholder="Post a sticky message ..." autocomplete="off" spellcheck="false" ng-model="motd.message" maxlength="{{max_msgotd_length}}" class="flex-grow" ng-disabled="motd.status == \'running\'" ng-class="{bigger:motd.message.length>65}" focus-on="!motdCollapse" msd-elastic></textarea>\r\n                        <div class="buttons-right">\r\n                            <button class="btn-green" ng-show="motd.status == \'none\'" ng-disabled="motd.message == \'\'" ng-click="start()" ng-class="{\'disabled\':motd.message == \'\'}">Post</button>\r\n                            <button class="btn-red" ng-show="motd.status == \'running\'" ng-click="end()">Hide</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n\r\n            <!-- poll -->\r\n            <section ng-controller="PollBroadcasterCtrl" class="poll {{poll.status}}" ng-class="{islive:poll.status==\'running\'||poll.status==\'paused\', collapsed:pollCollapse}">\r\n                <div class="head nono flex-row">\r\n                    <div class="title flex-grow" ng-click="collapsePoll()">\r\n                        <span ng-show="poll.status == \'none\'">Poll</span>\r\n                        <span ng-show="poll.status == \'paused\'">Poll is paused</span>\r\n                        <span ng-show="poll.status == \'running\'">Poll running <span>{{ poll.uptime | date:\'mm:ss\' }}</span></span>\r\n                    </div>\r\n                    <div class="right">\r\n                        <span class="reset" ng-click="reset()" ng-show="poll.data == true && poll.status == \'none\'">Reset</span>\r\n                        <span ng-show="pollCollapse" class="icon-down" ng-click="collapsePoll()"></span>\r\n                        <span ng-hide="pollCollapse" class="icon-up" ng-click="collapsePoll()"></span>\r\n                    </div>\r\n                </div>\r\n                <div class="content" collapse="pollCollapse">\r\n                    <div class="error" ng-show="$parent.raffleRunning">You need to end your running raffle before you can start a poll.</div>\r\n                    <form name="startForm" role="form" novalidate ng-hide="$parent.raffleRunning">\r\n                        <div class="switches switches-dark">\r\n                            <label tooltip="" ng-show="chatOptions.subEnabled">\r\n                                <input ng-model="poll.subscriberOnly" type="checkbox" ng-change="" ng-disabled="poll.status != \'none\'" />\r\n                                <div>\r\n                                    <div></div>\r\n                                </div>\r\n                                <span>Subscribers Only</span>\r\n                            </label>\r\n                            <label tooltip="">\r\n                                <input ng-model="poll.followerOnly" type="checkbox" ng-change="" ng-disabled="poll.status != \'none\'" />\r\n                                <div>\r\n                                    <div></div>\r\n                                </div>\r\n                                <span>Followers Only</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="textarea-wrap">\r\n                            <div class="label">Question</div>\r\n                            <textarea name="question" placeholder="{{placeholders.question}}" autocomplete="off" spellcheck="false" ng-model="poll.question" ng-disabled="poll.status != \'none\'" maxlength="{{max_poll_question_length}}" ng-class="{bigger:poll.question.length>65}" focus-on="!pollCollapse"></textarea>\r\n                        </div>\r\n                        <div class="item trans-cubic" ng-repeat="choice in poll.choices">\r\n                            <div class="label">{{$index+1}}. Option</div>\r\n                            <input type="text" name="text" placeholder="{{placeholders.choice}}" autocomplete="off" spellcheck="false" required ng-model="choice.text" ng-change="addChoice($index)" ng-disabled="poll.status != \'none\'" maxlength="{{max_poll_option_length}}">\r\n                            <div class="bar trans-cubic" ng-hide="poll.status == \'none\'" ng-style="choice.barSize($index)"></div>\r\n                            <div class="votes" ng-hide="poll.status == \'none\'">\r\n                                {{choice.votes}}<span>Vote{{choice.votes!=1?\'s\':\'&nbsp&nbsp\'}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <!--\r\n                        <input type="text" name="timetorun" placeholder="{{placeholders.timetorun}}" autocomplete="off" spellcheck="false" ng-model="poll.timetorun" maxlength="{{max_poll_time_length}}" ng-hide="poll.status != \'none\'">\r\n                        <input type="text" name="uptime" ng-disabled="true" ng-show="poll.status != \'none\'" ng-model="poll.uptime"> -->\r\n                        <div class="buttons">\r\n                            <button class="btn-green" ng-class="{\'disabled\':poll.start_button_disabled}" ng-show="poll.status == \'none\'" ng-click="start()">Start</button>\r\n                            <button class="btn-red" ng-show="poll.status == \'running\'" ng-click="pause()">Stop</button>\r\n                            <button class="btn-green" ng-show="poll.status == \'paused\'" ng-click="resume()">Resume</button>\r\n                            <button class="btn-red" ng-show="poll.status == \'paused\'" ng-click="end()">End</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n\r\n            <!-- raffle -->\r\n            <section ng-controller="RaffleBroadcasterCtrl" class="poll {{raffle.status}}" ng-class="{islive:raffle.status==\'running\'||raffle.status==\'paused\'||raffle.status==\'ended\', collapsed:raffleCollapse}">\r\n                <div class="head nono flex-row">\r\n                    <div class="title flex-grow" ng-click="collapseRaffle()">\r\n                        <span ng-show="raffle.status == \'none\'">Giveaway</span>\r\n                        <span ng-show="raffle.status == \'paused\'">Pick the Winners or Resume</span>\r\n                        <span ng-show="raffle.status == \'ended\'">Pick the Winners</span>\r\n                        <span ng-show="raffle.status == \'hidden\'">Giveaway</span>\r\n                        <span ng-show="raffle.status == \'running\'">Giveaway running <span>{{ raffle.uptime | date:\'mm:ss\' }}</span></span>\r\n                    </div>\r\n                    <div class="right">\r\n                        <span class="reset" ng-click="reset()" ng-show="raffle.data == true || raffle.status == \'ended\'">Reset</span>\r\n                        <span ng-show="raffleCollapse" class="icon-down" ng-click="collapseRaffle()"></span>\r\n                        <span ng-hide="raffleCollapse" class="icon-up" ng-click="collapseRaffle()"></span>\r\n                    </div>\r\n                </div>\r\n                <div class="content" collapse="raffleCollapse">\r\n                    <div class="error" ng-show="$parent.pollRunning">You need to end your running poll before you can start a raffle.</div>\r\n                    <form name="startForm" role="form" novalidate ng-hide="$parent.pollRunning">\r\n                        <div class="switches switches-dark">\r\n                            <label tooltip="" ng-show="chatOptions.subEnabled">\r\n                                <input ng-model="raffle.subscriberOnly" type="checkbox" ng-change="" />\r\n                                <div>\r\n                                    <div></div>\r\n                                </div>\r\n                                <span>Subscribers Only</span>\r\n                            </label>\r\n                            <label tooltip="">\r\n                                <input ng-model="raffle.followerOnly" type="checkbox" ng-change="" />\r\n                                <div>\r\n                                    <div></div>\r\n                                </div>\r\n                                <span>Followers Only</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="textarea-wrap">\r\n                            <div class="label">Question</div>\r\n                            <textarea name="question" placeholder="{{placeholders.question}}" autocomplete="off" spellcheck="false" ng-model="raffle.question" ng-disabled="raffle.status != \'none\'" maxlength="{{max_poll_question_length}}" ng-class="{bigger:raffle.question.length>65}" focus-on="!raffleCollapse"></textarea>\r\n                        </div>\r\n                        <div class="textarea-wrap">\r\n                            <div class="label">Prize to win</div>\r\n                            <textarea name="prize" placeholder="{{placeholders.prize}}" autocomplete="off" spellcheck="false" ng-model="raffle.prize" ng-disabled="raffle.status != \'none\'" maxlength="{{max_raffle_prize_length}}"></textarea>\r\n                        </div>\r\n                        <div class="item trans-cubic" ng-repeat="choice in raffle.choices">\r\n                            <div class="label">{{$index+1}}. Option</div>\r\n                            <input type="text" name="text" placeholder="{{placeholders.choice}}" autocomplete="off" spellcheck="false" required ng-model="choice.text" ng-change="addChoice($index)" ng-disabled="raffle.status != \'none\'" maxlength="{{max_poll_option_length}}">\r\n                            <!-- vote count -->\r\n                            <div class="votes" ng-hide="raffle.status == \'none\'">\r\n                                {{choice.count}}<span>Vote{{choice.count!=1?\'s\':\'&nbsp&nbsp\'}}</span>\r\n                            </div>\r\n                            <div class="winners" ng-show="(raffle.status == \'paused\' || raffle.status == \'ended\' || raffle.status == \'hidden\') && (choice.count>=1 || raffle.winners[$index].length > 0)">\r\n                                <!-- pick winners btn -->\r\n                                <button class="btn-green pick-winner" ng-click="pickWinOption($index)" ng-show="choice.count>=1">\r\n                                    Pick {{raffle.winners[$index].length > 0 ? \'another\' : \'a\'}} Winner</button>\r\n                                <div class="label" ng-show="raffle.winners[$index].length > 0">Winners are:</div>\r\n                                <a ng-repeat="winner in raffle.winners[$index]" tooltip-placement="top" tooltip="Notify by email" tooltip-append-to-body="true" href="mailto:{{winner.email}}" target="_blank">{{winner.name}}</a>\r\n                            </div>\r\n                        </div>\r\n                        <div class="buttons">\r\n                            <button class="btn-green" ng-class="{\'disabled\':raffle.start_button_disabled}" ng-show="raffle.status == \'none\'" ng-click="start()">Start</button>\r\n                            <button class="btn-red" ng-show="raffle.status == \'running\'" ng-click="pause()">Stop and Pick Winners</button>\r\n                            <button class="btnNone" ng-show="raffle.status == \'paused\'" ng-click="resume()">or resume</button>\r\n                            <button class="btn-red" ng-show="raffle.status == \'ended\'" ng-click="hide()">Hide</button>\r\n                            <button class="btn-red" ng-show="raffle.status == \'hidden\'" ng-click="reset()">Reset</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n\r\n            <!-- hosting -->\r\n            <section ng-controller="HostingCtrl" class="host {{host.status}}" ng-class="{islive:host.status==\'on\', collapsed:hostingCollapse}">\r\n                <div class="head nono flex-row">\r\n                    <div class="title flex-grow" ng-click="collapseHosting()">\r\n                        <span ng-show="!hostingCollapse || (hostingCollapse && host.status == \'off\')">Host Mode: {{host.status}}</span>\r\n                        <span ng-show="hostingCollapse && host.status == \'on\'">Host Mode: {{host.status}} - {{host.hoster}}</span>\r\n                    </div>\r\n                    <div class="right">\r\n                        <span ng-show="hostingCollapse" class="icon-down" ng-click="collapseHosting()"></span>\r\n                        <span ng-hide="hostingCollapse" class="icon-up" ng-click="collapseHosting()"></span>\r\n                    </div>\r\n                </div>\r\n                <div class="content" collapse="hostingCollapse">\r\n                    <div class="textarea-wrap">\r\n                        <div class="label" ng-show="host.status == \'off\'">Broadcaster to host</div>\r\n                        <div class="label" ng-show="host.status == \'on\'">You are currently hosting</div>\r\n                        <textarea name="hosted" placeholder="Enter hitbox username" ng-change="host.error = false;" autocomplete="off" spellcheck="false" ng-disabled="host.status == \'on\'" ng-model="host.hoster" focus-on="!hostingCollapse"></textarea>\r\n                    </div>\r\n                    <div class="buttons">\r\n                        <button class="btn-green" ng-show="host.status == \'off\'" ng-click="startHosting()">Start Hosting</button>\r\n                        <button class="btn-red" ng-show="host.status == \'on\'" ng-click="stopHosting()">Stop Hosting</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <div ng-controller="ChatCtrl">\r\n            <div class="dash-right" ng-show="dashTab==\'settings\'">\r\n                <div class="dash-top">\r\n                    <section ng-show="hosters.list.length">\r\n                        Currently hosted by: <span ng-repeat="hoster in hosters.list">{{hoster.user_name}}<span ng-if="$index < hosters.list.length - 1">,</span></span>\r\n                    </section>\r\n                </div>\r\n                <div class="dash-center">\r\n                    <div class="flex-chat">\r\n                        <div class="dash-chat">\r\n                            <table class="chat-table">\r\n                                <tr class="chat-row1" ng-controller="SubNotifyCtrl" ng-show="lastSubscriber">\r\n                                    <td class="chat-sbnt" ng-include="\'partials/sub/chat_sbnt.html\'"></td>\r\n                                </tr>\r\n                                <tr class="chat-row2">\r\n                                    <td>\r\n                                        <div class="chat flex-column" ng-include="\'partials/sub/chat_chat.html\'"></div>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class="chat-userlist dash-userlist" ng-include="\'partials/sub/chat_userlist.html\'" ng-click="getChannelUserList(true)"></div>\r\n                </div>\r\n                <div class="dash-bottom">\r\n                </div>\r\n            </div>\r\n            <div class="dash-log" ng-show="dashTab==\'log\'">\r\n                <section>\r\n                <div class="csv-download" tooltip-placement="left" tooltip="Download Activity Log CSV" tooltip-append-to-body="true" >\r\n                    <div ng-csv="getChatlogCSV()" field-separator=";" filename="activity.csv">\r\n                        <span>CSV</span>\r\n                        <div class="dl-button icon-download-alt"></div>\r\n                    </div>\r\n                </div>\r\n                    <ul ng-controller="logScrollCtrl" scroll-glue ng-model="autoScroll">\r\n                        <li ng-repeat="logMessage in chatLogMessages track by $index" compile="logMessage"></li>\r\n                    </ul>\r\n                </section>\r\n                <div class="scrollDown icon-down-1" ng-click="logDoAutoScroll()" ng-show="!logScroller.autoScroll"></div>\r\n\r\n            </div>\r\n            <!--\r\n            \r\n            -->\r\n        </div>\r\n    </div>\r\n    <!--     <div class="credits">Gameslist powered by <a href="http://www.giantbomb.com/" target="_blank">GiantBomb</a></div> -->\r\n</div>\r\n'), $templateCache.put("partials/main/detail.html", '<div id="detailpage" ng-class="{offline:media.media_is_live==0}">\r\n    <div id="content">\r\n        <div id="leftcolumn" ng-class="{\'full-width\':chatOptions.chatState==0}">\r\n            <div class="pagewrapper">\r\n                <div class="scrollwrapper tse-scrollable" scroll-emulator refresh-on-change="heights.contentHeight + chatOptions.chatState">\r\n                    <div id="detail-scroll-element" class="tse-scroll-content">\r\n                        <div class="tse-content tse-content-main" height-watch public-height="heights.contentHeight">\r\n                            <!-- player container -->\r\n                            <!-- <div class="icon-resize-full player-minimized-overlay" ng-show="playerOptions.playerMinimized"></div> -->\r\n                            <div id="detail-player" class="{{media.media_type}}" player-size ng-class="{noBg : media.media_is_live==0}"></div>\r\n                            <div class="offline-cover" ng-style="channelBg()" ng-show="media.media_is_live==0" ng-if="!isAdmin"></div>\r\n                                <uploaddroparea class="offline-cover" ng-style="channelBg()" ng-show="media.media_is_live==0" ng-if="isAdmin" class="background-image" uda-image="{{config.imgUrl}}{{media.media_bg_image}}" uda-success-callback="cbuploadcover()" class="userCover" uda-data-name="cover" uda-url="/api/upload/account/" uda-delete="false" uda-name="Cover" uda-fallback-image="{{config.imgUrl}}{{config.fallbackImages.userCover}}" uda-user-name="{{media.media_user_name}}" uda-error-callback="cberrorcover()">\r\n                                </uploaddroparea>\r\n                            <!-- \r\n                                infobox non mobile \r\n                             -->\r\n                            <!--<div id="infobox-wrapper" ng-if="!isMobile" ng-include="\'partials/sub/detail_infobox.html\'"></div>-->\r\n\r\n                            <div id="detail-meta" class="nono" detail-scroll ng-show="media.media_user_name">\r\n                                <div id="hosting" ng-show="media.media_user_name && hostMode && media.media_is_live">\r\n                                    {{media.media_user_name}} is currently hosting: <a ui-sref="detail({channel:media.media_hosted_media.livestream[0].media_user_name})">{{media.media_hosted_media.livestream[0].media_user_name}}</a>\r\n                                </div>\r\n                                <div class="channel-meta cf">\r\n                                    <uploaddroparea class="logo round" uda-image="{{config.imgUrl}}{{media.channel.user_logo}}" uda-success-callback="cbuploadlogo()" uda-data-name="file" uda-url="/api/upload/account/" uda-delete="false" uda-name="logo" uda-fallback-image="{{config.imgUrl}}{{config.fallbackImages.userLogo}}" uda-user-name="{{media.media_user_name}}" uda-error-callback="cberrorlogo()" ng-if="isAdmin">\r\n                                    </uploaddroparea>\r\n                                    <a class="logo round" href="/{{media.media_user_name}}" ng-style="userImg()" ng-if="!isAdmin"></a>\r\n                                    <img class="t-flag t-flag-{{$index}}" ng-repeat="country in media.media_countries" src="{{config.imgUrl}}/static/img/flags/{{country|lowercase}}.svg" tooltip="{{country|code2Name}}" tooltip-append-to-body="true" tooltip-placement="top" />\r\n                                    <a class="name" href="/{{media.media_user_name}}">{{media.media_display_name}}</a>\r\n                                    <div class="stats">\r\n                                        <span class="icon-heart" tooltip="followers" tooltip-placement="top" tooltip-append-to-body="true" ng-show="media.channel.followers">{{media.channel.followers | number}}</span>\r\n                                        <span class="icon-eye" tooltip="total views" tooltip-placement="top" tooltip-append-to-body="true" ng-show="media.total_live_views">{{media.total_live_views}}</span>\r\n                                    </div>\r\n                                    <div class="buttons" ng-show="media.media_display_name" ng-hide="playerOptions.playerMinimized && media.media_is_live!=0">\r\n                                        <subbutton medianame="{{media.media_name}}" display-name="{{media.media_display_name}}"></subbutton>\r\n                                        <followbutton follow-id="{{media.media_user_id}}"></followbutton>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- \r\n                                    tabbed content\r\n                                -->\r\n                                <div class="detail-tabs-wrapper nono" ng-click="minimizePlayer()">\r\n                                    <div class="detail-tab" \r\n                                        ng-class="{active: userContent==\'profile\', disabled:!media.media_description && !isMobile && !isAdmin}" \r\n                                        ng-click="userContent=\'profile\';scrollToContent()">\r\n                                        <div class="detail-logo round" ng-style="userImg()"></div>\r\n                                        <span>Profile</span>\r\n                                        <!-- <span class="edit icon-pencil" ng-class="{isEditing:channelOptions.editProfile}" ng-if="isAdmin" ng-click="channelOptions.editProfile=true">\r\n                                        </span> -->\r\n                                    </div>\r\n                                    <div class="detail-tab icon-chat" ng-class="{active: userContent==\'chat\'}" ng-click="userContent=\'chat\';scrollToContent()" ng-show="isMobile && section!=\'video\'">\r\n                                        <span>Chat</span>\r\n                                    </div>\r\n                                    <div class="detail-tab detail-tab-team icon-group" ng-show="media.media_type_id==1 && media.team_name && !isMobile" ng-class="{active: userContent==\'team\'}" ng-click="userContent=\'team\';scrollToContent()">\r\n                                        <span>{{media.team_name}}</span>\r\n                                    </div>\r\n                                    <div class="detail-tab icon-video" ng-class="{active: userContent==\'videos\'}" ng-click="userContent=\'videos\';scrollToContent()">\r\n                                        <span>Videos\r\n                                            <span ng-show="videoCount > 0" class="value">{{videoCount}}</span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <!-- <div class="detail-tab icon-heart detail-hide-on-mobile" \r\n                                        ng-class="{active: userContent==\'following\', disabled: following_total == 0}" \r\n                                        ng-click="userContent=\'following\'">\r\n                                        <a ui-sref="detail.following"><span>Following <span ng-show="following_total > 0" class="value">{{following_total}}</span></span></a>\r\n                                    </div>\r\n                                    <div class="detail-tab icon-heart detail-hide-on-mobile" \r\n                                        ng-class="{active: userContent==\'follower\', disabled: followers_total == 0}" \r\n                                        ng-click="userContent=\'follower\'">\r\n                                        <a ui-sref="detail.follower"><span>Followers <span ng-show="followers_total > 0" class="value">{{followers_total}}</span></span></a>\r\n                                    </div> -->\r\n                                    <div class="detail-tab icon-share detail-share" ng-hide="isMobile || (playerOptions.playerMinimized && media.media_is_live!=0)">\r\n                                        <span class="share-part-hide">Share:</span>\r\n                                        <span tooltip="share on facebook" tooltip-placement="bottom" tooltip-append-to-body="true" class="fb icon-facebook-squared share-part-hide" ng-click="fbShare()"></span>\r\n                                        <span tooltip="tweet about it" tooltip-placement="bottom" tooltip-append-to-body="true" class="tw icon-twitter share-part-hide" ng-click="tweet()"></span>\r\n                                        <span class="more icon-dots-v" generic-popover gp-width="280" gp-height="350" gp-template="partials/sub/detail_more_popover.html" gp-classes=\'["detail-more-popover","nono"]\' gp-on="click">\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div id="detail-content" ng-show="media.media_user_name">\r\n                                <div class="left">\r\n                                    <div class="content" ng-switch on="userContent">\r\n                                        <div class="content-box">\r\n                                            <div ui-view="viewContent" class="viewContent"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n'), $templateCache.put("partials/main/embed.html", '<div ng-controller="DetailController"><mediaplayer type="{{media.media_type}}" mediaid="media.media_id" embed="true"></mediaplayer></div>'), $templateCache.put("partials/main/embedchat.html", '<div id="embed-chat" ng-include="\'partials/main/chat.html\'" ng-init="chatState = true"></div>\n<!-- <div id="embed-chat" ng-include="\'partials/main/chat.html\'" ng-init="chatState = true" ng-controller="ChatEmbedCtrl"></div> -->'), $templateCache.put("partials/main/event.html", '<style type="text/css">   \n.challenge {\n    background-color: #111;\n    color: white;\n} \n.challenge a {\n    color: white;\n} \n.challenge .header {\n    background: url(partials/content/img/challenge-bg.jpg) center center no-repeat;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    width: 100%;\n    height: 22em;\n    text-align: center;\n}\n.challenge .content {\n    position: relative;\n    width: 960px;\n    font-weight: 1.25em;\n    font-weight: 300;\n    line-height: 1.125em;\n}   \n.challenge .social {\n    position: absolute;\n    right: 0;\n    top: -7rem;\n    width: 22rem;\n    background-color: white;\n    border-radius: 4px;\n    padding: .5em;\n    text-align: center;\n}     \n.challenge .box {\n    position: absolute;\n    right: 0;\n    top: -4rem;\n    background-color: #8acf00;\n    width: 22rem;\n    height: 10rem;\n    text-align: center;\n    border-radius: 3px;\n    font-size: 1.325em;\n    padding: 0;\n    font-weight: 400;\n    color: white;\n}     \n.challenge .box:hover {\n    cursor: pointer;\n}  \n.challenge .box .singleLine {\n    line-height: 8em;\n    text-decoration: underline;\n}      \n.challenge .box button {\n    margin-top:.75em;\n}       \n.challenge h1 {\n    margin:1em 0 .5em;\n    display: block;\n    color: white;\n}       \n.challenge .p1 {\n    margin:0 24rem 0 0;\n}        \n.challenge .weekRank, .challenge .overallRank {\n    width:400px;\n    float: left;\n    border-radius: 3px;\n    margin: 2em 1em;\n    border: 1px solid #ccc;\n    padding: 1em;\n}        \n.challenge .userRanking li {\n    margin-bottom: .75em;\n}          \n.challenge .userRanking .rank {\n    font-size: 1.5em;\n    font-weight: 500;\n    margin-right: .125em;\n}         \n.challenge .userRanking img {\n    width: 2em;\n    height: 2em;\n    margin-right: .25em;\n    vertical-align: -.5em;\n}         \n.challenge .userRanking .name {\n    font-size: 1em;\n    font-weight: 500;\n    margin-right: .5em;\n}         \n.challenge .userRanking .uv {\n    font-size: .75em;\n    font-weight: 300;\n    color: #ccc;\n}         \n.challenge .userRanking .uv span {\n    font-size: .75em;\n    font-weight: 300;\n    color: #ccc;\n    margin-left: .25em;\n}       \n</style>\n<div class="page challenge" ng-controller="HomeController"> \n    <div class="scrollDiv" ng-controller="scrollCtrl">\n        <div class="header">\n            <img src="partials/content/img/challenge-txt.png" alt="" />\n        </div>\n        <div class="content center">\n            \n            <div class="social">\n                <div class="twBtn">\n                    <a href="https://twitter.com/hitboxlive" class="twitter-follow-button" data-show-count="false" data-lang="de" data-show-screen-name="false">@hitboxlive folgen</a>\n                    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?\'http\':\'https\';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+\'://platform.twitter.com/widgets.js\';fjs.parentNode.insertBefore(js,fjs);}}(document, \'script\', \'twitter-wjs\');</script>\n                </div>\n                \n                <div class="fbBtn">\n                <iframe src="//www.facebook.com/plugins/like.php?href=https%3A%2F%2Fwww.facebook.com%2Fpages%2FHitbox%2F290954617710100%3Fref%3Dhl&amp;width=450&amp;height=65&amp;colorscheme=light&amp;layout=box_count&amp;action=like&amp;show_faces=false&amp;send=false" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:100px; height:65px;" allowTransparency="true"></iframe>\n                </div>\n            </div>\n\n            \n            <!-- \n                not logged in - do: signup & enter challenge & send confirmation mail\n            -->\n            <div ng-if="!loggedIn" ng-controller="LoginCtrl" class="box" ng-click="go(\'/signup\')">\n                <span class="singleLine">Enter the challenge!</span>\n            </div>\n            <!-- \n                if logged in - do: enter challenge & send confirmation mail\n            -->\n            <div ng-if="loggedIn" class="box" ng-click="enter and send confirmation email">\n                <span class="singleLine">Enter the challenge!</span>\n            </div>\n            <!-- \n                if entered & before 21th \n            -->\n            <div ng-if="loggedIn" class="box">\n                You will take part in the challenge. <br />\n                Challenge starts 21th of October 0:00\n            </div>\n            <!-- \n                if entered & after 21th - show: ranking \n            -->\n            <div ng-if="loggedIn" class="box">\n                Your current rank for this Week: 20 <br />\n                uniques this week sofar: 3000 <br />\n                Your overall rank: 30 <br />\n                your top weekly uniques: 4000\n            </div>\n            <div class="p1">\n                <h1>hitbox streamer challenge</h1> <br />\n            The top 10 streamers with the most unique viewers gathered on their livestreams (between October 14th and Dezember 15th 2013) will get a part of the 10.000,- Euro prize pool\n            </div>\n            \n            \n            <!-- \n                if challenge is running show rankings \n            -->\n            \n            <div class="cf">\n\n                <div class="overallRank">\n                    <h1>overall ranking:</h1>\n                    <ul class="userRanking">\n                        <li>\n                            <span class="rank">1.</span><a href="user"><img src="http://edge.vie.hitbox.tv//static/img/teams/logo.jpg" alt="" /><span class="name">Username</span></a><span class="uv">3000<span>viewers</span></span>\n                        </li>\n                    </ul>\n                </div>\n\n                <div class="weekRank">\n                    <h1>this weeks ranking:</h1>\n                    <ul class="userRanking">\n                        <li>\n                            <span class="rank">1.</span><a href="user"><img src="http://edge.vie.hitbox.tv//static/img/teams/logo.jpg" alt="" /><span class="name">Username</span></a><span class="uv">3000<span>viewers</span></span>\n                        </li>\n                    </ul>\n                </div>\n                \n            </div>\n            \n            \n            <h1>details</h1>\n            Welcome to the first big community event on hitbox.tv.\n            This is for all you up and coming streamers out there. No matter whether you are starting fresh or have been able to gather a small following, this could become your big break.\n            The requirements for entering the challenge are quite simple:\n            Like us on Facebook {link} and/or follow us on Twitter {link}\n            Register on hitbox.tv {link}\n            Enter the challenge via your account page {link}\n            Start streaming\n            \n            hitbox employees, affiliates, partners and streamers sponsored by partners will be excluded from participating in the challenge.\n            \n            <h1>Ranking</h1>\n            The top 10 streamers with the most unique viewers gathered on their livestreams (between October 14th and Dezember 15th 2013) will get a part of the 10.000,- Euro prizepool.\n            Win yourself a nice christmas check!\n            \n            1st place	3.500,- Euro\n            2nd place	2.000,- Euro\n            3rd place	1.000,- Euro\n            4th-10th place	500,- Euro\n            \n            <h1>Daily Highlights</h1>\n            Every day we will pick our personal favourite streamer, give a special shoutout via Facebook and Twitter and present him or her on our Blog.\n            \n            <h1>Bonus</h1>\n            But it doesnÂ´t end there.\n            If you manage to get an average of 100 or more concurrent viewers and stream for at least 20 hours a week while the challenge lasts, you will be offered a partnership with hitbox.tv. As a partner you will then be able to earn money garnered by the ad revenues from your streams.\n            \n            In case you need help setting up your stream, make sure to visit help.hitbox.tv.\n            For any questions that come up and arenÂ´t covered in the help section, let us know via support@hitbox.tv.\n            \n            Ladies and gentlemenâ€¦\n            Start your streams and Live! it up\n            *legal stuff\n            <br />\n            <br />\n            <br />\n            <br />\n\n        </div>\n    </div>    \n</div>'), $templateCache.put("partials/main/feedback.html", '<div class="modalClose" ng-click="close()">&times;</div>\n<div class="feedback">\n    <div class="feedback-success" ng-show="sent">\n        <h2>Thank&nbsp;you!</h2>\n    </div>\n    <form accept-charset="UTF-8" class="form_enclosed formL" name="forms.feedbackForm" novalidate ng-if="!sent">\n        <ul class="feedback-category">\n            <li ng-class="{active: select == category.category_name}" ng-repeat="category in message.message_categories" ng-click="setSelection(category.category_name);">\n                <div class="feedback-text trans-cubic">{{category.category_name}}</div>\n            </li>\n        </ul>\n        <div class="feedback-wrapper">\n            <section class="feedback-left">\n                <label ng-hide="forms.feedbackForm.message_from.$error.required && !forms.feedbackForm.message_from.$pristine && !forms.feedbackForm.message_from.$focused">Name</label>\n                <label ng-show="forms.feedbackForm.message_from.$error.required && !forms.feedbackForm.message_from.$pristine && !forms.feedbackForm.message_from.$focused" class="input-error-message">Please enter your name</label>\n                <input class="email text" name="message_from" type="text" placeholder="Your Name" ng-focusclass ng-model="message.message_from" required ng-class="{\'input-error\' : forms.feedbackForm.message_from.$error.required && !forms.feedbackForm.message_from.$pristine && !forms.feedbackForm.message_from.$focused}">\n            </section>\n\n            <section class="feedback-right">\n                <label ng-show="forms.feedbackForm.message_email.$error.required && !forms.feedbackForm.message_email.$pristine && !forms.feedbackForm.message_email.$focused" class="input-error-message">Please enter your email</label>\n                <label ng-show="forms.feedbackForm.message_email.$error.email && !forms.feedbackForm.message_email.$pristine && !forms.feedbackForm.message_email.$focused" class="input-error-message">Please input a valid email</label>\n                <label ng-hide="(forms.feedbackForm.message_email.$error.required || forms.feedbackForm.message_email.$error.email) && !forms.feedbackForm.message_email.$pristine && !forms.feedbackForm.message_email.$focused">Email</label>\n                <input class="email text" name="message_email" type="email" placeholder="Email" ng-focusclass ng-model="message.message_email" required ng-class="{\'input-error\' : (forms.feedbackForm.message_email.$error.required && !forms.feedbackForm.message_email.$pristine && !forms.feedbackForm.message_email.$focused) || (forms.feedbackForm.message_email.$error.email && !forms.feedbackForm.message_email.$pristine && !forms.feedbackForm.message_email.$focused)   }">\n            </section>\n\n            <section>\n                <label ng-show="forms.feedbackForm.message_title.$error.required && !forms.feedbackForm.message_title.$pristine && !forms.feedbackForm.message_title.$focused" class="input-error-message">Please provide a subject</label>\n                <label ng-hide="forms.feedbackForm.message_title.$error.required && !forms.feedbackForm.message_title.$pristine && !forms.feedbackForm.message_title.$focused">Subject</label>\n                <input class="email text" name="message_title" type="text" placeholder="What\'s the issue?" ng-focusclass ng-model="message.message_title" required ng-class="{\'input-error\' : forms.feedbackForm.message_title.$error.required && !forms.feedbackForm.message_title.$pristine && !forms.feedbackForm.message_title.$focused}">\n            </section>\n\n            <section>\n                <label ng-show="forms.feedbackForm.message_body.$error.required && !forms.feedbackForm.message_body.$pristine && !forms.feedbackForm.message_body.$focused" class="input-error-message">Please enter at least 5 characters</label>\n                <label ng-show="forms.feedbackForm.message_body.$error.minlength && !forms.feedbackForm.message_body.$pristine && !forms.feedbackForm.message_body.$focused" class="input-error-message">Please enter at least 5 characters</label>\n                <label ng-hide="(forms.feedbackForm.message_body.$error.required || forms.feedbackForm.message_body.$error.minlength) && !forms.feedbackForm.message_body.$pristine && !forms.feedbackForm.message_body.$focused">Message</label>\n                <textarea class="desc" name="message_body" type="text" placeholder="Please give a short description" ng-model="message.message_body" ng-minlength=5 required ng-focusclass ng-class="{\'input-error\' : (forms.feedbackForm.message_body.$error.required && !forms.feedbackForm.message_body.$pristine && !forms.feedbackForm.message_body.$focused) || (forms.feedbackForm.message_body.$error.minlength && !forms.feedbackForm.message_body.$pristine && !forms.feedbackForm.message_body.$focused)}"></textarea>\n            </section>\n            <div class="captcha">\n                <div class="human">Please prove you are human</div>\n                <div vc-recaptcha theme="clean" class="captchaWrap" theme="white" key="6LciNPASAAAAAIvWyHGAOQUE0E0wiKvI1XkIHHHq"></div>\n            </div>\n        </div>\n        <div class="submitWrap">\n            <button type="submit" class="btn btn-green" value="Send" ng-click="send()">Send</button>\n        </div>\n    </form>\n\n\n</div>\n'), $templateCache.put("partials/main/following.html", '<div class="page gamePage" ng-controller="gameController">\n    <div class="pageHeader">\n        <div class="title">\n            <div class="gW center">\n                <span class="name">Streams you Follow</span>\n                <span class="stats">\n                    <span>8</span> are live\n                    <span>64</span> are offline\n                    <span>7</span> new videos\n                </span>\n            </div>\n        </div>\n    </div>\n    <div class="subNavWrap">\n        <div class="subNav gW center">\n            <div class="active">All</div>\n            <div class="">Live</div>\n            <div class="">Hightlights</div>\n            <div class="">Videos</div>\n        </div>\n    </div>\n    <div class="pageContent">\n        <div class="gW center">\n            <section>\n                <div class="mediaList-title center gW">\n                    <h1>live now</h1>\n                    <a href="" class="showAll">Show all</a>    \n                </div>\n                <mediaList type="live" filter="trending" size="mid""></mediaList>\n            </section>\n            <section>\n                <div class="mediaList-title center gW">\n                    <h1>{{ \'HEAD_RECENT\' | translate}}</h1>\n                    <a href="" class="showAll">Show all</a>    \n                </div>\n                <mediaList type="live" filter="trending" size="mid""></mediaList>\n            </section>\n        </div>\n        <!--<div class="footer" ng-include="\'partials/sub/footer.html\'"></div>-->\n    </div>\n</div>'), $templateCache.put("partials/main/game.html", '<div class="page" ng-controller="gameController">\n\n    <div class="pageHeader">\n        <img class="boxCover" ng-show="game.category_logo_large" ng-src="{{config.imgUrl}}{{game.category_logo_large}}" />\n        <div class="title">\n            <span class="name">{{game.category_name}}</span>\n        </div>\n    </div>\n    <div class="pageContent">\n        <section>\n            <div class="mediaList-title">\n                <h1>{{ \'HEAD_LIVE_NOW\' | translate}}</h1>\n            </div>\n                <mediaList type="live" filter="" fast="" size="mid" game="{{game.category_id}}"></mediaList>\n        </section>\n        <section>\n            <div class="mediaList-title">\n                <h1>Videos</h1>\n            </div>\n                <mediaList type="video" filter="" size="mid" game="{{game.category_id}}"></mediaList>\n        </section>\n    </div>\n\n</div>'), $templateCache.put("partials/main/games.html", '<div class="page games-page" ng-controller="gameController">\n	<div class=""></div>\n	<div class="games-width cf">\n		<h1>Games played Now</h1>\n		<gamelist filter="" liveonly="true"></gamelist>\n	</div>\n	<div class=""></div>\n</div>\n'), $templateCache.put("partials/main/googleConnect.html", '<div style="width: 400px; background-color: #fff; padding:30px;" align="center">\n    To upload this video to Youtube, you must connect your google account.\n    <br /><br />\n    <div>\n        <googleplus clientid="324846633868-jb2lh2e2l84n41b0i4o3i7h2ckrr4ipp"></googleplus>\n    </div>\n</div>'), $templateCache.put("partials/main/home.html", '	<!-- <div class="home-scroll tse-scrollable" ng-controller="HomeController">\n	<div id="home-scroll-element" class="tse-scroll-content">\n	<div class="tse-content"> -->\n<div class="home-page" ng-controller="HomeController">\n	<!-- \n		carousel\n	-->\n	<!-- \n	<div class="home-spotlight" ng-show="!browseCat">\n	                <div class="home-width">\n	        <div class="home-banner">\n	            <div class="home-carousel" ng-mouseover="" ng-mouseout="" image-slider></div>\n	        </div>\n	    </div> \n	</div>\n	-->\n\n	<div class="home-wrap home-width cf">\n	    <!--  left sidebar -->\n		<div id="sidebar-wrapper" ng-include="\'partials/sub/home_sidebar.html\'"></div>\n	    <!-- content -->\n		<div id="home-thumbs">\n			<section>\n				<!-- Android: {{android}} iOS: {{ios}} -->\n				<!-- title live -->\n				<!-- <div class="mediaList-title" ng-hide="loading.live"> -->\n				<div class="mediaList-title cf">\n					<h1 ng-hide="(lists.liveCount<1 && lists.followingCount<1) || processing || (browseCat==\'favorite\' && !loggedIn)">\n						<b>Live</b>{{gameFilter? \':\' : \'\'}} <span>{{gameFilter}}</span>{{browseCat==\'favorite\'? \'Channels you follow\' : \'\'}}\n					</h1>\n					<h1 ng-hide="lists.liveCount>0 || lists.followingCount>0 || loading.live || browseCat == \'favorite\'">\n						No Live Streams\n					</h1>\n					<div ng-if="$root.session && $root.session.superadmin == \'1\'" class="filter">\n						<a class="icon-eye" ng-class="{active:$parent.showHidden}" ng-click="$parent.showHidden=!$parent.showHidden"></a>\n						<a class="icon-eye" ng-class="{active:$parent.onlyHidden}" ng-click="$parent.onlyHidden=!$parent.onlyHidden">Only</a>\n					</div>\n				</div>\n				<!-- live thumbs -->\n				<div class="thumbs-wrap" ng-hide="browseCat==\'favorite\' && !loggedIn">\n					<mediaList id="live-list" \n						type="live" \n						filter="popular" \n						page="1" \n						size="mid" \n						limit="30" \n						lines="{{liveLines}}" \n						lineoffset="10" \n						show-more="true" \n						fast="" \n						show-hidden="showHidden" \n						only-hidden="onlyHidden" \n						game="{{gameFilterId}}" \n						processing="loading.live" \n						public-length="lists.liveCount" \n						autosize="true" \n						ng-hide="processing" \n						wait-for="game" \n						live-only="true"\n						ng-if="!followerId && browseCat != \'language\'">\n					</mediaList>\n					<mediaList id="live-list" \n						type="live" \n						filter="popular" \n						page="1" \n						size="mid" \n						limit="30" \n						lines="{{liveLines}}" \n						lineoffset="10" \n						show-more="true" \n						fast="" \n						follower-id="{{followerId}}" \n						show-hidden="showHidden" \n						only-hidden="onlyHidden" \n						processing="loading.live" \n						public-length="lists.followingCount" \n						autosize="true" \n						ng-hide="processing" \n						wait-for="followerId" \n						live-only="true"\n						ng-if="followerId && browseCat != \'language\'">\n					</mediaList>\n					<mediaList id="live-list" \n						type="live" \n						filter="popular" \n						page="1" \n						size="mid" \n						limit="30" \n						lines="{{liveLines}}" \n						lineoffset="10" \n						show-more="true" \n						fast="" \n						show-hidden="showHidden" \n						only-hidden="onlyHidden" \n						game="{{gameFilterId}}" \n						processing="loading.live" \n						public-length="lists.liveCount" \n						autosize="true" \n						ng-hide="processing" \n						wait-for="game" \n						language="{{mediaLanguage}}"\n						live-only="true"\n						ng-if="!followerId && browseCat == \'language\'">\n					</mediaList>\n					<mediaList id="live-list" \n						type="live" \n						filter="popular" \n						page="1" \n						size="mid" \n						limit="30" \n						lines="{{liveLines}}" \n						lineoffset="10" \n						show-more="true" \n						fast="" \n						follower-id="{{followerId}}" \n						show-hidden="showHidden" \n						only-hidden="onlyHidden" \n						processing="loading.live" \n						public-length="lists.followingCount" \n						autosize="true" \n						ng-hide="processing" \n						wait-for="followerId" \n						language="{{mediaLanguage}}"\n						live-only="true"\n						ng-if="followerId && browseCat == \'language\'">\n					</mediaList>\n					<dummylist ng-show="loading.live || processing" class="load-anim-wrap" length="{{dummyLiveLength}}"></dummylist>\n				</div>\n			</section>\n\n		<!-- <div class="home-banner">\n				<div class="home-carousel" ng-mouseover="" ng-mouseout="" image-slider></div>\n			</div> -->\n\n			<!-- videos -->\n			<section ng-hide="browseCat==\'favorite\' && !loggedIn">\n				<div class="mediaList-title">\n					<h1 ng-hide="lists.videoCount<1">\n						Videos\n					</h1>\n					<h1 ng-show="lists.videoCount<1">\n						No Videos\n					</h1>\n				</div>\n				<mediaList type="video" \n					limit="auto" \n					page="1" \n					size="mid" \n					limit="20" \n					lines="{{recentLines}}" \n					lineoffset="2" \n					show-more="true" \n					fast="" \n					follower-id="{{followerId}}" \n					game="{{gameFilterId}}" \n					public-length="lists.videoCount" \n					processing="loading.video" \n					autosize="true"\n					filter="{{videoFilter}}"\n					grouped = "true"\n					ng-if="browseCat != \'language\'">\n				</mediaList>\n				<mediaList type="video" \n					limit="auto" \n					page="1" \n					size="mid" \n					limit="20" \n					lines="{{recentLines}}" \n					lineoffset="2" \n					show-more="true" \n					fast="" \n					follower-id="{{followerId}}" \n					game="{{gameFilterId}}" \n					public-length="lists.videoCount" \n					processing="loading.video" \n					autosize="true"\n					filter="{{videoFilter}}"\n					grouped = "true"\n					language="{{mediaLanguage}}"\n					ng-if="browseCat == \'language\'">\n				</mediaList>\n				<dummylist ng-show="loading.video || processing" class="load-anim-wrap" length="12"></dummylist>\n			</section>\n		</div>\n	</div>\n\n	<div class="home-footer" ng-include="\'partials/sub/footer.html\'"></div>\n\n</div>\n'), $templateCache.put("partials/main/inbox.html", '<div>\n    <div class="settingsNav settingsNavWrap nono">\n        <div class="head">\n            <img ng-src="{{config.imgUrl}}{{session.user_logo}}" />\n            <div class="hoverG" ng-click="go(\'/\' + session.user_name); subNavClose()">{{session.user_name}}</div>\n        </div>\n        <br />\n    <!-- NO livestream set up-->\n    <ul ng-if="session.livestream_count<1">\n        <li>\n            <div class="head" ng-click="go(\'/settings/\'+session.user_name+\'/livestreams\')">{{ \'TEXT_LIVESTREAM\' | translate }}</div>\n        </li>\n    </ul>\n    <!-- livestream set up -->\n    <ul ng-if="session.livestream_count>0">\n        <li ng-controller="NavController">\n            <div class="head" ng-click="go(\'/settings/\'+session.user_name+\'/livestreams\')">{{ \'TEXT_LIVESTREAM\' | translate }}</div>\n            <div class="sub" ng-click="go(\'/settings/\'+session.user_name+\'/livestreams\')">{{ \'TEXT_DETAILS\' | translate }}</div>\n            <div class="sub" ng-click="openDashboard(session.user_name); subNavClose()">Dashboard<span class="icon-popup iconR"></span></div>\n        </li>\n        <li>\n            <div class="head" ng-click="go(\'/settings/\'+session.user_name+\'/recordings\')">{{ \'TEXT_VIDEO_MANAGER\' | translate }}</div>\n            <div class="sub" ng-click="go(\'/settings/\'+session.user_name+\'/recordings\')">{{ \'TEXT_RECORDINGS\' | translate }}</div>\n            <div class="sub" ng-click="go(\'/settings/\'+session.user_name+\'/videos\')">{{ \'TEXT_VIDEOS\' | translate }}</div>\n        </li>\n        <li ng-show="roles.statistics">\n            <div class="head" ng-click="go(\'/settings/\'+session.user_name+\'/statistics\')">{{ \'TEXT_STATISTICS\' | translate }}</div>\n            <div class="sub" ng-click="go(\'/settings/\'+session.user_name+\'/statistics\')">{{ \'Views\' | translate }}</div>\n            <div class="sub" ng-click="go(\'/settings/\'+session.user_name+\'/revenues\')" ng-if="session.user_partner">{{ \'TEXT_REVENUES\' | translate }}</div>\n        </li>\n    </ul>\n    <ul>\n        <li class="">\n            <div class="head" ng-click="go(\'/settings/\'+session.user_name+\'/teams\')">{{ \'TEXT_TEAMS\' | translate }}</div>\n        </li>\n<!--\n        <li class="">\n            <div class="head" ng-click="go(\'/settings/\'+session.user_name+\'/chat\')">{{ \'LABEL_CHANNEL\' | translate }}</div>\n            <div class="sub" ng-click="go(\'/settings/\'+session.user_name+\'/chat\')">{{ \'LABEL_CHAT\' | translate }}</div>\n        </li>\n-->\n        <li class="">{{$routeParams.tab}}\n            <div class="head" ng-click="go(\'/settings/\'+session.user_name+\'/account\')">{{ \'TEXT_ACCOUNT\' | translate }}</div>\n            <div class="sub" ng-click="go(\'/settings/\'+session.user_name+\'/account\')">{{ \'TEXT_DETAILS\' | translate }}</div>\n            <div class="sub" ng-click="go(\'/settings/\' +session.user_name + \'/following\')">{{ \'TEXT_FOLLOWING\' | translate }}</div>\n        </li>\n            <li class="" ng-click="go(\'/inbox/\' + session.user_name)">\n                <div class="head active">Inbox</div>\n            </li>\n        </ul>\n        <ul ng-controller="LoginCtrl" class="logout">\n            <li class="" ng-click="logout(); go(\'/\');">\n                <div class="head">{{\'BTN_LOGOUT\' | translate}}</div>\n            </li>\n        </ul>\n    </div>\n    <div class="settingsContent">    \n        <div ng-controller="InboxController">\n            <form>\n                <div ng-repeat="message in messages" style="border-bottom:1px solid #999;padding-top:1em;"> \n                    <div ng-if="message.message_id">\n                        <div style="font-size: 14px;">\n                            <span style="display: inline-block; vertical-align:top; width:25px;">\n                            <input style="display: inline-block; vertical-align:top;" type="checkbox" ng-model="action_message_ids[$index]" ng-true-value="{{message.message_id}}" />\n                            </span>\n                            <span class="hover" ng-click="go(\'/\'+message.message_from_name)" style="display: inline-block; vertical-align:top; width: 100px;">{{message.message_from_name}}</span>\n                            <span class="hover" ng-click="go(message.message_link)" style="display: inline-block; vertical-align:top; width: 400px;"><b>{{message.message_title}}</b>\n                            <p ng-if="message.message_body" ng-bind-html-unsafe="message.message_body"></p>\n                            </span>\n                            <span style="display: inline-block; vertical-align:top; width: 150px;">{{message.message_date_added}}</span>\n                            <span style="display: inline-block; vertical-align:top; width: 25px;">&nbsp;</span>\n                        </div>                \n                    </div>\n                </div>\n                <button ng-if="messages[0]" class="btnGrey" ng-click="deleteMsg()" ng-confirm-click="Are you sure?">Delete</button>\n                <div ng-if="!messages.length" class="bigMsg">\n                    <div>\n                        <h1>Your Inbox is empty</h1>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>'), $templateCache.put("partials/main/legal.html", '<div class="page page-legal {{tab}} static" ng-controller="LegalController">\n	<div class="flex-column legal-width">\n\n	<!-- 	<div class="nav-bar">\n			<div class="pW">\n				<div class="legal-nav">\n					<a href="/legal/terms-of-use" ng-class="{active: tab == \'terms-of-use\'}">Terms of use</a>\n					<a href="/legal/terms-of-sale" ng-class="{active: tab == \'terms-of-sale\'}">Terms of sale</a>\n					<a href="/legal/privacy-policy" ng-class="{active: tab == \'privacy-policy\'}">Privacy policy</a>\n					<a href="/legal/imprint" ng-class="{active: tab == \'imprint\'}">Imprint</a>\n				</div>\n			</div>\n		</div> -->\n\n	    <div class="content flex-grow" ng-include="tabFile"></div>\n\n		<div class="footer">\n		    <span>Â© hitbox 2015</span>\n		    <a href="legal/terms-of-use">Terms</a>\n		    <a href="legal/privacy-policy">Policy</a>\n		    <a href="legal/imprint">Imprint</a>\n		    <span class="hover" ng-controller="FeedBackDialogCtrl" ng-click="openDialog()">Feedback</span>\n		    <a href="http://help.hitbox.tv">Help &amp; Support</a>\n		</div>\n	</div>\n</div>'), $templateCache.put("partials/main/login.html", '<div class="modalClose" ng-click="close()">&times;</div>\n<div class="form_enclosed formLogin login-modal force-dark" ng-class="{\'embed-login\':detached}">\n	<div ng-show="!login.forgot">\n		<div class="head">Sign in to hitbox</div>\n		<form accept-charset="UTF-8" ng-submit="FBlogin()" name="facebookForm" novalidate>\n			<button type="submit" class="formLogin login-facebook btn-facebook icon-fb">Continue with Facebook</button>\n			<div class="orWith">{{ \'TEXT_OR_WITH\' | translate }}</div>\n		</form>\n		<form accept-charset="UTF-8" ng-submit="doLogin()" name="loginForm" novalidate>\n			<div ng-show="loginFailed" class="input-help input-help-login">{{ \'TEXT_LOGIN_FAILED\' | translate }}</div>\n			<div ng-show="loginBanned" class="input-help input-help-login">{{ \'TEXT_LOGIN_BANNED\' | translate }}</div>\n			<input class="email text" ui-keypress="{enter:\'submit()\'}" name="login" type="text" placeholder="{{ \'LABEL_USERNAME\' | translate }}" ng-model="login.login" required ngFocus autofocus="autofocus" ng-change="loginFailed = false" id="username" focus-on-show/>\n			<div class="password-wrap">\n				<input class="password text" ui-keypress="{enter:\'submit()\'}" name="password" type="password" placeholder="{{ \'LABEL_PASSWORD\' | translate }}" ng-model="login.pass" required ng-change="loginFailed = false" id="password"/> \n				<div class="forgot" ng-click="login.forgot=true">Forgot?</div>\n			</div>\n\n\n			<button type="submit" ui-keypress="{enter:\'submit()\'}" class="btn-signin btn-green" data-trigger-change="#username,#password" id="loginDialogSubmitBtn">Sign in</button>\n			<div class="link signup">\n				<a href="/signup" target="_blank" ng-click="close()">{{ \'TEXT_NO_ACCOUNT\' | translate}}</a>\n			</div>\n		</form>\n	</div>\n\n	<div ng-show="login.forgot && !restore">\n		<div class="head-reset">Reset Password</div>\n		<div class="info">\n			Enter the e-mail address associated with your hitbox account and click Continue. <br />We will send you a link to a page where you can create a new password.\n		</div>\n		<div ng-show="restoreFailed" class="input-help input-help-login">E-Mail not found</div>\n		<input class="email text" name="loginreset" type="text" placeholder="{{ \'LABEL_EMAIL\' | translate }}" ng-model="loginreset.email" />\n		<button ng-click="resetLogin()" class="btn-signin btn-green">Continue</button>\n		<div class="link">\n			<a ng-click="login.forgot=false">Back</a>\n		</div>\n	</div>\n\n	<div ng-show="restore">\n		<div class="link">\n			<span>An E-mail has been sent to {{loginreset.email}}</span>\n		</div>\n		<br />\n		<button ng-click="close()" class="btnLogin">OK</button>\n	</div>\n</div>'), $templateCache.put("partials/main/settings.html", '<div ng-controller="SettingsController" class="settings-width flex-column">\n	<!--<div class="settings-content flex-grow" ng-show="user" ng-class="tab"></div>-->\n		<div class="settings-content flex-grow" ng-class="tab" ui-view="viewSettings"></div>\n<!-- 	<div class="settings-footer">\n		<span>Â© hitbox 2015</span>\n		<a href="legal/terms-of-use">Terms</a>\n		<a href="legal/privacy-policy">Policy</a>\n		<a href="legal/imprint">Imprint</a> \n		<a href="content/partnerprogram">Partner Program</a>  \n		<span class="hover" ng-controller="FeedBackDialogCtrl" ng-click="openDialog()">Feedback</span>\n		<a href="http://help.hitbox.tv">Help &amp; Support</a>\n	</div> -->\n</div>'), $templateCache.put("partials/main/signup.html", '<div class="page signup" ng-controller="signUpController">\n    <div class="signup center">\n        <div ng-show="!restore">\n            <div ng-hide="fb_connected" class="create">\n                <div class="head">Create a hitbox account</div>\n                <button class="btn-facebook icon-fb" ng-click="FBlogin()">Continue with Facebook</button>\n                <div class="orWith">{{ \'TEXT_OR_WITH\' | translate }}</div>\n            </div>\n\n            <div ng-show="fb_connected" class="finish">\n                <div class="head">{{ \'TEXT_FINISH_ACCOUNT\' | translate }}</div>\n                <div class="txt">{{ \'TEXT_FINISH_FB_SIGNUP\' | translate }}</div>\n            </div>\n\n            <form accept-charset="UTF-8" class="form_enclosed formL" ng-submit="doSignup()" name="signupForm" novalidate>\n                <div>\n                    <div ng-show="error.email.user_email" class="input-help">{{error.email.user_email}}</div>\n                    <input class="email text" name="email" placeholder="{{ \'LABEL_EMAIL\' | translate }}" ng-model="login.user_email" required ngFocus autofocus="autofocus" type="text" ng-blur="verifyEmail()">\n                    \n                    <div ng-show="error.name.user_name" class="input-help">{{error.name.user_name}}</div>\n                    <input class="user text" name="login" type="text" placeholder="{{ \'LABEL_USERNAME\' | translate }}" ng-model="login.user_name" ng-blur="verifyUser()" ng-change="error.name.user_name=\'\'" required />\n                    \n                    <div ng-hide="fb_connected">\n                        <div ng-show="error.password.user_password" class="input-help">{{error.password.user_password}}</div>\n                        <input class="password text" type="password" name="password" placeholder="{{ \'LABEL_PASSWORD\' | translate }}" ng-model="login.user_password" ng-change="verifyPassword()" required />\n                        <div ng-show="error.password.user_password2" class="input-help">{{error.password.user_password2}}</div>\n                        <input class="password text" type="password" name="password2" placeholder="{{ \'LABEL_PASSWORD2\' | translate }}" ng-model="login.user_password2" ng-change="verifyPassword()" required ng-disabled="login.user_password.length < 6"/>\n                        <div vc-recaptcha class="captchaWrap" theme="white" key="6LciNPASAAAAAIvWyHGAOQUE0E0wiKvI1XkIHHHq"></div>\n                        <br>\n                    </div>\n                    <button ng-click="submit()" class="btn-green" ng-disabled="!valid" ng-class="{\'disabled\':!valid}">\n                        <span ng-show="!loading">{{ \'LABEL_CREATE_ACCOUNT\' | translate }}</span>\n                        <span class="icon-spin-1 animate-spin icon-only" ng-show="loading"></span>\n                    </button>\n                </div>\n            </form>\n        </div>            \n\n        <div ng-show="restore">\n            <div ng-controller="ResetPasswordController">\n                <div ng-show="!changed">\n                    <div class="head">NEW PASSWORD</div>\n                    <form accept-charset="UTF-8" class="form_enclosed formL" ng-submit="changePassword()" name="signupForm" novalidate>\n                        <div ng-show="error.user_password" class="input-help">{{error.user_password}}</div>\n                        <input class="password text" type="password" name="password" placeholder="{{ \'LABEL_PASSWORD\' | translate }}" ng-model="user_password" ng-change="verifyPassword()" required />\n                        <div ng-show="error.user_password2" class="input-help">{{error.user_password2}}</div>\n                        <input class="password text" type="password" name="password2" placeholder="{{ \'LABEL_PASSWORD2\' | translate }}" ng-model="user_password2" ng-change="verifyPassword()" required/>\n                        <button ng-click="submit()" class="btn-green" ng-disabled="!valid" ng-class="{\'disabled\':!valid}">Submit</button>\n                    </form>\n                </div>\n                <div ng-show="changed">\n                    <div ng-controller="LoginCtrl">            \n                        <div class="hover link">Password has been changed!</div>\n                        <br />\n                        <button ng-click="openDialog()" class="btn-green">Login</button>\n                    </div>\n                </div>    \n            </div>\n        </div>\n    </div>\n</div>'), $templateCache.put("partials/main/subscribe.html", '<div id="nav" class="nono">\n    <div id="nav-logo">\n        <a ui-sref="home.root"></a>\n    </div>\n</div>\n\n<div class="subscribe page">\n\n    <div class="sub-box">\n        <div class="sub-header">\n            <img class="logo round" src="/secureedge{{media.channel.user_logo}}" />\n            <div class="title">\n                <div class="name">{{media.media_display_name}}</div>\n                <a class="link" href="http://www.hitbox.tv/{{media.media_user_name}}" target="_blank">hitbox.tv/{{media.media_user_name}}</a>\n                <div class="plan-price">\n                    <div class="plan">Monthly subscription</div>\n                    <div class="price">\n                        <div class="price-regular">{{subscription.plan.plan_currency}} {{subscription.plan.plan_charge}}</div>\n                        <!-- <div class="price-new">{{subscription.plan.plan_currency}} {{discountedPrice}}</div> -->\n                    </div>\n                </div>\n                <!-- <div class="price-new-msg"><strong>25% OFF</strong> the first month<br />if you subscribe until June 19th 2014</div> -->\n            </div>\n        </div>\n\n        <div class="sub-subhead">Support {{media.media_display_name}} and receive:</div>\n\n        <div class="sub-benefits">\n            <div class="emotes cf">\n                <div class="head">Chat Emotes</div>\n                <div class="emotes-wrap">\n                    <img src="/secureedge{{subBadges[0].badge_image}}" tooltip-placement="top" tooltip="Chat Badge" />\n                    <img ng-repeat="emote in subEmotes" src="/secureedge{{emote[0]}}" tooltip-placement="top" tooltip="{{emote[1]}}" />\n                </div>\n            </div>\n            <div class="g2a" ng-show="g2aVoucher.available" ng-class="{undesired:!g2aVoucher.desired}">\n                <div class="head cf">\n                    <input type="checkbox" ng-model="g2aVoucher.desired" />\n                    <span class="title">G2A Gift Card</span>\n                    <div class="terms" tooltip-placement="top" tooltip="Receive a G2A gift card with your subscription. If you select this option G2A will receive your email address to send you the gift card.">Terms</div>\n                </div>\n                <div class="card">\n                    <div class="title">Gift Card</div>\n                    <div class="price">{{subscription.plan.plan_currency}} 4.99</div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div ng-hide="payment.success || alreadySubscribed || waitingForPaypal || waitingForXsolla">\n        <!--   \n            sign in\n        -->\n        <div class="center topDashed" ng-show="!loggedIn" ng-controller="LoginCtrl" ng-click="openDialog()">\n            <button class="btn-green">Log in to purchase</button>\n        </div>\n        <!--   \n            payment    \n        -->\n        <div ng-hide="!loggedIn" class="payment topDashed">\n            <div class="subHead">Payment options:</div>\n            <div class="selectPayment">\n                <div class="pp" ng-click="paymentMethod=\'pp\'"><span class="paypal-logo"></span></div>\n            <!--     <div class="or-with"><div></div><span>or</span><div></div></div>\n                <div class="cc" ng-click="paymentMethod=\'cc\'">\n                    <img src="/css/images/credit_cards/visa.png" height="31" alt="creditcard" />\n                    <img src="/css/images/credit_cards/mastercard.png" height="31" alt="creditcard" />\n                    <img src="/css/images/credit_cards/discover.png" height="31" alt="creditcard" />\n                    <img src="/css/images/credit_cards/american_express.png" height="31" alt="creditcard" />\n                </div> -->\n            </div>\n            <!-- <div id="recurlyForm" class="paymentBubble creditcard" ng-show="paymentMethod==\'cc\'"></div> -->\n            <div class="paypal" ng-show="paymentMethod==\'pp\'">\n                <form>\n                    <button class="btn-green" type="submit" ng-click="initPaypal()">Subscribe with <span class="paypal-logo"></span>\n                    </button>\n                </form>\n            </div>\n            <div class="note">\n                <span>By completing the purchase you are agreeing to the</span>\n                <br />\n                <a href="http://www.hitbox.tv/legal/terms-of-use" target="_blank">Terms of Use</a>\n                <span>and the</span>\n                <a href="http://www.hitbox.tv/legal/terms-of-sale" target="_blank">Terms of Sale</a>.\n                <br />\n                <span>You can cancel a subscription any time.</span>\n            </div>\n            <!--\n            <div class="btn" ng-click="popoutXsolla()">Xsolla Test</div>\n        -->\n        </div>\n    </div>\n    <!--   \n            \n    -->\n    <section class="success" ng-show="payment.success">\n        <div>You successfully subscribed!</div>\n        <br />\n        <br />\n        <span class="note">continue to ...</span>\n        <br />\n        <br />\n        <a class="btn btnOutline" href="/{{media.media_user_name}}">{{media.media_user_name}}\'s Channel</a>\n        <br />\n        <br />\n        <a class="btn btnOutline" href="http://www.hitbox.tv/settings/{{session.user_name}}/connections/subscriptions">Subscriptions Overview</a>\n    </section>\n    <section class="success" ng-show="alreadySubscribed">\n        <div>You are subscribed!</div>\n        <a href="http://www.hitbox.tv/settings/{{session.user_name}}/connections/subscriptions">Edit subscription.</a>\n    </section>\n\n    <section class="success" ng-show="waitingForPaypal">\n        <div>Waiting for Paypal confirmation</div>\n    </section>\n<!--\n    <section class="success" ng-show="waitingForXsolla">\n        <div>Waiting for Payment confirmation</div>\n    </section>\n-->\n</div>\n'), $templateCache.put("partials/main/subscribe_cancel.html", '<div id="nav" class="nono">  \n    <div id="nav-logo">\n        <a ui-sref="home.root"></a>\n    </div>\n</div>\n\n<div class="subscribe page">\n    <!--   \n        title    \n    -->\n    <div class="cancelHead" ng-hide="canceled">Don\'t Renew Subscription </div>\n    <div class="header">\n        <img class="logo round" ng-src="/secureedge{{media.channel.user_logo}}" />\n        <div class="title">\n            <div class="name">{{media.media_display_name}}</div>\n            <a class="link" href="/{{media.media_user_name}}">hitbox.tv/{{media.media_user_name}}</a>\n            <div class="plan">Monthly subscription</div>\n            <div class="price">{{subscription.plan.plan_currency}} {{subscription.plan.plan_charge}}</div>    \n        </div>\n    </div>\n    <div class="sub-benefits">\n        <div class="sub-benefit-head">Support {{media.media_display_name}} and receive these emotes:</div>\n        <!-- <div class="sub-benefit-head">Benefits include:</div>\n        <span ng-repeat="benefit in subscription.benefits" class="sub-benefit-text"><span>{{benefit.text}}</span></span> -->\n            <!-- text -->\n        <div class="sub-benefit-emojis">\n            <!-- chat badge -->\n            <div class="badge">\n                <div class="sub-benefit-head">Badge</div>\n                <img ng-src="/secureedge{{subBadges[0].badge_image}}" />    \n            </div>\n            <!-- chat emojies -->\n            <div class="emojis">\n                <div class="sub-benefit-head">Emotes</div>\n                <img ng-repeat="emote in subEmotes" ng-src="/secureedge{{emote[0]}}" tooltip-placement="top" tooltip="{{emote[1]}}" />    \n            </div>\n            \n        </div>\n    </div>    \n    <div ng-hide="canceled">\n            <!--   \n                sign in\n            -->\n        <div class="center" ng-show="!loggedIn" ng-controller="LoginCtrl" ng-click="openDialog()">\n                <button class="btn-green">Log in to proceed</button>\n            </div>\n\n        </div>\n    \n    <div ng-hide="!loggedIn || canceled || error_cancel" class="payment">\n        <div class="cancelHead">We\'re sorry to see you cancel {{media.media_display_name}}\'s subscription. <br />\n            Current term ends {{subscription.sub_date_valid | toDate}} <br />\n        </div>\n        \n        <textarea class="cancelDesc" placeholder="Please tell about your reasons so we can improve our service." ng-model="comment"></textarea>\n        <div class="btnWrap">\n            <div class="btn btn-green" ng-click="go(\'/\'+media.media_user_name)">Stay Subscribed</div>\n            <div class="btn" ng-click="cancelSubscription()">Don\'t Renew</div>\n        </div>\n    </div>\n\n    <!--   \n            \n    -->\n    <section class="error" ng-show="canceled">\n        <div>You canceled your subscription.</div>\n        <span>Current term ends on {{subscription.sub_date_valid | toDate}}</span>\n<!--         <span>You will be redirected to <a href="{{media.media_user_name}}">{{media.media_display_name}}</a>\'s channel in {{time_left}} seconds ...</span> -->\n        <br />\n        <br />\n        <br />\n        <span class="note">continue to ...</span>\n        <br />\n        <br />\n        <a class="btn btnOutline" href="/{{media.media_user_name}}">{{media.media_user_name}}\'s Channel</a>\n        <br />\n        <br />\n        <a class="btn btnOutline" href="/settings/{{session.user_name}}/connections/subscriptions">Subscriptions Overview</a>\n    </section>\n    <section class="error" ng-show="error_cancel">\n        <div>Error has occurred</div>\n        <span>Please try again later</span>\n    </section>\n</div>\n'), $templateCache.put("partials/main/team-manager.html", '<div class="page team-manager" ng-controller="TeamRevenueStatsSettingsController" ng-style="{\'background\' : url(config.imgUrl + team.info.group_cover)}">\n    <div class="wrap" ng-class="{\'statsLoading\': processing}">\n        <div class="date-range-bar nono" ng-show="!processing">\n            <span ng-click="button_selection=1;getLast30Days()" ng-class="{\'active\': button_selection==1 }">Last 30 Days</span>\n            <span ng-click="button_selection=2;getLast90Days()" ng-class="{\'active\': button_selection==2 }">Last 90 Days</span>\n            <daterange></daterange>\n        </div>\n        <div class="header cf" ng-show="!processing">\n            <div class="logoWrap round">\n                <div class="logoError" ng-show="{{errors.team_logo}}">{{errors.team_logo}}</div>\n                <div ng-if="userIsAdmin" class="uploadWrap round">\n                    <uploaddroparea uda-image="{{config.imgUrl}}{{team.info.group_logo_large}}" uda-success-callback="cblogosuccess()" class="logo round" uda-data-name="file" uda-url="/api/upload/team/" uda-delete-callback="cbdeletelogo()" uda-name="Logo" uda-fallback-image="{{config.imgUrl}}{{config.fallbackImages.teamLogo}}">\n                    </uploaddroparea>\n                </div>\n                <div ng-if="!userIsAdmin">\n                    <a href="/team/{{team.info.group_name}}">\n                        <div ng-if="team.info.group_logo_large" class="logo round" back-img="{{config.imgUrl}}{{team.info.group_logo_large}}">\n                        </div>\n                        <div ng-if="team.info.group_logo_large == \'\'" class="logo round" back-img="{{config.imgUrl}}{{config.fallbackImages.teamLogo}}">\n                        </div>\n                    </a>\n                </div>\n            </div>\n            <div class="title">\n                <a class="name" href="/team/{{team.info.group_name}}">{{team.info.group_display_name}}</a>\n            </div>\n            <div class="revenue">\n                <span>Total revenue</span><span ng-bind-html="revenue_sum_html"></span>\n            </div>\n            <div>\n                <div class="second-line">\n                    <a class="edit" href="/settings/{{session.user_name}}/teams">Edit</a>\n                    <div ng-hide="!team.members" class="csv-download" tooltip-placement="left" tooltip="Download your Revenue Statistic" tooltip-append-to-body="true">\n                        <div ng-csv="getStatsCSV()" field-separator=";" filename="team.csv">\n                            <span>CSV</span>\n                            <div class="dl-button icon-download-alt"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="content">\n\n            <div class="processing-anim" ng-show="processing">\n                <bouncy class=""></bouncy>\n                <div>Loading Team Statistics</div>\n            </div>\n\n            <div ng-show="!processing">\n                <ul class="list-header">\n                    <li>\n                        <div class="col-1"></div>\n                        <div class="col-2">\n                            <div class="sort" ng-click="changeSort(\'user_name\')" ng-class="{\'sortDown\': sort==\'user_name\' && !reverse, \'sortUp\': sort==\'user_name\' && reverse}">Name</div>\n                            <div class="sort" ng-click="changeSort(\'followers\')" ng-class="{\'sortDown\': sort==\'followers\' && !reverse, \'sortUp\': sort==\'followers\' && reverse}">Followers</div>\n                        </div>\n                        <div class="col-3">\n                            <!--                             <div class="sort">Time streamed</div> -->\n                        </div>\n                        <div class="col-4">\n                            <div class="sort" ng-click="changeSort(\'revenues_sum\')" ng-class="{\'sortDown\': sort==\'revenues_sum\' && !reverse, \'sortUp\': sort==\'revenues_sum\' && reverse}">Revenue</div>\n                        </div>\n                    </li>\n                </ul>\n                <ul class="list-content">\n                    <li ng-repeat="member in team.members | orderBy:sort:reverse">\n                        <div class="col-1">\n                            <!--                         <user-options-popover username="{{member.user_name}}"> -->\n                            <a href="/{{member.user_name}}" target="_blank">\n                                <img class="user-logo round" ng-src="{{config.imgUrl}}{{member.user_logo}}">\n                            </a>\n                            <!--                         </user-options-popover> -->\n                        </div>\n                        <div class="col-2">\n                            <a href="/{{member.user_name}}" class="name">{{member.user_name}}</a>\n                            <div class="text-small icon-heart">{{member.followers}}</div>\n                        </div>\n                        <div class="col-3">\n                            <div>\n                                <!--\n                            <nvd3-discrete-bar-chart data="member.chart" id="chart{{member.user_name}}" width="120" height="80" margin="{left:0, top:0, bottom:0, right:0}" x="xFunction()" y="yFunction()" xaxistickvalues="xAxisTickValues()" xaxistickformat="xAxisTickFormat()" interactive="true" tooltips="true" color="barColor()" tooltipcontent="toolTipContentFunction()" forcey="[0,{{max_revenues}}]" yaxistickformat="yAxisTickFormat()" class="teamManagerBarChart">\n                                <svg></svg>\n                            </nvd3-discrete-bar-chart>\n                            -->\n\n                                <div team-chart series="member.chart.series" id="{{$index}}" theme="{{$root.theme}}">\n                                </div>\n                            </div>\n                        </div>\n                        <div class="col-4">\n                            <div class="revenue">\n                                <span ng-bind-html="member.revenues.summary.total_earnings_html"></span>\n                            </div>\n                            <button class="btnOutline" ng-click="go(\'/settings/\'+member.user_name+\'/statistics\')">Show Details</button>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>'), $templateCache.put("partials/main/team.html", '<div class="page team-page" ng-controller="TeamController">\n	<div class="team-header">\n		<!-- <div class="team-grad"></div> -->\n		<div ng-if="userIsAdmin" class="uploadWrap">\n			<div class="coverError" ng-show="{{errors.team_cover}}">{{errors.team_cover}}</div>\n			<uploaddroparea \n			class="cover"\n			uda-name="Cover" \n			uda-data-name="cover" \n			uda-image="{{config.imgUrl}}{{team.info.group_cover}}" \n			uda-success-callback="cbcoversuccess()" \n			uda-url="/api/upload/team/" \n			uda-delete-callback="cbdeletecover()" \n			uda-fallback-image="{{config.imgUrl}}{{config.fallbackImages.teamCover}}"></uploaddroparea>\n		</div>\n		<div ng-if="!userIsAdmin">\n			<div class="cover"\n			ng-if="team.info.group_cover" \n			back-img="{{config.imgUrl}}{{team.info.group_cover}}"></div>\n			<div class="cover"\n			ng-if="team.info.group_cover == \'\' || team.info.group_cover == null" \n			back-img="{{config.imgUrl}}{{config.fallbackImages.teamCover}}"></div>\n		</div>\n	</div>\n\n	<div class="team-foreground">\n		<div class="team-content-wrap team-width">\n			<div class="team-infobox">\n				<div ng-if="userIsAdmin" class="uploadWrap">\n					<div class="logoError" ng-show="{{errors.team_logo}}">{{errors.team_logo}}</div>\n					<uploaddroparea \n						class="team-logo round" \n						uda-name="Logo" \n						uda-data-name="file" \n						uda-image="{{config.imgUrl}}{{team.info.group_logo_large}}" \n						uda-success-callback="cblogosuccess()" \n						uda-url="/api/upload/team/" \n						uda-delete-callback="cbdeletelogo()" \n						uda-fallback-image="{{config.imgUrl}}{{config.fallbackImages.teamLogo}}">\n					</uploaddroparea>\n				</div>\n				<div ng-if="!userIsAdmin">\n					<div class="team-logo round" \n						ng-if="team.info.group_logo_large" \n						back-img="{{config.imgUrl}}{{team.info.group_logo_large}}">\n					</div>\n					<div class="team-logo round" \n						ng-if="team.info.group_logo_large == \'\' || team.info.group_logo_large == null" \n						back-img="{{config.imgUrl}}{{config.fallbackImages.teamLogo}}">\n					</div>\n				</div>\n				<div>\n					<div class="name">{{team.info.group_display_name}}</div>                \n					<section class="description">\n						{{team.info.group_text}}\n					</section>\n					<section class="members">\n						<!-- <div class="">Members</div> -->\n						<userlist team="team_name" show-user-options="true" sort="live" type="team" callback="userListCallback(user)"></userlist>\n					</section>\n				</div>\n			</div>\n			<div class="team-content">\n<!-- 				<div class="team-spotlight cf" ng-if="!isMobile" ng-hide="liveCount<1">\n					<div class="spotlight-player">\n						<div class="player-wrapper">\n							<mediaplayer type="\'live\'" mediaid="media.media_id"></mediaplayer>\n						</div>\n					</div>\n					<div class="spotlight-info">\n						<div class="logo round" ng-style="userImg()"></div>\n						<div class="name">{{media.media_display_name}}</div>\n						<div class="status">{{media.media_status}}</div>\n						<a class="game" href="/game/{{media.category_seo_key}}">{{media.category_name}}</a>\n						<div class="viewer" ng-show="media.media_views">{{media.media_views}} Viewer{{media.media_views!=1 ? \'s\' : \'\'}}</div>\n						<span class="time">live for 5:45</span>\n					</div>\n				</div> -->\n				<section>\n				    <div class="mediaList-title cf" ng-hide="lists.liveCount<1 || loading.live">\n                        <h1 ng-hide="(lists.liveCount<1 || processing)">\n                            Live now\n                        </h1>\n                    </div>\n					<mediaList type="live" \n						limit="30" \n						filter="" \n						size="mid" \n						live-only="true"\n						team-name="{{filter_team_name}}" \n						wait-for="teamName"\n						processing="loading.live"\n						public-length="lists.liveCount"></mediaList>\n				</section>\n				<section ng-hide="loading.live">\n					<div class="mediaList-title">\n						<div ng-hide="lists.videoCount<1">\n							<h1>Videos</h1>\n							<div class="filter sort-wrap">\n								<span ng-click="videoFilter=\'recent\'" ng-class="{active:videoFilter==\'recent\'}">Newest</span>\n						        <span ng-click="videoFilter=\'popular\'" ng-class="{active:videoFilter==\'popular\'}">Most Popular</span>\n					        </div>\n						</div>\n						<h1 ng-show="lists.videoCount<1">No Videos</h1>\n					</div>\n					<mediaList type="video" \n						filter="{{videoFilter}}" \n						limit="30" \n						size="mid"\n						live-only="true"\n						user="{{filter_user_name}}" \n						team-name="{{filter_team_name}}" \n						wait-for="teamName"\n						processing="loading.video"\n						public-length="lists.videoCount"></mediaList>\n				</section>\n			</div>\n		</div>\n		<div ng-include="\'partials/sub/footer.html\'"></div>\n	</div>\n</div>\n'), $templateCache.put("partials/main/unsubscribe_newsletter.html", '<div class="verify-email" ng-controller="UnsubscribeNewsletterController">\n	\n	<a ng-click="goToHome()" class="icon-hitbox-icon"></a>\n	<!-- <div class="name">{{user_name}},</div> -->\n	<div class="message">You successfully unsubscribed from our newsletter</div>\n	<a ng-click="goToHome()" class="link">... continue to start page</a>\n\n</div>'), $templateCache.put("partials/main/verifyemail.html", '<div class="verify-email" ng-controller="VerifyEmailController">\n	\n	<a ng-click="goToHome()" class="icon-hitbox-icon"></a>\n	<div class="name">{{user_name}},</div>\n	<div class="message">thank you for verifying <br />your email address.</div>\n	<a ng-click="goToHome()" class="link">... continue to start page</a>\n\n</div>'), $templateCache.put("partials/directives/browse_widget.html", '<div>\r\n    <div class="browse-games filter cf">\r\n        <!-- following icon logged OUT -->\r\n        <ul class="game-thumbs grid" ng-hide="loggedIn">\r\n            <li class="following-cover none" generic-popover gp-width="300" gp-height="400" gp-position="right" gp-template="partials/sub/popover_follow_loggedout.html" gp-classes=\'["popover-follow","nono"]\' gp-on="click">\r\n                <a>\r\n                    <div class="heart icon-heart"></div>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        <!-- following icon logged IN -->\r\n        <ul class="game-thumbs grid" ng-show="loggedIn" ng-class="{active:browseCat==\'favorite\'}">\r\n            <li class="following-cover" ng-class="{active:browseCat==\'favorite\', none:followingLength<1}">\r\n                <a ng-click="browseCat = \'favorite\'">\r\n                    <div class="heart icon-heart"></div>\r\n                    <div class="counter">{{followingLength > 0 ? followingLength : \'0\'}}\r\n                        <!-- <div>Live</div> --></div>\r\n                    <div class="title">Channels <br> You Follow</div>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        <ul class="game-thumbs grid">\r\n            <li ng-repeat="game in games" ng-class="{\'active\': currentGameName == game.category_seo_key}" ng-click="selectGame(game)">\r\n                <a>\r\n                    <div class="gt-img" lazy-load="{{config.imgUrl}}{{game.category_logo_large}}"></div>\r\n                    <div class="gt-title">\r\n                        <div class="gt-title-inner">\r\n                            <div class="gt-name">{{game.category_name}}</div>\r\n                            <div class="gt-stats">\r\n                                <div class="icon-videocam" ng-if="$root.session && $root.session.superadmin == \'1\'">{{game.category_media_count | number}}</div>\r\n                                <div class="icon-eye">{{game.category_viewers | number}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class="tse-scrollable browse-scroll" scroll-emulator>\r\n        <div class="tse-scroll-content">\r\n            <div class="tse-content">\r\n                <div class="content cf">\r\n                    <div ng-hide="browseCat==\'favorite\'">\r\n                        <medialist id="live-list" type="live" page="1" size="mid" limit="30" lines="3" lineoffset="3" show-more="true" show-hidden="showHidden" only-hidden="onlyHidden" game="{{gameFilterId}}" public-length="liveLength" live-only="true">\r\n                        </mediaList>\r\n                    </div>\r\n                    <div ng-show="browseCat==\'favorite\'">\r\n                        <medialist id="live-list-following" type="live" page="1" size="mid" limit="30" lines="3" lineoffset="3" show-more="true" show-hidden="showHidden" only-hidden="onlyHidden" follower-id="{{followerId}}" public-length="followingLength" live-only="true">\r\n                        </mediaList>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n'), $templateCache.put("partials/directives/dummy_list.html", '<div>\r\n	<ul class="t1 live">\r\n		<li class="live-list" ng-repeat="dummy in dummylist">\r\n			<div class="t-wrap">\r\n				<div class="t-img">\r\n					<!-- <div ng-include="\'partials/sub/hitbox-icon.html\'"></div> -->\r\n					<div class="bouncy">\r\n						<div class="bouncy1"></div>\r\n						<div class="bouncy2"></div>\r\n						<div class="bouncy3"></div>\r\n					</div>\r\n				</div>\r\n			</div>\r\n		</li>\r\n	</ul>\r\n</div>\r\n'), $templateCache.put("partials/directives/follow_button.html", '<div class="">\r\n\r\n	<button class="btn-follow following" \r\n		ng-click="unFollow()" \r\n		ng-show="following">\r\n	    {{ \'BTN_FOLLOWING\' | translate }}</button>\r\n\r\n	<button class="btn-follow" \r\n		ng-click="addFollow()" \r\n		ng-show="loggedIn && !following">\r\n	    {{ \'BTN_FOLLOW\' | translate }}</button>\r\n\r\n	<button class="btn-follow" \r\n		ng-show="!loggedIn" \r\n		ng-controller="LoginCtrl" \r\n		ng-click="openDialog()" \r\n		tooltip-placement="top" \r\n		tooltip="Login to Follow" \r\n		tooltip-append-to-body="true">\r\n	    {{ \'BTN_FOLLOW\' | translate }}</button>\r\n\r\n</div>'), $templateCache.put("partials/directives/follower_chart.html", '<div id="chartContainerFollower" style="width:100%; height:400px;"></div>'), $templateCache.put("partials/directives/following_list.html", '<ul class="t1">\r\n    <li ng-repeat="media in media" ui-animate class="item_{{$index}}">\r\n        <div class="tMetaWrap">\r\n            <div class="tLogo round" ng-style="{\'background-image\':\'url(\' + config.imgUrl + media.channel.user_logo_small + \')\'}"></div>\r\n            <div class="tMeta">\r\n                <a href="/{{media.media_name}}" class="tName">{{media.media_display_name}}<span class="flag flag-br"></span></a>\r\n                <a href="/{{media.category_seo_name}}" class="tGame"><!-- {{media.media_views | number}}  -->{{media.category_name}}</a>\r\n            </div>\r\n        </div>\r\n    </li>\r\n</ul>'), $templateCache.put("partials/directives/revenue_chart.html", '<div id="chartContainerRevenue" style="width:100%; height:400px;"></div>'), $templateCache.put("partials/directives/subscribe_button.html", '<div class="">\r\n\r\n	<!-- <button class="btn-subscribe isNotSubscribed" ng-hide="displayState == \'data\'">\r\n		<span class="icon-spin-1 animate-spin icon-only"></span>\r\n	</button> -->\r\n\r\n	<button class="btn-subscribe isNotSubscribed" \r\n		ng-if="displayPopover" \r\n		ng-hide="displayState != \'data\' || subscribed" \r\n		ng-click="gotoSubscribeUrl()" \r\n		generic-popover \r\n		gp-width="320" \r\n		gp-height="200" \r\n		gp-position="top" \r\n		gp-template="partials/sub/subscription_popover.html" \r\n		gp-on="mouseover">\r\n		{{subscribeLabel}}\r\n	</button>\r\n\r\n	<button class="btn-subscribe isNotSubscribed" \r\n		ng-if="!displayPopover" \r\n		ng-hide="displayState != \'data\' || subscribed" \r\n		ng-click="gotoSubscribeUrl()">\r\n		{{subscribeLabel}}\r\n	</button>\r\n\r\n	<button class="btn-subscribe icon-ok isSubscribed" \r\n		ng-show="subscribed && displayState == \'data\'" \r\n		ng-click="$event.stopPropagation()" \r\n		generic-popover \r\n		gp-width="320" \r\n		gp-height="200" \r\n		gp-position="top" \r\n		gp-template="partials/sub/subscription_popover.html" \r\n		gp-on="mouseover">\r\n		Subscribed\r\n	</button>\r\n\r\n</div>'), $templateCache.put("partials/directives/team_chart.html", '<div id="chartContainerViewer{{id}}" style="width:400px; height:100px;"></div>'), $templateCache.put("partials/directives/viewer_chart.html", '<div id="chartContainerViewer" style="width:100%; height:600px;"></div>'), $templateCache.put("partials/content/legal/imprint.html", '<h1>Imprint</h1>\n\n<p>hitbox Entertainment GmbH<br />\nPaulanergasse 13<br />\n1040 Wien | Austria<br />\nFN 403739 i, HG Wien<br />\nEmail: <a href="mailto:info@hitbox.tv">info@hitbox.tv</a></p>\n\n<p>All rights reserved.</p>\n\n<p>Our website contains links to the websites of third parties ("external links"). As the content of these websites is not under our control, we cannot assume any liability for such external content. In all cases, the provider of information of the linked websites is liable for the content and accuracy of the information provided. At the point in time when the links were placed, no infringements of the law were recognisable to us. As soon as an infringement of the law becomes known to us, we will immediately remove the link in question.</p>'), $templateCache.put("partials/content/legal/privacy-policy.html", "<h1>Privacy Policy</h1>\n<h2>Privacy Notice</h2>\n<p>The Privacy Policy describes how hitbox and its subsidiaries treat personal information when you use hitbox services, including information provided when you use hitbox. In addition, the following describes privacy practices specific to hitbox. To understand how we treat the information you give us as you use hitbox, you should read this policy.</p>\n\n<h2>Non-Account Activity</h2>\n<p>You can watch videos on hitbox without having an hitbox Account. You can also contact us about a particular video without having an hitbox Account.</p>\n\n<h2>Account-Related Activity:</h2>\n<p>Certain other activities on hitbox â€“ like uploading videos, posting comments, flagging videos or watching restricted videos â€“ require you to have an hitbox Account. We ask for some personal information when you create an hitbox Account, including your email address and a password, which is used to protect your account from unauthorised access.</p>\n\n<h2>Usage Information</h2>\n<p>We may record information about your usage, such as when you use hitbox, the channels, groups and favourites you subscribe to, the contacts you communicate with, the videos you watch and the frequency and size of data transfers, as well as information you display or click on in hitbox (including UI elements, settings and other information). If you are logged in, we may associate that information with your account. We may use clear GIFs (a.k.a. â€œWeb Beaconsâ€) in HTML-based emails sent to our users to track which emails are opened by recipients.</p>\n\n<h2>Content Uploaded to Site</h2>\n<p>Any personal information or video content that you voluntarily disclose online (on discussion boards, in messages and chat areas, within your playback or profile pages, etc.) becomes publicly available and can be collected and used by others.</p>\n\n<h2>Uses</h2>\n<p>* If you submit personally identifiable information to us through the hitbox Sites, we use your personal information to operate, maintain and provide to you the general and personalised features and functionality of the hitbox Sites and to process any flagging activity or correspondence you send to us.</p>\n<p>* Your account name (not your email address) is displayed to other users when you upload videos or send messages through the hitbox Sites and other users can contact you through messages and comments. Any videos that you submit to the hitbox Sites may be redistributed through the Internet and other media channels and may be viewed by the general public. If you have enabled active sharing, other users may see that you, as identified by your account name (not your email address), are watching the same video.</p>\n<p>* We do not use your email address or other personally identifiable information to send commercial or marketing messages without your consent or except as part of a specific programme or feature for which you will have the ability to opt in or opt out. We may, however, use your email address without further consent for non-marketing or administrative purposes (such as notifying you of major hitbox Site changes or for customer service purposes).</p>\n<p>* We use both your personally identifiable information and certain non-personally identifiable information (such as anonymous user usage data, cookies, IP addresses, browser type, clickstream data, etc.) to improve the quality and design of the hitbox Sites and to create new features, promotions, functionality and services by storing, tracking, analysing and processing user preferences and trends, as well as user activity and communications.</p>\n<p>* We use cookies, clear gifs and log file information to: (a) store information so that you will not have to re-enter it during your visit or the next time you visit the hitbox Sites; (b) provide custom, personalised content and information; (c) monitor the effectiveness of our marketing campaigns; (d) monitor aggregate metrics such as total number of visitors, pages viewed, etc.; and (e) track your entries, submissions and status in promotions, sweepstakes and contests.</p>\n\n<h2>Information that is Publicly Available</h2>\n<p>* When you create an account on the site, some information regarding your account and your account activity will be provided to other Users of the site. This may include the date you opened your account, the date you last logged in to your account, your age (if you choose to make it public), your country and the number of videos you have watched.</p>\n<p>* Your account name (not your email address) is displayed to other Users when you engage in certain activity on the site, such as uploading videos or sending messages via the hitbox Sites. Other Users can contact you via messages and comments.</p>\n<p>* You can also choose to add personal information that will be visible to other Users on your channel page (the public facing page for your account on the site). This may include a profile picture, your name, gender, relationship status or other details.</p>\n<p>* If you choose to add certain features to your channel page, these features and your activity associated with these features will be displayed to other Users and may be aggregated and shared with your confirmed friends or other Users. Such shared activity may include videos you add as favourites, videos you rate and videos you have uploaded.</p>\n<p>* Any videos that you submit to the hitbox Sites may be redistributed through the Internet and other media channels and may be viewed by the general public. If you have enabled active sharing, other users may see that you, as identified by your account name (not your email address), are watching the same video.</p>\n\n<h2>Your Choices</h2>\n<p>* You may, of course, decline to submit personally identifiable information through the hitbox Sites, in which case you can still view videos and explore the hitbox Sites, but hitbox may not be able to provide certain services to you. Some advanced hitbox features may, for authentication purposes, require you to sign up. The privacy notices of those services govern the use of your personal information associated with them.</p>\n<p>* You may update or correct your personal profile information and email preferences at any time by visiting your account profile page.</p>\n<p>* You can control the information that is available to other Users and your confirmed friends at any time, by editing your account and the features included on your channel page.</p>\n\n<h2>Third-party Advertisers, Links to Other Sites</h2>\n<p>hitbox allows other companies, called third-party ad servers or ad networks, to serve advertisements within the hitbox Sites. These third-party ad servers or ad networks use technology to send, directly to your browser, the advertisements and links that appear on the hitbox Sites. They automatically receive your IP address when this happens. They may also use other technologies (such as cookies, JavaScript or Web Beacons) to measure the effectiveness of their advertisements and to personalise the advertising content you see.</p>\n<p>hitbox does not provide any personally identifiable information to these third-party ad servers or ad networks without your consent or except as part of a specific programme or feature for which you will have the ability to opt in or opt out. However, please note that if an advertiser asks hitbox to show an advertisement to a certain audience (for example, men aged 18-34) or audience segment (for example, men aged 18-24 who have viewed certain channels of content) and you respond to that advertisement, the advertiser or ad server may conclude that you fit the description of the audience they are trying to reach. The advertiser may also use information regarding your use of the hitbox Sites, such as the number of times you viewed an ad (but not any personally identifiable information), to determine which ads to deliver to you.</p>\n<p>You should consult the respective privacy policies of these third-party ad servers or ad networks (see links below) for more information on their practices and for instructions on how to opt out of certain practices. hitbox â€˜s privacy policy does not apply to, and we cannot control the activities of, such other advertisers or websites. Any data obtained by third-party ad servers, which is subsequently shared with hitbox, is maintained and handled by hitbox in accordance with this privacy policy.</p>"), $templateCache.put("partials/content/legal/terms-of-sale.html", '<h1>Terms of Sale</h1>\n<h2>1. Overview</h2>\n<p>While it is our mission to provide users with as many viewing choices as possible, sometimes that involves giving users the choice of paying a fee in order to support the broadcaster, to view Content in their format of choice or with additional features for specific channels. As part of that access to Subscription Content or features, hitbox Subscription requires payment by you of a subscription fee, which also directly supports the broadcaster to whom users subscribe.</p>\n<p>You can find specific details regarding your Subscription Service at any time by clicking on Your Account (www.hitbox.tv/â€YourUserNameâ€).</p>\n<p>You agree that for various reasons, such as restrictions from content licensors and other limitations or considerations from third parties, certain Content that may be accessible through one Property may not be accessible through other Properties.</p>\n<p>Because the hitbox Service is offered in multiple time zones, for consistency, a â€œdayâ€ for purposes of these Terms of Use begins at 12:00 a.m. Central European Time and ends at 11:59 p.m. Central European Time of that same calendar day.</p>\n<h2>2. Terms of Sale and Terms of Use</h2>\n<p>Please read the following hitbox Terms of Sale and Conditions (â€œTerms of Saleâ€) carefully. These Terms of Sale and the hitbox Terms of Use located at <a href="http://hitbox.tv/legal/terms-of-use/">http://hitbox.tv/legal/terms-of-use/</a> (â€œTerms of Useâ€), which are incorporated herein by reference and form part of these Terms of Sale, govern your purchase of the Subscription Services (defined below) and use of the Site and Services in connection therewith or otherwise. Capitalized terms not defined herein have the meanings given in the Terms of Use. These Terms of Sale apply to you subscribing or purchasing the Subscription Services. These Terms of Sale include our refund policy in Section 5(d). In the event of a conflict between the Terms of Sale and Terms of Use, the Terms of Sale shall govern.</p>\n<p><b>PLEASE NOTE THAT THIS LEGAL AGREEMENT SET OUT BELOW GOVERNS YOUR USE OF THE SUBSCRIPTION SERVICE AND SITE. BY PURCHASING A SUBSCRIPTION YOU DO AGREE TO THESE TERMS. DO NOT USE THE SUBSCRIPTION SERVICE IF YOU DO NOT AGREE WITH THESE TERMS. IF YOU AGREE TO THESE TERMS OF SALE ON BEHALF OF A BUSINESS, YOU REPRESENT AND WARRANT THAT YOU HAVE THE AUTHORITY TO BIND THAT BUSINESS TO THESE TERMS OF SALE AND/OR MASTER TOS, AND YOUR AGREEMENT TO THESE TERMS WILL BE TREATED AS THE AGREEMENT OF THE BUSINESS. IN THAT EVENT, â€œYOUâ€ AND â€œYOURâ€ WILL REFER AND APPLY TO THAT BUSINESS.</b></p>\n<h2>3. Eligibility and Registration</h2>\n<p>a. In order to access the full range of features of the Site or specific channels, or Subscription Services, you will be required to create a hitbox account (â€œUser Accountâ€) then you will be able to add the Subscription Service onto your existing User Account and become a Subscription customer (â€œSubscription Customerâ€). To become a Subscription Customer you must be at least 18 years of age (or the legal age of majority in your country of residence), or if you are above 16 but below 18 (or the legal age of majority in your country of residence) you need parental or guardian consent to make purchases on hitbox.</p>\n<p>b. When you register with hitbox and set up your Subscription Service account, you agree to provide hitbox with accurate and complete information. You agree to promptly update your Subscription Service account information with any new information that may affect the operation of your Subscription Service account. You authorize hitbox, directly or through third parties, to make any inquiries we consider necessary or appropriate to verify your Subscription Service account information.</p>\n<p>c. You will not use false identities or impersonate any other person or use a username or password that you are not authorized to use. The Privacy Policy (<a href="http://hitbox.tv/legal/privacy-policy/">http://hitbox.tv/legal/privacy-policy/</a>) contains information about our policies and procedures regarding the collection, use and disclosure of information we receive from Subscription Customer.</p>\n<p>d. You are responsible for safeguarding and maintaining the confidentiality of your username, password and corresponding Subscription Service account information. You agree not to disclose your password to anyone. You agree that you are entirely and solely responsible for any and all activities or actions that occur under your Subscription Service account, whether or not you have authorized such activities or actions. You agree to immediately notify hitbox of any unauthorized use of your username, password or Subscription Service account.</p>\n<h2>4. Fees and Billing</h2>\n<p>a. <span style="text-decoration: underline;">Fees</span>: The Subscription Service fees (â€œSubscription Feeâ€) will vary depending on hitbox Content Partners, format choices or additional features. The Subscription Service can be purchased via a variety of payment methods and will depend on your country and location. Billing occurs at the time you subscribe for the Subscription Service or shortly thereafter.</p>\n<p>b. <span style="text-decoration: underline;">Billing</span>:</p>\n<p>(i) The Subscription Fee will be billed to you monthly after your registration of the Subscription Service. In most cases the Subscription Service will be renewed for every month thereafter on a continuous monthly basis until you cancel the Subscription Services. By way of example, if you registered on the 15th of the month, you would be billed again on the 15th of the following month.</p>\n<p>(ii) All Subscription Fees are non-refundable. You agree to pay hitbox for all charges at the prices then in effect for use of the Subscription Services by you or other persons (including your agents) using your Subscription Service account, and you hereby authorize hitbox to collect fees by charging the payment method you provide to us as part of your Subscription Service account information or otherwise, either directly or indirectly.</p>\n<p>(iii) The Subscription Fees may include sales tax based on the bill-to address and the sales tax rate in effect at the time your transaction is completed. You will be responsible for, and will promptly pay, all taxes and duties of any kind (including but not limited to sales, use and withholding taxes) associated with your receipt or use of the Subscription Services.</p>\n<h2>5. Termination or Suspension of the Site or Subscription Services &amp; Modification of these Terms of Sale</h2>\n<p>a. hitbox reserves the right in its sole discretion, at any time, to modify, discontinue or terminate the Site or Subscription Services or to modify or terminate these Terms of Sale without advance notice. Modifications to these Terms of Sale, Terms of Use or any policies will be posted on the Site or made in compliance with any notice requirements set forth in these Terms of Sale. If any modification is not acceptable to you, your only recourse is to cease using the Site and Subscription Services. By continuing to use the Site or Subscription Services after hitbox has posted any modifications on the Site or provided any required notices, you accept and agree to be bound by the modifications.</p>\n<p>b. hitbox reserves the right to terminate without refund any Subscription Account found in violation of the Terms of Use or Terms of Sale. Without limiting other remedies, hitbox may at any time suspend or terminate your Subscription Service account and refuse to provide access to the Site or Subscription Service. The Site, Subscription Services and access to a Subscription Service account are not available to temporarily or indefinitely suspended subscribers. In addition, hitbox may notify authorities or take any actions it deems appropriate, without notice to you, if hitbox suspects or determines, in its own discretion, that you may have or there is a significant risk that you have (i) failed to comply with any provision of these Terms of Sale or any policies or rules established by hitbox; or (ii) engaged in actions relating to or in the course of using the Site or Subscription Services that may be illegal or cause liability, harm, embarrassment, harassment, abuse or disruption for you, subscribers, hitbox or any other third parties or the Site or Subscription Services.</p>\n<p>c. You may terminate your Subscription Service account at any time and for any reason, and you will still have access to your User Account after you terminate your Subscription Service. In the event you terminate your Subscription Service account in the middle of the billing cycle, hitbox will not refund a prorated or partial payment of the Subscription Fee, and you will continue to receive the Subscription Services until the end of your billing cycle, where the Subscription Service shall terminate at such time. Your User Account will revert back to its benefits and settings until you terminate your User Account. By terminating your Subscription Service account, hitbox will cease from billing the Subscription Fee in the next billing cycle. If you have an outstanding account balance at the time of cancellation, hitbox reserves the right to continue billing until this account balance has been paid.</p>\n<p>d. If a Subscription Service is cancelled, postponed, interrupted, significantly changed, and/or contains a failure or error as determined by hitbox in its sole discretion, a refund (full or partial) for the Subscription Service may be issued to you from hitbox. Unless otherwise stated, the refund will be issued to such purchaser via the payment method through which the purchase was initially completed. You may receive additional information by emailing support@hitbox.tv</p>\n<p>e. hitbox will not be liable to you or any third party for termination of the Site or Subscription Service or termination of your use of either. Any suspension, termination or cancellation will not affect your obligations to hitbox under the Terms of Use (including, without limitation, proprietary rights and ownership, indemnification and limitation of liability), which by their sense and context are intended to survive such suspension, termination or cancellation.</p>\n<h2>6. Disclaimer</h2>\n<p>Without limiting the terms of the Terms of Use, hitbox does not have any obligation to monitor any content on the Site, for any purpose and is not responsible for the accuracy, completeness, appropriateness or legality of such content or anything said, depicted or written by a Broadcaster during or in connection with the Content. Further, the views and opinions expressed by the Broadcaster or any other contributors to the Content are those of the Broadcaster and any other contributor and do not necessarily reflect the views or opinions of hitbox. The provision of access to or viewing of the Content is not an endorsement of the content and you agree to waive, and hereby do waive, any legal or equitable rights or remedies you have or may have against hitbox with respect thereto.</p>\n<p>YOUR PURCHASE OF A SUBSCRIPTION SERVICE AND YOUR ACCESS TO AND VIEWING OF THE PROGRAM (INCLUDING ANY CONTENT THEREIN) IS AT YOUR SOLE DISCRETION AND RISK. ACCESS TO THE CONTENT, THE SITE AND SERVICES AND ALL CONTENT OR INFORMATION INCLUDED THEREIN, ARE PROVIDED ON AN â€œAS ISâ€ AND â€œAS AVAILABLEâ€ BASIS WITHOUT WARRANTIES OF ANY KIND. HITBOX EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND, EXPRESS, IMPLIED OR STATUTORY, RELATING TO THE CONTENT, THE SITE, SUBSCRIPTION SERVICES AND ALL CONTENT OR INFORMATION INCLUDED THEREIN, INCLUDING WITHOUT LIMITATION THE WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT OF PROPRIETARY RIGHTS, COURSE OF DEALING OR COURSE OF PERFORMANCE. HITBOX DISCLAIMS ANY WARRANTIES: (I) REGARDING THE ACCURACY, RELIABILITY, TIMELINESS AND PERFORMANCE OF THE PROGRAM; OR (II) THAT THE PROGRAM AND YOUR ACCESS THERETO WILL BE ERROR-FREE OR THAT ANY ERRORS WILL BE CORRECTED. NO ADVICE OR INFORMATION, WHETHER ORAL OR WRITTEN, OBTAINED BY YOU FROM HITBOX, WILL CREATE ANY WARRANTY NOT EXPRESSLY STATED IN THESE PURCHASE TERMS. SOME STATES OR JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF CERTAIN WARRANTIES. ACCORDINGLY, SOME OF THE ABOVE EXCLUSIONS MAY NOT APPLY TO YOU.</p>\n<p>&nbsp;</p>\n<p>Last Updated: April 14th, 2014</p>\n'), $templateCache.put("partials/content/legal/terms-of-use.html", '<h1>Terms of Use</h1>\n<h2>1. Your Acceptance</h2>\n<p>1.1 â€“ Age. You affirm that you are either more than 18 years of age, or an emancipated minor, or possess legal parental or guardian consent, and are fully able and competent to enter into the terms, conditions, obligations, affirmations, representations, and warranties set forth in these Terms of Service, and to abide by and comply with these Terms of Service. In any case, you affirm that you are over the age of 16, as the hitbox Website is not intended for children under 16. If you are under 16 years of age, then please do not use the hitbox Website.</p>\n<p>1.2 â€“ Agreement. By using and/or visiting this website (including all content and functionality available through the hitbox.tv domain name, the â€œhitbox Websiteâ€, or â€“ in next follows called as â€œhitbox Websiteâ€ or â€œWebsiteâ€), you signify your agreement to:</p>\n<p style="padding-left: 30px;">a â€“ the Terms of Use;<br>\nb â€“ the Privacy Policy;</p>\n<p>found at the hitbox Website and incorporated here by reference. If you do not agree to any of these terms, then you are not allowed to use and/or visit the hitbox Website.</p>\n<p>Note: hitbox may, in its sole discretion, modify or revise these Terms of Use and the Privacy Policy at any time, and you agree to be bound by such modifications or revisions. Nothing in this Agreement shall be deemed to confer any third-party rights or benefits.</p>\n\n<h2>2. The hitbox Website and itâ€™s Accounts</h2>\n<p>2.1 â€“ General. These Terms of Use apply to all users of the hitbox Website, including users who are also contributors of video content, information, and other materials or services on the hitbox Website. The hitbox Website includes all aspects of hitbox, including but not limited to all products, software and services offered via the website such as the hitbox â€œEmbeddable Player and other applications.</p>\n<p>2.2 â€“ Third Party. The hitbox Website may contain links to third party websites that are not owned or controlled by hitbox. hitbox has no control over, and assumes no responsibility for, the content, privacy policies, or practices of any third party websites. In addition, hitbox will not and cannot censor or edit the content of any third-party site. By using the hitbox Website, you expressly relieve hitbox from any and all liability arising from your use of any third-party website.</p>\n<p>2.3 â€“ Account Permission. In order to access some features of the Website, you will have to create an hitbox account. You may never use anotherâ€™s account without permission. When creating your account, you must provide accurate and complete information. You are solely responsible for the activity that occurs on your account, and you must keep your account password secure. You must notify hitbox immediately of any breach of security or unauthorized use of your account.</p>\n<p>2.4 â€“ Unauthorized Account usage. Although hitbox will not be liable for your losses caused by any unauthorized use of your account, you may be liable for the losses of hitbox or others due to such unauthorized use.</p>\n\n<h2>3. Permissions and Restrictions</h2>\n<p>hitbox hereby grants you permission to access and use the Website as set forth in these Terms of Use, provided that:</p>\n<p>3.1 â€“ Distribution. You agree that you will not distribute in any medium any part of the Website, including but not limited to User Submissions (defined below), without hitboxâ€™s prior written authorization.</p>\n<p>3.2 â€“ Modification. You agree that you will not alter or modify any part of the Website, including but not limited to hitboxâ€™s Embeddable Player or any of its related technologies.</p>\n<p>3.3 â€“ Access. You agree that you will not access User Submissions (defined below) or hitbox Website Content through any technology or means other than the video playback pages of the Website itself, the hitbox Embeddable Player, or other explicitly authorized means hitbox may designate.</p>\n<p>3.4 â€“ Commercial usage. You agree that you will not use the Website, including the hitbox Embeddable Player for any commercial use, without the prior written authorization of hitbox.</p>\n<div style="padding-left: 30px;">\n	<p>1. Prohibited commercial uses include any of the following actions taken without hitboxâ€™s express approval:</p>\n	<p>a â€“ Sale of Access. Sale of access to the Website or its related services (such as the Embeddable Player) on another website;</p>\n	<p>b â€“ Revenues. use of the Website or its related services (such as the Embeddable Player), for the primary purpose of gaining advertising or subscription revenue;</p>\n	<p>c â€“ Sale of Advertising. the sale of advertising, on the hitbox website or any third-party website, targeted to the content of specific User Submissions or hitbox content;</p>\n	<p>d â€“ Competition with hitbox Service. and any use of the Website or its related services (such as the Embeddable player) that hitbox finds, in its sole discretion, to use hitboxâ€™s resources or User Submissions with the effect of competing with or displacing the market for hitbox, hitbox content, or its User Submissions.</p>\n	<p>2. Prohibited commercial uses do not include:</p>\n	<p>a â€“ Upload. uploading an original video to hitbox to promote your business or your skills;</p>\n	<p>b â€“ Embeddable Player. using the Embeddable Player to show hitbox videos on an ad-enabled blog or website, provided the primary purpose of using the Embeddable Player is not to gain advertising revenue or compete with hitbox;</p>\n	<p>c â€“ Writing. any use that hitbox expressly authorizes in writing.</p>\n</div>\n<p>3.5 â€“ Backlinking. If you use the hitbox Embeddable Player on your website, you must include a prominent link back to the hitbox Website on the pages containing the Embeddable Player and you may not modify, build upon, or block any portion of the Embeddable Player in any way.</p>\n<p>3.6 â€“ Automated System usage. You agree that you will not use or launch any automated system, including without limitation, â€œrobots,â€ â€œspiders,â€ or â€œoffline readers,â€ that accesses the Website in a manner that sends more request messages to the hitbox servers in a given period of time than a human can reasonably produce in the same period by using a conventional online web browser. Notwithstanding the foregoing, hitbox grants the operators of public search engines permission to use spiders to copy materials from the site for the sole purpose of and solely to the extent necessary for creating publicly available searchable indices of the materials, but not caches or archives of such materials. hitbox reserves the right to revoke these exceptions either generally or in specific cases. You agree not to collect or harvest any personally identifiable information, including account names, from the Website, nor to use the communication systems provided by the Website (e.g. comments, email) for any commercial solicitation purposes. You agree not to solicit, for commercial purposes, any users of the Website with respect to their User Submissions.</p>\n<p>3.7 â€“ Laws and regulations. In your use of the website, you will otherwise comply with the terms and conditions of these Terms of Use and all applicable local, national, and international laws and regulations.</p>\n<p>3.8 â€“ Discontinue. hitbox reserves the right to discontinue any aspect of the hitbox Website at any time.</p>\n\n<h2>4. Your Use of Content on the Site</h2>\n<p>In addition to the general restrictions above, the following restrictions and conditions apply specifically to your use of content on the hitbox Website:</p>\n<p>4.1 â€“ Website Copyright. The content on the hitbox Website, except all User Submissions (as defined below), including without limitation, the text, software, scripts, graphics, photos, sounds, music, videos, interactive features and the like (â€œContentâ€), the trademark, and logo contained therein (â€œMarksâ€), are owned by or licensed to hitbox, subject to copyright and other intellectual property rights under the law. Content on the Website is provided to you AS IS for your information and personal use only and may not be downloaded, copied, reproduced, distributed, transmitted, broadcast, displayed, sold, licensed, or otherwise exploited for any other purposes whatsoever without the prior written consent of the respective owners. hitbox reserves all rights not expressly granted in and to the Website and the Content.</p>\n<p>4.2 â€“ You may access User Submissions solely:</p>\n<div style="padding-left: 30px;">\n	<p>a for your information and personal use;</p>\n	<p>b as intended through the normal functionality of the hitbox Service;</p>\n	<p>c for Streaming.</p>\n</div>\n<p>4.3 â€“ Comments. User Comments are made available to you for your information and personal use solely as intended through the normal functionality of the hitbox Service. User Comments are made available â€œas isâ€, and may not be used, copied, reproduced, distributed, transmitted, broadcast, displayed, sold, licensed, downloaded, or otherwise exploited in any manner not intended by the normal functionality of the hitbox Service or otherwise as prohibited under this Agreement.</p>\n<p>4.4 â€“ Commercial Purposes. You agree that you will not engage in the use, copying, or distribution of any of the Content other than expressly permitted herein, including any use, copying, or distribution of User Submissions of third parties obtained through the Website for any commercial purposes.</p>\n<p>Note: You may access hitbox Content, User Submissions and other content only as permitted under this Agreement. hitbox reserves all rights not expressly granted in and to the hitbox Content and the hitbox Service. You agree that you will not circumvent, disable or otherwise interfere with security-related features of the hitbox Website or features that prevent or restrict use or copying of any Content or enforce limitations on use of the hitbox Website or the Content therein. You understand that when using the hitbox Website, you will be exposed to User Submissions from a variety of sources, and that hitbox is not responsible for the accuracy, usefulness, safety, or intellectual property rights of or relating to such User Submissions. You further understand and acknowledge that you may be exposed to User Submissions that are inaccurate, offensive, indecent, or objectionable, and you agree to waive, and hereby do waive, any legal or equitable rights or remedies you have or may have against hitbox with respect thereto, and agree to indemnify and hold hitbox, its Owners/Operators, and/or licensors, harmless to the fullest extent allowed by law regarding all matters related to your use of the site.</p>\n\n<h2>5. Your User Submissions and Conduct</h2>\n<p>5.1 â€“ General. As an hitbox account holder you may submit video content (â€œUser Videosâ€) and textual content (â€œUser Commentsâ€). User Videos and User Comments are collectively referred to as â€œUser Submissions.â€ You understand that whether or not such User Submissions are published, hitbox does not guarantee any confidentiality with respect to any User Submissions.</p>\n<p>5.2 â€“ Responsibility. You shall be solely responsible for your own User Submissions and the consequences of posting or publishing them. In connection with User Submissions, you affirm, represent, and/or warrant that: you own or have the necessary licenses, rights, consents, and permissions to use and authorize hitbox to use all patent, trademark, trade secret, copyright or other proprietary rights in and to any and all User Submissions to enable inclusion and use of the User Submissions in the manner contemplated by the Website and these Terms of Use.</p>\n<p>5.3 â€“ License. For clarity, you retain all of your ownership rights in your User Submissions. However, by submitting User Submissions to hitbox, you hereby grant hitbox a worldwide, non-exclusive, royalty-free, sublicenseable and transferable license to use, reproduce, distribute, prepare derivative works of, display, and perform the User Submissions in connection with the hitbox Website and hitboxâ€™s business, including without limitation for promoting and redistributing part or all of the hitbox Website (and derivative works thereof) in any media formats. You also hereby grant each user of the hitbox Website a non-exclusive license to access your User Submissions through the Website, and to use, reproduce, distribute, display and perform such User Submissions as permitted through the functionality of the Website and under these Terms of Service. The above licenses granted by you in User Videos terminate within a commercially reasonable time after you remove or delete your User Videos from the hitbox Service. You understand and agree, however, that hitbox may retain, but not display, distribute, or perform, server copies of User Submissions that have been removed or deleted. The above licenses granted by you in User Comments are perpetual and irrevocable.</p>\n<p>5.4 â€“ Copyright. In connection with User Submissions, you further agree that you will not submit material that is copyrighted, protected by trade secret or otherwise subject to third party proprietary rights, including privacy and publicity rights, unless you are the owner of such rights or have permission from their rightful owner to post the material and to grant hitbox all of the license rights granted herein.</p>\n\n<h2>6. Account and Content Termination Policy</h2>\n<p>6.1 â€“ General hitbox will terminate a Userâ€™s access to its Website if, under appropriate circumstances, they are determined to be a repeat infringer.</p>\n<p>6.2 â€“ Removing. hitbox does not endorse any User Submission or any opinion, recommendation, or advice expressed therein, and hitbox expressly disclaims any and all liability in connection with User Submissions. hitbox does not permit copyright infringing activities and infringement of intellectual property rights on its Website, and hitbox will remove all Content and User Submissions if properly notified that such Content or User Submission infringes on anotherâ€™s intellectual property rights. hitbox reserves the right to remove Content and User Submissions without prior notice. hitbox reserves the right to decide whether Content or a User Submission is appropriate and complies with these Terms of Use for violations other than copyright infringement, such as, but not limited to, pornography, obscene or defamatory material, or excessive length. hitbox may remove such User Submissions and/or terminate a Userâ€™s access for uploading such material in violation of these Terms of Use at any time, without prior notice and at its sole discretion.</p>\n\n<h2>7. Warranty Disclaimer</h2>\n<p>YOU AGREE THAT YOUR USE OF THE HITBOX WEBSITE SHALL BE AT YOUR SOLE RISK. TO THE FULLEST EXTENT PERMITTED BY LAW, HITBOX, ITS OWNERS AND/OR EMPLOYEES DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, IN CONNECTION WITH THE WEBSITE AND YOUR USE THEREOF. HITBOX MAKES NO WARRANTIES OR REPRESENTATIONS ABOUT THE ACCURACY OR COMPLETENESS OF THIS SITEâ€™S CONTENT OR THE CONTENT OF ANY SITES LINKED TO THIS SITE AND ASSUMES NO LIABILITY OR RESPONSIBILITY FOR ANY (I) ERRORS, MISTAKES, OR INACCURACIES OF CONTENT, (II) PERSONAL INJURY OR PROPERTY DAMAGE, OF ANY NATURE WHATSOEVER, RESULTING FROM YOUR ACCESS TO AND USE OF OUR WEBSITE, (III) ANY UNAUTHORIZED ACCESS TO OR USE OF OUR SECURE SERVERS AND/OR ANY AND ALL PERSONAL INFORMATION AND/OR FINANCIAL INFORMATION STORED THEREIN, (IV) ANY INTERRUPTION OR CESSATION OF TRANSMISSION TO OR FROM OUR WEBSITE, (IV) ANY BUGS, VIRUSES, TROJAN HORSES, OR THE LIKE WHICH MAY BE TRANSMITTED TO OR THROUGH OUR WEBSITE BY ANY THIRD PARTY, AND/OR (V) ANY ERRORS OR OMISSIONS IN ANY CONTENT OR FOR ANY LOSS OR DAMAGE OF ANY KIND INCURRED AS A RESULT OF THE USE OF ANY CONTENT POSTED, EMAILED, TRANSMITTED, OR OTHERWISE MADE AVAILABLE VIA THE HITBOX WEBSITE. HITBOX DOES NOT WARRANT, ENDORSE, GUARANTEE, OR ASSUME RESPONSIBILITY FOR ANY PRODUCT OR SERVICE ADVERTISED OR OFFERED BY A THIRD PARTY THROUGH THE HITBOX WEBSITE OR ANY HYPERLINKED WEBSITE OR FEATURED IN ANY BANNER OR OTHER ADVERTISING, AND HITBOX WILL NOT BE A PARTY TO OR IN ANY WAY BE RESPONSIBLE FOR MONITORING ANY TRANSACTION BETWEEN YOU AND THIRD-PARTY PROVIDERS OF PRODUCTS OR SERVICES. AS WITH THE PURCHASE OF A PRODUCT OR SERVICE THROUGH ANY MEDIUM OR IN ANY ENVIRONMENT, YOU SHOULD USE YOUR BEST JUDGMENT AND EXERCISE CAUTION WHERE APPROPRIATE.</p>\n\n<h2>8. Limitation of Liability</h2>\n<p>IN NO EVENT SHALL HITBOX, ITS OWNERS AND/OR EMPLOYEES BE LIABLE TO YOU FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, PUNITIVE, OR CONSEQUENTIAL DAMAGES WHATSOEVER RESULTING FROM ANY (1) ERRORS, MISTAKES, OR INACCURACIES OF CONTENT, (2) PERSONAL INJURY OR PROPERTY DAMAGE, OF ANY NATURE WHATSOEVER, RESULTING FROM YOUR ACCESS TO AND USE OF OUR WEBSITE, (3) ANY UNAUTHORIZED ACCESS TO OR USE OF OUR SECURE SERVERS AND/OR ANY AND ALL PERSONAL INFORMATION AND/OR FINANCIAL INFORMATION STORED THEREIN, (4) ANY INTERRUPTION OR CESSATION OF TRANSMISSION TO OR FROM OUR WEBSITE, (5) ANY BUGS, VIRUSES, TROJAN HORSES, OR THE LIKE, WHICH MAY BE TRANSMITTED TO OR THROUGH OUR WEBSITE BY ANY THIRD PARTY, AND/OR (6) ANY ERRORS OR OMISSIONS IN ANY CONTENT OR FOR ANY LOSS OR DAMAGE OF ANY KIND INCURRED AS A RESULT OF YOUR USE OF ANY CONTENT POSTED, EMAILED, TRANSMITTED, OR OTHERWISE MADE AVAILABLE VIA THE HITBOX WEBSITE, WHETHER BASED ON WARRANTY, CONTRACT, TORT, OR ANY OTHER LEGAL THEORY, AND WHETHER OR NOT THE COMPANY IS ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. THE FOREGOING LIMITATION OF LIABILITY SHALL APPLY TO THE FULLEST EXTENT PERMITTED BY LAW IN THE APPLICABLE JURISDICTION. YOU SPECIFICALLY ACKNOWLEDGE THAT HITBOX SHALL NOT BE LIABLE FOR USER SUBMISSIONS OR THE DEFAMATORY, OFFENSIVE, OR ILLEGAL CONDUCT OF ANY THIRD PARTY AND THAT THE RISK OF HARM OR DAMAGE FROM THE FOREGOING RESTS ENTIRELY WITH YOU.</p>\n<p>Note: The Website is controlled and offered by hitbox from its facilities in the European Union / Austria. hitbox makes no representations that the hitbox Website is appropriate or available for use in other locations. Those who access or use the hitbox Website from other jurisdictions do so at their own volition and are responsible for compliance with local law.</p>\n\n<h2>9. Indemnity</h2>\n<p>You agree to defend, indemnify and hold harmless hitbox, its owners and employees, from and against any and all claims, damages, obligations, losses, liabilities, costs or debt, and expenses (including but not limited to attorneyâ€™s fees) arising from: (1) your use of and access to the hitbox Website; (2) your violation of any term of these Terms of Service; (3) your violation of any third party right, including without limitation any copyright, property, or privacy right; or (4) any claim that one of your User Submissions caused damage to a third party. This defense and indemnification obligation will survive these Terms of Service and your use of the hitbox Website.</p>\n\n<h2>10. Assignment</h2>\n<p>These Terms of Service, and any rights and licenses granted hereunder, may not be transferred or assigned by you, but may be assigned by hitbox without restriction.</p>\n\n<h2>11. General</h2>\n<p>These terms of service, together with the privacy notice and any other legal notices published on the hitbox website, shall constitute the entire agreement between you and hitbox. If any provision of these terms of service is deemed invalid by a court of competent jurisdiction, the invalidity of such provision shall not affect the validity of the remaining provisions of these terms of service, which shall remain in full force and effect. No waiver of any term of this these terms of service shall be deemed a further or continuing waiver of such term or any other term, and hitboxâ€™s failure to assert any right or provision under these terms of service shall not constitute a waiver of such right or provision. hitbox reserves the right to amend these terms of service at any time and without notice, and it is your responsibility to review these terms of service for any changes. Your use of the hitbox Website following any amendment of these terms of service will signify your assent to and acceptance of its revised terms.</p>\n'), $templateCache.put("partials/content/partnerprogram.html", '<div class="ppBan">\n    <div class="ppW">\n        <div class="ppTxt">\n            <div class="pp1">Let\'s play together</div>\n            <div class="pp2">Introducing the</div>\n            <div class="pp3">hitbox Partner Program</div>\n            <div class="pp4">Benefit from exclusive features <br />\n                Grow and serve your community <br />\n                Monetize what you love and do best - your game!</div>\n            <a ng-hide="section==\'content\'" href="/content/partnerprogram" class="pp5">Learn more</a>\n        </div>\n    </div>\n</div>\n<div class="ppFeatures noise25">\n    <div class="ppW">\n        <div class="header">Partner Features</div>\n        <div class="cols">\n            <div>\n                <div class="icon-chart-bar icon"></div>\n                <div class="head">Transcoding</div>\n                <div class="copy">Deliver your video content in multiple sizes to ensure the best viewing experience.</div>\n            </div>\n            <div>\n                <div class="icon-money icon"></div>\n                <div class="head">Monetization</div>\n                <div class="copy">Earn revenue from ads running with your content.</div>\n            </div>\n            <div>\n                <div class="icon-heart icon"></div>\n                <div class="head">Subscriptions <span>*</span></div>\n                <div class="copy">Engage with your fanbase and enable it to directly support you.</div>\n                <div class="note">* advanced partner package</div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="ppApply" ng-controller="partnerPageController">\n    <div class="ppW">\n        <div class="header">Apply</div>\n        <div class="subHeader">If you meet these <span>basic requirements</span> we would love to hear from you.</div>\n        <div class="cols cf requirements">\n            <div class="fltL">Average Concurrent Viewers:<span>100 +</span></div>\n            <div class="fltR">Regular Streaming Schedule:<span>3 +</span>times/week</div>\n        </div>\n        <div ng-show="!loggedIn">\n            <div class="subHeader">In order to apply please create an account first.</div>\n            <div class="box">\n                <button class="submit" ng-click="go(\'/signup\')">{{\'BTN_SIGNUP\' | translate}}</button>\n            </div>\n        </div>\n        <div ng-show="loggedIn">\n            <div class="subHeader">Please fill out this form and we will get back to you asap.</div>\n            <div class="box">\n                <div ng-hide="success">\n                    <form action="">\n                        <div class="cols cf">\n                            <div class="fltL">\n                                <label>Username</label>\n                                <input type="text" value="{{session.user_name}}" contenteditable="false" disabled/>\n                                <label>Full Name</label>\n                                <input type="text" required ng-class="{error: error.partner.user_realname}" ng-model="partner.partner_full_name" />\n                                <label>Email</label>\n                                <input type="text" required ng-model="partner.partner_email"/>\n                                <label>Organisation</label>\n                                <input type="text" ng-model="partner.partner_organzation"/>\n                                <label>Country</label>\n                                <input type="text" ng-model="partner.partner_country"/>\n                                <label>Website</label>\n                                <input type="text" ng-model="partner.partner_website" />\n                                <label>Facebook</label>\n                                <input type="text" value="www.facebook.com/" ng-model="partner.partner_facebook" />\n                                <label>Twitter</label>\n                                <input type="text" value="www.twitter.com/" ng-model="partner.partner_twitter" />\n                                <label>Youtube</label>\n                                <input type="text" value="www.youtube.com/user/" ng-model="partner.partner_youtube" />\n                                <label>Other</label>\n                                <input type="text" ng-model="partner.partner_other" />\n                            </div>\n                            <div class="fltR message">\n                                <label>Tell us about yourself / your organisation</label>\n                                <textarea ng-model="partner.partner_description" rows="7" required></textarea>\n                            </div>\n                        </div>\n                        <input class="submit" type="submit" value="Submit" ng-click="addPartner()" />\n                    </form>\n                </div>\n                <!--        \n                    Success message          \n                -->\n                <div ng-show="success" class="success">Your application has been sent.</div>\n            </div>\n        </div>\n    </div>\n</div>\n')
    }]);
